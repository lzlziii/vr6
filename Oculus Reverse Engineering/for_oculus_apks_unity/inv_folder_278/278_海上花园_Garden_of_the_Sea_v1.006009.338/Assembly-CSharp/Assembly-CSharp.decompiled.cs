using System;
using System.Collections;
using System.Collections.Generic;
using System.Diagnostics;
using System.Globalization;
using System.IO;
using System.Reflection;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using System.Security.Cryptography;
using System.Text;
using DG.Tweening;
using DG.Tweening.Core;
using DG.Tweening.Plugins.Core.PathCore;
using DG.Tweening.Plugins.Options;
using FIMSpace.FLook;
using FIMSpace.FTools;
using GE_Core;
using Gestrument.Timeline;
using Il2CppDummyDll;
using Microsoft.CodeAnalysis;
using Neat.Utilities.Collections;
using NeatAudio;
using NeatCorp;
using NeatCorp.Animation;
using NeatCorp.Animation.Potpots;
using NeatCorp.Attributes;
using NeatCorp.Core;
using NeatCorp.Creatures;
using NeatCorp.Creatures.Birds;
using NeatCorp.Creatures.Breeding;
using NeatCorp.Creatures.Breeding.ColorSet;
using NeatCorp.Creatures.Breeding.Expression;
using NeatCorp.Creatures.Breeding.Growth;
using NeatCorp.Creatures.Breeding.Pattern;
using NeatCorp.Creatures.Gifting;
using NeatCorp.Creatures.Serialization;
using NeatCorp.Creatures.Whale;
using NeatCorp.Environment.Islands;
using NeatCorp.Environment.Plants;
using NeatCorp.Environment.Teleportation;
using NeatCorp.Events;
using NeatCorp.Events.Animation;
using NeatCorp.Events.Collection;
using NeatCorp.Events.Crystals;
using NeatCorp.Events.Environment;
using NeatCorp.Events.Gardening.Compost;
using NeatCorp.Events.Glove;
using NeatCorp.Events.Glove.GemEvents;
using NeatCorp.Events.PolaroidEvents;
using NeatCorp.Events.Puzzles;
using NeatCorp.Events.Settings;
using NeatCorp.Fishing;
using NeatCorp.Gardening;
using NeatCorp.Gardening.Compost;
using NeatCorp.Home;
using NeatCorp.Interaction.Crystals;
using NeatCorp.Interaction.Instrument;
using NeatCorp.Interaction.Tools.WateringCan;
using NeatCorp.Interaction.Water;
using NeatCorp.Loading;
using NeatCorp.Merchant;
using NeatCorp.Merchant.Trading;
using NeatCorp.Player.Glove;
using NeatCorp.Player.Glove.Ability;
using NeatCorp.Player.Glove.Gems;
using NeatCorp.Player.MovingPlafrom;
using NeatCorp.Polaroid;
using NeatCorp.Puzzles.Coral.Events;
using NeatCorp.Puzzles.Resonation;
using NeatCorp.Quests.Boat;
using NeatCorp.Quests.Trading;
using NeatCorp.Settings;
using NeatCorp.Text.Credits;
using NeatCorp.UI;
using NeatCorp.UI.Collection;
using NeatCorp.Utility;
using NeatCorp.Utility.Phsyics;
using Newtonsoft.Json.Linq;
using Oculus.Platform;
using Oculus.Platform.Models;
using TMPro;
using Unity.Collections;
using Unity.Collections.LowLevel.Unsafe;
using Unity.Jobs;
using Unity.Mathematics;
using UnityEngine;
using UnityEngine.AI;
using UnityEngine.AddressableAssets;
using UnityEngine.Audio;
using UnityEngine.EventSystems;
using UnityEngine.Events;
using UnityEngine.Networking;
using UnityEngine.ResourceManagement.AsyncOperations;
using UnityEngine.ResourceManagement.ResourceLocations;
using UnityEngine.ResourceManagement.ResourceProviders;
using UnityEngine.SceneManagement;
using UnityEngine.Scripting;
using UnityEngine.UI;
using UnityEngine.Video;
using UnityEngine.XR;

[assembly: AssemblyVersion("0.0.0.0")]
namespace Microsoft.CodeAnalysis
{
	[Token(Token = "0x2000002")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x971194", Offset = "0x971194")]
	[Microsoft.CodeAnalysis.Embedded]
	internal sealed class EmbeddedAttribute : Attribute
	{
		[Token(Token = "0x6000001")]
		[Address(RVA = "0xC20F6C", Offset = "0xC20F6C", VA = "0xC20F6C")]
		public EmbeddedAttribute()
		{
		}
	}
}
namespace System.Runtime.CompilerServices
{
	[Token(Token = "0x2000003")]
	[Microsoft.CodeAnalysis.Embedded]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9711CC", Offset = "0x9711CC")]
	internal sealed class IsUnmanagedAttribute : Attribute
	{
		[Token(Token = "0x6000002")]
		[Address(RVA = "0xE275F0", Offset = "0xE275F0", VA = "0xE275F0")]
		public IsUnmanagedAttribute()
		{
		}
	}
}
[Token(Token = "0x2000004")]
public class AudioMusicalPitch : MonoBehaviour
{
	[Token(Token = "0x4000001")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private int midiAudioPitch;

	[Token(Token = "0x4000002")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private int midiAudioTarget;

	[Token(Token = "0x4000003")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private AudioSource audioSource;

	[Token(Token = "0x6000003")]
	[Address(RVA = "0xF61E80", Offset = "0xF61E80", VA = "0xF61E80")]
	private void Start()
	{
	}

	[Token(Token = "0x6000004")]
	[Address(RVA = "0xF61F38", Offset = "0xF61F38", VA = "0xF61F38")]
	public void PitchAndPlay(float midiPitch, double offset = 0.0)
	{
	}

	[Token(Token = "0x6000005")]
	[Address(RVA = "0xF62004", Offset = "0xF62004", VA = "0xF62004")]
	public AudioMusicalPitch()
	{
	}
}
[Token(Token = "0x2000005")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x971204", Offset = "0x971204")]
public class FastSSAO : MonoBehaviour
{
	[Token(Token = "0x4000004")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x974ED0", Offset = "0x974ED0")]
	public float Intensity;

	[Token(Token = "0x4000005")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x974EE8", Offset = "0x974EE8")]
	public float BlurAmount;

	[Token(Token = "0x4000006")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x974F00", Offset = "0x974F00")]
	public float Radius;

	[Token(Token = "0x4000007")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x974F18", Offset = "0x974F18")]
	public float Area;

	[Token(Token = "0x4000008")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool FastMode;

	[Token(Token = "0x4000009")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Material material;

	[Token(Token = "0x400000A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Camera cam;

	[Token(Token = "0x400000B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private DepthTextureMode previousDepthMode;

	[Token(Token = "0x400000C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly int blurTexString;

	[Token(Token = "0x400000D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	private static readonly int instensityString;

	[Token(Token = "0x400000E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static readonly int blurAmountString;

	[Token(Token = "0x400000F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private static readonly int radiusString;

	[Token(Token = "0x4000010")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static readonly int areaString;

	[Token(Token = "0x4000011")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static readonly string fastKeyword;

	[Token(Token = "0x6000006")]
	[Address(RVA = "0xC9AEF0", Offset = "0xC9AEF0", VA = "0xC9AEF0")]
	public void SetActive(bool active)
	{
	}

	[Token(Token = "0x6000007")]
	[Address(RVA = "0xC9AFE4", Offset = "0xC9AFE4", VA = "0xC9AFE4")]
	private void OnRenderImage(RenderTexture source, RenderTexture destination)
	{
	}

	[Token(Token = "0x6000008")]
	[Address(RVA = "0xC9B340", Offset = "0xC9B340", VA = "0xC9B340")]
	public FastSSAO()
	{
	}
}
[Token(Token = "0x2000006")]
public class AudioTester : MonoBehaviour
{
	[Token(Token = "0x2000007")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x971268", Offset = "0x971268")]
	private sealed class <Start>d__12 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400001D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400001E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400001F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AudioTester <>4__this;

		[Token(Token = "0x17000001")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000012")]
			[Address(RVA = "0xF623CC", Offset = "0xF623CC", VA = "0xF623CC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000002")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000014")]
			[Address(RVA = "0xF62434", Offset = "0xF62434", VA = "0xF62434", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600000F")]
		[Address(RVA = "0xF620E8", Offset = "0xF620E8", VA = "0xF620E8")]
		[DebuggerHidden]
		public <Start>d__12(int <>1__state)
		{
		}

		[Token(Token = "0x6000010")]
		[Address(RVA = "0xF62228", Offset = "0xF62228", VA = "0xF62228", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000011")]
		[Address(RVA = "0xF6222C", Offset = "0xF6222C", VA = "0xF6222C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000013")]
		[Address(RVA = "0xF623D4", Offset = "0xF623D4", VA = "0xF623D4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000008")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x971278", Offset = "0x971278")]
	private sealed class <playThing>d__13 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000020")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000021")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000022")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AudioTester <>4__this;

		[Token(Token = "0x17000003")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000018")]
			[Address(RVA = "0xF626E4", Offset = "0xF626E4", VA = "0xF626E4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000004")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600001A")]
			[Address(RVA = "0xF6274C", Offset = "0xF6274C", VA = "0xF6274C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000015")]
		[Address(RVA = "0xF62190", Offset = "0xF62190", VA = "0xF62190")]
		[DebuggerHidden]
		public <playThing>d__13(int <>1__state)
		{
		}

		[Token(Token = "0x6000016")]
		[Address(RVA = "0xF6243C", Offset = "0xF6243C", VA = "0xF6243C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000017")]
		[Address(RVA = "0xF62440", Offset = "0xF62440", VA = "0xF62440", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000019")]
		[Address(RVA = "0xF626EC", Offset = "0xF626EC", VA = "0xF626EC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000012")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float delay;

	[Token(Token = "0x4000013")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float offset;

	[Token(Token = "0x4000014")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public NeatAudioCue cue;

	[Token(Token = "0x4000015")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public NeatAudioCue cue2;

	[Token(Token = "0x4000016")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool flip;

	[Token(Token = "0x4000017")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	public bool autoPlayOrParameter;

	[Token(Token = "0x4000018")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float number;

	[Token(Token = "0x4000019")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public AudioClip[] clips;

	[Token(Token = "0x400001A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Transform follower;

	[Token(Token = "0x400001B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static int PARAMETER;

	[Token(Token = "0x400001C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private NeatAudioPlayer nap;

	[Token(Token = "0x600000A")]
	[Address(RVA = "0xF6200C", Offset = "0xF6200C", VA = "0xF6200C")]
	private void Awake()
	{
	}

	[Token(Token = "0x600000B")]
	[Address(RVA = "0xF6206C", Offset = "0xF6206C", VA = "0xF6206C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9862E8", Offset = "0x9862E8")]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x600000C")]
	[Address(RVA = "0xF62114", Offset = "0xF62114", VA = "0xF62114")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x98634C", Offset = "0x98634C")]
	private IEnumerator playThing()
	{
		return null;
	}

	[Token(Token = "0x600000D")]
	[Address(RVA = "0xF621BC", Offset = "0xF621BC", VA = "0xF621BC")]
	public AudioTester()
	{
	}
}
[Token(Token = "0x2000009")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x971288", Offset = "0x971288")]
public class EnableCameraDepthInForward : MonoBehaviour
{
	[Token(Token = "0x600001B")]
	[Address(RVA = "0xBF8C94", Offset = "0xBF8C94", VA = "0xBF8C94")]
	private void Start()
	{
	}

	[Token(Token = "0x600001C")]
	[Address(RVA = "0xBF8C98", Offset = "0xBF8C98", VA = "0xBF8C98")]
	private void Set()
	{
	}

	[Token(Token = "0x600001D")]
	[Address(RVA = "0xBF8D24", Offset = "0xBF8D24", VA = "0xBF8D24")]
	public EnableCameraDepthInForward()
	{
	}
}
[Token(Token = "0x200000A")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x9712EC", Offset = "0x9712EC")]
public class SoftNormalsToVertexColor : MonoBehaviour
{
	[Token(Token = "0x200000B")]
	public enum Method
	{
		[Token(Token = "0x4000027")]
		Simple,
		[Token(Token = "0x4000028")]
		AngularDeviation
	}

	[Token(Token = "0x4000023")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Method method;

	[Token(Token = "0x4000024")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool generateOnAwake;

	[Token(Token = "0x4000025")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
	public bool generateNow;

	[Token(Token = "0x600001E")]
	[Address(RVA = "0xDEFE20", Offset = "0xDEFE20", VA = "0xDEFE20")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x600001F")]
	[Address(RVA = "0xDF000C", Offset = "0xDF000C", VA = "0xDF000C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000020")]
	[Address(RVA = "0xDEFE34", Offset = "0xDEFE34", VA = "0xDEFE34")]
	private void TryGenerate()
	{
	}

	[Token(Token = "0x6000021")]
	[Address(RVA = "0xDF001C", Offset = "0xDF001C", VA = "0xDF001C")]
	private void Generate(Mesh m)
	{
	}

	[Token(Token = "0x6000022")]
	[Address(RVA = "0xDF09E4", Offset = "0xDF09E4", VA = "0xDF09E4")]
	public SoftNormalsToVertexColor()
	{
	}
}
[Token(Token = "0x200000C")]
public static class FEasing
{
	[Token(Token = "0x6000023")]
	[Address(RVA = "0xBFD190", Offset = "0xBFD190", VA = "0xBFD190")]
	public static float EaseOutCubic(float start, float end, float value, float ignore = 1f)
	{
		return default(float);
	}

	[Token(Token = "0x6000024")]
	[Address(RVA = "0xBFD1B8", Offset = "0xBFD1B8", VA = "0xBFD1B8")]
	public static float EaseInOutCubic(float start, float end, float value, float ignore = 1f)
	{
		return default(float);
	}

	[Token(Token = "0x6000025")]
	[Address(RVA = "0xBFD210", Offset = "0xBFD210", VA = "0xBFD210")]
	public static float EaseOutExpo(float start, float end, float value, float ignore = 1f)
	{
		return default(float);
	}
}
[Token(Token = "0x200000D")]
public interface IFHierarchyIcon
{
}
[Token(Token = "0x200000E")]
public class FPD_FixedCurveWindowAttribute : PropertyAttribute
{
	[Token(Token = "0x4000029")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float StartTime;

	[Token(Token = "0x400002A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float EndTime;

	[Token(Token = "0x400002B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float StartValue;

	[Token(Token = "0x400002C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float EndValue;

	[Token(Token = "0x400002D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Color Color;

	[Token(Token = "0x6000026")]
	[Address(RVA = "0xC9A444", Offset = "0xC9A444", VA = "0xC9A444")]
	public FPD_FixedCurveWindowAttribute(float startTime, float startValue, float endTime, float endValue, float r = 0f, float g = 1f, float b = 1f, float a = 1f)
	{
	}
}
[Token(Token = "0x200000F")]
public class FPD_HeaderAttribute : PropertyAttribute
{
	[Token(Token = "0x400002E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string HeaderText;

	[Token(Token = "0x400002F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float UpperPadding;

	[Token(Token = "0x4000030")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float BottomPadding;

	[Token(Token = "0x4000031")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float Height;

	[Token(Token = "0x6000027")]
	[Address(RVA = "0xC9A4E0", Offset = "0xC9A4E0", VA = "0xC9A4E0")]
	public FPD_HeaderAttribute(string headerText, float upperPadding = 3f, float bottomPadding = 3f, int addHeight = 2)
	{
	}
}
[Token(Token = "0x2000010")]
public class FPD_LayersAttribute : PropertyAttribute
{
	[Token(Token = "0x6000028")]
	[Address(RVA = "0xC9A540", Offset = "0xC9A540", VA = "0xC9A540")]
	public FPD_LayersAttribute()
	{
	}
}
[Token(Token = "0x2000011")]
public class FPD_WidthAttribute : PropertyAttribute
{
	[Token(Token = "0x4000032")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float LabelWidth;

	[Token(Token = "0x6000029")]
	[Address(RVA = "0xC9A644", Offset = "0xC9A644", VA = "0xC9A644")]
	public FPD_WidthAttribute(int labelWidth)
	{
	}
}
[Token(Token = "0x2000012")]
public class FPD_PercentageAttribute : PropertyAttribute
{
	[Token(Token = "0x4000033")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public readonly float Min;

	[Token(Token = "0x4000034")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public readonly float Max;

	[Token(Token = "0x4000035")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public readonly string Suffix;

	[Token(Token = "0x4000036")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public readonly bool from0to100;

	[Token(Token = "0x4000037")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	public readonly bool editableValue;

	[Token(Token = "0x4000038")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A")]
	public readonly bool basic;

	[Token(Token = "0x600002A")]
	[Address(RVA = "0xC9A548", Offset = "0xC9A548", VA = "0xC9A548")]
	public FPD_PercentageAttribute(float min, float max, bool goOver100Perc = false, bool editable = true, string suffix = "%", bool basicFromTo = false)
	{
	}
}
[Token(Token = "0x2000013")]
public class FPD_SuffixAttribute : PropertyAttribute
{
	[Token(Token = "0x2000014")]
	public enum SuffixMode
	{
		[Token(Token = "0x4000040")]
		From0to100,
		[Token(Token = "0x4000041")]
		PercentageUnclamped,
		[Token(Token = "0x4000042")]
		FromMinToMax,
		[Token(Token = "0x4000043")]
		FromMinToMaxRounded
	}

	[Token(Token = "0x4000039")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public readonly float Min;

	[Token(Token = "0x400003A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public readonly float Max;

	[Token(Token = "0x400003B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public readonly SuffixMode Mode;

	[Token(Token = "0x400003C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public readonly string Suffix;

	[Token(Token = "0x400003D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public readonly bool editableValue;

	[Token(Token = "0x400003E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public readonly int widerField;

	[Token(Token = "0x600002B")]
	[Address(RVA = "0xC9A5CC", Offset = "0xC9A5CC", VA = "0xC9A5CC")]
	public FPD_SuffixAttribute(float min, float max, SuffixMode mode = SuffixMode.From0to100, string suffix = "%", bool editable = true, int wider = 0)
	{
	}
}
[Token(Token = "0x2000015")]
public class GestrumentCore : MonoBehaviour
{
	[Token(Token = "0x2000016")]
	public class AudioEvent
	{
		[Token(Token = "0x2000017")]
		public enum Type
		{
			[Token(Token = "0x4000054")]
			NoteOn,
			[Token(Token = "0x4000055")]
			NoteOff,
			[Token(Token = "0x4000056")]
			CC
		}

		[Token(Token = "0x4000048")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Type type;

		[Token(Token = "0x4000049")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GestrumentCore core;

		[Token(Token = "0x400004A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int instrument;

		[Token(Token = "0x400004B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public double beat;

		[Token(Token = "0x400004C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public int voice;

		[Token(Token = "0x400004D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float pitch;

		[Token(Token = "0x400004E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float velocity;

		[Token(Token = "0x400004F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public int control;

		[Token(Token = "0x4000050")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public int index;

		[Token(Token = "0x4000051")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public double newValue;

		[Token(Token = "0x4000052")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public double oldValue;

		[Token(Token = "0x6000032")]
		[Address(RVA = "0xE7A478", Offset = "0xE7A478", VA = "0xE7A478")]
		public AudioEvent(GestrumentCore core, int instrument, int voice, double beat, float pitch, float velocity)
		{
		}

		[Token(Token = "0x6000033")]
		[Address(RVA = "0xE7A5B4", Offset = "0xE7A5B4", VA = "0xE7A5B4")]
		public AudioEvent(GestrumentCore core, int instrument, int voice, double beat)
		{
		}

		[Token(Token = "0x6000034")]
		[Address(RVA = "0xE7A6E8", Offset = "0xE7A6E8", VA = "0xE7A6E8")]
		public AudioEvent(GestrumentCore core, int instrument, int control, int index, double newValue, double oldValue)
		{
		}
	}

	[Serializable]
	[Token(Token = "0x2000018")]
	public class ConfigEventUnity : UnityEvent<GestrumentCore>
	{
		[Token(Token = "0x6000035")]
		[Address(RVA = "0xE7A934", Offset = "0xE7A934", VA = "0xE7A934")]
		public ConfigEventUnity()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x2000019")]
	public class AudioEventUnity : UnityEvent<AudioEvent>
	{
		[Token(Token = "0x6000036")]
		[Address(RVA = "0xE7A8E4", Offset = "0xE7A8E4", VA = "0xE7A8E4")]
		public AudioEventUnity()
		{
		}
	}

	[Token(Token = "0x4000044")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool DebugOutput;

	[Token(Token = "0x4000045")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ConfigEventUnity OnConfigEvent;

	[Token(Token = "0x4000046")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AudioEventUnity OnAudioEvent;

	[Token(Token = "0x4000047")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GE_Engine engine;

	[Token(Token = "0x600002C")]
	[Address(RVA = "0xE7A3A4", Offset = "0xE7A3A4", VA = "0xE7A3A4")]
	private void _OnNoteOn(GE_Engine engine, int instrument, int voice, double beat, float pitch, float velocity)
	{
	}

	[Token(Token = "0x600002D")]
	[Address(RVA = "0xE7A4F0", Offset = "0xE7A4F0", VA = "0xE7A4F0")]
	private void _OnNoteOff(GE_Engine engine, int instrument, int voice, double beat)
	{
	}

	[Token(Token = "0x600002E")]
	[Address(RVA = "0xE7A61C", Offset = "0xE7A61C", VA = "0xE7A61C")]
	private void _OnControlChange(GE_Engine engine, int instrument, int control, int index, double newValue, double oldValue)
	{
	}

	[Token(Token = "0x600002F")]
	[Address(RVA = "0xE7A760", Offset = "0xE7A760", VA = "0xE7A760")]
	public void Render(double sampleRate, int numSamples)
	{
	}

	[Token(Token = "0x6000030")]
	[Address(RVA = "0xE7A774", Offset = "0xE7A774", VA = "0xE7A774")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000031")]
	[Address(RVA = "0xE7A8D4", Offset = "0xE7A8D4", VA = "0xE7A8D4")]
	public GestrumentCore()
	{
	}
}
[Serializable]
[Token(Token = "0x200001A")]
public class Cursors
{
	[Token(Token = "0x4000057")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public bool gateOn;

	[Token(Token = "0x4000058")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x974F30", Offset = "0x974F30")]
	public double Xpos;

	[Token(Token = "0x4000059")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x974F48", Offset = "0x974F48")]
	public double Ypos;

	[Token(Token = "0x400005A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x974F60", Offset = "0x974F60")]
	public double Zpos;

	[Token(Token = "0x6000037")]
	[Address(RVA = "0xBF2788", Offset = "0xBF2788", VA = "0xBF2788")]
	public Cursors()
	{
	}
}
[Serializable]
[Token(Token = "0x200001B")]
public class InstrumentSettings
{
	[Token(Token = "0x400005B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int cursor;

	[Token(Token = "0x400005C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public int output;

	[Token(Token = "0x400005D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool legato;

	[Token(Token = "0x400005E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public GE_Engine.PulsePlayMode pulsePlayMode;

	[Token(Token = "0x400005F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GE_Engine.PulseGenType PulseGen;

	[Token(Token = "0x4000060")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public GE_Engine.PitchGenType PitchGen;

	[Token(Token = "0x4000061")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string midiFileName;

	[Token(Token = "0x4000062")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool[] noteValues;

	[Token(Token = "0x6000038")]
	[Address(RVA = "0xBDFCC4", Offset = "0xBDFCC4", VA = "0xBDFCC4")]
	public InstrumentSettings()
	{
	}
}
[Token(Token = "0x200001C")]
public class GestrumentOrchestrator : MonoBehaviour
{
	[Token(Token = "0x200001D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x971350", Offset = "0x971350")]
	private sealed class <WaitForStart>d__22 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000078")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000079")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400007A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GestrumentOrchestrator <>4__this;

		[Token(Token = "0x17000005")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000049")]
			[Address(RVA = "0xE7F284", Offset = "0xE7F284", VA = "0xE7F284", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000006")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600004B")]
			[Address(RVA = "0xE7F2EC", Offset = "0xE7F2EC", VA = "0xE7F2EC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000046")]
		[Address(RVA = "0xE7D288", Offset = "0xE7D288", VA = "0xE7D288")]
		[DebuggerHidden]
		public <WaitForStart>d__22(int <>1__state)
		{
		}

		[Token(Token = "0x6000047")]
		[Address(RVA = "0xE7F1C4", Offset = "0xE7F1C4", VA = "0xE7F1C4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000048")]
		[Address(RVA = "0xE7F1C8", Offset = "0xE7F1C8", VA = "0xE7F1C8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600004A")]
		[Address(RVA = "0xE7F28C", Offset = "0xE7F28C", VA = "0xE7F28C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000063")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[HideInInspector]
	public GestrumentCore core;

	[Token(Token = "0x4000064")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GestrumentSettings settings;

	[Token(Token = "0x4000065")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int cursorCount;

	[Token(Token = "0x4000066")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public int instrumentCount;

	[Token(Token = "0x4000067")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public int totalPolyphony;

	[Token(Token = "0x4000068")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject[] instruments;

	[Token(Token = "0x4000069")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public int[] manualInstrumentRouting;

	[Token(Token = "0x400006A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public List<InstrumentSettings> instrumentSettings;

	[Token(Token = "0x400006B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x974F88", Offset = "0x974F88")]
	public bool autoPlayPreset;

	[Token(Token = "0x400006C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public UnityEngine.Object preset;

	[Token(Token = "0x400006D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public string presetName;

	[Token(Token = "0x400006E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public bool AutoLoadInstrumentsBasedOnName;

	[Token(Token = "0x400006F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x69")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x974FC0", Offset = "0x974FC0")]
	public bool autoPlayMidiFiles;

	[Token(Token = "0x4000070")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public UnityEngine.Object[] midiFile;

	[Token(Token = "0x4000071")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public string[] midiFileName;

	[Token(Token = "0x4000072")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public int[] manualMidiRouting;

	[Token(Token = "0x4000073")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x974FF8", Offset = "0x974FF8")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x974FF8", Offset = "0x974FF8")]
	public List<double> sliders;

	[Token(Token = "0x4000074")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public List<Cursors> cursors;

	[Token(Token = "0x4000075")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private string pathToPreset;

	[Token(Token = "0x4000076")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private double oldDspTime;

	[Token(Token = "0x4000077")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private bool waitforstart;

	[Token(Token = "0x6000039")]
	[Address(RVA = "0xE7CF94", Offset = "0xE7CF94", VA = "0xE7CF94")]
	private void Start()
	{
	}

	[Token(Token = "0x600003A")]
	[Address(RVA = "0xE7D20C", Offset = "0xE7D20C", VA = "0xE7D20C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x986450", Offset = "0x986450")]
	private IEnumerator WaitForStart()
	{
		return null;
	}

	[Token(Token = "0x600003B")]
	[Address(RVA = "0xE7D2B4", Offset = "0xE7D2B4", VA = "0xE7D2B4")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x600003C")]
	[Address(RVA = "0xE7D508", Offset = "0xE7D508", VA = "0xE7D508")]
	public void LoadSettingsFileVars()
	{
	}

	[Token(Token = "0x600003D")]
	[Address(RVA = "0xE7D6FC", Offset = "0xE7D6FC", VA = "0xE7D6FC")]
	public void LoadSettingsFileSetup()
	{
	}

	[Token(Token = "0x600003E")]
	[Address(RVA = "0xE7DA60", Offset = "0xE7DA60", VA = "0xE7DA60")]
	public void ProcessConfigEvent(GestrumentCore core)
	{
	}

	[Token(Token = "0x600003F")]
	[Address(RVA = "0xE7DFBC", Offset = "0xE7DFBC", VA = "0xE7DFBC")]
	public void ProcessAudioEvent(GestrumentCore.AudioEvent engineEvent)
	{
	}

	[Token(Token = "0x6000040")]
	[Address(RVA = "0xE7E2D0", Offset = "0xE7E2D0", VA = "0xE7E2D0")]
	public void SetupMidiFiles()
	{
	}

	[Token(Token = "0x6000041")]
	[Address(RVA = "0xE7DC28", Offset = "0xE7DC28", VA = "0xE7DC28")]
	public void LoadDefaultPreset()
	{
	}

	[Token(Token = "0x6000042")]
	[Address(RVA = "0xE7E5F8", Offset = "0xE7E5F8", VA = "0xE7E5F8")]
	private void OnValidate()
	{
	}

	[Token(Token = "0x6000043")]
	[Address(RVA = "0xE7E008", Offset = "0xE7E008", VA = "0xE7E008")]
	private bool StartVoice(int voice, float pitch, float velocity, int instrument)
	{
		return default(bool);
	}

	[Token(Token = "0x6000044")]
	[Address(RVA = "0xE7E178", Offset = "0xE7E178", VA = "0xE7E178")]
	private bool StopVoice(int voice, float pitch, int instrument)
	{
		return default(bool);
	}

	[Token(Token = "0x6000045")]
	[Address(RVA = "0xE7F0F8", Offset = "0xE7F0F8", VA = "0xE7F0F8")]
	public GestrumentOrchestrator()
	{
	}
}
[Serializable]
[Token(Token = "0x200001E")]
public class NoteData
{
	[Token(Token = "0x400007B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int[] notes;

	[Token(Token = "0x400007C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioClip[] clip;

	[Token(Token = "0x400007D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int[] loopStart;

	[Token(Token = "0x400007E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int[] loopEnd;

	[Token(Token = "0x400007F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public int[] transpose;

	[Token(Token = "0x600004C")]
	[Address(RVA = "0xD6C788", Offset = "0xD6C788", VA = "0xD6C788")]
	public NoteData()
	{
	}
}
[Token(Token = "0x200001F")]
public class GestrumentSampler : MonoBehaviour
{
	[Token(Token = "0x2000020")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x971360", Offset = "0x971360")]
	private sealed class <TestPlay>d__32 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400009B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400009C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400009D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GestrumentSampler <>4__this;

		[Token(Token = "0x17000007")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600005A")]
			[Address(RVA = "0xE8010C", Offset = "0xE8010C", VA = "0xE8010C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000008")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600005C")]
			[Address(RVA = "0xE80174", Offset = "0xE80174", VA = "0xE80174", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000057")]
		[Address(RVA = "0xE7FCB0", Offset = "0xE7FCB0", VA = "0xE7FCB0")]
		[DebuggerHidden]
		public <TestPlay>d__32(int <>1__state)
		{
		}

		[Token(Token = "0x6000058")]
		[Address(RVA = "0xE7FFE4", Offset = "0xE7FFE4", VA = "0xE7FFE4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000059")]
		[Address(RVA = "0xE7FFE8", Offset = "0xE7FFE8", VA = "0xE7FFE8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600005B")]
		[Address(RVA = "0xE80114", Offset = "0xE80114", VA = "0xE80114", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000021")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x971370", Offset = "0x971370")]
	private sealed class <StartFade>d__33 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400009E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400009F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40000A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AudioSource audioSource;

		[Token(Token = "0x40000A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float targetVolume;

		[Token(Token = "0x40000A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float duration;

		[Token(Token = "0x40000A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float <currentTime>5__2;

		[Token(Token = "0x40000A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float <start>5__3;

		[Token(Token = "0x17000009")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000060")]
			[Address(RVA = "0xE7FF74", Offset = "0xE7FF74", VA = "0xE7FF74", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700000A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000062")]
			[Address(RVA = "0xE7FFDC", Offset = "0xE7FFDC", VA = "0xE7FFDC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600005D")]
		[Address(RVA = "0xE7FCDC", Offset = "0xE7FCDC", VA = "0xE7FCDC")]
		[DebuggerHidden]
		public <StartFade>d__33(int <>1__state)
		{
		}

		[Token(Token = "0x600005E")]
		[Address(RVA = "0xE7FE44", Offset = "0xE7FE44", VA = "0xE7FE44", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600005F")]
		[Address(RVA = "0xE7FE48", Offset = "0xE7FE48", VA = "0xE7FE48", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000061")]
		[Address(RVA = "0xE7FF7C", Offset = "0xE7FF7C", VA = "0xE7FF7C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000080")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float testOffset;

	[Token(Token = "0x4000081")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x97504C", Offset = "0x97504C")]
	public int setPitch;

	[Token(Token = "0x4000082")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int globalTranspose;

	[Token(Token = "0x4000083")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x975068", Offset = "0x975068")]
	public float setVelocity;

	[Token(Token = "0x4000084")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float maxVelocity;

	[Token(Token = "0x4000085")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float minVelocity;

	[Token(Token = "0x4000086")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x975080", Offset = "0x975080")]
	public float volumeOffset;

	[Token(Token = "0x4000087")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x975098", Offset = "0x975098")]
	public float vibrato;

	[Token(Token = "0x4000088")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9750B0", Offset = "0x9750B0")]
	public int polyphony;

	[Token(Token = "0x4000089")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public bool oneShot;

	[Token(Token = "0x400008A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3D")]
	public bool autoPanByPitch;

	[Token(Token = "0x400008B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float autoPanMin;

	[Token(Token = "0x400008C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float autoPanMax;

	[Token(Token = "0x400008D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public bool spatialiseInstrument;

	[Token(Token = "0x400008E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject spatialParent;

	[Token(Token = "0x400008F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9750C8", Offset = "0x9750C8")]
	public float releaseTime;

	[Token(Token = "0x4000090")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private int currentVoice;

	[Token(Token = "0x4000091")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private int prevVoice;

	[Token(Token = "0x4000092")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private AudioSource[] audioSource;

	[Token(Token = "0x4000093")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private AudioSource[,] voices;

	[Token(Token = "0x4000094")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public List<NoteData> noteData;

	[Token(Token = "0x4000095")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public bool fakeRoundRobin;

	[Token(Token = "0x4000096")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9750E0", Offset = "0x9750E0")]
	public int rrRange;

	[Token(Token = "0x4000097")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public bool debugAutoPlay;

	[Token(Token = "0x4000098")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private int roundRobin;

	[Token(Token = "0x4000099")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private IEnumerator coroutine;

	[Token(Token = "0x400009A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private IEnumerator[] fadeOut;

	[Token(Token = "0x600004D")]
	[Address(RVA = "0xE7F2F4", Offset = "0xE7F2F4", VA = "0xE7F2F4")]
	private void Start()
	{
	}

	[Token(Token = "0x600004E")]
	[Address(RVA = "0xE7E6D0", Offset = "0xE7E6D0", VA = "0xE7E6D0")]
	public bool StartVoice(int voice, float pitch, float velocity, int instrument)
	{
		return default(bool);
	}

	[Token(Token = "0x600004F")]
	[Address(RVA = "0xE7EF04", Offset = "0xE7EF04", VA = "0xE7EF04")]
	public bool StopVoice(int voice, float pitch, int instrument)
	{
		return default(bool);
	}

	[Token(Token = "0x6000050")]
	[Address(RVA = "0xE7F714", Offset = "0xE7F714", VA = "0xE7F714")]
	private void UpdateADSR(AudioSource go)
	{
	}

	[Token(Token = "0x6000051")]
	[Address(RVA = "0xE7FCAC", Offset = "0xE7FCAC", VA = "0xE7FCAC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000052")]
	[Address(RVA = "0xE7F698", Offset = "0xE7F698", VA = "0xE7F698")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x986504", Offset = "0x986504")]
	private IEnumerator TestPlay()
	{
		return null;
	}

	[Token(Token = "0x6000053")]
	[Address(RVA = "0xE7FC1C", Offset = "0xE7FC1C", VA = "0xE7FC1C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x986568", Offset = "0x986568")]
	public IEnumerator StartFade(AudioSource audioSource, float duration, float targetVolume)
	{
		return null;
	}

	[Token(Token = "0x6000054")]
	[Address(RVA = "0xE7F7D8", Offset = "0xE7F7D8", VA = "0xE7F7D8")]
	private void LoopVoice(AudioSource aS, int n, int p)
	{
	}

	[Token(Token = "0x6000055")]
	[Address(RVA = "0xE7FD08", Offset = "0xE7FD08", VA = "0xE7FD08")]
	public void ProcessAudioEvent(GestrumentCore.AudioEvent engineEvent)
	{
	}

	[Token(Token = "0x6000056")]
	[Address(RVA = "0xE7FD50", Offset = "0xE7FD50", VA = "0xE7FD50")]
	public GestrumentSampler()
	{
	}
}
[Token(Token = "0x2000022")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x971380", Offset = "0x971380")]
public class GestrumentSettings : ScriptableObject
{
	[Token(Token = "0x40000A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string presetFileName;

	[Token(Token = "0x40000A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public UnityEngine.Object presetFile;

	[Token(Token = "0x40000A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int numCursors;

	[Token(Token = "0x40000A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public int numInstruments;

	[Token(Token = "0x40000A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public int totalPolyphony;

	[Token(Token = "0x40000AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject[] instruments;

	[Token(Token = "0x40000AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool playMidiOnStart;

	[Token(Token = "0x40000AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
	public bool autoPlayPreset;

	[Token(Token = "0x40000AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public UnityEngine.Object[] midiFile;

	[Token(Token = "0x40000AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public string[] midiFileName;

	[Token(Token = "0x40000AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public int[] manualMidiRouting;

	[Token(Token = "0x40000B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public int[] manualInstrumentRouting;

	[Token(Token = "0x40000B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public List<InstrumentSettings> instrumentSettings;

	[Token(Token = "0x6000063")]
	[Address(RVA = "0xE8017C", Offset = "0xE8017C", VA = "0xE8017C")]
	private void OnValidate()
	{
	}

	[Token(Token = "0x6000064")]
	[Address(RVA = "0xE8050C", Offset = "0xE8050C", VA = "0xE8050C")]
	public GestrumentSettings()
	{
	}
}
[Token(Token = "0x2000023")]
public class GestrumentMonophonic : MonoBehaviour
{
	[Token(Token = "0x40000B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GestrumentSampler sampler;

	[Token(Token = "0x40000B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AudioSource samplerAudio;

	[Token(Token = "0x40000B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float targetPitch;

	[Token(Token = "0x40000B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float oldPitch;

	[Token(Token = "0x40000B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private GestrumentCore core;

	[Token(Token = "0x40000B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool m_isInitialized;

	[Token(Token = "0x40000B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9750F8", Offset = "0x9750F8")]
	private bool <IsActive>k__BackingField;

	[Token(Token = "0x40000B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x975108", Offset = "0x975108")]
	private float <MidiNote>k__BackingField;

	[Token(Token = "0x1700000B")]
	public GestrumentCore Core
	{
		[Token(Token = "0x6000065")]
		[Address(RVA = "0xE7CC54", Offset = "0xE7CC54", VA = "0xE7CC54")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700000C")]
	public bool IsActive
	{
		[Token(Token = "0x6000066")]
		[Address(RVA = "0xE7CC5C", Offset = "0xE7CC5C", VA = "0xE7CC5C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x98666C", Offset = "0x98666C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000067")]
		[Address(RVA = "0xE7CC64", Offset = "0xE7CC64", VA = "0xE7CC64")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x98667C", Offset = "0x98667C")]
		private set
		{
		}
	}

	[Token(Token = "0x1700000D")]
	public float MidiNote
	{
		[Token(Token = "0x6000068")]
		[Address(RVA = "0xE7CC70", Offset = "0xE7CC70", VA = "0xE7CC70")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x98668C", Offset = "0x98668C")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000069")]
		[Address(RVA = "0xE7CC78", Offset = "0xE7CC78", VA = "0xE7CC78")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x98669C", Offset = "0x98669C")]
		private set
		{
		}
	}

	[Token(Token = "0x600006A")]
	[Address(RVA = "0xE7CC80", Offset = "0xE7CC80", VA = "0xE7CC80")]
	private void Start()
	{
	}

	[Token(Token = "0x600006B")]
	[Address(RVA = "0xE7CCA0", Offset = "0xE7CCA0", VA = "0xE7CCA0")]
	public void InitializeCore()
	{
	}

	[Token(Token = "0x600006C")]
	[Address(RVA = "0xE7CCA4", Offset = "0xE7CCA4", VA = "0xE7CCA4")]
	private void Update()
	{
	}

	[Token(Token = "0x600006D")]
	[Address(RVA = "0xE7CD08", Offset = "0xE7CD08", VA = "0xE7CD08")]
	public void ProcessAudioEvent(GestrumentCore.AudioEvent engineEvent)
	{
	}

	[Token(Token = "0x600006E")]
	[Address(RVA = "0xE7CF58", Offset = "0xE7CF58", VA = "0xE7CF58")]
	public void StopVoice(int voice, int instrument)
	{
	}

	[Token(Token = "0x600006F")]
	[Address(RVA = "0xE7CF8C", Offset = "0xE7CF8C", VA = "0xE7CF8C")]
	public GestrumentMonophonic()
	{
	}
}
[Token(Token = "0x2000024")]
public class GeysirMusicManager : MonoBehaviour
{
	[Token(Token = "0x40000BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<InstrumentResonator> crystals;

	[Token(Token = "0x6000070")]
	[Address(RVA = "0xE80524", Offset = "0xE80524", VA = "0xE80524")]
	public GeysirMusicManager()
	{
	}
}
[Token(Token = "0x2000025")]
public class HighEndSwitcher : MonoBehaviour
{
	[Token(Token = "0x2000026")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9713EC", Offset = "0x9713EC")]
	private sealed class <Start>d__7 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40000C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40000C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40000C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public HighEndSwitcher <>4__this;

		[Token(Token = "0x1700000E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600007B")]
			[Address(RVA = "0xBDE7D0", Offset = "0xBDE7D0", VA = "0xBDE7D0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700000F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600007D")]
			[Address(RVA = "0xBDE838", Offset = "0xBDE838", VA = "0xBDE838", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000078")]
		[Address(RVA = "0xBDDCC4", Offset = "0xBDDCC4", VA = "0xBDDCC4")]
		[DebuggerHidden]
		public <Start>d__7(int <>1__state)
		{
		}

		[Token(Token = "0x6000079")]
		[Address(RVA = "0xBDE748", Offset = "0xBDE748", VA = "0xBDE748", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600007A")]
		[Address(RVA = "0xBDE74C", Offset = "0xBDE74C", VA = "0xBDE74C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600007C")]
		[Address(RVA = "0xBDE7D8", Offset = "0xBDE7D8", VA = "0xBDE7D8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000027")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9713FC", Offset = "0x9713FC")]
	private sealed class <LoadMesh>d__8 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40000C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40000C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40000C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public HighEndSwitcher <>4__this;

		[Token(Token = "0x40000C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private AsyncOperationHandle<Mesh> <handle>5__2;

		[Token(Token = "0x17000010")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000081")]
			[Address(RVA = "0xBDE5E0", Offset = "0xBDE5E0", VA = "0xBDE5E0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000011")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000083")]
			[Address(RVA = "0xBDE648", Offset = "0xBDE648", VA = "0xBDE648", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600007E")]
		[Address(RVA = "0xBDDD6C", Offset = "0xBDDD6C", VA = "0xBDDD6C")]
		[DebuggerHidden]
		public <LoadMesh>d__8(int <>1__state)
		{
		}

		[Token(Token = "0x600007F")]
		[Address(RVA = "0xBDE304", Offset = "0xBDE304", VA = "0xBDE304", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000080")]
		[Address(RVA = "0xBDE308", Offset = "0xBDE308", VA = "0xBDE308", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000082")]
		[Address(RVA = "0xBDE5E8", Offset = "0xBDE5E8", VA = "0xBDE5E8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000028")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x97140C", Offset = "0x97140C")]
	private sealed class <LoadMaterial>d__9 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40000C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40000C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40000CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AssetReference material;

		[Token(Token = "0x40000CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Material[] newMats;

		[Token(Token = "0x40000CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public int i;

		[Token(Token = "0x40000CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private AsyncOperationHandle<Material> <handle>5__2;

		[Token(Token = "0x17000012")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000087")]
			[Address(RVA = "0xBDE294", Offset = "0xBDE294", VA = "0xBDE294", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000013")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000089")]
			[Address(RVA = "0xBDE2FC", Offset = "0xBDE2FC", VA = "0xBDE2FC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000084")]
		[Address(RVA = "0xBDDE38", Offset = "0xBDDE38", VA = "0xBDDE38")]
		[DebuggerHidden]
		public <LoadMaterial>d__9(int <>1__state)
		{
		}

		[Token(Token = "0x6000085")]
		[Address(RVA = "0xBDDFC4", Offset = "0xBDDFC4", VA = "0xBDDFC4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000086")]
		[Address(RVA = "0xBDDFC8", Offset = "0xBDDFC8", VA = "0xBDDFC8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000088")]
		[Address(RVA = "0xBDE29C", Offset = "0xBDE29C", VA = "0xBDE29C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000029")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x97141C", Offset = "0x97141C")]
	private sealed class <SimplifiedLoad>d__10 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40000CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40000CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40000D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public HighEndSwitcher <>4__this;

		[Token(Token = "0x17000014")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600008D")]
			[Address(RVA = "0xBDE6D8", Offset = "0xBDE6D8", VA = "0xBDE6D8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000015")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600008F")]
			[Address(RVA = "0xBDE740", Offset = "0xBDE740", VA = "0xBDE740", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600008A")]
		[Address(RVA = "0xBDDEE0", Offset = "0xBDDEE0", VA = "0xBDDEE0")]
		[DebuggerHidden]
		public <SimplifiedLoad>d__10(int <>1__state)
		{
		}

		[Token(Token = "0x600008B")]
		[Address(RVA = "0xBDE650", Offset = "0xBDE650", VA = "0xBDE650", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600008C")]
		[Address(RVA = "0xBDE654", Offset = "0xBDE654", VA = "0xBDE654", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600008E")]
		[Address(RVA = "0xBDE6E0", Offset = "0xBDE6E0", VA = "0xBDE6E0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40000BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Dictionary<object, AsyncOperationHandle<Mesh>> meshHandleDict;

	[Token(Token = "0x40000BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static Dictionary<object, AsyncOperationHandle<Material>> matHandleDict;

	[Token(Token = "0x40000BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<AssetReference> materials;

	[Token(Token = "0x40000BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public MeshFilter myMeshFilter;

	[Token(Token = "0x40000BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public MeshRenderer myRenderer;

	[Token(Token = "0x40000C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AssetReference mesh;

	[Token(Token = "0x6000071")]
	[Address(RVA = "0xBDDB48", Offset = "0xBDDB48", VA = "0xBDDB48")]
	private void OnValidate()
	{
	}

	[Token(Token = "0x6000072")]
	[Address(RVA = "0xBDDC48", Offset = "0xBDDC48", VA = "0xBDDC48")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9866AC", Offset = "0x9866AC")]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x6000073")]
	[Address(RVA = "0xBDDCF0", Offset = "0xBDDCF0", VA = "0xBDDCF0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x986710", Offset = "0x986710")]
	private IEnumerator LoadMesh()
	{
		return null;
	}

	[Token(Token = "0x6000074")]
	[Address(RVA = "0xBDDD98", Offset = "0xBDDD98", VA = "0xBDDD98")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x986774", Offset = "0x986774")]
	private IEnumerator LoadMaterial(AssetReference material, Material[] newMats, int i)
	{
		return null;
	}

	[Token(Token = "0x6000075")]
	[Address(RVA = "0xBDDE64", Offset = "0xBDDE64", VA = "0xBDDE64")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9867D8", Offset = "0x9867D8")]
	private IEnumerator SimplifiedLoad()
	{
		return null;
	}

	[Token(Token = "0x6000076")]
	[Address(RVA = "0xBDDF0C", Offset = "0xBDDF0C", VA = "0xBDDF0C")]
	public HighEndSwitcher()
	{
	}
}
[Token(Token = "0x200002A")]
public class OVRMetricsToolSDK : MonoBehaviour
{
	[Token(Token = "0x40000D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static AndroidJavaClass _MetricsService;

	[Token(Token = "0x40000D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static AndroidJavaObject _Context;

	[Token(Token = "0x40000D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static bool _IsBound;

	[Token(Token = "0x40000D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static OVRMetricsToolSDK _Instance;

	[Token(Token = "0x17000016")]
	public static OVRMetricsToolSDK Instance
	{
		[Token(Token = "0x6000090")]
		[Address(RVA = "0xD6DDD0", Offset = "0xD6DDD0", VA = "0xD6DDD0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000091")]
	[Address(RVA = "0xD6DEFC", Offset = "0xD6DEFC", VA = "0xD6DEFC")]
	[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x98697C", Offset = "0x98697C")]
	private static void InitJava()
	{
	}

	[Token(Token = "0x6000092")]
	[Address(RVA = "0xD6E000", Offset = "0xD6E000", VA = "0xD6E000")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000093")]
	[Address(RVA = "0xD6E108", Offset = "0xD6E108", VA = "0xD6E108")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000094")]
	[Address(RVA = "0xD6E204", Offset = "0xD6E204", VA = "0xD6E204")]
	private void OnApplicationPause(bool pause)
	{
	}

	[Token(Token = "0x6000095")]
	[Address(RVA = "0xD6E004", Offset = "0xD6E004", VA = "0xD6E004")]
	private void Bind()
	{
	}

	[Token(Token = "0x6000096")]
	[Address(RVA = "0xD6E10C", Offset = "0xD6E10C", VA = "0xD6E10C")]
	private void Shutdown()
	{
	}

	[Token(Token = "0x6000097")]
	[Address(RVA = "0xD6E210", Offset = "0xD6E210", VA = "0xD6E210")]
	public bool AppendCsvDebugString(string debugString)
	{
		return default(bool);
	}

	[Token(Token = "0x6000098")]
	[Address(RVA = "0xD6E370", Offset = "0xD6E370", VA = "0xD6E370")]
	public bool SetOverlayDebugString(string debugString)
	{
		return default(bool);
	}

	[Token(Token = "0x6000099")]
	[Address(RVA = "0xD6E4D0", Offset = "0xD6E4D0", VA = "0xD6E4D0")]
	public OVRMetricsToolSDK()
	{
	}
}
[Token(Token = "0x200002B")]
public class DebugUIBuilder : MonoBehaviour
{
	[Token(Token = "0x200002C")]
	public delegate void OnClick();

	[Token(Token = "0x200002D")]
	public delegate void OnToggleValueChange(Toggle t);

	[Token(Token = "0x200002E")]
	public delegate void OnSlider(float f);

	[Token(Token = "0x200002F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x97142C", Offset = "0x97142C")]
	private sealed class <>c__DisplayClass35_0
	{
		[Token(Token = "0x40000EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public OnClick handler;

		[Token(Token = "0x60000B4")]
		[Address(RVA = "0xBF4F5C", Offset = "0xBF4F5C", VA = "0xBF4F5C")]
		public <>c__DisplayClass35_0()
		{
		}

		[Token(Token = "0x60000B5")]
		[Address(RVA = "0xBF5970", Offset = "0xBF5970", VA = "0xBF5970")]
		internal void <AddButton>b__0()
		{
		}
	}

	[Token(Token = "0x2000030")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x97143C", Offset = "0x97143C")]
	private sealed class <>c__DisplayClass37_0
	{
		[Token(Token = "0x40000F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public OnSlider onValueChanged;

		[Token(Token = "0x60000B6")]
		[Address(RVA = "0xBF51DC", Offset = "0xBF51DC", VA = "0xBF51DC")]
		public <>c__DisplayClass37_0()
		{
		}

		[Token(Token = "0x60000B7")]
		[Address(RVA = "0xBF5B94", Offset = "0xBF5B94", VA = "0xBF5B94")]
		internal void <AddSlider>b__0(float f)
		{
		}
	}

	[Token(Token = "0x2000031")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x97144C", Offset = "0x97144C")]
	private sealed class <>c__DisplayClass39_0
	{
		[Token(Token = "0x40000F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public OnToggleValueChange onValueChanged;

		[Token(Token = "0x40000F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Toggle t;

		[Token(Token = "0x60000B8")]
		[Address(RVA = "0xBF5414", Offset = "0xBF5414", VA = "0xBF5414")]
		public <>c__DisplayClass39_0()
		{
		}

		[Token(Token = "0x60000B9")]
		[Address(RVA = "0xBF5E0C", Offset = "0xBF5E0C", VA = "0xBF5E0C")]
		internal void <AddToggle>b__0(bool <p0>)
		{
		}
	}

	[Token(Token = "0x2000032")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x97145C", Offset = "0x97145C")]
	private sealed class <>c__DisplayClass40_0
	{
		[Token(Token = "0x40000F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public OnToggleValueChange onValueChanged;

		[Token(Token = "0x40000F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Toggle t;

		[Token(Token = "0x60000BA")]
		[Address(RVA = "0xBF55C8", Offset = "0xBF55C8", VA = "0xBF55C8")]
		public <>c__DisplayClass40_0()
		{
		}

		[Token(Token = "0x60000BB")]
		[Address(RVA = "0xBF61C0", Offset = "0xBF61C0", VA = "0xBF61C0")]
		internal void <AddToggle>b__0(bool <p0>)
		{
		}
	}

	[Token(Token = "0x2000033")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x97146C", Offset = "0x97146C")]
	private sealed class <>c__DisplayClass41_0
	{
		[Token(Token = "0x40000F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public OnToggleValueChange handler;

		[Token(Token = "0x40000F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Toggle tb;

		[Token(Token = "0x60000BC")]
		[Address(RVA = "0xBF583C", Offset = "0xBF583C", VA = "0xBF583C")]
		public <>c__DisplayClass41_0()
		{
		}

		[Token(Token = "0x60000BD")]
		[Address(RVA = "0xBF61E0", Offset = "0xBF61E0", VA = "0xBF61E0")]
		internal void <AddRadio>b__0(bool <p0>)
		{
		}
	}

	[Token(Token = "0x40000D5")]
	public const int DEBUG_PANE_CENTER = 0;

	[Token(Token = "0x40000D6")]
	public const int DEBUG_PANE_RIGHT = 1;

	[Token(Token = "0x40000D7")]
	public const int DEBUG_PANE_LEFT = 2;

	[Token(Token = "0x40000D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private RectTransform buttonPrefab;

	[Token(Token = "0x40000D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private RectTransform labelPrefab;

	[Token(Token = "0x40000DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private RectTransform sliderPrefab;

	[Token(Token = "0x40000DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private RectTransform dividerPrefab;

	[Token(Token = "0x40000DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private RectTransform togglePrefab;

	[Token(Token = "0x40000DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private RectTransform radioPrefab;

	[Token(Token = "0x40000DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private GameObject uiHelpersToInstantiate;

	[Token(Token = "0x40000DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private Transform[] targetContentPanels;

	[Token(Token = "0x40000E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool[] reEnable;

	[Token(Token = "0x40000E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private List<GameObject> toEnable;

	[Token(Token = "0x40000E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private List<GameObject> toDisable;

	[Token(Token = "0x40000E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static DebugUIBuilder instance;

	[Token(Token = "0x40000E4")]
	private const float elementSpacing = 16f;

	[Token(Token = "0x40000E5")]
	private const float marginH = 16f;

	[Token(Token = "0x40000E6")]
	private const float marginV = 16f;

	[Token(Token = "0x40000E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Vector2[] insertPositions;

	[Token(Token = "0x40000E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private List<RectTransform>[] insertedElements;

	[Token(Token = "0x40000E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Vector3 menuOffset;

	[Token(Token = "0x40000EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private OVRCameraRig rig;

	[Token(Token = "0x40000EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private Dictionary<string, ToggleGroup> radioGroups;

	[Token(Token = "0x40000EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private LaserPointer lp;

	[Token(Token = "0x40000ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private LineRenderer lr;

	[Token(Token = "0x40000EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public LaserPointer.LaserBeamBehavior laserBeamBehavior;

	[Token(Token = "0x600009A")]
	[Address(RVA = "0xBF3E28", Offset = "0xBF3E28", VA = "0xBF3E28")]
	public void Awake()
	{
	}

	[Token(Token = "0x600009B")]
	[Address(RVA = "0xBF42A8", Offset = "0xBF42A8", VA = "0xBF42A8")]
	public void Show()
	{
	}

	[Token(Token = "0x600009C")]
	[Address(RVA = "0xBF4888", Offset = "0xBF4888", VA = "0xBF4888")]
	public void Hide()
	{
	}

	[Token(Token = "0x600009D")]
	[Address(RVA = "0xBF4634", Offset = "0xBF4634", VA = "0xBF4634")]
	private void Relayout()
	{
	}

	[Token(Token = "0x600009E")]
	[Address(RVA = "0xBF4A30", Offset = "0xBF4A30", VA = "0xBF4A30")]
	private void AddRect(RectTransform r, int targetCanvas)
	{
	}

	[Token(Token = "0x600009F")]
	[Address(RVA = "0xBF4D28", Offset = "0xBF4D28", VA = "0xBF4D28")]
	public RectTransform AddButton(string label, OnClick handler, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x60000A0")]
	[Address(RVA = "0xBF4F64", Offset = "0xBF4F64", VA = "0xBF4F64")]
	public RectTransform AddLabel(string label, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x60000A1")]
	[Address(RVA = "0xBF5048", Offset = "0xBF5048", VA = "0xBF5048")]
	public RectTransform AddSlider(string label, float min, float max, OnSlider onValueChanged, bool wholeNumbersOnly = false, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x60000A2")]
	[Address(RVA = "0xBF51E4", Offset = "0xBF51E4", VA = "0xBF51E4")]
	public RectTransform AddDivider(int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x60000A3")]
	[Address(RVA = "0xBF5280", Offset = "0xBF5280", VA = "0xBF5280")]
	public RectTransform AddToggle(string label, OnToggleValueChange onValueChanged, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x60000A4")]
	[Address(RVA = "0xBF541C", Offset = "0xBF541C", VA = "0xBF541C")]
	public RectTransform AddToggle(string label, OnToggleValueChange onValueChanged, bool defaultValue, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x60000A5")]
	[Address(RVA = "0xBF55D0", Offset = "0xBF55D0", VA = "0xBF55D0")]
	public RectTransform AddRadio(string label, string group, OnToggleValueChange handler, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x60000A6")]
	[Address(RVA = "0xBF5844", Offset = "0xBF5844", VA = "0xBF5844")]
	public void ToggleLaserPointer(bool isOn)
	{
	}

	[Token(Token = "0x60000A7")]
	[Address(RVA = "0xBF58F4", Offset = "0xBF58F4", VA = "0xBF58F4")]
	public DebugUIBuilder()
	{
	}
}
[Token(Token = "0x2000034")]
public class HandedInputSelector : MonoBehaviour
{
	[Token(Token = "0x40000F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private OVRCameraRig m_CameraRig;

	[Token(Token = "0x40000F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private OVRInputModule m_InputModule;

	[Token(Token = "0x60000BE")]
	[Address(RVA = "0xBDB5D8", Offset = "0xBDB5D8", VA = "0xBDB5D8")]
	private void Start()
	{
	}

	[Token(Token = "0x60000BF")]
	[Address(RVA = "0xBDB674", Offset = "0xBDB674", VA = "0xBDB674")]
	private void Update()
	{
	}

	[Token(Token = "0x60000C0")]
	[Address(RVA = "0xBDB73C", Offset = "0xBDB73C", VA = "0xBDB73C")]
	private void SetActiveController(OVRInput.Controller c)
	{
	}

	[Token(Token = "0x60000C1")]
	[Address(RVA = "0xBDB778", Offset = "0xBDB778", VA = "0xBDB778")]
	public HandedInputSelector()
	{
	}
}
[Token(Token = "0x2000035")]
public class LaserPointer : OVRCursor
{
	[Token(Token = "0x2000036")]
	public enum LaserBeamBehavior
	{
		[Token(Token = "0x4000103")]
		On,
		[Token(Token = "0x4000104")]
		Off,
		[Token(Token = "0x4000105")]
		OnWhenHitTarget
	}

	[Token(Token = "0x40000F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject cursorVisual;

	[Token(Token = "0x40000FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float maxLength;

	[Token(Token = "0x40000FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private LaserBeamBehavior _laserBeamBehavior;

	[Token(Token = "0x40000FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool m_restoreOnInputAcquired;

	[Token(Token = "0x40000FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private Vector3 _startPoint;

	[Token(Token = "0x40000FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Vector3 _forward;

	[Token(Token = "0x40000FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private Vector3 _endPoint;

	[Token(Token = "0x4000100")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool _hitTarget;

	[Token(Token = "0x4000101")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private LineRenderer lineRenderer;

	[Token(Token = "0x17000017")]
	public LaserBeamBehavior laserBeamBehavior
	{
		[Token(Token = "0x60000C3")]
		[Address(RVA = "0xBE4898", Offset = "0xBE4898", VA = "0xBE4898")]
		get
		{
			return default(LaserBeamBehavior);
		}
		[Token(Token = "0x60000C2")]
		[Address(RVA = "0xBE4854", Offset = "0xBE4854", VA = "0xBE4854")]
		set
		{
		}
	}

	[Token(Token = "0x60000C4")]
	[Address(RVA = "0xBE48A0", Offset = "0xBE48A0", VA = "0xBE48A0")]
	private void Awake()
	{
	}

	[Token(Token = "0x60000C5")]
	[Address(RVA = "0xBE4900", Offset = "0xBE4900", VA = "0xBE4900")]
	private void Start()
	{
	}

	[Token(Token = "0x60000C6")]
	[Address(RVA = "0xBE4A18", Offset = "0xBE4A18", VA = "0xBE4A18", Slot = "5")]
	public override void SetCursorStartDest(Vector3 start, Vector3 dest, Vector3 normal)
	{
	}

	[Token(Token = "0x60000C7")]
	[Address(RVA = "0xBE4A34", Offset = "0xBE4A34", VA = "0xBE4A34", Slot = "4")]
	public override void SetCursorRay(Transform t)
	{
	}

	[Token(Token = "0x60000C8")]
	[Address(RVA = "0xBE4A88", Offset = "0xBE4A88", VA = "0xBE4A88")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x60000C9")]
	[Address(RVA = "0xBE4CE4", Offset = "0xBE4CE4", VA = "0xBE4CE4")]
	private void UpdateLaserBeam(Vector3 start, Vector3 end)
	{
	}

	[Token(Token = "0x60000CA")]
	[Address(RVA = "0xBE4DF8", Offset = "0xBE4DF8", VA = "0xBE4DF8")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60000CB")]
	[Address(RVA = "0xBE4E8C", Offset = "0xBE4E8C", VA = "0xBE4E8C")]
	public void OnInputFocusLost()
	{
	}

	[Token(Token = "0x60000CC")]
	[Address(RVA = "0xBE4F5C", Offset = "0xBE4F5C", VA = "0xBE4F5C")]
	public void OnInputFocusAcquired()
	{
	}

	[Token(Token = "0x60000CD")]
	[Address(RVA = "0xBE5014", Offset = "0xBE5014", VA = "0xBE5014")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60000CE")]
	[Address(RVA = "0xBE50E0", Offset = "0xBE50E0", VA = "0xBE50E0")]
	public LaserPointer()
	{
	}
}
[Token(Token = "0x2000037")]
public class CharacterCameraConstraint : MonoBehaviour
{
	[Token(Token = "0x4000106")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9751B8", Offset = "0x9751B8")]
	public OVRCameraRig CameraRig;

	[Token(Token = "0x4000107")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9751F0", Offset = "0x9751F0")]
	public bool EnableCollision;

	[Token(Token = "0x4000108")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public LayerMask CollideLayers;

	[Token(Token = "0x4000109")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x975228", Offset = "0x975228")]
	public float MaxFade;

	[Token(Token = "0x400010A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x975260", Offset = "0x975260")]
	public float FadeMinDistance;

	[Token(Token = "0x400010B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float PreferredHeight;

	[Token(Token = "0x400010C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x975298", Offset = "0x975298")]
	public float FadeMaxDistance;

	[Token(Token = "0x400010D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private readonly Action _cameraUpdateAction;

	[Token(Token = "0x400010E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private readonly Action _preCharacterMovementAction;

	[Token(Token = "0x400010F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private CapsuleCollider _character;

	[Token(Token = "0x4000110")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private SimpleCapsuleWithStickMovement _simplePlayerController;

	[Token(Token = "0x60000CF")]
	[Address(RVA = "0xC432B4", Offset = "0xC432B4", VA = "0xC432B4")]
	private CharacterCameraConstraint()
	{
	}

	[Token(Token = "0x60000D0")]
	[Address(RVA = "0xC43344", Offset = "0xC43344", VA = "0xC43344")]
	private void Awake()
	{
	}

	[Token(Token = "0x60000D1")]
	[Address(RVA = "0xC433C8", Offset = "0xC433C8", VA = "0xC433C8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60000D2")]
	[Address(RVA = "0xC433EC", Offset = "0xC433EC", VA = "0xC433EC")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60000D3")]
	[Address(RVA = "0xC43410", Offset = "0xC43410", VA = "0xC43410")]
	private void CameraUpdate()
	{
	}
}
[Token(Token = "0x2000038")]
public class LocomotionController : MonoBehaviour
{
	[Token(Token = "0x4000111")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OVRCameraRig CameraRig;

	[Token(Token = "0x4000112")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public CapsuleCollider CharacterController;

	[Token(Token = "0x4000113")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public SimpleCapsuleWithStickMovement PlayerController;

	[Token(Token = "0x60000D4")]
	[Address(RVA = "0xBEAC4C", Offset = "0xBEAC4C", VA = "0xBEAC4C")]
	private void Start()
	{
	}

	[Token(Token = "0x60000D5")]
	[Address(RVA = "0xBEAD10", Offset = "0xBEAD10", VA = "0xBEAD10")]
	public LocomotionController()
	{
	}
}
[Token(Token = "0x2000039")]
public class LocomotionTeleport : MonoBehaviour
{
	[Token(Token = "0x200003A")]
	public enum States
	{
		[Token(Token = "0x4000137")]
		Ready,
		[Token(Token = "0x4000138")]
		Aim,
		[Token(Token = "0x4000139")]
		CancelAim,
		[Token(Token = "0x400013A")]
		PreTeleport,
		[Token(Token = "0x400013B")]
		CancelTeleport,
		[Token(Token = "0x400013C")]
		Teleporting,
		[Token(Token = "0x400013D")]
		PostTeleport
	}

	[Token(Token = "0x200003B")]
	public enum TeleportIntentions
	{
		[Token(Token = "0x400013F")]
		None,
		[Token(Token = "0x4000140")]
		Aim,
		[Token(Token = "0x4000141")]
		PreTeleport,
		[Token(Token = "0x4000142")]
		Teleport
	}

	[Token(Token = "0x200003C")]
	public enum AimCollisionTypes
	{
		[Token(Token = "0x4000144")]
		Point,
		[Token(Token = "0x4000145")]
		Sphere,
		[Token(Token = "0x4000146")]
		Capsule
	}

	[Token(Token = "0x200003D")]
	public class AimData
	{
		[Token(Token = "0x4000147")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public RaycastHit TargetHitInfo;

		[Token(Token = "0x4000148")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public bool TargetValid;

		[Token(Token = "0x4000149")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Vector3? Destination;

		[Token(Token = "0x400014A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public float Radius;

		[Token(Token = "0x400014B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9756B0", Offset = "0x9756B0")]
		private List<Vector3> <Points>k__BackingField;

		[Token(Token = "0x1700001B")]
		public List<Vector3> Points
		{
			[Token(Token = "0x600010B")]
			[Address(RVA = "0xBEDFF8", Offset = "0xBEDFF8", VA = "0xBEDFF8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x986E48", Offset = "0x986E48")]
			get
			{
				return null;
			}
			[Token(Token = "0x600010C")]
			[Address(RVA = "0xBEE000", Offset = "0xBEE000", VA = "0xBEE000")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x986E58", Offset = "0x986E58")]
			private set
			{
			}
		}

		[Token(Token = "0x600010A")]
		[Address(RVA = "0xBEDF7C", Offset = "0xBEDF7C", VA = "0xBEDF7C")]
		public AimData()
		{
		}

		[Token(Token = "0x600010D")]
		[Address(RVA = "0xBEE008", Offset = "0xBEE008", VA = "0xBEE008")]
		public void Reset()
		{
		}
	}

	[Token(Token = "0x200003E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x97147C", Offset = "0x97147C")]
	private sealed class <ReadyStateCoroutine>d__52 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400014C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400014D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400014E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x1700001C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000111")]
			[Address(RVA = "0xBEDDBC", Offset = "0xBEDDBC", VA = "0xBEDDBC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700001D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000113")]
			[Address(RVA = "0xBEDE24", Offset = "0xBEDE24", VA = "0xBEDE24", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600010E")]
		[Address(RVA = "0xBEC204", Offset = "0xBEC204", VA = "0xBEC204")]
		[DebuggerHidden]
		public <ReadyStateCoroutine>d__52(int <>1__state)
		{
		}

		[Token(Token = "0x600010F")]
		[Address(RVA = "0xBEDCB4", Offset = "0xBEDCB4", VA = "0xBEDCB4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000110")]
		[Address(RVA = "0xBEDCB8", Offset = "0xBEDCB8", VA = "0xBEDCB8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000112")]
		[Address(RVA = "0xBEDDC4", Offset = "0xBEDDC4", VA = "0xBEDDC4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200003F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x97148C", Offset = "0x97148C")]
	private sealed class <AimStateCoroutine>d__64 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400014F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000150")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000151")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x1700001E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000117")]
			[Address(RVA = "0xBED740", Offset = "0xBED740", VA = "0xBED740", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700001F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000119")]
			[Address(RVA = "0xBED7A8", Offset = "0xBED7A8", VA = "0xBED7A8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000114")]
		[Address(RVA = "0xBEC6F8", Offset = "0xBEC6F8", VA = "0xBEC6F8")]
		[DebuggerHidden]
		public <AimStateCoroutine>d__64(int <>1__state)
		{
		}

		[Token(Token = "0x6000115")]
		[Address(RVA = "0xBED5F0", Offset = "0xBED5F0", VA = "0xBED5F0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000116")]
		[Address(RVA = "0xBED5F4", Offset = "0xBED5F4", VA = "0xBED5F4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000118")]
		[Address(RVA = "0xBED748", Offset = "0xBED748", VA = "0xBED748", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000040")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x97149C", Offset = "0x97149C")]
	private sealed class <CancelAimStateCoroutine>d__68 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000152")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000153")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000154")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x17000020")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600011D")]
			[Address(RVA = "0xBED860", Offset = "0xBED860", VA = "0xBED860", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000021")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600011F")]
			[Address(RVA = "0xBED8C8", Offset = "0xBED8C8", VA = "0xBED8C8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600011A")]
		[Address(RVA = "0xBEC8E8", Offset = "0xBEC8E8", VA = "0xBEC8E8")]
		[DebuggerHidden]
		public <CancelAimStateCoroutine>d__68(int <>1__state)
		{
		}

		[Token(Token = "0x600011B")]
		[Address(RVA = "0xBED7B0", Offset = "0xBED7B0", VA = "0xBED7B0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600011C")]
		[Address(RVA = "0xBED7B4", Offset = "0xBED7B4", VA = "0xBED7B4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600011E")]
		[Address(RVA = "0xBED868", Offset = "0xBED868", VA = "0xBED868", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000041")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9714AC", Offset = "0x9714AC")]
	private sealed class <PreTeleportStateCoroutine>d__72 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000155")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000156")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000157")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x17000022")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000123")]
			[Address(RVA = "0xBEDC44", Offset = "0xBEDC44", VA = "0xBEDC44", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000023")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000125")]
			[Address(RVA = "0xBEDCAC", Offset = "0xBEDCAC", VA = "0xBEDCAC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000120")]
		[Address(RVA = "0xBECAD8", Offset = "0xBECAD8", VA = "0xBECAD8")]
		[DebuggerHidden]
		public <PreTeleportStateCoroutine>d__72(int <>1__state)
		{
		}

		[Token(Token = "0x6000121")]
		[Address(RVA = "0xBEDB60", Offset = "0xBEDB60", VA = "0xBEDB60", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000122")]
		[Address(RVA = "0xBEDB64", Offset = "0xBEDB64", VA = "0xBEDB64", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000124")]
		[Address(RVA = "0xBEDC4C", Offset = "0xBEDC4C", VA = "0xBEDC4C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000042")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9714BC", Offset = "0x9714BC")]
	private sealed class <CancelTeleportStateCoroutine>d__76 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000158")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000159")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400015A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x17000024")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000129")]
			[Address(RVA = "0xBED980", Offset = "0xBED980", VA = "0xBED980", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000025")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600012B")]
			[Address(RVA = "0xBED9E8", Offset = "0xBED9E8", VA = "0xBED9E8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000126")]
		[Address(RVA = "0xBECCC8", Offset = "0xBECCC8", VA = "0xBECCC8")]
		[DebuggerHidden]
		public <CancelTeleportStateCoroutine>d__76(int <>1__state)
		{
		}

		[Token(Token = "0x6000127")]
		[Address(RVA = "0xBED8D0", Offset = "0xBED8D0", VA = "0xBED8D0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000128")]
		[Address(RVA = "0xBED8D4", Offset = "0xBED8D4", VA = "0xBED8D4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600012A")]
		[Address(RVA = "0xBED988", Offset = "0xBED988", VA = "0xBED988", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000043")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9714CC", Offset = "0x9714CC")]
	private sealed class <TeleportingStateCoroutine>d__80 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400015B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400015C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400015D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x17000026")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600012F")]
			[Address(RVA = "0xBEDF0C", Offset = "0xBEDF0C", VA = "0xBEDF0C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000027")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000131")]
			[Address(RVA = "0xBEDF74", Offset = "0xBEDF74", VA = "0xBEDF74", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600012C")]
		[Address(RVA = "0xBECEB8", Offset = "0xBECEB8", VA = "0xBECEB8")]
		[DebuggerHidden]
		public <TeleportingStateCoroutine>d__80(int <>1__state)
		{
		}

		[Token(Token = "0x600012D")]
		[Address(RVA = "0xBEDE2C", Offset = "0xBEDE2C", VA = "0xBEDE2C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600012E")]
		[Address(RVA = "0xBEDE30", Offset = "0xBEDE30", VA = "0xBEDE30", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000130")]
		[Address(RVA = "0xBEDF14", Offset = "0xBEDF14", VA = "0xBEDF14", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000044")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9714DC", Offset = "0x9714DC")]
	private sealed class <PostTeleportStateCoroutine>d__84 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400015E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400015F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000160")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x17000028")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000135")]
			[Address(RVA = "0xBEDAF0", Offset = "0xBEDAF0", VA = "0xBEDAF0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000029")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000137")]
			[Address(RVA = "0xBEDB58", Offset = "0xBEDB58", VA = "0xBEDB58", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000132")]
		[Address(RVA = "0xBED0A8", Offset = "0xBED0A8", VA = "0xBED0A8")]
		[DebuggerHidden]
		public <PostTeleportStateCoroutine>d__84(int <>1__state)
		{
		}

		[Token(Token = "0x6000133")]
		[Address(RVA = "0xBED9F0", Offset = "0xBED9F0", VA = "0xBED9F0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000134")]
		[Address(RVA = "0xBED9F4", Offset = "0xBED9F4", VA = "0xBED9F4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000136")]
		[Address(RVA = "0xBEDAF8", Offset = "0xBEDAF8", VA = "0xBEDAF8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000114")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9752D0", Offset = "0x9752D0")]
	public bool EnableMovementDuringReady;

	[Token(Token = "0x4000115")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x975308", Offset = "0x975308")]
	public bool EnableMovementDuringAim;

	[Token(Token = "0x4000116")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x975340", Offset = "0x975340")]
	public bool EnableMovementDuringPreTeleport;

	[Token(Token = "0x4000117")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x975378", Offset = "0x975378")]
	public bool EnableMovementDuringPostTeleport;

	[Token(Token = "0x4000118")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9753B0", Offset = "0x9753B0")]
	public bool EnableRotationDuringReady;

	[Token(Token = "0x4000119")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9753E8", Offset = "0x9753E8")]
	public bool EnableRotationDuringAim;

	[Token(Token = "0x400011A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x975420", Offset = "0x975420")]
	public bool EnableRotationDuringPreTeleport;

	[Token(Token = "0x400011B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x975458", Offset = "0x975458")]
	public bool EnableRotationDuringPostTeleport;

	[Token(Token = "0x400011C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x975490", Offset = "0x975490")]
	private States <CurrentState>k__BackingField;

	[NonSerialized]
	[Token(Token = "0x400011D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public TeleportAimHandler AimHandler;

	[Token(Token = "0x400011E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9754A0", Offset = "0x9754A0")]
	public TeleportDestination TeleportDestinationPrefab;

	[Token(Token = "0x400011F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9754D8", Offset = "0x9754D8")]
	public int TeleportDestinationLayer;

	[NonSerialized]
	[Token(Token = "0x4000121")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public TeleportInputHandler InputHandler;

	[NonSerialized]
	[Token(Token = "0x4000122")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public TeleportIntentions CurrentIntention;

	[NonSerialized]
	[Token(Token = "0x4000123")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public bool IsPreTeleportRequested;

	[NonSerialized]
	[Token(Token = "0x4000124")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x55")]
	public bool IsTransitioning;

	[NonSerialized]
	[Token(Token = "0x4000125")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x56")]
	public bool IsPostTeleportRequested;

	[Token(Token = "0x4000126")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private TeleportDestination _teleportDestination;

	[Token(Token = "0x4000127")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x975520", Offset = "0x975520")]
	private LocomotionController <LocomotionController>k__BackingField;

	[Token(Token = "0x4000128")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x975530", Offset = "0x975530")]
	public AimCollisionTypes AimCollisionType;

	[Token(Token = "0x4000129")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x975568", Offset = "0x975568")]
	public bool UseCharacterCollisionData;

	[Token(Token = "0x400012A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9755A0", Offset = "0x9755A0")]
	public float AimCollisionRadius;

	[Token(Token = "0x400012B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9755D8", Offset = "0x9755D8")]
	public float AimCollisionHeight;

	[Token(Token = "0x17000018")]
	public States CurrentState
	{
		[Token(Token = "0x60000D8")]
		[Address(RVA = "0xBEB700", Offset = "0xBEB700", VA = "0xBEB700")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9869B4", Offset = "0x9869B4")]
		get
		{
			return default(States);
		}
		[Token(Token = "0x60000D9")]
		[Address(RVA = "0xBEB708", Offset = "0xBEB708", VA = "0xBEB708")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9869C4", Offset = "0x9869C4")]
		private set
		{
		}
	}

	[Token(Token = "0x17000019")]
	public Quaternion DestinationRotation
	{
		[Token(Token = "0x60000DD")]
		[Address(RVA = "0xBEB938", Offset = "0xBEB938", VA = "0xBEB938")]
		get
		{
			return default(Quaternion);
		}
	}

	[Token(Token = "0x1700001A")]
	public LocomotionController LocomotionController
	{
		[Token(Token = "0x60000DE")]
		[Address(RVA = "0xBEB960", Offset = "0xBEB960", VA = "0xBEB960")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9869F4", Offset = "0x9869F4")]
		get
		{
			return null;
		}
		[Token(Token = "0x60000DF")]
		[Address(RVA = "0xBEB968", Offset = "0xBEB968", VA = "0xBEB968")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x986A04", Offset = "0x986A04")]
		private set
		{
		}
	}

	[Token(Token = "0x14000001")]
	public event Action<bool, Vector3?, Quaternion?, Quaternion?> UpdateTeleportDestination
	{
		[Token(Token = "0x60000DA")]
		[Address(RVA = "0xBEB710", Offset = "0xBEB710", VA = "0xBEB710")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9869D4", Offset = "0x9869D4")]
		add
		{
		}
		[Token(Token = "0x60000DB")]
		[Address(RVA = "0xBEB7B4", Offset = "0xBEB7B4", VA = "0xBEB7B4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9869E4", Offset = "0x9869E4")]
		remove
		{
		}
	}

	[Token(Token = "0x14000002")]
	public event Action EnterStateReady
	{
		[Token(Token = "0x60000E9")]
		[Address(RVA = "0xBEC0BC", Offset = "0xBEC0BC", VA = "0xBEC0BC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x986A4C", Offset = "0x986A4C")]
		add
		{
		}
		[Token(Token = "0x60000EA")]
		[Address(RVA = "0xBEC160", Offset = "0xBEC160", VA = "0xBEC160")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x986A5C", Offset = "0x986A5C")]
		remove
		{
		}
	}

	[Token(Token = "0x14000003")]
	public event Action EnterStateAim
	{
		[Token(Token = "0x60000EC")]
		[Address(RVA = "0xBEC230", Offset = "0xBEC230", VA = "0xBEC230")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x986AD0", Offset = "0x986AD0")]
		add
		{
		}
		[Token(Token = "0x60000ED")]
		[Address(RVA = "0xBEC2D4", Offset = "0xBEC2D4", VA = "0xBEC2D4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x986AE0", Offset = "0x986AE0")]
		remove
		{
		}
	}

	[Token(Token = "0x14000004")]
	public event Action<AimData> UpdateAimData
	{
		[Token(Token = "0x60000EE")]
		[Address(RVA = "0xBEC378", Offset = "0xBEC378", VA = "0xBEC378")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x986AF0", Offset = "0x986AF0")]
		add
		{
		}
		[Token(Token = "0x60000EF")]
		[Address(RVA = "0xBEC41C", Offset = "0xBEC41C", VA = "0xBEC41C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x986B00", Offset = "0x986B00")]
		remove
		{
		}
	}

	[Token(Token = "0x14000005")]
	public event Action ExitStateAim
	{
		[Token(Token = "0x60000F1")]
		[Address(RVA = "0xBEC534", Offset = "0xBEC534", VA = "0xBEC534")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x986B10", Offset = "0x986B10")]
		add
		{
		}
		[Token(Token = "0x60000F2")]
		[Address(RVA = "0xBEC5D8", Offset = "0xBEC5D8", VA = "0xBEC5D8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x986B20", Offset = "0x986B20")]
		remove
		{
		}
	}

	[Token(Token = "0x14000006")]
	public event Action EnterStateCancelAim
	{
		[Token(Token = "0x60000F4")]
		[Address(RVA = "0xBEC724", Offset = "0xBEC724", VA = "0xBEC724")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x986B94", Offset = "0x986B94")]
		add
		{
		}
		[Token(Token = "0x60000F5")]
		[Address(RVA = "0xBEC7C8", Offset = "0xBEC7C8", VA = "0xBEC7C8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x986BA4", Offset = "0x986BA4")]
		remove
		{
		}
	}

	[Token(Token = "0x14000007")]
	public event Action EnterStatePreTeleport
	{
		[Token(Token = "0x60000F7")]
		[Address(RVA = "0xBEC914", Offset = "0xBEC914", VA = "0xBEC914")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x986C18", Offset = "0x986C18")]
		add
		{
		}
		[Token(Token = "0x60000F8")]
		[Address(RVA = "0xBEC9B8", Offset = "0xBEC9B8", VA = "0xBEC9B8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x986C28", Offset = "0x986C28")]
		remove
		{
		}
	}

	[Token(Token = "0x14000008")]
	public event Action EnterStateCancelTeleport
	{
		[Token(Token = "0x60000FA")]
		[Address(RVA = "0xBECB04", Offset = "0xBECB04", VA = "0xBECB04")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x986C9C", Offset = "0x986C9C")]
		add
		{
		}
		[Token(Token = "0x60000FB")]
		[Address(RVA = "0xBECBA8", Offset = "0xBECBA8", VA = "0xBECBA8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x986CAC", Offset = "0x986CAC")]
		remove
		{
		}
	}

	[Token(Token = "0x14000009")]
	public event Action EnterStateTeleporting
	{
		[Token(Token = "0x60000FD")]
		[Address(RVA = "0xBECCF4", Offset = "0xBECCF4", VA = "0xBECCF4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x986D20", Offset = "0x986D20")]
		add
		{
		}
		[Token(Token = "0x60000FE")]
		[Address(RVA = "0xBECD98", Offset = "0xBECD98", VA = "0xBECD98")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x986D30", Offset = "0x986D30")]
		remove
		{
		}
	}

	[Token(Token = "0x1400000A")]
	public event Action EnterStatePostTeleport
	{
		[Token(Token = "0x6000100")]
		[Address(RVA = "0xBECEE4", Offset = "0xBECEE4", VA = "0xBECEE4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x986DA4", Offset = "0x986DA4")]
		add
		{
		}
		[Token(Token = "0x6000101")]
		[Address(RVA = "0xBECF88", Offset = "0xBECF88", VA = "0xBECF88")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x986DB4", Offset = "0x986DB4")]
		remove
		{
		}
	}

	[Token(Token = "0x1400000B")]
	public event Action<Transform, Vector3, Quaternion> Teleported
	{
		[Token(Token = "0x6000103")]
		[Address(RVA = "0xBED0D4", Offset = "0xBED0D4", VA = "0xBED0D4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x986E28", Offset = "0x986E28")]
		add
		{
		}
		[Token(Token = "0x6000104")]
		[Address(RVA = "0xBED178", Offset = "0xBED178", VA = "0xBED178")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x986E38", Offset = "0x986E38")]
		remove
		{
		}
	}

	[Token(Token = "0x60000D6")]
	[Address(RVA = "0xBEB3D0", Offset = "0xBEB3D0", VA = "0xBEB3D0")]
	public void EnableMovement(bool ready, bool aim, bool pre, bool post)
	{
	}

	[Token(Token = "0x60000D7")]
	[Address(RVA = "0xBEB3F4", Offset = "0xBEB3F4", VA = "0xBEB3F4")]
	public void EnableRotation(bool ready, bool aim, bool pre, bool post)
	{
	}

	[Token(Token = "0x60000DC")]
	[Address(RVA = "0xBEB858", Offset = "0xBEB858", VA = "0xBEB858")]
	public void OnUpdateTeleportDestination(bool isValidDestination, Vector3? position, Quaternion? rotation, Quaternion? landingRotation)
	{
	}

	[Token(Token = "0x60000E0")]
	[Address(RVA = "0xBEB970", Offset = "0xBEB970", VA = "0xBEB970")]
	public bool AimCollisionTest(Vector3 start, Vector3 end, LayerMask aimCollisionLayerMask, out RaycastHit hitInfo)
	{
		return default(bool);
	}

	[Token(Token = "0x60000E1")]
	[Address(RVA = "0xBEBCC8", Offset = "0xBEBCC8", VA = "0xBEBCC8")]
	[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x986A14", Offset = "0x986A14")]
	protected void LogState(string msg)
	{
	}

	[Token(Token = "0x60000E2")]
	[Address(RVA = "0xBEBD80", Offset = "0xBEBD80", VA = "0xBEBD80")]
	protected void CreateNewTeleportDestination()
	{
	}

	[Token(Token = "0x60000E3")]
	[Address(RVA = "0xBEBE78", Offset = "0xBEBE78", VA = "0xBEBE78")]
	private void DeactivateDestination()
	{
	}

	[Token(Token = "0x60000E4")]
	[Address(RVA = "0xBEBE94", Offset = "0xBEBE94", VA = "0xBEBE94")]
	public void RecycleTeleportDestination(TeleportDestination oldDestination)
	{
	}

	[Token(Token = "0x60000E5")]
	[Address(RVA = "0xBEBF5C", Offset = "0xBEBF5C", VA = "0xBEBF5C")]
	private void EnableMotion(bool enableLinear, bool enableRotation)
	{
	}

	[Token(Token = "0x60000E6")]
	[Address(RVA = "0xBEBFA0", Offset = "0xBEBFA0", VA = "0xBEBFA0")]
	private void Awake()
	{
	}

	[Token(Token = "0x60000E7")]
	[Address(RVA = "0xBEC008", Offset = "0xBEC008", VA = "0xBEC008", Slot = "4")]
	public virtual void OnEnable()
	{
	}

	[Token(Token = "0x60000E8")]
	[Address(RVA = "0xBEC0B4", Offset = "0xBEC0B4", VA = "0xBEC0B4", Slot = "5")]
	public virtual void OnDisable()
	{
	}

	[Token(Token = "0x60000EB")]
	[Address(RVA = "0xBEC038", Offset = "0xBEC038", VA = "0xBEC038")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x986A6C", Offset = "0x986A6C")]
	protected IEnumerator ReadyStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x60000F0")]
	[Address(RVA = "0xBEC4C0", Offset = "0xBEC4C0", VA = "0xBEC4C0")]
	public void OnUpdateAimData(AimData aimData)
	{
	}

	[Token(Token = "0x60000F3")]
	[Address(RVA = "0xBEC67C", Offset = "0xBEC67C", VA = "0xBEC67C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x986B30", Offset = "0x986B30")]
	protected IEnumerator AimStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x60000F6")]
	[Address(RVA = "0xBEC86C", Offset = "0xBEC86C", VA = "0xBEC86C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x986BB4", Offset = "0x986BB4")]
	protected IEnumerator CancelAimStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x60000F9")]
	[Address(RVA = "0xBECA5C", Offset = "0xBECA5C", VA = "0xBECA5C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x986C38", Offset = "0x986C38")]
	protected IEnumerator PreTeleportStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x60000FC")]
	[Address(RVA = "0xBECC4C", Offset = "0xBECC4C", VA = "0xBECC4C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x986CBC", Offset = "0x986CBC")]
	protected IEnumerator CancelTeleportStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x60000FF")]
	[Address(RVA = "0xBECE3C", Offset = "0xBECE3C", VA = "0xBECE3C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x986D40", Offset = "0x986D40")]
	protected IEnumerator TeleportingStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000102")]
	[Address(RVA = "0xBED02C", Offset = "0xBED02C", VA = "0xBED02C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x986DC4", Offset = "0x986DC4")]
	protected IEnumerator PostTeleportStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000105")]
	[Address(RVA = "0xBED21C", Offset = "0xBED21C", VA = "0xBED21C")]
	public void DoTeleport()
	{
	}

	[Token(Token = "0x6000106")]
	[Address(RVA = "0xBED360", Offset = "0xBED360", VA = "0xBED360")]
	public Vector3 GetCharacterPosition()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000107")]
	[Address(RVA = "0xBED394", Offset = "0xBED394", VA = "0xBED394")]
	public Quaternion GetHeadRotationY()
	{
		return default(Quaternion);
	}

	[Token(Token = "0x6000108")]
	[Address(RVA = "0xBED4B4", Offset = "0xBED4B4", VA = "0xBED4B4")]
	public void DoWarp(Vector3 startPos, float positionPercent)
	{
	}

	[Token(Token = "0x6000109")]
	[Address(RVA = "0xBED5E0", Offset = "0xBED5E0", VA = "0xBED5E0")]
	public LocomotionTeleport()
	{
	}
}
[Token(Token = "0x2000045")]
public class SimpleCapsuleWithStickMovement : MonoBehaviour
{
	[Token(Token = "0x4000161")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool EnableLinearMovement;

	[Token(Token = "0x4000162")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool EnableRotation;

	[Token(Token = "0x4000163")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	public bool HMDRotatesPlayer;

	[Token(Token = "0x4000164")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
	public bool RotationEitherThumbstick;

	[Token(Token = "0x4000165")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float RotationAngle;

	[Token(Token = "0x4000166")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float Speed;

	[Token(Token = "0x4000167")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OVRCameraRig CameraRig;

	[Token(Token = "0x4000168")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool ReadyToSnapTurn;

	[Token(Token = "0x4000169")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Rigidbody _rigidbody;

	[Token(Token = "0x1400000C")]
	public event Action CameraUpdated
	{
		[Token(Token = "0x6000138")]
		[Address(RVA = "0xCC65A8", Offset = "0xCC65A8", VA = "0xCC65A8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x987098", Offset = "0x987098")]
		add
		{
		}
		[Token(Token = "0x6000139")]
		[Address(RVA = "0xCC664C", Offset = "0xCC664C", VA = "0xCC664C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9870A8", Offset = "0x9870A8")]
		remove
		{
		}
	}

	[Token(Token = "0x1400000D")]
	public event Action PreCharacterMove
	{
		[Token(Token = "0x600013A")]
		[Address(RVA = "0xCC66F0", Offset = "0xCC66F0", VA = "0xCC66F0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9870B8", Offset = "0x9870B8")]
		add
		{
		}
		[Token(Token = "0x600013B")]
		[Address(RVA = "0xCC6794", Offset = "0xCC6794", VA = "0xCC6794")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9870C8", Offset = "0x9870C8")]
		remove
		{
		}
	}

	[Token(Token = "0x600013C")]
	[Address(RVA = "0xCC6838", Offset = "0xCC6838", VA = "0xCC6838")]
	private void Awake()
	{
	}

	[Token(Token = "0x600013D")]
	[Address(RVA = "0xCC6910", Offset = "0xCC6910", VA = "0xCC6910")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x600013E")]
	[Address(RVA = "0xCC6984", Offset = "0xCC6984", VA = "0xCC6984")]
	private void RotatePlayerToHMD()
	{
	}

	[Token(Token = "0x600013F")]
	[Address(RVA = "0xCC6AF4", Offset = "0xCC6AF4", VA = "0xCC6AF4")]
	private void StickMovement()
	{
	}

	[Token(Token = "0x6000140")]
	[Address(RVA = "0xCC6DD8", Offset = "0xCC6DD8", VA = "0xCC6DD8")]
	private void SnapTurn()
	{
	}

	[Token(Token = "0x6000141")]
	[Address(RVA = "0xCC6FC8", Offset = "0xCC6FC8", VA = "0xCC6FC8")]
	public SimpleCapsuleWithStickMovement()
	{
	}
}
[Token(Token = "0x2000046")]
public abstract class TeleportAimHandler : TeleportSupport
{
	[Token(Token = "0x6000142")]
	[Address(RVA = "0xE275F8", Offset = "0xE275F8", VA = "0xE275F8", Slot = "4")]
	protected override void OnEnable()
	{
	}

	[Token(Token = "0x6000143")]
	[Address(RVA = "0xE2769C", Offset = "0xE2769C", VA = "0xE2769C", Slot = "5")]
	protected override void OnDisable()
	{
	}

	[Token(Token = "0x6000144")]
	public abstract void GetPoints(List<Vector3> points);

	[Token(Token = "0x6000145")]
	[Address(RVA = "0xE27790", Offset = "0xE27790", VA = "0xE27790")]
	protected TeleportAimHandler()
	{
	}
}
[Token(Token = "0x2000047")]
public class TeleportAimHandlerLaser : TeleportAimHandler
{
	[Token(Token = "0x400016C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9756E0", Offset = "0x9756E0")]
	public float Range;

	[Token(Token = "0x6000146")]
	[Address(RVA = "0xE277A0", Offset = "0xE277A0", VA = "0xE277A0", Slot = "8")]
	public override void GetPoints(List<Vector3> points)
	{
	}

	[Token(Token = "0x6000147")]
	[Address(RVA = "0xE278FC", Offset = "0xE278FC", VA = "0xE278FC")]
	public TeleportAimHandlerLaser()
	{
	}
}
[Token(Token = "0x2000048")]
public class TeleportAimHandlerParabolic : TeleportAimHandler
{
	[Token(Token = "0x400016D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x975718", Offset = "0x975718")]
	public float Range;

	[Token(Token = "0x400016E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x975750", Offset = "0x975750")]
	public float MinimumElevation;

	[Token(Token = "0x400016F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x975788", Offset = "0x975788")]
	public float Gravity;

	[Token(Token = "0x4000170")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9757C0", Offset = "0x9757C0")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9757C0", Offset = "0x9757C0")]
	public float AimVelocity;

	[Token(Token = "0x4000171")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x97581C", Offset = "0x97581C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x97581C", Offset = "0x97581C")]
	public float AimStep;

	[Token(Token = "0x6000148")]
	[Address(RVA = "0xE2790C", Offset = "0xE2790C", VA = "0xE2790C", Slot = "8")]
	public override void GetPoints(List<Vector3> points)
	{
	}

	[Token(Token = "0x6000149")]
	[Address(RVA = "0xE27B58", Offset = "0xE27B58", VA = "0xE27B58")]
	public TeleportAimHandlerParabolic()
	{
	}
}
[Token(Token = "0x2000049")]
public class TeleportAimVisualLaser : TeleportSupport
{
	[Token(Token = "0x4000172")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x975874", Offset = "0x975874")]
	public LineRenderer LaserPrefab;

	[Token(Token = "0x4000173")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private readonly Action _enterAimStateAction;

	[Token(Token = "0x4000174")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private readonly Action _exitAimStateAction;

	[Token(Token = "0x4000175")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private readonly Action<LocomotionTeleport.AimData> _updateAimDataAction;

	[Token(Token = "0x4000176")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private LineRenderer _lineRenderer;

	[Token(Token = "0x4000177")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Vector3[] _linePoints;

	[Token(Token = "0x600014A")]
	[Address(RVA = "0xE27B6C", Offset = "0xE27B6C", VA = "0xE27B6C")]
	public TeleportAimVisualLaser()
	{
	}

	[Token(Token = "0x600014B")]
	[Address(RVA = "0xE27C70", Offset = "0xE27C70", VA = "0xE27C70")]
	private void EnterAimState()
	{
	}

	[Token(Token = "0x600014C")]
	[Address(RVA = "0xE27CA0", Offset = "0xE27CA0", VA = "0xE27CA0")]
	private void ExitAimState()
	{
	}

	[Token(Token = "0x600014D")]
	[Address(RVA = "0xE27CD0", Offset = "0xE27CD0", VA = "0xE27CD0")]
	private void Awake()
	{
	}

	[Token(Token = "0x600014E")]
	[Address(RVA = "0xE27D78", Offset = "0xE27D78", VA = "0xE27D78", Slot = "6")]
	protected override void AddEventHandlers()
	{
	}

	[Token(Token = "0x600014F")]
	[Address(RVA = "0xE27DE4", Offset = "0xE27DE4", VA = "0xE27DE4", Slot = "7")]
	protected override void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x6000150")]
	[Address(RVA = "0xE27E4C", Offset = "0xE27E4C", VA = "0xE27E4C")]
	private void UpdateAimData(LocomotionTeleport.AimData obj)
	{
	}
}
[Token(Token = "0x200004A")]
public class TeleportDestination : MonoBehaviour
{
	[Token(Token = "0x4000178")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9758AC", Offset = "0x9758AC")]
	private bool <IsValidDestination>k__BackingField;

	[Token(Token = "0x4000179")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9758BC", Offset = "0x9758BC")]
	public Transform PositionIndicator;

	[Token(Token = "0x400017A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9758F4", Offset = "0x9758F4")]
	public Transform OrientationIndicator;

	[Token(Token = "0x400017B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x97592C", Offset = "0x97592C")]
	public Quaternion LandingRotation;

	[NonSerialized]
	[Token(Token = "0x400017C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public LocomotionTeleport LocomotionTeleport;

	[NonSerialized]
	[Token(Token = "0x400017D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public LocomotionTeleport.States TeleportState;

	[Token(Token = "0x400017E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private readonly Action<bool, Vector3?, Quaternion?, Quaternion?> _updateTeleportDestinationAction;

	[Token(Token = "0x400017F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool _eventsActive;

	[Token(Token = "0x1700002A")]
	public bool IsValidDestination
	{
		[Token(Token = "0x6000151")]
		[Address(RVA = "0xE27F68", Offset = "0xE27F68", VA = "0xE27F68")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9870D8", Offset = "0x9870D8")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000152")]
		[Address(RVA = "0xE27F70", Offset = "0xE27F70", VA = "0xE27F70")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9870E8", Offset = "0x9870E8")]
		private set
		{
		}
	}

	[Token(Token = "0x1400000E")]
	public event Action<TeleportDestination> Deactivated
	{
		[Token(Token = "0x6000157")]
		[Address(RVA = "0xE28128", Offset = "0xE28128", VA = "0xE28128")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9870F8", Offset = "0x9870F8")]
		add
		{
		}
		[Token(Token = "0x6000158")]
		[Address(RVA = "0xE281CC", Offset = "0xE281CC", VA = "0xE281CC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x987108", Offset = "0x987108")]
		remove
		{
		}
	}

	[Token(Token = "0x6000153")]
	[Address(RVA = "0xE27F7C", Offset = "0xE27F7C", VA = "0xE27F7C")]
	private TeleportDestination()
	{
	}

	[Token(Token = "0x6000154")]
	[Address(RVA = "0xE2800C", Offset = "0xE2800C", VA = "0xE2800C")]
	public void OnEnable()
	{
	}

	[Token(Token = "0x6000155")]
	[Address(RVA = "0xE280E4", Offset = "0xE280E4", VA = "0xE280E4")]
	private void TryDisableEventHandlers()
	{
	}

	[Token(Token = "0x6000156")]
	[Address(RVA = "0xE28124", Offset = "0xE28124", VA = "0xE28124")]
	public void OnDisable()
	{
	}

	[Token(Token = "0x6000159")]
	[Address(RVA = "0xE28270", Offset = "0xE28270", VA = "0xE28270")]
	public void OnDeactivated()
	{
	}

	[Token(Token = "0x600015A")]
	[Address(RVA = "0xE282D8", Offset = "0xE282D8", VA = "0xE282D8")]
	public void Recycle()
	{
	}

	[Token(Token = "0x600015B")]
	[Address(RVA = "0xE282F8", Offset = "0xE282F8", VA = "0xE282F8", Slot = "4")]
	public virtual void UpdateTeleportDestination(bool isValidDestination, Vector3? position, Quaternion? rotation, Quaternion? landingRotation)
	{
	}
}
[Token(Token = "0x200004B")]
public abstract class TeleportInputHandler : TeleportSupport
{
	[Token(Token = "0x200004C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9714EC", Offset = "0x9714EC")]
	private sealed class <TeleportReadyCoroutine>d__5 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000183")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000184")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000185")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportInputHandler <>4__this;

		[Token(Token = "0x1700002B")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000168")]
			[Address(RVA = "0xE28A10", Offset = "0xE28A10", VA = "0xE28A10", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700002C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600016A")]
			[Address(RVA = "0xE28A78", Offset = "0xE28A78", VA = "0xE28A78", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000165")]
		[Address(RVA = "0xE28738", Offset = "0xE28738", VA = "0xE28738")]
		[DebuggerHidden]
		public <TeleportReadyCoroutine>d__5(int <>1__state)
		{
		}

		[Token(Token = "0x6000166")]
		[Address(RVA = "0xE28974", Offset = "0xE28974", VA = "0xE28974", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000167")]
		[Address(RVA = "0xE28978", Offset = "0xE28978", VA = "0xE28978", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000169")]
		[Address(RVA = "0xE28A18", Offset = "0xE28A18", VA = "0xE28A18", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200004D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9714FC", Offset = "0x9714FC")]
	private sealed class <TeleportAimCoroutine>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000186")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000187")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000188")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportInputHandler <>4__this;

		[Token(Token = "0x1700002D")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600016E")]
			[Address(RVA = "0xE28904", Offset = "0xE28904", VA = "0xE28904", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700002E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000170")]
			[Address(RVA = "0xE2896C", Offset = "0xE2896C", VA = "0xE2896C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600016B")]
		[Address(RVA = "0xE287E0", Offset = "0xE287E0", VA = "0xE287E0")]
		[DebuggerHidden]
		public <TeleportAimCoroutine>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x600016C")]
		[Address(RVA = "0xE28864", Offset = "0xE28864", VA = "0xE28864", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600016D")]
		[Address(RVA = "0xE28868", Offset = "0xE28868", VA = "0xE28868", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600016F")]
		[Address(RVA = "0xE2890C", Offset = "0xE2890C", VA = "0xE2890C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000181")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private readonly Action _startReadyAction;

	[Token(Token = "0x4000182")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private readonly Action _startAimAction;

	[Token(Token = "0x600015C")]
	[Address(RVA = "0xE284D8", Offset = "0xE284D8", VA = "0xE284D8")]
	protected TeleportInputHandler()
	{
	}

	[Token(Token = "0x600015D")]
	[Address(RVA = "0xE28598", Offset = "0xE28598", VA = "0xE28598", Slot = "6")]
	protected override void AddEventHandlers()
	{
	}

	[Token(Token = "0x600015E")]
	[Address(RVA = "0xE285F8", Offset = "0xE285F8", VA = "0xE285F8", Slot = "7")]
	protected override void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x600015F")]
	[Address(RVA = "0xE286BC", Offset = "0xE286BC", VA = "0xE286BC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x987118", Offset = "0x987118")]
	private IEnumerator TeleportReadyCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000160")]
	[Address(RVA = "0xE28764", Offset = "0xE28764", VA = "0xE28764")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x98717C", Offset = "0x98717C")]
	private IEnumerator TeleportAimCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000161")]
	public abstract LocomotionTeleport.TeleportIntentions GetIntention();

	[Token(Token = "0x6000162")]
	public abstract void GetAimData(out Ray aimRay);

	[Token(Token = "0x6000163")]
	[Address(RVA = "0xE2880C", Offset = "0xE2880C", VA = "0xE2880C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9871E0", Offset = "0x9871E0")]
	private void <.ctor>b__2_0()
	{
	}

	[Token(Token = "0x6000164")]
	[Address(RVA = "0xE28838", Offset = "0xE28838", VA = "0xE28838")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9871F0", Offset = "0x9871F0")]
	private void <.ctor>b__2_1()
	{
	}
}
[Token(Token = "0x200004E")]
public class TeleportInputHandlerHMD : TeleportInputHandler
{
	[Token(Token = "0x4000189")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x975974", Offset = "0x975974")]
	private Transform <Pointer>k__BackingField;

	[Token(Token = "0x400018A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x975984", Offset = "0x975984")]
	public OVRInput.RawButton AimButton;

	[Token(Token = "0x400018B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9759BC", Offset = "0x9759BC")]
	public OVRInput.RawButton TeleportButton;

	[Token(Token = "0x400018C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9759F4", Offset = "0x9759F4")]
	public bool FastTeleport;

	[Token(Token = "0x1700002F")]
	public Transform Pointer
	{
		[Token(Token = "0x6000171")]
		[Address(RVA = "0xE28A80", Offset = "0xE28A80", VA = "0xE28A80")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9872A0", Offset = "0x9872A0")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000172")]
		[Address(RVA = "0xE28A88", Offset = "0xE28A88", VA = "0xE28A88")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9872B0", Offset = "0x9872B0")]
		private set
		{
		}
	}

	[Token(Token = "0x6000173")]
	[Address(RVA = "0xE28A90", Offset = "0xE28A90", VA = "0xE28A90", Slot = "8")]
	public override LocomotionTeleport.TeleportIntentions GetIntention()
	{
		return default(LocomotionTeleport.TeleportIntentions);
	}

	[Token(Token = "0x6000174")]
	[Address(RVA = "0xE28BEC", Offset = "0xE28BEC", VA = "0xE28BEC", Slot = "9")]
	public override void GetAimData(out Ray aimRay)
	{
	}

	[Token(Token = "0x6000175")]
	[Address(RVA = "0xE28CA4", Offset = "0xE28CA4", VA = "0xE28CA4")]
	public TeleportInputHandlerHMD()
	{
	}
}
[Token(Token = "0x200004F")]
public class TeleportInputHandlerTouch : TeleportInputHandlerHMD
{
	[Token(Token = "0x2000050")]
	public enum InputModes
	{
		[Token(Token = "0x4000197")]
		CapacitiveButtonForAimAndTeleport,
		[Token(Token = "0x4000198")]
		SeparateButtonsForAimAndTeleport,
		[Token(Token = "0x4000199")]
		ThumbstickTeleport,
		[Token(Token = "0x400019A")]
		ThumbstickTeleportForwardBackOnly
	}

	[Token(Token = "0x2000051")]
	public enum AimCapTouchButtons
	{
		[Token(Token = "0x400019C")]
		A,
		[Token(Token = "0x400019D")]
		B,
		[Token(Token = "0x400019E")]
		LeftTrigger,
		[Token(Token = "0x400019F")]
		LeftThumbstick,
		[Token(Token = "0x40001A0")]
		RightTrigger,
		[Token(Token = "0x40001A1")]
		RightThumbstick,
		[Token(Token = "0x40001A2")]
		X,
		[Token(Token = "0x40001A3")]
		Y
	}

	[Token(Token = "0x400018D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Transform LeftHand;

	[Token(Token = "0x400018E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Transform RightHand;

	[Token(Token = "0x400018F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x975A2C", Offset = "0x975A2C")]
	public InputModes InputMode;

	[Token(Token = "0x4000190")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private readonly OVRInput.RawButton[] _rawButtons;

	[Token(Token = "0x4000191")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private readonly OVRInput.RawTouch[] _rawTouch;

	[Token(Token = "0x4000192")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x975A64", Offset = "0x975A64")]
	public OVRInput.Controller AimingController;

	[Token(Token = "0x4000193")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private OVRInput.Controller InitiatingController;

	[Token(Token = "0x4000194")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x975A9C", Offset = "0x975A9C")]
	public AimCapTouchButtons CapacitiveAimAndTeleportButton;

	[Token(Token = "0x4000195")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x975AD4", Offset = "0x975AD4")]
	public float ThumbstickTeleportThreshold;

	[Token(Token = "0x6000176")]
	[Address(RVA = "0xE28CA8", Offset = "0xE28CA8", VA = "0xE28CA8", Slot = "8")]
	public override LocomotionTeleport.TeleportIntentions GetIntention()
	{
		return default(LocomotionTeleport.TeleportIntentions);
	}

	[Token(Token = "0x6000177")]
	[Address(RVA = "0xE290F0", Offset = "0xE290F0", VA = "0xE290F0", Slot = "9")]
	public override void GetAimData(out Ray aimRay)
	{
	}

	[Token(Token = "0x6000178")]
	[Address(RVA = "0xE291B0", Offset = "0xE291B0", VA = "0xE291B0")]
	public TeleportInputHandlerTouch()
	{
	}
}
[Token(Token = "0x2000052")]
public abstract class TeleportOrientationHandler : TeleportSupport
{
	[Token(Token = "0x2000053")]
	public enum OrientationModes
	{
		[Token(Token = "0x40001A8")]
		HeadRelative,
		[Token(Token = "0x40001A9")]
		ForwardFacing
	}

	[Token(Token = "0x2000054")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x97150C", Offset = "0x97150C")]
	private sealed class <UpdateOrientationCoroutine>d__7 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40001AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40001AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40001AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportOrientationHandler <>4__this;

		[Token(Token = "0x17000030")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000185")]
			[Address(RVA = "0xE29684", Offset = "0xE29684", VA = "0xE29684", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000031")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000187")]
			[Address(RVA = "0xE296EC", Offset = "0xE296EC", VA = "0xE296EC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000182")]
		[Address(RVA = "0xE29454", Offset = "0xE29454", VA = "0xE29454")]
		[DebuggerHidden]
		public <UpdateOrientationCoroutine>d__7(int <>1__state)
		{
		}

		[Token(Token = "0x6000183")]
		[Address(RVA = "0xE295D0", Offset = "0xE295D0", VA = "0xE295D0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000184")]
		[Address(RVA = "0xE295D4", Offset = "0xE295D4", VA = "0xE295D4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000186")]
		[Address(RVA = "0xE2968C", Offset = "0xE2968C", VA = "0xE2968C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40001A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private readonly Action _updateOrientationAction;

	[Token(Token = "0x40001A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private readonly Action<LocomotionTeleport.AimData> _updateAimDataAction;

	[Token(Token = "0x40001A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	protected LocomotionTeleport.AimData AimData;

	[Token(Token = "0x6000179")]
	[Address(RVA = "0xE29274", Offset = "0xE29274", VA = "0xE29274")]
	protected TeleportOrientationHandler()
	{
	}

	[Token(Token = "0x600017A")]
	[Address(RVA = "0xE2933C", Offset = "0xE2933C", VA = "0xE2933C")]
	private void UpdateAimData(LocomotionTeleport.AimData aimData)
	{
	}

	[Token(Token = "0x600017B")]
	[Address(RVA = "0xE29344", Offset = "0xE29344", VA = "0xE29344", Slot = "6")]
	protected override void AddEventHandlers()
	{
	}

	[Token(Token = "0x600017C")]
	[Address(RVA = "0xE29390", Offset = "0xE29390", VA = "0xE29390", Slot = "7")]
	protected override void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x600017D")]
	[Address(RVA = "0xE293D8", Offset = "0xE293D8", VA = "0xE293D8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9872C0", Offset = "0x9872C0")]
	private IEnumerator UpdateOrientationCoroutine()
	{
		return null;
	}

	[Token(Token = "0x600017E")]
	protected abstract void InitializeTeleportDestination();

	[Token(Token = "0x600017F")]
	protected abstract void UpdateTeleportDestination();

	[Token(Token = "0x6000180")]
	[Address(RVA = "0xE29480", Offset = "0xE29480", VA = "0xE29480")]
	protected Quaternion GetLandingOrientation(OrientationModes mode, Quaternion rotation)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x6000181")]
	[Address(RVA = "0xE295A4", Offset = "0xE295A4", VA = "0xE295A4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x987324", Offset = "0x987324")]
	private void <.ctor>b__3_0()
	{
	}
}
[Token(Token = "0x2000055")]
public class TeleportOrientationHandler360 : TeleportOrientationHandler
{
	[Token(Token = "0x6000188")]
	[Address(RVA = "0xE296F4", Offset = "0xE296F4", VA = "0xE296F4", Slot = "8")]
	protected override void InitializeTeleportDestination()
	{
	}

	[Token(Token = "0x6000189")]
	[Address(RVA = "0xE296F8", Offset = "0xE296F8", VA = "0xE296F8", Slot = "9")]
	protected override void UpdateTeleportDestination()
	{
	}

	[Token(Token = "0x600018A")]
	[Address(RVA = "0xE29774", Offset = "0xE29774", VA = "0xE29774")]
	public TeleportOrientationHandler360()
	{
	}
}
[Token(Token = "0x2000056")]
public class TeleportOrientationHandlerHMD : TeleportOrientationHandler
{
	[Token(Token = "0x40001AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x975B0C", Offset = "0x975B0C")]
	public OrientationModes OrientationMode;

	[Token(Token = "0x40001AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x975B44", Offset = "0x975B44")]
	public bool UpdateOrientationDuringAim;

	[Token(Token = "0x40001AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x975B7C", Offset = "0x975B7C")]
	public float AimDistanceThreshold;

	[Token(Token = "0x40001B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x975BB4", Offset = "0x975BB4")]
	public float AimDistanceMaxRange;

	[Token(Token = "0x40001B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Quaternion _initialRotation;

	[Token(Token = "0x600018B")]
	[Address(RVA = "0xE29778", Offset = "0xE29778", VA = "0xE29778", Slot = "8")]
	protected override void InitializeTeleportDestination()
	{
	}

	[Token(Token = "0x600018C")]
	[Address(RVA = "0xE297E8", Offset = "0xE297E8", VA = "0xE297E8", Slot = "9")]
	protected override void UpdateTeleportDestination()
	{
	}

	[Token(Token = "0x600018D")]
	[Address(RVA = "0xE29C60", Offset = "0xE29C60", VA = "0xE29C60")]
	public TeleportOrientationHandlerHMD()
	{
	}
}
[Token(Token = "0x2000057")]
public class TeleportOrientationHandlerThumbstick : TeleportOrientationHandler
{
	[Token(Token = "0x40001B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x975BEC", Offset = "0x975BEC")]
	public OrientationModes OrientationMode;

	[Token(Token = "0x40001B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x975C24", Offset = "0x975C24")]
	public OVRInput.Controller Thumbstick;

	[Token(Token = "0x40001B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x975C5C", Offset = "0x975C5C")]
	public float RotateStickThreshold;

	[Token(Token = "0x40001B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private Quaternion _initialRotation;

	[Token(Token = "0x40001B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private Quaternion _currentRotation;

	[Token(Token = "0x40001B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private Vector2 _lastValidDirection;

	[Token(Token = "0x600018E")]
	[Address(RVA = "0xE29C64", Offset = "0xE29C64", VA = "0xE29C64", Slot = "8")]
	protected override void InitializeTeleportDestination()
	{
	}

	[Token(Token = "0x600018F")]
	[Address(RVA = "0xE29CA8", Offset = "0xE29CA8", VA = "0xE29CA8", Slot = "9")]
	protected override void UpdateTeleportDestination()
	{
	}

	[Token(Token = "0x6000190")]
	[Address(RVA = "0xE2A118", Offset = "0xE2A118", VA = "0xE2A118")]
	public TeleportOrientationHandlerThumbstick()
	{
	}
}
[Token(Token = "0x2000058")]
public class TeleportPoint : MonoBehaviour
{
	[Token(Token = "0x40001B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float dimmingSpeed;

	[Token(Token = "0x40001B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float fullIntensity;

	[Token(Token = "0x40001BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float lowIntensity;

	[Token(Token = "0x40001BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform destTransform;

	[Token(Token = "0x40001BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float lastLookAtTime;

	[Token(Token = "0x6000191")]
	[Address(RVA = "0xE2A128", Offset = "0xE2A128", VA = "0xE2A128")]
	public Transform GetDestTransform()
	{
		return null;
	}

	[Token(Token = "0x6000192")]
	[Address(RVA = "0xE2A130", Offset = "0xE2A130", VA = "0xE2A130")]
	private void Update()
	{
	}

	[Token(Token = "0x6000193")]
	[Address(RVA = "0xE2A218", Offset = "0xE2A218", VA = "0xE2A218")]
	public void OnLookAt()
	{
	}

	[Token(Token = "0x6000194")]
	[Address(RVA = "0xE2A240", Offset = "0xE2A240", VA = "0xE2A240")]
	public TeleportPoint()
	{
	}
}
[Token(Token = "0x2000059")]
public abstract class TeleportSupport : MonoBehaviour
{
	[Token(Token = "0x40001BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x975C94", Offset = "0x975C94")]
	private LocomotionTeleport <LocomotionTeleport>k__BackingField;

	[Token(Token = "0x40001BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool _eventsActive;

	[Token(Token = "0x17000032")]
	protected LocomotionTeleport LocomotionTeleport
	{
		[Token(Token = "0x6000195")]
		[Address(RVA = "0xE2A258", Offset = "0xE2A258", VA = "0xE2A258")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x987384", Offset = "0x987384")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000196")]
		[Address(RVA = "0xE2A260", Offset = "0xE2A260", VA = "0xE2A260")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x987394", Offset = "0x987394")]
		private set
		{
		}
	}

	[Token(Token = "0x6000197")]
	[Address(RVA = "0xE2762C", Offset = "0xE2762C", VA = "0xE2762C", Slot = "4")]
	protected virtual void OnEnable()
	{
	}

	[Token(Token = "0x6000198")]
	[Address(RVA = "0xE2775C", Offset = "0xE2775C", VA = "0xE2775C", Slot = "5")]
	protected virtual void OnDisable()
	{
	}

	[Token(Token = "0x6000199")]
	[Address(RVA = "0xE2A268", Offset = "0xE2A268", VA = "0xE2A268")]
	[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x9873A4", Offset = "0x9873A4")]
	private void LogEventHandler(string msg)
	{
	}

	[Token(Token = "0x600019A")]
	[Address(RVA = "0xE27DD8", Offset = "0xE27DD8", VA = "0xE27DD8", Slot = "6")]
	protected virtual void AddEventHandlers()
	{
	}

	[Token(Token = "0x600019B")]
	[Address(RVA = "0xE27E44", Offset = "0xE27E44", VA = "0xE27E44", Slot = "7")]
	protected virtual void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x600019C")]
	[Address(RVA = "0xE27798", Offset = "0xE27798", VA = "0xE27798")]
	protected TeleportSupport()
	{
	}
}
[Token(Token = "0x200005A")]
public abstract class TeleportTargetHandler : TeleportSupport
{
	[Token(Token = "0x200005B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x97151C", Offset = "0x97151C")]
	private sealed class <TargetAimCoroutine>d__7 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40001C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40001C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40001C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportTargetHandler <>4__this;

		[Token(Token = "0x17000033")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60001A8")]
			[Address(RVA = "0xE2A8F4", Offset = "0xE2A8F4", VA = "0xE2A8F4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000034")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60001AA")]
			[Address(RVA = "0xE2A95C", Offset = "0xE2A95C", VA = "0xE2A95C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60001A5")]
		[Address(RVA = "0xE2A4E4", Offset = "0xE2A4E4", VA = "0xE2A4E4")]
		[DebuggerHidden]
		public <TargetAimCoroutine>d__7(int <>1__state)
		{
		}

		[Token(Token = "0x60001A6")]
		[Address(RVA = "0xE2A67C", Offset = "0xE2A67C", VA = "0xE2A67C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60001A7")]
		[Address(RVA = "0xE2A680", Offset = "0xE2A680", VA = "0xE2A680", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60001A9")]
		[Address(RVA = "0xE2A8FC", Offset = "0xE2A8FC", VA = "0xE2A8FC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40001BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x975CA4", Offset = "0x975CA4")]
	public LayerMask AimCollisionLayerMask;

	[Token(Token = "0x40001C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	protected readonly LocomotionTeleport.AimData AimData;

	[Token(Token = "0x40001C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private readonly Action _startAimAction;

	[Token(Token = "0x40001C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private readonly List<Vector3> _aimPoints;

	[Token(Token = "0x40001C3")]
	private const float ERROR_MARGIN = 0.1f;

	[Token(Token = "0x600019D")]
	[Address(RVA = "0xE2A330", Offset = "0xE2A330", VA = "0xE2A330")]
	protected TeleportTargetHandler()
	{
	}

	[Token(Token = "0x600019E")]
	[Address(RVA = "0xE2A414", Offset = "0xE2A414", VA = "0xE2A414", Slot = "6")]
	protected override void AddEventHandlers()
	{
	}

	[Token(Token = "0x600019F")]
	[Address(RVA = "0xE2A440", Offset = "0xE2A440", VA = "0xE2A440", Slot = "7")]
	protected override void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x60001A0")]
	[Address(RVA = "0xE2A468", Offset = "0xE2A468", VA = "0xE2A468")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9873DC", Offset = "0x9873DC")]
	private IEnumerator TargetAimCoroutine()
	{
		return null;
	}

	[Token(Token = "0x60001A1")]
	[Address(RVA = "0xE2A510", Offset = "0xE2A510", VA = "0xE2A510", Slot = "8")]
	protected virtual void ResetAimData()
	{
	}

	[Token(Token = "0x60001A2")]
	protected abstract bool ConsiderTeleport(Vector3 start, ref Vector3 end);

	[Token(Token = "0x60001A3")]
	[Address(RVA = "0xE2A52C", Offset = "0xE2A52C", VA = "0xE2A52C", Slot = "10")]
	public virtual Vector3? ConsiderDestination(Vector3 location)
	{
		return null;
	}

	[Token(Token = "0x60001A4")]
	[Address(RVA = "0xE2A650", Offset = "0xE2A650", VA = "0xE2A650")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x987440", Offset = "0x987440")]
	private void <.ctor>b__3_0()
	{
	}
}
[Token(Token = "0x200005C")]
public class TeleportTargetHandlerNavMesh : TeleportTargetHandler
{
	[Token(Token = "0x40001C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public int NavMeshAreaMask;

	[Token(Token = "0x40001C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private NavMeshPath _path;

	[Token(Token = "0x60001AB")]
	[Address(RVA = "0xE2A964", Offset = "0xE2A964", VA = "0xE2A964")]
	private void Awake()
	{
	}

	[Token(Token = "0x60001AC")]
	[Address(RVA = "0xE2A9CC", Offset = "0xE2A9CC", VA = "0xE2A9CC", Slot = "9")]
	protected override bool ConsiderTeleport(Vector3 start, ref Vector3 end)
	{
		return default(bool);
	}

	[Token(Token = "0x60001AD")]
	[Address(RVA = "0xE2AB50", Offset = "0xE2AB50", VA = "0xE2AB50", Slot = "10")]
	public override Vector3? ConsiderDestination(Vector3 location)
	{
		return null;
	}

	[Token(Token = "0x60001AE")]
	[Address(RVA = "0xE2AC40", Offset = "0xE2AC40", VA = "0xE2AC40")]
	public TeleportTargetHandlerNavMesh()
	{
	}
}
[Token(Token = "0x200005D")]
public class TeleportTargetHandlerNode : TeleportTargetHandler
{
	[Token(Token = "0x40001C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x975CDC", Offset = "0x975CDC")]
	public float LOSOffset;

	[Token(Token = "0x40001CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x975D14", Offset = "0x975D14")]
	public LayerMask TeleportLayerMask;

	[Token(Token = "0x60001AF")]
	[Address(RVA = "0xE2AC4C", Offset = "0xE2AC4C", VA = "0xE2AC4C", Slot = "9")]
	protected override bool ConsiderTeleport(Vector3 start, ref Vector3 end)
	{
		return default(bool);
	}

	[Token(Token = "0x60001B0")]
	[Address(RVA = "0xE2AE7C", Offset = "0xE2AE7C", VA = "0xE2AE7C")]
	public TeleportTargetHandlerNode()
	{
	}
}
[Token(Token = "0x200005E")]
public class TeleportTargetHandlerPhysical : TeleportTargetHandler
{
	[Token(Token = "0x60001B1")]
	[Address(RVA = "0xE2AE88", Offset = "0xE2AE88", VA = "0xE2AE88", Slot = "9")]
	protected override bool ConsiderTeleport(Vector3 start, ref Vector3 end)
	{
		return default(bool);
	}

	[Token(Token = "0x60001B2")]
	[Address(RVA = "0xE2B00C", Offset = "0xE2B00C", VA = "0xE2B00C")]
	public TeleportTargetHandlerPhysical()
	{
	}
}
[Token(Token = "0x200005F")]
public abstract class TeleportTransition : TeleportSupport
{
	[Token(Token = "0x60001B3")]
	[Address(RVA = "0xE2B010", Offset = "0xE2B010", VA = "0xE2B010", Slot = "6")]
	protected override void AddEventHandlers()
	{
	}

	[Token(Token = "0x60001B4")]
	[Address(RVA = "0xE2B0A8", Offset = "0xE2B0A8", VA = "0xE2B0A8", Slot = "7")]
	protected override void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x60001B5")]
	protected abstract void LocomotionTeleportOnEnterStateTeleporting();

	[Token(Token = "0x60001B6")]
	[Address(RVA = "0xE2B13C", Offset = "0xE2B13C", VA = "0xE2B13C")]
	protected TeleportTransition()
	{
	}
}
[Token(Token = "0x2000060")]
public class TeleportTransitionBlink : TeleportTransition
{
	[Token(Token = "0x2000061")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x97152C", Offset = "0x97152C")]
	private sealed class <BlinkCoroutine>d__4 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40001CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40001CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40001D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportTransitionBlink <>4__this;

		[Token(Token = "0x40001D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <elapsedTime>5__2;

		[Token(Token = "0x40001D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <teleportTime>5__3;

		[Token(Token = "0x40001D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool <teleported>5__4;

		[Token(Token = "0x17000035")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60001BD")]
			[Address(RVA = "0xE2B4C8", Offset = "0xE2B4C8", VA = "0xE2B4C8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000036")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60001BF")]
			[Address(RVA = "0xE2B530", Offset = "0xE2B530", VA = "0xE2B530", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60001BA")]
		[Address(RVA = "0xE2B1EC", Offset = "0xE2B1EC", VA = "0xE2B1EC")]
		[DebuggerHidden]
		public <BlinkCoroutine>d__4(int <>1__state)
		{
		}

		[Token(Token = "0x60001BB")]
		[Address(RVA = "0xE2B3BC", Offset = "0xE2B3BC", VA = "0xE2B3BC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60001BC")]
		[Address(RVA = "0xE2B3C0", Offset = "0xE2B3C0", VA = "0xE2B3C0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60001BE")]
		[Address(RVA = "0xE2B4D0", Offset = "0xE2B4D0", VA = "0xE2B4D0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40001CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x975D4C", Offset = "0x975D4C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x975D4C", Offset = "0x975D4C")]
	public float TransitionDuration;

	[Token(Token = "0x40001CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x975DA4", Offset = "0x975DA4")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x975DA4", Offset = "0x975DA4")]
	public float TeleportDelay;

	[Token(Token = "0x40001CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x975DF8", Offset = "0x975DF8")]
	public AnimationCurve FadeLevels;

	[Token(Token = "0x60001B7")]
	[Address(RVA = "0xE2B144", Offset = "0xE2B144", VA = "0xE2B144", Slot = "8")]
	protected override void LocomotionTeleportOnEnterStateTeleporting()
	{
	}

	[Token(Token = "0x60001B8")]
	[Address(RVA = "0xE2B170", Offset = "0xE2B170", VA = "0xE2B170")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9874A0", Offset = "0x9874A0")]
	protected IEnumerator BlinkCoroutine()
	{
		return null;
	}

	[Token(Token = "0x60001B9")]
	[Address(RVA = "0xE2B218", Offset = "0xE2B218", VA = "0xE2B218")]
	public TeleportTransitionBlink()
	{
	}
}
[Token(Token = "0x2000062")]
public class TeleportTransitionInstant : TeleportTransition
{
	[Token(Token = "0x60001C0")]
	[Address(RVA = "0xE2B538", Offset = "0xE2B538", VA = "0xE2B538", Slot = "8")]
	protected override void LocomotionTeleportOnEnterStateTeleporting()
	{
	}

	[Token(Token = "0x60001C1")]
	[Address(RVA = "0xE2B554", Offset = "0xE2B554", VA = "0xE2B554")]
	public TeleportTransitionInstant()
	{
	}
}
[Token(Token = "0x2000063")]
public class TeleportTransitionWarp : TeleportTransition
{
	[Token(Token = "0x2000064")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x97153C", Offset = "0x97153C")]
	private sealed class <DoWarp>d__3 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40001D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40001D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40001D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportTransitionWarp <>4__this;

		[Token(Token = "0x40001D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Vector3 <startPosition>5__2;

		[Token(Token = "0x40001DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float <elapsedTime>5__3;

		[Token(Token = "0x17000037")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60001C8")]
			[Address(RVA = "0xE2B7C4", Offset = "0xE2B7C4", VA = "0xE2B7C4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000038")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60001CA")]
			[Address(RVA = "0xE2B82C", Offset = "0xE2B82C", VA = "0xE2B82C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60001C5")]
		[Address(RVA = "0xE2B604", Offset = "0xE2B604", VA = "0xE2B604")]
		[DebuggerHidden]
		public <DoWarp>d__3(int <>1__state)
		{
		}

		[Token(Token = "0x60001C6")]
		[Address(RVA = "0xE2B684", Offset = "0xE2B684", VA = "0xE2B684", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60001C7")]
		[Address(RVA = "0xE2B688", Offset = "0xE2B688", VA = "0xE2B688", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60001C9")]
		[Address(RVA = "0xE2B7CC", Offset = "0xE2B7CC", VA = "0xE2B7CC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40001D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x975E30", Offset = "0x975E30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x975E30", Offset = "0x975E30")]
	public float TransitionDuration;

	[Token(Token = "0x40001D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[HideInInspector]
	public AnimationCurve PositionLerp;

	[Token(Token = "0x60001C2")]
	[Address(RVA = "0xE2B55C", Offset = "0xE2B55C", VA = "0xE2B55C", Slot = "8")]
	protected override void LocomotionTeleportOnEnterStateTeleporting()
	{
	}

	[Token(Token = "0x60001C3")]
	[Address(RVA = "0xE2B588", Offset = "0xE2B588", VA = "0xE2B588")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x987554", Offset = "0x987554")]
	private IEnumerator DoWarp()
	{
		return null;
	}

	[Token(Token = "0x60001C4")]
	[Address(RVA = "0xE2B630", Offset = "0xE2B630", VA = "0xE2B630")]
	public TeleportTransitionWarp()
	{
	}
}
[Token(Token = "0x2000065")]
public static class NativeVideoPlayer
{
	[Token(Token = "0x40001DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static IntPtr? _Activity;

	[Token(Token = "0x40001DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static IntPtr? _VideoPlayerClass;

	[Token(Token = "0x40001DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private static readonly jvalue[] EmptyParams;

	[Token(Token = "0x40001DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private static IntPtr getIsPlayingMethodId;

	[Token(Token = "0x40001DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private static IntPtr getDurationMethodId;

	[Token(Token = "0x40001E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private static IntPtr getPlaybackPositionMethodId;

	[Token(Token = "0x40001E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private static IntPtr setPlaybackPositionMethodId;

	[Token(Token = "0x40001E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private static jvalue[] setPlaybackPositionParams;

	[Token(Token = "0x40001E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private static IntPtr playVideoMethodId;

	[Token(Token = "0x40001E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private static jvalue[] playVideoParams;

	[Token(Token = "0x40001E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private static IntPtr stopMethodId;

	[Token(Token = "0x40001E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private static IntPtr resumeMethodId;

	[Token(Token = "0x40001E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private static IntPtr pauseMethodId;

	[Token(Token = "0x40001E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private static IntPtr setPlaybackSpeedMethodId;

	[Token(Token = "0x40001E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private static jvalue[] setPlaybackSpeedParams;

	[Token(Token = "0x40001EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private static IntPtr setLoopingMethodId;

	[Token(Token = "0x40001EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private static jvalue[] setLoopingParams;

	[Token(Token = "0x40001EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private static IntPtr setListenerRotationQuaternionMethodId;

	[Token(Token = "0x40001ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private static jvalue[] setListenerRotationQuaternionParams;

	[Token(Token = "0x17000039")]
	private static IntPtr VideoPlayerClass
	{
		[Token(Token = "0x60001CB")]
		[Address(RVA = "0xC24864", Offset = "0xC24864", VA = "0xC24864")]
		get
		{
			return default(IntPtr);
		}
	}

	[Token(Token = "0x1700003A")]
	private static IntPtr Activity
	{
		[Token(Token = "0x60001CC")]
		[Address(RVA = "0xC24B20", Offset = "0xC24B20", VA = "0xC24B20")]
		get
		{
			return default(IntPtr);
		}
	}

	[Token(Token = "0x1700003B")]
	public static bool IsAvailable
	{
		[Token(Token = "0x60001CD")]
		[Address(RVA = "0xC21720", Offset = "0xC21720", VA = "0xC21720")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700003C")]
	public static bool IsPlaying
	{
		[Token(Token = "0x60001CE")]
		[Address(RVA = "0xC229F4", Offset = "0xC229F4", VA = "0xC229F4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700003D")]
	public static long Duration
	{
		[Token(Token = "0x60001CF")]
		[Address(RVA = "0xC22BD8", Offset = "0xC22BD8", VA = "0xC22BD8")]
		get
		{
			return default(long);
		}
	}

	[Token(Token = "0x1700003E")]
	public static long PlaybackPosition
	{
		[Token(Token = "0x60001D0")]
		[Address(RVA = "0xC22AE4", Offset = "0xC22AE4", VA = "0xC22AE4")]
		get
		{
			return default(long);
		}
		[Token(Token = "0x60001D1")]
		[Address(RVA = "0xC2219C", Offset = "0xC2219C", VA = "0xC2219C")]
		set
		{
		}
	}

	[Token(Token = "0x60001D2")]
	[Address(RVA = "0xC23240", Offset = "0xC23240", VA = "0xC23240")]
	public static void PlayVideo(string path, string drmLicenseUrl, IntPtr surfaceObj)
	{
	}

	[Token(Token = "0x60001D3")]
	[Address(RVA = "0xC22F84", Offset = "0xC22F84", VA = "0xC22F84")]
	public static void Stop()
	{
	}

	[Token(Token = "0x60001D4")]
	[Address(RVA = "0xC21E2C", Offset = "0xC21E2C", VA = "0xC21E2C")]
	public static void Play()
	{
	}

	[Token(Token = "0x60001D5")]
	[Address(RVA = "0xC21FB0", Offset = "0xC21FB0", VA = "0xC21FB0")]
	public static void Pause()
	{
	}

	[Token(Token = "0x60001D6")]
	[Address(RVA = "0xC22DA4", Offset = "0xC22DA4", VA = "0xC22DA4")]
	public static void SetPlaybackSpeed(float speed)
	{
	}

	[Token(Token = "0x60001D7")]
	[Address(RVA = "0xC23440", Offset = "0xC23440", VA = "0xC23440")]
	public static void SetLooping(bool looping)
	{
	}

	[Token(Token = "0x60001D8")]
	[Address(RVA = "0xC22830", Offset = "0xC22830", VA = "0xC22830")]
	public static void SetListenerRotation(Quaternion rotation)
	{
	}
}
[Token(Token = "0x2000066")]
public class ButtonDownListener : MonoBehaviour, IPointerDownHandler, IEventSystemHandler
{
	[Token(Token = "0x1400000F")]
	public event Action onButtonDown
	{
		[Token(Token = "0x60001DA")]
		[Address(RVA = "0xF6E0AC", Offset = "0xF6E0AC", VA = "0xF6E0AC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x987608", Offset = "0x987608")]
		add
		{
		}
		[Token(Token = "0x60001DB")]
		[Address(RVA = "0xF6E150", Offset = "0xF6E150", VA = "0xF6E150")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x987618", Offset = "0x987618")]
		remove
		{
		}
	}

	[Token(Token = "0x60001DC")]
	[Address(RVA = "0xF6E1F4", Offset = "0xF6E1F4", VA = "0xF6E1F4", Slot = "4")]
	public void OnPointerDown(PointerEventData eventData)
	{
	}

	[Token(Token = "0x60001DD")]
	[Address(RVA = "0xF6E208", Offset = "0xF6E208", VA = "0xF6E208")]
	public ButtonDownListener()
	{
	}
}
[Token(Token = "0x2000067")]
public class MediaPlayerImage : Image
{
	[Token(Token = "0x2000068")]
	public enum ButtonType
	{
		[Token(Token = "0x40001F1")]
		Play,
		[Token(Token = "0x40001F2")]
		Pause,
		[Token(Token = "0x40001F3")]
		FastForward,
		[Token(Token = "0x40001F4")]
		Rewind,
		[Token(Token = "0x40001F5")]
		SkipForward,
		[Token(Token = "0x40001F6")]
		SkipBack,
		[Token(Token = "0x40001F7")]
		Stop
	}

	[Token(Token = "0x40001EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	[SerializeField]
	private ButtonType m_ButtonType;

	[Token(Token = "0x1700003F")]
	public ButtonType buttonType
	{
		[Token(Token = "0x60001DE")]
		[Address(RVA = "0xC14408", Offset = "0xC14408", VA = "0xC14408")]
		get
		{
			return default(ButtonType);
		}
		[Token(Token = "0x60001DF")]
		[Address(RVA = "0xC14410", Offset = "0xC14410", VA = "0xC14410")]
		set
		{
		}
	}

	[Token(Token = "0x60001E0")]
	[Address(RVA = "0xC14434", Offset = "0xC14434", VA = "0xC14434", Slot = "43")]
	protected override void OnPopulateMesh(VertexHelper toFill)
	{
	}

	[Token(Token = "0x60001E1")]
	[Address(RVA = "0xC15900", Offset = "0xC15900", VA = "0xC15900")]
	public MediaPlayerImage()
	{
	}
}
[Token(Token = "0x2000069")]
public class MoviePlayerSample : MonoBehaviour
{
	[Token(Token = "0x200006A")]
	public enum VideoShape
	{
		[Token(Token = "0x400020B")]
		_360,
		[Token(Token = "0x400020C")]
		_180,
		[Token(Token = "0x400020D")]
		Quad
	}

	[Token(Token = "0x200006B")]
	public enum VideoStereo
	{
		[Token(Token = "0x400020F")]
		Mono,
		[Token(Token = "0x4000210")]
		TopBottom,
		[Token(Token = "0x4000211")]
		LeftRight,
		[Token(Token = "0x4000212")]
		BottomTop
	}

	[Token(Token = "0x200006C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x97154C", Offset = "0x97154C")]
	private sealed class <Start>d__32 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000213")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000214")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000215")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MoviePlayerSample <>4__this;

		[Token(Token = "0x17000043")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60001F8")]
			[Address(RVA = "0xC2371C", Offset = "0xC2371C", VA = "0xC2371C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000044")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60001FA")]
			[Address(RVA = "0xC23784", Offset = "0xC23784", VA = "0xC23784", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60001F5")]
		[Address(RVA = "0xC21AE4", Offset = "0xC21AE4", VA = "0xC21AE4")]
		[DebuggerHidden]
		public <Start>d__32(int <>1__state)
		{
		}

		[Token(Token = "0x60001F6")]
		[Address(RVA = "0xC2358C", Offset = "0xC2358C", VA = "0xC2358C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60001F7")]
		[Address(RVA = "0xC23590", Offset = "0xC23590", VA = "0xC23590", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60001F9")]
		[Address(RVA = "0xC23724", Offset = "0xC23724", VA = "0xC23724", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200006D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x97155C", Offset = "0x97155C")]
	private sealed class <>c__DisplayClass33_0
	{
		[Token(Token = "0x4000216")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string moviePath;

		[Token(Token = "0x4000217")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string drmLicencesUrl;

		[Token(Token = "0x4000218")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MoviePlayerSample <>4__this;

		[Token(Token = "0x60001FB")]
		[Address(RVA = "0xC21D90", Offset = "0xC21D90", VA = "0xC21D90")]
		public <>c__DisplayClass33_0()
		{
		}

		[Token(Token = "0x60001FC")]
		[Address(RVA = "0xC2316C", Offset = "0xC2316C", VA = "0xC2316C")]
		internal void <Play>b__0()
		{
		}
	}

	[Token(Token = "0x40001F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool videoPausedBeforeAppPause;

	[Token(Token = "0x40001F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private VideoPlayer videoPlayer;

	[Token(Token = "0x40001FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private OVROverlay overlay;

	[Token(Token = "0x40001FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Renderer mediaRenderer;

	[Token(Token = "0x40001FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x975EB8", Offset = "0x975EB8")]
	private bool <IsPlaying>k__BackingField;

	[Token(Token = "0x40001FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x975EC8", Offset = "0x975EC8")]
	private long <Duration>k__BackingField;

	[Token(Token = "0x40001FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x975ED8", Offset = "0x975ED8")]
	private long <PlaybackPosition>k__BackingField;

	[Token(Token = "0x40001FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private RenderTexture copyTexture;

	[Token(Token = "0x4000200")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Material externalTex2DMaterial;

	[Token(Token = "0x4000201")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public string MovieName;

	[Token(Token = "0x4000202")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public string DrmLicenseUrl;

	[Token(Token = "0x4000203")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public bool LoopVideo;

	[Token(Token = "0x4000204")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public VideoShape Shape;

	[Token(Token = "0x4000205")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public VideoStereo Stereo;

	[Token(Token = "0x4000206")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public bool DisplayMono;

	[Token(Token = "0x4000207")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private VideoShape _LastShape;

	[Token(Token = "0x4000208")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private VideoStereo _LastStereo;

	[Token(Token = "0x4000209")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private bool _LastDisplayMono;

	[Token(Token = "0x17000040")]
	public bool IsPlaying
	{
		[Token(Token = "0x60001E2")]
		[Address(RVA = "0xC214A0", Offset = "0xC214A0", VA = "0xC214A0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x987628", Offset = "0x987628")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60001E3")]
		[Address(RVA = "0xC214A8", Offset = "0xC214A8", VA = "0xC214A8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x987638", Offset = "0x987638")]
		private set
		{
		}
	}

	[Token(Token = "0x17000041")]
	public long Duration
	{
		[Token(Token = "0x60001E4")]
		[Address(RVA = "0xC214B4", Offset = "0xC214B4", VA = "0xC214B4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x987648", Offset = "0x987648")]
		get
		{
			return default(long);
		}
		[Token(Token = "0x60001E5")]
		[Address(RVA = "0xC214BC", Offset = "0xC214BC", VA = "0xC214BC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x987658", Offset = "0x987658")]
		private set
		{
		}
	}

	[Token(Token = "0x17000042")]
	public long PlaybackPosition
	{
		[Token(Token = "0x60001E6")]
		[Address(RVA = "0xC214C4", Offset = "0xC214C4", VA = "0xC214C4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x987668", Offset = "0x987668")]
		get
		{
			return default(long);
		}
		[Token(Token = "0x60001E7")]
		[Address(RVA = "0xC214CC", Offset = "0xC214CC", VA = "0xC214CC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x987678", Offset = "0x987678")]
		private set
		{
		}
	}

	[Token(Token = "0x60001E8")]
	[Address(RVA = "0xC214D4", Offset = "0xC214D4", VA = "0xC214D4")]
	private void Awake()
	{
	}

	[Token(Token = "0x60001E9")]
	[Address(RVA = "0xC21788", Offset = "0xC21788", VA = "0xC21788")]
	private bool IsLocalVideo(string movieName)
	{
		return default(bool);
	}

	[Token(Token = "0x60001EA")]
	[Address(RVA = "0xC217F0", Offset = "0xC217F0", VA = "0xC217F0")]
	private void UpdateShapeAndStereo()
	{
	}

	[Token(Token = "0x60001EB")]
	[Address(RVA = "0xC21A68", Offset = "0xC21A68", VA = "0xC21A68")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x987688", Offset = "0x987688")]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x60001EC")]
	[Address(RVA = "0xC21B10", Offset = "0xC21B10", VA = "0xC21B10")]
	public void Play(string moviePath, string drmLicencesUrl)
	{
	}

	[Token(Token = "0x60001ED")]
	[Address(RVA = "0xC21D98", Offset = "0xC21D98", VA = "0xC21D98")]
	public void Play()
	{
	}

	[Token(Token = "0x60001EE")]
	[Address(RVA = "0xC21F20", Offset = "0xC21F20", VA = "0xC21F20")]
	public void Pause()
	{
	}

	[Token(Token = "0x60001EF")]
	[Address(RVA = "0xC220A4", Offset = "0xC220A4", VA = "0xC220A4")]
	public void SeekTo(long position)
	{
	}

	[Token(Token = "0x60001F0")]
	[Address(RVA = "0xC222E4", Offset = "0xC222E4", VA = "0xC222E4")]
	private void Update()
	{
	}

	[Token(Token = "0x60001F1")]
	[Address(RVA = "0xC22CCC", Offset = "0xC22CCC", VA = "0xC22CCC")]
	public void SetPlaybackSpeed(float speed)
	{
	}

	[Token(Token = "0x60001F2")]
	[Address(RVA = "0xC22EF4", Offset = "0xC22EF4", VA = "0xC22EF4")]
	public void Stop()
	{
	}

	[Token(Token = "0x60001F3")]
	[Address(RVA = "0xC23078", Offset = "0xC23078", VA = "0xC23078")]
	private void OnApplicationPause(bool appWasPaused)
	{
	}

	[Token(Token = "0x60001F4")]
	[Address(RVA = "0xC2315C", Offset = "0xC2315C", VA = "0xC2315C")]
	public MoviePlayerSample()
	{
	}
}
[Token(Token = "0x200006E")]
public class MoviePlayerSampleControls : MonoBehaviour
{
	[Token(Token = "0x200006F")]
	private enum PlaybackState
	{
		[Token(Token = "0x400022F")]
		Playing,
		[Token(Token = "0x4000230")]
		Paused,
		[Token(Token = "0x4000231")]
		Rewinding,
		[Token(Token = "0x4000232")]
		FastForwarding
	}

	[Token(Token = "0x4000219")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public MoviePlayerSample Player;

	[Token(Token = "0x400021A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public OVRInputModule InputModule;

	[Token(Token = "0x400021B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OVRGazePointer GazePointer;

	[Token(Token = "0x400021C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject LeftHand;

	[Token(Token = "0x400021D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject RightHand;

	[Token(Token = "0x400021E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Canvas Canvas;

	[Token(Token = "0x400021F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public ButtonDownListener PlayPause;

	[Token(Token = "0x4000220")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public MediaPlayerImage PlayPauseImage;

	[Token(Token = "0x4000221")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Slider ProgressBar;

	[Token(Token = "0x4000222")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public ButtonDownListener FastForward;

	[Token(Token = "0x4000223")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public MediaPlayerImage FastForwardImage;

	[Token(Token = "0x4000224")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public ButtonDownListener Rewind;

	[Token(Token = "0x4000225")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public MediaPlayerImage RewindImage;

	[Token(Token = "0x4000226")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public float TimeoutTime;

	[Token(Token = "0x4000227")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private bool _isVisible;

	[Token(Token = "0x4000228")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private float _lastButtonTime;

	[Token(Token = "0x4000229")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private bool _didSeek;

	[Token(Token = "0x400022A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private long _seekPreviousPosition;

	[Token(Token = "0x400022B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private long _rewindStartPosition;

	[Token(Token = "0x400022C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private float _rewindStartTime;

	[Token(Token = "0x400022D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	private PlaybackState _state;

	[Token(Token = "0x60001FD")]
	[Address(RVA = "0xC2378C", Offset = "0xC2378C", VA = "0xC2378C")]
	private void Start()
	{
	}

	[Token(Token = "0x60001FE")]
	[Address(RVA = "0xC23A88", Offset = "0xC23A88", VA = "0xC23A88")]
	private void OnPlayPauseClicked()
	{
	}

	[Token(Token = "0x60001FF")]
	[Address(RVA = "0xC23C64", Offset = "0xC23C64", VA = "0xC23C64")]
	private void OnFastForwardClicked()
	{
	}

	[Token(Token = "0x6000200")]
	[Address(RVA = "0xC23D98", Offset = "0xC23D98", VA = "0xC23D98")]
	private void OnRewindClicked()
	{
	}

	[Token(Token = "0x6000201")]
	[Address(RVA = "0xC23EA0", Offset = "0xC23EA0", VA = "0xC23EA0")]
	private void OnSeekBarMoved(float value)
	{
	}

	[Token(Token = "0x6000202")]
	[Address(RVA = "0xC23D6C", Offset = "0xC23D6C", VA = "0xC23D6C")]
	private void Seek(long pos)
	{
	}

	[Token(Token = "0x6000203")]
	[Address(RVA = "0xC23F68", Offset = "0xC23F68", VA = "0xC23F68")]
	private void Update()
	{
	}

	[Token(Token = "0x6000204")]
	[Address(RVA = "0xC2397C", Offset = "0xC2397C", VA = "0xC2397C")]
	private void SetVisible(bool visible)
	{
	}

	[Token(Token = "0x6000205")]
	[Address(RVA = "0xC24320", Offset = "0xC24320", VA = "0xC24320")]
	public MoviePlayerSampleControls()
	{
	}
}
[Token(Token = "0x2000070")]
public static class VectorUtil
{
	[Token(Token = "0x6000206")]
	[Address(RVA = "0xE6C258", Offset = "0xE6C258", VA = "0xE6C258")]
	public static Vector4 ToVector(this Rect rect)
	{
		return default(Vector4);
	}
}
[Token(Token = "0x2000071")]
public class DebugUISample : MonoBehaviour
{
	[Token(Token = "0x4000233")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool inMenu;

	[Token(Token = "0x4000234")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Text sliderText;

	[Token(Token = "0x6000207")]
	[Address(RVA = "0xBF633C", Offset = "0xBF633C", VA = "0xBF633C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000208")]
	[Address(RVA = "0xBF6794", Offset = "0xBF6794", VA = "0xBF6794")]
	public void TogglePressed(Toggle t)
	{
	}

	[Token(Token = "0x6000209")]
	[Address(RVA = "0xBF684C", Offset = "0xBF684C", VA = "0xBF684C")]
	public void RadioPressed(string radioLabel, string group, Toggle t)
	{
	}

	[Token(Token = "0x600020A")]
	[Address(RVA = "0xBF6AA0", Offset = "0xBF6AA0", VA = "0xBF6AA0")]
	public void SliderPressed(float f)
	{
	}

	[Token(Token = "0x600020B")]
	[Address(RVA = "0xBF6B88", Offset = "0xBF6B88", VA = "0xBF6B88")]
	private void Update()
	{
	}

	[Token(Token = "0x600020C")]
	[Address(RVA = "0xBF6C64", Offset = "0xBF6C64", VA = "0xBF6C64")]
	private void LogButtonPressed()
	{
	}

	[Token(Token = "0x600020D")]
	[Address(RVA = "0xBF6CD0", Offset = "0xBF6CD0", VA = "0xBF6CD0")]
	public DebugUISample()
	{
	}

	[Token(Token = "0x600020E")]
	[Address(RVA = "0xBF6CD8", Offset = "0xBF6CD8", VA = "0xBF6CD8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x98774C", Offset = "0x98774C")]
	private void <Start>b__2_0(Toggle t)
	{
	}

	[Token(Token = "0x600020F")]
	[Address(RVA = "0xBF6D34", Offset = "0xBF6D34", VA = "0xBF6D34")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x98775C", Offset = "0x98775C")]
	private void <Start>b__2_1(Toggle t)
	{
	}

	[Token(Token = "0x6000210")]
	[Address(RVA = "0xBF6D90", Offset = "0xBF6D90", VA = "0xBF6D90")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x98776C", Offset = "0x98776C")]
	private void <Start>b__2_2(Toggle t)
	{
	}

	[Token(Token = "0x6000211")]
	[Address(RVA = "0xBF6DEC", Offset = "0xBF6DEC", VA = "0xBF6DEC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x98777C", Offset = "0x98777C")]
	private void <Start>b__2_3(Toggle t)
	{
	}
}
[Token(Token = "0x2000072")]
public class HandsActiveChecker : MonoBehaviour
{
	[Token(Token = "0x2000073")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x97157C", Offset = "0x97157C")]
	private sealed class <GetCenterEye>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000239")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400023A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400023B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public HandsActiveChecker <>4__this;

		[Token(Token = "0x17000045")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000219")]
			[Address(RVA = "0xBDBC10", Offset = "0xBDBC10", VA = "0xBDBC10", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000046")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600021B")]
			[Address(RVA = "0xBDBC78", Offset = "0xBDBC78", VA = "0xBDBC78", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000216")]
		[Address(RVA = "0xBDBA94", Offset = "0xBDBA94", VA = "0xBDBA94")]
		[DebuggerHidden]
		public <GetCenterEye>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x6000217")]
		[Address(RVA = "0xBDBAC8", Offset = "0xBDBAC8", VA = "0xBDBAC8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000218")]
		[Address(RVA = "0xBDBACC", Offset = "0xBDBACC", VA = "0xBDBACC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600021A")]
		[Address(RVA = "0xBDBC18", Offset = "0xBDBC18", VA = "0xBDBC18", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000235")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject _notificationPrefab;

	[Token(Token = "0x4000236")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private GameObject _notification;

	[Token(Token = "0x4000237")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private OVRCameraRig _cameraRig;

	[Token(Token = "0x4000238")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Transform _centerEye;

	[Token(Token = "0x6000212")]
	[Address(RVA = "0xBDB780", Offset = "0xBDB780", VA = "0xBDB780")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000213")]
	[Address(RVA = "0xBDB898", Offset = "0xBDB898", VA = "0xBDB898")]
	private void Update()
	{
	}

	[Token(Token = "0x6000214")]
	[Address(RVA = "0xBDB81C", Offset = "0xBDB81C", VA = "0xBDB81C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x98778C", Offset = "0x98778C")]
	private IEnumerator GetCenterEye()
	{
		return null;
	}

	[Token(Token = "0x6000215")]
	[Address(RVA = "0xBDBAC0", Offset = "0xBDBAC0", VA = "0xBDBAC0")]
	public HandsActiveChecker()
	{
	}
}
[Token(Token = "0x2000074")]
[ExecuteInEditMode]
public class CharacterCapsule : MonoBehaviour
{
	[Token(Token = "0x400023C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private CharacterController _character;

	[Token(Token = "0x400023D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private MeshFilter _meshFilter;

	[Token(Token = "0x400023E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float _height;

	[Token(Token = "0x400023F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float _radius;

	[Token(Token = "0x4000240")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x975EF8", Offset = "0x975EF8")]
	public int SubdivisionsU;

	[Token(Token = "0x4000241")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x975F14", Offset = "0x975F14")]
	public int SubdivisionsV;

	[Token(Token = "0x4000242")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int _subdivisionU;

	[Token(Token = "0x4000243")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private int _subdivisionV;

	[Token(Token = "0x4000244")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Vector3[] _vertices;

	[Token(Token = "0x4000245")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private int[] _triangles;

	[Token(Token = "0x600021C")]
	[Address(RVA = "0xC436BC", Offset = "0xC436BC", VA = "0xC436BC")]
	private void Update()
	{
	}

	[Token(Token = "0x600021D")]
	[Address(RVA = "0xC441B0", Offset = "0xC441B0", VA = "0xC441B0")]
	public CharacterCapsule()
	{
	}
}
[Token(Token = "0x2000075")]
public class LocomotionSampleSupport : MonoBehaviour
{
	[Token(Token = "0x4000246")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private LocomotionController lc;

	[Token(Token = "0x4000247")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool inMenu;

	[Token(Token = "0x17000047")]
	private LocomotionTeleport TeleportController
	{
		[Token(Token = "0x600021E")]
		[Address(RVA = "0xBEAD18", Offset = "0xBEAD18", VA = "0xBEAD18")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600021F")]
	[Address(RVA = "0xBEAD70", Offset = "0xBEAD70", VA = "0xBEAD70")]
	public void Start()
	{
	}

	[Token(Token = "0x6000220")]
	[Address(RVA = "0xBEB0C0", Offset = "0xBEB0C0", VA = "0xBEB0C0")]
	public void Update()
	{
	}

	[Token(Token = "0x6000221")]
	[Address(RVA = "0xBEB1A4", Offset = "0xBEB1A4", VA = "0xBEB1A4")]
	[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x987840", Offset = "0x987840")]
	private static void Log(string msg)
	{
	}

	[Token(Token = "0x6000222")]
	public static TActivate ActivateCategory<TCategory, TActivate>(GameObject target) where TCategory : MonoBehaviour where TActivate : MonoBehaviour
	{
		return null;
	}

	[Token(Token = "0x6000223")]
	protected void ActivateHandlers<TInput, TAim, TTarget, TOrientation, TTransition>() where TInput : TeleportInputHandler where TAim : TeleportAimHandler where TTarget : TeleportTargetHandler where TOrientation : TeleportOrientationHandler where TTransition : TeleportTransition
	{
	}

	[Token(Token = "0x6000224")]
	protected void ActivateInput<TActivate>() where TActivate : TeleportInputHandler
	{
	}

	[Token(Token = "0x6000225")]
	protected void ActivateAim<TActivate>() where TActivate : TeleportAimHandler
	{
	}

	[Token(Token = "0x6000226")]
	protected void ActivateTarget<TActivate>() where TActivate : TeleportTargetHandler
	{
	}

	[Token(Token = "0x6000227")]
	protected void ActivateOrientation<TActivate>() where TActivate : TeleportOrientationHandler
	{
	}

	[Token(Token = "0x6000228")]
	protected void ActivateTransition<TActivate>() where TActivate : TeleportTransition
	{
	}

	[Token(Token = "0x6000229")]
	protected TActivate ActivateCategory<TCategory, TActivate>() where TCategory : MonoBehaviour where TActivate : MonoBehaviour
	{
		return null;
	}

	[Token(Token = "0x600022A")]
	[Address(RVA = "0xBEB20C", Offset = "0xBEB20C", VA = "0xBEB20C")]
	protected void UpdateToggle(Toggle toggle, bool enabled)
	{
	}

	[Token(Token = "0x600022B")]
	[Address(RVA = "0xBEB248", Offset = "0xBEB248", VA = "0xBEB248")]
	private void SetupNonCap()
	{
	}

	[Token(Token = "0x600022C")]
	[Address(RVA = "0xBEB2BC", Offset = "0xBEB2BC", VA = "0xBEB2BC")]
	private void SetupTeleportDefaults()
	{
	}

	[Token(Token = "0x600022D")]
	[Address(RVA = "0xBEB418", Offset = "0xBEB418", VA = "0xBEB418")]
	protected GameObject AddInstance(GameObject template, string label)
	{
		return null;
	}

	[Token(Token = "0x600022E")]
	[Address(RVA = "0xBEB4EC", Offset = "0xBEB4EC", VA = "0xBEB4EC")]
	private void SetupNodeTeleport()
	{
	}

	[Token(Token = "0x600022F")]
	[Address(RVA = "0xBEAFCC", Offset = "0xBEAFCC", VA = "0xBEAFCC")]
	private void SetupTwoStickTeleport()
	{
	}

	[Token(Token = "0x6000230")]
	[Address(RVA = "0xBEB5AC", Offset = "0xBEB5AC", VA = "0xBEB5AC")]
	private void SetupWalkOnly()
	{
	}

	[Token(Token = "0x6000231")]
	[Address(RVA = "0xBEB614", Offset = "0xBEB614", VA = "0xBEB614")]
	private void SetupLeftStrafeRightTeleport()
	{
	}

	[Token(Token = "0x6000232")]
	[Address(RVA = "0xBEB6F8", Offset = "0xBEB6F8", VA = "0xBEB6F8")]
	public LocomotionSampleSupport()
	{
	}
}
[Token(Token = "0x2000076")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x97159C", Offset = "0x97159C")]
public class OVROverlayCanvas : MonoBehaviour
{
	[Token(Token = "0x2000077")]
	public enum DrawMode
	{
		[Token(Token = "0x400025D")]
		Opaque,
		[Token(Token = "0x400025E")]
		OpaqueWithClip,
		[Token(Token = "0x400025F")]
		TransparentDefaultAlpha,
		[Token(Token = "0x4000260")]
		TransparentCorrectAlpha
	}

	[Token(Token = "0x4000248")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[HideInInspector]
	[SerializeField]
	private Shader _transparentShader;

	[Token(Token = "0x4000249")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[HideInInspector]
	[SerializeField]
	private Shader _opaqueShader;

	[Token(Token = "0x400024A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private RectTransform _rectTransform;

	[Token(Token = "0x400024B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Canvas _canvas;

	[Token(Token = "0x400024C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Camera _camera;

	[Token(Token = "0x400024D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private OVROverlay _overlay;

	[Token(Token = "0x400024E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private RenderTexture _renderTexture;

	[Token(Token = "0x400024F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private MeshRenderer _meshRenderer;

	[Token(Token = "0x4000250")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Mesh _quad;

	[Token(Token = "0x4000251")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Material _defaultMat;

	[Token(Token = "0x4000252")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public int MaxTextureSize;

	[Token(Token = "0x4000253")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public int MinTextureSize;

	[Token(Token = "0x4000254")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public float PixelsPerUnit;

	[Token(Token = "0x4000255")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public int DrawRate;

	[Token(Token = "0x4000256")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public int DrawFrameOffset;

	[Token(Token = "0x4000257")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public bool Expensive;

	[Token(Token = "0x4000258")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public int Layer;

	[Token(Token = "0x4000259")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public DrawMode Opacity;

	[Token(Token = "0x400025A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private bool ScaleViewport;

	[Token(Token = "0x400025B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly Plane[] _FrustumPlanes;

	[Token(Token = "0x17000048")]
	public bool overlayEnabled
	{
		[Token(Token = "0x6000239")]
		[Address(RVA = "0xD6FBFC", Offset = "0xD6FBFC", VA = "0xD6FBFC")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600023A")]
		[Address(RVA = "0xD6FC90", Offset = "0xD6FC90", VA = "0xD6FC90")]
		set
		{
		}
	}

	[Token(Token = "0x6000233")]
	[Address(RVA = "0xD6E4D8", Offset = "0xD6E4D8", VA = "0xD6E4D8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000234")]
	[Address(RVA = "0xD6F1FC", Offset = "0xD6F1FC", VA = "0xD6F1FC")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000235")]
	[Address(RVA = "0xD6F280", Offset = "0xD6F280", VA = "0xD6F280")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000236")]
	[Address(RVA = "0xD6F374", Offset = "0xD6F374", VA = "0xD6F374")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000237")]
	[Address(RVA = "0xD6F468", Offset = "0xD6F468", VA = "0xD6F468", Slot = "4")]
	protected virtual bool ShouldRender()
	{
		return default(bool);
	}

	[Token(Token = "0x6000238")]
	[Address(RVA = "0xD6F66C", Offset = "0xD6F66C", VA = "0xD6F66C")]
	private void Update()
	{
	}

	[Token(Token = "0x600023B")]
	[Address(RVA = "0xD6FD60", Offset = "0xD6FD60", VA = "0xD6FD60")]
	public OVROverlayCanvas()
	{
	}
}
[Token(Token = "0x2000078")]
public class StartMenu : MonoBehaviour
{
	[Token(Token = "0x2000079")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x971600", Offset = "0x971600")]
	private sealed class <>c__DisplayClass3_0
	{
		[Token(Token = "0x4000264")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int sceneIndex;

		[Token(Token = "0x4000265")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public StartMenu <>4__this;

		[Token(Token = "0x6000240")]
		[Address(RVA = "0xDFBA08", Offset = "0xDFBA08", VA = "0xDFBA08")]
		public <>c__DisplayClass3_0()
		{
		}

		[Token(Token = "0x6000241")]
		[Address(RVA = "0xDFBB18", Offset = "0xDFBB18", VA = "0xDFBB18")]
		internal void <Start>b__0()
		{
		}
	}

	[Token(Token = "0x4000261")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OVROverlay overlay;

	[Token(Token = "0x4000262")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public OVROverlay text;

	[Token(Token = "0x4000263")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OVRCameraRig vrRig;

	[Token(Token = "0x600023D")]
	[Address(RVA = "0xDFB838", Offset = "0xDFB838", VA = "0xDFB838")]
	private void Start()
	{
	}

	[Token(Token = "0x600023E")]
	[Address(RVA = "0xDFBA10", Offset = "0xDFBA10", VA = "0xDFBA10")]
	private void LoadScene(int idx)
	{
	}

	[Token(Token = "0x600023F")]
	[Address(RVA = "0xDFBB10", Offset = "0xDFBB10", VA = "0xDFBB10")]
	public StartMenu()
	{
	}
}
[Token(Token = "0x200007A")]
public class PlaySoundOnCollision : MonoBehaviour
{
	[Token(Token = "0x4000266")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public NeatAudioPlayer soundPlayer;

	[Token(Token = "0x6000242")]
	[Address(RVA = "0xD87F64", Offset = "0xD87F64", VA = "0xD87F64")]
	private void Start()
	{
	}

	[Token(Token = "0x6000243")]
	[Address(RVA = "0xD87F68", Offset = "0xD87F68", VA = "0xD87F68")]
	private void Update()
	{
	}

	[Token(Token = "0x6000244")]
	[Address(RVA = "0xD87F6C", Offset = "0xD87F6C", VA = "0xD87F6C")]
	private void OnParticleCollision(GameObject other)
	{
	}

	[Token(Token = "0x6000245")]
	[Address(RVA = "0xD87FFC", Offset = "0xD87FFC", VA = "0xD87FFC")]
	public PlaySoundOnCollision()
	{
	}
}
[Token(Token = "0x200007B")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x971610", Offset = "0x971610")]
public class ADSR : MonoBehaviour
{
	[Token(Token = "0x4000267")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private readonly ASREnvelope _envelope;

	[Token(Token = "0x4000268")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private AudioSource _audioSource;

	[Token(Token = "0x4000269")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x975FA0", Offset = "0x975FA0")]
	public double attackTime;

	[Token(Token = "0x400026A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x975FB8", Offset = "0x975FB8")]
	public double sustainTime;

	[Token(Token = "0x400026B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x975FD0", Offset = "0x975FD0")]
	public double releaseTime;

	[Token(Token = "0x6000246")]
	[Address(RVA = "0xF573D0", Offset = "0xF573D0", VA = "0xF573D0")]
	public void Play()
	{
	}

	[Token(Token = "0x6000247")]
	[Address(RVA = "0xF57504", Offset = "0xF57504", VA = "0xF57504")]
	public void NoteOff()
	{
	}

	[Token(Token = "0x6000248")]
	[Address(RVA = "0xF57530", Offset = "0xF57530", VA = "0xF57530")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000249")]
	[Address(RVA = "0xF575B4", Offset = "0xF575B4", VA = "0xF575B4")]
	private void OnAudioFilterRead(float[] buffer, int numChannels)
	{
	}

	[Token(Token = "0x600024A")]
	[Address(RVA = "0xF57774", Offset = "0xF57774", VA = "0xF57774")]
	public ADSR()
	{
	}
}
[Token(Token = "0x200007C")]
public class ASREnvelope
{
	[Token(Token = "0x200007D")]
	private enum State
	{
		[Token(Token = "0x4000272")]
		Idle,
		[Token(Token = "0x4000273")]
		Attack,
		[Token(Token = "0x4000274")]
		Sustain,
		[Token(Token = "0x4000275")]
		Release
	}

	[Token(Token = "0x400026C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private State _state;

	[Token(Token = "0x400026D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private double _attackIncrement;

	[Token(Token = "0x400026E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private uint _sustainSamples;

	[Token(Token = "0x400026F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private double _releaseIncrement;

	[Token(Token = "0x4000270")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private double _outputLevel;

	[Token(Token = "0x600024B")]
	[Address(RVA = "0xF5749C", Offset = "0xF5749C", VA = "0xF5749C")]
	public void Reset(double attackTime_s, double sustainTime_s, double releaseTime_s, int sampleRate)
	{
	}

	[Token(Token = "0x600024C")]
	[Address(RVA = "0xF575A8", Offset = "0xF575A8", VA = "0xF575A8")]
	public void Init()
	{
	}

	[Token(Token = "0x600024D")]
	[Address(RVA = "0xF57524", Offset = "0xF57524", VA = "0xF57524")]
	public void NoteOff()
	{
	}

	[Token(Token = "0x600024E")]
	[Address(RVA = "0xF57678", Offset = "0xF57678", VA = "0xF57678")]
	public double GetLevel()
	{
		return default(double);
	}

	[Token(Token = "0x600024F")]
	[Address(RVA = "0xF577E8", Offset = "0xF577E8", VA = "0xF577E8")]
	public ASREnvelope()
	{
	}
}
[Token(Token = "0x200007E")]
public class ParamTester : MonoBehaviour
{
	[Token(Token = "0x6000250")]
	[Address(RVA = "0xBB9BA4", Offset = "0xBB9BA4", VA = "0xBB9BA4")]
	public ParamTester()
	{
	}
}
[Token(Token = "0x200007F")]
public class GestrumentGlobalSync : MonoBehaviour
{
	[Token(Token = "0x2000080")]
	public enum Music
	{
		[Token(Token = "0x4000288")]
		SoftPiano,
		[Token(Token = "0x4000289")]
		GoneFishing,
		[Token(Token = "0x400028A")]
		Quiet,
		[Token(Token = "0x400028B")]
		MainMenu
	}

	[Token(Token = "0x2000081")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x971674", Offset = "0x971674")]
	private sealed class <ResetCursors>d__33 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400028C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400028D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400028E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int sink;

		[Token(Token = "0x400028F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public int curs;

		[Token(Token = "0x1700004E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000277")]
			[Address(RVA = "0xE7CBE4", Offset = "0xE7CBE4", VA = "0xE7CBE4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700004F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000279")]
			[Address(RVA = "0xE7CC4C", Offset = "0xE7CC4C", VA = "0xE7CC4C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000274")]
		[Address(RVA = "0xE7B548", Offset = "0xE7B548", VA = "0xE7B548")]
		[DebuggerHidden]
		public <ResetCursors>d__33(int <>1__state)
		{
		}

		[Token(Token = "0x6000275")]
		[Address(RVA = "0xE7CAFC", Offset = "0xE7CAFC", VA = "0xE7CAFC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000276")]
		[Address(RVA = "0xE7CB00", Offset = "0xE7CB00", VA = "0xE7CB00", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000278")]
		[Address(RVA = "0xE7CBEC", Offset = "0xE7CBEC", VA = "0xE7CBEC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000082")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x971684", Offset = "0x971684")]
	private sealed class <CheckIfMusicFinsihed>d__43 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000290")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000291")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000292")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GestrumentGlobalSync <>4__this;

		[Token(Token = "0x4000293")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public NeatAudioPlayer audioPlayer;

		[Token(Token = "0x17000050")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600027D")]
			[Address(RVA = "0xE7C8EC", Offset = "0xE7C8EC", VA = "0xE7C8EC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000051")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600027F")]
			[Address(RVA = "0xE7C954", Offset = "0xE7C954", VA = "0xE7C954", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600027A")]
		[Address(RVA = "0xE7BB18", Offset = "0xE7BB18", VA = "0xE7BB18")]
		[DebuggerHidden]
		public <CheckIfMusicFinsihed>d__43(int <>1__state)
		{
		}

		[Token(Token = "0x600027B")]
		[Address(RVA = "0xE7C7C8", Offset = "0xE7C7C8", VA = "0xE7C7C8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600027C")]
		[Address(RVA = "0xE7C7CC", Offset = "0xE7C7CC", VA = "0xE7C7CC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600027E")]
		[Address(RVA = "0xE7C8F4", Offset = "0xE7C8F4", VA = "0xE7C8F4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000083")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x971694", Offset = "0x971694")]
	private sealed class <FadeOut>d__47 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000294")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000295")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000296")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AudioSource aS;

		[Token(Token = "0x4000297")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float time;

		[Token(Token = "0x4000298")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <elapsedTime>5__2;

		[Token(Token = "0x4000299")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float <startVol>5__3;

		[Token(Token = "0x17000052")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000283")]
			[Address(RVA = "0xE7CA8C", Offset = "0xE7CA8C", VA = "0xE7CA8C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000053")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000285")]
			[Address(RVA = "0xE7CAF4", Offset = "0xE7CAF4", VA = "0xE7CAF4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000280")]
		[Address(RVA = "0xE7BEB8", Offset = "0xE7BEB8", VA = "0xE7BEB8")]
		[DebuggerHidden]
		public <FadeOut>d__47(int <>1__state)
		{
		}

		[Token(Token = "0x6000281")]
		[Address(RVA = "0xE7C95C", Offset = "0xE7C95C", VA = "0xE7C95C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000282")]
		[Address(RVA = "0xE7C960", Offset = "0xE7C960", VA = "0xE7C960", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000284")]
		[Address(RVA = "0xE7CA94", Offset = "0xE7CA94", VA = "0xE7CA94", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000084")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9716A4", Offset = "0x9716A4")]
	private sealed class <>c__DisplayClass49_0
	{
		[Token(Token = "0x400029A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vector3 from;

		[Token(Token = "0x400029B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GestrumentGlobalSync inst;

		[Token(Token = "0x400029C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int cursorNum;

		[Token(Token = "0x400029D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public Vector3 to;

		[Token(Token = "0x6000286")]
		[Address(RVA = "0xE7C1F0", Offset = "0xE7C1F0", VA = "0xE7C1F0")]
		public <>c__DisplayClass49_0()
		{
		}

		[Token(Token = "0x6000287")]
		[Address(RVA = "0xE7C6E0", Offset = "0xE7C6E0", VA = "0xE7C6E0")]
		internal Vector3 <MoveCursor>b__0()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000288")]
		[Address(RVA = "0xE7C6EC", Offset = "0xE7C6EC", VA = "0xE7C6EC")]
		internal void <MoveCursor>b__1(Vector3 x)
		{
		}

		[Token(Token = "0x6000289")]
		[Address(RVA = "0xE7C6F8", Offset = "0xE7C6F8", VA = "0xE7C6F8")]
		internal void <MoveCursor>b__2()
		{
		}

		[Token(Token = "0x600028A")]
		[Address(RVA = "0xE7C760", Offset = "0xE7C760", VA = "0xE7C760")]
		internal void <MoveCursor>b__3()
		{
		}
	}

	[Token(Token = "0x4000276")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static GestrumentGlobalSync instance;

	[Token(Token = "0x4000277")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static bool hasLookedForInstance;

	[Token(Token = "0x4000278")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool normalspecialmusicplaying;

	[Token(Token = "0x4000279")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Music currentMusic;

	[Token(Token = "0x400027A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private AudioMixer mixer;

	[Token(Token = "0x400027B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float tempo;

	[Token(Token = "0x400027C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x975FE8", Offset = "0x975FE8")]
	private static GestrumentCore <ResonanceCore>k__BackingField;

	[Token(Token = "0x400027D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x975FF8", Offset = "0x975FF8")]
	private static IBiomeMusic <BiomeMusicInterface>k__BackingField;

	[Token(Token = "0x400027E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public double baseMusic;

	[Token(Token = "0x400027F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public double currentMus;

	[Token(Token = "0x4000280")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public AudioClip mechantMusicDay;

	[Token(Token = "0x4000281")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public AudioClip mechantMusicNight;

	[Token(Token = "0x4000282")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public AudioSource merchantMusic;

	[Token(Token = "0x4000283")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public AudioSource menuMusic;

	[Token(Token = "0x4000284")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public NeatAudioPlayer islandCompleteMusicPlayer;

	[Token(Token = "0x4000285")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public NeatAudioPlayer creditsMusicPlayer;

	[Token(Token = "0x4000286")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Coroutine fadeout;

	[Token(Token = "0x17000049")]
	public static GestrumentCore ResonanceCore
	{
		[Token(Token = "0x6000251")]
		[Address(RVA = "0xE7A984", Offset = "0xE7A984", VA = "0xE7A984")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x987878", Offset = "0x987878")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000252")]
		[Address(RVA = "0xE7A9EC", Offset = "0xE7A9EC", VA = "0xE7A9EC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x987888", Offset = "0x987888")]
		set
		{
		}
	}

	[Token(Token = "0x1700004A")]
	public static IBiomeMusic BiomeMusicInterface
	{
		[Token(Token = "0x6000253")]
		[Address(RVA = "0xE7AA5C", Offset = "0xE7AA5C", VA = "0xE7AA5C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x987898", Offset = "0x987898")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000254")]
		[Address(RVA = "0xE7AAC4", Offset = "0xE7AAC4", VA = "0xE7AAC4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9878A8", Offset = "0x9878A8")]
		set
		{
		}
	}

	[Token(Token = "0x1700004B")]
	public static bool NormalSpecialMusicPlaying
	{
		[Token(Token = "0x6000258")]
		[Address(RVA = "0xE7AF04", Offset = "0xE7AF04", VA = "0xE7AF04")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000259")]
		[Address(RVA = "0xE7AFBC", Offset = "0xE7AFBC", VA = "0xE7AFBC")]
		set
		{
		}
	}

	[Token(Token = "0x1700004C")]
	public static double BaseMusic
	{
		[Token(Token = "0x600025E")]
		[Address(RVA = "0xE7B574", Offset = "0xE7B574", VA = "0xE7B574")]
		get
		{
			return default(double);
		}
		[Token(Token = "0x600025F")]
		[Address(RVA = "0xE7B628", Offset = "0xE7B628", VA = "0xE7B628")]
		set
		{
		}
	}

	[Token(Token = "0x1700004D")]
	public static double CurrentMusic
	{
		[Token(Token = "0x6000260")]
		[Address(RVA = "0xE7B6DC", Offset = "0xE7B6DC", VA = "0xE7B6DC")]
		get
		{
			return default(double);
		}
		[Token(Token = "0x6000261")]
		[Address(RVA = "0xE7B790", Offset = "0xE7B790", VA = "0xE7B790")]
		set
		{
		}
	}

	[Token(Token = "0x6000255")]
	[Address(RVA = "0xE7AB34", Offset = "0xE7AB34", VA = "0xE7AB34")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000256")]
	[Address(RVA = "0xE7AD1C", Offset = "0xE7AD1C", VA = "0xE7AD1C")]
	private static GestrumentGlobalSync TryFindInstance()
	{
		return null;
	}

	[Token(Token = "0x6000257")]
	[Address(RVA = "0xE7AE24", Offset = "0xE7AE24", VA = "0xE7AE24")]
	private bool CheckOnBoat()
	{
		return default(bool);
	}

	[Token(Token = "0x600025A")]
	[Address(RVA = "0xE7B06C", Offset = "0xE7B06C", VA = "0xE7B06C")]
	private void OnWorldZoneChanged(WorldZone worldZone)
	{
	}

	[Token(Token = "0x600025B")]
	[Address(RVA = "0xE7B130", Offset = "0xE7B130", VA = "0xE7B130")]
	public static void SetLevel(float sliderValue)
	{
	}

	[Token(Token = "0x600025C")]
	[Address(RVA = "0xE7B244", Offset = "0xE7B244", VA = "0xE7B244")]
	public static void SetMusic(Music music, float quant, float startDelay)
	{
	}

	[Token(Token = "0x600025D")]
	[Address(RVA = "0xE7B3D0", Offset = "0xE7B3D0", VA = "0xE7B3D0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9878B8", Offset = "0x9878B8")]
	private IEnumerator ResetCursors(int sink, int curs)
	{
		return null;
	}

	[Token(Token = "0x6000262")]
	[Address(RVA = "0xE7B44C", Offset = "0xE7B44C", VA = "0xE7B44C")]
	public static void MenuMusic(bool play = false)
	{
	}

	[Token(Token = "0x6000263")]
	[Address(RVA = "0xE7B8D0", Offset = "0xE7B8D0", VA = "0xE7B8D0")]
	public static void PlayCreditsMusic()
	{
	}

	[Token(Token = "0x6000264")]
	[Address(RVA = "0xE7BA40", Offset = "0xE7BA40", VA = "0xE7BA40")]
	public static void PlayIslandCompleteMusic()
	{
	}

	[Token(Token = "0x6000265")]
	[Address(RVA = "0xE7B9A8", Offset = "0xE7B9A8", VA = "0xE7B9A8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x98791C", Offset = "0x98791C")]
	private IEnumerator CheckIfMusicFinsihed(NeatAudioPlayer audioPlayer)
	{
		return null;
	}

	[Token(Token = "0x6000266")]
	[Address(RVA = "0xE7BB44", Offset = "0xE7BB44", VA = "0xE7BB44")]
	public static bool IsVerySpecialMusicIsPlaying()
	{
		return default(bool);
	}

	[Token(Token = "0x6000267")]
	[Address(RVA = "0xE7BC20", Offset = "0xE7BC20", VA = "0xE7BC20")]
	public static void SetSnapShot(string snapshot, float time)
	{
	}

	[Token(Token = "0x6000268")]
	[Address(RVA = "0xE7BD30", Offset = "0xE7BD30", VA = "0xE7BD30")]
	public static void MerchantMusic(bool play = false)
	{
	}

	[Token(Token = "0x6000269")]
	[Address(RVA = "0xE7B844", Offset = "0xE7B844", VA = "0xE7B844")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x987980", Offset = "0x987980")]
	private IEnumerator FadeOut(AudioSource aS, float time)
	{
		return null;
	}

	[Token(Token = "0x600026A")]
	[Address(RVA = "0xE7BEE4", Offset = "0xE7BEE4", VA = "0xE7BEE4")]
	public static void BoatTranspose(int transpose)
	{
	}

	[Token(Token = "0x600026B")]
	[Address(RVA = "0xE7BF68", Offset = "0xE7BF68", VA = "0xE7BF68")]
	public static void MoveCursor(int cursorNum, Vector3 from, Vector3 to, float time)
	{
	}

	[Token(Token = "0x600026C")]
	[Address(RVA = "0xE7C1F8", Offset = "0xE7C1F8", VA = "0xE7C1F8")]
	private void UpdateCursorPlayer(int curs, float x, float y, float z, bool gate)
	{
	}

	[Token(Token = "0x600026D")]
	[Address(RVA = "0xE7C25C", Offset = "0xE7C25C", VA = "0xE7C25C")]
	public static void SliderControl(int sliderNumber, float value)
	{
	}

	[Token(Token = "0x600026E")]
	[Address(RVA = "0xE7C334", Offset = "0xE7C334", VA = "0xE7C334")]
	public static void SliderControlSmooth(int sliderNumber, float value, float smoothness)
	{
	}

	[Token(Token = "0x600026F")]
	[Address(RVA = "0xE7C40C", Offset = "0xE7C40C", VA = "0xE7C40C")]
	public static void SliderControlNextDivision(int sliderNumber, float value, float subdiv)
	{
	}

	[Token(Token = "0x6000270")]
	[Address(RVA = "0xE7C4E4", Offset = "0xE7C4E4", VA = "0xE7C4E4")]
	public static void ForceTempo(float t)
	{
	}

	[Token(Token = "0x6000271")]
	[Address(RVA = "0xE7C5D4", Offset = "0xE7C5D4", VA = "0xE7C5D4")]
	public static void TempoControl(float tempoMin, float tempoMax, float value)
	{
	}

	[Token(Token = "0x6000272")]
	[Address(RVA = "0xE7C6B8", Offset = "0xE7C6B8", VA = "0xE7C6B8")]
	public GestrumentGlobalSync()
	{
	}
}
[Token(Token = "0x2000085")]
public enum ModalTranspose
{
	[Token(Token = "0x400029F")]
	I = 0,
	[Token(Token = "0x40002A0")]
	II = 1,
	[Token(Token = "0x40002A1")]
	III = 2,
	[Token(Token = "0x40002A2")]
	IV = 3,
	[Token(Token = "0x40002A3")]
	V = 4,
	[Token(Token = "0x40002A4")]
	VI = 5,
	[Token(Token = "0x40002A5")]
	VII = 6,
	[Token(Token = "0x40002A6")]
	I_up = 7,
	[Token(Token = "0x40002A7")]
	VII_down = -1,
	[Token(Token = "0x40002A8")]
	VI_down = -2,
	[Token(Token = "0x40002A9")]
	V_down = -3,
	[Token(Token = "0x40002AA")]
	IV_down = -4,
	[Token(Token = "0x40002AB")]
	III_down = -5,
	[Token(Token = "0x40002AC")]
	II_down = -6,
	[Token(Token = "0x40002AD")]
	I_down = -7
}
[Token(Token = "0x2000086")]
public class MusicSwitcher : MonoBehaviour
{
	[Token(Token = "0x2000087")]
	public enum Music
	{
		[Token(Token = "0x40002AF")]
		Silence = 0,
		[Token(Token = "0x40002B0")]
		Pianothing = 1,
		[Token(Token = "0x40002B1")]
		Boating = 10,
		[Token(Token = "0x40002B2")]
		Fishing = -1,
		[Token(Token = "0x40002B3")]
		Crystals = -2
	}

	[Token(Token = "0x600028B")]
	[Address(RVA = "0xC24330", Offset = "0xC24330", VA = "0xC24330")]
	public static void SetMusic(Music music, float quant)
	{
	}

	[Token(Token = "0x600028C")]
	[Address(RVA = "0xC24578", Offset = "0xC24578", VA = "0xC24578")]
	public static void Silence()
	{
	}

	[Token(Token = "0x600028D")]
	[Address(RVA = "0xC24584", Offset = "0xC24584", VA = "0xC24584")]
	public static void PianoMusic(float quant = 4f)
	{
	}

	[Token(Token = "0x600028E")]
	[Address(RVA = "0xC2460C", Offset = "0xC2460C", VA = "0xC2460C")]
	public static void BoatingMusic()
	{
	}

	[Token(Token = "0x600028F")]
	[Address(RVA = "0xC24688", Offset = "0xC24688", VA = "0xC24688")]
	public static void MerchantMusic()
	{
	}

	[Token(Token = "0x6000290")]
	[Address(RVA = "0xC24694", Offset = "0xC24694", VA = "0xC24694")]
	public static void RestoreBaseMusic(float quant = 4f)
	{
	}

	[Token(Token = "0x6000291")]
	[Address(RVA = "0xC2475C", Offset = "0xC2475C", VA = "0xC2475C")]
	public static void FishingMusic()
	{
	}

	[Token(Token = "0x6000292")]
	[Address(RVA = "0xC247D8", Offset = "0xC247D8", VA = "0xC247D8")]
	public static void StopFishing()
	{
	}

	[Token(Token = "0x6000293")]
	[Address(RVA = "0xC24850", Offset = "0xC24850", VA = "0xC24850")]
	public static void CrystalPuzzle()
	{
	}

	[Token(Token = "0x6000294")]
	[Address(RVA = "0xC2485C", Offset = "0xC2485C", VA = "0xC2485C")]
	public MusicSwitcher()
	{
	}
}
[Token(Token = "0x2000088")]
public static class TransposeMusic
{
	[Token(Token = "0x6000295")]
	[Address(RVA = "0xE68C14", Offset = "0xE68C14", VA = "0xE68C14")]
	public static void SetupTransposeSlots(Context context, int sinkID)
	{
	}

	[Token(Token = "0x6000296")]
	[Address(RVA = "0xE68C74", Offset = "0xE68C74", VA = "0xE68C74")]
	public static void SetValueForTransposeSlot(Context context, int sinkID, int slot, float value)
	{
	}

	[Token(Token = "0x6000297")]
	[Address(RVA = "0xE68DC8", Offset = "0xE68DC8", VA = "0xE68DC8")]
	public static void ScheduleTransposeSlot(Context context, int sinkID, double div, int slot)
	{
	}
}
[Token(Token = "0x2000089")]
public class WaitForDivision : CustomYieldInstruction
{
	[Token(Token = "0x40002B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private Context context;

	[Token(Token = "0x40002B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private double div;

	[Token(Token = "0x17000054")]
	public override bool keepWaiting
	{
		[Token(Token = "0x6000298")]
		[Address(RVA = "0xE6C2F4", Offset = "0xE6C2F4", VA = "0xE6C2F4", Slot = "7")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000299")]
	[Address(RVA = "0xE6C364", Offset = "0xE6C364", VA = "0xE6C364")]
	public WaitForDivision(Context c, double d)
	{
	}
}
[Token(Token = "0x200008A")]
public class InstrumentManager : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x200008B")]
	public class OutputGroupList
	{
		[Token(Token = "0x40002BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public List<SamplerSetup> outputGroupList;

		[Token(Token = "0x60002A2")]
		[Address(RVA = "0xBDFC2C", Offset = "0xBDFC2C", VA = "0xBDFC2C")]
		public OutputGroupList()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x200008C")]
	public class SamplerSetup
	{
		[Token(Token = "0x40002BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string name;

		[Token(Token = "0x40002BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string path;

		[Token(Token = "0x40002BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float volume;

		[Token(Token = "0x40002C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float reverbSend;

		[Token(Token = "0x60002A3")]
		[Address(RVA = "0xBDFCA8", Offset = "0xBDFCA8", VA = "0xBDFCA8")]
		public SamplerSetup()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x200008D")]
	public class GroupAssignments
	{
		[Token(Token = "0x40002C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public List<SinkList> groupAssignments;

		[Token(Token = "0x60002A4")]
		[Address(RVA = "0xBDFBB0", Offset = "0xBDFBB0", VA = "0xBDFBB0")]
		public GroupAssignments()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x200008E")]
	public class SinkList
	{
		[Token(Token = "0x40002C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int sink;

		[Token(Token = "0x40002C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int[] output;

		[Token(Token = "0x60002A5")]
		[Address(RVA = "0xBDFCBC", Offset = "0xBDFCBC", VA = "0xBDFCBC")]
		public SinkList()
		{
		}
	}

	[Token(Token = "0x40002B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OutputGroupList OutputGroups;

	[Token(Token = "0x40002B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GroupAssignments GroupDestinations;

	[Token(Token = "0x40002B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public TextAsset jsonsettings;

	[Token(Token = "0x40002B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AudioMixer mixer;

	[Token(Token = "0x40002BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public List<ReactionalSampler> sinkSamplers;

	[Token(Token = "0x40002BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private ReactionalTimeline timeline;

	[Token(Token = "0x600029A")]
	[Address(RVA = "0xBDF378", Offset = "0xBDF378", VA = "0xBDF378")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600029B")]
	[Address(RVA = "0xBDF560", Offset = "0xBDF560", VA = "0xBDF560")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600029C")]
	[Address(RVA = "0xBDF4B8", Offset = "0xBDF4B8", VA = "0xBDF4B8")]
	private void LoadFromJson()
	{
	}

	[Token(Token = "0x600029D")]
	[Address(RVA = "0xBDF55C", Offset = "0xBDF55C", VA = "0xBDF55C")]
	private void SpawnSamplers()
	{
	}

	[Token(Token = "0x600029E")]
	[Address(RVA = "0xBDF698", Offset = "0xBDF698", VA = "0xBDF698")]
	private void SetupTrackForMixer(GameObject obj, int index)
	{
	}

	[Token(Token = "0x600029F")]
	[Address(RVA = "0xBDF808", Offset = "0xBDF808", VA = "0xBDF808")]
	public void RouteNoteOn(ReactionalTimeline timeline, double beat, int sink, int lane, int instrument, int voice, float pitch, float velocity)
	{
	}

	[Token(Token = "0x60002A0")]
	[Address(RVA = "0xBDF9AC", Offset = "0xBDF9AC", VA = "0xBDF9AC")]
	public void RouteNoteOff(ReactionalTimeline timeline, double beat, int sink, int output, int instrument, int voice, float velocity)
	{
	}

	[Token(Token = "0x60002A1")]
	[Address(RVA = "0xBDFB34", Offset = "0xBDFB34", VA = "0xBDFB34")]
	public InstrumentManager()
	{
	}
}
[Token(Token = "0x200008F")]
public class ManualSinkOutputRouter : MonoBehaviour
{
	[Token(Token = "0x40002C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ReactionalTimeline m_timeline;

	[Token(Token = "0x40002C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private int m_sinkIndex;

	[Token(Token = "0x40002C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private List<ReactionalSampler> m_samplers;

	[Token(Token = "0x40002C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private bool setEnginePlaying;

	[Token(Token = "0x60002A6")]
	[Address(RVA = "0xC13590", Offset = "0xC13590", VA = "0xC13590")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60002A7")]
	[Address(RVA = "0xC13658", Offset = "0xC13658", VA = "0xC13658")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60002A8")]
	[Address(RVA = "0xC13720", Offset = "0xC13720", VA = "0xC13720")]
	private void Start()
	{
	}

	[Token(Token = "0x60002A9")]
	[Address(RVA = "0xC13730", Offset = "0xC13730", VA = "0xC13730")]
	public void StartSinkEngine()
	{
	}

	[Token(Token = "0x60002AA")]
	[Address(RVA = "0xC13760", Offset = "0xC13760", VA = "0xC13760")]
	public void StopSinkEngine()
	{
	}

	[Token(Token = "0x60002AB")]
	[Address(RVA = "0xC13790", Offset = "0xC13790", VA = "0xC13790")]
	public void RouteNoteOn(ReactionalTimeline timeline, double beat, int sink, int output, int instrument, int voice, float pitch, float velocity)
	{
	}

	[Token(Token = "0x60002AC")]
	[Address(RVA = "0xC13890", Offset = "0xC13890", VA = "0xC13890")]
	public void RouteNoteOff(ReactionalTimeline timeline, double beat, int sink, int output, int instrument, int voice, float velocity)
	{
	}

	[Token(Token = "0x60002AD")]
	[Address(RVA = "0xC13974", Offset = "0xC13974", VA = "0xC13974")]
	public ManualSinkOutputRouter()
	{
	}
}
[Token(Token = "0x2000090")]
public class PlayableInstrument : MonoBehaviour
{
	[Token(Token = "0x2000091")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9716B4", Offset = "0x9716B4")]
	private sealed class <DelayStart>d__8 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40002CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40002D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40002D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PlayableInstrument <>4__this;

		[Token(Token = "0x17000056")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60002B6")]
			[Address(RVA = "0xD882D0", Offset = "0xD882D0", VA = "0xD882D0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000057")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60002B8")]
			[Address(RVA = "0xD88338", Offset = "0xD88338", VA = "0xD88338", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60002B3")]
		[Address(RVA = "0xD880AC", Offset = "0xD880AC", VA = "0xD880AC")]
		[DebuggerHidden]
		public <DelayStart>d__8(int <>1__state)
		{
		}

		[Token(Token = "0x60002B4")]
		[Address(RVA = "0xD88148", Offset = "0xD88148", VA = "0xD88148", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60002B5")]
		[Address(RVA = "0xD8814C", Offset = "0xD8814C", VA = "0xD8814C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60002B7")]
		[Address(RVA = "0xD882D8", Offset = "0xD882D8", VA = "0xD882D8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40002C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ReactionalTimeline m_timeline;

	[Token(Token = "0x40002C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private int m_sinkIndex;

	[Token(Token = "0x40002CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	private int m_curInsNum;

	[Token(Token = "0x40002CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private int m_minnote;

	[Token(Token = "0x40002CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[SerializeField]
	private int m_maxnote;

	[Token(Token = "0x40002CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float m_curY;

	[Token(Token = "0x40002CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private bool ready;

	[Token(Token = "0x17000055")]
	public float setY
	{
		[Token(Token = "0x60002B0")]
		[Address(RVA = "0xD880D8", Offset = "0xD880D8", VA = "0xD880D8")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60002B1")]
		[Address(RVA = "0xD880E0", Offset = "0xD880E0", VA = "0xD880E0")]
		set
		{
		}
	}

	[Token(Token = "0x60002AE")]
	[Address(RVA = "0xD88004", Offset = "0xD88004", VA = "0xD88004")]
	private void Start()
	{
	}

	[Token(Token = "0x60002AF")]
	[Address(RVA = "0xD88030", Offset = "0xD88030", VA = "0xD88030")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x987AD4", Offset = "0x987AD4")]
	private IEnumerator DelayStart()
	{
		return null;
	}

	[Token(Token = "0x60002B2")]
	[Address(RVA = "0xD8812C", Offset = "0xD8812C", VA = "0xD8812C")]
	public PlayableInstrument()
	{
	}
}
[Token(Token = "0x2000092")]
public class ReactionalSampler : MonoBehaviour
{
	[Token(Token = "0x2000093")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9716C4", Offset = "0x9716C4")]
	private sealed class <TestPlay>d__28 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40002EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40002ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40002EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ReactionalSampler <>4__this;

		[Token(Token = "0x17000058")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60002C4")]
			[Address(RVA = "0xD1C100", Offset = "0xD1C100", VA = "0xD1C100", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000059")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60002C6")]
			[Address(RVA = "0xD1C168", Offset = "0xD1C168", VA = "0xD1C168", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60002C1")]
		[Address(RVA = "0xD1B538", Offset = "0xD1B538", VA = "0xD1B538")]
		[DebuggerHidden]
		public <TestPlay>d__28(int <>1__state)
		{
		}

		[Token(Token = "0x60002C2")]
		[Address(RVA = "0xD1BFA4", Offset = "0xD1BFA4", VA = "0xD1BFA4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60002C3")]
		[Address(RVA = "0xD1BFA8", Offset = "0xD1BFA8", VA = "0xD1BFA8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60002C5")]
		[Address(RVA = "0xD1C108", Offset = "0xD1C108", VA = "0xD1C108", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000094")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9716D4", Offset = "0x9716D4")]
	private sealed class <StartFade>d__31 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40002EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40002F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40002F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public double wait;

		[Token(Token = "0x40002F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public AudioSource audioSource;

		[Token(Token = "0x40002F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float targetVolume;

		[Token(Token = "0x40002F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float duration;

		[Token(Token = "0x40002F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float <currentTime>5__2;

		[Token(Token = "0x40002F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float <start>5__3;

		[Token(Token = "0x1700005A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60002CA")]
			[Address(RVA = "0xD1BF34", Offset = "0xD1BF34", VA = "0xD1BF34", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700005B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60002CC")]
			[Address(RVA = "0xD1BF9C", Offset = "0xD1BF9C", VA = "0xD1BF9C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60002C7")]
		[Address(RVA = "0xD1BBEC", Offset = "0xD1BBEC", VA = "0xD1BBEC")]
		[DebuggerHidden]
		public <StartFade>d__31(int <>1__state)
		{
		}

		[Token(Token = "0x60002C8")]
		[Address(RVA = "0xD1BDB0", Offset = "0xD1BDB0", VA = "0xD1BDB0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60002C9")]
		[Address(RVA = "0xD1BDB4", Offset = "0xD1BDB4", VA = "0xD1BDB4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60002CB")]
		[Address(RVA = "0xD1BF3C", Offset = "0xD1BF3C", VA = "0xD1BF3C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40002D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ReactionalSampleBank sampleBank;

	[Token(Token = "0x40002D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private double globalOffset;

	[Token(Token = "0x40002D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int globalTranspose;

	[Token(Token = "0x40002D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x976088", Offset = "0x976088")]
	public float setVelocity;

	[Token(Token = "0x40002D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float maxVelocity;

	[Token(Token = "0x40002D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float minVelocity;

	[Token(Token = "0x40002D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9760A0", Offset = "0x9760A0")]
	public float volumeOffset;

	[Token(Token = "0x40002D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public int polyphony;

	[Token(Token = "0x40002DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool oneShot;

	[Token(Token = "0x40002DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
	public bool autoPanByPitch;

	[Token(Token = "0x40002DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float autoPanMin;

	[Token(Token = "0x40002DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float autoPanMax;

	[Token(Token = "0x40002DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float starttime;

	[Token(Token = "0x40002DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public bool spatialiseInstrument;

	[Token(Token = "0x40002E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GameObject spatialParent;

	[Token(Token = "0x40002E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9760B8", Offset = "0x9760B8")]
	public float releaseTime;

	[Token(Token = "0x40002E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private int currentVoice;

	[Token(Token = "0x40002E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private int prevVoice;

	[Token(Token = "0x40002E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private AudioSource[] audioSource;

	[Token(Token = "0x40002E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private AudioSource[,] voices;

	[Token(Token = "0x40002E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public bool fakeRoundRobin;

	[Token(Token = "0x40002E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9760D0", Offset = "0x9760D0")]
	public int rrRange;

	[Token(Token = "0x40002E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private int roundRobin;

	[Token(Token = "0x40002E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private IEnumerator coroutine;

	[Token(Token = "0x40002EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private IEnumerator[] fadeOut;

	[Token(Token = "0x40002EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public string samplerpath;

	[Token(Token = "0x60002B9")]
	[Address(RVA = "0xD1AFC4", Offset = "0xD1AFC4", VA = "0xD1AFC4")]
	public void Awake()
	{
	}

	[Token(Token = "0x60002BA")]
	[Address(RVA = "0xD1B09C", Offset = "0xD1B09C", VA = "0xD1B09C")]
	private void Start()
	{
	}

	[Token(Token = "0x60002BB")]
	[Address(RVA = "0xD1B4BC", Offset = "0xD1B4BC", VA = "0xD1B4BC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x987B88", Offset = "0x987B88")]
	private IEnumerator TestPlay()
	{
		return null;
	}

	[Token(Token = "0x60002BC")]
	[Address(RVA = "0xD1B564", Offset = "0xD1B564", VA = "0xD1B564")]
	public bool StartVoice(int voice, float pitch, float velocity, int instrument, double beat, double tempo = 0.0, double currentBeat = 0.0)
	{
		return default(bool);
	}

	[Token(Token = "0x60002BD")]
	[Address(RVA = "0xD1B898", Offset = "0xD1B898", VA = "0xD1B898")]
	public bool StopVoice(int voice, int instrument, double beat, double tempo = 0.0, double currentBeat = 0.0)
	{
		return default(bool);
	}

	[Token(Token = "0x60002BE")]
	[Address(RVA = "0xD1BB4C", Offset = "0xD1BB4C", VA = "0xD1BB4C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x987BEC", Offset = "0x987BEC")]
	public IEnumerator StartFade(AudioSource audioSource, double wait, float duration, float targetVolume)
	{
		return null;
	}

	[Token(Token = "0x60002BF")]
	[Address(RVA = "0xD1BC18", Offset = "0xD1BC18", VA = "0xD1BC18")]
	public void StopAllVoices()
	{
	}

	[Token(Token = "0x60002C0")]
	[Address(RVA = "0xD1BCE0", Offset = "0xD1BCE0", VA = "0xD1BCE0")]
	public ReactionalSampler()
	{
	}
}
[Token(Token = "0x2000095")]
public class ReactionalTimeline : MonoBehaviour
{
	[Token(Token = "0x2000096")]
	public delegate void NoteOnEvent(ReactionalTimeline timeline, double offset, int sink, int lane, int instrument, int voice, float pitch, float velocity);

	[Token(Token = "0x2000097")]
	public delegate void NoteOffEvent(ReactionalTimeline timeline, double offset, int sink, int lane, int instrument, int voice, float velocity);

	[Token(Token = "0x2000098")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9716E4", Offset = "0x9716E4")]
	private sealed class <DelayedStart>d__18 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000303")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000304")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000305")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ReactionalTimeline <>4__this;

		[Token(Token = "0x1700005E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60002E2")]
			[Address(RVA = "0xD1D3D8", Offset = "0xD1D3D8", VA = "0xD1D3D8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700005F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60002E4")]
			[Address(RVA = "0xD1D440", Offset = "0xD1D440", VA = "0xD1D440", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60002DF")]
		[Address(RVA = "0xD1C324", Offset = "0xD1C324", VA = "0xD1C324")]
		[DebuggerHidden]
		public <DelayedStart>d__18(int <>1__state)
		{
		}

		[Token(Token = "0x60002E0")]
		[Address(RVA = "0xD1D25C", Offset = "0xD1D25C", VA = "0xD1D25C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60002E1")]
		[Address(RVA = "0xD1D260", Offset = "0xD1D260", VA = "0xD1D260", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60002E3")]
		[Address(RVA = "0xD1D3E0", Offset = "0xD1D3E0", VA = "0xD1D3E0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40002F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private TextAsset timelineState;

	[Token(Token = "0x40002F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public double tempo;

	[Token(Token = "0x40002F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public double currentBeat;

	[Token(Token = "0x40002FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private bool autoStart;

	[Token(Token = "0x40002FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	[SerializeField]
	private bool debugOutput;

	[Token(Token = "0x40002FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Context context;

	[Token(Token = "0x40002FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private InstrumentManager instrumentManager;

	[Token(Token = "0x40002FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool allowPlay;

	[Token(Token = "0x40002FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private OSCMessage message;

	[Token(Token = "0x4000300")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public NoteOnEvent onNoteOn;

	[Token(Token = "0x4000301")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public NoteOffEvent onNoteOff;

	[Token(Token = "0x4000302")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private long progressedTime;

	[Token(Token = "0x1700005C")]
	public Context TimelineContext
	{
		[Token(Token = "0x60002CD")]
		[Address(RVA = "0xD1C170", Offset = "0xD1C170", VA = "0xD1C170")]
		get
		{
			return null;
		}
		[Token(Token = "0x60002CE")]
		[Address(RVA = "0xD1C178", Offset = "0xD1C178", VA = "0xD1C178")]
		set
		{
		}
	}

	[Token(Token = "0x1700005D")]
	public bool IsRunning
	{
		[Token(Token = "0x60002D5")]
		[Address(RVA = "0xD1D1D0", Offset = "0xD1D1D0", VA = "0xD1D1D0")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x60002CF")]
	[Address(RVA = "0xD1C180", Offset = "0xD1C180", VA = "0xD1C180")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60002D0")]
	[Address(RVA = "0xD1C2A8", Offset = "0xD1C2A8", VA = "0xD1C2A8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x987CF0", Offset = "0x987CF0")]
	private IEnumerator DelayedStart()
	{
		return null;
	}

	[Token(Token = "0x60002D1")]
	[Address(RVA = "0xD1C350", Offset = "0xD1C350", VA = "0xD1C350")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x60002D2")]
	[Address(RVA = "0xD1D118", Offset = "0xD1D118", VA = "0xD1D118")]
	public void StartPlaying()
	{
	}

	[Token(Token = "0x60002D3")]
	[Address(RVA = "0xD1D144", Offset = "0xD1D144", VA = "0xD1D144")]
	public void StopPlaying()
	{
	}

	[Token(Token = "0x60002D4")]
	[Address(RVA = "0xD1D168", Offset = "0xD1D168", VA = "0xD1D168")]
	private void PrintToLog(string message)
	{
	}

	[Token(Token = "0x60002D6")]
	[Address(RVA = "0xD1D1D8", Offset = "0xD1D1D8", VA = "0xD1D1D8")]
	public ReactionalTimeline()
	{
	}
}
[Token(Token = "0x2000099")]
public class SinkSetup : MonoBehaviour
{
	[Token(Token = "0x200009A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9716F4", Offset = "0x9716F4")]
	private sealed class <DelayStart>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400030B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400030C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400030D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SinkSetup <>4__this;

		[Token(Token = "0x17000060")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60002EB")]
			[Address(RVA = "0xCC7294", Offset = "0xCC7294", VA = "0xCC7294", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000061")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60002ED")]
			[Address(RVA = "0xCC72FC", Offset = "0xCC72FC", VA = "0xCC72FC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60002E8")]
		[Address(RVA = "0xCC7090", Offset = "0xCC7090", VA = "0xCC7090")]
		[DebuggerHidden]
		public <DelayStart>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x60002E9")]
		[Address(RVA = "0xCC70D0", Offset = "0xCC70D0", VA = "0xCC70D0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60002EA")]
		[Address(RVA = "0xCC70D4", Offset = "0xCC70D4", VA = "0xCC70D4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60002EC")]
		[Address(RVA = "0xCC729C", Offset = "0xCC729C", VA = "0xCC729C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000306")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ReactionalTimeline m_timeline;

	[Token(Token = "0x4000307")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private int m_sinkIndex;

	[Token(Token = "0x4000308")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	private int m_minnote;

	[Token(Token = "0x4000309")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private int m_maxnote;

	[Token(Token = "0x400030A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[SerializeField]
	private int m_instruments;

	[Token(Token = "0x60002E5")]
	[Address(RVA = "0xCC6FE8", Offset = "0xCC6FE8", VA = "0xCC6FE8")]
	private void Start()
	{
	}

	[Token(Token = "0x60002E6")]
	[Address(RVA = "0xCC7014", Offset = "0xCC7014", VA = "0xCC7014")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x987DA4", Offset = "0x987DA4")]
	private IEnumerator DelayStart()
	{
		return null;
	}

	[Token(Token = "0x60002E7")]
	[Address(RVA = "0xCC70BC", Offset = "0xCC70BC", VA = "0xCC70BC")]
	public SinkSetup()
	{
	}
}
[Token(Token = "0x200009B")]
public static class OSCPackUtil
{
	[Token(Token = "0x60002EE")]
	[Address(RVA = "0xD6C86C", Offset = "0xD6C86C", VA = "0xD6C86C")]
	public static void ForceTempo(Context context, float tempo)
	{
	}

	[Token(Token = "0x60002EF")]
	[Address(RVA = "0xD6C944", Offset = "0xD6C944", VA = "0xD6C944")]
	public static void SetNoteRatesToInstant(Context context, int sinkID, int inst)
	{
	}

	[Token(Token = "0x60002F0")]
	[Address(RVA = "0xD6CC90", Offset = "0xD6CC90", VA = "0xD6CC90")]
	public static void SetNoteRatesToDefault(Context context, int sinkID, int inst)
	{
	}

	[Token(Token = "0x60002F1")]
	[Address(RVA = "0xD6D024", Offset = "0xD6D024", VA = "0xD6D024")]
	public static void SetInstrumentRanges(Context context, int sinkID, int inst, int min, int max)
	{
	}

	[Token(Token = "0x60002F2")]
	[Address(RVA = "0xD6D2A4", Offset = "0xD6D2A4", VA = "0xD6D2A4")]
	public static void MapZtoVel(Context context, int sinkID, int inst)
	{
	}

	[Token(Token = "0x60002F3")]
	[Address(RVA = "0xD6D410", Offset = "0xD6D410", VA = "0xD6D410")]
	public static void ConnectCursorToInstrument(Context context, int sinkID, int cursorNum, int instrumentNum)
	{
	}

	[Token(Token = "0x60002F4")]
	[Address(RVA = "0xD6D580", Offset = "0xD6D580", VA = "0xD6D580")]
	public static void SetCursor(Context context, int sinkID, int cursorID, bool gate, double x, double y, double z, int beat = 0)
	{
	}

	[Token(Token = "0x60002F5")]
	[Address(RVA = "0xD6D78C", Offset = "0xD6D78C", VA = "0xD6D78C")]
	public static void SetCursorGate(Context context, int sinkID, int cursorID, bool gate, double beat = 0.0)
	{
	}

	[Token(Token = "0x60002F6")]
	[Address(RVA = "0xD6D938", Offset = "0xD6D938", VA = "0xD6D938")]
	public static void SetSliderValue(Context context, int sinkID, int slider, float value, int beat = 0)
	{
	}

	[Token(Token = "0x60002F7")]
	[Address(RVA = "0xD6DAD0", Offset = "0xD6DAD0", VA = "0xD6DAD0")]
	public static void SetEnginePlaying(Context context, int sinkID, bool gate, int beat = 0)
	{
	}

	[Token(Token = "0x60002F8")]
	[Address(RVA = "0xD6DC40", Offset = "0xD6DC40", VA = "0xD6DC40")]
	public static void ScrubLane(Context context, int laneID, double normPos, long quant, int phase, double fromPos)
	{
	}

	[Token(Token = "0x60002F9")]
	[Address(RVA = "0xD6CB9C", Offset = "0xD6CB9C", VA = "0xD6CB9C")]
	public static void PushToSink(Context context, int sinkID, byte[] arr)
	{
	}
}
[Serializable]
[Token(Token = "0x200009C")]
public class Group
{
	[Token(Token = "0x400030E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public List<Region> region;

	[Token(Token = "0x400030F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int seq_length;

	[Token(Token = "0x4000310")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int key;

	[Token(Token = "0x4000311")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int lokey;

	[Token(Token = "0x4000312")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int hikey;

	[Token(Token = "0x4000313")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int pitch_keycenter;

	[Token(Token = "0x4000314")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public int vel_min;

	[Token(Token = "0x4000315")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public int vel_max;

	[Token(Token = "0x60002FA")]
	[Address(RVA = "0xBDB548", Offset = "0xBDB548", VA = "0xBDB548")]
	public Group()
	{
	}
}
[Serializable]
[Token(Token = "0x200009D")]
public class Region
{
	[Token(Token = "0x4000316")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int lokey;

	[Token(Token = "0x4000317")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public int hikey;

	[Token(Token = "0x4000318")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int pitch_keycenter;

	[Token(Token = "0x4000319")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int key;

	[Token(Token = "0x400031A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int vel_min;

	[Token(Token = "0x400031B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int vel_max;

	[Token(Token = "0x400031C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int tune;

	[Token(Token = "0x400031D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public int transpose;

	[Token(Token = "0x400031E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AudioClip sample;

	[Token(Token = "0x60002FB")]
	[Address(RVA = "0xD1F380", Offset = "0xD1F380", VA = "0xD1F380")]
	public Region()
	{
	}
}
[Token(Token = "0x200009E")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x971704", Offset = "0x971704")]
public class ReactionalSampleBank : ScriptableObject
{
	[Token(Token = "0x400031F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<Group> group;

	[Token(Token = "0x4000320")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int rr;

	[Token(Token = "0x60002FC")]
	[Address(RVA = "0xD1A114", Offset = "0xD1A114", VA = "0xD1A114")]
	private void OnValidate()
	{
	}

	[Token(Token = "0x60002FD")]
	[Address(RVA = "0xD1A118", Offset = "0xD1A118", VA = "0xD1A118")]
	public bool GetSample(float pitch, float velocity, AudioSource aS, int offset, [Optional] ReactionalSampler gS)
	{
		return default(bool);
	}

	[Token(Token = "0x60002FE")]
	[Address(RVA = "0xD1A5B8", Offset = "0xD1A5B8", VA = "0xD1A5B8")]
	public ReactionalSampleBank()
	{
	}
}
[Token(Token = "0x200009F")]
public class ReactionalSampleBankFunctions : MonoBehaviour
{
	[Token(Token = "0x20000A0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x971770", Offset = "0x971770")]
	private sealed class <SetGetAudioClip>d__3 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000322")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000323")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000324")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string path;

		[Token(Token = "0x4000325")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public AudioType type;

		[Token(Token = "0x4000326")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public ReactionalSampleBankFunctions <>4__this;

		[Token(Token = "0x4000327")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public int group;

		[Token(Token = "0x4000328")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public int region;

		[Token(Token = "0x4000329")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private UnityWebRequest <www>5__2;

		[Token(Token = "0x17000062")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000307")]
			[Address(RVA = "0xD1AF54", Offset = "0xD1AF54", VA = "0xD1AF54", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000063")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000309")]
			[Address(RVA = "0xD1AFBC", Offset = "0xD1AFBC", VA = "0xD1AFBC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000303")]
		[Address(RVA = "0xD1ABC4", Offset = "0xD1ABC4", VA = "0xD1ABC4")]
		[DebuggerHidden]
		public <SetGetAudioClip>d__3(int <>1__state)
		{
		}

		[Token(Token = "0x6000304")]
		[Address(RVA = "0xD1ABF8", Offset = "0xD1ABF8", VA = "0xD1ABF8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000305")]
		[Address(RVA = "0xD1ACD4", Offset = "0xD1ACD4", VA = "0xD1ACD4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000306")]
		[Address(RVA = "0xD1AC14", Offset = "0xD1AC14", VA = "0xD1AC14")]
		private void <>m__Finally1()
		{
		}

		[Token(Token = "0x6000308")]
		[Address(RVA = "0xD1AF5C", Offset = "0xD1AF5C", VA = "0xD1AF5C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000321")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private ReactionalSampleBank sb;

	[Token(Token = "0x60002FF")]
	[Address(RVA = "0xD1A634", Offset = "0xD1A634", VA = "0xD1A634")]
	public ReactionalSampleBank ReadSfz(string p, bool streamFromDisk = false)
	{
		return null;
	}

	[Token(Token = "0x6000300")]
	[Address(RVA = "0xD1A698", Offset = "0xD1A698", VA = "0xD1A698")]
	private int NoteNameToMidi(string n)
	{
		return default(int);
	}

	[Token(Token = "0x6000301")]
	[Address(RVA = "0xD1AB10", Offset = "0xD1AB10", VA = "0xD1AB10")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x987E58", Offset = "0x987E58")]
	private IEnumerator SetGetAudioClip(string path, AudioType type, int group, int region)
	{
		return null;
	}

	[Token(Token = "0x6000302")]
	[Address(RVA = "0xD1ABF0", Offset = "0xD1ABF0", VA = "0xD1ABF0")]
	public ReactionalSampleBankFunctions()
	{
	}
}
[Token(Token = "0x20000A1")]
public class RotateObjectSlowly : MonoBehaviour
{
	[Token(Token = "0x400032A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float rotationSpeed;

	[Token(Token = "0x400032B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float maxRotation;

	[Token(Token = "0x400032C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float bounceSpeed;

	[Token(Token = "0x400032D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float maxHeight;

	[Token(Token = "0x400032E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Vector3 startPos;

	[Token(Token = "0x400032F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float startRotY;

	[Token(Token = "0x4000330")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float startTime;

	[Token(Token = "0x600030A")]
	[Address(RVA = "0xCB4AE8", Offset = "0xCB4AE8", VA = "0xCB4AE8")]
	private void Start()
	{
	}

	[Token(Token = "0x600030B")]
	[Address(RVA = "0xCB4B60", Offset = "0xCB4B60", VA = "0xCB4B60")]
	private void Update()
	{
	}

	[Token(Token = "0x600030C")]
	[Address(RVA = "0xCB4D08", Offset = "0xCB4D08", VA = "0xCB4D08")]
	public RotateObjectSlowly()
	{
	}
}
[Token(Token = "0x20000A2")]
public class EventTester : MonoBehaviour
{
	[Token(Token = "0x600030D")]
	[Address(RVA = "0xBFCF4C", Offset = "0xBFCF4C", VA = "0xBFCF4C")]
	private void Start()
	{
	}

	[Token(Token = "0x600030E")]
	[Address(RVA = "0xBFCFF0", Offset = "0xBFCFF0", VA = "0xBFCFF0")]
	private void ShakeTest(SeedbagShakeEvent e)
	{
	}

	[Token(Token = "0x600030F")]
	[Address(RVA = "0xBFD0AC", Offset = "0xBFD0AC", VA = "0xBFD0AC")]
	public EventTester()
	{
	}
}
[Token(Token = "0x20000A3")]
public class GeneData : ScriptableObject
{
	[Token(Token = "0x6000310")]
	[Address(RVA = "0xE75F90", Offset = "0xE75F90", VA = "0xE75F90")]
	public GeneData()
	{
	}
}
[Token(Token = "0x20000A4")]
public class HeightFactorGene : GeneData
{
	[Token(Token = "0x4000331")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float value;

	[Token(Token = "0x6000311")]
	[Address(RVA = "0xBDDB40", Offset = "0xBDDB40", VA = "0xBDDB40")]
	public HeightFactorGene()
	{
	}
}
[Token(Token = "0x20000A5")]
public class MeshGrower : MeshModifier
{
	[Token(Token = "0x4000332")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float finalsize;

	[Token(Token = "0x4000333")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float targetY;

	[Token(Token = "0x4000334")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float targetX;

	[Token(Token = "0x4000335")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public float targetZ;

	[Token(Token = "0x4000336")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	internal Vector3 targetScale;

	[Token(Token = "0x6000312")]
	[Address(RVA = "0xC208B0", Offset = "0xC208B0", VA = "0xC208B0", Slot = "4")]
	internal override void Start()
	{
	}

	[Token(Token = "0x6000313")]
	[Address(RVA = "0xC20970", Offset = "0xC20970", VA = "0xC20970", Slot = "5")]
	internal override void SetMesh()
	{
	}

	[Token(Token = "0x6000314")]
	[Address(RVA = "0xC20B44", Offset = "0xC20B44", VA = "0xC20B44")]
	public MeshGrower()
	{
	}
}
[Token(Token = "0x20000A6")]
public class MeshLerper : MeshModifier
{
	[Token(Token = "0x4000337")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Mesh targetMesh;

	[Token(Token = "0x4000338")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	internal Vector3[] targetVerts;

	[Token(Token = "0x6000315")]
	[Address(RVA = "0xC20B54", Offset = "0xC20B54", VA = "0xC20B54", Slot = "4")]
	internal override void Start()
	{
	}

	[Token(Token = "0x6000316")]
	[Address(RVA = "0xC20B94", Offset = "0xC20B94", VA = "0xC20B94", Slot = "5")]
	internal override void SetMesh()
	{
	}

	[Token(Token = "0x6000317")]
	[Address(RVA = "0xC20D04", Offset = "0xC20D04", VA = "0xC20D04")]
	public MeshLerper()
	{
	}
}
[Token(Token = "0x20000A7")]
public class MeshModifier : MonoBehaviour
{
	[Token(Token = "0x20000A8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x971780", Offset = "0x971780")]
	private sealed class <Growth>d__10 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000341")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000342")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000343")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MeshModifier <>4__this;

		[Token(Token = "0x17000064")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000320")]
			[Address(RVA = "0xC20EFC", Offset = "0xC20EFC", VA = "0xC20EFC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000065")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000322")]
			[Address(RVA = "0xC20F64", Offset = "0xC20F64", VA = "0xC20F64", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600031D")]
		[Address(RVA = "0xC20E10", Offset = "0xC20E10", VA = "0xC20E10")]
		[DebuggerHidden]
		public <Growth>d__10(int <>1__state)
		{
		}

		[Token(Token = "0x600031E")]
		[Address(RVA = "0xC20E40", Offset = "0xC20E40", VA = "0xC20E40", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600031F")]
		[Address(RVA = "0xC20E44", Offset = "0xC20E44", VA = "0xC20E44", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000321")]
		[Address(RVA = "0xC20F04", Offset = "0xC20F04", VA = "0xC20F04", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000339")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public MeshFilter meshFilter;

	[Token(Token = "0x400033A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Mesh startMesh;

	[Token(Token = "0x400033B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float growthTime;

	[Token(Token = "0x400033C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public bool useSize;

	[Token(Token = "0x400033D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	internal float timer;

	[Token(Token = "0x400033E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private bool started;

	[Token(Token = "0x400033F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	internal Vector3[] startVerts;

	[Token(Token = "0x4000340")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	internal Vector3[] verts;

	[Token(Token = "0x6000318")]
	[Address(RVA = "0xC20904", Offset = "0xC20904", VA = "0xC20904", Slot = "4")]
	internal virtual void Start()
	{
	}

	[Token(Token = "0x6000319")]
	[Address(RVA = "0xC20D0C", Offset = "0xC20D0C", VA = "0xC20D0C")]
	internal void Update()
	{
	}

	[Token(Token = "0x600031A")]
	[Address(RVA = "0xC20D94", Offset = "0xC20D94", VA = "0xC20D94")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x987F0C", Offset = "0x987F0C")]
	internal IEnumerator Growth()
	{
		return null;
	}

	[Token(Token = "0x600031B")]
	[Address(RVA = "0xC20E3C", Offset = "0xC20E3C", VA = "0xC20E3C", Slot = "5")]
	internal virtual void SetMesh()
	{
	}

	[Token(Token = "0x600031C")]
	[Address(RVA = "0xC20B4C", Offset = "0xC20B4C", VA = "0xC20B4C")]
	public MeshModifier()
	{
	}
}
[Token(Token = "0x20000A9")]
public class PlantGene : ScriptableObject
{
	[Token(Token = "0x4000344")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GeneData parent1;

	[Token(Token = "0x4000345")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GeneData parent2;

	[Token(Token = "0x6000323")]
	[Address(RVA = "0xBBCEFC", Offset = "0xBBCEFC", VA = "0xBBCEFC")]
	public PlantGene()
	{
	}
}
[Token(Token = "0x20000AA")]
public class RootVegetable : MonoBehaviour
{
	[Token(Token = "0x6000324")]
	[Address(RVA = "0xD1FFC8", Offset = "0xD1FFC8", VA = "0xD1FFC8")]
	public RootVegetable()
	{
	}
}
[Token(Token = "0x20000AB")]
public class PlantBreedingSystem : MonoBehaviour
{
	[Token(Token = "0x6000325")]
	[Address(RVA = "0xBBB904", Offset = "0xBBB904", VA = "0xBBB904")]
	public PlantBreedingSystem()
	{
	}
}
[Token(Token = "0x20000AC")]
public class PlantGeneExpression : MonoBehaviour
{
	[Token(Token = "0x4000346")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private List<GeneData> value;

	[Token(Token = "0x17000066")]
	public List<GeneData> Value
	{
		[Token(Token = "0x6000326")]
		[Address(RVA = "0xBBCF04", Offset = "0xBBCF04", VA = "0xBBCF04")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000327")]
	[Address(RVA = "0xBBCF0C", Offset = "0xBBCF0C", VA = "0xBBCF0C")]
	public PlantGeneExpression()
	{
	}
}
[Token(Token = "0x20000AD")]
public class PlantGenome : MonoBehaviour
{
	[Token(Token = "0x4000347")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private List<PlantGene> value;

	[Token(Token = "0x17000067")]
	public List<PlantGene> Value
	{
		[Token(Token = "0x6000328")]
		[Address(RVA = "0xBBCF14", Offset = "0xBBCF14", VA = "0xBBCF14")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000329")]
	[Address(RVA = "0xBBCF1C", Offset = "0xBBCF1C", VA = "0xBBCF1C")]
	public PlantGenome()
	{
	}
}
[Token(Token = "0x20000AE")]
public class PlantPhenotype : MonoBehaviour
{
	[Token(Token = "0x600032A")]
	[Address(RVA = "0xBC0384", Offset = "0xBC0384", VA = "0xBC0384")]
	public PlantPhenotype()
	{
	}
}
[Token(Token = "0x20000AF")]
public class TestComponent : SaveableComponent, IInitializable
{
	[Token(Token = "0x4000348")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string myString;

	[Token(Token = "0x600032B")]
	[Address(RVA = "0xE2C830", Offset = "0xE2C830", VA = "0xE2C830", Slot = "4")]
	public override ComponentState CreateState()
	{
		return null;
	}

	[Token(Token = "0x600032C")]
	[Address(RVA = "0xE2C8B0", Offset = "0xE2C8B0", VA = "0xE2C8B0", Slot = "5")]
	public void Initialize()
	{
	}

	[Token(Token = "0x600032D")]
	[Address(RVA = "0xE2C8B4", Offset = "0xE2C8B4", VA = "0xE2C8B4")]
	public TestComponent()
	{
	}
}
[Token(Token = "0x20000B0")]
public class TestState : ComponentState
{
	[Token(Token = "0x4000349")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string testString;

	[Token(Token = "0x600032E")]
	[Address(RVA = "0xE2C8A8", Offset = "0xE2C8A8", VA = "0xE2C8A8")]
	public TestState()
	{
	}
}
[Token(Token = "0x20000B1")]
public class TestScript : MonoBehaviour
{
	[Token(Token = "0x400034A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AssetReference reference;

	[Token(Token = "0x600032F")]
	[Address(RVA = "0xE2C8BC", Offset = "0xE2C8BC", VA = "0xE2C8BC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000330")]
	[Address(RVA = "0xE2C908", Offset = "0xE2C908", VA = "0xE2C908")]
	public TestScript()
	{
	}
}
[Token(Token = "0x20000B2")]
public class Unearthable : MonoBehaviour, ITillable
{
	[Token(Token = "0x400034B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int numberOfTillsRequired;

	[Token(Token = "0x400034C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private int counter;

	[Token(Token = "0x400034D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Vector3 surfacePos;

	[Token(Token = "0x400034E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private Vector3 originalPos;

	[Token(Token = "0x400034F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float radius;

	[Token(Token = "0x6000331")]
	[Address(RVA = "0xE6B5E4", Offset = "0xE6B5E4", VA = "0xE6B5E4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000332")]
	[Address(RVA = "0xE6B5E8", Offset = "0xE6B5E8", VA = "0xE6B5E8")]
	private void Init()
	{
	}

	[Token(Token = "0x6000333")]
	[Address(RVA = "0xE6B83C", Offset = "0xE6B83C", VA = "0xE6B83C", Slot = "4")]
	public void Till()
	{
	}

	[Token(Token = "0x6000334")]
	[Address(RVA = "0xE6B6E0", Offset = "0xE6B6E0", VA = "0xE6B6E0")]
	private void FindSurface()
	{
	}

	[Token(Token = "0x6000335")]
	[Address(RVA = "0xE6BA58", Offset = "0xE6BA58", VA = "0xE6BA58")]
	public Unearthable()
	{
	}
}
[Token(Token = "0x20000B3")]
public class BeatBouncer : MonoBehaviour
{
	[Token(Token = "0x4000350")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float bpm;

	[Token(Token = "0x4000351")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x976188", Offset = "0x976188")]
	public float rotationDegrees;

	[Token(Token = "0x4000352")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Vector3 rotationAxis;

	[Token(Token = "0x4000353")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public bool randomPhaseOffsetRotation;

	[Token(Token = "0x4000354")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Vector3 scaleMin;

	[Token(Token = "0x4000355")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public Vector3 scaleMax;

	[Token(Token = "0x4000356")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public bool randomPhaseOffsetScale;

	[Token(Token = "0x4000357")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private Quaternion startRotation;

	[Token(Token = "0x4000358")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private Vector3 startScale;

	[Token(Token = "0x4000359")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private float randomPhaseRot;

	[Token(Token = "0x400035A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private float randomPhaseScale;

	[Token(Token = "0x17000068")]
	public float Bps
	{
		[Token(Token = "0x6000336")]
		[Address(RVA = "0xF63034", Offset = "0xF63034", VA = "0xF63034")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000069")]
	public float Spb
	{
		[Token(Token = "0x6000337")]
		[Address(RVA = "0xF63048", Offset = "0xF63048", VA = "0xF63048")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x6000338")]
	[Address(RVA = "0xF63064", Offset = "0xF63064", VA = "0xF63064")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000339")]
	[Address(RVA = "0xF630D8", Offset = "0xF630D8", VA = "0xF630D8")]
	private void Update()
	{
	}

	[Token(Token = "0x600033A")]
	[Address(RVA = "0xF632A8", Offset = "0xF632A8", VA = "0xF632A8")]
	private float GetCosine(bool randomOffset, float offsetValue)
	{
		return default(float);
	}

	[Token(Token = "0x600033B")]
	[Address(RVA = "0xF63370", Offset = "0xF63370", VA = "0xF63370")]
	public BeatBouncer()
	{
	}
}
[Token(Token = "0x20000B4")]
public class ColorShiftTest : MonoBehaviour
{
	[Token(Token = "0x400035B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ColorTriplet colorsMin;

	[Token(Token = "0x400035C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ColorTriplet colorsDefault;

	[Token(Token = "0x400035D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ColorTriplet colorsMax;

	[Token(Token = "0x400035E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public BlendableList<ColorTriplet> colors;

	[Token(Token = "0x400035F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9761A4", Offset = "0x9761A4")]
	public float hueShift;

	[Token(Token = "0x4000360")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private MaterialPropertyBlock mpb;

	[Token(Token = "0x4000361")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private MeshRenderer rnd;

	[Token(Token = "0x600033C")]
	[Address(RVA = "0xC47D44", Offset = "0xC47D44", VA = "0xC47D44")]
	private void Awake()
	{
	}

	[Token(Token = "0x600033D")]
	[Address(RVA = "0xC47EDC", Offset = "0xC47EDC", VA = "0xC47EDC")]
	private void Update()
	{
	}

	[Token(Token = "0x600033E")]
	[Address(RVA = "0xC47E54", Offset = "0xC47E54", VA = "0xC47E54")]
	private void ApplyColor()
	{
	}

	[Token(Token = "0x600033F")]
	[Address(RVA = "0xC47EE0", Offset = "0xC47EE0", VA = "0xC47EE0")]
	public ColorShiftTest()
	{
	}
}
[Serializable]
[Token(Token = "0x20000B5")]
[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0x971790", Offset = "0x971790")]
public class ColorTriplet : IBlendable<ColorTriplet>
{
	[Token(Token = "0x4000362")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Color color0;

	[Token(Token = "0x4000363")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Color color1;

	[Token(Token = "0x4000364")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Color color2;

	[Token(Token = "0x1700006A")]
	public Color Item
	{
		[Token(Token = "0x6000340")]
		[Address(RVA = "0xC47EF0", Offset = "0xC47EF0", VA = "0xC47EF0")]
		get
		{
			return default(Color);
		}
	}

	[Token(Token = "0x6000341")]
	[Address(RVA = "0xC47F4C", Offset = "0xC47F4C", VA = "0xC47F4C")]
	public ColorTriplet(Color color0, Color color1, Color color2)
	{
	}

	[Token(Token = "0x6000342")]
	[Address(RVA = "0xC47FD8", Offset = "0xC47FD8", VA = "0xC47FD8", Slot = "4")]
	private ColorTriplet IBlendable<ColorTriplet>.Lerp(ColorTriplet b, float t)
	{
		return null;
	}

	[Token(Token = "0x6000343")]
	[Address(RVA = "0xC48118", Offset = "0xC48118", VA = "0xC48118", Slot = "5")]
	private ColorTriplet IBlendable<ColorTriplet>.Slerp(ColorTriplet b, float t)
	{
		return null;
	}

	[Token(Token = "0x6000344")]
	[Address(RVA = "0xC4824C", Offset = "0xC4824C", VA = "0xC4824C")]
	private Color LerpHSV(Color a, Color b, float t)
	{
		return default(Color);
	}
}
[Token(Token = "0x20000B6")]
public class RotatorThing : MonoBehaviour
{
	[Token(Token = "0x4000365")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Quaternion startRotation;

	[Token(Token = "0x4000366")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float speed;

	[Token(Token = "0x4000367")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float rotationRange;

	[Token(Token = "0x6000345")]
	[Address(RVA = "0xCB4D1C", Offset = "0xCB4D1C", VA = "0xCB4D1C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000346")]
	[Address(RVA = "0xCB4D58", Offset = "0xCB4D58", VA = "0xCB4D58")]
	private void Update()
	{
	}

	[Token(Token = "0x6000347")]
	[Address(RVA = "0xCB4E60", Offset = "0xCB4E60", VA = "0xCB4E60")]
	public RotatorThing()
	{
	}
}
[Token(Token = "0x20000B7")]
public class NormalsFixer : MonoBehaviour
{
	[Token(Token = "0x6000348")]
	[Address(RVA = "0xD6C34C", Offset = "0xD6C34C", VA = "0xD6C34C")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0x987FC0", Offset = "0x987FC0")]
	private void FixNormals()
	{
	}

	[Token(Token = "0x6000349")]
	[Address(RVA = "0xD6C5A8", Offset = "0xD6C5A8", VA = "0xD6C5A8")]
	private void FixNormalOnMesh(MeshFilter mf)
	{
	}

	[Token(Token = "0x600034A")]
	[Address(RVA = "0xD6C780", Offset = "0xD6C780", VA = "0xD6C780")]
	public NormalsFixer()
	{
	}
}
[Token(Token = "0x20000B8")]
public class PuffinAI : MonoBehaviour
{
	[Token(Token = "0x4000368")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool isEnRoute;

	[Token(Token = "0x4000369")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private float speed;

	[Token(Token = "0x400036A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Vector3 direction;

	[Token(Token = "0x400036B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private WalkAnimation animator;

	[Token(Token = "0x600034B")]
	[Address(RVA = "0xD14624", Offset = "0xD14624", VA = "0xD14624")]
	private void Start()
	{
	}

	[Token(Token = "0x600034C")]
	[Address(RVA = "0xD14684", Offset = "0xD14684", VA = "0xD14684")]
	private void Update()
	{
	}

	[Token(Token = "0x600034D")]
	[Address(RVA = "0xD14A50", Offset = "0xD14A50", VA = "0xD14A50")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x600034E")]
	[Address(RVA = "0xD148BC", Offset = "0xD148BC", VA = "0xD148BC")]
	private Vector3 DirectionToPlayer()
	{
		return default(Vector3);
	}

	[Token(Token = "0x600034F")]
	[Address(RVA = "0xD14BB4", Offset = "0xD14BB4", VA = "0xD14BB4")]
	public PuffinAI()
	{
	}
}
[Token(Token = "0x20000B9")]
public class TempVegetable : MonoBehaviour, IInteractableByTool
{
	[Token(Token = "0x6000350")]
	[Address(RVA = "0xE2C6FC", Offset = "0xE2C6FC", VA = "0xE2C6FC", Slot = "4")]
	public void DoInteraction(ITool tool)
	{
	}

	[Token(Token = "0x6000351")]
	[Address(RVA = "0xE2C828", Offset = "0xE2C828", VA = "0xE2C828")]
	public TempVegetable()
	{
	}
}
[Token(Token = "0x20000BA")]
public class WalkAnimation : MonoBehaviour
{
	[Token(Token = "0x400036C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool playOnStart;

	[Token(Token = "0x400036D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Sequence seq1;

	[Token(Token = "0x400036E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Sequence seq2;

	[Token(Token = "0x400036F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool isPlaying;

	[Token(Token = "0x4000370")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private Quaternion startRotation;

	[Token(Token = "0x4000371")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private Vector3 originalEulerRotation;

	[Token(Token = "0x4000372")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private OrientedPoint originalPointLocal;

	[Token(Token = "0x4000373")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public NeatAudioPlayer potStepSound;

	[Token(Token = "0x4000374")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private bool leftRight;

	[Token(Token = "0x6000352")]
	[Address(RVA = "0xE6C3AC", Offset = "0xE6C3AC", VA = "0xE6C3AC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000353")]
	[Address(RVA = "0xE6C49C", Offset = "0xE6C49C", VA = "0xE6C49C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000354")]
	[Address(RVA = "0xE6C57C", Offset = "0xE6C57C", VA = "0xE6C57C")]
	private void SetupAnimation()
	{
	}

	[Token(Token = "0x6000355")]
	[Address(RVA = "0xE6C434", Offset = "0xE6C434", VA = "0xE6C434")]
	public void StartAnimation()
	{
	}

	[Token(Token = "0x6000356")]
	[Address(RVA = "0xE6CA00", Offset = "0xE6CA00", VA = "0xE6CA00")]
	public void StopAnimation()
	{
	}

	[Token(Token = "0x6000357")]
	[Address(RVA = "0xE6CB04", Offset = "0xE6CB04", VA = "0xE6CB04")]
	public WalkAnimation()
	{
	}
}
[Token(Token = "0x20000BB")]
public class AnimatorPlaybackData : MonoBehaviour
{
	[Token(Token = "0x4000375")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	[HideInInspector]
	private int m_stateNameHash;

	[Token(Token = "0x4000376")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private int m_layer;

	[Token(Token = "0x4000377")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private uint m_frame;

	[Token(Token = "0x1700006B")]
	public int StateNameHash
	{
		[Token(Token = "0x6000358")]
		[Address(RVA = "0xF5F2C8", Offset = "0xF5F2C8", VA = "0xF5F2C8")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x1700006C")]
	public int Layer
	{
		[Token(Token = "0x6000359")]
		[Address(RVA = "0xF5F2D0", Offset = "0xF5F2D0", VA = "0xF5F2D0")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x1700006D")]
	public uint Frame
	{
		[Token(Token = "0x600035A")]
		[Address(RVA = "0xF5F2D8", Offset = "0xF5F2D8", VA = "0xF5F2D8")]
		get
		{
			return default(uint);
		}
	}

	[Token(Token = "0x600035B")]
	[Address(RVA = "0xF5F2E0", Offset = "0xF5F2E0", VA = "0xF5F2E0")]
	public AnimatorPlaybackData()
	{
	}
}
[Token(Token = "0x20000BC")]
public class AnimationCycleOffset : MonoBehaviour
{
	[Token(Token = "0x4000378")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float AnimationLength;

	[Token(Token = "0x600035C")]
	[Address(RVA = "0xF5F1D4", Offset = "0xF5F1D4", VA = "0xF5F1D4")]
	private void Start()
	{
	}

	[Token(Token = "0x600035D")]
	[Address(RVA = "0xF5F258", Offset = "0xF5F258", VA = "0xF5F258")]
	public AnimationCycleOffset()
	{
	}
}
[Token(Token = "0x20000BD")]
public class AudioFindOcean : MonoBehaviour
{
	[Token(Token = "0x4000379")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject debugObj;

	[Token(Token = "0x400037A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Transform points;

	[Token(Token = "0x400037B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Transform soundObj;

	[Token(Token = "0x400037C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Transform wayPointHolder;

	[Token(Token = "0x400037D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private Transform[] waypoints;

	[Token(Token = "0x400037E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Transform player;

	[Token(Token = "0x400037F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Vector3[] newwaypoints;

	[Token(Token = "0x4000380")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Vector3[] neighbours;

	[Token(Token = "0x600035E")]
	[Address(RVA = "0xF60210", Offset = "0xF60210", VA = "0xF60210")]
	private void Awake()
	{
	}

	[Token(Token = "0x600035F")]
	[Address(RVA = "0xF60394", Offset = "0xF60394", VA = "0xF60394")]
	private void Start()
	{
	}

	[Token(Token = "0x6000360")]
	[Address(RVA = "0xF60408", Offset = "0xF60408", VA = "0xF60408")]
	private void Update()
	{
	}

	[Token(Token = "0x6000361")]
	[Address(RVA = "0xF60748", Offset = "0xF60748", VA = "0xF60748")]
	private Vector3 ClosestPointOnLine(Vector3 vA, Vector3 vB, Vector3 vPoint)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000362")]
	[Address(RVA = "0xF60934", Offset = "0xF60934", VA = "0xF60934")]
	public AudioFindOcean()
	{
	}

	[Token(Token = "0x6000363")]
	[Address(RVA = "0xF6093C", Offset = "0xF6093C", VA = "0xF6093C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x987FF8", Offset = "0x987FF8")]
	private int <Update>b__10_0(Vector3 way1, Vector3 way2)
	{
		return default(int);
	}

	[Token(Token = "0x6000364")]
	[Address(RVA = "0xF60A60", Offset = "0xF60A60", VA = "0xF60A60")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x988008", Offset = "0x988008")]
	private int <Update>b__10_1(Vector3 way1, Vector3 way2)
	{
		return default(int);
	}

	[Token(Token = "0x6000365")]
	[Address(RVA = "0xF60B88", Offset = "0xF60B88", VA = "0xF60B88")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x988018", Offset = "0x988018")]
	private int <Update>b__10_2(Vector3 way1, Vector3 way2)
	{
		return default(int);
	}
}
[Token(Token = "0x20000BE")]
public class AudioManager : MonoBehaviour
{
	[Token(Token = "0x20000BF")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9717C8", Offset = "0x9717C8")]
	private sealed class <>c__DisplayClass17_0
	{
		[Token(Token = "0x4000386")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float cury;

		[Token(Token = "0x4000387")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AudioManager <>4__this;

		[Token(Token = "0x4000388")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float curx;

		[Token(Token = "0x4000389")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float z;

		[Token(Token = "0x600037A")]
		[Address(RVA = "0xF61AEC", Offset = "0xF61AEC", VA = "0xF61AEC")]
		public <>c__DisplayClass17_0()
		{
		}

		[Token(Token = "0x600037B")]
		[Address(RVA = "0xF61D60", Offset = "0xF61D60", VA = "0xF61D60")]
		internal float <PlayArpeggio>b__0()
		{
			return default(float);
		}

		[Token(Token = "0x600037C")]
		[Address(RVA = "0xF61D68", Offset = "0xF61D68", VA = "0xF61D68")]
		internal void <PlayArpeggio>b__1(float x)
		{
		}

		[Token(Token = "0x600037D")]
		[Address(RVA = "0xF61D70", Offset = "0xF61D70", VA = "0xF61D70")]
		internal void <PlayArpeggio>b__2()
		{
		}

		[Token(Token = "0x600037E")]
		[Address(RVA = "0xF61DB0", Offset = "0xF61DB0", VA = "0xF61DB0")]
		internal void <PlayArpeggio>b__3()
		{
		}

		[Token(Token = "0x600037F")]
		[Address(RVA = "0xF61DF0", Offset = "0xF61DF0", VA = "0xF61DF0")]
		internal float <PlayArpeggio>b__4()
		{
			return default(float);
		}

		[Token(Token = "0x6000380")]
		[Address(RVA = "0xF61DF8", Offset = "0xF61DF8", VA = "0xF61DF8")]
		internal void <PlayArpeggio>b__5(float x)
		{
		}

		[Token(Token = "0x6000381")]
		[Address(RVA = "0xF61E00", Offset = "0xF61E00", VA = "0xF61E00")]
		internal void <PlayArpeggio>b__6()
		{
		}

		[Token(Token = "0x6000382")]
		[Address(RVA = "0xF61E40", Offset = "0xF61E40", VA = "0xF61E40")]
		internal void <PlayArpeggio>b__7()
		{
		}
	}

	[Token(Token = "0x4000381")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GestrumentGlobalSync meta;

	[Token(Token = "0x4000382")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int soloCursorNumber;

	[Token(Token = "0x4000383")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private double newTempo;

	[Token(Token = "0x4000384")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public double scale;

	[Token(Token = "0x4000385")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float[] niceArp;

	[Token(Token = "0x6000366")]
	[Address(RVA = "0xF60CAC", Offset = "0xF60CAC", VA = "0xF60CAC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000367")]
	[Address(RVA = "0xF61114", Offset = "0xF61114", VA = "0xF61114")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000368")]
	[Address(RVA = "0xF6157C", Offset = "0xF6157C", VA = "0xF6157C")]
	private void MilestoneEvents(MilestoneEvent e)
	{
	}

	[Token(Token = "0x6000369")]
	[Address(RVA = "0xF61604", Offset = "0xF61604", VA = "0xF61604")]
	private void UpdateCursorPlayer(int curs, float x, float y, float z, bool gate)
	{
	}

	[Token(Token = "0x600036A")]
	[Address(RVA = "0xF6162C", Offset = "0xF6162C", VA = "0xF6162C")]
	private void UpdateTempo()
	{
	}

	[Token(Token = "0x600036B")]
	[Address(RVA = "0xF61630", Offset = "0xF61630", VA = "0xF61630")]
	private void OnCreatureHappy(CreatureHappyEvent e)
	{
	}

	[Token(Token = "0x600036C")]
	[Address(RVA = "0xF61A18", Offset = "0xF61A18", VA = "0xF61A18")]
	private void OnCreatureEatFromHand(CreatureFedEvent e)
	{
	}

	[Token(Token = "0x600036D")]
	[Address(RVA = "0xF61A44", Offset = "0xF61A44", VA = "0xF61A44")]
	private void OnChop(ChopEvent e)
	{
	}

	[Token(Token = "0x600036E")]
	[Address(RVA = "0xF61A74", Offset = "0xF61A74", VA = "0xF61A74")]
	private void OnTill(TillEvent e)
	{
	}

	[Token(Token = "0x600036F")]
	[Address(RVA = "0xF61AA4", Offset = "0xF61AA4", VA = "0xF61AA4")]
	private void OnItemCrafted(ItemCraftedEvent e)
	{
	}

	[Token(Token = "0x6000370")]
	[Address(RVA = "0xF61AA8", Offset = "0xF61AA8", VA = "0xF61AA8")]
	private void OnCraftingSuccessful(CraftingSuccessfulEvent e)
	{
	}

	[Token(Token = "0x6000371")]
	[Address(RVA = "0xF61AC8", Offset = "0xF61AC8", VA = "0xF61AC8")]
	private void OnSeedReleased(SeedbagReleaseSeedEvent e)
	{
	}

	[Token(Token = "0x6000372")]
	[Address(RVA = "0xF61658", Offset = "0xF61658", VA = "0xF61658")]
	private void PlayArpeggio(float min = 0f, float max = 1f, float xmin = 0.8f, float xmax = 1f, float z = 0.3f, bool random = true, bool directionUp = false)
	{
	}

	[Token(Token = "0x6000373")]
	[Address(RVA = "0xF61AF4", Offset = "0xF61AF4", VA = "0xF61AF4")]
	private void IndoorOutdoor(IndoorOutdoorEvent e)
	{
	}

	[Token(Token = "0x6000374")]
	[Address(RVA = "0xF61B08", Offset = "0xF61B08", VA = "0xF61B08")]
	private void OnBoat(BoatingEvent e)
	{
	}

	[Token(Token = "0x6000375")]
	[Address(RVA = "0xF61B1C", Offset = "0xF61B1C", VA = "0xF61B1C")]
	private void TempoEvent(AliveTempoEvent e)
	{
	}

	[Token(Token = "0x6000376")]
	[Address(RVA = "0xF61CA0", Offset = "0xF61CA0", VA = "0xF61CA0")]
	public static float Remap(float from, float fromMin, float fromMax, float toMin, float toMax)
	{
		return default(float);
	}

	[Token(Token = "0x6000377")]
	[Address(RVA = "0xF61CBC", Offset = "0xF61CBC", VA = "0xF61CBC")]
	public AudioManager()
	{
	}

	[Token(Token = "0x6000378")]
	[Address(RVA = "0xF61D50", Offset = "0xF61D50", VA = "0xF61D50")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x988028", Offset = "0x988028")]
	private double <TempoEvent>b__20_0()
	{
		return default(double);
	}

	[Token(Token = "0x6000379")]
	[Address(RVA = "0xF61D58", Offset = "0xF61D58", VA = "0xF61D58")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x988038", Offset = "0x988038")]
	private void <TempoEvent>b__20_1(double x)
	{
	}
}
[Token(Token = "0x20000C0")]
public class BiomeMusic : MonoBehaviour, IBiomeMusic
{
	[Token(Token = "0x20000C1")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9717D8", Offset = "0x9717D8")]
	private sealed class <FadeOut>d__9 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000390")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000391")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000392")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AudioSource aS;

		[Token(Token = "0x4000393")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float time;

		[Token(Token = "0x4000394")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <elapsedTime>5__2;

		[Token(Token = "0x4000395")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float <startVol>5__3;

		[Token(Token = "0x1700006E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600038B")]
			[Address(RVA = "0xF65A0C", Offset = "0xF65A0C", VA = "0xF65A0C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700006F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600038D")]
			[Address(RVA = "0xF65A74", Offset = "0xF65A74", VA = "0xF65A74", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000388")]
		[Address(RVA = "0xF658A8", Offset = "0xF658A8", VA = "0xF658A8")]
		[DebuggerHidden]
		public <FadeOut>d__9(int <>1__state)
		{
		}

		[Token(Token = "0x6000389")]
		[Address(RVA = "0xF658DC", Offset = "0xF658DC", VA = "0xF658DC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600038A")]
		[Address(RVA = "0xF658E0", Offset = "0xF658E0", VA = "0xF658E0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600038C")]
		[Address(RVA = "0xF65A14", Offset = "0xF65A14", VA = "0xF65A14", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400038A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	protected AudioSource merchantMusic;

	[Token(Token = "0x400038B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private AudioClip mechantMusicDay;

	[Token(Token = "0x400038C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	public AudioClip mechantMusicNight;

	[Token(Token = "0x400038D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	protected AudioSource dawnMusic;

	[Token(Token = "0x400038E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	protected AudioSource duskMusic;

	[Token(Token = "0x400038F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Coroutine fadeout;

	[Token(Token = "0x6000383")]
	[Address(RVA = "0xF65408", Offset = "0xF65408", VA = "0xF65408", Slot = "4")]
	public void MerchantMusic(bool play = false)
	{
	}

	[Token(Token = "0x6000384")]
	[Address(RVA = "0xF6574C", Offset = "0xF6574C", VA = "0xF6574C")]
	protected void UpdateMerchantMusic(int hour)
	{
	}

	[Token(Token = "0x6000385")]
	[Address(RVA = "0xF655E0", Offset = "0xF655E0", VA = "0xF655E0")]
	private void KillOtherMusic()
	{
	}

	[Token(Token = "0x6000386")]
	[Address(RVA = "0xF656C0", Offset = "0xF656C0", VA = "0xF656C0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x988048", Offset = "0x988048")]
	private IEnumerator FadeOut(AudioSource aS, float time)
	{
		return null;
	}

	[Token(Token = "0x6000387")]
	[Address(RVA = "0xF658D4", Offset = "0xF658D4", VA = "0xF658D4")]
	public BiomeMusic()
	{
	}
}
[Token(Token = "0x20000C2")]
public class BiomeMusicBiome2 : BiomeMusic
{
	[Token(Token = "0x20000C3")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9717E8", Offset = "0x9717E8")]
	private sealed class <DelayedStart>d__4 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000399")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400039A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400039B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public BiomeMusicBiome2 <>4__this;

		[Token(Token = "0x17000070")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000399")]
			[Address(RVA = "0xF66100", Offset = "0xF66100", VA = "0xF66100", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000071")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600039B")]
			[Address(RVA = "0xF66168", Offset = "0xF66168", VA = "0xF66168", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000396")]
		[Address(RVA = "0xF65BC4", Offset = "0xF65BC4", VA = "0xF65BC4")]
		[DebuggerHidden]
		public <DelayedStart>d__4(int <>1__state)
		{
		}

		[Token(Token = "0x6000397")]
		[Address(RVA = "0xF65F54", Offset = "0xF65F54", VA = "0xF65F54", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000398")]
		[Address(RVA = "0xF65F58", Offset = "0xF65F58", VA = "0xF65F58", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600039A")]
		[Address(RVA = "0xF66108", Offset = "0xF66108", VA = "0xF66108", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000396")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private GestrumentGlobalSync.Music backgroundMusic;

	[Token(Token = "0x4000397")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[SerializeField]
	private ModalTranspose boatTransposition;

	[Token(Token = "0x4000398")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private NeatAudioPlayer ghostMusicPlayer;

	[Token(Token = "0x600038E")]
	[Address(RVA = "0xF65A7C", Offset = "0xF65A7C", VA = "0xF65A7C")]
	private void Start()
	{
	}

	[Token(Token = "0x600038F")]
	[Address(RVA = "0xF65B48", Offset = "0xF65B48", VA = "0xF65B48")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9880FC", Offset = "0x9880FC")]
	private IEnumerator DelayedStart()
	{
		return null;
	}

	[Token(Token = "0x6000390")]
	[Address(RVA = "0xF65BF0", Offset = "0xF65BF0", VA = "0xF65BF0")]
	private void SetBoatTranspose(int transp)
	{
	}

	[Token(Token = "0x6000391")]
	[Address(RVA = "0xF65C58", Offset = "0xF65C58", VA = "0xF65C58")]
	private bool CheckOnBoat()
	{
		return default(bool);
	}

	[Token(Token = "0x6000392")]
	[Address(RVA = "0xF65D38", Offset = "0xF65D38", VA = "0xF65D38")]
	public void StopMusic()
	{
	}

	[Token(Token = "0x6000393")]
	[Address(RVA = "0xF65D54", Offset = "0xF65D54", VA = "0xF65D54")]
	public void OnTriggerEnter(Collider collision)
	{
	}

	[Token(Token = "0x6000394")]
	[Address(RVA = "0xF65E50", Offset = "0xF65E50", VA = "0xF65E50")]
	public void OnTriggerExit(Collider collision)
	{
	}

	[Token(Token = "0x6000395")]
	[Address(RVA = "0xF65F4C", Offset = "0xF65F4C", VA = "0xF65F4C")]
	public BiomeMusicBiome2()
	{
	}
}
[Token(Token = "0x20000C4")]
public class BiomeMusicGeneric : BiomeMusic
{
	[Token(Token = "0x20000C5")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9717F8", Offset = "0x9717F8")]
	private sealed class <DelayedStart>d__3 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400039E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400039F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40003A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public BiomeMusicGeneric <>4__this;

		[Token(Token = "0x17000072")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60003A4")]
			[Address(RVA = "0xF665DC", Offset = "0xF665DC", VA = "0xF665DC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000073")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60003A6")]
			[Address(RVA = "0xF66644", Offset = "0xF66644", VA = "0xF66644", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60003A1")]
		[Address(RVA = "0xF662B8", Offset = "0xF662B8", VA = "0xF662B8")]
		[DebuggerHidden]
		public <DelayedStart>d__3(int <>1__state)
		{
		}

		[Token(Token = "0x60003A2")]
		[Address(RVA = "0xF66430", Offset = "0xF66430", VA = "0xF66430", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60003A3")]
		[Address(RVA = "0xF66434", Offset = "0xF66434", VA = "0xF66434", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60003A5")]
		[Address(RVA = "0xF665E4", Offset = "0xF665E4", VA = "0xF665E4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400039C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private GestrumentGlobalSync.Music backgroundMusic;

	[Token(Token = "0x400039D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[SerializeField]
	private ModalTranspose boatTransposition;

	[Token(Token = "0x600039C")]
	[Address(RVA = "0xF66170", Offset = "0xF66170", VA = "0xF66170")]
	private void Start()
	{
	}

	[Token(Token = "0x600039D")]
	[Address(RVA = "0xF6623C", Offset = "0xF6623C", VA = "0xF6623C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9881B0", Offset = "0x9881B0")]
	private IEnumerator DelayedStart()
	{
		return null;
	}

	[Token(Token = "0x600039E")]
	[Address(RVA = "0xF662E4", Offset = "0xF662E4", VA = "0xF662E4")]
	private void SetBoatTranspose(int transp)
	{
	}

	[Token(Token = "0x600039F")]
	[Address(RVA = "0xF6634C", Offset = "0xF6634C", VA = "0xF6634C")]
	private bool CheckOnBoat()
	{
		return default(bool);
	}

	[Token(Token = "0x60003A0")]
	[Address(RVA = "0xF66428", Offset = "0xF66428", VA = "0xF66428")]
	public BiomeMusicGeneric()
	{
	}
}
[Token(Token = "0x20000C6")]
public class BiomeMusicHomeland : BiomeMusic, IInitializable
{
	[Token(Token = "0x20000C7")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x971808", Offset = "0x971808")]
	private sealed class <DelayedStart>d__5 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40003A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40003A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40003A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public BiomeMusicHomeland <>4__this;

		[Token(Token = "0x17000074")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60003B5")]
			[Address(RVA = "0xF67524", Offset = "0xF67524", VA = "0xF67524", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000075")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60003B7")]
			[Address(RVA = "0xF6758C", Offset = "0xF6758C", VA = "0xF6758C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60003B2")]
		[Address(RVA = "0xF66CE4", Offset = "0xF66CE4", VA = "0xF66CE4")]
		[DebuggerHidden]
		public <DelayedStart>d__5(int <>1__state)
		{
		}

		[Token(Token = "0x60003B3")]
		[Address(RVA = "0xF67340", Offset = "0xF67340", VA = "0xF67340", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60003B4")]
		[Address(RVA = "0xF67344", Offset = "0xF67344", VA = "0xF67344", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60003B6")]
		[Address(RVA = "0xF6752C", Offset = "0xF6752C", VA = "0xF6752C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20000C8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x971818", Offset = "0x971818")]
	private sealed class <CheckNormalSpecialMusicPlaying>d__7 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40003A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40003A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40003A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public BiomeMusicHomeland <>4__this;

		[Token(Token = "0x17000076")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60003BB")]
			[Address(RVA = "0xF672D0", Offset = "0xF672D0", VA = "0xF672D0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000077")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60003BD")]
			[Address(RVA = "0xF67338", Offset = "0xF67338", VA = "0xF67338", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60003B8")]
		[Address(RVA = "0xF66E7C", Offset = "0xF66E7C", VA = "0xF66E7C")]
		[DebuggerHidden]
		public <CheckNormalSpecialMusicPlaying>d__7(int <>1__state)
		{
		}

		[Token(Token = "0x60003B9")]
		[Address(RVA = "0xF6715C", Offset = "0xF6715C", VA = "0xF6715C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60003BA")]
		[Address(RVA = "0xF67160", Offset = "0xF67160", VA = "0xF67160", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60003BC")]
		[Address(RVA = "0xF672D8", Offset = "0xF672D8", VA = "0xF672D8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20000C9")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x971828", Offset = "0x971828")]
	private sealed class <FadeOut>d__12 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40003AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40003AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40003AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AudioSource aS;

		[Token(Token = "0x40003AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float time;

		[Token(Token = "0x40003AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <elapsedTime>5__2;

		[Token(Token = "0x40003AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float <startVol>5__3;

		[Token(Token = "0x17000078")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60003C1")]
			[Address(RVA = "0xF676C4", Offset = "0xF676C4", VA = "0xF676C4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000079")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60003C3")]
			[Address(RVA = "0xF6772C", Offset = "0xF6772C", VA = "0xF6772C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60003BE")]
		[Address(RVA = "0xF670B8", Offset = "0xF670B8", VA = "0xF670B8")]
		[DebuggerHidden]
		public <FadeOut>d__12(int <>1__state)
		{
		}

		[Token(Token = "0x60003BF")]
		[Address(RVA = "0xF67594", Offset = "0xF67594", VA = "0xF67594", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60003C0")]
		[Address(RVA = "0xF67598", Offset = "0xF67598", VA = "0xF67598", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60003C2")]
		[Address(RVA = "0xF676CC", Offset = "0xF676CC", VA = "0xF676CC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40003A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private GestrumentGlobalSync.Music backgroundMusic;

	[Token(Token = "0x40003A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[SerializeField]
	private ModalTranspose boatTransposition;

	[Token(Token = "0x40003A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private readonly YieldInstruction WaitASec;

	[Token(Token = "0x60003A7")]
	[Address(RVA = "0xF6664C", Offset = "0xF6664C", VA = "0xF6664C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60003A8")]
	[Address(RVA = "0xF66840", Offset = "0xF66840", VA = "0xF66840", Slot = "5")]
	public void Initialize()
	{
	}

	[Token(Token = "0x60003A9")]
	[Address(RVA = "0xF667C4", Offset = "0xF667C4", VA = "0xF667C4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x988264", Offset = "0x988264")]
	private IEnumerator DelayedStart()
	{
		return null;
	}

	[Token(Token = "0x60003AA")]
	[Address(RVA = "0xF66D10", Offset = "0xF66D10", VA = "0xF66D10")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60003AB")]
	[Address(RVA = "0xF66E00", Offset = "0xF66E00", VA = "0xF66E00")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9882C8", Offset = "0x9882C8")]
	private IEnumerator CheckNormalSpecialMusicPlaying()
	{
		return null;
	}

	[Token(Token = "0x60003AC")]
	[Address(RVA = "0xF66EA8", Offset = "0xF66EA8", VA = "0xF66EA8")]
	private void SetBoatTranspose(int transp)
	{
	}

	[Token(Token = "0x60003AD")]
	[Address(RVA = "0xF66F10", Offset = "0xF66F10", VA = "0xF66F10")]
	private bool CheckOnBoat()
	{
		return default(bool);
	}

	[Token(Token = "0x60003AE")]
	[Address(RVA = "0xF668BC", Offset = "0xF668BC", VA = "0xF668BC")]
	private void CheckTime(int hour)
	{
	}

	[Token(Token = "0x60003AF")]
	[Address(RVA = "0xF66FEC", Offset = "0xF66FEC", VA = "0xF66FEC")]
	private bool NothingSpecialPlaying()
	{
		return default(bool);
	}

	[Token(Token = "0x60003B0")]
	[Address(RVA = "0xF6702C", Offset = "0xF6702C", VA = "0xF6702C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x98832C", Offset = "0x98832C")]
	private IEnumerator FadeOut(AudioSource aS, float time)
	{
		return null;
	}

	[Token(Token = "0x60003B1")]
	[Address(RVA = "0xF670E4", Offset = "0xF670E4", VA = "0xF670E4")]
	public BiomeMusicHomeland()
	{
	}
}
[Token(Token = "0x20000CA")]
public class BirdSoundSpawner : MonoBehaviour
{
	[Token(Token = "0x20000CB")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x971838", Offset = "0x971838")]
	private sealed class <SpawnRandomBird>d__8 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40003B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40003B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40003B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public BirdSoundSpawner <>4__this;

		[Token(Token = "0x1700007A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60003CB")]
			[Address(RVA = "0xF67A84", Offset = "0xF67A84", VA = "0xF67A84", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700007B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60003CD")]
			[Address(RVA = "0xF67AEC", Offset = "0xF67AEC", VA = "0xF67AEC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60003C8")]
		[Address(RVA = "0xF677F8", Offset = "0xF677F8", VA = "0xF677F8")]
		[DebuggerHidden]
		public <SpawnRandomBird>d__8(int <>1__state)
		{
		}

		[Token(Token = "0x60003C9")]
		[Address(RVA = "0xF67838", Offset = "0xF67838", VA = "0xF67838", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60003CA")]
		[Address(RVA = "0xF6783C", Offset = "0xF6783C", VA = "0xF6783C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60003CC")]
		[Address(RVA = "0xF67A8C", Offset = "0xF67A8C", VA = "0xF67A8C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40003B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private IEnumerator coroutine;

	[Token(Token = "0x40003B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public NeatAudioCue soundCue;

	[Token(Token = "0x40003B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private NeatAudioPlayer soundPlayer;

	[Token(Token = "0x40003B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private GameObject[] trees;

	[Token(Token = "0x40003B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float waitMin;

	[Token(Token = "0x40003B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float waitMax;

	[Token(Token = "0x60003C4")]
	[Address(RVA = "0xF67734", Offset = "0xF67734", VA = "0xF67734")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60003C5")]
	[Address(RVA = "0xF677EC", Offset = "0xF677EC", VA = "0xF677EC")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60003C6")]
	[Address(RVA = "0xF67770", Offset = "0xF67770", VA = "0xF67770")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x988480", Offset = "0x988480")]
	private IEnumerator SpawnRandomBird()
	{
		return null;
	}

	[Token(Token = "0x60003C7")]
	[Address(RVA = "0xF67824", Offset = "0xF67824", VA = "0xF67824")]
	public BirdSoundSpawner()
	{
	}
}
[Token(Token = "0x20000CC")]
public class BlowBirdSounds : MonoBehaviour
{
	[Token(Token = "0x40003B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public NeatAudioPlayer blowBirdSounds;

	[Token(Token = "0x40003BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public NeatAudioCue snoreCue;

	[Token(Token = "0x40003BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public NeatAudioCue tweetCue;

	[Token(Token = "0x40003BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static readonly int PITCH;

	[Token(Token = "0x60003CE")]
	[Address(RVA = "0xF67AF4", Offset = "0xF67AF4", VA = "0xF67AF4")]
	private void Snore()
	{
	}

	[Token(Token = "0x60003CF")]
	[Address(RVA = "0xF67BD0", Offset = "0xF67BD0", VA = "0xF67BD0")]
	private void Tweet()
	{
	}

	[Token(Token = "0x60003D0")]
	[Address(RVA = "0xF67C10", Offset = "0xF67C10", VA = "0xF67C10")]
	public BlowBirdSounds()
	{
	}
}
[Token(Token = "0x20000CD")]
public class CreatureSounds : MonoBehaviour
{
	[Token(Token = "0x40003BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public NeatAudioPlayer voiceAudioPlayer;

	[Token(Token = "0x40003BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public NeatAudioPlayer footstepsAudioPlayer;

	[Token(Token = "0x40003BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static readonly int PITCH;

	[Token(Token = "0x40003C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public NeatAudioCue normalVoice;

	[Token(Token = "0x40003C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public NeatAudioCue shortVoice;

	[Token(Token = "0x40003C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public NeatAudioCue cozyVoice1;

	[Token(Token = "0x40003C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public NeatAudioCue cozyVoice2;

	[Token(Token = "0x40003C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public NeatAudioCue eatVoice;

	[Token(Token = "0x40003C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public NeatAudioCue happyVoice;

	[Token(Token = "0x40003C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private CreatureHappyEvent happyEvent;

	[Token(Token = "0x60003D2")]
	[Address(RVA = "0xC553D4", Offset = "0xC553D4", VA = "0xC553D4")]
	private void IdleSpeak()
	{
	}

	[Token(Token = "0x60003D3")]
	[Address(RVA = "0xC554D0", Offset = "0xC554D0", VA = "0xC554D0")]
	private void IdleSpeakShort()
	{
	}

	[Token(Token = "0x60003D4")]
	[Address(RVA = "0xC555CC", Offset = "0xC555CC", VA = "0xC555CC")]
	private void CozySpeak1()
	{
	}

	[Token(Token = "0x60003D5")]
	[Address(RVA = "0xC556DC", Offset = "0xC556DC", VA = "0xC556DC")]
	private void CozySpeak2()
	{
	}

	[Token(Token = "0x60003D6")]
	[Address(RVA = "0xC557D8", Offset = "0xC557D8", VA = "0xC557D8")]
	private void Footstep()
	{
	}

	[Token(Token = "0x60003D7")]
	[Address(RVA = "0xC558D0", Offset = "0xC558D0", VA = "0xC558D0")]
	private void HappySpeak()
	{
	}

	[Token(Token = "0x60003D8")]
	[Address(RVA = "0xC559E4", Offset = "0xC559E4", VA = "0xC559E4")]
	private void EatSpeak()
	{
	}

	[Token(Token = "0x60003D9")]
	[Address(RVA = "0xC55AE0", Offset = "0xC55AE0", VA = "0xC55AE0")]
	public CreatureSounds()
	{
	}
}
[Token(Token = "0x20000CE")]
public class GodIslandAnimationSoundTriggers : MonoBehaviour
{
	[Token(Token = "0x40003C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private NeatAudioPlayer m_god1;

	[Token(Token = "0x40003C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private NeatAudioPlayer m_god2;

	[Token(Token = "0x40003C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private NeatAudioPlayer m_god3;

	[Token(Token = "0x40003CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private NeatAudioPlayer m_special;

	[Token(Token = "0x40003CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private NeatAudioPlayer m_music;

	[Token(Token = "0x40003CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private NeatAudioCue[] m_audioCues;

	[Token(Token = "0x40003CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private NeatAudioCue[] m_musicCues;

	[Token(Token = "0x60003DB")]
	[Address(RVA = "0xE80EBC", Offset = "0xE80EBC", VA = "0xE80EBC")]
	public void TriggerSoundGod1(int audioCueIndex)
	{
	}

	[Token(Token = "0x60003DC")]
	[Address(RVA = "0xE80F14", Offset = "0xE80F14", VA = "0xE80F14")]
	public void TriggerSoundGod2(int audioCueIndex)
	{
	}

	[Token(Token = "0x60003DD")]
	[Address(RVA = "0xE80F6C", Offset = "0xE80F6C", VA = "0xE80F6C")]
	public void TriggerSoundGod3(int audioCueIndex)
	{
	}

	[Token(Token = "0x60003DE")]
	[Address(RVA = "0xE80FC4", Offset = "0xE80FC4", VA = "0xE80FC4")]
	public void TriggerSoundSpecial(int audioCueIndex)
	{
	}

	[Token(Token = "0x60003DF")]
	[Address(RVA = "0xE8101C", Offset = "0xE8101C", VA = "0xE8101C")]
	public void TriggerMusic(int audioCueIndex)
	{
	}

	[Token(Token = "0x60003E0")]
	[Address(RVA = "0xE810FC", Offset = "0xE810FC", VA = "0xE810FC")]
	public GodIslandAnimationSoundTriggers()
	{
	}
}
[Token(Token = "0x20000CF")]
public interface IBiomeMusic
{
	[Token(Token = "0x60003E1")]
	void MerchantMusic(bool play = false);
}
[Token(Token = "0x20000D0")]
public class ImpactSounds : MonoBehaviour
{
	[Token(Token = "0x40003CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private NeatAudioPlayer impactSoundPlayer;

	[Token(Token = "0x40003CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public NeatAudioCue impactSoundCue;

	[Token(Token = "0x40003D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool limitPlayback;

	[Token(Token = "0x40003D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private readonly int SPEED;

	[Token(Token = "0x60003E2")]
	[Address(RVA = "0xBDE840", Offset = "0xBDE840", VA = "0xBDE840")]
	private void Start()
	{
	}

	[Token(Token = "0x60003E3")]
	[Address(RVA = "0xBDEA14", Offset = "0xBDEA14", VA = "0xBDEA14")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x60003E4")]
	[Address(RVA = "0xBDEB78", Offset = "0xBDEB78", VA = "0xBDEB78")]
	public void TriggerImpactSound(float impactSpeed)
	{
	}

	[Token(Token = "0x60003E5")]
	[Address(RVA = "0xBDEC74", Offset = "0xBDEC74", VA = "0xBDEC74")]
	public ImpactSounds()
	{
	}
}
[Token(Token = "0x20000D1")]
public class ManateeSounds : MonoBehaviour
{
	[Token(Token = "0x40003D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public NeatAudioPlayer voiceAudioPlayer;

	[Token(Token = "0x40003D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static readonly int PITCH;

	[Token(Token = "0x40003D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public NeatAudioCue manateeEatingFromHandEnd;

	[Token(Token = "0x40003D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public NeatAudioCue manateeEatingFromHandStart;

	[Token(Token = "0x40003D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public NeatAudioCue manateeEatNoHold;

	[Token(Token = "0x40003D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public NeatAudioCue manateeIdle;

	[Token(Token = "0x40003D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public NeatAudioCue manateeIdleBreakerShake;

	[Token(Token = "0x40003D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public NeatAudioCue manateePetting;

	[Token(Token = "0x40003DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public NeatAudioCue manateeReactionHappy;

	[Token(Token = "0x40003DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public NeatAudioCue manateeSleepingStart;

	[Token(Token = "0x40003DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public NeatAudioCue manateeSnoring;

	[Token(Token = "0x40003DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private CreatureHappyEvent happyEvent;

	[Token(Token = "0x60003E6")]
	[Address(RVA = "0xC12BC4", Offset = "0xC12BC4", VA = "0xC12BC4")]
	private void ManateeEatingFromHandEnd()
	{
	}

	[Token(Token = "0x60003E7")]
	[Address(RVA = "0xC12CC0", Offset = "0xC12CC0", VA = "0xC12CC0")]
	private void ManateeEatingFromHandStart()
	{
	}

	[Token(Token = "0x60003E8")]
	[Address(RVA = "0xC12DBC", Offset = "0xC12DBC", VA = "0xC12DBC")]
	private void ManateeEatNoHold()
	{
	}

	[Token(Token = "0x60003E9")]
	[Address(RVA = "0xC12EB8", Offset = "0xC12EB8", VA = "0xC12EB8")]
	private void ManateeIdle()
	{
	}

	[Token(Token = "0x60003EA")]
	[Address(RVA = "0xC12FB4", Offset = "0xC12FB4", VA = "0xC12FB4")]
	private void ManateeIdleBreakerShake()
	{
	}

	[Token(Token = "0x60003EB")]
	[Address(RVA = "0xC130B0", Offset = "0xC130B0", VA = "0xC130B0")]
	private void ManateePetting()
	{
	}

	[Token(Token = "0x60003EC")]
	[Address(RVA = "0xC131AC", Offset = "0xC131AC", VA = "0xC131AC")]
	private void ManateeReactionHappy()
	{
	}

	[Token(Token = "0x60003ED")]
	[Address(RVA = "0xC132C0", Offset = "0xC132C0", VA = "0xC132C0")]
	private void ManateeSleepingStart()
	{
	}

	[Token(Token = "0x60003EE")]
	[Address(RVA = "0xC133BC", Offset = "0xC133BC", VA = "0xC133BC")]
	private void ManateeSnoring()
	{
	}

	[Token(Token = "0x60003EF")]
	[Address(RVA = "0xC134B8", Offset = "0xC134B8", VA = "0xC134B8")]
	public ManateeSounds()
	{
	}
}
[Token(Token = "0x20000D2")]
public class MerchantSounds : MonoBehaviour, IInitializable
{
	[Token(Token = "0x40003DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private NeatAudioPlayer blinkSoundPlayer;

	[Token(Token = "0x40003DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private NeatAudioPlayer merchantSounds;

	[Token(Token = "0x40003E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private NeatAudioCue Hello;

	[Token(Token = "0x40003E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private NeatAudioCue Selected;

	[Token(Token = "0x40003E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private NeatAudioCue Pay;

	[Token(Token = "0x40003E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private NeatAudioCue Thanks;

	[Token(Token = "0x40003E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private NeatAudioCue HereYouGo;

	[Token(Token = "0x40003E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private NeatAudioCue m_toolUpgrade;

	[Token(Token = "0x40003E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private NeatAudioCue m_moneybagGrabbed;

	[Token(Token = "0x40003E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private NeatAudioCue m_paymentNoLongerSufficient;

	[Token(Token = "0x40003E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static readonly int PICK;

	[Token(Token = "0x40003E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private float pickVal;

	[Token(Token = "0x40003EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private EnvironmentManager environmentManager;

	[Token(Token = "0x60003F1")]
	[Address(RVA = "0xC1FC5C", Offset = "0xC1FC5C", VA = "0xC1FC5C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60003F2")]
	[Address(RVA = "0xC1FD4C", Offset = "0xC1FD4C", VA = "0xC1FD4C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60003F3")]
	[Address(RVA = "0xC1FE3C", Offset = "0xC1FE3C", VA = "0xC1FE3C", Slot = "4")]
	public void Initialize()
	{
	}

	[Token(Token = "0x60003F4")]
	[Address(RVA = "0xC1FECC", Offset = "0xC1FECC", VA = "0xC1FECC")]
	private void CheckNight(int hour)
	{
	}

	[Token(Token = "0x60003F5")]
	[Address(RVA = "0xC1FEE8", Offset = "0xC1FEE8", VA = "0xC1FEE8")]
	private void Snore()
	{
	}

	[Token(Token = "0x60003F6")]
	[Address(RVA = "0xC1FEEC", Offset = "0xC1FEEC", VA = "0xC1FEEC")]
	private void BlinkSound()
	{
	}

	[Token(Token = "0x60003F7")]
	[Address(RVA = "0xC1FF08", Offset = "0xC1FF08", VA = "0xC1FF08")]
	private void HelloSound()
	{
	}

	[Token(Token = "0x60003F8")]
	[Address(RVA = "0xC1FFB8", Offset = "0xC1FFB8", VA = "0xC1FFB8")]
	private void SelectedSound()
	{
	}

	[Token(Token = "0x60003F9")]
	[Address(RVA = "0xC20068", Offset = "0xC20068", VA = "0xC20068")]
	private void PaySound()
	{
	}

	[Token(Token = "0x60003FA")]
	[Address(RVA = "0xC20118", Offset = "0xC20118", VA = "0xC20118")]
	private void ThanksSound()
	{
	}

	[Token(Token = "0x60003FB")]
	[Address(RVA = "0xC201C8", Offset = "0xC201C8", VA = "0xC201C8")]
	private void HereYouGoSound()
	{
	}

	[Token(Token = "0x60003FC")]
	[Address(RVA = "0xC20278", Offset = "0xC20278", VA = "0xC20278")]
	private void ToolUpgrade()
	{
	}

	[Token(Token = "0x60003FD")]
	[Address(RVA = "0xC20328", Offset = "0xC20328", VA = "0xC20328")]
	private void PaymentNoLongerSufficient()
	{
	}

	[Token(Token = "0x60003FE")]
	[Address(RVA = "0xC203D8", Offset = "0xC203D8", VA = "0xC203D8")]
	private void SeashellBagGrabbed()
	{
	}

	[Token(Token = "0x60003FF")]
	[Address(RVA = "0xC20488", Offset = "0xC20488", VA = "0xC20488")]
	public MerchantSounds()
	{
	}
}
[Token(Token = "0x20000D3")]
public class MixSnapshotTrigger : MonoBehaviour
{
	[Token(Token = "0x40003EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioMixerSnapshot Indoors;

	[Token(Token = "0x40003EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AudioMixerSnapshot Outdoors;

	[Token(Token = "0x40003ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float transitionTimeEnter;

	[Token(Token = "0x40003EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float transitionTimeExit;

	[Token(Token = "0x6000401")]
	[Address(RVA = "0xC2124C", Offset = "0xC2124C", VA = "0xC2124C")]
	public void OnTriggerEnter(Collider collision)
	{
	}

	[Token(Token = "0x6000402")]
	[Address(RVA = "0xC2136C", Offset = "0xC2136C", VA = "0xC2136C")]
	public void OnTriggerExit(Collider collision)
	{
	}

	[Token(Token = "0x6000403")]
	[Address(RVA = "0xC21488", Offset = "0xC21488", VA = "0xC21488")]
	public MixSnapshotTrigger()
	{
	}
}
[Token(Token = "0x20000D4")]
public class ParticleSoundPlayer : MonoBehaviour
{
	[Token(Token = "0x40003EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private ParticleSystem particles;

	[Token(Token = "0x40003F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private ParticleSystem.Particle[] _particles;

	[Token(Token = "0x40003F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private NeatAudioPlayer soundPlayer;

	[Token(Token = "0x40003F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private int prevCount;

	[Token(Token = "0x6000404")]
	[Address(RVA = "0xBB9BAC", Offset = "0xBB9BAC", VA = "0xBB9BAC")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000405")]
	[Address(RVA = "0xBB9C98", Offset = "0xBB9C98", VA = "0xBB9C98")]
	private void InitializeIfNeeded()
	{
	}

	[Token(Token = "0x6000406")]
	[Address(RVA = "0xBB9DC4", Offset = "0xBB9DC4", VA = "0xBB9DC4")]
	public ParticleSoundPlayer()
	{
	}
}
[Token(Token = "0x20000D5")]
public class PlantSounds : MonoBehaviour
{
	[Token(Token = "0x40003F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public NeatAudioCue uprootSound;

	[Token(Token = "0x40003F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public NeatAudioCue replantSound;

	[Token(Token = "0x6000407")]
	[Address(RVA = "0xD838B8", Offset = "0xD838B8", VA = "0xD838B8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000408")]
	[Address(RVA = "0xD839C0", Offset = "0xD839C0", VA = "0xD839C0")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000409")]
	[Address(RVA = "0xD83AC8", Offset = "0xD83AC8", VA = "0xD83AC8")]
	private void Uprooted(PlantUprootedEvent e)
	{
	}

	[Token(Token = "0x600040A")]
	[Address(RVA = "0xD83C50", Offset = "0xD83C50", VA = "0xD83C50")]
	private void Replanted(ReplantEvent e)
	{
	}

	[Token(Token = "0x600040B")]
	[Address(RVA = "0xD83DD8", Offset = "0xD83DD8", VA = "0xD83DD8")]
	private void Update()
	{
	}

	[Token(Token = "0x600040C")]
	[Address(RVA = "0xD83DDC", Offset = "0xD83DDC", VA = "0xD83DDC")]
	public PlantSounds()
	{
	}
}
[Token(Token = "0x20000D6")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x971848", Offset = "0x971848")]
public class RandomSoundPlayer : MonoBehaviour
{
	[Token(Token = "0x40003F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private AudioClip[] sounds;

	[Token(Token = "0x40003F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private AudioSource aSource;

	[Token(Token = "0x600040D")]
	[Address(RVA = "0xD19B1C", Offset = "0xD19B1C", VA = "0xD19B1C")]
	private void Awake()
	{
	}

	[Token(Token = "0x600040E")]
	[Address(RVA = "0xD19B7C", Offset = "0xD19B7C", VA = "0xD19B7C")]
	public void PlayRandom()
	{
	}

	[Token(Token = "0x600040F")]
	[Address(RVA = "0xD19BEC", Offset = "0xD19BEC", VA = "0xD19BEC")]
	public RandomSoundPlayer()
	{
	}
}
[Token(Token = "0x20000D7")]
public class SetBackgroundMusic : MonoBehaviour
{
	[Token(Token = "0x20000D8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9718AC", Offset = "0x9718AC")]
	private sealed class <DelayedStart>d__3 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40003F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40003FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40003FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SetBackgroundMusic <>4__this;

		[Token(Token = "0x1700007C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000417")]
			[Address(RVA = "0xCC52BC", Offset = "0xCC52BC", VA = "0xCC52BC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700007D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000419")]
			[Address(RVA = "0xCC5324", Offset = "0xCC5324", VA = "0xCC5324", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000414")]
		[Address(RVA = "0xCC5050", Offset = "0xCC5050", VA = "0xCC5050")]
		[DebuggerHidden]
		public <DelayedStart>d__3(int <>1__state)
		{
		}

		[Token(Token = "0x6000415")]
		[Address(RVA = "0xCC50EC", Offset = "0xCC50EC", VA = "0xCC50EC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000416")]
		[Address(RVA = "0xCC50F0", Offset = "0xCC50F0", VA = "0xCC50F0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000418")]
		[Address(RVA = "0xCC52C4", Offset = "0xCC52C4", VA = "0xCC52C4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40003F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GestrumentGlobalSync.Music backgroundMusic;

	[Token(Token = "0x40003F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private ModalTranspose boatTransposition;

	[Token(Token = "0x6000410")]
	[Address(RVA = "0xCC4FD0", Offset = "0xCC4FD0", VA = "0xCC4FD0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000411")]
	[Address(RVA = "0xCC4FD4", Offset = "0xCC4FD4", VA = "0xCC4FD4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x988534", Offset = "0x988534")]
	private IEnumerator DelayedStart()
	{
		return null;
	}

	[Token(Token = "0x6000412")]
	[Address(RVA = "0xCC507C", Offset = "0xCC507C", VA = "0xCC507C")]
	private void SetBoatTranspose(int transp)
	{
	}

	[Token(Token = "0x6000413")]
	[Address(RVA = "0xCC50E4", Offset = "0xCC50E4", VA = "0xCC50E4")]
	public SetBackgroundMusic()
	{
	}
}
[Token(Token = "0x20000D9")]
public class StartMusicSystemDelayed : MonoBehaviour
{
	[Token(Token = "0x20000DA")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9718BC", Offset = "0x9718BC")]
	private sealed class <DelayedStart>d__2 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40003FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40003FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40003FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public StartMusicSystemDelayed <>4__this;

		[Token(Token = "0x1700007E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000420")]
			[Address(RVA = "0xDFBCD4", Offset = "0xDFBCD4", VA = "0xDFBCD4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700007F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000422")]
			[Address(RVA = "0xDFBD3C", Offset = "0xDFBD3C", VA = "0xDFBD3C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600041D")]
		[Address(RVA = "0xDFBBDC", Offset = "0xDFBBDC", VA = "0xDFBBDC")]
		[DebuggerHidden]
		public <DelayedStart>d__2(int <>1__state)
		{
		}

		[Token(Token = "0x600041E")]
		[Address(RVA = "0xDFBC10", Offset = "0xDFBC10", VA = "0xDFBC10", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600041F")]
		[Address(RVA = "0xDFBC14", Offset = "0xDFBC14", VA = "0xDFBC14", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000421")]
		[Address(RVA = "0xDFBCDC", Offset = "0xDFBCDC", VA = "0xDFBCDC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40003FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject musicController;

	[Token(Token = "0x600041A")]
	[Address(RVA = "0xDFBB34", Offset = "0xDFBB34", VA = "0xDFBB34")]
	private void Start()
	{
	}

	[Token(Token = "0x600041B")]
	[Address(RVA = "0xDFBB60", Offset = "0xDFBB60", VA = "0xDFBB60")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9885E8", Offset = "0x9885E8")]
	private IEnumerator DelayedStart()
	{
		return null;
	}

	[Token(Token = "0x600041C")]
	[Address(RVA = "0xDFBC08", Offset = "0xDFBC08", VA = "0xDFBC08")]
	public StartMusicSystemDelayed()
	{
	}
}
[Token(Token = "0x20000DB")]
public class StaticSoundSpawner : MonoBehaviour
{
	[Token(Token = "0x20000DC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9718CC", Offset = "0x9718CC")]
	private sealed class <SpawnRandomSound>d__7 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000406")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000407")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000408")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public StaticSoundSpawner <>4__this;

		[Token(Token = "0x17000080")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000429")]
			[Address(RVA = "0xDFF410", Offset = "0xDFF410", VA = "0xDFF410", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000081")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600042B")]
			[Address(RVA = "0xDFF478", Offset = "0xDFF478", VA = "0xDFF478", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000426")]
		[Address(RVA = "0xDFF278", Offset = "0xDFF278", VA = "0xDFF278")]
		[DebuggerHidden]
		public <SpawnRandomSound>d__7(int <>1__state)
		{
		}

		[Token(Token = "0x6000427")]
		[Address(RVA = "0xDFF2AC", Offset = "0xDFF2AC", VA = "0xDFF2AC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000428")]
		[Address(RVA = "0xDFF2B0", Offset = "0xDFF2B0", VA = "0xDFF2B0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600042A")]
		[Address(RVA = "0xDFF418", Offset = "0xDFF418", VA = "0xDFF418", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000400")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private IEnumerator coroutine;

	[Token(Token = "0x4000401")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public NeatAudioCue[] soundCue;

	[Token(Token = "0x4000402")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public NeatAudioPlayer[] soundPlayers;

	[Token(Token = "0x4000403")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private NeatAudioPlayer soundPlayer;

	[Token(Token = "0x4000404")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float minTime;

	[Token(Token = "0x4000405")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float maxTime;

	[Token(Token = "0x6000423")]
	[Address(RVA = "0xDFF1C0", Offset = "0xDFF1C0", VA = "0xDFF1C0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000424")]
	[Address(RVA = "0xDFF1FC", Offset = "0xDFF1FC", VA = "0xDFF1FC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x98869C", Offset = "0x98869C")]
	private IEnumerator SpawnRandomSound()
	{
		return null;
	}

	[Token(Token = "0x6000425")]
	[Address(RVA = "0xDFF2A4", Offset = "0xDFF2A4", VA = "0xDFF2A4")]
	public StaticSoundSpawner()
	{
	}
}
[Token(Token = "0x20000DD")]
public class TransposeTester : MonoBehaviour
{
	[Token(Token = "0x20000DE")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9718DC", Offset = "0x9718DC")]
	private sealed class <DelayStart>d__4 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400040C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400040D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400040E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TransposeTester <>4__this;

		[Token(Token = "0x17000082")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000433")]
			[Address(RVA = "0xE691FC", Offset = "0xE691FC", VA = "0xE691FC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000083")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000435")]
			[Address(RVA = "0xE69264", Offset = "0xE69264", VA = "0xE69264", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000430")]
		[Address(RVA = "0xE69078", Offset = "0xE69078", VA = "0xE69078")]
		[DebuggerHidden]
		public <DelayStart>d__4(int <>1__state)
		{
		}

		[Token(Token = "0x6000431")]
		[Address(RVA = "0xE6913C", Offset = "0xE6913C", VA = "0xE6913C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000432")]
		[Address(RVA = "0xE69140", Offset = "0xE69140", VA = "0xE69140", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000434")]
		[Address(RVA = "0xE69204", Offset = "0xE69204", VA = "0xE69204", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000409")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int sinkid;

	[Token(Token = "0x400040A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int transposeslot;

	[Token(Token = "0x400040B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool dostuff;

	[Token(Token = "0x600042C")]
	[Address(RVA = "0xE68FD0", Offset = "0xE68FD0", VA = "0xE68FD0")]
	private void Start()
	{
	}

	[Token(Token = "0x600042D")]
	[Address(RVA = "0xE68FFC", Offset = "0xE68FFC", VA = "0xE68FFC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x988750", Offset = "0x988750")]
	private IEnumerator DelayStart()
	{
		return null;
	}

	[Token(Token = "0x600042E")]
	[Address(RVA = "0xE690A4", Offset = "0xE690A4", VA = "0xE690A4")]
	private void OnValidate()
	{
	}

	[Token(Token = "0x600042F")]
	[Address(RVA = "0xE69134", Offset = "0xE69134", VA = "0xE69134")]
	public TransposeTester()
	{
	}
}
[Token(Token = "0x20000DF")]
public class TreeWindSounds : MonoBehaviour
{
	[Token(Token = "0x20000E0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9718EC", Offset = "0x9718EC")]
	private sealed class <WindTreeSoundPlayer>d__9 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000417")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000418")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000419")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TreeWindSounds <>4__this;

		[Token(Token = "0x17000084")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600043E")]
			[Address(RVA = "0xE698D8", Offset = "0xE698D8", VA = "0xE698D8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000085")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000440")]
			[Address(RVA = "0xE69940", Offset = "0xE69940", VA = "0xE69940", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600043B")]
		[Address(RVA = "0xE69384", Offset = "0xE69384", VA = "0xE69384")]
		[DebuggerHidden]
		public <WindTreeSoundPlayer>d__9(int <>1__state)
		{
		}

		[Token(Token = "0x600043C")]
		[Address(RVA = "0xE69594", Offset = "0xE69594", VA = "0xE69594", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600043D")]
		[Address(RVA = "0xE69598", Offset = "0xE69598", VA = "0xE69598", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600043F")]
		[Address(RVA = "0xE698E0", Offset = "0xE698E0", VA = "0xE698E0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400040F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private IEnumerator coroutine;

	[Token(Token = "0x4000410")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private NeatAudioPlayer soundPlayer;

	[Token(Token = "0x4000411")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private GameObject[] trees;

	[Token(Token = "0x4000412")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject[] windPlayers;

	[Token(Token = "0x4000413")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public NeatAudioPlayer generalWindPlayer;

	[Token(Token = "0x4000414")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Transform player;

	[Token(Token = "0x4000415")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float generalWindHeightMultiplier;

	[Token(Token = "0x4000416")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static readonly int HEIGHT;

	[Token(Token = "0x6000436")]
	[Address(RVA = "0xE6926C", Offset = "0xE6926C", VA = "0xE6926C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000437")]
	[Address(RVA = "0xE69308", Offset = "0xE69308", VA = "0xE69308")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x988804", Offset = "0x988804")]
	private IEnumerator WindTreeSoundPlayer()
	{
		return null;
	}

	[Token(Token = "0x6000438")]
	[Address(RVA = "0xE693B0", Offset = "0xE693B0", VA = "0xE693B0")]
	public TreeWindSounds()
	{
	}

	[Token(Token = "0x600043A")]
	[Address(RVA = "0xE69424", Offset = "0xE69424", VA = "0xE69424")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x988868", Offset = "0x988868")]
	private int <WindTreeSoundPlayer>b__9_0(GameObject g1, GameObject g2)
	{
		return default(int);
	}
}
[Serializable]
[Token(Token = "0x20000E1")]
public class BlendableList<T> : List<T> where T : IBlendable<T>
{
	[Token(Token = "0x6000441")]
	public T GetByIndex(float iFloat, bool slerp = false)
	{
		return (T)null;
	}

	[Token(Token = "0x6000442")]
	public T GetNormalized(float t, bool slerp = false)
	{
		return (T)null;
	}

	[Token(Token = "0x6000443")]
	public BlendableList()
	{
	}
}
[Token(Token = "0x20000E2")]
public interface IBlendable<T>
{
	[Token(Token = "0x6000444")]
	T Lerp(T b, float t);

	[Token(Token = "0x6000445")]
	T Slerp(T b, float t);
}
[Token(Token = "0x20000E3")]
public class AnalyticsManager : MonoBehaviour
{
	[Token(Token = "0x400041A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static AnalyticsManager Instance;

	[Token(Token = "0x400041B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private bool runInEditor;

	[Token(Token = "0x400041C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	[SerializeField]
	public bool trackLocation;

	[Token(Token = "0x400041D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Dictionary<string, object> treesChopped;

	[Token(Token = "0x400041E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Dictionary<string, object> puffkinInteractions;

	[Token(Token = "0x400041F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Dictionary<string, object> manateeInteractions;

	[Token(Token = "0x4000420")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Dictionary<string, object> boatingTime;

	[Token(Token = "0x4000421")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Dictionary<string, object> outdoorTime;

	[Token(Token = "0x4000422")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Dictionary<string, object> plantStats;

	[Token(Token = "0x4000423")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Dictionary<string, object> toolUse;

	[Token(Token = "0x4000424")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Dictionary<string, object> crafting;

	[Token(Token = "0x4000425")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Dictionary<string, object> playerLocation;

	[Token(Token = "0x4000426")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9764B4", Offset = "0x9764B4")]
	[SerializeField]
	private int treeChops;

	[Token(Token = "0x4000427")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	[SerializeField]
	private float waterPoured;

	[Token(Token = "0x4000428")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private int seedsSown;

	[Token(Token = "0x4000429")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	[SerializeField]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x976520", Offset = "0x976520")]
	private int plantsSprouted;

	[Token(Token = "0x400042A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private int plantsReplanted;

	[Token(Token = "0x400042B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x97657C", Offset = "0x97657C")]
	[SerializeField]
	private int puffkinsPetted;

	[Token(Token = "0x400042C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	private int puffkinsFed;

	[Token(Token = "0x400042D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	[SerializeField]
	private int manateesPetted;

	[Token(Token = "0x400042E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	private int manateesFed;

	[Token(Token = "0x400042F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	[SerializeField]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9765F8", Offset = "0x9765F8")]
	private int itemsCrafted;

	[Token(Token = "0x4000430")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[SerializeField]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x976644", Offset = "0x976644")]
	private int boatingTrips;

	[Token(Token = "0x4000431")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	[SerializeField]
	private float timeOnBoat;

	[Token(Token = "0x4000432")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[SerializeField]
	private float timeOutdoors;

	[Token(Token = "0x4000433")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	[SerializeField]
	private float timeIndoors;

	[Token(Token = "0x4000434")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[SerializeField]
	private float timeOutdoorsPercent;

	[Token(Token = "0x4000435")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	[SerializeField]
	private float timeIndoorsPercent;

	[Token(Token = "0x4000436")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[SerializeField]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9766E0", Offset = "0x9766E0")]
	private List<string> oneShotEventsRegistered;

	[Token(Token = "0x4000437")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[SerializeField]
	private List<string> standardEventsRegistered;

	[Token(Token = "0x4000438")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private float boatTimeStamp;

	[Token(Token = "0x4000439")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private float indoorOutdoorTimeStamp;

	[Token(Token = "0x6000446")]
	[Address(RVA = "0xF57AB8", Offset = "0xF57AB8", VA = "0xF57AB8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000447")]
	[Address(RVA = "0xF57DA0", Offset = "0xF57DA0", VA = "0xF57DA0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000448")]
	[Address(RVA = "0xF58148", Offset = "0xF58148", VA = "0xF58148")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000449")]
	[Address(RVA = "0xF584F0", Offset = "0xF584F0", VA = "0xF584F0")]
	private void OnWaterCanDropped(WateringCanDroppedEvent e)
	{
	}

	[Token(Token = "0x600044A")]
	[Address(RVA = "0xF58514", Offset = "0xF58514", VA = "0xF58514")]
	private void OnItemCrafted(ItemCraftedEvent e)
	{
	}

	[Token(Token = "0x600044B")]
	[Address(RVA = "0xF58524", Offset = "0xF58524", VA = "0xF58524")]
	private void OnCreatureInteract(CreatureInteractionEvent e)
	{
	}

	[Token(Token = "0x600044C")]
	[Address(RVA = "0xF5865C", Offset = "0xF5865C", VA = "0xF5865C")]
	private void OnBoatingEvent(BoatingEvent e)
	{
	}

	[Token(Token = "0x600044D")]
	[Address(RVA = "0xF586C8", Offset = "0xF586C8", VA = "0xF586C8")]
	private void OnReleaseSeed(SeedbagReleaseSeedEvent e)
	{
	}

	[Token(Token = "0x600044E")]
	[Address(RVA = "0xF586D8", Offset = "0xF586D8", VA = "0xF586D8")]
	private void OnLeaveOrEnterHouse(IndoorOutdoorEvent e)
	{
	}

	[Token(Token = "0x600044F")]
	[Address(RVA = "0xF5874C", Offset = "0xF5874C", VA = "0xF5874C")]
	private void OnChopped(ChoppedEvent e)
	{
	}

	[Token(Token = "0x6000450")]
	[Address(RVA = "0xF5875C", Offset = "0xF5875C", VA = "0xF5875C")]
	private void OnReplanting(ReplantEvent e)
	{
	}

	[Token(Token = "0x6000451")]
	[Address(RVA = "0xF5876C", Offset = "0xF5876C", VA = "0xF5876C")]
	private void OnPlantSprouted(PlantSproutedEvent e)
	{
	}

	[Token(Token = "0x6000452")]
	[Address(RVA = "0xF5877C", Offset = "0xF5877C", VA = "0xF5877C")]
	public void DispatchOneShotEvent(string name, [Optional] Dictionary<string, object> param)
	{
	}

	[Token(Token = "0x6000453")]
	[Address(RVA = "0xF58840", Offset = "0xF58840", VA = "0xF58840")]
	public void DispatchGameStartEvent()
	{
	}

	[Token(Token = "0x6000454")]
	[Address(RVA = "0xF588DC", Offset = "0xF588DC", VA = "0xF588DC")]
	private void OnApplicationQuit()
	{
	}

	[Token(Token = "0x6000455")]
	[Address(RVA = "0xF58928", Offset = "0xF58928", VA = "0xF58928")]
	private void DispatchAnalyticsEvents()
	{
	}

	[Token(Token = "0x6000456")]
	[Address(RVA = "0xF5904C", Offset = "0xF5904C", VA = "0xF5904C")]
	private void DispatchLocationTrackingEvent()
	{
	}

	[Token(Token = "0x6000457")]
	[Address(RVA = "0xF58BE0", Offset = "0xF58BE0", VA = "0xF58BE0")]
	private void DispatchToolUseEvent()
	{
	}

	[Token(Token = "0x6000458")]
	[Address(RVA = "0xF58988", Offset = "0xF58988", VA = "0xF58988")]
	private void DispatchCreatureInteractEvents()
	{
	}

	[Token(Token = "0x6000459")]
	[Address(RVA = "0xF58D0C", Offset = "0xF58D0C", VA = "0xF58D0C")]
	private void DispatchCraftingEvent()
	{
	}

	[Token(Token = "0x600045A")]
	[Address(RVA = "0xF58AF4", Offset = "0xF58AF4", VA = "0xF58AF4")]
	private void DispatchBoatingEvent()
	{
	}

	[Token(Token = "0x600045B")]
	[Address(RVA = "0xF58DB8", Offset = "0xF58DB8", VA = "0xF58DB8")]
	private void DispatchPlantStatsEvent()
	{
	}

	[Token(Token = "0x600045C")]
	[Address(RVA = "0xF58EA4", Offset = "0xF58EA4", VA = "0xF58EA4")]
	private void DispatchPlayerTrackingEvent()
	{
	}

	[Token(Token = "0x600045D")]
	[Address(RVA = "0xF591E8", Offset = "0xF591E8", VA = "0xF591E8")]
	public AnalyticsManager()
	{
	}
}
[Token(Token = "0x20000E4")]
public class AttachSlot : MonoBehaviour
{
	[Token(Token = "0x400043A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool applySlotRotationToObject;

	[Token(Token = "0x400043B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool applySlotScaleToObject;

	[Token(Token = "0x400043C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public SaveObjectBase objectToAttach;

	[Token(Token = "0x400043D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private FollowJoint followJoint;

	[Token(Token = "0x400043E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private SaveObjectBase attachedObject;

	[Token(Token = "0x400043F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Action<SaveObjectBase, Grabbable> m_onObjectAttached;

	[Token(Token = "0x4000440")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Action<SaveObjectBase, Grabbable> m_onObjectDetached;

	[Token(Token = "0x600045E")]
	[Address(RVA = "0xF5F2F8", Offset = "0xF5F2F8", VA = "0xF5F2F8")]
	public ComponentState CreateState(ComponentState state)
	{
		return null;
	}

	[Token(Token = "0x600045F")]
	[Address(RVA = "0xF5F450", Offset = "0xF5F450", VA = "0xF5F450")]
	public void Initialize(ComponentState state)
	{
	}

	[Token(Token = "0x6000460")]
	[Address(RVA = "0xF5F84C", Offset = "0xF5F84C", VA = "0xF5F84C")]
	public void RegisterAttachedHandler(Action<SaveObjectBase, Grabbable> onAttatched)
	{
	}

	[Token(Token = "0x6000461")]
	[Address(RVA = "0xF5F8DC", Offset = "0xF5F8DC", VA = "0xF5F8DC")]
	public void DeregisterAttatchedHandler(Action<SaveObjectBase, Grabbable> onAttatched)
	{
	}

	[Token(Token = "0x6000462")]
	[Address(RVA = "0xF5F96C", Offset = "0xF5F96C", VA = "0xF5F96C")]
	public void RegisterDetachedHandler(Action<SaveObjectBase, Grabbable> onDetached)
	{
	}

	[Token(Token = "0x6000463")]
	[Address(RVA = "0xF5F9FC", Offset = "0xF5F9FC", VA = "0xF5F9FC")]
	public void DeregisterDetachedHandler(Action<SaveObjectBase, Grabbable> onDetached)
	{
	}

	[Token(Token = "0x6000464")]
	[Address(RVA = "0xF5FA8C", Offset = "0xF5FA8C", VA = "0xF5FA8C")]
	public bool HasAttachedObject()
	{
		return default(bool);
	}

	[Token(Token = "0x6000465")]
	[Address(RVA = "0xF5FB88", Offset = "0xF5FB88", VA = "0xF5FB88")]
	public SaveObjectBase GetAttachedObject()
	{
		return null;
	}

	[Token(Token = "0x6000466")]
	[Address(RVA = "0xF5F5D4", Offset = "0xF5F5D4", VA = "0xF5F5D4")]
	public bool AttachSaveObject(SaveObjectBase obj)
	{
		return default(bool);
	}

	[Token(Token = "0x6000467")]
	[Address(RVA = "0xF5FB90", Offset = "0xF5FB90", VA = "0xF5FB90")]
	public void DetachCurrentObject()
	{
	}

	[Token(Token = "0x6000468")]
	[Address(RVA = "0xF5FD7C", Offset = "0xF5FD7C", VA = "0xF5FD7C")]
	public FollowJoint GetFollowJoint()
	{
		return null;
	}

	[Token(Token = "0x6000469")]
	[Address(RVA = "0xF5FD84", Offset = "0xF5FD84", VA = "0xF5FD84")]
	public AttachSlot()
	{
	}
}
[Serializable]
[Token(Token = "0x20000E5")]
public class AttachSlotState : ComponentState
{
	[Token(Token = "0x4000441")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public SaveID attachedObject;

	[Token(Token = "0x600046A")]
	[Address(RVA = "0xF5F448", Offset = "0xF5F448", VA = "0xF5F448")]
	public AttachSlotState()
	{
	}
}
[Token(Token = "0x20000E6")]
public class AttachSlotsContainer : Container, IInitializable
{
	[Token(Token = "0x4000442")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AttachSlot[] slots;

	[Token(Token = "0x17000086")]
	public override float FillPercent
	{
		[Token(Token = "0x600046B")]
		[Address(RVA = "0xF5FD8C", Offset = "0xF5FD8C", VA = "0xF5FD8C", Slot = "7")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x600046C")]
	[Address(RVA = "0xF5FDEC", Offset = "0xF5FDEC", VA = "0xF5FDEC", Slot = "4")]
	public override ComponentState CreateState()
	{
		return null;
	}

	[Token(Token = "0x600046D")]
	[Address(RVA = "0xF5FFE8", Offset = "0xF5FFE8", VA = "0xF5FFE8", Slot = "6")]
	public override void Initialize()
	{
	}

	[Token(Token = "0x600046E")]
	[Address(RVA = "0xF601A8", Offset = "0xF601A8", VA = "0xF601A8")]
	private void OnValidate()
	{
	}

	[Token(Token = "0x600046F")]
	[Address(RVA = "0xF60208", Offset = "0xF60208", VA = "0xF60208")]
	public AttachSlotsContainer()
	{
	}
}
[Serializable]
[Token(Token = "0x20000E7")]
public class AttachSlotsContainerState : ComponentState
{
	[Token(Token = "0x4000443")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public AttachSlotState[] slotStates;

	[Token(Token = "0x6000470")]
	[Address(RVA = "0xF5FFE0", Offset = "0xF5FFE0", VA = "0xF5FFE0")]
	public AttachSlotsContainerState()
	{
	}
}
[Token(Token = "0x20000E8")]
public class EventManager
{
	[Token(Token = "0x20000E9")]
	public delegate void EventDelegate<T>(T e) where T : GameEvent;

	[Token(Token = "0x20000EA")]
	private delegate void EventDelegate(GameEvent e);

	[Token(Token = "0x20000EB")]
	private struct EventDelegateCounter
	{
		[Token(Token = "0x4000449")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private EventDelegate m_delegate;

		[Token(Token = "0x400044A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public int Count;

		[Token(Token = "0x17000088")]
		public EventDelegate Delegate
		{
			[Token(Token = "0x6000481")]
			[Address(RVA = "0xA43690", Offset = "0xA43690", VA = "0xA43690")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000482")]
		[Address(RVA = "0xA43698", Offset = "0xA43698", VA = "0xA43698")]
		public EventDelegateCounter(EventDelegate del, int count)
		{
		}
	}

	[Token(Token = "0x20000EC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9718FC", Offset = "0x9718FC")]
	private sealed class <>c__DisplayClass10_0<T> where T : GameEvent
	{
		[Token(Token = "0x400044B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public EventDelegate<T> del;

		[Token(Token = "0x6000483")]
		public <>c__DisplayClass10_0()
		{
		}

		[Token(Token = "0x6000484")]
		internal void <AddListener>b__0(GameEvent e)
		{
		}
	}

	[Token(Token = "0x20000ED")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x97190C", Offset = "0x97190C")]
	private sealed class <>c__DisplayClass12_0<T> where T : GameEvent
	{
		[Token(Token = "0x400044C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public EventDelegate<T> del;

		[Token(Token = "0x6000485")]
		public <>c__DisplayClass12_0()
		{
		}

		[Token(Token = "0x6000486")]
		internal void <AddListenerForTarget>b__0(GameEvent e)
		{
		}
	}

	[Token(Token = "0x4000444")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static EventManager instance;

	[Token(Token = "0x4000445")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private Dictionary<Type, EventDelegate> delegates;

	[Token(Token = "0x4000446")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Dictionary<Delegate, EventDelegate> delegateLookup;

	[Token(Token = "0x4000447")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Dictionary<Type, Dictionary<int, EventDelegate>> m_targetDelegates;

	[Token(Token = "0x4000448")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Dictionary<Delegate, EventDelegateCounter> m_targetDelegateLookup;

	[Token(Token = "0x17000087")]
	public static EventManager Instance
	{
		[Token(Token = "0x6000471")]
		[Address(RVA = "0xBFC828", Offset = "0xBFC828", VA = "0xBFC828")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000472")]
	public void AddListener<T>(EventDelegate<T> del) where T : GameEvent
	{
	}

	[Token(Token = "0x6000473")]
	public void RemoveListener<T>(EventDelegate<T> del) where T : GameEvent
	{
	}

	[Token(Token = "0x6000474")]
	public void AddListenerForTarget<T>(EventDelegate<T> del, GameObject target) where T : GameEvent
	{
	}

	[Token(Token = "0x6000475")]
	public void RemoveListenerForTarget<T>(EventDelegate<T> del, GameObject target) where T : GameEvent
	{
	}

	[Token(Token = "0x6000476")]
	[Address(RVA = "0xBFC9C4", Offset = "0xBFC9C4", VA = "0xBFC9C4")]
	public void Raise(GameEvent e)
	{
	}

	[Token(Token = "0x6000477")]
	[Address(RVA = "0xBFCDF4", Offset = "0xBFCDF4", VA = "0xBFCDF4")]
	public void RaiseForTarget(GameEvent e, GameObject target)
	{
	}

	[Token(Token = "0x6000478")]
	[Address(RVA = "0xBFC8AC", Offset = "0xBFC8AC", VA = "0xBFC8AC")]
	public EventManager()
	{
	}
}
[Token(Token = "0x20000EE")]
public class GameEvent
{
	[Token(Token = "0x6000487")]
	[Address(RVA = "0xCA9F18", Offset = "0xCA9F18", VA = "0xCA9F18")]
	public GameEvent()
	{
	}
}
[Token(Token = "0x20000EF")]
public class GameManager : MonoBehaviour
{
	[Token(Token = "0x20000F0")]
	public delegate void OnWorldZoneChangedCallback(WorldZone newWorldZone);

	[Token(Token = "0x20000F1")]
	public delegate void OnPlayerLeftWorldZoneCallback(WorldZone leftWorldZone);

	[Token(Token = "0x20000F2")]
	public enum State
	{
		[Token(Token = "0x4000477")]
		LoadGame,
		[Token(Token = "0x4000478")]
		LoadStartingAreas,
		[Token(Token = "0x4000479")]
		LoadingStaticScenes,
		[Token(Token = "0x400047A")]
		LoadingDynamicScenes,
		[Token(Token = "0x400047B")]
		SpawningObjects,
		[Token(Token = "0x400047C")]
		InitializingObjects,
		[Token(Token = "0x400047D")]
		FinishUpLoading,
		[Token(Token = "0x400047E")]
		PlayingGame,
		[Token(Token = "0x400047F")]
		Paused,
		[Token(Token = "0x4000480")]
		None
	}

	[Token(Token = "0x20000F3")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x97191C", Offset = "0x97191C")]
	private sealed class <CheckIfAllSystemsGo>d__136 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000481")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000482")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000483")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameManager <>4__this;

		[Token(Token = "0x17000093")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60004E9")]
			[Address(RVA = "0xE72304", Offset = "0xE72304", VA = "0xE72304", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000094")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60004EB")]
			[Address(RVA = "0xE7236C", Offset = "0xE7236C", VA = "0xE7236C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60004E6")]
		[Address(RVA = "0xE721EC", Offset = "0xE721EC", VA = "0xE721EC")]
		[DebuggerHidden]
		public <CheckIfAllSystemsGo>d__136(int <>1__state)
		{
		}

		[Token(Token = "0x60004E7")]
		[Address(RVA = "0xE72218", Offset = "0xE72218", VA = "0xE72218", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60004E8")]
		[Address(RVA = "0xE7221C", Offset = "0xE7221C", VA = "0xE7221C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60004EA")]
		[Address(RVA = "0xE7230C", Offset = "0xE7230C", VA = "0xE7230C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400044D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x97674C", Offset = "0x97674C")]
	private static GameManager <Instance>k__BackingField;

	[Token(Token = "0x400044E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x97675C", Offset = "0x97675C")]
	private static bool <IsShuttingDown>k__BackingField;

	[Token(Token = "0x400044F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static string MAIN_MENU_SCENE;

	[Token(Token = "0x4000450")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static string GAME_SCENE;

	[Token(Token = "0x4000451")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public static string MAIN_SCENE;

	[Token(Token = "0x4000452")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private GameSettings gameSettings;

	[Token(Token = "0x4000453")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private WorldZone currentWorldZone;

	[Token(Token = "0x4000454")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool shouldCancelLoading;

	[Token(Token = "0x4000455")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	private bool isInMainMenu;

	[Token(Token = "0x4000456")]
	private const float AUTOSAVE_INTERVAL = 300f;

	[Token(Token = "0x4000457")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float timeLeftUntilAutoSave;

	[Token(Token = "0x4000458")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public OnWorldZoneChangedCallback OnWorldZoneChanged;

	[Token(Token = "0x4000459")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public OnPlayerLeftWorldZoneCallback OnPlayerLeftWorldZone;

	[Token(Token = "0x400045A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public static Type[] initializationOrder;

	[Token(Token = "0x400045B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public static Dictionary<Type, Type> subclasses;

	[Token(Token = "0x400045C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private SceneBundle[] defaultSceneBundles;

	[Token(Token = "0x400045D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private SceneBundle[] mainMenuSceneBundles;

	[Token(Token = "0x400045E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private SceneBundle[] newGameSceneBundles;

	[Token(Token = "0x400045F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private GotsBuildVersion gotsBuildVersion;

	[Token(Token = "0x4000460")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private bool isStartingGame;

	[Token(Token = "0x4000461")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
	private bool isReturningToHouse;

	[Token(Token = "0x4000462")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private SceneHandler sceneHandler;

	[Token(Token = "0x4000463")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private SaveManager saveManager;

	[Token(Token = "0x4000464")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private GameProgressTracker progressTracker;

	[Token(Token = "0x4000465")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private PlantPrefabDataManager plantDataManager;

	[Token(Token = "0x4000466")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private QuestObjectManager questObjectManager;

	[Token(Token = "0x4000467")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private bool allSystemsGo;

	[Token(Token = "0x4000468")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private SaveGame currentGame;

	[Token(Token = "0x4000469")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private GameSession currentSession;

	[Token(Token = "0x400046A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private SaveSlot saveSlotToLoad;

	[Token(Token = "0x400046B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private State currentState;

	[Token(Token = "0x400046C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	private State previousState;

	[Token(Token = "0x400046D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private Queue<List<SceneBundle>> areasToLoad;

	[Token(Token = "0x400046E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private List<IInitializable> objectsToInitialize;

	[Token(Token = "0x400046F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private List<IGrabbable> grabbablesToTrack;

	[Token(Token = "0x4000470")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private int currentInitIndex;

	[Token(Token = "0x4000471")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9767AC", Offset = "0x9767AC")]
	private static HMDActivityStatusType <HMDActivityStatus>k__BackingField;

	[Token(Token = "0x4000472")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9767BC", Offset = "0x9767BC")]
	private static HMDMountStatusType <HMDMountStatus>k__BackingField;

	[Token(Token = "0x4000473")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9767CC", Offset = "0x9767CC")]
	private static bool <IsPaused>k__BackingField;

	[Token(Token = "0x4000474")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private List<SaveObjectBase> strayStaticObjects;

	[Token(Token = "0x4000475")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private List<GameObject> strayObjectsToDestroy;

	[Token(Token = "0x17000089")]
	public static GameManager Instance
	{
		[Token(Token = "0x6000488")]
		[Address(RVA = "0xCA9F20", Offset = "0xCA9F20", VA = "0xCA9F20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9888C8", Offset = "0x9888C8")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000489")]
		[Address(RVA = "0xCA9F88", Offset = "0xCA9F88", VA = "0xCA9F88")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9888D8", Offset = "0x9888D8")]
		private set
		{
		}
	}

	[Token(Token = "0x1700008A")]
	public static bool AllSystemsGo
	{
		[Token(Token = "0x600048A")]
		[Address(RVA = "0xCA9FF8", Offset = "0xCA9FF8", VA = "0xCA9FF8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700008B")]
	public static bool IsLoadingGame
	{
		[Token(Token = "0x600048B")]
		[Address(RVA = "0xC9D6D4", Offset = "0xC9D6D4", VA = "0xC9D6D4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700008C")]
	public static bool IsShuttingDown
	{
		[Token(Token = "0x600048C")]
		[Address(RVA = "0xCAA0A8", Offset = "0xCAA0A8", VA = "0xCAA0A8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9888E8", Offset = "0x9888E8")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600048D")]
		[Address(RVA = "0xCAA110", Offset = "0xCAA110", VA = "0xCAA110")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9888F8", Offset = "0x9888F8")]
		set
		{
		}
	}

	[Token(Token = "0x1700008D")]
	public static bool PlayerIsBetweenIslands
	{
		[Token(Token = "0x600048E")]
		[Address(RVA = "0xCAA180", Offset = "0xCAA180", VA = "0xCAA180")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700008E")]
	public static WorldZone CurrentWorldZone
	{
		[Token(Token = "0x600048F")]
		[Address(RVA = "0xCAA304", Offset = "0xCAA304", VA = "0xCAA304")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700008F")]
	public static GotsBuildVersion BuildVersion
	{
		[Token(Token = "0x6000492")]
		[Address(RVA = "0xCAA5B4", Offset = "0xCAA5B4", VA = "0xCAA5B4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000090")]
	public static HMDActivityStatusType HMDActivityStatus
	{
		[Token(Token = "0x6000493")]
		[Address(RVA = "0xCAA708", Offset = "0xCAA708", VA = "0xCAA708")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x988908", Offset = "0x988908")]
		get
		{
			return default(HMDActivityStatusType);
		}
		[Token(Token = "0x6000494")]
		[Address(RVA = "0xCAA770", Offset = "0xCAA770", VA = "0xCAA770")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x988918", Offset = "0x988918")]
		private set
		{
		}
	}

	[Token(Token = "0x17000091")]
	public static HMDMountStatusType HMDMountStatus
	{
		[Token(Token = "0x6000495")]
		[Address(RVA = "0xCAA7DC", Offset = "0xCAA7DC", VA = "0xCAA7DC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x988928", Offset = "0x988928")]
		get
		{
			return default(HMDMountStatusType);
		}
		[Token(Token = "0x6000496")]
		[Address(RVA = "0xCAA844", Offset = "0xCAA844", VA = "0xCAA844")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x988938", Offset = "0x988938")]
		private set
		{
		}
	}

	[Token(Token = "0x17000092")]
	public static bool IsPaused
	{
		[Token(Token = "0x6000497")]
		[Address(RVA = "0xCAA8B0", Offset = "0xCAA8B0", VA = "0xCAA8B0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x988948", Offset = "0x988948")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000498")]
		[Address(RVA = "0xCAA918", Offset = "0xCAA918", VA = "0xCAA918")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x988958", Offset = "0x988958")]
		private set
		{
		}
	}

	[Token(Token = "0x6000490")]
	[Address(RVA = "0xCAA458", Offset = "0xCAA458", VA = "0xCAA458")]
	public static GameSettings GetGameSettings()
	{
		return null;
	}

	[Token(Token = "0x6000491")]
	[Address(RVA = "0xCAA5AC", Offset = "0xCAA5AC", VA = "0xCAA5AC")]
	public void AssignGotsBuildVersion(GotsBuildVersion v)
	{
	}

	[Token(Token = "0x6000499")]
	[Address(RVA = "0xCAA988", Offset = "0xCAA988", VA = "0xCAA988")]
	private void Awake()
	{
	}

	[Token(Token = "0x600049A")]
	[Address(RVA = "0xCAAD24", Offset = "0xCAAD24", VA = "0xCAAD24")]
	public static void SetHMDActivityStatus(HMDActivityStatusType hmdActivityStatus)
	{
	}

	[Token(Token = "0x600049B")]
	[Address(RVA = "0xCAAE90", Offset = "0xCAAE90", VA = "0xCAAE90")]
	public static void SetHMDMountStatus(HMDMountStatusType hmdMountStatus)
	{
	}

	[Token(Token = "0x600049C")]
	[Address(RVA = "0xCAAB18", Offset = "0xCAAB18", VA = "0xCAAB18")]
	private void InitGameSettings()
	{
	}

	[Token(Token = "0x600049D")]
	[Address(RVA = "0xCAACC4", Offset = "0xCAACC4", VA = "0xCAACC4")]
	private void InitAchievements()
	{
	}

	[Token(Token = "0x600049E")]
	[Address(RVA = "0xCAAFFC", Offset = "0xCAAFFC", VA = "0xCAAFFC")]
	public static void ApplyGameSettings()
	{
	}

	[Token(Token = "0x600049F")]
	[Address(RVA = "0xCAB130", Offset = "0xCAB130", VA = "0xCAB130")]
	private void Start()
	{
	}

	[Token(Token = "0x60004A0")]
	[Address(RVA = "0xCAB3F8", Offset = "0xCAB3F8", VA = "0xCAB3F8")]
	private void CheckIfStartingFromMainMenu()
	{
	}

	[Token(Token = "0x60004A1")]
	[Address(RVA = "0xCAB56C", Offset = "0xCAB56C", VA = "0xCAB56C")]
	public bool IsInMainMenu()
	{
		return default(bool);
	}

	[Token(Token = "0x60004A2")]
	[Address(RVA = "0xCAB134", Offset = "0xCAB134", VA = "0xCAB134")]
	private void Init()
	{
	}

	[Token(Token = "0x60004A3")]
	[Address(RVA = "0xCAB574", Offset = "0xCAB574", VA = "0xCAB574")]
	private void InitSystems()
	{
	}

	[Token(Token = "0x60004A4")]
	[Address(RVA = "0xCAB66C", Offset = "0xCAB66C", VA = "0xCAB66C")]
	private void Update()
	{
	}

	[Token(Token = "0x60004A5")]
	[Address(RVA = "0xCABBE0", Offset = "0xCABBE0", VA = "0xCABBE0")]
	private void OnApplicationPause(bool pause)
	{
	}

	[Token(Token = "0x60004A6")]
	[Address(RVA = "0xCAB8B4", Offset = "0xCAB8B4", VA = "0xCAB8B4")]
	private void EnterState(State state)
	{
	}

	[Token(Token = "0x60004A7")]
	[Address(RVA = "0xCABA60", Offset = "0xCABA60", VA = "0xCABA60")]
	private bool UpdateState(State state)
	{
		return default(bool);
	}

	[Token(Token = "0x60004A8")]
	[Address(RVA = "0xCACA18", Offset = "0xCACA18", VA = "0xCACA18")]
	private bool UpdateAutoSave()
	{
		return default(bool);
	}

	[Token(Token = "0x60004A9")]
	[Address(RVA = "0xCABA80", Offset = "0xCABA80", VA = "0xCABA80")]
	private void SwitchToNextState(State state)
	{
	}

	[Token(Token = "0x60004AA")]
	[Address(RVA = "0xCAD008", Offset = "0xCAD008", VA = "0xCAD008")]
	private void SwitchState(State newState)
	{
	}

	[Token(Token = "0x60004AB")]
	[Address(RVA = "0xCAD010", Offset = "0xCAD010", VA = "0xCAD010")]
	public bool IsDefaultSceneBundle(ref SaveID id)
	{
		return default(bool);
	}

	[Token(Token = "0x60004AC")]
	[Address(RVA = "0xCACD18", Offset = "0xCACD18", VA = "0xCACD18")]
	private void LoadInitialGameAreas()
	{
	}

	[Token(Token = "0x60004AD")]
	[Address(RVA = "0xCABF1C", Offset = "0xCABF1C", VA = "0xCABF1C")]
	private void LoadStaticScenes()
	{
	}

	[Token(Token = "0x60004AE")]
	[Address(RVA = "0xCAC008", Offset = "0xCAC008", VA = "0xCAC008")]
	private void LoadDynamicScenes()
	{
	}

	[Token(Token = "0x60004AF")]
	[Address(RVA = "0xCAD0D4", Offset = "0xCAD0D4", VA = "0xCAD0D4")]
	private void HandleStrayStaticObjects(LoadedSceneBundle loadedBundle, List<SaveObjectBase> objects)
	{
	}

	[Token(Token = "0x60004B0")]
	[Address(RVA = "0xCAD368", Offset = "0xCAD368", VA = "0xCAD368")]
	public void SetupObjectsInScene(LoadedSceneBundle loadedBundle, List<SaveObjectBase> objects)
	{
	}

	[Token(Token = "0x60004B1")]
	[Address(RVA = "0xCAD5F0", Offset = "0xCAD5F0", VA = "0xCAD5F0")]
	private void SetupSaveablesAndComponentsFromSaveData(List<SaveObjectBase> allSaveables, SaveableState[] saveStates, SaveableBinaryDataList binaryDataList)
	{
	}

	[Token(Token = "0x60004B2")]
	[Address(RVA = "0xCAD988", Offset = "0xCAD988", VA = "0xCAD988")]
	private void SetupSaveablesAndComponents(List<SaveObjectBase> allSaveables)
	{
	}

	[Token(Token = "0x60004B3")]
	[Address(RVA = "0xCAC1A0", Offset = "0xCAC1A0", VA = "0xCAC1A0")]
	private void SpawnDynamicObjects()
	{
	}

	[Token(Token = "0x60004B4")]
	[Address(RVA = "0xCAC5D4", Offset = "0xCAC5D4", VA = "0xCAC5D4")]
	private void StartInitializeObjects()
	{
	}

	[Token(Token = "0x60004B5")]
	[Address(RVA = "0xCADABC", Offset = "0xCADABC", VA = "0xCADABC")]
	public static void InitializeObjects(List<LoadedSceneBundle> bundles, bool canPostponeInit, bool debugPrint = false)
	{
	}

	[Token(Token = "0x60004B6")]
	[Address(RVA = "0xCAE338", Offset = "0xCAE338", VA = "0xCAE338")]
	private void AddRemainingGrabbablesToTracker()
	{
	}

	[Token(Token = "0x60004B7")]
	[Address(RVA = "0xCAC7FC", Offset = "0xCAC7FC", VA = "0xCAC7FC")]
	private bool UpdateInitialization()
	{
		return default(bool);
	}

	[Token(Token = "0x60004B8")]
	[Address(RVA = "0xCADFDC", Offset = "0xCADFDC", VA = "0xCADFDC")]
	private static void InitializeRange(List<IInitializable> objs, int startIndex, int num)
	{
	}

	[Token(Token = "0x60004B9")]
	[Address(RVA = "0xCAC730", Offset = "0xCAC730", VA = "0xCAC730")]
	private void FinishUpLoading()
	{
	}

	[Token(Token = "0x60004BA")]
	[Address(RVA = "0xCAD0A0", Offset = "0xCAD0A0", VA = "0xCAD0A0")]
	private bool ShouldLoadBundleFromSaveFile(SaveID bundleId)
	{
		return default(bool);
	}

	[Token(Token = "0x60004BB")]
	[Address(RVA = "0xCAE404", Offset = "0xCAE404", VA = "0xCAE404")]
	public void OnQuit(bool shouldSave)
	{
	}

	[Token(Token = "0x60004BC")]
	[Address(RVA = "0xCAE744", Offset = "0xCAE744", VA = "0xCAE744")]
	private void OnApplicationQuit()
	{
	}

	[Token(Token = "0x60004BD")]
	[Address(RVA = "0xCAE820", Offset = "0xCAE820", VA = "0xCAE820")]
	private void OnClearSlot(SaveSlot slot)
	{
	}

	[Token(Token = "0x60004BE")]
	[Address(RVA = "0xCAE8E0", Offset = "0xCAE8E0", VA = "0xCAE8E0")]
	private void StartSession(SaveSlot slot)
	{
	}

	[Token(Token = "0x60004BF")]
	[Address(RVA = "0xCAEA94", Offset = "0xCAEA94", VA = "0xCAEA94")]
	public void SetGameLoadingState()
	{
	}

	[Token(Token = "0x60004C0")]
	[Address(RVA = "0xCAE418", Offset = "0xCAE418", VA = "0xCAE418")]
	private void CloseSession(bool shouldSave)
	{
	}

	[Token(Token = "0x60004C1")]
	[Address(RVA = "0xCAEAD0", Offset = "0xCAEAD0", VA = "0xCAEAD0")]
	private void DropItemsHeld()
	{
	}

	[Token(Token = "0x60004C2")]
	[Address(RVA = "0xCAEE7C", Offset = "0xCAEE7C", VA = "0xCAEE7C")]
	public void SaveGameIfNeeded()
	{
	}

	[Token(Token = "0x60004C3")]
	[Address(RVA = "0xCAEBD4", Offset = "0xCAEBD4", VA = "0xCAEBD4")]
	public bool SaveCurrentSessionToFile()
	{
		return default(bool);
	}

	[Token(Token = "0x60004C4")]
	[Address(RVA = "0xCACABC", Offset = "0xCACABC", VA = "0xCACABC")]
	private bool AutoSaveCurrentSession()
	{
		return default(bool);
	}

	[Token(Token = "0x60004C5")]
	[Address(RVA = "0xCAF0E0", Offset = "0xCAF0E0", VA = "0xCAF0E0")]
	public bool SaveGameToSlot(int slot)
	{
		return default(bool);
	}

	[Token(Token = "0x60004C6")]
	[Address(RVA = "0xCAF2A8", Offset = "0xCAF2A8", VA = "0xCAF2A8")]
	public void LoadGame(SaveSlot slot)
	{
	}

	[Token(Token = "0x60004C7")]
	[Address(RVA = "0xCAF32C", Offset = "0xCAF32C", VA = "0xCAF32C")]
	public void ReturnToHouse()
	{
	}

	[Token(Token = "0x60004C8")]
	[Address(RVA = "0xCABE94", Offset = "0xCABE94", VA = "0xCABE94")]
	private void StartLoadingGame()
	{
	}

	[Token(Token = "0x60004C9")]
	[Address(RVA = "0xCAF470", Offset = "0xCAF470", VA = "0xCAF470")]
	private void UnloadMenuScene()
	{
	}

	[Token(Token = "0x60004CA")]
	[Address(RVA = "0xCAF59C", Offset = "0xCAF59C", VA = "0xCAF59C")]
	public bool WorldZoneIsLoaded(SceneBundle bundle)
	{
		return default(bool);
	}

	[Token(Token = "0x60004CB")]
	[Address(RVA = "0xCAF6C4", Offset = "0xCAF6C4", VA = "0xCAF6C4")]
	public void OnPlayerEnteredGameArea(WorldZone zone, SceneBundle bundle)
	{
	}

	[Token(Token = "0x60004CC")]
	[Address(RVA = "0xCABD74", Offset = "0xCABD74", VA = "0xCABD74")]
	private void CancelLoadOfGameArea(SceneBundle bundle)
	{
	}

	[Token(Token = "0x60004CD")]
	[Address(RVA = "0xCAF870", Offset = "0xCAF870", VA = "0xCAF870")]
	public void SetCurrentWorldZone(WorldZone zone)
	{
	}

	[Token(Token = "0x60004CE")]
	[Address(RVA = "0xCAF8B8", Offset = "0xCAF8B8", VA = "0xCAF8B8")]
	public bool UnloadAreaThatShouldntHaveBeenLoaded(WorldZone zone, SceneBundle bundle)
	{
		return default(bool);
	}

	[Token(Token = "0x60004CF")]
	[Address(RVA = "0xCAFBF4", Offset = "0xCAFBF4", VA = "0xCAFBF4")]
	public bool OnPlayerLeftGameArea(WorldZone zone, SceneBundle bundle)
	{
		return default(bool);
	}

	[Token(Token = "0x60004D0")]
	[Address(RVA = "0xCAFAB0", Offset = "0xCAFAB0", VA = "0xCAFAB0")]
	private void HandlePersistentObjects()
	{
	}

	[Token(Token = "0x60004D1")]
	[Address(RVA = "0xCAFEA4", Offset = "0xCAFEA4", VA = "0xCAFEA4")]
	private void MoveItemToPersistentSceneIfNeeded(SaveObjectBase saveObj, LoadedSceneBundle persistentBundle)
	{
	}

	[Token(Token = "0x60004D2")]
	[Address(RVA = "0xCB0154", Offset = "0xCB0154", VA = "0xCB0154")]
	private bool MoveSaveObject(SaveObjectBase obj, LoadedSceneBundle fromBundle, LoadedSceneBundle toBundle, Scene toScene)
	{
		return default(bool);
	}

	[Token(Token = "0x60004D3")]
	[Address(RVA = "0xCB0618", Offset = "0xCB0618", VA = "0xCB0618")]
	public void MoveItemToCurrentZone(SaveObjectBase obj)
	{
	}

	[Token(Token = "0x60004D4")]
	[Address(RVA = "0xCB0038", Offset = "0xCB0038", VA = "0xCB0038")]
	public void MoveItemToPersistentZone(SaveObjectBase obj)
	{
	}

	[Token(Token = "0x60004D5")]
	[Address(RVA = "0xCB07A0", Offset = "0xCB07A0", VA = "0xCB07A0")]
	public void RemovePersistentItem(SaveObjectBase obj)
	{
	}

	[Token(Token = "0x60004D6")]
	[Address(RVA = "0xCB0824", Offset = "0xCB0824", VA = "0xCB0824")]
	public void MoveItemToSameZoneAs(SaveObjectBase obj, GameObject go)
	{
	}

	[Token(Token = "0x60004D7")]
	[Address(RVA = "0xCB0968", Offset = "0xCB0968", VA = "0xCB0968")]
	public bool RemoveDynamicObjFromUnloadedBundle(ref SaveID id)
	{
		return default(bool);
	}

	[Token(Token = "0x60004D8")]
	[Address(RVA = "0xCABC44", Offset = "0xCABC44", VA = "0xCABC44")]
	public static void SetPaused(bool shouldPause)
	{
	}

	[Token(Token = "0x60004D9")]
	[Address(RVA = "0xCB0B90", Offset = "0xCB0B90", VA = "0xCB0B90")]
	public static void ResolvePausedState()
	{
	}

	[Token(Token = "0x60004DA")]
	[Address(RVA = "0xCAB5F0", Offset = "0xCAB5F0", VA = "0xCAB5F0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x988968", Offset = "0x988968")]
	private IEnumerator CheckIfAllSystemsGo()
	{
		return null;
	}

	[Token(Token = "0x60004DB")]
	[Address(RVA = "0xCB0C98", Offset = "0xCB0C98", VA = "0xCB0C98")]
	public GameManager()
	{
	}

	[Token(Token = "0x60004DD")]
	[Address(RVA = "0xCB1458", Offset = "0xCB1458", VA = "0xCB1458")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9889CC", Offset = "0x9889CC")]
	private void <ReturnToHouse>b__115_0()
	{
	}
}
[Token(Token = "0x20000F4")]
public class GameProgressTracker : MonoBehaviour
{
	[Token(Token = "0x4000484")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static GameProgressTracker Instance;

	[Token(Token = "0x4000485")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9767DC", Offset = "0x9767DC")]
	private bool <Initialized>k__BackingField;

	[Token(Token = "0x4000486")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Milestone[] milestones;

	[Token(Token = "0x4000487")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Dictionary<string, object> analyticsParams;

	[Token(Token = "0x4000488")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9767EC", Offset = "0x9767EC")]
	private GameStats <SessionStats>k__BackingField;

	[Token(Token = "0x17000095")]
	public bool Initialized
	{
		[Token(Token = "0x60004EC")]
		[Address(RVA = "0xE73248", Offset = "0xE73248", VA = "0xE73248")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x988A2C", Offset = "0x988A2C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60004ED")]
		[Address(RVA = "0xE73250", Offset = "0xE73250", VA = "0xE73250")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x988A3C", Offset = "0x988A3C")]
		private set
		{
		}
	}

	[Token(Token = "0x17000096")]
	public GameStats SessionStats
	{
		[Token(Token = "0x60004F0")]
		[Address(RVA = "0xE733D0", Offset = "0xE733D0", VA = "0xE733D0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x988A4C", Offset = "0x988A4C")]
		get
		{
			return null;
		}
		[Token(Token = "0x60004F1")]
		[Address(RVA = "0xE733D8", Offset = "0xE733D8", VA = "0xE733D8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x988A5C", Offset = "0x988A5C")]
		private set
		{
		}
	}

	[Token(Token = "0x60004EE")]
	[Address(RVA = "0xE7325C", Offset = "0xE7325C", VA = "0xE7325C")]
	private void Awake()
	{
	}

	[Token(Token = "0x60004EF")]
	[Address(RVA = "0xE732B4", Offset = "0xE732B4", VA = "0xE732B4")]
	public static bool MilestoneHasBeenCompleted(Milestone.MilestoneType milestone)
	{
		return default(bool);
	}

	[Token(Token = "0x60004F2")]
	[Address(RVA = "0xE733E0", Offset = "0xE733E0", VA = "0xE733E0")]
	public MilestoneState[] GetMilestoneStates()
	{
		return null;
	}

	[Token(Token = "0x60004F3")]
	[Address(RVA = "0xE73510", Offset = "0xE73510", VA = "0xE73510")]
	public void Init()
	{
	}

	[Token(Token = "0x60004F4")]
	[Address(RVA = "0xE735AC", Offset = "0xE735AC", VA = "0xE735AC")]
	public void InitSession(GameStats sessionStats, [Optional] MilestoneState[] milestoneStates)
	{
	}

	[Token(Token = "0x60004F5")]
	[Address(RVA = "0xE737D4", Offset = "0xE737D4", VA = "0xE737D4")]
	public void OnSessionClose()
	{
	}

	[Token(Token = "0x60004F6")]
	[Address(RVA = "0xE738A0", Offset = "0xE738A0", VA = "0xE738A0")]
	private void HandleMilestoneEvent(MilestoneEvent e)
	{
	}

	[Token(Token = "0x60004F7")]
	[Address(RVA = "0xE73934", Offset = "0xE73934", VA = "0xE73934")]
	private void DispatchAnalyticsEvent(Milestone milestone)
	{
	}

	[Token(Token = "0x60004F8")]
	[Address(RVA = "0xE73A34", Offset = "0xE73A34", VA = "0xE73A34")]
	public GameProgressTracker()
	{
	}
}
[Token(Token = "0x20000F5")]
public class Milestone
{
	[Serializable]
	[Token(Token = "0x20000F6")]
	public enum MilestoneType
	{
		[Token(Token = "0x400048E")]
		Undefined,
		[Token(Token = "0x400048F")]
		Biome1Completed,
		[Token(Token = "0x4000490")]
		Biome2Completed,
		[Token(Token = "0x4000491")]
		Biome3Completed,
		[Token(Token = "0x4000492")]
		PuffkinBarnUnlocked,
		[Token(Token = "0x4000493")]
		ManateecowBarnUnlocked,
		[Token(Token = "0x4000494")]
		MolesealBarnUnlocked,
		[Token(Token = "0x4000495")]
		BigDoorRevealed,
		[Token(Token = "0x4000496")]
		BraceletEquipped,
		[Token(Token = "0x4000497")]
		CompletedGame,
		[Token(Token = "0x4000498")]
		TutorialCompleted,
		[Token(Token = "0x4000499")]
		NumTypes
	}

	[Token(Token = "0x4000489")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private MilestoneType milestoneType;

	[Token(Token = "0x400048A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private bool completed;

	[Token(Token = "0x400048B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private DateTime completedDate;

	[Token(Token = "0x400048C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int counter;

	[Token(Token = "0x60004F9")]
	[Address(RVA = "0xC20F74", Offset = "0xC20F74", VA = "0xC20F74")]
	public MilestoneType GetMilestoneType()
	{
		return default(MilestoneType);
	}

	[Token(Token = "0x60004FA")]
	[Address(RVA = "0xC20F7C", Offset = "0xC20F7C", VA = "0xC20F7C")]
	public Milestone(MilestoneState s)
	{
	}

	[Token(Token = "0x60004FB")]
	[Address(RVA = "0xC2104C", Offset = "0xC2104C", VA = "0xC2104C")]
	public bool IsValid()
	{
		return default(bool);
	}

	[Token(Token = "0x60004FC")]
	[Address(RVA = "0xC21060", Offset = "0xC21060", VA = "0xC21060")]
	public bool IsCompleted()
	{
		return default(bool);
	}

	[Token(Token = "0x60004FD")]
	[Address(RVA = "0xC21068", Offset = "0xC21068", VA = "0xC21068")]
	public void SetCompleted()
	{
	}

	[Token(Token = "0x60004FE")]
	[Address(RVA = "0xC210DC", Offset = "0xC210DC", VA = "0xC210DC")]
	public MilestoneState GetState()
	{
		return null;
	}
}
[Serializable]
[Token(Token = "0x20000F7")]
public class MilestoneState
{
	[Token(Token = "0x400049A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Milestone.MilestoneType milestoneType;

	[Token(Token = "0x400049B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public long timeStampBinary;

	[Token(Token = "0x400049C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool completed;

	[Token(Token = "0x400049D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int counter;

	[Token(Token = "0x60004FF")]
	[Address(RVA = "0xC2120C", Offset = "0xC2120C", VA = "0xC2120C")]
	public MilestoneState(Milestone.MilestoneType t)
	{
	}

	[Token(Token = "0x6000500")]
	[Address(RVA = "0xC2117C", Offset = "0xC2117C", VA = "0xC2117C")]
	public MilestoneState(Milestone.MilestoneType t, bool comp, DateTime time, int count)
	{
	}
}
[Token(Token = "0x20000F8")]
public class MilestoneEvent : GameEvent
{
	[Token(Token = "0x400049E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Milestone.MilestoneType milestone;

	[Token(Token = "0x6000501")]
	[Address(RVA = "0xC211E0", Offset = "0xC211E0", VA = "0xC211E0")]
	public MilestoneEvent(Milestone.MilestoneType milestone)
	{
	}
}
[Token(Token = "0x20000F9")]
public class QuestEventListener : MonoBehaviour, IInitializable
{
	[Token(Token = "0x400049F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string eventToListenFor;

	[Token(Token = "0x40004A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool listenWhileInactive;

	[Token(Token = "0x40004A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public UnityEvent OnEventRecieved;

	[Token(Token = "0x40004A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool didSubscribeToEvent;

	[Token(Token = "0x6000502")]
	[Address(RVA = "0xD1702C", Offset = "0xD1702C", VA = "0xD1702C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000503")]
	[Address(RVA = "0xD170F0", Offset = "0xD170F0", VA = "0xD170F0")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000504")]
	[Address(RVA = "0xD171B0", Offset = "0xD171B0", VA = "0xD171B0")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000505")]
	[Address(RVA = "0xD17268", Offset = "0xD17268", VA = "0xD17268")]
	private void OnQuestEvent(QuestEvent e)
	{
	}

	[Token(Token = "0x6000506")]
	[Address(RVA = "0xD172E8", Offset = "0xD172E8", VA = "0xD172E8", Slot = "4")]
	public void Initialize()
	{
	}

	[Token(Token = "0x6000507")]
	[Address(RVA = "0xD173C8", Offset = "0xD173C8", VA = "0xD173C8")]
	public QuestEventListener()
	{
	}
}
[Token(Token = "0x20000FA")]
public class QuestEvent : GameEvent
{
	[Token(Token = "0x40004A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string eventName;

	[Token(Token = "0x6000508")]
	[Address(RVA = "0xD16FF8", Offset = "0xD16FF8", VA = "0xD16FF8")]
	public QuestEvent(string name)
	{
	}
}
[Token(Token = "0x20000FB")]
public class SendQuestEvent : MonoBehaviour
{
	[Token(Token = "0x40004A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string eventName;

	[Token(Token = "0x40004A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool onlySendOnce;

	[Token(Token = "0x40004A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	private bool didSend;

	[Token(Token = "0x6000509")]
	[Address(RVA = "0xCC4F14", Offset = "0xCC4F14", VA = "0xCC4F14")]
	public void SendEvent()
	{
	}

	[Token(Token = "0x600050A")]
	[Address(RVA = "0xCC4FC8", Offset = "0xCC4FC8", VA = "0xCC4FC8")]
	public SendQuestEvent()
	{
	}
}
[Token(Token = "0x20000FC")]
public class GameSession
{
	[Token(Token = "0x40004A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private SaveGame game;

	[Token(Token = "0x40004A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private GameStats sessionStats;

	[Token(Token = "0x40004A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private GameProgressTracker progressTracker;

	[Token(Token = "0x600050B")]
	[Address(RVA = "0xE73A3C", Offset = "0xE73A3C", VA = "0xE73A3C")]
	public GameSession(SaveGame s, GameProgressTracker gpt)
	{
	}

	[Token(Token = "0x600050C")]
	[Address(RVA = "0xE73AE8", Offset = "0xE73AE8", VA = "0xE73AE8")]
	public bool HasSaveData()
	{
		return default(bool);
	}

	[Token(Token = "0x600050D")]
	[Address(RVA = "0xE73B18", Offset = "0xE73B18", VA = "0xE73B18")]
	public SaveGame GetSaveGame()
	{
		return null;
	}

	[Token(Token = "0x600050E")]
	[Address(RVA = "0xE73B20", Offset = "0xE73B20", VA = "0xE73B20")]
	public SaveID[] GetActiveSceneBundlesFromSaveGame()
	{
		return null;
	}

	[Token(Token = "0x600050F")]
	[Address(RVA = "0xE73B48", Offset = "0xE73B48", VA = "0xE73B48")]
	public void StartSession()
	{
	}

	[Token(Token = "0x6000510")]
	[Address(RVA = "0xE73B80", Offset = "0xE73B80", VA = "0xE73B80")]
	public bool HasSaveDataForSceneBundle(ref SaveID bundleId)
	{
		return default(bool);
	}

	[Token(Token = "0x6000511")]
	[Address(RVA = "0xE73B9C", Offset = "0xE73B9C", VA = "0xE73B9C")]
	public SaveableState[] GetSaveableStatesForSaveIdsInBundle(LoadedSceneBundle bundle, SaveID[] ids)
	{
		return null;
	}

	[Token(Token = "0x6000512")]
	[Address(RVA = "0xE73BFC", Offset = "0xE73BFC", VA = "0xE73BFC")]
	public SaveableBinaryDataList GetBinaryDataForBundle(ref SaveID bundleId)
	{
		return null;
	}

	[Token(Token = "0x6000513")]
	[Address(RVA = "0xE73C18", Offset = "0xE73C18", VA = "0xE73C18")]
	public SaveableState[] GetAllSaveableStatesForSceneBundle(LoadedSceneBundle bundle, bool staticStates = false)
	{
		return null;
	}

	[Token(Token = "0x6000514")]
	[Address(RVA = "0xE73CA4", Offset = "0xE73CA4", VA = "0xE73CA4")]
	public OrientedPoint GetTransformForSaveID(SaveID id)
	{
		return default(OrientedPoint);
	}

	[Token(Token = "0x6000515")]
	[Address(RVA = "0xE73CC0", Offset = "0xE73CC0", VA = "0xE73CC0")]
	public void UnloadGameArea(SceneBundle bundle)
	{
	}

	[Token(Token = "0x6000516")]
	[Address(RVA = "0xE73FAC", Offset = "0xE73FAC", VA = "0xE73FAC")]
	public bool UpdateSaveGame(int slotIndex)
	{
		return default(bool);
	}

	[Token(Token = "0x6000517")]
	[Address(RVA = "0xE73E7C", Offset = "0xE73E7C", VA = "0xE73E7C")]
	public void UpdateSceneBundleState(LoadedSceneBundle bundleToUpdate)
	{
	}
}
[Token(Token = "0x20000FD")]
public class HapticsManager : MonoBehaviour
{
	[Token(Token = "0x20000FE")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x97192C", Offset = "0x97192C")]
	private sealed class <HapticCurve>d__50 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40004C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40004C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40004C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AnimationCurve curve;

		[Token(Token = "0x40004C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public HapticsManager <>4__this;

		[Token(Token = "0x40004C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float duration;

		[Token(Token = "0x40004C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float max;

		[Token(Token = "0x40004C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public NeatVR_Controller controller;

		[Token(Token = "0x40004CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public bool loop;

		[Token(Token = "0x40004CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Action callback;

		[Token(Token = "0x40004CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private float <timer>5__2;

		[Token(Token = "0x17000097")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600053A")]
			[Address(RVA = "0xBDD914", Offset = "0xBDD914", VA = "0xBDD914", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000098")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600053C")]
			[Address(RVA = "0xBDD97C", Offset = "0xBDD97C", VA = "0xBDD97C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000537")]
		[Address(RVA = "0xBDD304", Offset = "0xBDD304", VA = "0xBDD304")]
		[DebuggerHidden]
		public <HapticCurve>d__50(int <>1__state)
		{
		}

		[Token(Token = "0x6000538")]
		[Address(RVA = "0xBDD790", Offset = "0xBDD790", VA = "0xBDD790", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000539")]
		[Address(RVA = "0xBDD794", Offset = "0xBDD794", VA = "0xBDD794", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600053B")]
		[Address(RVA = "0xBDD91C", Offset = "0xBDD91C", VA = "0xBDD91C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40004AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static HapticsManager Instance;

	[Token(Token = "0x40004AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9767FC", Offset = "0x9767FC")]
	private AnimationCurve defaultCurve;

	[Token(Token = "0x40004AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x976848", Offset = "0x976848")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x976848", Offset = "0x976848")]
	private float tillFeedbackAmplitude;

	[Token(Token = "0x40004AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	private float tillFeedbackDuration;

	[Token(Token = "0x40004AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9768BC", Offset = "0x9768BC")]
	[SerializeField]
	private float chopFeedbackDuration;

	[Token(Token = "0x40004AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x976908", Offset = "0x976908")]
	[SerializeField]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x976908", Offset = "0x976908")]
	private float pettingFeedbackAmplitude;

	[Token(Token = "0x40004B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x97696C", Offset = "0x97696C")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x97696C", Offset = "0x97696C")]
	private float feedingFeedbackAmplitude;

	[Token(Token = "0x40004B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[SerializeField]
	private float feedingFeedbackDuration;

	[Token(Token = "0x40004B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9769E0", Offset = "0x9769E0")]
	[SerializeField]
	private AnimationCurve boatCollisionFeedbackCurve;

	[Token(Token = "0x40004B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private float boatCollisionDuration;

	[Token(Token = "0x40004B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x976A3C", Offset = "0x976A3C")]
	[SerializeField]
	private float seedbagShakeDur;

	[Token(Token = "0x40004B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x976A88", Offset = "0x976A88")]
	[SerializeField]
	private float seedbagShakeAmp;

	[Token(Token = "0x40004B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[SerializeField]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x976AC8", Offset = "0x976AC8")]
	private float plantPullDur;

	[Token(Token = "0x40004B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x976B14", Offset = "0x976B14")]
	[SerializeField]
	private float plantPullAmp;

	[Token(Token = "0x40004B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	[SerializeField]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x976B54", Offset = "0x976B54")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x976B54", Offset = "0x976B54")]
	private float pushCraftingButtonAmp;

	[Token(Token = "0x40004B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private float pushCraftingButtonDur;

	[Token(Token = "0x40004BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x976BC8", Offset = "0x976BC8")]
	private AnimationCurve fishSpeedingAway;

	[Token(Token = "0x40004BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private AnimationCurve playerHoldingOn;

	[Token(Token = "0x40004BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private AnimationCurve playerReelingIn;

	[Token(Token = "0x40004BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x976C34", Offset = "0x976C34")]
	[SerializeField]
	private AnimationCurve activateInstrument;

	[Token(Token = "0x40004BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private HapticCapabilities capabilities;

	[Token(Token = "0x40004BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private List<NeatVR_Controller> controllers;

	[Token(Token = "0x40004C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private Coroutine[] currentPulses;

	[Token(Token = "0x40004C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static bool hapticsEnabled;

	[Token(Token = "0x40004C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private Text debugText;

	[Token(Token = "0x6000518")]
	[Address(RVA = "0xBDBC80", Offset = "0xBDBC80", VA = "0xBDBC80")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000519")]
	[Address(RVA = "0xBDBD30", Offset = "0xBDBD30", VA = "0xBDBD30")]
	public void RegisterController(NeatVR_Controller controller, bool rightDevice)
	{
	}

	[Token(Token = "0x600051A")]
	[Address(RVA = "0xBDC2F8", Offset = "0xBDC2F8", VA = "0xBDC2F8")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600051B")]
	[Address(RVA = "0xBDBDF4", Offset = "0xBDBDF4", VA = "0xBDBDF4")]
	public bool AddController(NeatVR_Controller controller)
	{
		return default(bool);
	}

	[Token(Token = "0x600051C")]
	[Address(RVA = "0xBDBEF0", Offset = "0xBDBEF0", VA = "0xBDBEF0")]
	public void AddEventListeners()
	{
	}

	[Token(Token = "0x600051D")]
	[Address(RVA = "0xBDC360", Offset = "0xBDC360", VA = "0xBDC360")]
	public void RemoveEventListeners()
	{
	}

	[Token(Token = "0x600051E")]
	[Address(RVA = "0xBDC648", Offset = "0xBDC648", VA = "0xBDC648")]
	public void OnLeverPulled(PlayerHand hand)
	{
	}

	[Token(Token = "0x600051F")]
	[Address(RVA = "0xBDC820", Offset = "0xBDC820", VA = "0xBDC820")]
	private void OnPlantUprooted(PlantUprootedEvent e)
	{
	}

	[Token(Token = "0x6000520")]
	[Address(RVA = "0xBDC8DC", Offset = "0xBDC8DC", VA = "0xBDC8DC")]
	private void OnSeedBagShake(SeedbagShakeEvent e)
	{
	}

	[Token(Token = "0x6000521")]
	[Address(RVA = "0xBDC9C4", Offset = "0xBDC9C4", VA = "0xBDC9C4")]
	private void OnCreaturePetting(CreaturePettingEvent e)
	{
	}

	[Token(Token = "0x6000522")]
	[Address(RVA = "0xBDCA88", Offset = "0xBDCA88", VA = "0xBDCA88")]
	private void OnChop(ChopEvent e)
	{
	}

	[Token(Token = "0x6000523")]
	[Address(RVA = "0xBDCBB0", Offset = "0xBDCBB0", VA = "0xBDCBB0")]
	private void OnCreatureFed(CreatureFedEvent e)
	{
	}

	[Token(Token = "0x6000524")]
	[Address(RVA = "0xBDCC6C", Offset = "0xBDCC6C", VA = "0xBDCC6C")]
	private void OnTill(TillEvent e)
	{
	}

	[Token(Token = "0x6000525")]
	[Address(RVA = "0xBDCD28", Offset = "0xBDCD28", VA = "0xBDCD28")]
	private void OnBoatCollision(BoatCollisionEvent e)
	{
	}

	[Token(Token = "0x6000526")]
	[Address(RVA = "0xBDCE4C", Offset = "0xBDCE4C", VA = "0xBDCE4C")]
	public void StopAllHaptics()
	{
	}

	[Token(Token = "0x6000527")]
	[Address(RVA = "0xBDCF44", Offset = "0xBDCF44", VA = "0xBDCF44")]
	public void OnFishSpeedingAway(PlayerHand hand, float duration)
	{
	}

	[Token(Token = "0x6000528")]
	[Address(RVA = "0xBDCF94", Offset = "0xBDCF94", VA = "0xBDCF94")]
	public void OnFishBeingReeledIn(PlayerHand hand, float duration)
	{
	}

	[Token(Token = "0x6000529")]
	[Address(RVA = "0xBDCFE4", Offset = "0xBDCFE4", VA = "0xBDCFE4")]
	public void OnPlayerHoldingBackFish(PlayerHand hand, float duration)
	{
	}

	[Token(Token = "0x600052A")]
	[Address(RVA = "0xBDD034", Offset = "0xBDD034", VA = "0xBDD034")]
	public void OnLineAboutToSnap(PlayerHand hand, float amplitude)
	{
	}

	[Token(Token = "0x600052B")]
	[Address(RVA = "0xBDD05C", Offset = "0xBDD05C", VA = "0xBDD05C")]
	public void OnStartGemPlacementFeedback(StartGemPlacementFeedback e)
	{
	}

	[Token(Token = "0x600052C")]
	[Address(RVA = "0xBDD1BC", Offset = "0xBDD1BC", VA = "0xBDD1BC")]
	public void OnLoopGemPlacementFeedback(LoopGemPlacementFeedback e)
	{
	}

	[Token(Token = "0x600052D")]
	[Address(RVA = "0xBDD1F0", Offset = "0xBDD1F0", VA = "0xBDD1F0")]
	public void OnStopGemPlacementFeedback(StopGemPlacementFeedback e)
	{
	}

	[Token(Token = "0x600052E")]
	[Address(RVA = "0xBDD1F4", Offset = "0xBDD1F4", VA = "0xBDD1F4")]
	public void OnInstrumentActivated(PlayerHand hand, float duration)
	{
	}

	[Token(Token = "0x600052F")]
	[Address(RVA = "0xBDC6F8", Offset = "0xBDC6F8", VA = "0xBDC6F8")]
	private void StartHapticCurve(NeatVR_Controller controller, float max = 1f, float duration = 1f, [Optional] AnimationCurve curve, bool loop = false)
	{
	}

	[Token(Token = "0x6000530")]
	[Address(RVA = "0xBDD090", Offset = "0xBDD090", VA = "0xBDD090")]
	private void StartHapticCurveWithCallback(NeatVR_Controller controller, float max = 1f, float duration = 1f, [Optional] AnimationCurve curve, bool loop = false, [Optional] Action callback)
	{
	}

	[Token(Token = "0x6000531")]
	[Address(RVA = "0xBDD21C", Offset = "0xBDD21C", VA = "0xBDD21C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x988A6C", Offset = "0x988A6C")]
	private IEnumerator HapticCurve(NeatVR_Controller controller, float max = 1f, float duration = 1f, [Optional] AnimationCurve curve, bool loop = false, [Optional] Action callback)
	{
		return null;
	}

	[Token(Token = "0x6000532")]
	[Address(RVA = "0xBDD330", Offset = "0xBDD330", VA = "0xBDD330")]
	public static void TriggerRumbleForDuration(PlayerHand hand, float amplitude, float duration)
	{
	}

	[Token(Token = "0x6000533")]
	[Address(RVA = "0xBDD3FC", Offset = "0xBDD3FC", VA = "0xBDD3FC")]
	public static void TriggerRumbleWithCurve(PlayerHand hand, AnimationCurve curve, float maxAmplitude, float duration, bool loop = false)
	{
	}

	[Token(Token = "0x6000534")]
	[Address(RVA = "0xBDD4DC", Offset = "0xBDD4DC", VA = "0xBDD4DC")]
	public static void TriggerRumbleWithCurve(AnimationCurve curve, float maxAmplitude, float duration, bool loop = false)
	{
	}

	[Token(Token = "0x6000535")]
	[Address(RVA = "0xBDD60C", Offset = "0xBDD60C", VA = "0xBDD60C")]
	public static void TriggerRumble(PlayerHand hand, float amplitude)
	{
	}

	[Token(Token = "0x6000536")]
	[Address(RVA = "0xBDD6D8", Offset = "0xBDD6D8", VA = "0xBDD6D8")]
	public HapticsManager()
	{
	}
}
[Token(Token = "0x20000FF")]
public class LanguageManager : MonoBehaviour
{
	[Token(Token = "0x40004CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static LanguageManager Instance;

	[Token(Token = "0x40004CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private List<string> m_languages;

	[Token(Token = "0x40004CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int m_currentLanguageIndex;

	[Token(Token = "0x17000099")]
	public List<string> Languages
	{
		[Token(Token = "0x600053D")]
		[Address(RVA = "0xBE4608", Offset = "0xBE4608", VA = "0xBE4608")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700009A")]
	public int CurrentLanguageIndex
	{
		[Token(Token = "0x600053E")]
		[Address(RVA = "0xBE4610", Offset = "0xBE4610", VA = "0xBE4610")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x600053F")]
	[Address(RVA = "0xBE4618", Offset = "0xBE4618", VA = "0xBE4618")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000540")]
	[Address(RVA = "0xBE46C4", Offset = "0xBE46C4", VA = "0xBE46C4")]
	public void SetLanguage(int language)
	{
	}

	[Token(Token = "0x6000541")]
	[Address(RVA = "0xBE47D8", Offset = "0xBE47D8", VA = "0xBE47D8")]
	public LanguageManager()
	{
	}
}
[Token(Token = "0x2000100")]
public class PaintingQuest : MonoBehaviour
{
	[Token(Token = "0x40004D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private WaypointNavigationScript potpotNavScript;

	[Token(Token = "0x40004D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject Potpot;

	[Token(Token = "0x40004D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool PaintballCrafted;

	[Token(Token = "0x6000542")]
	[Address(RVA = "0xBB9AE8", Offset = "0xBB9AE8", VA = "0xBB9AE8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000543")]
	[Address(RVA = "0xBB9B50", Offset = "0xBB9B50", VA = "0xBB9B50")]
	private void Update()
	{
	}

	[Token(Token = "0x6000544")]
	[Address(RVA = "0xBB9B7C", Offset = "0xBB9B7C", VA = "0xBB9B7C")]
	public void SetActivation()
	{
	}

	[Token(Token = "0x6000545")]
	[Address(RVA = "0xBB9B9C", Offset = "0xBB9B9C", VA = "0xBB9B9C")]
	public PaintingQuest()
	{
	}
}
[Token(Token = "0x2000101")]
public class Quest : SaveableComponent, IInitializable
{
	[Token(Token = "0x40004D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	public string Identifier;

	[Token(Token = "0x40004D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x976CA0", Offset = "0x976CA0")]
	private QuestObjective[] objectives;

	[Token(Token = "0x40004D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x976CEC", Offset = "0x976CEC")]
	public UnityEvent OnQuestCompleted;

	[Token(Token = "0x40004D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private QuestOutcome[] triggers;

	[Token(Token = "0x40004D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x976D24", Offset = "0x976D24")]
	private bool <QuestComplete>k__BackingField;

	[Token(Token = "0x1700009B")]
	public bool QuestComplete
	{
		[Token(Token = "0x6000546")]
		[Address(RVA = "0xD168BC", Offset = "0xD168BC", VA = "0xD168BC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x988B20", Offset = "0x988B20")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000547")]
		[Address(RVA = "0xD168C4", Offset = "0xD168C4", VA = "0xD168C4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x988B30", Offset = "0x988B30")]
		set
		{
		}
	}

	[Token(Token = "0x6000548")]
	[Address(RVA = "0xD168D0", Offset = "0xD168D0", VA = "0xD168D0", Slot = "5")]
	public void Initialize()
	{
	}

	[Token(Token = "0x6000549")]
	[Address(RVA = "0xD16BFC", Offset = "0xD16BFC", VA = "0xD16BFC")]
	public void OnObjectiveCompleted(QuestObjective objective)
	{
	}

	[Token(Token = "0x600054A")]
	[Address(RVA = "0xD16D88", Offset = "0xD16D88", VA = "0xD16D88")]
	public void TriggerQuestCompletion()
	{
	}

	[Token(Token = "0x600054B")]
	[Address(RVA = "0xD16B7C", Offset = "0xD16B7C", VA = "0xD16B7C")]
	private void CheckIfCompleted()
	{
	}

	[Token(Token = "0x600054C")]
	[Address(RVA = "0xD16F50", Offset = "0xD16F50", VA = "0xD16F50", Slot = "4")]
	public override ComponentState CreateState()
	{
		return null;
	}

	[Token(Token = "0x600054D")]
	[Address(RVA = "0xD16FE8", Offset = "0xD16FE8", VA = "0xD16FE8")]
	public void DebugCompleteNextObjective()
	{
	}

	[Token(Token = "0x600054E")]
	[Address(RVA = "0xD16FEC", Offset = "0xD16FEC", VA = "0xD16FEC")]
	public void DebugCompleteAllObjectives()
	{
	}

	[Token(Token = "0x600054F")]
	[Address(RVA = "0xD16FF0", Offset = "0xD16FF0", VA = "0xD16FF0")]
	public Quest()
	{
	}
}
[Serializable]
[Token(Token = "0x2000102")]
public class QuestState : ComponentState
{
	[Token(Token = "0x40004D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public bool completed;

	[Token(Token = "0x6000550")]
	[Address(RVA = "0xD16FB8", Offset = "0xD16FB8", VA = "0xD16FB8")]
	public QuestState(bool completed)
	{
	}
}
[Token(Token = "0x2000103")]
public class QuestObject : MonoBehaviour, IInitializable
{
	[Token(Token = "0x40004D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private SaveID uniqueId;

	[Token(Token = "0x1700009C")]
	public SaveID UniqueId
	{
		[Token(Token = "0x6000551")]
		[Address(RVA = "0xD173D0", Offset = "0xD173D0", VA = "0xD173D0")]
		get
		{
			return default(SaveID);
		}
	}

	[Token(Token = "0x6000552")]
	[Address(RVA = "0xD173DC", Offset = "0xD173DC", VA = "0xD173DC", Slot = "4")]
	public void Initialize()
	{
	}

	[Token(Token = "0x6000553")]
	[Address(RVA = "0xD17688", Offset = "0xD17688", VA = "0xD17688")]
	public QuestObject()
	{
	}
}
[Token(Token = "0x2000104")]
public class QuestObjectAttribute : PropertyAttribute
{
	[Token(Token = "0x40004DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Type componentType;

	[Token(Token = "0x6000554")]
	[Address(RVA = "0xD17690", Offset = "0xD17690", VA = "0xD17690")]
	public QuestObjectAttribute(Type compType)
	{
	}
}
[Token(Token = "0x2000105")]
public class QuestObjectManager
{
	[Token(Token = "0x40004DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static QuestObjectManager Instance;

	[Token(Token = "0x40004DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private Dictionary<SaveID, QuestObject> persistentQuestObjects;

	[Token(Token = "0x40004DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Dictionary<SaveID, QuestObject> areaSpecificQuestObjects;

	[Token(Token = "0x6000555")]
	[Address(RVA = "0xD176C4", Offset = "0xD176C4", VA = "0xD176C4")]
	public void Init()
	{
	}

	[Token(Token = "0x6000556")]
	[Address(RVA = "0xD1771C", Offset = "0xD1771C", VA = "0xD1771C")]
	public void ClearDynamicQuestObjects()
	{
	}

	[Token(Token = "0x6000557")]
	[Address(RVA = "0xD17774", Offset = "0xD17774", VA = "0xD17774")]
	public void ClearAllQuestObjects()
	{
	}

	[Token(Token = "0x6000558")]
	[Address(RVA = "0xD1743C", Offset = "0xD1743C", VA = "0xD1743C")]
	public void RegisterQuestObject(QuestObject obj)
	{
	}

	[Token(Token = "0x6000559")]
	[Address(RVA = "0xD177DC", Offset = "0xD177DC", VA = "0xD177DC")]
	public Component GetQuestObjectWithId(SaveID id, string componentType)
	{
		return null;
	}

	[Token(Token = "0x600055A")]
	[Address(RVA = "0xD17910", Offset = "0xD17910", VA = "0xD17910")]
	public QuestObjectManager()
	{
	}
}
[Serializable]
[Token(Token = "0x2000106")]
public class QuestObjectRef
{
	[Token(Token = "0x40004DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[SerializeField]
	private SaveID uniqueId;

	[Token(Token = "0x40004DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Component component;

	[Token(Token = "0x40004E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private string componentType;

	[Token(Token = "0x40004E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private string objectName;

	[Token(Token = "0x600055B")]
	[Address(RVA = "0xD179B8", Offset = "0xD179B8", VA = "0xD179B8")]
	public Component GetQuestObject()
	{
		return null;
	}

	[Token(Token = "0x600055C")]
	[Address(RVA = "0xD17A90", Offset = "0xD17A90", VA = "0xD17A90")]
	public QuestObjectRef()
	{
	}
}
[Token(Token = "0x2000107")]
public abstract class QuestObjective : SaveableComponent
{
	[Token(Token = "0x40004E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private bool optionalObjective;

	[Token(Token = "0x40004E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x976D94", Offset = "0x976D94")]
	public UnityEvent OnObjectiveCompleted;

	[Token(Token = "0x40004E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public UnityEvent OnQuestInit;

	[Token(Token = "0x40004E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	protected bool objectiveCompleted;

	[Token(Token = "0x40004E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Quest quest;

	[Token(Token = "0x40004E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private QuestOutcome[] outcomes;

	[Token(Token = "0x1700009D")]
	public bool IsOptional
	{
		[Token(Token = "0x600055D")]
		[Address(RVA = "0xD17A98", Offset = "0xD17A98", VA = "0xD17A98")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700009E")]
	public bool Completed
	{
		[Token(Token = "0x600055E")]
		[Address(RVA = "0xD17AA0", Offset = "0xD17AA0", VA = "0xD17AA0")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x600055F")]
	[Address(RVA = "0xD17AA8", Offset = "0xD17AA8", VA = "0xD17AA8", Slot = "5")]
	public virtual void Init()
	{
	}

	[Token(Token = "0x6000560")]
	[Address(RVA = "0xD17C58", Offset = "0xD17C58", VA = "0xD17C58")]
	public void SetQuest(Quest q)
	{
	}

	[Token(Token = "0x6000561")]
	[Address(RVA = "0xD17C60", Offset = "0xD17C60", VA = "0xD17C60", Slot = "4")]
	public override ComponentState CreateState()
	{
		return null;
	}

	[Token(Token = "0x6000562")]
	[Address(RVA = "0xD17CF8", Offset = "0xD17CF8", VA = "0xD17CF8")]
	protected void CompleteObjective()
	{
	}

	[Token(Token = "0x6000563")]
	[Address(RVA = "0xD17E34", Offset = "0xD17E34", VA = "0xD17E34")]
	protected QuestObjective()
	{
	}
}
[Serializable]
[Token(Token = "0x2000108")]
public class QuestObjectiveState : ComponentState
{
	[Token(Token = "0x40004E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public bool completed;

	[Token(Token = "0x6000564")]
	[Address(RVA = "0xD17CC8", Offset = "0xD17CC8", VA = "0xD17CC8")]
	public QuestObjectiveState(bool completed)
	{
	}
}
[Token(Token = "0x2000109")]
public class ChopTreeObjective : QuestObjective
{
	[Token(Token = "0x40004E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x976DCC", Offset = "0x976DCC")]
	[AttributeAttribute(Name = "QuestObjectAttribute", RVA = "0x976DCC", Offset = "0x976DCC")]
	public QuestObjectRef choppableTreeReference;

	[Token(Token = "0x40004EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Choppable choppable;

	[Token(Token = "0x6000565")]
	[Address(RVA = "0xC455AC", Offset = "0xC455AC", VA = "0xC455AC", Slot = "5")]
	public override void Init()
	{
	}

	[Token(Token = "0x6000566")]
	[Address(RVA = "0xC45718", Offset = "0xC45718", VA = "0xC45718")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000567")]
	[Address(RVA = "0xC457F4", Offset = "0xC457F4", VA = "0xC457F4")]
	public void OnTreeFell()
	{
	}

	[Token(Token = "0x6000568")]
	[Address(RVA = "0xC457FC", Offset = "0xC457FC", VA = "0xC457FC")]
	public ChopTreeObjective()
	{
	}
}
[Token(Token = "0x200010A")]
public class CraftItemObjective : QuestObjective
{
	[Token(Token = "0x40004EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "QuestObjectAttribute", RVA = "0x976E54", Offset = "0x976E54")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x976E54", Offset = "0x976E54")]
	public QuestObjectRef craftingMachineRef;

	[Token(Token = "0x40004EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private CraftingMachine machine;

	[Token(Token = "0x6000569")]
	[Address(RVA = "0xC491C8", Offset = "0xC491C8", VA = "0xC491C8", Slot = "5")]
	public override void Init()
	{
	}

	[Token(Token = "0x600056A")]
	[Address(RVA = "0xC49330", Offset = "0xC49330", VA = "0xC49330")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600056B")]
	[Address(RVA = "0xC49408", Offset = "0xC49408", VA = "0xC49408", Slot = "6")]
	public virtual void OnCraftedItem()
	{
	}

	[Token(Token = "0x600056C")]
	[Address(RVA = "0xC49410", Offset = "0xC49410", VA = "0xC49410")]
	public CraftItemObjective()
	{
	}
}
[Token(Token = "0x200010B")]
public class FeedAnimalObjective : QuestObjective
{
	[Token(Token = "0x40004ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public EatingBehavior animalMouth;

	[Token(Token = "0x40004EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public bool onlyAnimalsFavoriteFoodCounts;

	[Token(Token = "0x40004EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public int numberOfFeedingsRequired;

	[Token(Token = "0x40004F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public UnityEvent OnAnimalFed;

	[Token(Token = "0x40004F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private int numTimesFed;

	[Token(Token = "0x600056D")]
	[Address(RVA = "0xC9B448", Offset = "0xC9B448", VA = "0xC9B448", Slot = "5")]
	public override void Init()
	{
	}

	[Token(Token = "0x600056E")]
	[Address(RVA = "0xC9B63C", Offset = "0xC9B63C", VA = "0xC9B63C", Slot = "4")]
	public override ComponentState CreateState()
	{
		return null;
	}

	[Token(Token = "0x600056F")]
	[Address(RVA = "0xC9B6E4", Offset = "0xC9B6E4", VA = "0xC9B6E4")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000570")]
	[Address(RVA = "0xC9B5E0", Offset = "0xC9B5E0", VA = "0xC9B5E0")]
	public void OnCorrectFoodEaten()
	{
	}

	[Token(Token = "0x6000571")]
	[Address(RVA = "0xC9B7D4", Offset = "0xC9B7D4", VA = "0xC9B7D4")]
	public FeedAnimalObjective()
	{
	}
}
[Token(Token = "0x200010C")]
public class FeedObjectiveState : QuestObjectiveState
{
	[Token(Token = "0x40004F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public int TimesFed;

	[Token(Token = "0x6000572")]
	[Address(RVA = "0xC9B6B4", Offset = "0xC9B6B4", VA = "0xC9B6B4")]
	public FeedObjectiveState(bool completed, int timesFed)
	{
	}
}
[Token(Token = "0x200010D")]
public class PaintItemObjective : QuestObjective
{
	[Token(Token = "0x40004F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Paintable itemToPaint;

	[Token(Token = "0x6000573")]
	[Address(RVA = "0xBB9010", Offset = "0xBB9010", VA = "0xBB9010", Slot = "5")]
	public override void Init()
	{
	}

	[Token(Token = "0x6000574")]
	[Address(RVA = "0xBB911C", Offset = "0xBB911C", VA = "0xBB911C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000575")]
	[Address(RVA = "0xBB91F8", Offset = "0xBB91F8", VA = "0xBB91F8")]
	public void OnPainted()
	{
	}

	[Token(Token = "0x6000576")]
	[Address(RVA = "0xBB9200", Offset = "0xBB9200", VA = "0xBB9200")]
	public PaintItemObjective()
	{
	}
}
[Token(Token = "0x200010E")]
public class PlaceItemObjective : QuestObjective
{
	[Token(Token = "0x40004F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public string itemName;

	[Token(Token = "0x40004F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Collider triggerCollider;

	[Token(Token = "0x40004F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Grabbable currentGrabbable;

	[Token(Token = "0x40004F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Collider currentCollider;

	[Token(Token = "0x40004F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private bool hasInitialized;

	[Token(Token = "0x40004F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static string placedItemName;

	[Token(Token = "0x6000577")]
	[Address(RVA = "0xBBB304", Offset = "0xBBB304", VA = "0xBBB304", Slot = "5")]
	public override void Init()
	{
	}

	[Token(Token = "0x6000578")]
	[Address(RVA = "0xBBB438", Offset = "0xBBB438", VA = "0xBBB438")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000579")]
	[Address(RVA = "0xBBB5D4", Offset = "0xBBB5D4", VA = "0xBBB5D4")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x600057A")]
	[Address(RVA = "0xBBB698", Offset = "0xBBB698", VA = "0xBBB698")]
	private void OnTriggerStay(Collider other)
	{
	}

	[Token(Token = "0x600057B")]
	[Address(RVA = "0xBBB7C0", Offset = "0xBBB7C0", VA = "0xBBB7C0")]
	private void OnCorrectItemPlaced()
	{
	}

	[Token(Token = "0x600057C")]
	[Address(RVA = "0xBBB8A0", Offset = "0xBBB8A0", VA = "0xBBB8A0")]
	public PlaceItemObjective()
	{
	}
}
[Token(Token = "0x200010F")]
public abstract class QuestOutcome : MonoBehaviour
{
	[Token(Token = "0x2000110")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x97193C", Offset = "0x97193C")]
	private sealed class <WaitBeforeTriggering>d__7 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40004FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40004FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40004FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public QuestOutcome <>4__this;

		[Token(Token = "0x1700009F")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000587")]
			[Address(RVA = "0xD17FB4", Offset = "0xD17FB4", VA = "0xD17FB4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000A0")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000589")]
			[Address(RVA = "0xD1801C", Offset = "0xD1801C", VA = "0xD1801C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000584")]
		[Address(RVA = "0xD17EBC", Offset = "0xD17EBC", VA = "0xD17EBC")]
		[DebuggerHidden]
		public <WaitBeforeTriggering>d__7(int <>1__state)
		{
		}

		[Token(Token = "0x6000585")]
		[Address(RVA = "0xD17EE8", Offset = "0xD17EE8", VA = "0xD17EE8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000586")]
		[Address(RVA = "0xD17EEC", Offset = "0xD17EEC", VA = "0xD17EEC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000588")]
		[Address(RVA = "0xD17FBC", Offset = "0xD17FBC", VA = "0xD17FBC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40004FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x976EDC", Offset = "0x976EDC")]
	public bool isEnabled;

	[Token(Token = "0x40004FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float delayBeforeTriggering;

	[Token(Token = "0x40004FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x976F14", Offset = "0x976F14")]
	public QuestOutcome[] triggerWhenDone;

	[Token(Token = "0x600057E")]
	[Address(RVA = "0xD17E3C", Offset = "0xD17E3C", VA = "0xD17E3C", Slot = "4")]
	public virtual void Init()
	{
	}

	[Token(Token = "0x600057F")]
	[Address(RVA = "0xD16E10", Offset = "0xD16E10", VA = "0xD16E10")]
	public void Trigger()
	{
	}

	[Token(Token = "0x6000580")]
	protected abstract void OnTrigger();

	[Token(Token = "0x6000581")]
	[Address(RVA = "0xD12DB4", Offset = "0xD12DB4", VA = "0xD12DB4")]
	protected void Done()
	{
	}

	[Token(Token = "0x6000582")]
	[Address(RVA = "0xD17E40", Offset = "0xD17E40", VA = "0xD17E40")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x988B40", Offset = "0x988B40")]
	private IEnumerator WaitBeforeTriggering()
	{
		return null;
	}

	[Token(Token = "0x6000583")]
	[Address(RVA = "0xD12E60", Offset = "0xD12E60", VA = "0xD12E60")]
	protected QuestOutcome()
	{
	}
}
[Token(Token = "0x2000111")]
public class CowDropsWheel : QuestOutcome
{
	[Token(Token = "0x2000112")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x97194C", Offset = "0x97194C")]
	private sealed class <CowDelay>d__10 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000508")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000509")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400050A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float seconds;

		[Token(Token = "0x400050B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public int eventNumber;

		[Token(Token = "0x400050C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public CowDropsWheel <>4__this;

		[Token(Token = "0x170000A1")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000593")]
			[Address(RVA = "0xC49020", Offset = "0xC49020", VA = "0xC49020", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000A2")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000595")]
			[Address(RVA = "0xC49088", Offset = "0xC49088", VA = "0xC49088", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000590")]
		[Address(RVA = "0xC48D08", Offset = "0xC48D08", VA = "0xC48D08")]
		[DebuggerHidden]
		public <CowDelay>d__10(int <>1__state)
		{
		}

		[Token(Token = "0x6000591")]
		[Address(RVA = "0xC48E48", Offset = "0xC48E48", VA = "0xC48E48", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000592")]
		[Address(RVA = "0xC48E4C", Offset = "0xC48E4C", VA = "0xC48E4C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000594")]
		[Address(RVA = "0xC49028", Offset = "0xC49028", VA = "0xC49028", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000113")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x97195C", Offset = "0x97195C")]
	private sealed class <DisableLayerWeightAfterDuration>d__11 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400050D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400050E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400050F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CowDropsWheel <>4__this;

		[Token(Token = "0x170000A3")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000599")]
			[Address(RVA = "0xC49158", Offset = "0xC49158", VA = "0xC49158", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000A4")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600059B")]
			[Address(RVA = "0xC491C0", Offset = "0xC491C0", VA = "0xC491C0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000596")]
		[Address(RVA = "0xC48DB0", Offset = "0xC48DB0", VA = "0xC48DB0")]
		[DebuggerHidden]
		public <DisableLayerWeightAfterDuration>d__11(int <>1__state)
		{
		}

		[Token(Token = "0x6000597")]
		[Address(RVA = "0xC49090", Offset = "0xC49090", VA = "0xC49090", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000598")]
		[Address(RVA = "0xC49094", Offset = "0xC49094", VA = "0xC49094", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600059A")]
		[Address(RVA = "0xC49160", Offset = "0xC49160", VA = "0xC49160", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000500")]
	private const string HoldingObjectLayerName = "Holding Object";

	[Token(Token = "0x4000501")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly int HoldingObjectParamId;

	[Token(Token = "0x4000502")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x976F4C", Offset = "0x976F4C")]
	public GameObject WheelObject;

	[Token(Token = "0x4000503")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private CreatureBehaviour m_creatureBehavior;

	[Token(Token = "0x4000504")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x976F94", Offset = "0x976F94")]
	public GameObject daCow;

	[Token(Token = "0x4000505")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Animator cowAnimator;

	[Token(Token = "0x4000506")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private CreatureMovement cowMovement;

	[Token(Token = "0x4000507")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private int m_holdingObjectLayerIndex;

	[Token(Token = "0x600058A")]
	[Address(RVA = "0xC489BC", Offset = "0xC489BC", VA = "0xC489BC", Slot = "4")]
	public override void Init()
	{
	}

	[Token(Token = "0x600058B")]
	[Address(RVA = "0xC48AF8", Offset = "0xC48AF8", VA = "0xC48AF8", Slot = "5")]
	protected override void OnTrigger()
	{
	}

	[Token(Token = "0x600058C")]
	[Address(RVA = "0xC48C6C", Offset = "0xC48C6C", VA = "0xC48C6C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x988BF4", Offset = "0x988BF4")]
	private IEnumerator CowDelay(float seconds, int eventNumber)
	{
		return null;
	}

	[Token(Token = "0x600058D")]
	[Address(RVA = "0xC48D34", Offset = "0xC48D34", VA = "0xC48D34")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x988C58", Offset = "0x988C58")]
	private IEnumerator DisableLayerWeightAfterDuration()
	{
		return null;
	}

	[Token(Token = "0x600058E")]
	[Address(RVA = "0xC48DDC", Offset = "0xC48DDC", VA = "0xC48DDC")]
	public CowDropsWheel()
	{
	}
}
[Token(Token = "0x2000114")]
public class PotPotCarriesBoatHullAway : QuestOutcome
{
	[Token(Token = "0x2000115")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x97196C", Offset = "0x97196C")]
	private sealed class <ActivationDelay>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000514")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000515")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000516")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float seconds;

		[Token(Token = "0x4000517")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public PotPotCarriesBoatHullAway <>4__this;

		[Token(Token = "0x170000A5")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60005A4")]
			[Address(RVA = "0xD12F80", Offset = "0xD12F80", VA = "0xD12F80", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000A6")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60005A6")]
			[Address(RVA = "0xD12FE8", Offset = "0xD12FE8", VA = "0xD12FE8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60005A1")]
		[Address(RVA = "0xD12D18", Offset = "0xD12D18", VA = "0xD12D18")]
		[DebuggerHidden]
		public <ActivationDelay>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x60005A2")]
		[Address(RVA = "0xD12E70", Offset = "0xD12E70", VA = "0xD12E70", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60005A3")]
		[Address(RVA = "0xD12E74", Offset = "0xD12E74", VA = "0xD12E74", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60005A5")]
		[Address(RVA = "0xD12F88", Offset = "0xD12F88", VA = "0xD12F88", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000510")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x976FCC", Offset = "0x976FCC")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x976FCC", Offset = "0x976FCC")]
	public GameObject Potpot;

	[Token(Token = "0x4000511")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject hullObject;

	[Token(Token = "0x4000512")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private float delayBeforePickingUpObject;

	[Token(Token = "0x4000513")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private WaypointNavigationScript potpotNavScript;

	[Token(Token = "0x600059C")]
	[Address(RVA = "0xD12B70", Offset = "0xD12B70", VA = "0xD12B70", Slot = "4")]
	public override void Init()
	{
	}

	[Token(Token = "0x600059D")]
	[Address(RVA = "0xD12BD8", Offset = "0xD12BD8", VA = "0xD12BD8", Slot = "5")]
	protected override void OnTrigger()
	{
	}

	[Token(Token = "0x600059E")]
	[Address(RVA = "0xD12C8C", Offset = "0xD12C8C", VA = "0xD12C8C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x988D5C", Offset = "0x988D5C")]
	private IEnumerator ActivationDelay(float seconds)
	{
		return null;
	}

	[Token(Token = "0x600059F")]
	[Address(RVA = "0xD12D44", Offset = "0xD12D44", VA = "0xD12D44")]
	private void PickUpHull()
	{
	}

	[Token(Token = "0x60005A0")]
	[Address(RVA = "0xD12E48", Offset = "0xD12E48", VA = "0xD12E48")]
	public PotPotCarriesBoatHullAway()
	{
	}
}
[Token(Token = "0x2000116")]
public class PotPotPicksUpBoatTop : QuestOutcome
{
	[Token(Token = "0x2000117")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x97197C", Offset = "0x97197C")]
	private sealed class <WaitUntilDone>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400051C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400051D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400051E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float seconds;

		[Token(Token = "0x400051F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public PotPotPicksUpBoatTop <>4__this;

		[Token(Token = "0x170000A7")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60005B0")]
			[Address(RVA = "0xD13360", Offset = "0xD13360", VA = "0xD13360", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000A8")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60005B2")]
			[Address(RVA = "0xD133C8", Offset = "0xD133C8", VA = "0xD133C8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60005AD")]
		[Address(RVA = "0xD131A8", Offset = "0xD131A8", VA = "0xD131A8")]
		[DebuggerHidden]
		public <WaitUntilDone>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x60005AE")]
		[Address(RVA = "0xD13248", Offset = "0xD13248", VA = "0xD13248", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60005AF")]
		[Address(RVA = "0xD1324C", Offset = "0xD1324C", VA = "0xD1324C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60005B1")]
		[Address(RVA = "0xD13368", Offset = "0xD13368", VA = "0xD13368", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000518")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x97703C", Offset = "0x97703C")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x97703C", Offset = "0x97703C")]
	public GameObject potpot;

	[Token(Token = "0x4000519")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject boatTopObject;

	[Token(Token = "0x400051A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private WaypointNavigationScript potpotNavScript;

	[Token(Token = "0x400051B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static int BubbleThingsId;

	[Token(Token = "0x60005A7")]
	[Address(RVA = "0xD12FF0", Offset = "0xD12FF0", VA = "0xD12FF0", Slot = "4")]
	public override void Init()
	{
	}

	[Token(Token = "0x60005A8")]
	[Address(RVA = "0xD13058", Offset = "0xD13058", VA = "0xD13058", Slot = "5")]
	protected override void OnTrigger()
	{
	}

	[Token(Token = "0x60005A9")]
	[Address(RVA = "0xD1311C", Offset = "0xD1311C", VA = "0xD1311C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x988E10", Offset = "0x988E10")]
	private IEnumerator WaitUntilDone(float seconds)
	{
		return null;
	}

	[Token(Token = "0x60005AA")]
	[Address(RVA = "0xD13090", Offset = "0xD13090", VA = "0xD13090")]
	private void PickUpBoatTop()
	{
	}

	[Token(Token = "0x60005AB")]
	[Address(RVA = "0xD131D4", Offset = "0xD131D4", VA = "0xD131D4")]
	public PotPotPicksUpBoatTop()
	{
	}
}
[Token(Token = "0x2000118")]
public class PotPotPicksUpWheel : QuestOutcome
{
	[Token(Token = "0x2000119")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x97198C", Offset = "0x97198C")]
	private sealed class <PotpotDelay>d__4 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000522")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000523")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000524")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float sec;

		[Token(Token = "0x4000525")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public PotPotPicksUpWheel <>4__this;

		[Token(Token = "0x170000A9")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60005BA")]
			[Address(RVA = "0xD13678", Offset = "0xD13678", VA = "0xD13678", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000AA")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60005BC")]
			[Address(RVA = "0xD136E0", Offset = "0xD136E0", VA = "0xD136E0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60005B7")]
		[Address(RVA = "0xD134F4", Offset = "0xD134F4", VA = "0xD134F4")]
		[DebuggerHidden]
		public <PotpotDelay>d__4(int <>1__state)
		{
		}

		[Token(Token = "0x60005B8")]
		[Address(RVA = "0xD13530", Offset = "0xD13530", VA = "0xD13530", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60005B9")]
		[Address(RVA = "0xD13534", Offset = "0xD13534", VA = "0xD13534", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60005BB")]
		[Address(RVA = "0xD13680", Offset = "0xD13680", VA = "0xD13680", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000520")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x97709C", Offset = "0x97709C")]
	public GameObject daPotpot;

	[Token(Token = "0x4000521")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private WaypointNavigationScript potpotNavScript;

	[Token(Token = "0x60005B3")]
	[Address(RVA = "0xD133D0", Offset = "0xD133D0", VA = "0xD133D0", Slot = "4")]
	public override void Init()
	{
	}

	[Token(Token = "0x60005B4")]
	[Address(RVA = "0xD13438", Offset = "0xD13438", VA = "0xD13438", Slot = "5")]
	protected override void OnTrigger()
	{
	}

	[Token(Token = "0x60005B5")]
	[Address(RVA = "0xD13468", Offset = "0xD13468", VA = "0xD13468")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x988EC4", Offset = "0x988EC4")]
	private IEnumerator PotpotDelay(float sec)
	{
		return null;
	}

	[Token(Token = "0x60005B6")]
	[Address(RVA = "0xD13520", Offset = "0xD13520", VA = "0xD13520")]
	public PotPotPicksUpWheel()
	{
	}
}
[Token(Token = "0x200011A")]
public class PotPotsCarryStatueAndEngine : QuestOutcome
{
	[Token(Token = "0x200011B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x97199C", Offset = "0x97199C")]
	private sealed class <DelayingEvent>d__21 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000534")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000535")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000536")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float seconds;

		[Token(Token = "0x4000537")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public PotPotsCarryStatueAndEngine <>4__this;

		[Token(Token = "0x170000AB")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60005C9")]
			[Address(RVA = "0xD14084", Offset = "0xD14084", VA = "0xD14084", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000AC")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60005CB")]
			[Address(RVA = "0xD140EC", Offset = "0xD140EC", VA = "0xD140EC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60005C6")]
		[Address(RVA = "0xD13F00", Offset = "0xD13F00", VA = "0xD13F00")]
		[DebuggerHidden]
		public <DelayingEvent>d__21(int <>1__state)
		{
		}

		[Token(Token = "0x60005C7")]
		[Address(RVA = "0xD13F3C", Offset = "0xD13F3C", VA = "0xD13F3C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60005C8")]
		[Address(RVA = "0xD13F40", Offset = "0xD13F40", VA = "0xD13F40", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60005CA")]
		[Address(RVA = "0xD1408C", Offset = "0xD1408C", VA = "0xD1408C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000526")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9770D4", Offset = "0x9770D4")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9770D4", Offset = "0x9770D4")]
	public GameObject placedStatue;

	[Token(Token = "0x4000527")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject haxStatue;

	[Token(Token = "0x4000528")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject statueTargetPosition;

	[Token(Token = "0x4000529")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x977134", Offset = "0x977134")]
	public GameObject worshippedEngine;

	[Token(Token = "0x400052A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject worshippedEngineParticles;

	[Token(Token = "0x400052B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x97716C", Offset = "0x97716C")]
	public GameObject Potpot01;

	[Token(Token = "0x400052C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9771A4", Offset = "0x9771A4")]
	public GameObject Potpot02;

	[Token(Token = "0x400052D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public GameObject glitterParticles;

	[Token(Token = "0x400052E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Grabbable statuePlacedByPlayer;

	[Token(Token = "0x400052F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private WaypointNavigationScript potpot1NavScript;

	[Token(Token = "0x4000530")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private WaypointNavigationScript potpot2NavScript;

	[Token(Token = "0x4000531")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9771DC", Offset = "0x9771DC")]
	private NeatAudioPlayer m_carrierAudioPlayer;

	[Token(Token = "0x4000532")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	private NeatAudioCue m_pickupSound;

	[Token(Token = "0x4000533")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[SerializeField]
	private NeatAudioCue m_dropSound;

	[Token(Token = "0x60005BD")]
	[Address(RVA = "0xD136E8", Offset = "0xD136E8", VA = "0xD136E8", Slot = "4")]
	public override void Init()
	{
	}

	[Token(Token = "0x60005BE")]
	[Address(RVA = "0xD1377C", Offset = "0xD1377C", VA = "0xD1377C", Slot = "5")]
	protected override void OnTrigger()
	{
	}

	[Token(Token = "0x60005BF")]
	[Address(RVA = "0xD13C84", Offset = "0xD13C84", VA = "0xD13C84")]
	public void PotPotReachedWaypoint()
	{
	}

	[Token(Token = "0x60005C0")]
	[Address(RVA = "0xD13CE0", Offset = "0xD13CE0", VA = "0xD13CE0")]
	public void PickUpStatue()
	{
	}

	[Token(Token = "0x60005C1")]
	[Address(RVA = "0xD13D88", Offset = "0xD13D88", VA = "0xD13D88")]
	public void DropStatue()
	{
	}

	[Token(Token = "0x60005C2")]
	[Address(RVA = "0xD13B90", Offset = "0xD13B90", VA = "0xD13B90")]
	public void PickUpEngine()
	{
	}

	[Token(Token = "0x60005C3")]
	[Address(RVA = "0xD13E44", Offset = "0xD13E44", VA = "0xD13E44")]
	public void LeavingWithEngine()
	{
	}

	[Token(Token = "0x60005C4")]
	[Address(RVA = "0xD13BF8", Offset = "0xD13BF8", VA = "0xD13BF8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x988F78", Offset = "0x988F78")]
	private IEnumerator DelayingEvent(float seconds)
	{
		return null;
	}

	[Token(Token = "0x60005C5")]
	[Address(RVA = "0xD13F2C", Offset = "0xD13F2C", VA = "0xD13F2C")]
	public PotPotsCarryStatueAndEngine()
	{
	}
}
[Token(Token = "0x200011C")]
public class ToggleMoodBubbleIcons : MonoBehaviour
{
	[Token(Token = "0x4000538")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject[] bubbleIcons;

	[Token(Token = "0x4000539")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int currIcon;

	[Token(Token = "0x60005CC")]
	[Address(RVA = "0xE308D0", Offset = "0xE308D0", VA = "0xE308D0")]
	public void ToggleNext()
	{
	}

	[Token(Token = "0x60005CD")]
	[Address(RVA = "0xE30974", Offset = "0xE30974", VA = "0xE30974")]
	public ToggleMoodBubbleIcons()
	{
	}
}
[Token(Token = "0x200011D")]
public class GenericQuestOutcome : QuestOutcome
{
	[Token(Token = "0x200011E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9719AC", Offset = "0x9719AC")]
	private sealed class <OutcomeDone>d__2 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400053B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400053C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400053D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GenericQuestOutcome <>4__this;

		[Token(Token = "0x170000AD")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60005D4")]
			[Address(RVA = "0xE76A70", Offset = "0xE76A70", VA = "0xE76A70", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000AE")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60005D6")]
			[Address(RVA = "0xE76AD8", Offset = "0xE76AD8", VA = "0xE76AD8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60005D1")]
		[Address(RVA = "0xE769C8", Offset = "0xE769C8", VA = "0xE769C8")]
		[DebuggerHidden]
		public <OutcomeDone>d__2(int <>1__state)
		{
		}

		[Token(Token = "0x60005D2")]
		[Address(RVA = "0xE769FC", Offset = "0xE769FC", VA = "0xE769FC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60005D3")]
		[Address(RVA = "0xE76A00", Offset = "0xE76A00", VA = "0xE76A00", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60005D5")]
		[Address(RVA = "0xE76A78", Offset = "0xE76A78", VA = "0xE76A78", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400053A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public UnityEvent DoStuff;

	[Token(Token = "0x60005CE")]
	[Address(RVA = "0xE768E0", Offset = "0xE768E0", VA = "0xE768E0", Slot = "5")]
	protected override void OnTrigger()
	{
	}

	[Token(Token = "0x60005CF")]
	[Address(RVA = "0xE7694C", Offset = "0xE7694C", VA = "0xE7694C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x98902C", Offset = "0x98902C")]
	private IEnumerator OutcomeDone()
	{
		return null;
	}

	[Token(Token = "0x60005D0")]
	[Address(RVA = "0xE769F4", Offset = "0xE769F4", VA = "0xE769F4")]
	public GenericQuestOutcome()
	{
	}
}
[Token(Token = "0x200011F")]
public class NavmeshAgentWalksToWaypoint : QuestOutcome
{
	[Token(Token = "0x400053E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x977248", Offset = "0x977248")]
	public WaypointNavigationScript navScript;

	[Token(Token = "0x400053F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool didAssignListener;

	[Token(Token = "0x4000540")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	private bool didTrigger;

	[Token(Token = "0x60005D7")]
	[Address(RVA = "0xC24DD0", Offset = "0xC24DD0", VA = "0xC24DD0", Slot = "4")]
	public override void Init()
	{
	}

	[Token(Token = "0x60005D8")]
	[Address(RVA = "0xC24E78", Offset = "0xC24E78", VA = "0xC24E78")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60005D9")]
	[Address(RVA = "0xC24F54", Offset = "0xC24F54", VA = "0xC24F54", Slot = "5")]
	protected override void OnTrigger()
	{
	}

	[Token(Token = "0x60005DA")]
	[Address(RVA = "0xC25080", Offset = "0xC25080", VA = "0xC25080")]
	public NavmeshAgentWalksToWaypoint()
	{
	}
}
[Token(Token = "0x2000120")]
public class ObjectTurnsOnOrOff : QuestOutcome
{
	[Token(Token = "0x2000121")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9719BC", Offset = "0x9719BC")]
	private sealed class <OutcomeDone>d__7 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000547")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000548")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000549")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ObjectTurnsOnOrOff <>4__this;

		[Token(Token = "0x170000AF")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60005E2")]
			[Address(RVA = "0xD72FD4", Offset = "0xD72FD4", VA = "0xD72FD4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000B0")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60005E4")]
			[Address(RVA = "0xD7303C", Offset = "0xD7303C", VA = "0xD7303C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60005DF")]
		[Address(RVA = "0xD72B38", Offset = "0xD72B38", VA = "0xD72B38")]
		[DebuggerHidden]
		public <OutcomeDone>d__7(int <>1__state)
		{
		}

		[Token(Token = "0x60005E0")]
		[Address(RVA = "0xD72F60", Offset = "0xD72F60", VA = "0xD72F60", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60005E1")]
		[Address(RVA = "0xD72F64", Offset = "0xD72F64", VA = "0xD72F64", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60005E3")]
		[Address(RVA = "0xD72FDC", Offset = "0xD72FDC", VA = "0xD72FDC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000122")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9719CC", Offset = "0x9719CC")]
	private sealed class <Animate>d__8 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400054A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400054B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400054C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ObjectTurnsOnOrOff <>4__this;

		[Token(Token = "0x400054D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <timeElapsed>5__2;

		[Token(Token = "0x400054E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <duration>5__3;

		[Token(Token = "0x170000B1")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60005E8")]
			[Address(RVA = "0xD72EF0", Offset = "0xD72EF0", VA = "0xD72EF0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000B2")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60005EA")]
			[Address(RVA = "0xD72F58", Offset = "0xD72F58", VA = "0xD72F58", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60005E5")]
		[Address(RVA = "0xD72B64", Offset = "0xD72B64", VA = "0xD72B64")]
		[DebuggerHidden]
		public <Animate>d__8(int <>1__state)
		{
		}

		[Token(Token = "0x60005E6")]
		[Address(RVA = "0xD72C08", Offset = "0xD72C08", VA = "0xD72C08", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60005E7")]
		[Address(RVA = "0xD72C0C", Offset = "0xD72C0C", VA = "0xD72C0C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60005E9")]
		[Address(RVA = "0xD72EF8", Offset = "0xD72EF8", VA = "0xD72EF8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000541")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x977280", Offset = "0x977280")]
	public bool turnOn;

	[Token(Token = "0x4000542")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	public bool animate;

	[Token(Token = "0x4000543")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "QuestObjectAttribute", RVA = "0x9772B8", Offset = "0x9772B8")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9772B8", Offset = "0x9772B8")]
	public QuestObjectRef goReference;

	[Token(Token = "0x4000544")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Transform go;

	[Token(Token = "0x4000545")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Vector3 originalScale;

	[Token(Token = "0x4000546")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private bool didTrigger;

	[Token(Token = "0x60005DB")]
	[Address(RVA = "0xD72870", Offset = "0xD72870", VA = "0xD72870", Slot = "5")]
	protected override void OnTrigger()
	{
	}

	[Token(Token = "0x60005DC")]
	[Address(RVA = "0xD72A40", Offset = "0xD72A40", VA = "0xD72A40")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9890E0", Offset = "0x9890E0")]
	private IEnumerator OutcomeDone()
	{
		return null;
	}

	[Token(Token = "0x60005DD")]
	[Address(RVA = "0xD72ABC", Offset = "0xD72ABC", VA = "0xD72ABC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x989144", Offset = "0x989144")]
	private IEnumerator Animate()
	{
		return null;
	}

	[Token(Token = "0x60005DE")]
	[Address(RVA = "0xD72B90", Offset = "0xD72B90", VA = "0xD72B90")]
	public ObjectTurnsOnOrOff()
	{
	}
}
[Serializable]
[Token(Token = "0x2000123")]
public class SaveGame
{
	[Token(Token = "0x400054F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public SerializableBuildVersion version;

	[Token(Token = "0x4000550")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int saveSlot;

	[Token(Token = "0x4000551")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private long lastPlayedInBinary;

	[Token(Token = "0x4000552")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string name;

	[Token(Token = "0x4000553")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private GameState gameState;

	[Token(Token = "0x4000554")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private GameStats gameStats;

	[Token(Token = "0x4000555")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Dictionary<SaveID, SaveableState> allSaveableStates;

	[Token(Token = "0x4000556")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Dictionary<SaveID, SceneBundleState> allSceneBundleStates;

	[Token(Token = "0x4000557")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Dictionary<SaveID, OrientedPoint> allObjectTransforms;

	[Token(Token = "0x4000558")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Dictionary<SaveID, SaveableBinaryDataList> allBinaryData;

	[Token(Token = "0x4000559")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private DateTime sessionStartedTimestamp;

	[Token(Token = "0x170000B3")]
	public TimeSpan timePlayed
	{
		[Token(Token = "0x60005EB")]
		[Address(RVA = "0xCB4E74", Offset = "0xCB4E74", VA = "0xCB4E74")]
		get
		{
			return default(TimeSpan);
		}
	}

	[Token(Token = "0x170000B4")]
	public DateTime LastSaved
	{
		[Token(Token = "0x60005EC")]
		[Address(RVA = "0xCB4F18", Offset = "0xCB4F18", VA = "0xCB4F18")]
		get
		{
			return default(DateTime);
		}
	}

	[Token(Token = "0x170000B5")]
	public GameState GameState
	{
		[Token(Token = "0x60005ED")]
		[Address(RVA = "0xCB4F84", Offset = "0xCB4F84", VA = "0xCB4F84")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000B6")]
	public GameStats GameStats
	{
		[Token(Token = "0x60005EE")]
		[Address(RVA = "0xCB4F8C", Offset = "0xCB4F8C", VA = "0xCB4F8C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000B7")]
	public DateTime SessionStartedTimestamp
	{
		[Token(Token = "0x60005EF")]
		[Address(RVA = "0xCB4F94", Offset = "0xCB4F94", VA = "0xCB4F94")]
		get
		{
			return default(DateTime);
		}
	}

	[Token(Token = "0x60005F0")]
	[Address(RVA = "0xCB4F9C", Offset = "0xCB4F9C", VA = "0xCB4F9C")]
	public SaveGame()
	{
	}

	[Token(Token = "0x60005F1")]
	[Address(RVA = "0xCB5170", Offset = "0xCB5170", VA = "0xCB5170")]
	public SaveGame(SerializableBuildVersion version)
	{
	}

	[Token(Token = "0x60005F2")]
	[Address(RVA = "0xCB5358", Offset = "0xCB5358", VA = "0xCB5358")]
	public SaveGame(SaveGame prevGame, SerializableBuildVersion version)
	{
	}

	[Token(Token = "0x60005F3")]
	[Address(RVA = "0xCB5580", Offset = "0xCB5580", VA = "0xCB5580")]
	public bool HasData()
	{
		return default(bool);
	}

	[Token(Token = "0x60005F4")]
	[Address(RVA = "0xCB5604", Offset = "0xCB5604", VA = "0xCB5604")]
	public void UpdatePlaytime()
	{
	}

	[Token(Token = "0x60005F5")]
	[Address(RVA = "0xCB57AC", Offset = "0xCB57AC", VA = "0xCB57AC")]
	private void UpdateLastSavedTimestamp()
	{
	}

	[Token(Token = "0x60005F6")]
	[Address(RVA = "0xCB5834", Offset = "0xCB5834", VA = "0xCB5834")]
	public void SetSaveableStatesFromSaveFile(SaveableState[] saveablesStates)
	{
	}

	[Token(Token = "0x60005F7")]
	[Address(RVA = "0xCB58E4", Offset = "0xCB58E4", VA = "0xCB58E4")]
	public void InitializeSaveGame(int slotIndex)
	{
	}

	[Token(Token = "0x60005F8")]
	[Address(RVA = "0xCB6508", Offset = "0xCB6508", VA = "0xCB6508")]
	public bool GetCurrentSceneBundleState(SaveID id, out SceneBundleState state)
	{
		return default(bool);
	}

	[Token(Token = "0x60005F9")]
	[Address(RVA = "0xCB6588", Offset = "0xCB6588", VA = "0xCB6588")]
	public bool HasSceneBundleState(ref SaveID bundleId)
	{
		return default(bool);
	}

	[Token(Token = "0x60005FA")]
	[Address(RVA = "0xCB65F0", Offset = "0xCB65F0", VA = "0xCB65F0")]
	public void SetCurrentSceneBundleState(SceneBundleState state)
	{
	}

	[Token(Token = "0x60005FB")]
	[Address(RVA = "0xCB66A8", Offset = "0xCB66A8", VA = "0xCB66A8")]
	public SceneBundleState[] GetAllCurrentSceneBundleStates()
	{
		return null;
	}

	[Token(Token = "0x60005FC")]
	[Address(RVA = "0xCB6710", Offset = "0xCB6710", VA = "0xCB6710")]
	public Dictionary<SaveID, SaveableBinaryDataList> GetAllBinaryData()
	{
		return null;
	}

	[Token(Token = "0x60005FD")]
	[Address(RVA = "0xCB6718", Offset = "0xCB6718", VA = "0xCB6718")]
	public SaveableBinaryDataList GetBinaryDataForBundle(ref SaveID bundleId)
	{
		return null;
	}

	[Token(Token = "0x60005FE")]
	[Address(RVA = "0xCB6798", Offset = "0xCB6798", VA = "0xCB6798")]
	public SaveableState[] GetSaveableStates()
	{
		return null;
	}

	[Token(Token = "0x60005FF")]
	[Address(RVA = "0xCB6800", Offset = "0xCB6800", VA = "0xCB6800")]
	public SaveableState[] GetSaveableStates(SaveID[] ids)
	{
		return null;
	}

	[Token(Token = "0x6000600")]
	[Address(RVA = "0xCB69CC", Offset = "0xCB69CC", VA = "0xCB69CC")]
	public OrientedPoint GetObjectTransform(SaveID id)
	{
		return default(OrientedPoint);
	}

	[Token(Token = "0x6000601")]
	[Address(RVA = "0xCB6A78", Offset = "0xCB6A78", VA = "0xCB6A78")]
	private void SetSaveableState(SaveableState state, SaveID sceneBundleId)
	{
	}

	[Token(Token = "0x6000602")]
	[Address(RVA = "0xCB6CD0", Offset = "0xCB6CD0", VA = "0xCB6CD0")]
	public void UpdateSaveableStates(SaveableState[] states, SaveID sceneBundleId)
	{
	}

	[Token(Token = "0x6000603")]
	[Address(RVA = "0xCB5AFC", Offset = "0xCB5AFC", VA = "0xCB5AFC")]
	public void UpdateTransformsForBundle(SceneBundleState bundleState, bool checkForDuplicates = false)
	{
	}

	[Token(Token = "0x6000604")]
	[Address(RVA = "0xCB7110", Offset = "0xCB7110", VA = "0xCB7110")]
	public void ClearStates()
	{
	}

	[Token(Token = "0x6000605")]
	[Address(RVA = "0xCB71B0", Offset = "0xCB71B0", VA = "0xCB71B0")]
	public long GetLastSavedInBinary()
	{
		return default(long);
	}

	[Token(Token = "0x6000606")]
	[Address(RVA = "0xCB71B8", Offset = "0xCB71B8", VA = "0xCB71B8")]
	public void SetLastSavedInBinary(long newValue)
	{
	}
}
[Serializable]
[Token(Token = "0x2000124")]
public struct SaveID
{
	[Token(Token = "0x400055A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[SerializeField]
	private int data0;

	[Token(Token = "0x400055B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	[SerializeField]
	private int data1;

	[Token(Token = "0x400055C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	[SerializeField]
	private int data2;

	[Token(Token = "0x400055D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	[SerializeField]
	private int data3;

	[Token(Token = "0x400055E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static int generateID;

	[Token(Token = "0x6000607")]
	[Address(RVA = "0xA440A8", Offset = "0xA440A8", VA = "0xA440A8")]
	public SaveID(string md5string)
	{
	}

	[Token(Token = "0x6000608")]
	[Address(RVA = "0xA440C4", Offset = "0xA440C4", VA = "0xA440C4")]
	public SaveID(int data0, int data1, int data2, int data3)
	{
	}

	[Token(Token = "0x6000609")]
	[Address(RVA = "0xA440D0", Offset = "0xA440D0", VA = "0xA440D0")]
	public bool IsSet()
	{
		return default(bool);
	}

	[Token(Token = "0x600060A")]
	[Address(RVA = "0xA44100", Offset = "0xA44100", VA = "0xA44100")]
	public void Reset()
	{
	}

	[Token(Token = "0x600060B")]
	[Address(RVA = "0xCB71DC", Offset = "0xCB71DC", VA = "0xCB71DC")]
	private static bool Parse(string md5str, out int data0, out int data1, out int data2, out int data3)
	{
		return default(bool);
	}

	[Token(Token = "0x600060C")]
	[Address(RVA = "0xA44108", Offset = "0xA44108", VA = "0xA44108")]
	public string ToHexString()
	{
		return null;
	}

	[Token(Token = "0x600060D")]
	[Address(RVA = "0xA44110", Offset = "0xA44110", VA = "0xA44110")]
	public string ToRawDataString()
	{
		return null;
	}

	[Token(Token = "0x600060E")]
	[Address(RVA = "0xA44118", Offset = "0xA44118", VA = "0xA44118")]
	public void GetData(out int data0, out int data1, out int data2, out int data3)
	{
	}

	[Token(Token = "0x600060F")]
	[Address(RVA = "0xA4413C", Offset = "0xA4413C", VA = "0xA4413C")]
	public int GetFirstData()
	{
		return default(int);
	}

	[Token(Token = "0x6000610")]
	[Address(RVA = "0xCB739C", Offset = "0xCB739C", VA = "0xCB739C")]
	public static SaveID GenerateIDBasedOnTime()
	{
		return default(SaveID);
	}

	[Token(Token = "0x6000611")]
	[Address(RVA = "0xA44144", Offset = "0xA44144", VA = "0xA44144", Slot = "3")]
	public override string ToString()
	{
		return null;
	}

	[Token(Token = "0x6000612")]
	[Address(RVA = "0xA4414C", Offset = "0xA4414C", VA = "0xA4414C", Slot = "0")]
	public override bool Equals(object obj)
	{
		return default(bool);
	}

	[Token(Token = "0x6000613")]
	[Address(RVA = "0xA44154", Offset = "0xA44154", VA = "0xA44154")]
	public bool ValueEquals(ref SaveID other)
	{
		return default(bool);
	}

	[Token(Token = "0x6000614")]
	[Address(RVA = "0xA441A0", Offset = "0xA441A0", VA = "0xA441A0", Slot = "2")]
	public override int GetHashCode()
	{
		return default(int);
	}

	[Token(Token = "0x6000615")]
	[Address(RVA = "0xCB7700", Offset = "0xCB7700", VA = "0xCB7700")]
	public static bool operator ==(SaveID a, SaveID b)
	{
		return default(bool);
	}
}
[Token(Token = "0x2000125")]
public class SaveManager : MonoBehaviour
{
	[Token(Token = "0x400055F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static SaveManager instance;

	[Token(Token = "0x4000560")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static SaveSlot[] saveSlots;

	[Token(Token = "0x4000561")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static SaveSlot activeSave;

	[Token(Token = "0x4000562")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static int latestSaveSlotUsed;

	[Token(Token = "0x4000563")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public static int NumberOfSaveSlots;

	[Token(Token = "0x4000564")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public static int AutoSaveSlotIndex;

	[Token(Token = "0x170000B8")]
	public static SaveManager Instance
	{
		[Token(Token = "0x6000616")]
		[Address(RVA = "0xCB7810", Offset = "0xCB7810", VA = "0xCB7810")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000B9")]
	public static SaveSlot[] SaveSlots
	{
		[Token(Token = "0x6000617")]
		[Address(RVA = "0xCB7878", Offset = "0xCB7878", VA = "0xCB7878")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000BA")]
	public static SaveSlot ActiveSlot
	{
		[Token(Token = "0x6000618")]
		[Address(RVA = "0xCB78E0", Offset = "0xCB78E0", VA = "0xCB78E0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000BB")]
	public static SaveSlot LatestSaveSlotUsed
	{
		[Token(Token = "0x6000619")]
		[Address(RVA = "0xCB7948", Offset = "0xCB7948", VA = "0xCB7948")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000BC")]
	public static SaveGame CurrentGame
	{
		[Token(Token = "0x600061A")]
		[Address(RVA = "0xCB79DC", Offset = "0xCB79DC", VA = "0xCB79DC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600061B")]
	[Address(RVA = "0xCB7A50", Offset = "0xCB7A50", VA = "0xCB7A50")]
	private void Awake()
	{
	}

	[Token(Token = "0x600061C")]
	[Address(RVA = "0xCB7B34", Offset = "0xCB7B34", VA = "0xCB7B34")]
	public void Init()
	{
	}

	[Token(Token = "0x600061D")]
	[Address(RVA = "0xCB7B38", Offset = "0xCB7B38", VA = "0xCB7B38")]
	private void LoadSaveSlotData()
	{
	}

	[Token(Token = "0x600061E")]
	[Address(RVA = "0xCB7E8C", Offset = "0xCB7E8C", VA = "0xCB7E8C")]
	public void CheckForLatestSave(bool includeAutoSave)
	{
	}

	[Token(Token = "0x600061F")]
	[Address(RVA = "0xCB80F0", Offset = "0xCB80F0", VA = "0xCB80F0")]
	public SaveSlot FindEmptySaveSlot()
	{
		return null;
	}

	[Token(Token = "0x6000620")]
	[Address(RVA = "0xCB8278", Offset = "0xCB8278", VA = "0xCB8278")]
	public bool HasAnySaveData()
	{
		return default(bool);
	}

	[Token(Token = "0x6000621")]
	[Address(RVA = "0xCB839C", Offset = "0xCB839C", VA = "0xCB839C")]
	public void OnLoadGame(SaveSlot slot)
	{
	}

	[Token(Token = "0x6000622")]
	[Address(RVA = "0xCB84BC", Offset = "0xCB84BC", VA = "0xCB84BC")]
	public void OnGameUnloaded()
	{
	}

	[Token(Token = "0x6000623")]
	[Address(RVA = "0xCB7D90", Offset = "0xCB7D90", VA = "0xCB7D90")]
	private void LoadSaveSlotFromDisk(ref SaveSlot slot)
	{
	}

	[Token(Token = "0x6000624")]
	[Address(RVA = "0xCB8834", Offset = "0xCB8834", VA = "0xCB8834")]
	public void SetActiveSlot(GameSession session, int index)
	{
	}

	[Token(Token = "0x6000625")]
	[Address(RVA = "0xCB8C1C", Offset = "0xCB8C1C", VA = "0xCB8C1C")]
	public bool SaveSession(GameSession session, SaveSlot slot)
	{
		return default(bool);
	}

	[Token(Token = "0x6000626")]
	[Address(RVA = "0xCB91E0", Offset = "0xCB91E0", VA = "0xCB91E0")]
	public void ClearSlot(SaveSlot slot)
	{
	}

	[Token(Token = "0x6000627")]
	[Address(RVA = "0xCB97DC", Offset = "0xCB97DC", VA = "0xCB97DC")]
	public SaveManager()
	{
	}
}
[Token(Token = "0x2000126")]
public class SaveObjectBase : MonoBehaviour
{
	[Token(Token = "0x4000565")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[HideInInspector]
	[SerializeField]
	private SaveID id;

	[Token(Token = "0x4000566")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	[HideInInspector]
	private Rigidbody rb;

	[Token(Token = "0x4000567")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x977420", Offset = "0x977420")]
	private bool <Kinematic>k__BackingField;

	[Token(Token = "0x4000568")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public int version;

	[Token(Token = "0x4000569")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public List<Component> componentsToSave;

	[Token(Token = "0x400056A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private SaveableState state;

	[NonSerialized]
	[Token(Token = "0x400056B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public SaveID originalBundle;

	[Token(Token = "0x400056C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private SaveableComponent[] saveableComponents;

	[Token(Token = "0x400056D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x977430", Offset = "0x977430")]
	private bool <Initialized>k__BackingField;

	[Token(Token = "0x170000BD")]
	public SaveID Id
	{
		[Token(Token = "0x6000629")]
		[Address(RVA = "0xCB9860", Offset = "0xCB9860", VA = "0xCB9860")]
		get
		{
			return default(SaveID);
		}
	}

	[Token(Token = "0x170000BE")]
	public Rigidbody Rb
	{
		[Token(Token = "0x600062B")]
		[Address(RVA = "0xCB9874", Offset = "0xCB9874", VA = "0xCB9874")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000BF")]
	public bool Kinematic
	{
		[Token(Token = "0x600062C")]
		[Address(RVA = "0xCB987C", Offset = "0xCB987C", VA = "0xCB987C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x989248", Offset = "0x989248")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600062D")]
		[Address(RVA = "0xCB9884", Offset = "0xCB9884", VA = "0xCB9884")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x989258", Offset = "0x989258")]
		private set
		{
		}
	}

	[Token(Token = "0x170000C0")]
	public bool Initialized
	{
		[Token(Token = "0x600062F")]
		[Address(RVA = "0xCB9B10", Offset = "0xCB9B10", VA = "0xCB9B10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x989268", Offset = "0x989268")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000630")]
		[Address(RVA = "0xCB9B18", Offset = "0xCB9B18", VA = "0xCB9B18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x989278", Offset = "0x989278")]
		private set
		{
		}
	}

	[Token(Token = "0x600062A")]
	[Address(RVA = "0xCB986C", Offset = "0xCB986C", VA = "0xCB986C")]
	public void SetId(SaveID id)
	{
	}

	[Token(Token = "0x600062E")]
	[Address(RVA = "0xCB9890", Offset = "0xCB9890", VA = "0xCB9890")]
	public bool HasSaveableComponents()
	{
		return default(bool);
	}

	[Token(Token = "0x6000631")]
	[Address(RVA = "0xCB9B24", Offset = "0xCB9B24", VA = "0xCB9B24")]
	public void Setup([Optional] SaveableState s)
	{
	}

	[Token(Token = "0x6000632")]
	[Address(RVA = "0xCB98AC", Offset = "0xCB98AC", VA = "0xCB98AC")]
	public SaveableComponent[] GetSaveableComponents()
	{
		return null;
	}

	[Token(Token = "0x6000633")]
	[Address(RVA = "0xCBA000", Offset = "0xCBA000", VA = "0xCBA000")]
	public SaveableComponent GetSaveableComponentOfType(Type compType)
	{
		return null;
	}

	[Token(Token = "0x6000634")]
	public T GetSaveableComponent<T>() where T : SaveableComponent
	{
		return null;
	}

	[Token(Token = "0x6000635")]
	[Address(RVA = "0xCBA144", Offset = "0xCBA144", VA = "0xCBA144")]
	public bool GetSaveableComponent(string type, int id, out SaveableComponent component)
	{
		return default(bool);
	}

	[Token(Token = "0x6000636")]
	[Address(RVA = "0xCBA23C", Offset = "0xCBA23C", VA = "0xCBA23C")]
	public bool GetBinaryDataForFile(int componentId, out byte[] result)
	{
		return default(bool);
	}

	[Token(Token = "0x6000637")]
	[Address(RVA = "0xCBA310", Offset = "0xCBA310", VA = "0xCBA310")]
	public SaveObjectBase()
	{
	}
}
[Token(Token = "0x2000127")]
[DisallowMultipleComponent]
public class SaveObjectSpawnable : SaveObjectBase
{
	[Token(Token = "0x400056E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private AssetReference prefab;

	[Token(Token = "0x170000C1")]
	public AssetReference Prefab
	{
		[Token(Token = "0x6000638")]
		[Address(RVA = "0xCBA3B0", Offset = "0xCBA3B0", VA = "0xCBA3B0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000639")]
	[Address(RVA = "0xCBA3B8", Offset = "0xCBA3B8", VA = "0xCBA3B8")]
	public SaveObjectSpawnable()
	{
	}
}
[Token(Token = "0x2000128")]
public class SaveObjectStatic : SaveObjectBase
{
	[Token(Token = "0x600063A")]
	[Address(RVA = "0xCBA3BC", Offset = "0xCBA3BC", VA = "0xCBA3BC")]
	public SaveObjectStatic()
	{
	}
}
[Token(Token = "0x2000129")]
public class SaveSlot
{
	[Token(Token = "0x400056F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x977450", Offset = "0x977450")]
	private int <Slot>k__BackingField;

	[Token(Token = "0x4000570")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x977460", Offset = "0x977460")]
	private string <SaveName>k__BackingField;

	[Token(Token = "0x4000571")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private DateTime lastSaved;

	[Token(Token = "0x4000572")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x977470", Offset = "0x977470")]
	private SaveGame <Game>k__BackingField;

	[Token(Token = "0x4000573")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x977480", Offset = "0x977480")]
	private bool <Compatible>k__BackingField;

	[Token(Token = "0x170000C2")]
	public int Slot
	{
		[Token(Token = "0x600063B")]
		[Address(RVA = "0xCBA3C0", Offset = "0xCBA3C0", VA = "0xCBA3C0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x989288", Offset = "0x989288")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x600063C")]
		[Address(RVA = "0xCBA3C8", Offset = "0xCBA3C8", VA = "0xCBA3C8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x989298", Offset = "0x989298")]
		private set
		{
		}
	}

	[Token(Token = "0x170000C3")]
	public string LastSaved
	{
		[Token(Token = "0x600063D")]
		[Address(RVA = "0xCBA3D0", Offset = "0xCBA3D0", VA = "0xCBA3D0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000C4")]
	public string TimePlayed
	{
		[Token(Token = "0x600063E")]
		[Address(RVA = "0xCBA58C", Offset = "0xCBA58C", VA = "0xCBA58C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000C5")]
	public SaveGame Game
	{
		[Token(Token = "0x600063F")]
		[Address(RVA = "0xCBA69C", Offset = "0xCBA69C", VA = "0xCBA69C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9892A8", Offset = "0x9892A8")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000640")]
		[Address(RVA = "0xCBA6A4", Offset = "0xCBA6A4", VA = "0xCBA6A4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9892B8", Offset = "0x9892B8")]
		private set
		{
		}
	}

	[Token(Token = "0x6000641")]
	[Address(RVA = "0xCB7CCC", Offset = "0xCB7CCC", VA = "0xCB7CCC")]
	public SaveSlot(int s)
	{
	}

	[Token(Token = "0x6000642")]
	[Address(RVA = "0xCB8BD8", Offset = "0xCB8BD8", VA = "0xCB8BD8")]
	public SaveSlot(int s, SaveGame game)
	{
	}

	[Token(Token = "0x6000643")]
	[Address(RVA = "0xCB882C", Offset = "0xCB882C", VA = "0xCB882C")]
	public void SetGame(SaveGame game)
	{
	}

	[Token(Token = "0x6000644")]
	[Address(RVA = "0xCBA3D4", Offset = "0xCBA3D4", VA = "0xCBA3D4")]
	private string GetLastSavedString()
	{
		return null;
	}

	[Token(Token = "0x6000645")]
	[Address(RVA = "0xCBA590", Offset = "0xCBA590", VA = "0xCBA590")]
	private string GetTimeSpanString()
	{
		return null;
	}

	[Token(Token = "0x6000646")]
	[Address(RVA = "0xCB8250", Offset = "0xCB8250", VA = "0xCB8250")]
	public bool IsEmpty()
	{
		return default(bool);
	}

	[Token(Token = "0x6000647")]
	[Address(RVA = "0xCBA6AC", Offset = "0xCBA6AC", VA = "0xCBA6AC")]
	public bool SaveIsCompatible()
	{
		return default(bool);
	}
}
[Token(Token = "0x200012A")]
public static class SaveUtility
{
	[Token(Token = "0x4000574")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Dictionary<string, Type> stringToType;

	[Token(Token = "0x6000648")]
	[Address(RVA = "0xCBA754", Offset = "0xCBA754", VA = "0xCBA754")]
	public static void SerializeComponents(SaveableState saveableState, SaveableComponent[] components)
	{
	}

	[Token(Token = "0x6000649")]
	[Address(RVA = "0xCBADA8", Offset = "0xCBADA8", VA = "0xCBADA8")]
	public static SaveableState[] CreateSaveableStates(List<SaveObjectBase> saveables)
	{
		return null;
	}

	[Token(Token = "0x600064A")]
	[Address(RVA = "0xCBB20C", Offset = "0xCBB20C", VA = "0xCBB20C")]
	private static void SetComponentStates(SaveableState state, SaveObjectBase saveable)
	{
	}

	[Token(Token = "0x600064B")]
	[Address(RVA = "0xCBB330", Offset = "0xCBB330", VA = "0xCBB330")]
	private static void CollectValidSaveables(List<SaveObjectBase> saveables, List<string> names, out List<SaveObjectBase> validSaveables)
	{
	}

	[Token(Token = "0x600064C")]
	[Address(RVA = "0xCBB5CC", Offset = "0xCBB5CC", VA = "0xCBB5CC")]
	public static SceneBundleState CreateSceneBundleState(LoadedSceneBundle sceneBundle)
	{
		return null;
	}

	[Token(Token = "0x600064D")]
	[Address(RVA = "0xCBBAB4", Offset = "0xCBBAB4", VA = "0xCBBAB4")]
	public static bool SetObjectState(SaveObjectBase saveable, SaveableState state, SaveableBinaryDataList binaryDataList)
	{
		return default(bool);
	}

	[Token(Token = "0x600064E")]
	[Address(RVA = "0xCBBB6C", Offset = "0xCBBB6C", VA = "0xCBBB6C")]
	private static void SetComponentStates(SaveObjectBase saveable, SerializedComponentState[] states, SaveableBinaryDataList binaryDataList)
	{
	}

	[Token(Token = "0x600064F")]
	[Address(RVA = "0xCBC1A0", Offset = "0xCBC1A0", VA = "0xCBC1A0")]
	private static string ReadBytesFromFile(string path)
	{
		return null;
	}

	[Token(Token = "0x6000650")]
	[Address(RVA = "0xCB8628", Offset = "0xCB8628", VA = "0xCB8628")]
	public static SaveGame GetSaveGameFromFile(int slot)
	{
		return null;
	}

	[Token(Token = "0x6000651")]
	[Address(RVA = "0xCB87A0", Offset = "0xCB87A0", VA = "0xCB87A0")]
	public static SaveableState[] GetSaveableStatesFromFile(int slot)
	{
		return null;
	}

	[Token(Token = "0x6000652")]
	[Address(RVA = "0xCB61B0", Offset = "0xCB61B0", VA = "0xCB61B0")]
	public static SaveableBinaryDataList GetBinaryDataFromFile(int slot, ref SaveID bundleId)
	{
		return null;
	}

	[Token(Token = "0x6000653")]
	[Address(RVA = "0xCBC690", Offset = "0xCBC690", VA = "0xCBC690")]
	private static bool ReadSaveID(FileStream stream, out SaveID outId)
	{
		return default(bool);
	}

	[Token(Token = "0x6000654")]
	[Address(RVA = "0xCBC7AC", Offset = "0xCBC7AC", VA = "0xCBC7AC")]
	private static bool ReadSingleInt(FileStream stream, out int outNumber)
	{
		return default(bool);
	}

	[Token(Token = "0x6000655")]
	[Address(RVA = "0xCBC880", Offset = "0xCBC880", VA = "0xCBC880")]
	private static bool ReadDataChunk(FileStream stream, int numBytes, out byte[] data)
	{
		return default(bool);
	}

	[Token(Token = "0x6000656")]
	[Address(RVA = "0xCBC924", Offset = "0xCBC924", VA = "0xCBC924")]
	private static bool WriteToFile(string text, string path)
	{
		return default(bool);
	}

	[Token(Token = "0x6000657")]
	[Address(RVA = "0xCBCB9C", Offset = "0xCBCB9C", VA = "0xCBCB9C")]
	public static bool SaveGameStateToFile(SaveGame game, int slot)
	{
		return default(bool);
	}

	[Token(Token = "0x6000658")]
	[Address(RVA = "0xCBCFF0", Offset = "0xCBCFF0", VA = "0xCBCFF0")]
	public static bool SaveBinaryDataToFile(Dictionary<SaveID, SaveableBinaryDataList> binaryDataForSceneBundles, int slot)
	{
		return default(bool);
	}

	[Token(Token = "0x6000659")]
	[Address(RVA = "0xCBD9EC", Offset = "0xCBD9EC", VA = "0xCBD9EC")]
	public static bool SaveObjectsToFile(SaveableState[] objArray, int slot)
	{
		return default(bool);
	}

	[Token(Token = "0x600065A")]
	[Address(RVA = "0xCB8FA4", Offset = "0xCB8FA4", VA = "0xCB8FA4")]
	public static bool SaveAllToFile(SaveGame saveGame, SaveableState[] saveableStates, Dictionary<SaveID, SaveableBinaryDataList> binaryData, int slotIndex)
	{
		return default(bool);
	}

	[Token(Token = "0x600065B")]
	[Address(RVA = "0xCBDC84", Offset = "0xCBDC84", VA = "0xCBDC84")]
	public static void SaveGameSettings(GameSettings settings)
	{
	}

	[Token(Token = "0x600065C")]
	[Address(RVA = "0xCBDE7C", Offset = "0xCBDE7C", VA = "0xCBDE7C")]
	public static GameSettings LoadGameSettings()
	{
		return null;
	}

	[Token(Token = "0x600065D")]
	[Address(RVA = "0xCBDDD8", Offset = "0xCBDDD8", VA = "0xCBDDD8")]
	public static string RootPath()
	{
		return null;
	}

	[Token(Token = "0x600065E")]
	[Address(RVA = "0xCBDBB8", Offset = "0xCBDBB8", VA = "0xCBDBB8")]
	public static string SaveFolderPath()
	{
		return null;
	}

	[Token(Token = "0x600065F")]
	[Address(RVA = "0xCBC43C", Offset = "0xCBC43C", VA = "0xCBC43C")]
	public static string SaveFolderPath(int slot)
	{
		return null;
	}

	[Token(Token = "0x6000660")]
	[Address(RVA = "0xCBC520", Offset = "0xCBC520", VA = "0xCBC520")]
	public static string DataFolderPath(int slot)
	{
		return null;
	}

	[Token(Token = "0x6000661")]
	[Address(RVA = "0xCBC5F4", Offset = "0xCBC5F4", VA = "0xCBC5F4")]
	public static string DataFilePath(int slot, SaveID bundleId)
	{
		return null;
	}

	[Token(Token = "0x6000662")]
	[Address(RVA = "0xCBDFC8", Offset = "0xCBDFC8", VA = "0xCBDFC8")]
	public static string DeletedSavesFolderPath()
	{
		return null;
	}

	[Token(Token = "0x6000663")]
	[Address(RVA = "0xCBE094", Offset = "0xCBE094", VA = "0xCBE094")]
	public static string DeletedSavesFolderPath(int slot)
	{
		return null;
	}

	[Token(Token = "0x6000664")]
	[Address(RVA = "0xCBE178", Offset = "0xCBE178", VA = "0xCBE178")]
	public static string OldDeletedSavesPath()
	{
		return null;
	}

	[Token(Token = "0x6000665")]
	[Address(RVA = "0xCBE244", Offset = "0xCBE244", VA = "0xCBE244")]
	public static string ScreenshotFolderPath()
	{
		return null;
	}

	[Token(Token = "0x6000666")]
	[Address(RVA = "0xCBE310", Offset = "0xCBE310", VA = "0xCBE310")]
	public static string PolaroidsFolderPath()
	{
		return null;
	}

	[Token(Token = "0x6000667")]
	[Address(RVA = "0xCBE3DC", Offset = "0xCBE3DC", VA = "0xCBE3DC")]
	public static string PolaroidFilePath()
	{
		return null;
	}

	[Token(Token = "0x6000668")]
	[Address(RVA = "0xCBE640", Offset = "0xCBE640", VA = "0xCBE640")]
	public static string TempSaveFolderPath()
	{
		return null;
	}

	[Token(Token = "0x6000669")]
	[Address(RVA = "0xCBCD30", Offset = "0xCBCD30", VA = "0xCBCD30")]
	public static string TempSaveFolderPath(int slot)
	{
		return null;
	}

	[Token(Token = "0x600066A")]
	[Address(RVA = "0xCBD560", Offset = "0xCBD560", VA = "0xCBD560")]
	public static string TempDataFolderPath(int slot)
	{
		return null;
	}

	[Token(Token = "0x600066B")]
	[Address(RVA = "0xCBD950", Offset = "0xCBD950", VA = "0xCBD950")]
	public static string TempDataFilePath(int slot, SaveID bundleId)
	{
		return null;
	}

	[Token(Token = "0x600066C")]
	[Address(RVA = "0xCB8528", Offset = "0xCB8528", VA = "0xCB8528")]
	public static bool SaveExists(int slot)
	{
		return default(bool);
	}

	[Token(Token = "0x600066D")]
	[Address(RVA = "0xCBCE14", Offset = "0xCBCE14", VA = "0xCBCE14")]
	public static bool EnsureFileExists(string folderPath, string fullPath)
	{
		return default(bool);
	}

	[Token(Token = "0x600066E")]
	[Address(RVA = "0xCBD634", Offset = "0xCBD634", VA = "0xCBD634")]
	public static bool EnsureFolderExists(string path)
	{
		return default(bool);
	}

	[Token(Token = "0x600066F")]
	[Address(RVA = "0xCB938C", Offset = "0xCB938C", VA = "0xCB938C")]
	public static bool MoveSaveFilesToBackupFolder(int slot)
	{
		return default(bool);
	}

	[Token(Token = "0x6000670")]
	[Address(RVA = "0xCBD7C0", Offset = "0xCBD7C0", VA = "0xCBD7C0")]
	private static void RemoveFilesInDirectory(string path)
	{
	}

	[Token(Token = "0x6000671")]
	[Address(RVA = "0xCBE70C", Offset = "0xCBE70C", VA = "0xCBE70C")]
	private static DirectoryInfo CreateBackupFolder(int slot)
	{
		return null;
	}

	[Token(Token = "0x6000672")]
	[Address(RVA = "0xCBE9BC", Offset = "0xCBE9BC", VA = "0xCBE9BC")]
	private static void CleanupBackupFolder(int slot)
	{
	}
}
[Serializable]
[Token(Token = "0x200012B")]
public struct SaveableArray
{
	[Token(Token = "0x4000575")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public SaveableState[] objects;
}
[Token(Token = "0x200012C")]
public interface IInitializable
{
	[Token(Token = "0x6000674")]
	void Initialize();
}
[Token(Token = "0x200012D")]
public abstract class SaveableComponent : MonoBehaviour
{
	[Token(Token = "0x4000576")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected ComponentState state;

	[Token(Token = "0x4000577")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x977490", Offset = "0x977490")]
	private bool <StateInitialized>k__BackingField;

	[Token(Token = "0x4000578")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[HideInInspector]
	public int componentId;

	[Token(Token = "0x170000C6")]
	public bool StateInitialized
	{
		[Token(Token = "0x6000675")]
		[Address(RVA = "0xCBEC40", Offset = "0xCBEC40", VA = "0xCBEC40")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9892C8", Offset = "0x9892C8")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000676")]
		[Address(RVA = "0xCBEC48", Offset = "0xCBEC48", VA = "0xCBEC48")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9892D8", Offset = "0x9892D8")]
		protected set
		{
		}
	}

	[Token(Token = "0x6000677")]
	public abstract ComponentState CreateState();

	[Token(Token = "0x6000678")]
	[Address(RVA = "0xCBBEBC", Offset = "0xCBBEBC", VA = "0xCBBEBC")]
	public void InitState([Optional] ComponentState s)
	{
	}

	[Token(Token = "0x6000679")]
	[Address(RVA = "0xCBEC54", Offset = "0xCBEC54", VA = "0xCBEC54")]
	public bool HasValidState()
	{
		return default(bool);
	}

	[Token(Token = "0x600067A")]
	[Address(RVA = "0xCBECE8", Offset = "0xCBECE8", VA = "0xCBECE8")]
	protected SaveableComponent()
	{
	}
}
[Serializable]
[Token(Token = "0x200012E")]
public class ComponentState
{
	[Token(Token = "0x600067B")]
	[Address(RVA = "0xC47D3C", Offset = "0xC47D3C", VA = "0xC47D3C")]
	public ComponentState()
	{
	}
}
[Serializable]
[Token(Token = "0x200012F")]
public class ComponentStateWithBinaryData : ComponentState
{
	[Token(Token = "0x4000579")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string filename;

	[NonSerialized]
	[Token(Token = "0x400057A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public byte[] binaryData;

	[Token(Token = "0x600067C")]
	[Address(RVA = "0xC48818", Offset = "0xC48818", VA = "0xC48818", Slot = "4")]
	public virtual string GetFilenameExtension()
	{
		return null;
	}

	[Token(Token = "0x600067D")]
	[Address(RVA = "0xC48860", Offset = "0xC48860", VA = "0xC48860")]
	public ComponentStateWithBinaryData()
	{
	}
}
[Serializable]
[Token(Token = "0x2000130")]
public class EmptyComponentState : ComponentState
{
	[Token(Token = "0x600067E")]
	[Address(RVA = "0xBF8C8C", Offset = "0xBF8C8C", VA = "0xBF8C8C")]
	public EmptyComponentState()
	{
	}
}
[Serializable]
[Token(Token = "0x2000131")]
public class FloatContainerState : ComponentState
{
	[Token(Token = "0x400057B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float maxValue;

	[Token(Token = "0x400057C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float currentValue;

	[Token(Token = "0x600067F")]
	[Address(RVA = "0xCA4D50", Offset = "0xCA4D50", VA = "0xCA4D50")]
	public FloatContainerState()
	{
	}
}
[Serializable]
[Token(Token = "0x2000132")]
public class IntContainerState : ComponentState
{
	[Token(Token = "0x400057D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int maxValue;

	[Token(Token = "0x400057E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public int currentValue;

	[Token(Token = "0x6000680")]
	[Address(RVA = "0xBDFD38", Offset = "0xBDFD38", VA = "0xBDFD38")]
	public IntContainerState()
	{
	}
}
[Serializable]
[Token(Token = "0x2000133")]
public class ObjectContainerState : ComponentState
{
	[Token(Token = "0x400057F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int maxValue;

	[Token(Token = "0x4000580")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public SaveID[] objects;

	[Token(Token = "0x6000681")]
	[Address(RVA = "0xD71BE8", Offset = "0xD71BE8", VA = "0xD71BE8")]
	public ObjectContainerState()
	{
	}
}
[Serializable]
[Token(Token = "0x2000134")]
public class GameState
{
	[Token(Token = "0x4000581")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public PlayerState playerState;

	[Token(Token = "0x4000582")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public InventoryState inventoryState;

	[Token(Token = "0x4000583")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public SaveID[] activeSceneBundles;

	[Token(Token = "0x4000584")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public SceneBundleState[] sceneBundleStates;

	[Token(Token = "0x4000585")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public MilestoneState[] milestoneStates;

	[Token(Token = "0x6000682")]
	[Address(RVA = "0xE743C8", Offset = "0xE743C8", VA = "0xE743C8")]
	public GameState()
	{
	}
}
[Serializable]
[Token(Token = "0x2000135")]
public class PlayerState
{
	[Token(Token = "0x4000586")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public SaveID playerScene;

	[Token(Token = "0x4000587")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Vector3 playerPosition;

	[Token(Token = "0x4000588")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float playerRotationAroundY;

	[Token(Token = "0x4000589")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public SaveID heldInRightHand;

	[Token(Token = "0x400058A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public SaveID heldInLeftHand;

	[Token(Token = "0x400058B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GemType[] gloveGemType;

	[Token(Token = "0x400058C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public bool canOpenInventory;

	[Token(Token = "0x400058D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public bool[] braceletEquipped;

	[Token(Token = "0x400058E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public MissionBeaconMapState[] BeaconMapStates;

	[Token(Token = "0x6000683")]
	[Address(RVA = "0xD0F65C", Offset = "0xD0F65C", VA = "0xD0F65C")]
	public PlayerState()
	{
	}

	[Token(Token = "0x6000684")]
	[Address(RVA = "0xD0F718", Offset = "0xD0F718", VA = "0xD0F718")]
	public void UpdateState()
	{
	}
}
[Serializable]
[Token(Token = "0x2000136")]
public class GameStats
{
	[Token(Token = "0x400058F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int hoursPlayed;

	[Token(Token = "0x4000590")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public int minutesPlayed;

	[Token(Token = "0x4000591")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int seedsSown;

	[Token(Token = "0x4000592")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float waterPoured;

	[Token(Token = "0x4000593")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int treesChopped;

	[Token(Token = "0x4000594")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int puffkinsFed;

	[Token(Token = "0x4000595")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int manateesFed;

	[Token(Token = "0x4000596")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public int puffkinsPetted;

	[Token(Token = "0x4000597")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public int manateesPetted;

	[Token(Token = "0x4000598")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float percentageTimeSpentOutdoors;

	[Token(Token = "0x4000599")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float hoursSpentOnBoat;

	[Token(Token = "0x400059A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Dictionary<PlantType, int> plantsSprouted;

	[Token(Token = "0x6000685")]
	[Address(RVA = "0xE743C4", Offset = "0xE743C4", VA = "0xE743C4")]
	public void AddStats(GameStats stats)
	{
	}

	[Token(Token = "0x6000686")]
	[Address(RVA = "0xE73AE0", Offset = "0xE73AE0", VA = "0xE73AE0")]
	public GameStats()
	{
	}
}
[Serializable]
[Token(Token = "0x2000137")]
public class SaveableState
{
	[Token(Token = "0x400059B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public SaveID id;

	[Token(Token = "0x400059C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public SerializedComponentState[] components;

	[Token(Token = "0x400059D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool objectActive;

	[Token(Token = "0x400059E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	public bool kinematic;

	[Token(Token = "0x400059F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AssetReferenceSerializable prefab;

	[NonSerialized]
	[Token(Token = "0x40005A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public SerializedBinaryData[] binaryData;

	[Token(Token = "0x6000687")]
	[Address(RVA = "0xCBB298", Offset = "0xCBB298", VA = "0xCBB298")]
	public SaveableState()
	{
	}

	[Token(Token = "0x6000688")]
	[Address(RVA = "0xCBAFF8", Offset = "0xCBAFF8", VA = "0xCBAFF8")]
	public SaveableState(SaveObjectBase saveable)
	{
	}

	[Token(Token = "0x6000689")]
	[Address(RVA = "0xCBA2A4", Offset = "0xCBA2A4", VA = "0xCBA2A4")]
	public byte[] GetBinaryData(int componentId)
	{
		return null;
	}
}
[Token(Token = "0x2000138")]
public class SaveableBinaryDataList
{
	[Token(Token = "0x40005A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public List<SerializedBinaryData> datas;

	[Token(Token = "0x600068A")]
	[Address(RVA = "0xCBBFCC", Offset = "0xCBBFCC", VA = "0xCBBFCC")]
	public byte[] GetDataForComponent(SaveID saveId, int componentId)
	{
		return null;
	}

	[Token(Token = "0x600068B")]
	[Address(RVA = "0xCB6C54", Offset = "0xCB6C54", VA = "0xCB6C54")]
	public SaveableBinaryDataList()
	{
	}
}
[Serializable]
[Token(Token = "0x2000139")]
public class SceneBundleState
{
	[Token(Token = "0x40005A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public SaveID id;

	[Token(Token = "0x40005A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AssetReference sceneAsset;

	[Token(Token = "0x40005A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public SaveID[] dynamicObjectIds;

	[Token(Token = "0x40005A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public OrientedPoint[] dynamicObjectTransforms;

	[Token(Token = "0x40005A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public SaveID[] staticObjectIds;

	[Token(Token = "0x40005A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public OrientedPoint[] staticObjectTransforms;

	[Token(Token = "0x40005A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public DateTime playerLastVisitedTime;

	[Token(Token = "0x600068C")]
	[Address(RVA = "0xCBBA7C", Offset = "0xCBBA7C", VA = "0xCBBA7C")]
	public SceneBundleState(LoadedSceneBundle sceneBundle)
	{
	}
}
[Serializable]
[Token(Token = "0x200013A")]
public struct SerializedComponentState
{
	[Token(Token = "0x40005A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public int id;

	[Token(Token = "0x40005AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public string componentType;

	[Token(Token = "0x40005AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string stateType;

	[Token(Token = "0x40005AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string state;

	[Token(Token = "0x40005AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ComponentState componentState;
}
[Serializable]
[Token(Token = "0x200013B")]
public struct SerializedBinaryData
{
	[Token(Token = "0x40005AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public SaveID id;

	[Token(Token = "0x40005AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int componentId;

	[Token(Token = "0x40005B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public int numBytes;

	[Token(Token = "0x40005B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public byte[] data;

	[Token(Token = "0x600068D")]
	[Address(RVA = "0xA442D8", Offset = "0xA442D8", VA = "0xA442D8")]
	public SerializedBinaryData(SaveID id, int componentId, byte[] data)
	{
	}
}
[Token(Token = "0x200013C")]
public class SceneBundleLoadRequest
{
	[Token(Token = "0x40005B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public SceneBundle bundle;

	[Token(Token = "0x40005B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool loadStaticScenes;

	[Token(Token = "0x40005B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<IResourceLocation> locations;

	[Token(Token = "0x40005B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Action<LoadedSceneBundle> callback;

	[Token(Token = "0x600068E")]
	[Address(RVA = "0xCBF2C0", Offset = "0xCBF2C0", VA = "0xCBF2C0")]
	public SceneBundleLoadRequest(SceneBundle bundle, bool loadStaticScenes, [Optional] Action<LoadedSceneBundle> cb)
	{
	}
}
[Token(Token = "0x200013D")]
public class SceneHandler : MonoBehaviour
{
	[Token(Token = "0x40005B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9774B0", Offset = "0x9774B0")]
	private static SceneHandler <Instance>k__BackingField;

	[Token(Token = "0x40005B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AssetReference emptySceneAssetRef;

	[Token(Token = "0x40005B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private OptimizedCollection<LoadedSceneBundle> loadedSceneBundles;

	[Token(Token = "0x40005B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Queue<SceneBundleLoadRequest> bundlesToLoad;

	[Token(Token = "0x40005BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private List<AsyncOperationHandle<SceneInstance>> scenesBeingLoaded;

	[Token(Token = "0x40005BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private List<AsyncOperationHandle<IList<IResourceLocation>>> resourceLocationsBeingLoaded;

	[Token(Token = "0x40005BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Queue<LoadedSceneBundle> bundlesToProcess;

	[Token(Token = "0x40005BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private SceneBundle[] allSceneBundles;

	[Token(Token = "0x40005BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Dictionary<SaveID, SceneBundle> sceneBundles;

	[Token(Token = "0x40005BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Scene currentSceneForSpawnedObjects;

	[Token(Token = "0x40005C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private int mainScene;

	[Token(Token = "0x40005C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private string emptySceneName;

	[Token(Token = "0x40005C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private int numScenesToUnload;

	[Token(Token = "0x40005C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9774D0", Offset = "0x9774D0")]
	private bool <IsReady>k__BackingField;

	[Token(Token = "0x170000C7")]
	public static SceneHandler Instance
	{
		[Token(Token = "0x600068F")]
		[Address(RVA = "0xCBF380", Offset = "0xCBF380", VA = "0xCBF380")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9892E8", Offset = "0x9892E8")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000690")]
		[Address(RVA = "0xCBF3D0", Offset = "0xCBF3D0", VA = "0xCBF3D0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9892F8", Offset = "0x9892F8")]
		private set
		{
		}
	}

	[Token(Token = "0x170000C8")]
	public bool IsReady
	{
		[Token(Token = "0x6000691")]
		[Address(RVA = "0xCBF428", Offset = "0xCBF428", VA = "0xCBF428")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x989308", Offset = "0x989308")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000692")]
		[Address(RVA = "0xCBF430", Offset = "0xCBF430", VA = "0xCBF430")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x989318", Offset = "0x989318")]
		private set
		{
		}
	}

	[Token(Token = "0x170000C9")]
	public static int NumScenesBeingLoaded
	{
		[Token(Token = "0x6000693")]
		[Address(RVA = "0xCBF43C", Offset = "0xCBF43C", VA = "0xCBF43C")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x170000CA")]
	public static int NumBundlesToLoad
	{
		[Token(Token = "0x6000694")]
		[Address(RVA = "0xCBF534", Offset = "0xCBF534", VA = "0xCBF534")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x6000695")]
	[Address(RVA = "0xCBF62C", Offset = "0xCBF62C", VA = "0xCBF62C")]
	public void SetMainSceneAsActive()
	{
	}

	[Token(Token = "0x6000696")]
	[Address(RVA = "0xCBF758", Offset = "0xCBF758", VA = "0xCBF758")]
	public OptimizedCollection<LoadedSceneBundle> GetLoadedSceneBundles()
	{
		return default(OptimizedCollection<LoadedSceneBundle>);
	}

	[Token(Token = "0x6000697")]
	[Address(RVA = "0xCBF764", Offset = "0xCBF764", VA = "0xCBF764")]
	public LoadedSceneBundle GetLoadedSceneBundle(ref SaveID id)
	{
		return null;
	}

	[Token(Token = "0x6000698")]
	[Address(RVA = "0xCBF87C", Offset = "0xCBF87C", VA = "0xCBF87C")]
	public bool SceneBundleIsLoaded(ref SaveID id)
	{
		return default(bool);
	}

	[Token(Token = "0x6000699")]
	[Address(RVA = "0xCBF960", Offset = "0xCBF960", VA = "0xCBF960")]
	private void Awake()
	{
	}

	[Token(Token = "0x600069A")]
	[Address(RVA = "0xCBFB38", Offset = "0xCBFB38", VA = "0xCBFB38")]
	public bool IsDoneLoading()
	{
		return default(bool);
	}

	[Token(Token = "0x600069B")]
	[Address(RVA = "0xCBFBB8", Offset = "0xCBFBB8", VA = "0xCBFBB8")]
	public void UpdateLoading()
	{
	}

	[Token(Token = "0x600069C")]
	[Address(RVA = "0xCBFDC4", Offset = "0xCBFDC4", VA = "0xCBFDC4")]
	public void UnloadAllScenes()
	{
	}

	[Token(Token = "0x600069D")]
	[Address(RVA = "0xCC00EC", Offset = "0xCC00EC", VA = "0xCC00EC")]
	public bool GetSceneBundleFromID(SaveID id, out SceneBundle bundle)
	{
		return default(bool);
	}

	[Token(Token = "0x600069E")]
	[Address(RVA = "0xCC016C", Offset = "0xCC016C", VA = "0xCC016C")]
	public void TriggerLoadOfSceneBundle(SceneBundle bundle, bool onlyLoadStatic, Action<LoadedSceneBundle> callback)
	{
	}

	[Token(Token = "0x600069F")]
	[Address(RVA = "0xCC0268", Offset = "0xCC0268", VA = "0xCC0268")]
	public void TriggerUnloadOfSceneBundle(SceneBundle bundle)
	{
	}

	[Token(Token = "0x60006A0")]
	[Address(RVA = "0xCBFE74", Offset = "0xCBFE74", VA = "0xCBFE74")]
	private void UnloadSceneBundle(LoadedSceneBundle bundle)
	{
	}

	[Token(Token = "0x60006A1")]
	[Address(RVA = "0xCC0174", Offset = "0xCC0174", VA = "0xCC0174")]
	private void AddSceneBundleToLoadQueue(SceneBundle bundle, bool onlyLoadStatic, Action<LoadedSceneBundle> callback)
	{
	}

	[Token(Token = "0x60006A2")]
	[Address(RVA = "0xCC03AC", Offset = "0xCC03AC", VA = "0xCC03AC")]
	private bool ScenesHaveAlreadyBeenLoaded(SceneBundleLoadRequest request)
	{
		return default(bool);
	}

	[Token(Token = "0x60006A3")]
	[Address(RVA = "0xCC0458", Offset = "0xCC0458", VA = "0xCC0458")]
	private void OnSceneLocationLoaded(AsyncOperationHandle<IList<IResourceLocation>> handle)
	{
	}

	[Token(Token = "0x60006A4")]
	[Address(RVA = "0xCC06B0", Offset = "0xCC06B0", VA = "0xCC06B0")]
	private void LoadNextSceneLocation(SceneBundleLoadRequest request)
	{
	}

	[Token(Token = "0x60006A5")]
	[Address(RVA = "0xCC0300", Offset = "0xCC0300", VA = "0xCC0300")]
	private void PrepareToLoadSceneBundle(SceneBundleLoadRequest request)
	{
	}

	[Token(Token = "0x60006A6")]
	[Address(RVA = "0xCC0800", Offset = "0xCC0800", VA = "0xCC0800")]
	private void LoadSceneBundle(SceneBundleLoadRequest request)
	{
	}

	[Token(Token = "0x60006A7")]
	[Address(RVA = "0xCC0C60", Offset = "0xCC0C60", VA = "0xCC0C60")]
	private bool SceneIsLoaded(string name, ref Scene scene)
	{
		return default(bool);
	}

	[Token(Token = "0x60006A8")]
	[Address(RVA = "0xCC0B5C", Offset = "0xCC0B5C", VA = "0xCC0B5C")]
	private void LoadScene(AssetReference sceneRef)
	{
	}

	[Token(Token = "0x60006A9")]
	[Address(RVA = "0xCC0FA0", Offset = "0xCC0FA0", VA = "0xCC0FA0")]
	public SaveID[] GetActiveSceneBundleIDs()
	{
		return null;
	}

	[Token(Token = "0x60006AA")]
	[Address(RVA = "0xCC105C", Offset = "0xCC105C", VA = "0xCC105C")]
	private void OnSceneLoaded(AsyncOperationHandle<SceneInstance> handle)
	{
	}

	[Token(Token = "0x60006AB")]
	[Address(RVA = "0xCC0DE8", Offset = "0xCC0DE8", VA = "0xCC0DE8")]
	private void ProcessLoadedScene(Scene scene)
	{
	}

	[Token(Token = "0x60006AC")]
	[Address(RVA = "0xCBFC30", Offset = "0xCBFC30", VA = "0xCBFC30")]
	private void ProcessNextBundle()
	{
	}

	[Token(Token = "0x60006AD")]
	[Address(RVA = "0xCC1158", Offset = "0xCC1158", VA = "0xCC1158")]
	private void OnEmptySceneLoaded(AsyncOperationHandle<SceneInstance> handle)
	{
	}

	[Token(Token = "0x60006AE")]
	[Address(RVA = "0xCC1258", Offset = "0xCC1258", VA = "0xCC1258")]
	private void OnSceneUnloaded(AsyncOperation handle)
	{
	}

	[Token(Token = "0x60006AF")]
	[Address(RVA = "0xCC1304", Offset = "0xCC1304", VA = "0xCC1304")]
	public bool IsBusyUnloadingScenes()
	{
		return default(bool);
	}

	[Token(Token = "0x60006B0")]
	[Address(RVA = "0xCC1314", Offset = "0xCC1314", VA = "0xCC1314")]
	public SaveID GetBundleIDForScene(int sceneHandle)
	{
		return default(SaveID);
	}

	[Token(Token = "0x60006B1")]
	[Address(RVA = "0xCC1340", Offset = "0xCC1340", VA = "0xCC1340")]
	public LoadedSceneBundle GetLoadedBundleForScene(int sceneHandle)
	{
		return null;
	}

	[Token(Token = "0x60006B2")]
	[Address(RVA = "0xCC14E0", Offset = "0xCC14E0", VA = "0xCC14E0")]
	public Scene GetCurrentSceneForSpawnedObjects()
	{
		return default(Scene);
	}

	[Token(Token = "0x60006B3")]
	[Address(RVA = "0xCC15CC", Offset = "0xCC15CC", VA = "0xCC15CC")]
	public LoadedSceneBundle GetDefaultSceneBundle()
	{
		return null;
	}

	[Token(Token = "0x60006B4")]
	[Address(RVA = "0xCB9EC4", Offset = "0xCB9EC4", VA = "0xCB9EC4")]
	public bool SceneIsDynamic(int sceneHandle)
	{
		return default(bool);
	}

	[Token(Token = "0x60006B5")]
	[Address(RVA = "0xCC16F8", Offset = "0xCC16F8", VA = "0xCC16F8")]
	public SaveObjectBase GetSaveObject(ref SaveID id)
	{
		return null;
	}

	[Token(Token = "0x60006B6")]
	[Address(RVA = "0xCC1818", Offset = "0xCC1818", VA = "0xCC1818")]
	public SceneHandler()
	{
	}
}
[Token(Token = "0x200013E")]
public class LoadedSceneBundle
{
	[Token(Token = "0x40005C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public SaveID saveID;

	[Token(Token = "0x40005C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<Scene> dynamicScenes;

	[Token(Token = "0x40005C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public List<Scene> staticScenes;

	[Token(Token = "0x40005C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public List<IInitializable> allObjects;

	[Token(Token = "0x40005C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public List<SaveObjectBase> dynamicSaveables;

	[Token(Token = "0x40005C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public List<SaveObjectBase> staticSaveables;

	[Token(Token = "0x40005CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Scene sceneForSpawnedObjects;

	[Token(Token = "0x40005CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Dictionary<Type, List<IInitializable>> objectsThatNeedInitialization;

	[Token(Token = "0x40005CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public List<IGrabbable> grabbables;

	[Token(Token = "0x40005CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Dictionary<int, SaveObjectBase> saveObjectLookupTable;

	[Token(Token = "0x40005CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public List<string> dynamicSaveableNames;

	[Token(Token = "0x40005CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public List<string> staticSaveableNames;

	[Token(Token = "0x60006B7")]
	[Address(RVA = "0xBE5D80", Offset = "0xBE5D80", VA = "0xBE5D80")]
	public LoadedSceneBundle(SaveID id)
	{
	}

	[Token(Token = "0x60006B8")]
	[Address(RVA = "0xBE5FC0", Offset = "0xBE5FC0", VA = "0xBE5FC0")]
	public void AllObjectsInitialized()
	{
	}

	[Token(Token = "0x60006B9")]
	[Address(RVA = "0xBE6030", Offset = "0xBE6030", VA = "0xBE6030")]
	private void AddToSortedList(List<IInitializable> initializableObjects)
	{
	}

	[Token(Token = "0x60006BA")]
	[Address(RVA = "0xBE65AC", Offset = "0xBE65AC", VA = "0xBE65AC")]
	private void AddStaticObjects(List<IInitializable> initializableObjects, List<SaveObjectBase> saveableObjects)
	{
	}

	[Token(Token = "0x60006BB")]
	[Address(RVA = "0xBE6928", Offset = "0xBE6928", VA = "0xBE6928")]
	public void AddDynamicObjects(List<IInitializable> initializableObjects, List<SaveObjectBase> saveableObjects)
	{
	}

	[Token(Token = "0x60006BC")]
	[Address(RVA = "0xBE6A10", Offset = "0xBE6A10", VA = "0xBE6A10")]
	public void AddDynamicSaveObject(SaveObjectBase saveObject)
	{
	}

	[Token(Token = "0x60006BD")]
	[Address(RVA = "0xBE6ACC", Offset = "0xBE6ACC", VA = "0xBE6ACC")]
	public bool RemoveDynamicSaveObject(SaveObjectBase saveObject)
	{
		return default(bool);
	}

	[Token(Token = "0x60006BE")]
	[Address(RVA = "0xBE6B64", Offset = "0xBE6B64", VA = "0xBE6B64")]
	public bool RemoveStaticSaveObject(SaveObjectBase saveObject)
	{
		return default(bool);
	}

	[Token(Token = "0x60006BF")]
	[Address(RVA = "0xBE6BFC", Offset = "0xBE6BFC", VA = "0xBE6BFC")]
	public void AddStaticSaveObject(SaveObjectBase saveObject)
	{
	}

	[Token(Token = "0x60006C0")]
	[Address(RVA = "0xBE6CB8", Offset = "0xBE6CB8", VA = "0xBE6CB8")]
	public void FindObjectsInScenes(List<Scene> scenes, bool isStatic)
	{
	}

	[Token(Token = "0x60006C1")]
	[Address(RVA = "0xBE6F38", Offset = "0xBE6F38", VA = "0xBE6F38")]
	public SaveObjectBase GetSaveable(ref SaveID id)
	{
		return null;
	}

	[Token(Token = "0x60006C2")]
	[Address(RVA = "0xBE66F0", Offset = "0xBE66F0", VA = "0xBE66F0")]
	private void AddSaveObjectToLookupTable(SaveObjectBase obj)
	{
	}

	[Token(Token = "0x60006C3")]
	[Address(RVA = "0xBE6FC8", Offset = "0xBE6FC8", VA = "0xBE6FC8")]
	private SaveObjectBase GetSaveObjectFromLookupTable(ref SaveID id)
	{
		return null;
	}

	[Token(Token = "0x60006C4")]
	[Address(RVA = "0xBE70EC", Offset = "0xBE70EC", VA = "0xBE70EC")]
	public void RemoveAnyNullObjects()
	{
	}
}
[Token(Token = "0x200013F")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x9719EC", Offset = "0x9719EC")]
public class SceneBundle : ScriptableObject
{
	[Token(Token = "0x40005D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9774E0", Offset = "0x9774E0")]
	public float version;

	[Token(Token = "0x40005D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[HideInInspector]
	public SaveID id;

	[Token(Token = "0x40005D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AssetReference[] staticScenes;

	[Token(Token = "0x40005D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public AssetReference[] dynamicScenes;

	[Token(Token = "0x40005D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public SceneBundle[] extraContentBundles;

	[Token(Token = "0x60006C5")]
	[Address(RVA = "0xCBF2B8", Offset = "0xCBF2B8", VA = "0xCBF2B8")]
	public SceneBundle()
	{
	}
}
[Token(Token = "0x2000140")]
public class UnloadWorldZone : MonoBehaviour
{
	[Token(Token = "0x40005D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private WorldZone zone;

	[Token(Token = "0x60006C6")]
	[Address(RVA = "0xE6BABC", Offset = "0xE6BABC", VA = "0xE6BABC")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60006C7")]
	[Address(RVA = "0xE6BBB8", Offset = "0xE6BBB8", VA = "0xE6BBB8")]
	public UnloadWorldZone()
	{
	}
}
[Token(Token = "0x2000141")]
public enum WorldZoneID
{
	[Token(Token = "0x40005D7")]
	Homeland,
	[Token(Token = "0x40005D8")]
	Biome1,
	[Token(Token = "0x40005D9")]
	Biome2,
	[Token(Token = "0x40005DA")]
	Biome3,
	[Token(Token = "0x40005DB")]
	Biome4,
	[Token(Token = "0x40005DC")]
	GodIsland,
	[Token(Token = "0x40005DD")]
	COUNT
}
[Token(Token = "0x2000142")]
public class WorldZone : MonoBehaviour
{
	[Token(Token = "0x2000143")]
	public struct WorldZoneBounds
	{
		[Token(Token = "0x40005E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float radius;

		[Token(Token = "0x40005E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public Vector3 center;

		[Token(Token = "0x40005EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vector3 capsulePos1;

		[Token(Token = "0x40005EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Vector3 capsulePos2;

		[Token(Token = "0x40005EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Vector3 capsuleDirection;

		[Token(Token = "0x40005ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float capsuleHeight;

		[Token(Token = "0x40005EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public bool isCapsule;

		[Token(Token = "0x60006D1")]
		[Address(RVA = "0xA47C3C", Offset = "0xA47C3C", VA = "0xA47C3C")]
		public WorldZoneBounds(Collider col, Transform transform)
		{
		}
	}

	[Serializable]
	[Token(Token = "0x2000144")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x971A54", Offset = "0x971A54")]
	private sealed class <>c
	{
		[Token(Token = "0x40005EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x40005F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Action<bool> <>9__19_0;

		[Token(Token = "0x60006D3")]
		[Address(RVA = "0xE71E20", Offset = "0xE71E20", VA = "0xE71E20")]
		public <>c()
		{
		}

		[Token(Token = "0x60006D4")]
		[Address(RVA = "0xE71E28", Offset = "0xE71E28", VA = "0xE71E28")]
		internal void <.ctor>b__19_0(bool <p0>)
		{
		}
	}

	[Token(Token = "0x40005DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private SceneBundle sceneBundle;

	[Token(Token = "0x40005DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Collider innerTrigger;

	[Token(Token = "0x40005E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Collider outerTrigger;

	[Token(Token = "0x40005E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private LODGroup lodGroup;

	[Token(Token = "0x40005E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Action<bool> OnLowResVersionToggled;

	[Token(Token = "0x40005E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private WorldZoneBounds innerBounds;

	[Token(Token = "0x40005E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private WorldZoneBounds outerBounds;

	[Token(Token = "0x40005E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private bool playerIsInside;

	[Token(Token = "0x40005E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB9")]
	private bool needsDistanceCheck;

	[Token(Token = "0x40005E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	public WorldZoneID ZoneID;

	[Token(Token = "0x60006C8")]
	[Address(RVA = "0xE70D80", Offset = "0xE70D80", VA = "0xE70D80")]
	private void Awake()
	{
	}

	[Token(Token = "0x60006C9")]
	[Address(RVA = "0xE71450", Offset = "0xE71450", VA = "0xE71450")]
	private void OnPlayerEntered()
	{
	}

	[Token(Token = "0x60006CA")]
	[Address(RVA = "0xE71698", Offset = "0xE71698", VA = "0xE71698")]
	private void OnPlayerLeft()
	{
	}

	[Token(Token = "0x60006CB")]
	[Address(RVA = "0xE7169C", Offset = "0xE7169C", VA = "0xE7169C")]
	private void Update()
	{
	}

	[Token(Token = "0x60006CC")]
	[Address(RVA = "0xE71AA0", Offset = "0xE71AA0", VA = "0xE71AA0")]
	private static bool IsInsideBounds(Vector3 pos, ref WorldZoneBounds bounds)
	{
		return default(bool);
	}

	[Token(Token = "0x60006CD")]
	[Address(RVA = "0xE715D4", Offset = "0xE715D4", VA = "0xE715D4")]
	public void LoadZone()
	{
	}

	[Token(Token = "0x60006CE")]
	[Address(RVA = "0xE6BAD4", Offset = "0xE6BAD4", VA = "0xE6BAD4")]
	public void UnloadZone()
	{
	}

	[Token(Token = "0x60006CF")]
	[Address(RVA = "0xE70F34", Offset = "0xE70F34", VA = "0xE70F34")]
	public void ToggleLowResVersion(bool visible)
	{
	}

	[Token(Token = "0x60006D0")]
	[Address(RVA = "0xE71CB0", Offset = "0xE71CB0", VA = "0xE71CB0")]
	public WorldZone()
	{
	}
}
[Token(Token = "0x2000145")]
public class WorldZoneLODExtender : SaveableComponent, IInitializable
{
	[Token(Token = "0x40005F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private GameObject[] m_lodExtensions;

	[Token(Token = "0x40005F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private GameObject[] m_lodSubtractions;

	[Token(Token = "0x40005F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool m_shouldBeActive;

	[Token(Token = "0x60006D5")]
	[Address(RVA = "0xE71E2C", Offset = "0xE71E2C", VA = "0xE71E2C", Slot = "4")]
	public override ComponentState CreateState()
	{
		return null;
	}

	[Token(Token = "0x60006D6")]
	[Address(RVA = "0xE71EC4", Offset = "0xE71EC4", VA = "0xE71EC4", Slot = "5")]
	public void Initialize()
	{
	}

	[Token(Token = "0x60006D7")]
	[Address(RVA = "0xE71F60", Offset = "0xE71F60", VA = "0xE71F60")]
	public void ExtendLOD()
	{
	}

	[Token(Token = "0x60006D8")]
	[Address(RVA = "0xE7205C", Offset = "0xE7205C", VA = "0xE7205C")]
	public WorldZoneLODExtender()
	{
	}
}
[Token(Token = "0x2000146")]
public class WorldZoneLODExtenderState : ComponentState
{
	[Token(Token = "0x40005F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public bool m_shouldExtendLOD;

	[Token(Token = "0x60006D9")]
	[Address(RVA = "0xE71E94", Offset = "0xE71E94", VA = "0xE71E94")]
	public WorldZoneLODExtenderState(bool shouldExtend)
	{
	}
}
[Token(Token = "0x2000147")]
public class WorldZoneLODSwitcher : SaveableComponent, IInitializable
{
	[Token(Token = "0x40005F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private GameObject m_defaultLOD;

	[Token(Token = "0x40005F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private GameObject m_alternativeLOD;

	[Token(Token = "0x40005F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool m_hasSwitchedToAlternativeLOD;

	[Token(Token = "0x60006DA")]
	[Address(RVA = "0xE72064", Offset = "0xE72064", VA = "0xE72064", Slot = "4")]
	public override ComponentState CreateState()
	{
		return null;
	}

	[Token(Token = "0x60006DB")]
	[Address(RVA = "0xE720FC", Offset = "0xE720FC", VA = "0xE720FC", Slot = "5")]
	public void Initialize()
	{
	}

	[Token(Token = "0x60006DC")]
	[Address(RVA = "0xE72198", Offset = "0xE72198", VA = "0xE72198")]
	public void SwitchToAlternativeLOD()
	{
	}

	[Token(Token = "0x60006DD")]
	[Address(RVA = "0xE721E4", Offset = "0xE721E4", VA = "0xE721E4")]
	public WorldZoneLODSwitcher()
	{
	}
}
[Token(Token = "0x2000148")]
public class WorldZoneLODSwitcherState : ComponentState
{
	[Token(Token = "0x40005F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public bool m_switchedToAlternative;

	[Token(Token = "0x60006DE")]
	[Address(RVA = "0xE720CC", Offset = "0xE720CC", VA = "0xE720CC")]
	public WorldZoneLODSwitcherState(bool didSwitch)
	{
	}
}
[Token(Token = "0x2000149")]
public class SceneObject : SaveableComponent, IInitializable
{
	[Token(Token = "0x40005F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private string sceneName;

	[Token(Token = "0x60006DF")]
	[Address(RVA = "0xCC19B8", Offset = "0xCC19B8", VA = "0xCC19B8", Slot = "4")]
	public override ComponentState CreateState()
	{
		return null;
	}

	[Token(Token = "0x60006E0")]
	[Address(RVA = "0xCC1A14", Offset = "0xCC1A14", VA = "0xCC1A14", Slot = "5")]
	public void Initialize()
	{
	}

	[Token(Token = "0x60006E1")]
	[Address(RVA = "0xCC1AA8", Offset = "0xCC1AA8", VA = "0xCC1AA8")]
	public SceneObject()
	{
	}
}
[Token(Token = "0x200014A")]
public struct SpawnOperationCallbackData
{
	[Token(Token = "0x40005FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public SaveID operationId;

	[Token(Token = "0x40005FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public GameObject[] spawnedObjects;

	[Token(Token = "0x40005FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public SaveObjectBase[] saveObjects;

	[Token(Token = "0x60006E2")]
	[Address(RVA = "0xA47578", Offset = "0xA47578", VA = "0xA47578")]
	public SpawnOperationCallbackData(SaveID id, GameObject[] objects, SaveObjectBase[] saveObjs)
	{
	}
}
[Token(Token = "0x200014B")]
public class SpawnManager : MonoBehaviour
{
	[Token(Token = "0x40005FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int MaxObjsSpawnedPerFrame;

	[Token(Token = "0x40005FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static SpawnManager instance;

	[Token(Token = "0x40005FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool noSpawningUntilNextUpdate;

	[Token(Token = "0x4000600")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Queue<ObjectSpawner> spawnQueue;

	[Token(Token = "0x4000601")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private List<ObjectSpawner> currentSpawnOperations;

	[Token(Token = "0x170000CB")]
	public static int NumOperationsInQueue
	{
		[Token(Token = "0x60006EB")]
		[Address(RVA = "0xDF97F4", Offset = "0xDF97F4", VA = "0xDF97F4")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x60006E3")]
	[Address(RVA = "0xDF88DC", Offset = "0xDF88DC", VA = "0xDF88DC")]
	public static void SpawnObjectsFromSaveState(SaveableState[] states, Scene scene, OrientedPoint[] points, SaveID bundleId, SaveableBinaryDataList binaryDataList)
	{
	}

	[Token(Token = "0x60006E4")]
	[Address(RVA = "0xDF8A8C", Offset = "0xDF8A8C", VA = "0xDF8A8C")]
	public static void SpawnObjects(AssetReference[] references, [Optional] OrientedPoint[] spawnPoints, [Optional] Transform[] parents, [Optional] Action<SpawnOperationCallbackData> preInitCallback, [Optional] Action<SpawnOperationCallbackData> postInitCallback)
	{
	}

	[Token(Token = "0x60006E5")]
	[Address(RVA = "0xDF8DCC", Offset = "0xDF8DCC", VA = "0xDF8DCC")]
	public static void SpawnSingleObject(AssetReference reference, OrientedPoint spawnPoint, [Optional] Transform parent, [Optional] Action<SpawnOperationCallbackData> preInitCallback, [Optional] Action<SpawnOperationCallbackData> postInitCallback)
	{
	}

	[Token(Token = "0x60006E6")]
	[Address(RVA = "0xDF8FCC", Offset = "0xDF8FCC", VA = "0xDF8FCC")]
	public static void SpawnOperationCompleted(ObjectSpawner op)
	{
	}

	[Token(Token = "0x60006E7")]
	[Address(RVA = "0xDF90DC", Offset = "0xDF90DC", VA = "0xDF90DC")]
	public static bool NeedsUpdate()
	{
		return default(bool);
	}

	[Token(Token = "0x60006E8")]
	[Address(RVA = "0xDF926C", Offset = "0xDF926C", VA = "0xDF926C")]
	public static void CancelAllSpawnRequests()
	{
	}

	[Token(Token = "0x60006E9")]
	[Address(RVA = "0xDF937C", Offset = "0xDF937C", VA = "0xDF937C")]
	public static void CancelSpawnRequestsForBundle(SaveID bundleId)
	{
	}

	[Token(Token = "0x60006EA")]
	[Address(RVA = "0xDF9690", Offset = "0xDF9690", VA = "0xDF9690")]
	public static int GetNumItemsBeingSpawned()
	{
		return default(int);
	}

	[Token(Token = "0x60006EC")]
	[Address(RVA = "0xDF98D4", Offset = "0xDF98D4", VA = "0xDF98D4")]
	private void Awake()
	{
	}

	[Token(Token = "0x60006ED")]
	[Address(RVA = "0xDF92DC", Offset = "0xDF92DC", VA = "0xDF92DC")]
	private void CancelAllRequests()
	{
	}

	[Token(Token = "0x60006EE")]
	[Address(RVA = "0xDF9404", Offset = "0xDF9404", VA = "0xDF9404")]
	private void CancelRequestsForBundle(SaveID bundleId)
	{
	}

	[Token(Token = "0x60006EF")]
	[Address(RVA = "0xDF8994", Offset = "0xDF8994", VA = "0xDF8994")]
	private void Spawn(SaveableState[] states, Scene scene, OrientedPoint[] points, SaveID operationId, SaveableBinaryDataList binaryDataList)
	{
	}

	[Token(Token = "0x60006F0")]
	[Address(RVA = "0xDF8B34", Offset = "0xDF8B34", VA = "0xDF8B34")]
	private void Spawn(AssetReference[] refs, OrientedPoint[] spawnPoints, Transform[] parentTransforms, Action<SpawnOperationCallbackData> preInitCallback, Action<SpawnOperationCallbackData> postInitCallback)
	{
	}

	[Token(Token = "0x60006F1")]
	[Address(RVA = "0xDF9D34", Offset = "0xDF9D34", VA = "0xDF9D34")]
	private static string GetDebugSpawnOpName()
	{
		return null;
	}

	[Token(Token = "0x60006F2")]
	[Address(RVA = "0xDF9044", Offset = "0xDF9044", VA = "0xDF9044")]
	private void SpawnOpCompleted(ObjectSpawner op)
	{
	}

	[Token(Token = "0x60006F3")]
	[Address(RVA = "0xDF9D7C", Offset = "0xDF9D7C", VA = "0xDF9D7C")]
	public static void UpdateSpawnQueue()
	{
	}

	[Token(Token = "0x60006F4")]
	[Address(RVA = "0xDF9E54", Offset = "0xDF9E54", VA = "0xDF9E54")]
	private void UpdateQueue()
	{
	}

	[Token(Token = "0x60006F5")]
	[Address(RVA = "0xDF91BC", Offset = "0xDF91BC", VA = "0xDF91BC")]
	private bool QueueIsEmpty()
	{
		return default(bool);
	}

	[Token(Token = "0x60006F6")]
	[Address(RVA = "0xDF9214", Offset = "0xDF9214", VA = "0xDF9214")]
	private bool SpawningIsInProgress()
	{
		return default(bool);
	}

	[Token(Token = "0x60006F7")]
	[Address(RVA = "0xDF9FC0", Offset = "0xDF9FC0", VA = "0xDF9FC0")]
	public static void QuickSpawnObjectDebug(string address, OrientedPoint point)
	{
	}

	[Token(Token = "0x60006F8")]
	[Address(RVA = "0xDFA0EC", Offset = "0xDFA0EC", VA = "0xDFA0EC")]
	private static void OnDebugObjectSpawned(AsyncOperationHandle<GameObject> handle)
	{
	}

	[Token(Token = "0x60006F9")]
	[Address(RVA = "0xDFA6F4", Offset = "0xDFA6F4", VA = "0xDFA6F4")]
	private static void OnPostInitDebugSpawn(SpawnOperationCallbackData data)
	{
	}

	[Token(Token = "0x60006FA")]
	[Address(RVA = "0xDFA2D0", Offset = "0xDFA2D0", VA = "0xDFA2D0")]
	public static void SetupSpawnedObjects(LoadedSceneBundle bundle, Scene scene, OrientedPoint[] spawnPoints, GameObject[] results, [Optional] Action<SpawnOperationCallbackData> preInitCallback, [Optional] Action<SpawnOperationCallbackData> postInitCallback)
	{
	}

	[Token(Token = "0x60006FB")]
	[Address(RVA = "0xDFA7F4", Offset = "0xDFA7F4", VA = "0xDFA7F4")]
	public static void SetScene(Scene scene, GameObject[] results)
	{
	}

	[Token(Token = "0x60006FC")]
	[Address(RVA = "0xDFA97C", Offset = "0xDFA97C", VA = "0xDFA97C")]
	public static void SetTransforms(OrientedPoint[] transforms, GameObject[] results)
	{
	}

	[Token(Token = "0x60006FD")]
	[Address(RVA = "0xDFAAF0", Offset = "0xDFAAF0", VA = "0xDFAAF0")]
	public static void SetupStateForSpawnedObjects(List<SaveObjectBase> saveables)
	{
	}

	[Token(Token = "0x60006FE")]
	[Address(RVA = "0xDFAC38", Offset = "0xDFAC38", VA = "0xDFAC38")]
	public SpawnManager()
	{
	}
}
[Token(Token = "0x200014C")]
public class ObjectSpawner
{
	[Token(Token = "0x4000602")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public SaveID sceneBundleId;

	[Token(Token = "0x4000603")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Scene scene;

	[Token(Token = "0x4000604")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Action<SpawnOperationCallbackData> preInitCallback;

	[Token(Token = "0x4000605")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Action<SpawnOperationCallbackData> postInitCallback;

	[Token(Token = "0x4000606")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public AssetReference[] references;

	[Token(Token = "0x4000607")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public OrientedPoint[] transforms;

	[Token(Token = "0x4000608")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Transform[] parents;

	[Token(Token = "0x4000609")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject[] results;

	[Token(Token = "0x400060A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public string debugName;

	[Token(Token = "0x400060B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public SpawnUtility.SpawnOperationTracker tracker;

	[Token(Token = "0x400060C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private int currentSpawnIndex;

	[Token(Token = "0x6000700")]
	[Address(RVA = "0xD720B8", Offset = "0xD720B8", VA = "0xD720B8")]
	public ObjectSpawner()
	{
	}

	[Token(Token = "0x6000701")]
	[Address(RVA = "0xD720C0", Offset = "0xD720C0", VA = "0xD720C0")]
	public ObjectSpawner(string debugName, SaveID bundleId, AssetReference[] refs, Scene scene, [Optional] OrientedPoint[] points, [Optional] Transform[] parents, [Optional] Action<SpawnOperationCallbackData> preInitCallback, [Optional] Action<SpawnOperationCallbackData> postInitCallback)
	{
	}

	[Token(Token = "0x6000702")]
	[Address(RVA = "0xD721E8", Offset = "0xD721E8", VA = "0xD721E8")]
	public void StartOperation()
	{
	}

	[Token(Token = "0x6000703")]
	[Address(RVA = "0xD72294", Offset = "0xD72294", VA = "0xD72294", Slot = "4")]
	public virtual bool UpdateOperation()
	{
		return default(bool);
	}

	[Token(Token = "0x6000704")]
	[Address(RVA = "0xD723BC", Offset = "0xD723BC", VA = "0xD723BC", Slot = "5")]
	public virtual void OnObjectsSpawned()
	{
	}

	[Token(Token = "0x6000705")]
	[Address(RVA = "0xD725B8", Offset = "0xD725B8", VA = "0xD725B8")]
	protected void AddSpawnedObjectsToLoadedSceneBundle(int startIndex, int num)
	{
	}
}
[Token(Token = "0x200014D")]
public class SavedObjectSpawner : ObjectSpawner
{
	[Token(Token = "0x400060D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public SaveableState[] saveStates;

	[Token(Token = "0x400060E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private int objectsLeftToProcess;

	[Token(Token = "0x400060F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private int objectsLeftToAddToBundle;

	[Token(Token = "0x4000610")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private SaveableBinaryDataList binaryDataList;

	[Token(Token = "0x6000706")]
	[Address(RVA = "0xCBECF0", Offset = "0xCBECF0", VA = "0xCBECF0")]
	public SavedObjectSpawner(SaveID bundleId, SaveableState[] states, Scene scene, SaveableBinaryDataList binaryDataList, [Optional] OrientedPoint[] points)
	{
	}

	[Token(Token = "0x6000707")]
	[Address(RVA = "0xCBEEAC", Offset = "0xCBEEAC", VA = "0xCBEEAC", Slot = "5")]
	public override void OnObjectsSpawned()
	{
	}

	[Token(Token = "0x6000708")]
	[Address(RVA = "0xCBEF50", Offset = "0xCBEF50", VA = "0xCBEF50", Slot = "4")]
	public override bool UpdateOperation()
	{
		return default(bool);
	}

	[Token(Token = "0x6000709")]
	[Address(RVA = "0xCBF0C8", Offset = "0xCBF0C8", VA = "0xCBF0C8")]
	private void SetObjectStates(int startIndex, int num)
	{
	}
}
[Token(Token = "0x200014E")]
public static class SpawnUtility
{
	[Token(Token = "0x200014F")]
	public class AsyncOperationTracker<T>
	{
		[Token(Token = "0x4000612")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal int operationsHandled;

		[Token(Token = "0x4000613")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal AsyncOperationHandle<T>[] handles;

		[Token(Token = "0x6000711")]
		internal bool IsComplete()
		{
			return default(bool);
		}

		[Token(Token = "0x6000712")]
		public AsyncOperationTracker()
		{
		}
	}

	[Token(Token = "0x2000150")]
	public class SpawnOperationTracker : AsyncOperationTracker<GameObject>
	{
		[Token(Token = "0x4000614")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal Action callBack;

		[Token(Token = "0x4000615")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		internal ObjectSpawner spawnOp;

		[Token(Token = "0x6000713")]
		[Address(RVA = "0xDFB1B8", Offset = "0xDFB1B8", VA = "0xDFB1B8")]
		public SpawnOperationTracker(ObjectSpawner so, Action cb)
		{
		}

		[Token(Token = "0x6000714")]
		[Address(RVA = "0xDFAE38", Offset = "0xDFAE38", VA = "0xDFAE38")]
		public void FinishUp()
		{
		}
	}

	[Token(Token = "0x4000611")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Dictionary<AsyncOperationHandle<GameObject>, SpawnOperationTracker> spawnOperationTrackerDictionary;

	[Token(Token = "0x600070A")]
	[Address(RVA = "0xDFAD3C", Offset = "0xDFAD3C", VA = "0xDFAD3C")]
	private static void OnSpawnOperationCompleted(AsyncOperationHandle<GameObject> obj)
	{
	}

	[Token(Token = "0x600070B")]
	[Address(RVA = "0xDFB004", Offset = "0xDFB004", VA = "0xDFB004")]
	private static void RemoveTracker(SpawnOperationTracker tracker)
	{
	}

	[Token(Token = "0x600070C")]
	[Address(RVA = "0xDFB0F4", Offset = "0xDFB0F4", VA = "0xDFB0F4")]
	public static SpawnOperationTracker StartSpawningObjects(ObjectSpawner spawner, Action callback)
	{
		return null;
	}

	[Token(Token = "0x600070D")]
	[Address(RVA = "0xDFB26C", Offset = "0xDFB26C", VA = "0xDFB26C")]
	public static void SpawnObjects(ObjectSpawner spawner, int startIndex, int num)
	{
	}

	[Token(Token = "0x600070E")]
	[Address(RVA = "0xDF9B44", Offset = "0xDF9B44", VA = "0xDF9B44")]
	public static void CancelOperation(SpawnOperationTracker tracker)
	{
	}

	[Token(Token = "0x600070F")]
	[Address(RVA = "0xDF99B8", Offset = "0xDF99B8", VA = "0xDF99B8")]
	public static void CancelAllOperations()
	{
	}
}
[Token(Token = "0x2000151")]
public class NeatLog
{
	[Token(Token = "0x6000715")]
	[Address(RVA = "0xD54914", Offset = "0xD54914", VA = "0xD54914")]
	[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x989328", Offset = "0x989328")]
	[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x989328", Offset = "0x989328")]
	public static void PrintError(string msg, [Optional] UnityEngine.Object context)
	{
	}

	[Token(Token = "0x6000716")]
	[Address(RVA = "0xD5FFAC", Offset = "0xD5FFAC", VA = "0xD5FFAC")]
	public static void PrintFinal(string msg, [Optional] UnityEngine.Object context)
	{
	}
}
[Token(Token = "0x2000152")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x971A64", Offset = "0x971A64")]
public class CraftingBubble : MonoBehaviour, IInitializable, IValidateCustom, IValidate
{
	[Token(Token = "0x2000153")]
	public class BubbledItem
	{
		[Token(Token = "0x4000636")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Stashable stashable;

		[Token(Token = "0x4000637")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Harvestable harvestable;

		[Token(Token = "0x4000638")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public OrientedPointSmooth positioner;

		[Token(Token = "0x170000CD")]
		public CraftingSystem.ResourceType ResourceType
		{
			[Token(Token = "0x6000743")]
			[Address(RVA = "0xC4C004", Offset = "0xC4C004", VA = "0xC4C004")]
			get
			{
				return default(CraftingSystem.ResourceType);
			}
		}

		[Token(Token = "0x6000741")]
		[Address(RVA = "0xC4AB34", Offset = "0xC4AB34", VA = "0xC4AB34")]
		public BubbledItem(Stashable stashable, Harvestable harvestable, OrientedPointSmooth positioner)
		{
		}

		[Token(Token = "0x6000742")]
		[Address(RVA = "0xC4B22C", Offset = "0xC4B22C", VA = "0xC4B22C")]
		public void UpdateItemPosition()
		{
		}
	}

	[Token(Token = "0x2000154")]
	private struct HoveringStashable
	{
		[Token(Token = "0x4000639")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x977660", Offset = "0x977660")]
		private Stashable <Stashable>k__BackingField;

		[Token(Token = "0x400063A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x977670", Offset = "0x977670")]
		private bool <IsHovering>k__BackingField;

		[Token(Token = "0x400063B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x977680", Offset = "0x977680")]
		private bool <IsResolved>k__BackingField;

		[Token(Token = "0x170000CE")]
		public Stashable Stashable
		{
			[Token(Token = "0x6000745")]
			[Address(RVA = "0xA43858", Offset = "0xA43858", VA = "0xA43858")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9893C8", Offset = "0x9893C8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000746")]
			[Address(RVA = "0xA43860", Offset = "0xA43860", VA = "0xA43860")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9893D8", Offset = "0x9893D8")]
			set
			{
			}
		}

		[Token(Token = "0x170000CF")]
		public bool IsHovering
		{
			[Token(Token = "0x6000747")]
			[Address(RVA = "0xA43868", Offset = "0xA43868", VA = "0xA43868")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9893E8", Offset = "0x9893E8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000748")]
			[Address(RVA = "0xA43870", Offset = "0xA43870", VA = "0xA43870")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9893F8", Offset = "0x9893F8")]
			set
			{
			}
		}

		[Token(Token = "0x170000D0")]
		public bool IsResolved
		{
			[Token(Token = "0x6000749")]
			[Address(RVA = "0xA4387C", Offset = "0xA4387C", VA = "0xA4387C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x989408", Offset = "0x989408")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600074A")]
			[Address(RVA = "0xA43884", Offset = "0xA43884", VA = "0xA43884")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x989418", Offset = "0x989418")]
			set
			{
			}
		}

		[Token(Token = "0x6000744")]
		[Address(RVA = "0xA4382C", Offset = "0xA4382C", VA = "0xA4382C")]
		public HoveringStashable(Stashable stashable)
		{
		}

		[Token(Token = "0x600074B")]
		[Address(RVA = "0xA43890", Offset = "0xA43890", VA = "0xA43890")]
		public void Resolve(bool isHovering)
		{
		}
	}

	[Token(Token = "0x2000155")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x971AC8", Offset = "0x971AC8")]
	private sealed class <>c__DisplayClass59_0
	{
		[Token(Token = "0x400063C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Stashable stashable;

		[Token(Token = "0x600074C")]
		[Address(RVA = "0xC4AB2C", Offset = "0xC4AB2C", VA = "0xC4AB2C")]
		public <>c__DisplayClass59_0()
		{
		}

		[Token(Token = "0x600074D")]
		[Address(RVA = "0xC4BEEC", Offset = "0xC4BEEC", VA = "0xC4BEEC")]
		internal bool <Contains>b__0(BubbledItem bi)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x2000156")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x971AD8", Offset = "0x971AD8")]
	private sealed class <>c__DisplayClass62_0
	{
		[Token(Token = "0x400063D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Grabbable grabbable;

		[Token(Token = "0x600074E")]
		[Address(RVA = "0xC4AF7C", Offset = "0xC4AF7C", VA = "0xC4AF7C")]
		public <>c__DisplayClass62_0()
		{
		}

		[Token(Token = "0x600074F")]
		[Address(RVA = "0xC4BF74", Offset = "0xC4BF74", VA = "0xC4BF74")]
		internal bool <OnPreGrabItem>b__0(BubbledItem bi)
		{
			return default(bool);
		}
	}

	[Serializable]
	[Token(Token = "0x2000157")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x971AE8", Offset = "0x971AE8")]
	private sealed class <>c
	{
		[Token(Token = "0x400063E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x400063F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Action <>9__75_0;

		[Token(Token = "0x4000640")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static Action <>9__75_1;

		[Token(Token = "0x6000751")]
		[Address(RVA = "0xC4BEDC", Offset = "0xC4BEDC", VA = "0xC4BEDC")]
		public <>c()
		{
		}

		[Token(Token = "0x6000752")]
		[Address(RVA = "0xC4BEE4", Offset = "0xC4BEE4", VA = "0xC4BEE4")]
		internal void <.ctor>b__75_0()
		{
		}

		[Token(Token = "0x6000753")]
		[Address(RVA = "0xC4BEE8", Offset = "0xC4BEE8", VA = "0xC4BEE8")]
		internal void <.ctor>b__75_1()
		{
		}
	}

	[Token(Token = "0x4000616")]
	private const float UpdateInterval = 0.2f;

	[Token(Token = "0x4000617")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private int HoverShaderId;

	[Token(Token = "0x4000618")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private float radiusItem;

	[Token(Token = "0x4000619")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private float radiusBubble;

	[Token(Token = "0x400061A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	private bool alwaysUseSpiralPlacement;

	[Token(Token = "0x400061B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
	[SerializeField]
	private bool placeItemsIn3d;

	[Token(Token = "0x400061C")]
	private const float ITEM_SPACING = 0.005f;

	[Token(Token = "0x400061D")]
	private const float ITEM_SMOOTHING = 5f;

	[Token(Token = "0x400061E")]
	private const float ITEM_MIN_DIST_FROM_CENTER = 0.09f;

	[Token(Token = "0x400061F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Vector2 WOBBLE_PHASE;

	[Token(Token = "0x4000620")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static Vector2 WOBBLE_PHASE_OFFSET;

	[NonSerialized]
	[Token(Token = "0x4000621")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public List<BubbledItem> items;

	[Token(Token = "0x4000622")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public MeshRenderer bubbleRenderer;

	[Token(Token = "0x4000623")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Material m_material;

	[Token(Token = "0x4000624")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool m_hasMaterialReference;

	[Token(Token = "0x4000625")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
	private bool m_hasBubble;

	[Token(Token = "0x4000626")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9775F8", Offset = "0x9775F8")]
	public UnityEvent OnAddedItem;

	[Token(Token = "0x4000627")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public UnityEvent OnRemovedItem;

	[Token(Token = "0x4000628")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public UnityEvent OnEnterBubble;

	[Token(Token = "0x4000629")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public UnityEvent OnExitBubble;

	[Token(Token = "0x400062A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Action OnRewardRecieved;

	[Token(Token = "0x400062D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Stashable stashableHeldInBubble;

	[Token(Token = "0x400062E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	private ObjectContainer container;

	[Token(Token = "0x400062F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private bool initialized;

	[Token(Token = "0x4000630")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private OptimizedCollection<Stashable> m_hoveringStashables;

	[Token(Token = "0x4000631")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private OptimizedCollection<HoveringStashable> m_hoveringStashablesToResolve;

	[Token(Token = "0x4000632")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private Collider[] m_overlappingColliders;

	[Token(Token = "0x4000633")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private float m_timeSinceUpdated;

	[Token(Token = "0x4000634")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private SphereCollider m_sphereCollider;

	[Token(Token = "0x4000635")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private bool m_forceDisabled;

	[Token(Token = "0x170000CC")]
	public int ItemCount
	{
		[Token(Token = "0x6000717")]
		[Address(RVA = "0xC49418", Offset = "0xC49418", VA = "0xC49418")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x14000010")]
	[HideInInspector]
	public event Action OnStashedItemInBubble
	{
		[Token(Token = "0x6000718")]
		[Address(RVA = "0xC49468", Offset = "0xC49468", VA = "0xC49468")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x989388", Offset = "0x989388")]
		add
		{
		}
		[Token(Token = "0x6000719")]
		[Address(RVA = "0xC4950C", Offset = "0xC4950C", VA = "0xC4950C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x989398", Offset = "0x989398")]
		remove
		{
		}
	}

	[Token(Token = "0x14000011")]
	[HideInInspector]
	public event Action OnStashedItemsUpdate
	{
		[Token(Token = "0x600071A")]
		[Address(RVA = "0xC495B0", Offset = "0xC495B0", VA = "0xC495B0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9893A8", Offset = "0x9893A8")]
		add
		{
		}
		[Token(Token = "0x600071B")]
		[Address(RVA = "0xC49654", Offset = "0xC49654", VA = "0xC49654")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9893B8", Offset = "0x9893B8")]
		remove
		{
		}
	}

	[Token(Token = "0x600071C")]
	[Address(RVA = "0xC496F8", Offset = "0xC496F8", VA = "0xC496F8")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600071D")]
	[Address(RVA = "0xC49758", Offset = "0xC49758", VA = "0xC49758")]
	private void Update()
	{
	}

	[Token(Token = "0x600071E")]
	[Address(RVA = "0xC496FC", Offset = "0xC496FC", VA = "0xC496FC")]
	private void RemoveAllHovering()
	{
	}

	[Token(Token = "0x600071F")]
	[Address(RVA = "0xC49B50", Offset = "0xC49B50", VA = "0xC49B50")]
	private void UpdateHoveringStashables()
	{
	}

	[Token(Token = "0x6000720")]
	[Address(RVA = "0xC49D7C", Offset = "0xC49D7C", VA = "0xC49D7C")]
	private int ClearNonHoveringStashables()
	{
		return default(int);
	}

	[Token(Token = "0x6000721")]
	[Address(RVA = "0xC49BDC", Offset = "0xC49BDC", VA = "0xC49BDC")]
	private void AddHoveringStashableToResolve(int length)
	{
	}

	[Token(Token = "0x6000722")]
	[Address(RVA = "0xC49ED8", Offset = "0xC49ED8", VA = "0xC49ED8")]
	private void ResolveHoveringStashable(Stashable stashable)
	{
	}

	[Token(Token = "0x6000723")]
	[Address(RVA = "0xC4A004", Offset = "0xC4A004", VA = "0xC4A004", Slot = "5")]
	protected virtual bool CanBeAdded(Stashable stashable, bool canBeHeld)
	{
		return default(bool);
	}

	[Token(Token = "0x6000724")]
	[Address(RVA = "0xC4A044", Offset = "0xC4A044", VA = "0xC4A044")]
	private bool IsStashableValid(Stashable stashable)
	{
		return default(bool);
	}

	[Token(Token = "0x6000725")]
	[Address(RVA = "0xC4A1A8", Offset = "0xC4A1A8", VA = "0xC4A1A8")]
	private bool IsHeldStateValid(Stashable stashable, bool canBeHeld)
	{
		return default(bool);
	}

	[Token(Token = "0x6000726")]
	[Address(RVA = "0xC4A308", Offset = "0xC4A308", VA = "0xC4A308")]
	private Stashable GetStashableFromCollider(Collider other)
	{
		return null;
	}

	[Token(Token = "0x6000727")]
	[Address(RVA = "0xC4A380", Offset = "0xC4A380", VA = "0xC4A380")]
	private Grabbable GetGrabbableFromCollider(Collider other)
	{
		return null;
	}

	[Token(Token = "0x6000728")]
	[Address(RVA = "0xC49CC4", Offset = "0xC49CC4", VA = "0xC49CC4")]
	private void UpdateTriggerCollision()
	{
	}

	[Token(Token = "0x6000729")]
	[Address(RVA = "0xC4A3F8", Offset = "0xC4A3F8", VA = "0xC4A3F8")]
	private void OnTriggerUpdate(Collider other)
	{
	}

	[Token(Token = "0x600072A")]
	[Address(RVA = "0xC4A7E8", Offset = "0xC4A7E8", VA = "0xC4A7E8")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x600072B")]
	[Address(RVA = "0xC4A950", Offset = "0xC4A950", VA = "0xC4A950")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x600072C")]
	[Address(RVA = "0xC49E60", Offset = "0xC49E60", VA = "0xC49E60")]
	private void UpdateHoveringEffect()
	{
	}

	[Token(Token = "0x600072D")]
	[Address(RVA = "0xC4AA88", Offset = "0xC4AA88", VA = "0xC4AA88")]
	private void SetHoveringEffect(bool isHovering)
	{
	}

	[Token(Token = "0x600072E")]
	[Address(RVA = "0xC4AB28", Offset = "0xC4AB28", VA = "0xC4AB28", Slot = "6")]
	protected virtual void HandleInvalidGrabbable(Grabbable grabbable)
	{
	}

	[Token(Token = "0x600072F")]
	[Address(RVA = "0xC4A23C", Offset = "0xC4A23C", VA = "0xC4A23C")]
	private bool Contains(Stashable stashable)
	{
		return default(bool);
	}

	[Token(Token = "0x6000730")]
	[Address(RVA = "0xC4A5DC", Offset = "0xC4A5DC", VA = "0xC4A5DC")]
	public void AddItem(Stashable item)
	{
	}

	[Token(Token = "0x6000731")]
	[Address(RVA = "0xC4AB9C", Offset = "0xC4AB9C", VA = "0xC4AB9C")]
	private void AddChildStashables(Stashable item)
	{
	}

	[Token(Token = "0x6000732")]
	[Address(RVA = "0xC4AE88", Offset = "0xC4AE88", VA = "0xC4AE88")]
	private void OnPreGrabItem(Grabbable grabbable)
	{
	}

	[Token(Token = "0x6000733")]
	[Address(RVA = "0xC4AF84", Offset = "0xC4AF84", VA = "0xC4AF84")]
	public void RemoveItem(BubbledItem item, bool itemWillBeDestroyed = false)
	{
	}

	[Token(Token = "0x6000734")]
	[Address(RVA = "0xC497C4", Offset = "0xC497C4", VA = "0xC497C4")]
	private void UpdateTargetPositions(bool updateSmoothing)
	{
	}

	[Token(Token = "0x6000735")]
	[Address(RVA = "0xC49AAC", Offset = "0xC49AAC", VA = "0xC49AAC")]
	private void UpdateItemPositions()
	{
	}

	[Token(Token = "0x6000736")]
	[Address(RVA = "0xC4B354", Offset = "0xC4B354", VA = "0xC4B354")]
	public OrientedPoint GetTargetPosition(int i, int count)
	{
		return default(OrientedPoint);
	}

	[Token(Token = "0x6000737")]
	[Address(RVA = "0xC4B0DC", Offset = "0xC4B0DC", VA = "0xC4B0DC")]
	private OrientedPoint GetTargetPosition3d(int i, int count)
	{
		return default(OrientedPoint);
	}

	[Token(Token = "0x6000738")]
	[Address(RVA = "0xC4B624", Offset = "0xC4B624", VA = "0xC4B624", Slot = "7")]
	public virtual void Initialize()
	{
	}

	[Token(Token = "0x6000739")]
	[Address(RVA = "0xC4B884", Offset = "0xC4B884", VA = "0xC4B884")]
	private void TryAddSphereCollider()
	{
	}

	[Token(Token = "0x600073A")]
	[Address(RVA = "0xC4B98C", Offset = "0xC4B98C", VA = "0xC4B98C")]
	public void ForceEnable()
	{
	}

	[Token(Token = "0x600073B")]
	[Address(RVA = "0xC4BA4C", Offset = "0xC4BA4C", VA = "0xC4BA4C")]
	public void ForceDisable()
	{
	}

	[Token(Token = "0x600073C")]
	[Address(RVA = "0xC4B994", Offset = "0xC4B994", VA = "0xC4B994")]
	public void Enable()
	{
	}

	[Token(Token = "0x600073D")]
	[Address(RVA = "0xC4BA58", Offset = "0xC4BA58", VA = "0xC4BA58")]
	public void Disable()
	{
	}

	[Token(Token = "0x600073E")]
	[Address(RVA = "0xC4BAF0", Offset = "0xC4BAF0", VA = "0xC4BAF0")]
	public void RemoveAllItemsFromBubble()
	{
	}

	[Token(Token = "0x600073F")]
	[Address(RVA = "0xC4BB60", Offset = "0xC4BB60", VA = "0xC4BB60")]
	public CraftingBubble()
	{
	}
}
[Token(Token = "0x2000158")]
public class CraftingCanvas : MonoBehaviour
{
	[Token(Token = "0x4000641")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Dictionary<CraftingSystem.ResourceType, List<CraftingCanvasSprite>> CanvasSprites;

	[Token(Token = "0x4000642")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private List<CraftingIngredient> BubbleIngredientList;

	[Token(Token = "0x4000643")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private UnityEvent m_onCorrectIngredient;

	[Token(Token = "0x4000644")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9776A0", Offset = "0x9776A0")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9776A0", Offset = "0x9776A0")]
	private Transform m_root;

	[Token(Token = "0x4000645")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private float m_popOutDuration;

	[Token(Token = "0x4000646")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private int m_previouslyCompleted;

	[Token(Token = "0x4000647")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool m_shouldUpdate;

	[Token(Token = "0x4000648")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private CraftingCanvasSprite[] m_spriteList;

	[Token(Token = "0x6000754")]
	[Address(RVA = "0xC4C0D4", Offset = "0xC4C0D4", VA = "0xC4C0D4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000755")]
	[Address(RVA = "0xC4C0D8", Offset = "0xC4C0D8", VA = "0xC4C0D8")]
	public void CollectCanvasSprites()
	{
	}

	[Token(Token = "0x6000756")]
	[Address(RVA = "0xC4C250", Offset = "0xC4C250", VA = "0xC4C250")]
	public void UpdateIngredientList(List<CraftingIngredient> newIngredientList)
	{
	}

	[Token(Token = "0x6000757")]
	[Address(RVA = "0xC4C650", Offset = "0xC4C650", VA = "0xC4C650")]
	public void Activate()
	{
	}

	[Token(Token = "0x6000758")]
	[Address(RVA = "0xC4C65C", Offset = "0xC4C65C", VA = "0xC4C65C")]
	public void Deactivate()
	{
	}

	[Token(Token = "0x6000759")]
	[Address(RVA = "0xC4C664", Offset = "0xC4C664", VA = "0xC4C664")]
	private void HideAllSprites()
	{
	}

	[Token(Token = "0x600075A")]
	[Address(RVA = "0xC4C6F4", Offset = "0xC4C6F4", VA = "0xC4C6F4")]
	public void PopOut()
	{
	}

	[Token(Token = "0x600075B")]
	[Address(RVA = "0xC4C7B8", Offset = "0xC4C7B8", VA = "0xC4C7B8")]
	private void OnBubbleRemoved()
	{
	}

	[Token(Token = "0x600075C")]
	[Address(RVA = "0xC4C878", Offset = "0xC4C878", VA = "0xC4C878")]
	public CraftingCanvas()
	{
	}
}
[Token(Token = "0x2000159")]
public class CraftingCanvasSprite : MonoBehaviour
{
	[Token(Token = "0x4000649")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public CraftingSystem.ResourceType SpriteResourceType;

	[Token(Token = "0x400064A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private bool IsSpriteVisible;

	[Token(Token = "0x170000D1")]
	public bool IsVisible
	{
		[Token(Token = "0x600075D")]
		[Address(RVA = "0xC4C938", Offset = "0xC4C938", VA = "0xC4C938")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x600075E")]
	[Address(RVA = "0xC4C5F4", Offset = "0xC4C5F4", VA = "0xC4C5F4")]
	public void SetSpriteVisible(bool newVisible)
	{
	}

	[Token(Token = "0x600075F")]
	[Address(RVA = "0xC4C940", Offset = "0xC4C940", VA = "0xC4C940")]
	public CraftingCanvasSprite()
	{
	}
}
[Token(Token = "0x200015A")]
public class CraftingMachine : MonoBehaviour
{
	[Token(Token = "0x400064B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x977720", Offset = "0x977720")]
	public UnityEvent OnCraftingSuccessful;

	[Token(Token = "0x400064C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public UnityEvent OnCraftingFailed;

	[Token(Token = "0x400064D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private bool automaticallyTryToCraft;

	[Token(Token = "0x400064E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	[SerializeField]
	private bool m_spawnCraftedItem;

	[Token(Token = "0x400064F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A")]
	[SerializeField]
	private bool m_requiresExactAmountOfResources;

	[Token(Token = "0x4000650")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[SerializeField]
	private CraftingSystem.RecipeCollectionType recipeCollectionType;

	[Token(Token = "0x4000651")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private CraftingBubble bubble;

	[Token(Token = "0x4000652")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private Rotatable2 handle;

	[Token(Token = "0x4000653")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private List<CraftingIngredient> currentIngredients;

	[Token(Token = "0x4000654")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public CraftingCanvas ConnectedCanvas;

	[Token(Token = "0x4000655")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool m_initialized;

	[Token(Token = "0x6000760")]
	[Address(RVA = "0xC4CAE0", Offset = "0xC4CAE0", VA = "0xC4CAE0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000761")]
	[Address(RVA = "0xC4CC18", Offset = "0xC4CC18", VA = "0xC4CC18")]
	public void TryInitialize()
	{
	}

	[Token(Token = "0x6000762")]
	[Address(RVA = "0xC4CDE4", Offset = "0xC4CDE4", VA = "0xC4CDE4")]
	private void CollectIngredients(ref List<CraftingIngredient> ingredients)
	{
	}

	[Token(Token = "0x6000763")]
	[Address(RVA = "0xC4D10C", Offset = "0xC4D10C", VA = "0xC4D10C")]
	private CraftingRecipe GetCraftableRecipe()
	{
		return null;
	}

	[Token(Token = "0x6000764")]
	[Address(RVA = "0xC4D2F4", Offset = "0xC4D2F4", VA = "0xC4D2F4")]
	private bool TryToCraftSomething()
	{
		return default(bool);
	}

	[Token(Token = "0x6000765")]
	[Address(RVA = "0xC4D814", Offset = "0xC4D814", VA = "0xC4D814")]
	public void Debug_PerformSuccessfulCraft()
	{
	}

	[Token(Token = "0x6000766")]
	[Address(RVA = "0xC4D658", Offset = "0xC4D658", VA = "0xC4D658")]
	public void PerformSuccessfulCraft(CraftingRecipe recipe)
	{
	}

	[Token(Token = "0x6000767")]
	[Address(RVA = "0xC4DA30", Offset = "0xC4DA30", VA = "0xC4DA30")]
	private void OnCraftedItemSpawned(SpawnOperationCallbackData data)
	{
	}

	[Token(Token = "0x6000768")]
	[Address(RVA = "0xC4D470", Offset = "0xC4D470", VA = "0xC4D470")]
	private bool ConsumeItemOfType(CraftingSystem.ResourceType resourceType)
	{
		return default(bool);
	}

	[Token(Token = "0x6000769")]
	[Address(RVA = "0xC4DD48", Offset = "0xC4DD48", VA = "0xC4DD48")]
	public void LeverPulled(Rotatable2 handle)
	{
	}

	[Token(Token = "0x600076A")]
	[Address(RVA = "0xC4DE44", Offset = "0xC4DE44", VA = "0xC4DE44")]
	public void OnStashedItemsUpdate()
	{
	}

	[Token(Token = "0x600076B")]
	[Address(RVA = "0xC4DEEC", Offset = "0xC4DEEC", VA = "0xC4DEEC")]
	private void CraftAutomatically()
	{
	}

	[Token(Token = "0x600076C")]
	[Address(RVA = "0xC4DDF8", Offset = "0xC4DDF8", VA = "0xC4DDF8")]
	private bool TryCraft()
	{
		return default(bool);
	}

	[Token(Token = "0x600076D")]
	[Address(RVA = "0xC4DEF0", Offset = "0xC4DEF0", VA = "0xC4DEF0")]
	public CraftingMachine()
	{
	}
}
[Serializable]
[Token(Token = "0x200015B")]
public class CraftingIngredient
{
	[Token(Token = "0x4000656")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[SerializeField]
	private CraftingSystem.ResourceTypeEnum resourceType;

	[Token(Token = "0x4000657")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private int amount;

	[Token(Token = "0x170000D2")]
	public CraftingSystem.ResourceType Resource
	{
		[Token(Token = "0x6000772")]
		[Address(RVA = "0xC4C5A4", Offset = "0xC4C5A4", VA = "0xC4C5A4")]
		get
		{
			return default(CraftingSystem.ResourceType);
		}
	}

	[Token(Token = "0x170000D3")]
	public int Amount
	{
		[Token(Token = "0x6000773")]
		[Address(RVA = "0xC4CAD8", Offset = "0xC4CAD8", VA = "0xC4CAD8")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x600076E")]
	[Address(RVA = "0xC4C950", Offset = "0xC4C950", VA = "0xC4C950")]
	public CraftingIngredient(int amount = 0)
	{
	}

	[Token(Token = "0x600076F")]
	[Address(RVA = "0xC4CA4C", Offset = "0xC4CA4C", VA = "0xC4CA4C")]
	public void Init(CraftingSystem.ResourceType resource, int amount)
	{
	}

	[Token(Token = "0x6000770")]
	[Address(RVA = "0xC4CAC0", Offset = "0xC4CAC0", VA = "0xC4CAC0")]
	public void IncreaseAmount()
	{
	}

	[Token(Token = "0x6000771")]
	[Address(RVA = "0xC4CAD0", Offset = "0xC4CAD0", VA = "0xC4CAD0")]
	public void SetAmount(int amount)
	{
	}
}
[Token(Token = "0x200015C")]
public class CraftingRecipe : ScriptableObject
{
	[Token(Token = "0x4000658")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	public string itemName;

	[Token(Token = "0x4000659")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9777E8", Offset = "0x9777E8")]
	[SerializeField]
	private CraftingSystem.RecipeCollectionType[] recipeCollections;

	[Token(Token = "0x400065A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x977834", Offset = "0x977834")]
	[AttributeAttribute(Name = "ContextMenuItemAttribute", RVA = "0x977834", Offset = "0x977834")]
	private CraftingIngredient[] ingredients;

	[Token(Token = "0x400065B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9778B8", Offset = "0x9778B8")]
	private int numResultingItems;

	[Token(Token = "0x400065C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private AssetReference prefabToSpawnReference;

	[Token(Token = "0x170000D4")]
	public AssetReference Prefab
	{
		[Token(Token = "0x6000774")]
		[Address(RVA = "0xC4DF08", Offset = "0xC4DF08", VA = "0xC4DF08")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000D5")]
	public int NumItemsToCraft
	{
		[Token(Token = "0x6000775")]
		[Address(RVA = "0xC4DF10", Offset = "0xC4DF10", VA = "0xC4DF10")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x170000D6")]
	public CraftingIngredient[] Ingredients
	{
		[Token(Token = "0x6000776")]
		[Address(RVA = "0xC4DF18", Offset = "0xC4DF18", VA = "0xC4DF18")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000D7")]
	public CraftingSystem.RecipeCollectionType[] RecipeCollections
	{
		[Token(Token = "0x6000777")]
		[Address(RVA = "0xC4DF20", Offset = "0xC4DF20", VA = "0xC4DF20")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000778")]
	[Address(RVA = "0xC4DF28", Offset = "0xC4DF28", VA = "0xC4DF28")]
	public int GetTotalNumberOfResourcesNeeded()
	{
		return default(int);
	}

	[Token(Token = "0x6000779")]
	[Address(RVA = "0xC4DF94", Offset = "0xC4DF94", VA = "0xC4DF94")]
	public void AddIngredient()
	{
	}

	[Token(Token = "0x600077A")]
	[Address(RVA = "0xC4E094", Offset = "0xC4E094", VA = "0xC4E094")]
	public bool IngredientsMatchRecipe(List<CraftingIngredient> otherIngredients)
	{
		return default(bool);
	}

	[Token(Token = "0x600077B")]
	[Address(RVA = "0xC4E294", Offset = "0xC4E294", VA = "0xC4E294")]
	public bool ValidateRecipe(out string outputMsg)
	{
		return default(bool);
	}

	[Token(Token = "0x600077C")]
	[Address(RVA = "0xC4E62C", Offset = "0xC4E62C", VA = "0xC4E62C")]
	public bool BelongsToCollection(CraftingSystem.RecipeCollectionType collectionType)
	{
		return default(bool);
	}

	[Token(Token = "0x600077D")]
	[Address(RVA = "0xC4E694", Offset = "0xC4E694", VA = "0xC4E694")]
	public CraftingRecipe()
	{
	}
}
[Serializable]
[Token(Token = "0x200015D")]
public class CraftingSystem : SaveableComponent, IInitializable
{
	[Serializable]
	[Token(Token = "0x200015E")]
	public class RecipeData
	{
		[Token(Token = "0x400065F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public CraftingRecipe recipe;

		[Token(Token = "0x6000785")]
		[Address(RVA = "0xC4EB4C", Offset = "0xC4EB4C", VA = "0xC4EB4C")]
		public RecipeData()
		{
		}
	}

	[Token(Token = "0x200015F")]
	public enum RecipeCollectionType
	{
		[Token(Token = "0x4000661")]
		CraftingBubble,
		[Token(Token = "0x4000662")]
		PotPotMissionGiver,
		[Token(Token = "0x4000663")]
		PotPotMissionBoatTop,
		[Token(Token = "0x4000664")]
		PotPotMissionPaintball,
		[Token(Token = "0x4000665")]
		Trader,
		[Token(Token = "0x4000666")]
		TentToSmallHouse,
		[Token(Token = "0x4000667")]
		SmallHouseToMansion,
		[Token(Token = "0x4000668")]
		PuffkinBarn,
		[Token(Token = "0x4000669")]
		ManateeCowBarn,
		[Token(Token = "0x400066A")]
		MolesealBarn,
		[Token(Token = "0x400066B")]
		CookingCampfire,
		[Token(Token = "0x400066C")]
		CookingStove,
		[Token(Token = "0x400066D")]
		TutorialPotPotMission,
		[Token(Token = "0x400066E")]
		RopesToTent,
		[Token(Token = "0x400066F")]
		CurvedBridgeHomelandQuest,
		[Token(Token = "0x4000670")]
		MansionToEndgameHouse,
		[Token(Token = "0x4000671")]
		ToolMerchantTradingPost,
		[Token(Token = "0x4000672")]
		NumTypes
	}

	[Token(Token = "0x2000160")]
	public enum ResourceType
	{
		[Token(Token = "0x4000674")]
		Undefined,
		[Token(Token = "0x4000675")]
		Turnip,
		[Token(Token = "0x4000676")]
		Carrot,
		[Token(Token = "0x4000677")]
		Sunflower,
		[Token(Token = "0x4000678")]
		Radish,
		[Token(Token = "0x4000679")]
		Wood,
		[Token(Token = "0x400067A")]
		Stone,
		[Token(Token = "0x400067B")]
		Seedbag,
		[Token(Token = "0x400067C")]
		PlanterBasic,
		[Token(Token = "0x400067D")]
		BirdBathBasic,
		[Token(Token = "0x400067E")]
		Berry,
		[Token(Token = "0x400067F")]
		Raspberry,
		[Token(Token = "0x4000680")]
		Blueberry,
		[Token(Token = "0x4000681")]
		Strawberry,
		[Token(Token = "0x4000682")]
		Tomato,
		[Token(Token = "0x4000683")]
		Bean,
		[Token(Token = "0x4000684")]
		Bamboo,
		[Token(Token = "0x4000685")]
		Boobell,
		[Token(Token = "0x4000686")]
		Dandelion,
		[Token(Token = "0x4000687")]
		Shroom,
		[Token(Token = "0x4000688")]
		Linnea,
		[Token(Token = "0x4000689")]
		Lily,
		[Token(Token = "0x400068A")]
		Buttercup,
		[Token(Token = "0x400068B")]
		Fern,
		[Token(Token = "0x400068C")]
		Leafy,
		[Token(Token = "0x400068D")]
		Bridge,
		[Token(Token = "0x400068E")]
		Coop,
		[Token(Token = "0x400068F")]
		Barn,
		[Token(Token = "0x4000690")]
		Fence1,
		[Token(Token = "0x4000691")]
		Statue,
		[Token(Token = "0x4000692")]
		FeederCow,
		[Token(Token = "0x4000693")]
		Reed,
		[Token(Token = "0x4000694")]
		Trellis,
		[Token(Token = "0x4000695")]
		FeederPuffkin,
		[Token(Token = "0x4000696")]
		PotpotComplete,
		[Token(Token = "0x4000697")]
		RockPath,
		[Token(Token = "0x4000698")]
		Shelf,
		[Token(Token = "0x4000699")]
		Foxglove,
		[Token(Token = "0x400069A")]
		CompostBin,
		[Token(Token = "0x400069B")]
		Boat,
		[Token(Token = "0x400069C")]
		Paintball,
		[Token(Token = "0x400069D")]
		SeedbagBamboo,
		[Token(Token = "0x400069E")]
		SeedbagBean,
		[Token(Token = "0x400069F")]
		SeedbagCloudberry,
		[Token(Token = "0x40006A0")]
		SeedbagBoobell,
		[Token(Token = "0x40006A1")]
		SeedbagButtercup,
		[Token(Token = "0x40006A2")]
		SeedbagCarrot,
		[Token(Token = "0x40006A3")]
		SeedbagDandelion,
		[Token(Token = "0x40006A4")]
		SeedbagFern,
		[Token(Token = "0x40006A5")]
		SeedbagFoxglove,
		[Token(Token = "0x40006A6")]
		SeedbagLeafy,
		[Token(Token = "0x40006A7")]
		SeedbagLily,
		[Token(Token = "0x40006A8")]
		SeedbagLinnea,
		[Token(Token = "0x40006A9")]
		SeedbagMushroom1,
		[Token(Token = "0x40006AA")]
		SeedbagRadish,
		[Token(Token = "0x40006AB")]
		SeedbagRaspberry,
		[Token(Token = "0x40006AC")]
		SeedbagReed,
		[Token(Token = "0x40006AD")]
		SeedbagStrawberry,
		[Token(Token = "0x40006AE")]
		SeedbagSunflower,
		[Token(Token = "0x40006AF")]
		SeedbagTomato,
		[Token(Token = "0x40006B0")]
		SeedbagTurnip,
		[Token(Token = "0x40006B1")]
		SeedbagMushroom2,
		[Token(Token = "0x40006B2")]
		paintball_clear,
		[Token(Token = "0x40006B3")]
		Metal,
		[Token(Token = "0x40006B4")]
		Fertilizer,
		[Token(Token = "0x40006B5")]
		Tent,
		[Token(Token = "0x40006B6")]
		SmallHouse,
		[Token(Token = "0x40006B7")]
		LargeHouse,
		[Token(Token = "0x40006B8")]
		CurtainLong,
		[Token(Token = "0x40006B9")]
		CurtainShort,
		[Token(Token = "0x40006BA")]
		PatternRoleBlue1,
		[Token(Token = "0x40006BB")]
		PatternRoleBlue2,
		[Token(Token = "0x40006BC")]
		PatternRoleBlue3,
		[Token(Token = "0x40006BD")]
		PatternRoleBlue4,
		[Token(Token = "0x40006BE")]
		PatternRoleBlueStripes,
		[Token(Token = "0x40006BF")]
		PatternRoleFish,
		[Token(Token = "0x40006C0")]
		PatternRoleGreenStripes,
		[Token(Token = "0x40006C1")]
		PatternRolePeachStripes,
		[Token(Token = "0x40006C2")]
		PatternRoleRed,
		[Token(Token = "0x40006C3")]
		PatternRoleWhiteFruit,
		[Token(Token = "0x40006C4")]
		PatternRoleWhiteLeaves1,
		[Token(Token = "0x40006C5")]
		PatternRoleWhiteLeaves2,
		[Token(Token = "0x40006C6")]
		PatternRoleWhiteLeaves3,
		[Token(Token = "0x40006C7")]
		PatternRoleWhiteStripes1,
		[Token(Token = "0x40006C8")]
		PatternRoleWhiteStripes2,
		[Token(Token = "0x40006C9")]
		PatternRoleWhiteStripes3,
		[Token(Token = "0x40006CA")]
		CoralBall,
		[Token(Token = "0x40006CB")]
		CoralCrystal,
		[Token(Token = "0x40006CC")]
		CoralSpike,
		[Token(Token = "0x40006CD")]
		CoralCone,
		[Token(Token = "0x40006CE")]
		Cloudberry,
		[Token(Token = "0x40006CF")]
		Crate,
		[Token(Token = "0x40006D0")]
		ShelfTriple,
		[Token(Token = "0x40006D1")]
		ShelfBelt,
		[Token(Token = "0x40006D2")]
		ShelfMetal,
		[Token(Token = "0x40006D3")]
		Coin,
		[Token(Token = "0x40006D4")]
		InstrumentCrystal,
		[Token(Token = "0x40006D5")]
		ReedFire,
		[Token(Token = "0x40006D6")]
		RadishFire,
		[Token(Token = "0x40006D7")]
		LilyFire,
		[Token(Token = "0x40006D8")]
		Grass,
		[Token(Token = "0x40006D9")]
		PuffkinTotem,
		[Token(Token = "0x40006DA")]
		ManateeCowTotem,
		[Token(Token = "0x40006DB")]
		MolesealTotem,
		[Token(Token = "0x40006DC")]
		Nest,
		[Token(Token = "0x40006DD")]
		BarnSpotSign,
		[Token(Token = "0x40006DE")]
		PuffkinReward,
		[Token(Token = "0x40006DF")]
		PuffkinChildReward,
		[Token(Token = "0x40006E0")]
		ManateeCowReward,
		[Token(Token = "0x40006E1")]
		ManateeCowChildReward,
		[Token(Token = "0x40006E2")]
		MolesealReward,
		[Token(Token = "0x40006E3")]
		MolesealChildReward,
		[Token(Token = "0x40006E4")]
		FruitSalad,
		[Token(Token = "0x40006E5")]
		VeggieKabobs,
		[Token(Token = "0x40006E6")]
		BeanStew,
		[Token(Token = "0x40006E7")]
		SeaweedSalad,
		[Token(Token = "0x40006E8")]
		BerryPie,
		[Token(Token = "0x40006E9")]
		BeanFritters,
		[Token(Token = "0x40006EA")]
		FlowerTempura,
		[Token(Token = "0x40006EB")]
		TutorialCrystal,
		[Token(Token = "0x40006EC")]
		Shroom2,
		[Token(Token = "0x40006ED")]
		Shroom3,
		[Token(Token = "0x40006EE")]
		Shroom4,
		[Token(Token = "0x40006EF")]
		SeedbagMushroom3,
		[Token(Token = "0x40006F0")]
		SeedbagMushroom4,
		[Token(Token = "0x40006F1")]
		WoodBirch,
		[Token(Token = "0x40006F2")]
		WaterPump,
		[Token(Token = "0x40006F3")]
		NestPuffkin,
		[Token(Token = "0x40006F4")]
		NestManateeCow,
		[Token(Token = "0x40006F5")]
		NestMoleSeal,
		[Token(Token = "0x40006F6")]
		StorageChest,
		[Token(Token = "0x40006F7")]
		ShroomFireBlue,
		[Token(Token = "0x40006F8")]
		ShroomFirePink,
		[Token(Token = "0x40006F9")]
		WoodPath,
		[Token(Token = "0x40006FA")]
		PillowBasic,
		[Token(Token = "0x40006FB")]
		PillowPuff,
		[Token(Token = "0x40006FC")]
		PillowWide,
		[Token(Token = "0x40006FD")]
		SeedbagBlueberry,
		[Token(Token = "0x40006FE")]
		NumTypes
	}

	[Serializable]
	[Token(Token = "0x2000161")]
	public class ResourceTypeEnum : SerializableEnum<ResourceType>
	{
		[Token(Token = "0x6000786")]
		[Address(RVA = "0xC4EB54", Offset = "0xC4EB54", VA = "0xC4EB54")]
		public ResourceTypeEnum()
		{
		}

		[Token(Token = "0x6000787")]
		[Address(RVA = "0xC4C9D8", Offset = "0xC4C9D8", VA = "0xC4C9D8")]
		public ResourceTypeEnum(ResourceType value)
		{
		}
	}

	[Serializable]
	[Token(Token = "0x2000162")]
	public class CraftingRecipeCollection
	{
		[Token(Token = "0x40006FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public RecipeData[] allRecipes;

		[Token(Token = "0x6000788")]
		[Address(RVA = "0xC4E790", Offset = "0xC4E790", VA = "0xC4E790")]
		public CraftingRecipe GetCraftableRecipe(ref List<CraftingIngredient> ingredients, bool mustMatchExactly)
		{
			return null;
		}

		[Token(Token = "0x6000789")]
		[Address(RVA = "0xC4EB44", Offset = "0xC4EB44", VA = "0xC4EB44")]
		public CraftingRecipeCollection()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x2000163")]
	public class CraftingSystemState : ComponentState
	{
		[Token(Token = "0x600078A")]
		[Address(RVA = "0xC4EB2C", Offset = "0xC4EB2C", VA = "0xC4EB2C")]
		public CraftingSystemState()
		{
		}
	}

	[Token(Token = "0x400065D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static CraftingSystem Instance;

	[Token(Token = "0x400065E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private CraftingSystemData data;

	[Token(Token = "0x600077E")]
	[Address(RVA = "0xC4E720", Offset = "0xC4E720", VA = "0xC4E720")]
	private void Awake()
	{
	}

	[Token(Token = "0x600077F")]
	[Address(RVA = "0xC4D214", Offset = "0xC4D214", VA = "0xC4D214")]
	public CraftingRecipe GetCraftableRecipe(ref List<CraftingIngredient> ingredients, RecipeCollectionType collectionType, bool mustMatchExactly)
	{
		return null;
	}

	[Token(Token = "0x6000780")]
	[Address(RVA = "0xC4D9C4", Offset = "0xC4D9C4", VA = "0xC4D9C4")]
	public CraftingRecipe GetFirstRecepieOfCollectionType(RecipeCollectionType collectionType)
	{
		return null;
	}

	[Token(Token = "0x6000781")]
	[Address(RVA = "0xC4EAD0", Offset = "0xC4EAD0", VA = "0xC4EAD0", Slot = "4")]
	public override ComponentState CreateState()
	{
		return null;
	}

	[Token(Token = "0x6000782")]
	[Address(RVA = "0xC4EB34", Offset = "0xC4EB34", VA = "0xC4EB34", Slot = "5")]
	public void Initialize()
	{
	}

	[Token(Token = "0x6000783")]
	[Address(RVA = "0xC4EB38", Offset = "0xC4EB38", VA = "0xC4EB38")]
	public CraftingSystem()
	{
	}
}
[Token(Token = "0x2000164")]
public class UnlockCraftingRecipe : MonoBehaviour
{
	[Token(Token = "0x4000700")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private CraftingRecipe recipe;

	[Token(Token = "0x170000D8")]
	public CraftingRecipe Recipe
	{
		[Token(Token = "0x600078B")]
		[Address(RVA = "0xE6BBC0", Offset = "0xE6BBC0", VA = "0xE6BBC0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600078C")]
	[Address(RVA = "0xE6BBC8", Offset = "0xE6BBC8", VA = "0xE6BBC8")]
	public UnlockCraftingRecipe()
	{
	}
}
[Token(Token = "0x2000165")]
public class AnimalNavigationSystem : MonoBehaviour
{
	[Token(Token = "0x2000166")]
	public enum NavigationTargetErrors
	{
		[Token(Token = "0x4000704")]
		NoTargets,
		[Token(Token = "0x4000705")]
		TargetsAreOccupied,
		[Token(Token = "0x4000706")]
		NoTargetWithinRange,
		[Token(Token = "0x4000707")]
		NoError
	}

	[Token(Token = "0x4000701")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static AnimalNavigationSystem Instance;

	[Token(Token = "0x4000702")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private List<AnimalNavigationTarget> targets;

	[Token(Token = "0x600078D")]
	[Address(RVA = "0xF5BC34", Offset = "0xF5BC34", VA = "0xF5BC34")]
	private void Awake()
	{
	}

	[Token(Token = "0x600078E")]
	[Address(RVA = "0xF5BCA4", Offset = "0xF5BCA4", VA = "0xF5BCA4")]
	public void AddTarget(AnimalNavigationTarget target)
	{
	}

	[Token(Token = "0x600078F")]
	[Address(RVA = "0xF5BD3C", Offset = "0xF5BD3C", VA = "0xF5BD3C")]
	public void RemoveTarget(AnimalNavigationTarget target)
	{
	}

	[Token(Token = "0x6000790")]
	[Address(RVA = "0xF5BDD4", Offset = "0xF5BDD4", VA = "0xF5BDD4")]
	public AnimalNavigationTarget GetRandomTargetForCreature(CreatureBehaviour creature, Vector3 startPoint, float maxDistance, out NavigationTargetErrors error, AnimalNavigationTarget.AnimalTargetType navigationTargetType = AnimalNavigationTarget.AnimalTargetType.None)
	{
		return null;
	}

	[Token(Token = "0x6000791")]
	[Address(RVA = "0xF5C194", Offset = "0xF5C194", VA = "0xF5C194")]
	private void Shuffle()
	{
	}

	[Token(Token = "0x6000792")]
	[Address(RVA = "0xF5C308", Offset = "0xF5C308", VA = "0xF5C308")]
	public static Vector3 GetRandomPointAroundTarget(AnimalNavigationTarget target)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000793")]
	[Address(RVA = "0xF5C39C", Offset = "0xF5C39C", VA = "0xF5C39C")]
	public static Vector3 GetRandomPointAroundPosition(Vector3 pos, float radius)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000794")]
	[Address(RVA = "0xF5C48C", Offset = "0xF5C48C", VA = "0xF5C48C")]
	public AnimalNavigationTarget[] GetTargetsOfType(CreatureType creatureType, AnimalNavigationTarget.AnimalTargetType targetType)
	{
		return null;
	}

	[Token(Token = "0x6000795")]
	[Address(RVA = "0xF5C610", Offset = "0xF5C610", VA = "0xF5C610")]
	public AnimalNavigationSystem()
	{
	}
}
[Token(Token = "0x2000167")]
public class AnimalNavigationTarget : MonoBehaviour, IInitializable
{
	[Token(Token = "0x2000168")]
	public enum AnimalTargetType
	{
		[Token(Token = "0x4000712")]
		None,
		[Token(Token = "0x4000713")]
		EatingSpot,
		[Token(Token = "0x4000714")]
		SleepingSpot,
		[Token(Token = "0x4000715")]
		BarnSpot,
		[Token(Token = "0x4000716")]
		Exit,
		[Token(Token = "0x4000717")]
		NumTypes
	}

	[Token(Token = "0x4000708")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public CreatureTypeFlag creatureTypeFlag;

	[Token(Token = "0x4000709")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int priority;

	[Token(Token = "0x400070A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool hasFixedPosition;

	[Token(Token = "0x400070B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float radius;

	[Token(Token = "0x400070C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AnimalTargetType targetType;

	[Token(Token = "0x400070D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private AnimalBarnSpot barnSpot;

	[Token(Token = "0x400070E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x977944", Offset = "0x977944")]
	private bool <Occupied>k__BackingField;

	[Token(Token = "0x400070F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x977954", Offset = "0x977954")]
	private Vector3 <Point>k__BackingField;

	[Token(Token = "0x4000710")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private RaycastHit hitInfo;

	[Token(Token = "0x170000D9")]
	public AnimalBarnSpot BarnSpot
	{
		[Token(Token = "0x6000797")]
		[Address(RVA = "0xF5C690", Offset = "0xF5C690", VA = "0xF5C690")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000DA")]
	public bool Occupied
	{
		[Token(Token = "0x6000798")]
		[Address(RVA = "0xF5C698", Offset = "0xF5C698", VA = "0xF5C698")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x989428", Offset = "0x989428")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000799")]
		[Address(RVA = "0xF5C6A0", Offset = "0xF5C6A0", VA = "0xF5C6A0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x989438", Offset = "0x989438")]
		private set
		{
		}
	}

	[Token(Token = "0x170000DB")]
	public Vector3 Point
	{
		[Token(Token = "0x600079A")]
		[Address(RVA = "0xF5C6AC", Offset = "0xF5C6AC", VA = "0xF5C6AC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x989448", Offset = "0x989448")]
		get
		{
			return default(Vector3);
		}
		[Token(Token = "0x600079B")]
		[Address(RVA = "0xF5C6B8", Offset = "0xF5C6B8", VA = "0xF5C6B8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x989458", Offset = "0x989458")]
		private set
		{
		}
	}

	[Token(Token = "0x600079C")]
	[Address(RVA = "0xF5C6C4", Offset = "0xF5C6C4", VA = "0xF5C6C4", Slot = "5")]
	public virtual void Initialize()
	{
	}

	[Token(Token = "0x600079D")]
	[Address(RVA = "0xF5C910", Offset = "0xF5C910", VA = "0xF5C910")]
	public void OccupyTarget()
	{
	}

	[Token(Token = "0x600079E")]
	[Address(RVA = "0xF5C91C", Offset = "0xF5C91C", VA = "0xF5C91C")]
	public void ReleaseTarget()
	{
	}

	[Token(Token = "0x600079F")]
	[Address(RVA = "0xF5C7C0", Offset = "0xF5C7C0", VA = "0xF5C7C0")]
	private Vector3 GetPointOnGround()
	{
		return default(Vector3);
	}

	[Token(Token = "0x60007A0")]
	[Address(RVA = "0xF5C924", Offset = "0xF5C924", VA = "0xF5C924")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60007A1")]
	[Address(RVA = "0xF5CA10", Offset = "0xF5CA10", VA = "0xF5CA10", Slot = "6")]
	public virtual bool IsCompatibleWithCreature(CreatureBehaviour creature)
	{
		return default(bool);
	}

	[Token(Token = "0x60007A2")]
	[Address(RVA = "0xF5CB68", Offset = "0xF5CB68", VA = "0xF5CB68")]
	public AnimalNavigationTarget()
	{
	}
}
[Token(Token = "0x2000169")]
public class AnimalPopulationManager : MonoBehaviour, IInitializable
{
	[Token(Token = "0x4000718")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static AnimalPopulationManager Instance;

	[Token(Token = "0x4000719")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Dictionary<CreatureType, List<CreatureBehaviour>> allAnimals;

	[Token(Token = "0x400071A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static float UpdateIntervalFast;

	[Token(Token = "0x400071B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public static float UpdateIntervalIntermittent;

	[Token(Token = "0x400071C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float timeUntilNextUpdate;

	[Token(Token = "0x400071D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float timeUntilNextIntermittentUpdate;

	[Token(Token = "0x400071E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x977964", Offset = "0x977964")]
	[SerializeField]
	private CreaturePopulation m_puffkinPopulation;

	[Token(Token = "0x400071F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[SerializeField]
	private CreaturePopulation m_manateeCowPopulation;

	[Token(Token = "0x4000720")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private CreaturePopulation m_molesealPopulation;

	[Token(Token = "0x4000721")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	private AnimalNavigationSystem m_animalNavigationSystem;

	[Token(Token = "0x4000722")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private OptimizedCollection<VisitingAnimalSpawnLocation> m_spawnLocations;

	[Token(Token = "0x4000723")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private int m_dayCount;

	[Token(Token = "0x4000724")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	private bool m_initialized;

	[Token(Token = "0x60007A3")]
	[Address(RVA = "0xF5CBF0", Offset = "0xF5CBF0", VA = "0xF5CBF0")]
	private void Awake()
	{
	}

	[Token(Token = "0x60007A4")]
	[Address(RVA = "0xF5CC60", Offset = "0xF5CC60", VA = "0xF5CC60", Slot = "4")]
	public void Initialize()
	{
	}

	[Token(Token = "0x60007A5")]
	[Address(RVA = "0xF5CDF0", Offset = "0xF5CDF0", VA = "0xF5CDF0")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60007A6")]
	[Address(RVA = "0xF5CF58", Offset = "0xF5CF58", VA = "0xF5CF58")]
	public static void RegiserSpawnLocation(VisitingAnimalSpawnLocation spawnLocation)
	{
	}

	[Token(Token = "0x60007A7")]
	[Address(RVA = "0xF5CFE0", Offset = "0xF5CFE0", VA = "0xF5CFE0")]
	public static void UnregisterSpawnLocation(VisitingAnimalSpawnLocation spawnLocation)
	{
	}

	[Token(Token = "0x60007A8")]
	[Address(RVA = "0xF5D068", Offset = "0xF5D068", VA = "0xF5D068")]
	public static void RegisterAnimal(CreatureBehaviour animal)
	{
	}

	[Token(Token = "0x60007A9")]
	[Address(RVA = "0xF5D3B0", Offset = "0xF5D3B0", VA = "0xF5D3B0")]
	public static void UnregisterAnimal(CreatureBehaviour animal)
	{
	}

	[Token(Token = "0x60007AA")]
	[Address(RVA = "0xF5D288", Offset = "0xF5D288", VA = "0xF5D288")]
	private void UpdateCreaturePopulationOnRegister(CreatureBehaviour animal, CreatureType creatureType)
	{
	}

	[Token(Token = "0x60007AB")]
	[Address(RVA = "0xF5D54C", Offset = "0xF5D54C", VA = "0xF5D54C")]
	private void UpdateCreaturePopulationOnUnregister(CreatureBehaviour animal, CreatureType creatureType)
	{
	}

	[Token(Token = "0x60007AC")]
	[Address(RVA = "0xF5D698", Offset = "0xF5D698", VA = "0xF5D698")]
	private unsafe ref CreaturePopulation TryGetPopulationOfType(CreatureType creatureType, out bool hasPopulation)
	{
		return ref *(CreaturePopulation*)null;
	}

	[Token(Token = "0x60007AD")]
	[Address(RVA = "0xF5D6D4", Offset = "0xF5D6D4", VA = "0xF5D6D4")]
	private int GetNumberOfAnimals(CreatureType creatureType)
	{
		return default(int);
	}

	[Token(Token = "0x60007AE")]
	[Address(RVA = "0xF5D760", Offset = "0xF5D760", VA = "0xF5D760")]
	private void OnUpdateGameTime(float gameTimeDelta)
	{
	}

	[Token(Token = "0x60007AF")]
	[Address(RVA = "0xF5DACC", Offset = "0xF5DACC", VA = "0xF5DACC")]
	private void OnNewDay(int dayCount)
	{
	}

	[Token(Token = "0x60007B0")]
	[Address(RVA = "0xF5DD3C", Offset = "0xF5DD3C", VA = "0xF5DD3C")]
	private void CheckAnimalPopulation(CreatureType creatureType, int dayCount, CreaturePopulation populationSettings)
	{
	}

	[Token(Token = "0x60007B1")]
	[Address(RVA = "0xF5E158", Offset = "0xF5E158", VA = "0xF5E158")]
	private void OnVisitingAnimalSpawned(SpawnOperationCallbackData data)
	{
	}

	[Token(Token = "0x60007B2")]
	[Address(RVA = "0xF5DB68", Offset = "0xF5DB68", VA = "0xF5DB68")]
	private void UpdateNewDayBehavior(int dayCount)
	{
	}

	[Token(Token = "0x60007B3")]
	[Address(RVA = "0xF5D5BC", Offset = "0xF5D5BC", VA = "0xF5D5BC")]
	private void UpdateAnimalVisitation(CreatureBehaviour creature, int dayCount)
	{
	}

	[Token(Token = "0x60007B4")]
	[Address(RVA = "0xF5DF8C", Offset = "0xF5DF8C", VA = "0xF5DF8C")]
	private bool TryGetRandomSpawnLocationOfType(CreatureType creatureType, out Transform validSpawnLocation)
	{
		return default(bool);
	}

	[Token(Token = "0x60007B5")]
	[Address(RVA = "0xF5E1D8", Offset = "0xF5E1D8", VA = "0xF5E1D8")]
	private bool TryGetRandomExitLocation(CreatureType creatureType, out Transform validExitLocation)
	{
		return default(bool);
	}

	[Token(Token = "0x60007B6")]
	[Address(RVA = "0xF5E294", Offset = "0xF5E294", VA = "0xF5E294")]
	public AnimalPopulationManager()
	{
	}
}
[Token(Token = "0x200016A")]
public class AnimalTameMeter : MonoBehaviour
{
	[Token(Token = "0x200016B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x971AF8", Offset = "0x971AF8")]
	private sealed class <AnimateLevel>d__38 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400073B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400073C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400073D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AnimalTameMeter <>4__this;

		[Token(Token = "0x400073E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int piece;

		[Token(Token = "0x400073F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float newTarget;

		[Token(Token = "0x4000740")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float previousTarget;

		[Token(Token = "0x4000741")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float <targetWeight>5__2;

		[Token(Token = "0x4000742")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float <initialWeight>5__3;

		[Token(Token = "0x4000743")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float <timeLeft>5__4;

		[Token(Token = "0x170000DC")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60007CE")]
			[Address(RVA = "0xF5F164", Offset = "0xF5F164", VA = "0xF5F164", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000DD")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60007D0")]
			[Address(RVA = "0xF5F1CC", Offset = "0xF5F1CC", VA = "0xF5F1CC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60007CB")]
		[Address(RVA = "0xF5ED4C", Offset = "0xF5ED4C", VA = "0xF5ED4C")]
		[DebuggerHidden]
		public <AnimateLevel>d__38(int <>1__state)
		{
		}

		[Token(Token = "0x60007CC")]
		[Address(RVA = "0xF5EF64", Offset = "0xF5EF64", VA = "0xF5EF64", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60007CD")]
		[Address(RVA = "0xF5EF68", Offset = "0xF5EF68", VA = "0xF5EF68", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60007CF")]
		[Address(RVA = "0xF5F16C", Offset = "0xF5F16C", VA = "0xF5F16C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000725")]
	private const float ShowDuration = 0.3f;

	[Token(Token = "0x4000726")]
	private const float HideDuration = 0.2f;

	[Token(Token = "0x4000727")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private SkinnedMeshRenderer[] progressMeters;

	[Token(Token = "0x4000728")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject eggPiece;

	[Token(Token = "0x4000729")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private GameObject baseHeart;

	[Token(Token = "0x400072A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private GameObject fullHeart;

	[Token(Token = "0x400072B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private ParticleSystem m_levelUpParticles;

	[Token(Token = "0x400072C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private NeatAudioPlayer audioPlayer;

	[Token(Token = "0x400072D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private NeatAudioPlayer fluidAudioPlayer;

	[Token(Token = "0x400072E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private NeatAudioCue heartPieceFullSound;

	[Token(Token = "0x400072F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private NeatAudioCue heartFullSound;

	[Token(Token = "0x4000730")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private NeatAudioCue eggFullSound;

	[Token(Token = "0x4000731")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private NeatAudioCue heartPieceFill;

	[Token(Token = "0x4000732")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private GameObject[] adornments;

	[Token(Token = "0x4000733")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private int currentAdornment;

	[Token(Token = "0x4000734")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private int currentPiece;

	[Token(Token = "0x4000735")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private float currentProgress;

	[Token(Token = "0x4000736")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private bool eggMeterActive;

	[Token(Token = "0x4000737")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x85")]
	private bool tameMeterVisible;

	[Token(Token = "0x4000738")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x86")]
	private bool m_isShowingTameMeter;

	[Token(Token = "0x4000739")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private Vector3 m_defaultScale;

	[Token(Token = "0x400073A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private Coroutine animationRoutine;

	[Token(Token = "0x60007B8")]
	[Address(RVA = "0xF5E3C4", Offset = "0xF5E3C4", VA = "0xF5E3C4")]
	public void Show()
	{
	}

	[Token(Token = "0x60007B9")]
	[Address(RVA = "0xF5E628", Offset = "0xF5E628", VA = "0xF5E628")]
	private void OnShowComplete()
	{
	}

	[Token(Token = "0x60007BA")]
	[Address(RVA = "0xF5E634", Offset = "0xF5E634", VA = "0xF5E634")]
	public void Hide()
	{
	}

	[Token(Token = "0x60007BB")]
	[Address(RVA = "0xF5E774", Offset = "0xF5E774", VA = "0xF5E774")]
	private void OnHideComplete()
	{
	}

	[Token(Token = "0x60007BC")]
	[Address(RVA = "0xF5E7B0", Offset = "0xF5E7B0", VA = "0xF5E7B0")]
	public float GetProgressOnCurrentPiece()
	{
		return default(float);
	}

	[Token(Token = "0x60007BD")]
	[Address(RVA = "0xF5E7B8", Offset = "0xF5E7B8", VA = "0xF5E7B8")]
	public float GetTotalProgress()
	{
		return default(float);
	}

	[Token(Token = "0x60007BE")]
	[Address(RVA = "0xF5E7C8", Offset = "0xF5E7C8", VA = "0xF5E7C8")]
	public bool EggMeterUnlocked()
	{
		return default(bool);
	}

	[Token(Token = "0x60007BF")]
	[Address(RVA = "0xF5E7D0", Offset = "0xF5E7D0", VA = "0xF5E7D0")]
	public float GetMaxProgress()
	{
		return default(float);
	}

	[Token(Token = "0x60007C0")]
	[Address(RVA = "0xF5E7F8", Offset = "0xF5E7F8", VA = "0xF5E7F8")]
	public uint GetCurrentTamenessLevel()
	{
		return default(uint);
	}

	[Token(Token = "0x60007C1")]
	[Address(RVA = "0xF5E89C", Offset = "0xF5E89C", VA = "0xF5E89C")]
	public void SetTotalProgress(float progress, bool eggActive)
	{
	}

	[Token(Token = "0x60007C2")]
	[Address(RVA = "0xF5E944", Offset = "0xF5E944", VA = "0xF5E944")]
	public void IncreaseProgressOnCurrentPiece(float amount, out int levelChangeResult)
	{
	}

	[Token(Token = "0x60007C3")]
	[Address(RVA = "0xF5E4DC", Offset = "0xF5E4DC", VA = "0xF5E4DC")]
	private void UpdateMeter(bool animate, float previousProgress = 0f)
	{
	}

	[Token(Token = "0x60007C4")]
	[Address(RVA = "0xF5ECB4", Offset = "0xF5ECB4", VA = "0xF5ECB4")]
	private void UpdateAdornment()
	{
	}

	[Token(Token = "0x60007C5")]
	[Address(RVA = "0xF5ED2C", Offset = "0xF5ED2C", VA = "0xF5ED2C")]
	private float GetBlendShapeWeightForProgress(float progress)
	{
		return default(float);
	}

	[Token(Token = "0x60007C6")]
	[Address(RVA = "0xF5EB54", Offset = "0xF5EB54", VA = "0xF5EB54")]
	private void SetLevel(int piece, float progress)
	{
	}

	[Token(Token = "0x60007C7")]
	[Address(RVA = "0xF5ED44", Offset = "0xF5ED44", VA = "0xF5ED44")]
	public void SetAdornment(int index)
	{
	}

	[Token(Token = "0x60007C8")]
	[Address(RVA = "0xF5EC14", Offset = "0xF5EC14", VA = "0xF5EC14")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x989468", Offset = "0x989468")]
	private IEnumerator AnimateLevel(int piece, float previousTarget, float newTarget)
	{
		return null;
	}

	[Token(Token = "0x60007C9")]
	[Address(RVA = "0xF5ED78", Offset = "0xF5ED78", VA = "0xF5ED78")]
	public void PlayLevelUpEffect()
	{
	}

	[Token(Token = "0x60007CA")]
	[Address(RVA = "0xF5EEF0", Offset = "0xF5EEF0", VA = "0xF5EEF0")]
	public AnimalTameMeter()
	{
	}
}
[Token(Token = "0x200016C")]
public class AttachPosition : MonoBehaviour
{
	[Token(Token = "0x4000744")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float LocalScaleWhileAttached;

	[Token(Token = "0x60007D1")]
	[Address(RVA = "0xF5F2E8", Offset = "0xF5F2E8", VA = "0xF5F2E8")]
	public AttachPosition()
	{
	}
}
[Token(Token = "0x200016D")]
public class AnimalBarnSpot : SaveableComponent, IInitializable
{
	[Token(Token = "0x200016E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x971B08", Offset = "0x971B08")]
	private sealed class <ReturnSignAfterDelay>d__37 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400074E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400074F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000750")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AnimalBarnSpot <>4__this;

		[Token(Token = "0x4000751")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Grabbable grabbable;

		[Token(Token = "0x170000DE")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60007F6")]
			[Address(RVA = "0xF5B908", Offset = "0xF5B908", VA = "0xF5B908", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000DF")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60007F8")]
			[Address(RVA = "0xF5B970", Offset = "0xF5B970", VA = "0xF5B970", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60007F3")]
		[Address(RVA = "0xF5B154", Offset = "0xF5B154", VA = "0xF5B154")]
		[DebuggerHidden]
		public <ReturnSignAfterDelay>d__37(int <>1__state)
		{
		}

		[Token(Token = "0x60007F4")]
		[Address(RVA = "0xF5B384", Offset = "0xF5B384", VA = "0xF5B384", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60007F5")]
		[Address(RVA = "0xF5B388", Offset = "0xF5B388", VA = "0xF5B388", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60007F7")]
		[Address(RVA = "0xF5B910", Offset = "0xF5B910", VA = "0xF5B910", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000745")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private CreatureType creatureType;

	[Token(Token = "0x4000746")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Transform signPosition;

	[Token(Token = "0x4000747")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private Transform nestPosition;

	[Token(Token = "0x4000748")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private int adornmentIndex;

	[Token(Token = "0x4000749")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private CreatureBehaviour claimedBy;

	[Token(Token = "0x400074A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private CreatureBehaviour claimedByForBreeding;

	[Token(Token = "0x400074B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool m_isInitialized;

	[Token(Token = "0x400074C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private BarnSpotSign currentSign;

	[Token(Token = "0x400074D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Grabbable currentNest;

	[Token(Token = "0x60007D2")]
	[Address(RVA = "0xF591F8", Offset = "0xF591F8", VA = "0xF591F8", Slot = "4")]
	public override ComponentState CreateState()
	{
		return null;
	}

	[Token(Token = "0x60007D3")]
	[Address(RVA = "0xF59408", Offset = "0xF59408", VA = "0xF59408")]
	private void Awake()
	{
	}

	[Token(Token = "0x60007D4")]
	[Address(RVA = "0xF595D8", Offset = "0xF595D8", VA = "0xF595D8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60007D5")]
	[Address(RVA = "0xF59718", Offset = "0xF59718", VA = "0xF59718")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60007D6")]
	[Address(RVA = "0xF599B0", Offset = "0xF599B0", VA = "0xF599B0")]
	public void ReturnItemToBarn(Grabbable item)
	{
	}

	[Token(Token = "0x60007D7")]
	[Address(RVA = "0xF59C10", Offset = "0xF59C10", VA = "0xF59C10", Slot = "5")]
	public void Initialize()
	{
	}

	[Token(Token = "0x60007D8")]
	[Address(RVA = "0xF59E10", Offset = "0xF59E10", VA = "0xF59E10")]
	private CreatureBehaviour LookUpCreatureFromSaveID(ref SaveID id)
	{
		return null;
	}

	[Token(Token = "0x60007D9")]
	[Address(RVA = "0xF59F38", Offset = "0xF59F38", VA = "0xF59F38")]
	private Grabbable LookUpNestFromSaveID(ref SaveID id)
	{
		return null;
	}

	[Token(Token = "0x60007DA")]
	[Address(RVA = "0xF5A060", Offset = "0xF5A060", VA = "0xF5A060")]
	public CreatureType GetCreatureType()
	{
		return default(CreatureType);
	}

	[Token(Token = "0x60007DB")]
	[Address(RVA = "0xF5A068", Offset = "0xF5A068", VA = "0xF5A068")]
	public void DetachSign(BarnSpotSign sign)
	{
	}

	[Token(Token = "0x60007DC")]
	[Address(RVA = "0xF595E8", Offset = "0xF595E8", VA = "0xF595E8")]
	private void SpawnCorrectSign()
	{
	}

	[Token(Token = "0x60007DD")]
	[Address(RVA = "0xF5A404", Offset = "0xF5A404", VA = "0xF5A404")]
	private void OnSignSpawned(SpawnOperationCallbackData data)
	{
	}

	[Token(Token = "0x60007DE")]
	[Address(RVA = "0xF5A1E0", Offset = "0xF5A1E0", VA = "0xF5A1E0")]
	private void SpawnSign()
	{
	}

	[Token(Token = "0x60007DF")]
	[Address(RVA = "0xF5A9E8", Offset = "0xF5A9E8", VA = "0xF5A9E8")]
	public int GetAdornmentIndex()
	{
		return default(int);
	}

	[Token(Token = "0x60007E0")]
	[Address(RVA = "0xF5A9F0", Offset = "0xF5A9F0", VA = "0xF5A9F0")]
	public bool IsCompatibleWithCreatureType(CreatureType t)
	{
		return default(bool);
	}

	[Token(Token = "0x60007E1")]
	[Address(RVA = "0xF5AA0C", Offset = "0xF5AA0C", VA = "0xF5AA0C")]
	public bool IsAvailable()
	{
		return default(bool);
	}

	[Token(Token = "0x60007E2")]
	[Address(RVA = "0xF5AAC8", Offset = "0xF5AAC8", VA = "0xF5AAC8")]
	public bool IsClaimedBy(CreatureBehaviour creature)
	{
		return default(bool);
	}

	[Token(Token = "0x60007E3")]
	[Address(RVA = "0xF5AB44", Offset = "0xF5AB44", VA = "0xF5AB44")]
	public bool IsClaimedByForBreeding(CreatureBehaviour creature)
	{
		return default(bool);
	}

	[Token(Token = "0x60007E4")]
	[Address(RVA = "0xF5ABC0", Offset = "0xF5ABC0", VA = "0xF5ABC0")]
	public bool ClaimSpot(CreatureBehaviour creature)
	{
		return default(bool);
	}

	[Token(Token = "0x60007E5")]
	[Address(RVA = "0xF5AC2C", Offset = "0xF5AC2C", VA = "0xF5AC2C")]
	public bool ClaimSpotForBreeding(CreatureBehaviour creature)
	{
		return default(bool);
	}

	[Token(Token = "0x60007E6")]
	[Address(RVA = "0xF5AC78", Offset = "0xF5AC78", VA = "0xF5AC78")]
	public bool GiveSpotOtherCreature(CreatureBehaviour creature)
	{
		return default(bool);
	}

	[Token(Token = "0x60007E7")]
	[Address(RVA = "0xF5AE80", Offset = "0xF5AE80", VA = "0xF5AE80")]
	public void FreeUpSlot()
	{
	}

	[Token(Token = "0x60007E8")]
	[Address(RVA = "0xF5AEA4", Offset = "0xF5AEA4", VA = "0xF5AEA4")]
	public void UpdateSign()
	{
	}

	[Token(Token = "0x60007E9")]
	[Address(RVA = "0xF5AEA8", Offset = "0xF5AEA8", VA = "0xF5AEA8")]
	public bool IsClaimed()
	{
		return default(bool);
	}

	[Token(Token = "0x60007EA")]
	[Address(RVA = "0xF5A870", Offset = "0xF5A870", VA = "0xF5A870")]
	public bool IsClaimedForBreeding()
	{
		return default(bool);
	}

	[Token(Token = "0x60007EB")]
	[Address(RVA = "0xF5AF18", Offset = "0xF5AF18", VA = "0xF5AF18")]
	public CreatureBehaviour GetAssignedCreature()
	{
		return null;
	}

	[Token(Token = "0x60007EC")]
	[Address(RVA = "0xF5AD8C", Offset = "0xF5AD8C", VA = "0xF5AD8C")]
	private void ResetClaims()
	{
	}

	[Token(Token = "0x60007ED")]
	[Address(RVA = "0xF5AFDC", Offset = "0xF5AFDC", VA = "0xF5AFDC")]
	public void OnSignDropped(Grabbable grabbable)
	{
	}

	[Token(Token = "0x60007EE")]
	[Address(RVA = "0xF5B0BC", Offset = "0xF5B0BC", VA = "0xF5B0BC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x98951C", Offset = "0x98951C")]
	private IEnumerator ReturnSignAfterDelay(Grabbable grabbable)
	{
		return null;
	}

	[Token(Token = "0x60007EF")]
	[Address(RVA = "0xF5B180", Offset = "0xF5B180", VA = "0xF5B180")]
	public void OnSignDestroyed(BarnSpotSign sign)
	{
	}

	[Token(Token = "0x60007F0")]
	[Address(RVA = "0xF5B234", Offset = "0xF5B234", VA = "0xF5B234")]
	public OrientedPoint GetEggSpawnPoint()
	{
		return default(OrientedPoint);
	}

	[Token(Token = "0x60007F1")]
	[Address(RVA = "0xF5B360", Offset = "0xF5B360", VA = "0xF5B360")]
	public Vector3 GetDirectionFacingOut()
	{
		return default(Vector3);
	}

	[Token(Token = "0x60007F2")]
	[Address(RVA = "0xF5B37C", Offset = "0xF5B37C", VA = "0xF5B37C")]
	public AnimalBarnSpot()
	{
	}
}
[Serializable]
[Token(Token = "0x200016F")]
public class AnimalBarnSpotState : ComponentState
{
	[Token(Token = "0x4000752")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public SaveID claimedBy;

	[Token(Token = "0x4000753")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public SaveID claimedByForBreeding;

	[Token(Token = "0x4000754")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public SaveID nestId;

	[Token(Token = "0x60007F9")]
	[Address(RVA = "0xF59270", Offset = "0xF59270", VA = "0xF59270")]
	public AnimalBarnSpotState(CreatureBehaviour claimedBy, CreatureBehaviour claimedByForBreeding, Grabbable nest)
	{
	}
}
[Token(Token = "0x2000170")]
public class AnimalBarnSystem : MonoBehaviour
{
	[Token(Token = "0x4000755")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static AnimalBarnSystem Instance;

	[Token(Token = "0x4000756")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private AssetReference barnSignPrefab;

	[Token(Token = "0x4000757")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private List<AnimalBarnSpot> barnSpots;

	[Token(Token = "0x170000E0")]
	public static AssetReference BarnSignPrefab
	{
		[Token(Token = "0x60007FB")]
		[Address(RVA = "0xF5A910", Offset = "0xF5A910", VA = "0xF5A910")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60007FA")]
	[Address(RVA = "0xF5B978", Offset = "0xF5B978", VA = "0xF5B978")]
	private void Awake()
	{
	}

	[Token(Token = "0x60007FC")]
	[Address(RVA = "0xF5946C", Offset = "0xF5946C", VA = "0xF5946C")]
	public static void RegisterBarnSpot(AnimalBarnSpot spot)
	{
	}

	[Token(Token = "0x60007FD")]
	[Address(RVA = "0xF598B0", Offset = "0xF598B0", VA = "0xF598B0")]
	public static void DeregisterBarnSpot(AnimalBarnSpot spot)
	{
	}

	[Token(Token = "0x60007FE")]
	[Address(RVA = "0xF5B9E8", Offset = "0xF5B9E8", VA = "0xF5B9E8")]
	public static AnimalBarnSpot GetAvailableBarnSpot(CreatureType creatureType)
	{
		return null;
	}

	[Token(Token = "0x60007FF")]
	[Address(RVA = "0xF5BBB4", Offset = "0xF5BBB4", VA = "0xF5BBB4")]
	public AnimalBarnSystem()
	{
	}
}
[Token(Token = "0x2000171")]
public class BarnSpotSign : MonoBehaviour, IValidateCustom, IValidate
{
	[Token(Token = "0x2000172")]
	public enum SignType
	{
		[Token(Token = "0x4000767")]
		Unoccupied,
		[Token(Token = "0x4000768")]
		Claimed,
		[Token(Token = "0x4000769")]
		ClaimedForBreeding,
		[Token(Token = "0x400076A")]
		NumTypes
	}

	[Token(Token = "0x4000758")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GradientColorer unclaimedManateecow;

	[Token(Token = "0x4000759")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GradientColorer claimedManateecow;

	[Token(Token = "0x400075A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private GradientColorer unclaimedMoleseal;

	[Token(Token = "0x400075B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private GradientColorer claimedMoleseal;

	[Token(Token = "0x400075C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private GradientColorer unclaimedPuffkin;

	[Token(Token = "0x400075D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private GradientColorer claimedPuffkin;

	[Token(Token = "0x400075E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private GradientColorer claimedForBreeding;

	[Token(Token = "0x400075F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private GameObject[] adornments;

	[Token(Token = "0x4000760")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private Grabbable grabbable;

	[Token(Token = "0x4000761")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x977B80", Offset = "0x977B80")]
	[SerializeField]
	private GradientColorer[] allSigns;

	[Token(Token = "0x4000762")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Dictionary<SignType, GradientColorer> signsLookupTable;

	[Token(Token = "0x4000763")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private SignType signType;

	[Token(Token = "0x4000764")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private int signAdornment;

	[Token(Token = "0x4000765")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private AnimalBarnSpot barnSpot;

	[Token(Token = "0x6000801")]
	[Address(RVA = "0xF62C1C", Offset = "0xF62C1C", VA = "0xF62C1C")]
	public bool CanBeGivenToAnimal(CreatureBehaviour creature)
	{
		return default(bool);
	}

	[Token(Token = "0x6000802")]
	[Address(RVA = "0xF5A65C", Offset = "0xF5A65C", VA = "0xF5A65C")]
	public void Init(AnimalBarnSpot connectedSpot)
	{
	}

	[Token(Token = "0x6000803")]
	[Address(RVA = "0xF5A1A8", Offset = "0xF5A1A8", VA = "0xF5A1A8")]
	public void SetIsUnoccupied()
	{
	}

	[Token(Token = "0x6000804")]
	[Address(RVA = "0xF5A108", Offset = "0xF5A108", VA = "0xF5A108")]
	public void SetIsClaimed()
	{
	}

	[Token(Token = "0x6000805")]
	[Address(RVA = "0xF5A16C", Offset = "0xF5A16C", VA = "0xF5A16C")]
	public void SetIsClaimedForBreeding()
	{
	}

	[Token(Token = "0x6000806")]
	[Address(RVA = "0xF62C48", Offset = "0xF62C48", VA = "0xF62C48")]
	private void UpdateVisuals()
	{
	}

	[Token(Token = "0x6000807")]
	[Address(RVA = "0xF62E60", Offset = "0xF62E60", VA = "0xF62E60")]
	public void ClaimSpot(CreatureBehaviour creature)
	{
	}

	[Token(Token = "0x6000808")]
	[Address(RVA = "0xF62E78", Offset = "0xF62E78", VA = "0xF62E78")]
	public SignType GetSignType()
	{
		return default(SignType);
	}

	[Token(Token = "0x6000809")]
	[Address(RVA = "0xF5A8E0", Offset = "0xF5A8E0", VA = "0xF5A8E0")]
	public void Reset()
	{
	}

	[Token(Token = "0x600080A")]
	[Address(RVA = "0xF62E80", Offset = "0xF62E80", VA = "0xF62E80")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600080B")]
	[Address(RVA = "0xF62FB0", Offset = "0xF62FB0", VA = "0xF62FB0")]
	public BarnSpotSign()
	{
	}
}
[Token(Token = "0x2000173")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x971B18", Offset = "0x971B18")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x971B18", Offset = "0x971B18")]
public class CreatureAnimation : MonoBehaviour
{
	[Token(Token = "0x400076B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly int MovingParamId;

	[Token(Token = "0x400076C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	private static readonly int EatParamId;

	[Token(Token = "0x400076D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static readonly int SleepParamId;

	[Token(Token = "0x400076E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private static readonly int RandomDerpParamId;

	[Token(Token = "0x400076F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static readonly int RandomIdleParamId;

	[Token(Token = "0x4000770")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private static readonly int TryToEatFromHandParamId;

	[Token(Token = "0x4000771")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static readonly int EatFromHandParamId;

	[Token(Token = "0x4000772")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private static readonly int PettedParamId;

	[Token(Token = "0x4000773")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private static readonly int WantsNestParamId;

	[Token(Token = "0x4000774")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private static readonly int SpawnEggParamId;

	[Token(Token = "0x4000775")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private static readonly int ForceIdleParamId;

	[Token(Token = "0x4000776")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private static readonly int SpeedNormalizedParamId;

	[Token(Token = "0x4000777")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private static readonly int AngularSpeedNormalizedParamId;

	[Token(Token = "0x4000778")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private static readonly int TurnRightParamId;

	[Token(Token = "0x4000779")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private static readonly int TurnLeftParamId;

	[Token(Token = "0x400077A")]
	private const string HoldingGiftLayerName = "Holding Gift";

	[Token(Token = "0x400077B")]
	private const float MaxAnimationSpeed = 1.5f;

	[Token(Token = "0x400077C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Animator animator;

	[Token(Token = "0x400077D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private CreatureMovement movement;

	[Token(Token = "0x400077E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private CreatureBehaviour behaviour;

	[Token(Token = "0x400077F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private int m_holdingGiftLayerIndex;

	[Token(Token = "0x600080C")]
	[Address(RVA = "0xC4EBA4", Offset = "0xC4EBA4", VA = "0xC4EBA4")]
	private void Awake()
	{
	}

	[Token(Token = "0x600080D")]
	[Address(RVA = "0xC4EC9C", Offset = "0xC4EC9C", VA = "0xC4EC9C")]
	private void ResetAnimParameters()
	{
	}

	[Token(Token = "0x600080E")]
	[Address(RVA = "0xC4EE44", Offset = "0xC4EE44", VA = "0xC4EE44")]
	public void SetIsHoldingGift(bool shouldHoldGift)
	{
	}

	[Token(Token = "0x600080F")]
	[Address(RVA = "0xC4EE80", Offset = "0xC4EE80", VA = "0xC4EE80")]
	private void Update()
	{
	}

	[Token(Token = "0x6000810")]
	[Address(RVA = "0xC4F3C8", Offset = "0xC4F3C8", VA = "0xC4F3C8")]
	public void UpdateAnimationSpeedByGrowth(float scale, out float updatedSpeed)
	{
	}

	[Token(Token = "0x6000811")]
	[Address(RVA = "0xC4F468", Offset = "0xC4F468", VA = "0xC4F468")]
	public bool IsMovementAllowed()
	{
		return default(bool);
	}

	[Token(Token = "0x6000812")]
	[Address(RVA = "0xC4F674", Offset = "0xC4F674", VA = "0xC4F674")]
	public CreatureAnimation()
	{
	}
}
[Token(Token = "0x2000174")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x971BA4", Offset = "0x971BA4")]
public class CreatureBehaviour : MonoBehaviour, IInitializable
{
	[Token(Token = "0x2000175")]
	public enum CreatureAction
	{
		[Token(Token = "0x40007A7")]
		Undefined,
		[Token(Token = "0x40007A8")]
		Idle,
		[Token(Token = "0x40007A9")]
		Sleep,
		[Token(Token = "0x40007AA")]
		Eat,
		[Token(Token = "0x40007AB")]
		Derp,
		[Token(Token = "0x40007AC")]
		TryToEatFromHand,
		[Token(Token = "0x40007AD")]
		EatFromHand,
		[Token(Token = "0x40007AE")]
		Petted,
		[Token(Token = "0x40007AF")]
		FollowPlayer,
		[Token(Token = "0x40007B0")]
		GoToPoint,
		[Token(Token = "0x40007B1")]
		WantsToBreed,
		[Token(Token = "0x40007B2")]
		SpawnEgg,
		[Token(Token = "0x40007B3")]
		StayAtLocation,
		[Token(Token = "0x40007B4")]
		NumActions
	}

	[Token(Token = "0x4000780")]
	private const float ScaleUpdatedSpeedThreshold = 0.05f;

	[Token(Token = "0x4000781")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private CreatureType creatureType;

	[Token(Token = "0x4000782")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private CreatureAnimation m_creatureAnimation;

	[Token(Token = "0x4000783")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private CreatureMovement m_movement;

	[Token(Token = "0x4000784")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private float maxTimeSpentNotMoving;

	[Token(Token = "0x4000785")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[SerializeField]
	private float minTimeSpentNotMoving;

	[Token(Token = "0x4000786")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private float minDistanceFromPlayerWhenMoving;

	[Token(Token = "0x4000787")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[SerializeField]
	private float reactionMargin;

	[Token(Token = "0x4000788")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private SaveObjectBase saveObject;

	[Token(Token = "0x4000789")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private CreatureTameness creatureTameness;

	[Token(Token = "0x400078A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private BreedableCreature breedableCreature;

	[Token(Token = "0x400078B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private bool m_allowedToLeave;

	[Token(Token = "0x400078C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private AnimalNavigationTarget assignedBarnSpot;

	[Token(Token = "0x400078D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private AnimalNavigationTarget claimedBreedingSpot;

	[Token(Token = "0x400078E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private bool m_hasCreatureTameness;

	[Token(Token = "0x400078F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x71")]
	private bool m_hasBreedableCreature;

	[Token(Token = "0x4000790")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public FLookAnimator lookAtAnimator;

	[Token(Token = "0x4000791")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x977C7C", Offset = "0x977C7C")]
	private bool <IsStationary>k__BackingField;

	[Token(Token = "0x4000792")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public CreatureAction previousAction;

	[Token(Token = "0x4000793")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public CreatureAction currentAction;

	[Token(Token = "0x4000794")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	public CreatureAction nextAction;

	[Token(Token = "0x4000795")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public CreatureAction specialActionOverride;

	[Token(Token = "0x4000796")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private float timeSinceEating;

	[Token(Token = "0x4000797")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private float timeSinceSleeping;

	[Token(Token = "0x4000798")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	private float timeSinceDerpyBehavior;

	[Token(Token = "0x4000799")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private float timeLeftDoingCurrentAction;

	[Token(Token = "0x400079A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	private float timeSpentBeingPetted;

	[Token(Token = "0x400079B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private AnimalNavigationTarget wantedSpotForBreeding;

	[Token(Token = "0x400079C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private Dictionary<string, object> analyticsParams;

	[Token(Token = "0x400079D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private CreatureInteractionEvent interactionEvent;

	[Token(Token = "0x400079E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private CreatureFedEvent fedEvent;

	[Token(Token = "0x400079F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private bool initialized;

	[Token(Token = "0x40007A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	private GrowthStateType m_creatureGrowthStateType;

	[Token(Token = "0x40007A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private float m_currentBodyScale;

	[Token(Token = "0x40007A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	private bool m_isLeaving;

	[Token(Token = "0x40007A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private AnimalNavigationTarget m_exitLocation;

	[Token(Token = "0x40007A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x977C8C", Offset = "0x977C8C")]
	private bool <CloseToPlayer>k__BackingField;

	[Token(Token = "0x40007A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE1")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x977C9C", Offset = "0x977C9C")]
	private bool <SomewhatCloseToPlayer>k__BackingField;

	[Token(Token = "0x170000E1")]
	public bool IsStationary
	{
		[Token(Token = "0x6000814")]
		[Address(RVA = "0xC4F8A0", Offset = "0xC4F8A0", VA = "0xC4F8A0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9895D0", Offset = "0x9895D0")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000815")]
		[Address(RVA = "0xC4F8A8", Offset = "0xC4F8A8", VA = "0xC4F8A8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9895E0", Offset = "0x9895E0")]
		set
		{
		}
	}

	[Token(Token = "0x170000E2")]
	public CreatureAction CurrentBehavior
	{
		[Token(Token = "0x6000816")]
		[Address(RVA = "0xC4F3AC", Offset = "0xC4F3AC", VA = "0xC4F3AC")]
		get
		{
			return default(CreatureAction);
		}
	}

	[Token(Token = "0x170000E3")]
	public CreatureAction PreviousBehavior
	{
		[Token(Token = "0x6000817")]
		[Address(RVA = "0xC4F8C8", Offset = "0xC4F8C8", VA = "0xC4F8C8")]
		get
		{
			return default(CreatureAction);
		}
	}

	[Token(Token = "0x170000E4")]
	public float TimeLeft
	{
		[Token(Token = "0x6000818")]
		[Address(RVA = "0xC4F8D0", Offset = "0xC4F8D0", VA = "0xC4F8D0")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x170000E5")]
	public bool CloseToPlayer
	{
		[Token(Token = "0x6000819")]
		[Address(RVA = "0xC4F8D8", Offset = "0xC4F8D8", VA = "0xC4F8D8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9895F0", Offset = "0x9895F0")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600081A")]
		[Address(RVA = "0xC4F8E0", Offset = "0xC4F8E0", VA = "0xC4F8E0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x989600", Offset = "0x989600")]
		private set
		{
		}
	}

	[Token(Token = "0x170000E6")]
	public bool SomewhatCloseToPlayer
	{
		[Token(Token = "0x600081B")]
		[Address(RVA = "0xC4F8EC", Offset = "0xC4F8EC", VA = "0xC4F8EC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x989610", Offset = "0x989610")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600081C")]
		[Address(RVA = "0xC4F8F4", Offset = "0xC4F8F4", VA = "0xC4F8F4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x989620", Offset = "0x989620")]
		private set
		{
		}
	}

	[Token(Token = "0x170000E7")]
	public bool IsDomesticated
	{
		[Token(Token = "0x600081D")]
		[Address(RVA = "0xC4F900", Offset = "0xC4F900", VA = "0xC4F900")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170000E8")]
	public bool AllowedToLeave
	{
		[Token(Token = "0x600081E")]
		[Address(RVA = "0xC4F9A8", Offset = "0xC4F9A8", VA = "0xC4F9A8")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600081F")]
		[Address(RVA = "0xC4FA00", Offset = "0xC4FA00", VA = "0xC4FA00")]
		set
		{
		}
	}

	[Token(Token = "0x170000E9")]
	public float ReactionMargin
	{
		[Token(Token = "0x6000820")]
		[Address(RVA = "0xC4FA0C", Offset = "0xC4FA0C", VA = "0xC4FA0C")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000821")]
		[Address(RVA = "0xC4FA14", Offset = "0xC4FA14", VA = "0xC4FA14")]
		set
		{
		}
	}

	[Token(Token = "0x170000EA")]
	public float CloseDistance
	{
		[Token(Token = "0x6000822")]
		[Address(RVA = "0xC4FA1C", Offset = "0xC4FA1C", VA = "0xC4FA1C")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000823")]
		[Address(RVA = "0xC4FA24", Offset = "0xC4FA24", VA = "0xC4FA24")]
		set
		{
		}
	}

	[Token(Token = "0x170000EB")]
	public bool CanBeTamed
	{
		[Token(Token = "0x6000824")]
		[Address(RVA = "0xC4FA2C", Offset = "0xC4FA2C", VA = "0xC4FA2C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170000EC")]
	public int TamenessLevel
	{
		[Token(Token = "0x6000825")]
		[Address(RVA = "0xC4FA48", Offset = "0xC4FA48", VA = "0xC4FA48")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x170000ED")]
	public float Tameness
	{
		[Token(Token = "0x6000826")]
		[Address(RVA = "0xC4FB18", Offset = "0xC4FB18", VA = "0xC4FB18")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x170000EE")]
	public BreedableCreature BreedableCreature
	{
		[Token(Token = "0x6000827")]
		[Address(RVA = "0xC4FBBC", Offset = "0xC4FBBC", VA = "0xC4FBBC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000EF")]
	public bool IsInitialized
	{
		[Token(Token = "0x6000828")]
		[Address(RVA = "0xC4FBC4", Offset = "0xC4FBC4", VA = "0xC4FBC4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170000F0")]
	public CreatureMovement Movement
	{
		[Token(Token = "0x6000829")]
		[Address(RVA = "0xC4FBCC", Offset = "0xC4FBCC", VA = "0xC4FBCC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600082A")]
	[Address(RVA = "0xC4FBD4", Offset = "0xC4FBD4", VA = "0xC4FBD4")]
	public CreatureType GetCreatureType()
	{
		return default(CreatureType);
	}

	[Token(Token = "0x600082B")]
	[Address(RVA = "0xC4FBDC", Offset = "0xC4FBDC", VA = "0xC4FBDC")]
	public GrowthStateType GetGrowthStateType()
	{
		return default(GrowthStateType);
	}

	[Token(Token = "0x600082C")]
	[Address(RVA = "0xC4FBE4", Offset = "0xC4FBE4", VA = "0xC4FBE4", Slot = "4")]
	public void Initialize()
	{
	}

	[Token(Token = "0x600082D")]
	[Address(RVA = "0xC4FE94", Offset = "0xC4FE94", VA = "0xC4FE94")]
	private void RegisterAnimal()
	{
	}

	[Token(Token = "0x600082E")]
	[Address(RVA = "0xC4FEFC", Offset = "0xC4FEFC", VA = "0xC4FEFC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600082F")]
	[Address(RVA = "0xC501EC", Offset = "0xC501EC", VA = "0xC501EC")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000830")]
	[Address(RVA = "0xC5050C", Offset = "0xC5050C", VA = "0xC5050C")]
	private void OnCreatureTamenessInitialized()
	{
	}

	[Token(Token = "0x6000831")]
	[Address(RVA = "0xC50530", Offset = "0xC50530", VA = "0xC50530")]
	private void RemoveIfAlreadyLeft()
	{
	}

	[Token(Token = "0x6000832")]
	[Address(RVA = "0xC50610", Offset = "0xC50610", VA = "0xC50610")]
	public void UpdateNewDay(int dayNumber)
	{
	}

	[Token(Token = "0x6000833")]
	[Address(RVA = "0xC506C4", Offset = "0xC506C4", VA = "0xC506C4")]
	public void OnVisitorEnter()
	{
	}

	[Token(Token = "0x6000834")]
	[Address(RVA = "0xC506C8", Offset = "0xC506C8", VA = "0xC506C8")]
	public void OnVisitorLeave(int leavingDay)
	{
	}

	[Token(Token = "0x6000835")]
	[Address(RVA = "0xC48C18", Offset = "0xC48C18", VA = "0xC48C18")]
	public void CancelLeaving()
	{
	}

	[Token(Token = "0x6000836")]
	[Address(RVA = "0xC50700", Offset = "0xC50700", VA = "0xC50700")]
	public bool TryGetFirstDay(out int firstDay)
	{
		return default(bool);
	}

	[Token(Token = "0x6000837")]
	[Address(RVA = "0xC48C3C", Offset = "0xC48C3C", VA = "0xC48C3C")]
	public bool TrySetFirstDay(int firstDay)
	{
		return default(bool);
	}

	[Token(Token = "0x6000838")]
	[Address(RVA = "0xC50740", Offset = "0xC50740", VA = "0xC50740")]
	public int GetLastUpdatedDay()
	{
		return default(int);
	}

	[Token(Token = "0x6000839")]
	[Address(RVA = "0xC4F8B4", Offset = "0xC4F8B4", VA = "0xC4F8B4")]
	private bool HasSpecialActionOverride()
	{
		return default(bool);
	}

	[Token(Token = "0x600083A")]
	[Address(RVA = "0xC5075C", Offset = "0xC5075C", VA = "0xC5075C")]
	public void UpdateOften(float dt)
	{
	}

	[Token(Token = "0x600083B")]
	[Address(RVA = "0xC50BFC", Offset = "0xC50BFC", VA = "0xC50BFC")]
	private void UpdateGrowthAndSpeed(float dt)
	{
	}

	[Token(Token = "0x600083C")]
	[Address(RVA = "0xC514B8", Offset = "0xC514B8", VA = "0xC514B8")]
	public bool CanMove()
	{
		return default(bool);
	}

	[Token(Token = "0x600083D")]
	[Address(RVA = "0xC514D0", Offset = "0xC514D0", VA = "0xC514D0")]
	public void UpdateIntermittently(float dt)
	{
	}

	[Token(Token = "0x600083E")]
	[Address(RVA = "0xC51F04", Offset = "0xC51F04", VA = "0xC51F04")]
	public static bool ResourceTypeIsNest(CraftingSystem.ResourceType resourceType)
	{
		return default(bool);
	}

	[Token(Token = "0x600083F")]
	[Address(RVA = "0xC52194", Offset = "0xC52194", VA = "0xC52194")]
	public static bool ResourceTypeIsBreedingItem(CraftingSystem.ResourceType resourceType)
	{
		return default(bool);
	}

	[Token(Token = "0x6000840")]
	[Address(RVA = "0xC51A38", Offset = "0xC51A38", VA = "0xC51A38")]
	private AnimalBarnSpot FindSpotForBreeding()
	{
		return null;
	}

	[Token(Token = "0x6000841")]
	[Address(RVA = "0xC51AD8", Offset = "0xC51AD8", VA = "0xC51AD8")]
	public bool CanRequestNest()
	{
		return default(bool);
	}

	[Token(Token = "0x6000842")]
	[Address(RVA = "0xC521E4", Offset = "0xC521E4", VA = "0xC521E4")]
	public bool IsRequestingNestOfType(CraftingSystem.ResourceType resourceType)
	{
		return default(bool);
	}

	[Token(Token = "0x6000843")]
	[Address(RVA = "0xC522D8", Offset = "0xC522D8", VA = "0xC522D8")]
	public bool WantsABarnSpot()
	{
		return default(bool);
	}

	[Token(Token = "0x6000844")]
	[Address(RVA = "0xC52360", Offset = "0xC52360", VA = "0xC52360")]
	private CreatureAction NextWantedAction(AnimalNavigationTarget target)
	{
		return default(CreatureAction);
	}

	[Token(Token = "0x6000845")]
	[Address(RVA = "0xC50D60", Offset = "0xC50D60", VA = "0xC50D60")]
	private void UpdateStayAtLocation()
	{
	}

	[Token(Token = "0x6000846")]
	[Address(RVA = "0xC50DEC", Offset = "0xC50DEC", VA = "0xC50DEC")]
	private void UpdateIdle()
	{
	}

	[Token(Token = "0x6000847")]
	[Address(RVA = "0xC50D64", Offset = "0xC50D64", VA = "0xC50D64")]
	private void UpdateGoToPoint()
	{
	}

	[Token(Token = "0x6000848")]
	[Address(RVA = "0xC52440", Offset = "0xC52440", VA = "0xC52440")]
	private CreatureAction TryGetGoToAction()
	{
		return default(CreatureAction);
	}

	[Token(Token = "0x6000849")]
	[Address(RVA = "0xC524F4", Offset = "0xC524F4", VA = "0xC524F4")]
	private void GoToNewPoint()
	{
	}

	[Token(Token = "0x600084A")]
	[Address(RVA = "0xC50E18", Offset = "0xC50E18", VA = "0xC50E18")]
	private void DoAction(CreatureAction action)
	{
	}

	[Token(Token = "0x600084B")]
	[Address(RVA = "0xC52AE8", Offset = "0xC52AE8", VA = "0xC52AE8")]
	public void SpawnEggInClaimedSpot(AnimalBarnSpot barnsSpot)
	{
	}

	[Token(Token = "0x600084C")]
	[Address(RVA = "0xC52B0C", Offset = "0xC52B0C", VA = "0xC52B0C")]
	public void StartTryingToEatFromHand()
	{
	}

	[Token(Token = "0x600084D")]
	[Address(RVA = "0xC52C00", Offset = "0xC52C00", VA = "0xC52C00")]
	public void OnObjectReceived(PlayerHand hand, Grabbable grabbable)
	{
	}

	[Token(Token = "0x600084E")]
	[Address(RVA = "0xC52FC0", Offset = "0xC52FC0", VA = "0xC52FC0")]
	private void ClaimBarnSpot(Grabbable grabbable)
	{
	}

	[Token(Token = "0x600084F")]
	[Address(RVA = "0xC530B0", Offset = "0xC530B0", VA = "0xC530B0")]
	public bool IsRequestedItem(CraftingSystem.ResourceType resourceType)
	{
		return default(bool);
	}

	[Token(Token = "0x6000850")]
	[Address(RVA = "0xC52D78", Offset = "0xC52D78", VA = "0xC52D78")]
	public bool CheckRecievedItem(Grabbable grabbable, CraftingSystem.ResourceType resourceType)
	{
		return default(bool);
	}

	[Token(Token = "0x6000851")]
	[Address(RVA = "0xC51284", Offset = "0xC51284", VA = "0xC51284")]
	private void TryToIncreaseTameness()
	{
	}

	[Token(Token = "0x6000852")]
	[Address(RVA = "0xC52DA0", Offset = "0xC52DA0", VA = "0xC52DA0")]
	private void ClaimBreedingSpot()
	{
	}

	[Token(Token = "0x6000853")]
	[Address(RVA = "0xC53464", Offset = "0xC53464", VA = "0xC53464")]
	public void StopTryingToEatFromHand()
	{
	}

	[Token(Token = "0x6000854")]
	[Address(RVA = "0xC53470", Offset = "0xC53470", VA = "0xC53470")]
	public void OnPettingStart()
	{
	}

	[Token(Token = "0x6000855")]
	[Address(RVA = "0xC53528", Offset = "0xC53528", VA = "0xC53528")]
	public void OnPettingEnd()
	{
	}

	[Token(Token = "0x6000856")]
	[Address(RVA = "0xC52B68", Offset = "0xC52B68", VA = "0xC52B68")]
	private bool IsGrownUp()
	{
		return default(bool);
	}

	[Token(Token = "0x6000857")]
	[Address(RVA = "0xC52BB8", Offset = "0xC52BB8", VA = "0xC52BB8")]
	public void SetSpecialActionOverride(CreatureAction action)
	{
	}

	[Token(Token = "0x6000858")]
	[Address(RVA = "0xC52D6C", Offset = "0xC52D6C", VA = "0xC52D6C")]
	public void ClearSpecialActionOverride()
	{
	}

	[Token(Token = "0x6000859")]
	[Address(RVA = "0xC53538", Offset = "0xC53538", VA = "0xC53538")]
	public void TryToReachNavmeshPosition(Vector3 navmeshPos)
	{
	}

	[Token(Token = "0x600085A")]
	[Address(RVA = "0xC53558", Offset = "0xC53558", VA = "0xC53558")]
	public SaveID GetSaveID()
	{
		return default(SaveID);
	}

	[Token(Token = "0x600085B")]
	[Address(RVA = "0xC535EC", Offset = "0xC535EC", VA = "0xC535EC")]
	public void AssignBarnSpot(AnimalBarnSpot spot, int adornmentIndex)
	{
	}

	[Token(Token = "0x600085C")]
	[Address(RVA = "0xC53704", Offset = "0xC53704", VA = "0xC53704")]
	public void ResetBarnSpot()
	{
	}

	[Token(Token = "0x600085D")]
	[Address(RVA = "0xC53760", Offset = "0xC53760", VA = "0xC53760")]
	public void SetClaimedBreedingSpot(AnimalBarnSpot spot)
	{
	}

	[Token(Token = "0x600085E")]
	[Address(RVA = "0xC53824", Offset = "0xC53824", VA = "0xC53824")]
	public void ResetBreedingSpot()
	{
	}

	[Token(Token = "0x600085F")]
	[Address(RVA = "0xC4F904", Offset = "0xC4F904", VA = "0xC4F904")]
	public bool HasAssignedBarnSpot()
	{
		return default(bool);
	}

	[Token(Token = "0x6000860")]
	[Address(RVA = "0xC51774", Offset = "0xC51774", VA = "0xC51774")]
	public bool HasClaimedSpotForBreeding()
	{
		return default(bool);
	}

	[Token(Token = "0x6000861")]
	[Address(RVA = "0xC53830", Offset = "0xC53830", VA = "0xC53830")]
	public AnimalBarnSpot GetClaimedSpotForBreeding()
	{
		return null;
	}

	[Token(Token = "0x6000862")]
	[Address(RVA = "0xC521BC", Offset = "0xC521BC", VA = "0xC521BC")]
	public bool IsTame()
	{
		return default(bool);
	}

	[Token(Token = "0x6000863")]
	[Address(RVA = "0xC4FA4C", Offset = "0xC4FA4C", VA = "0xC4FA4C")]
	private int TryGetTamenessLevel()
	{
		return default(int);
	}

	[Token(Token = "0x6000864")]
	[Address(RVA = "0xC4FB1C", Offset = "0xC4FB1C", VA = "0xC4FB1C")]
	private float TryGetTameness()
	{
		return default(float);
	}

	[Token(Token = "0x6000865")]
	[Address(RVA = "0xC53930", Offset = "0xC53930", VA = "0xC53930")]
	public CreatureBehaviour()
	{
	}
}
[Token(Token = "0x2000176")]
public class CreatureMovement : MonoBehaviour, IInitializable
{
	[Token(Token = "0x2000177")]
	public enum CreatureMovementState
	{
		[Token(Token = "0x40007CD")]
		Idle,
		[Token(Token = "0x40007CE")]
		WaitingForPath,
		[Token(Token = "0x40007CF")]
		Turning,
		[Token(Token = "0x40007D0")]
		Moving,
		[Token(Token = "0x40007D1")]
		NoTarget,
		[Token(Token = "0x40007D2")]
		Disabled
	}

	[Token(Token = "0x40007B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private float maxDistanceToNextTarget;

	[Token(Token = "0x40007B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private bool m_shouldStopToTurn;

	[Token(Token = "0x40007B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private NavMeshAgent agent;

	[Token(Token = "0x40007B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private CreatureBehaviour creature;

	[Token(Token = "0x40007B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Vector3 m_tryingToReachPosition;

	[Token(Token = "0x40007BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private CreatureMovementState currentState;

	[Token(Token = "0x40007BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private CreatureMovementState previousState;

	[Token(Token = "0x40007BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private Vector3 currentTargetPosition;

	[Token(Token = "0x40007BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private AnimalNavigationTarget nextTarget;

	[Token(Token = "0x40007BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private AnimalNavigationTarget currentTarget;

	[Token(Token = "0x40007BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private float timeSpentNotMoving;

	[Token(Token = "0x40007C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private float currentTurnDirection;

	[Token(Token = "0x40007C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private float angleNeededToTurn;

	[Token(Token = "0x40007C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private float angleLeftToTurn;

	[Token(Token = "0x40007C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private float timeSpentTurning;

	[Token(Token = "0x40007C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x977CDC", Offset = "0x977CDC")]
	private bool <MovingAroundCurrentTarget>k__BackingField;

	[Token(Token = "0x40007C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private int numTargetsTried;

	[Token(Token = "0x40007C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private float m_originalSpeed;

	[Token(Token = "0x40007C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private float m_turnSpeed;

	[Token(Token = "0x40007C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private bool m_hasForcedMovement;

	[Token(Token = "0x40007C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private Vector3 m_forcedMovementTarget;

	[Token(Token = "0x40007CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private Vector3 m_forcedVelocity;

	[Token(Token = "0x40007CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x977CEC", Offset = "0x977CEC")]
	private bool <Initialized>k__BackingField;

	[Token(Token = "0x170000F1")]
	public float CurrentSpeedNormalized
	{
		[Token(Token = "0x6000866")]
		[Address(RVA = "0xC4F3A8", Offset = "0xC4F3A8", VA = "0xC4F3A8")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x170000F2")]
	public float CurrentAngularSpeedNormalized
	{
		[Token(Token = "0x6000867")]
		[Address(RVA = "0xC53A00", Offset = "0xC53A00", VA = "0xC53A00")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x170000F3")]
	public CreatureMovementState CurrentMovementState
	{
		[Token(Token = "0x6000868")]
		[Address(RVA = "0xC53A08", Offset = "0xC53A08", VA = "0xC53A08")]
		get
		{
			return default(CreatureMovementState);
		}
	}

	[Token(Token = "0x170000F4")]
	public bool MovingAroundCurrentTarget
	{
		[Token(Token = "0x6000869")]
		[Address(RVA = "0xC53A10", Offset = "0xC53A10", VA = "0xC53A10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x989630", Offset = "0x989630")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600086A")]
		[Address(RVA = "0xC53A18", Offset = "0xC53A18", VA = "0xC53A18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x989640", Offset = "0x989640")]
		private set
		{
		}
	}

	[Token(Token = "0x170000F5")]
	public bool HasForcedMovement
	{
		[Token(Token = "0x600086B")]
		[Address(RVA = "0xC53A24", Offset = "0xC53A24", VA = "0xC53A24")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170000F6")]
	public Vector3 TemporaryTargetPosition
	{
		[Token(Token = "0x600086C")]
		[Address(RVA = "0xC53A2C", Offset = "0xC53A2C", VA = "0xC53A2C")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x170000F7")]
	public bool Initialized
	{
		[Token(Token = "0x600086D")]
		[Address(RVA = "0xC53A38", Offset = "0xC53A38", VA = "0xC53A38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x989650", Offset = "0x989650")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600086E")]
		[Address(RVA = "0xC53A40", Offset = "0xC53A40", VA = "0xC53A40")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x989660", Offset = "0x989660")]
		private set
		{
		}
	}

	[Token(Token = "0x600086F")]
	[Address(RVA = "0xC53A4C", Offset = "0xC53A4C", VA = "0xC53A4C", Slot = "4")]
	public void Initialize()
	{
	}

	[Token(Token = "0x6000870")]
	[Address(RVA = "0xC53C8C", Offset = "0xC53C8C", VA = "0xC53C8C")]
	public void AssignCreatureBehaviour(CreatureBehaviour creature)
	{
	}

	[Token(Token = "0x6000871")]
	[Address(RVA = "0xC5396C", Offset = "0xC5396C", VA = "0xC5396C")]
	private float GetCurrentSpeed()
	{
		return default(float);
	}

	[Token(Token = "0x6000872")]
	[Address(RVA = "0xC52454", Offset = "0xC52454", VA = "0xC52454")]
	public bool DidReachTarget()
	{
		return default(bool);
	}

	[Token(Token = "0x6000873")]
	[Address(RVA = "0xC53C94", Offset = "0xC53C94", VA = "0xC53C94")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000874")]
	[Address(RVA = "0xC54700", Offset = "0xC54700", VA = "0xC54700")]
	private bool TryStartIdleIfInvalidTarget()
	{
		return default(bool);
	}

	[Token(Token = "0x6000875")]
	[Address(RVA = "0xC54278", Offset = "0xC54278", VA = "0xC54278")]
	private void UpdateForcedMovement()
	{
	}

	[Token(Token = "0x6000876")]
	[Address(RVA = "0xC54690", Offset = "0xC54690", VA = "0xC54690")]
	private void TurnToFaceInDirection(Vector3 dir)
	{
	}

	[Token(Token = "0x6000877")]
	[Address(RVA = "0xC54AF8", Offset = "0xC54AF8", VA = "0xC54AF8")]
	private bool AlmostReachedTarget()
	{
		return default(bool);
	}

	[Token(Token = "0x6000878")]
	[Address(RVA = "0xC5499C", Offset = "0xC5499C", VA = "0xC5499C")]
	private void StopAtTarget()
	{
	}

	[Token(Token = "0x6000879")]
	[Address(RVA = "0xC549E0", Offset = "0xC549E0", VA = "0xC549E0")]
	private bool IsStuck()
	{
		return default(bool);
	}

	[Token(Token = "0x600087A")]
	[Address(RVA = "0xC542BC", Offset = "0xC542BC", VA = "0xC542BC")]
	private bool CannotFindPath()
	{
		return default(bool);
	}

	[Token(Token = "0x600087B")]
	[Address(RVA = "0xC524DC", Offset = "0xC524DC", VA = "0xC524DC")]
	public void CancelMovement()
	{
	}

	[Token(Token = "0x600087C")]
	[Address(RVA = "0xC5433C", Offset = "0xC5433C", VA = "0xC5433C")]
	private void MoveToPointWithinCurrentTarget()
	{
	}

	[Token(Token = "0x600087D")]
	[Address(RVA = "0xC5275C", Offset = "0xC5275C", VA = "0xC5275C")]
	public void MoveToTarget(AnimalNavigationTarget newTarget)
	{
	}

	[Token(Token = "0x600087E")]
	[Address(RVA = "0xC54F50", Offset = "0xC54F50", VA = "0xC54F50")]
	public void TryToReachNavmeshPosition(Vector3 navmeshPos)
	{
	}

	[Token(Token = "0x600087F")]
	[Address(RVA = "0xC54F5C", Offset = "0xC54F5C", VA = "0xC54F5C")]
	public void SetForcedMovement(CreatureMovementState forcedState, Vector3 pos)
	{
	}

	[Token(Token = "0x6000880")]
	[Address(RVA = "0xC55024", Offset = "0xC55024", VA = "0xC55024")]
	public void SetForcedMovement(CreatureMovementState forcedState, Vector3 pos, Vector3 vel)
	{
	}

	[Token(Token = "0x6000881")]
	[Address(RVA = "0xC55094", Offset = "0xC55094", VA = "0xC55094")]
	public void StopForcedMovement()
	{
	}

	[Token(Token = "0x6000882")]
	[Address(RVA = "0xC5511C", Offset = "0xC5511C", VA = "0xC5511C")]
	private AnimalNavigationTarget FindNewTarget(AnimalNavigationTarget.AnimalTargetType targetType = AnimalNavigationTarget.AnimalTargetType.None, float maxDistance = 0f)
	{
		return null;
	}

	[Token(Token = "0x6000883")]
	[Address(RVA = "0xC55338", Offset = "0xC55338", VA = "0xC55338")]
	public AnimalNavigationTarget FindNewTargetOfType(AnimalNavigationTarget.AnimalTargetType targetType, float maxDistance = 0f)
	{
		return null;
	}

	[Token(Token = "0x6000884")]
	[Address(RVA = "0xC526C0", Offset = "0xC526C0", VA = "0xC526C0")]
	public AnimalNavigationTarget FindAndMoveToNewTarget(AnimalNavigationTarget.AnimalTargetType targetType = AnimalNavigationTarget.AnimalTargetType.None, float maxDistance = 0f)
	{
		return null;
	}

	[Token(Token = "0x6000885")]
	[Address(RVA = "0xC54E14", Offset = "0xC54E14", VA = "0xC54E14")]
	private float CalculateAngleToTargetDir(Vector3 dir)
	{
		return default(float);
	}

	[Token(Token = "0x6000886")]
	[Address(RVA = "0xC54534", Offset = "0xC54534", VA = "0xC54534")]
	private bool IsFacingTarget()
	{
		return default(bool);
	}

	[Token(Token = "0x6000887")]
	[Address(RVA = "0xC54B2C", Offset = "0xC54B2C", VA = "0xC54B2C")]
	private int TurnDirectionToTarget(Vector3 dir)
	{
		return default(int);
	}

	[Token(Token = "0x6000888")]
	[Address(RVA = "0xC54C20", Offset = "0xC54C20", VA = "0xC54C20")]
	private void StartIdling()
	{
	}

	[Token(Token = "0x6000889")]
	[Address(RVA = "0xC54D28", Offset = "0xC54D28", VA = "0xC54D28")]
	private bool HasValidTarget()
	{
		return default(bool);
	}

	[Token(Token = "0x600088A")]
	[Address(RVA = "0xC54788", Offset = "0xC54788", VA = "0xC54788")]
	private Vector3 GetTargetPosition()
	{
		return default(Vector3);
	}

	[Token(Token = "0x600088B")]
	[Address(RVA = "0xC5533C", Offset = "0xC5533C", VA = "0xC5533C")]
	public AnimalNavigationTarget GetCurrentTarget()
	{
		return null;
	}

	[Token(Token = "0x600088C")]
	[Address(RVA = "0xC54834", Offset = "0xC54834", VA = "0xC54834")]
	private bool HasReachedTarget()
	{
		return default(bool);
	}

	[Token(Token = "0x600088D")]
	[Address(RVA = "0xC51490", Offset = "0xC51490", VA = "0xC51490")]
	public void SetAgentSpeed(float newSpeed)
	{
	}

	[Token(Token = "0x600088E")]
	[Address(RVA = "0xC55344", Offset = "0xC55344", VA = "0xC55344")]
	public CreatureMovement()
	{
	}
}
[Token(Token = "0x2000178")]
public class CreatureTameness : SaveableComponent, IInitializable
{
	[Token(Token = "0x40007D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static float MaxTameness;

	[Token(Token = "0x40007D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public static float DefaultTamenessIncrease;

	[Token(Token = "0x40007D5")]
	public const int DefaultRandomNestingPercentage = 1;

	[Token(Token = "0x40007D6")]
	public const float MaxNestingRequestDuration = 600f;

	[Token(Token = "0x40007D7")]
	private const float NestingIncrementPerSecond = 0.1f;

	[Token(Token = "0x40007D8")]
	private const float RewardDuration = 240f;

	[Token(Token = "0x40007D9")]
	private const float TamenessFalloffPerSecond = 0.0015f;

	[Token(Token = "0x40007DA")]
	private const float NormalTamenessFalloffTheshold = 900f;

	[Token(Token = "0x40007DB")]
	private const float FullTamenessFalloffTheshold = 1800f;

	[Token(Token = "0x40007DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private CreatureBehaviour m_creatureBehaviour;

	[Token(Token = "0x40007DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private bool m_canBeTamed;

	[Token(Token = "0x40007DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[SerializeField]
	private Milestone.MilestoneType m_milestoneRequiredForBarn;

	[Token(Token = "0x40007DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private AnimalTameMeter tameMeter;

	[Token(Token = "0x40007E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private SpriteRenderer m_moodBubbleIcon;

	[Token(Token = "0x40007E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private GameObject m_moodBubble;

	[Token(Token = "0x40007E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private CreatureGiftSystem m_giftingSystem;

	[Token(Token = "0x40007E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private AttachSlot m_attatchSlot;

	[Token(Token = "0x40007E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private float m_rewardTimer;

	[Token(Token = "0x40007E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private uint m_numSpawnedRewards;

	[Token(Token = "0x40007E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private float delayBeforeFalloff;

	[Token(Token = "0x40007E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private float m_nestingMultiplier;

	[Token(Token = "0x40007E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private CreatureRequest m_currentRequest;

	[Token(Token = "0x40007E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Grabbable m_heldItem;

	[Token(Token = "0x40007EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private CreatureType m_creatureType;

	[Token(Token = "0x40007EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private DateTime lastTimeInteractedWith;

	[Token(Token = "0x40007EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private float m_nestingRequestDuration;

	[Token(Token = "0x40007ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x977D6C", Offset = "0x977D6C")]
	private int <FirstDay>k__BackingField;

	[Token(Token = "0x40007EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x977D7C", Offset = "0x977D7C")]
	private int <LastDayUpdated>k__BackingField;

	[Token(Token = "0x40007EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x977D8C", Offset = "0x977D8C")]
	private int <LeavingDay>k__BackingField;

	[Token(Token = "0x40007F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x977D9C", Offset = "0x977D9C")]
	private bool <IsHatchingEgg>k__BackingField;

	[Token(Token = "0x40007F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	private SaveID m_hatchingEggId;

	[Token(Token = "0x40007F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public Action OnInitialized;

	[Token(Token = "0x170000F8")]
	public bool IsRequestingNest
	{
		[Token(Token = "0x600088F")]
		[Address(RVA = "0xC51E80", Offset = "0xC51E80", VA = "0xC51E80")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170000F9")]
	public bool IsRequestingBarnSpot
	{
		[Token(Token = "0x6000890")]
		[Address(RVA = "0xC51DD0", Offset = "0xC51DD0", VA = "0xC51DD0")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170000FA")]
	public bool CanBeTamed
	{
		[Token(Token = "0x6000891")]
		[Address(RVA = "0xC55BB8", Offset = "0xC55BB8", VA = "0xC55BB8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170000FB")]
	public bool IsHoldingBreedingItem
	{
		[Token(Token = "0x6000892")]
		[Address(RVA = "0xC51358", Offset = "0xC51358", VA = "0xC51358")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170000FC")]
	public int FirstDay
	{
		[Token(Token = "0x6000893")]
		[Address(RVA = "0xC55BC0", Offset = "0xC55BC0", VA = "0xC55BC0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x989670", Offset = "0x989670")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000894")]
		[Address(RVA = "0xC55BC8", Offset = "0xC55BC8", VA = "0xC55BC8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x989680", Offset = "0x989680")]
		private set
		{
		}
	}

	[Token(Token = "0x170000FD")]
	public int LastDayUpdated
	{
		[Token(Token = "0x6000895")]
		[Address(RVA = "0xC55BD0", Offset = "0xC55BD0", VA = "0xC55BD0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x989690", Offset = "0x989690")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000896")]
		[Address(RVA = "0xC55BD8", Offset = "0xC55BD8", VA = "0xC55BD8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9896A0", Offset = "0x9896A0")]
		private set
		{
		}
	}

	[Token(Token = "0x170000FE")]
	public int LeavingDay
	{
		[Token(Token = "0x6000897")]
		[Address(RVA = "0xC55BE0", Offset = "0xC55BE0", VA = "0xC55BE0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9896B0", Offset = "0x9896B0")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000898")]
		[Address(RVA = "0xC55BE8", Offset = "0xC55BE8", VA = "0xC55BE8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9896C0", Offset = "0x9896C0")]
		private set
		{
		}
	}

	[Token(Token = "0x170000FF")]
	public bool IsHatchingEgg
	{
		[Token(Token = "0x6000899")]
		[Address(RVA = "0xC55BF0", Offset = "0xC55BF0", VA = "0xC55BF0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9896D0", Offset = "0x9896D0")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600089A")]
		[Address(RVA = "0xC55BF8", Offset = "0xC55BF8", VA = "0xC55BF8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9896E0", Offset = "0x9896E0")]
		private set
		{
		}
	}

	[Token(Token = "0x17000100")]
	public float Tameness
	{
		[Token(Token = "0x600089B")]
		[Address(RVA = "0xC53914", Offset = "0xC53914", VA = "0xC53914")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x600089C")]
	[Address(RVA = "0xC55C04", Offset = "0xC55C04", VA = "0xC55C04", Slot = "4")]
	public override ComponentState CreateState()
	{
		return null;
	}

	[Token(Token = "0x600089D")]
	[Address(RVA = "0xC55ED0", Offset = "0xC55ED0", VA = "0xC55ED0", Slot = "5")]
	public void Initialize()
	{
	}

	[Token(Token = "0x600089E")]
	[Address(RVA = "0xC506EC", Offset = "0xC506EC", VA = "0xC506EC")]
	public void SetLeavingDay(int leavingDay)
	{
	}

	[Token(Token = "0x600089F")]
	[Address(RVA = "0xC506F4", Offset = "0xC506F4", VA = "0xC506F4")]
	public void ResetLeavingDay()
	{
	}

	[Token(Token = "0x60008A0")]
	[Address(RVA = "0xC506B0", Offset = "0xC506B0", VA = "0xC506B0")]
	public void UpdateNewDay(int dayNumber)
	{
	}

	[Token(Token = "0x60008A1")]
	[Address(RVA = "0xC56C30", Offset = "0xC56C30", VA = "0xC56C30")]
	public void SetCanBeTamed(bool tameable)
	{
	}

	[Token(Token = "0x60008A2")]
	[Address(RVA = "0xC4FE64", Offset = "0xC4FE64", VA = "0xC4FE64")]
	public void InitCreature(CreatureBehaviour creature, CreatureType ct)
	{
	}

	[Token(Token = "0x60008A3")]
	[Address(RVA = "0xC532D0", Offset = "0xC532D0", VA = "0xC532D0")]
	public bool SufficientTimeHasPassedSinceLastIncrease()
	{
		return default(bool);
	}

	[Token(Token = "0x60008A4")]
	[Address(RVA = "0xC5336C", Offset = "0xC5336C", VA = "0xC5336C")]
	public void IncreaseTameness()
	{
	}

	[Token(Token = "0x60008A5")]
	[Address(RVA = "0xC5298C", Offset = "0xC5298C", VA = "0xC5298C")]
	public void UnlockEggMeter(bool unlocked)
	{
	}

	[Token(Token = "0x60008A6")]
	[Address(RVA = "0xC536E8", Offset = "0xC536E8", VA = "0xC536E8")]
	public void SetAdornment(int adornment)
	{
	}

	[Token(Token = "0x60008A7")]
	[Address(RVA = "0xC56C3C", Offset = "0xC56C3C", VA = "0xC56C3C")]
	private void IncreaseTameness(float value)
	{
	}

	[Token(Token = "0x60008A8")]
	[Address(RVA = "0xC56D10", Offset = "0xC56D10", VA = "0xC56D10")]
	private void SetDelayBeforeTamenessFalloff()
	{
	}

	[Token(Token = "0x60008A9")]
	[Address(RVA = "0xC51418", Offset = "0xC51418", VA = "0xC51418")]
	public void UpdateEggMeterVisibility(bool hasAssignedBarnSpot)
	{
	}

	[Token(Token = "0x60008AA")]
	[Address(RVA = "0xC56CAC", Offset = "0xC56CAC", VA = "0xC56CAC")]
	private void UpdateTamenessLevelChangeRequest(int levelChangeResult)
	{
	}

	[Token(Token = "0x60008AB")]
	[Address(RVA = "0xC51818", Offset = "0xC51818", VA = "0xC51818")]
	public void UpdateTamenessFalloff(float dt)
	{
	}

	[Token(Token = "0x60008AC")]
	[Address(RVA = "0xC52B90", Offset = "0xC52B90", VA = "0xC52B90")]
	public void ShowTamenessIndicator()
	{
	}

	[Token(Token = "0x60008AD")]
	[Address(RVA = "0xC50BE0", Offset = "0xC50BE0", VA = "0xC50BE0")]
	public void HideTamenessIndicator()
	{
	}

	[Token(Token = "0x60008AE")]
	[Address(RVA = "0xC564E4", Offset = "0xC564E4", VA = "0xC564E4")]
	public CreatureItemRequest RequestItemBySeed(uint seed)
	{
		return null;
	}

	[Token(Token = "0x60008AF")]
	[Address(RVA = "0xC50738", Offset = "0xC50738", VA = "0xC50738")]
	public void SetFirstDay(int firstDay)
	{
	}

	[Token(Token = "0x60008B0")]
	[Address(RVA = "0xC56D4C", Offset = "0xC56D4C", VA = "0xC56D4C")]
	public CreatureItemRequest RequestRandomItemAtTamenessLevel()
	{
		return null;
	}

	[Token(Token = "0x60008B1")]
	[Address(RVA = "0xC530D8", Offset = "0xC530D8", VA = "0xC530D8")]
	public bool CheckRequestedItem(CraftingSystem.ResourceType resourceType)
	{
		return default(bool);
	}

	[Token(Token = "0x60008B2")]
	[Address(RVA = "0xC52228", Offset = "0xC52228", VA = "0xC52228")]
	public bool CheckRequestedNest(CraftingSystem.ResourceType resourceType)
	{
		return default(bool);
	}

	[Token(Token = "0x60008B3")]
	[Address(RVA = "0xC53190", Offset = "0xC53190", VA = "0xC53190")]
	public bool CheckRecievedItem(Grabbable grabbable, CraftingSystem.ResourceType resourceType)
	{
		return default(bool);
	}

	[Token(Token = "0x60008B4")]
	[Address(RVA = "0xC565CC", Offset = "0xC565CC", VA = "0xC565CC")]
	private bool StartHoldingItem(Grabbable item)
	{
		return default(bool);
	}

	[Token(Token = "0x60008B5")]
	[Address(RVA = "0xC56F48", Offset = "0xC56F48", VA = "0xC56F48")]
	public void OnHeldItemGrabbedByPlayer(Grabbable item)
	{
	}

	[Token(Token = "0x60008B6")]
	[Address(RVA = "0xC57148", Offset = "0xC57148", VA = "0xC57148")]
	public Grabbable GetHeldItem()
	{
		return null;
	}

	[Token(Token = "0x60008B7")]
	[Address(RVA = "0xC56E88", Offset = "0xC56E88", VA = "0xC56E88")]
	public void DropHeldItem(bool makeGrabbable)
	{
	}

	[Token(Token = "0x60008B8")]
	[Address(RVA = "0xC51F24", Offset = "0xC51F24", VA = "0xC51F24")]
	public void DropHeldBreedingItem(bool makeGrabbable)
	{
	}

	[Token(Token = "0x60008B9")]
	[Address(RVA = "0xC57150", Offset = "0xC57150", VA = "0xC57150")]
	public void DropHeldGift(bool makeGrabbable)
	{
	}

	[Token(Token = "0x60008BA")]
	[Address(RVA = "0xC56E6C", Offset = "0xC56E6C", VA = "0xC56E6C")]
	public void PlayLevelUpEffect()
	{
	}

	[Token(Token = "0x60008BB")]
	[Address(RVA = "0xC51C70", Offset = "0xC51C70", VA = "0xC51C70")]
	public CreatureRequest RequestNest()
	{
		return null;
	}

	[Token(Token = "0x60008BC")]
	[Address(RVA = "0xC51978", Offset = "0xC51978", VA = "0xC51978")]
	public CreatureRequest RequestBarnSpot()
	{
		return null;
	}

	[Token(Token = "0x60008BD")]
	[Address(RVA = "0xC51E54", Offset = "0xC51E54", VA = "0xC51E54")]
	public void StopCurrentRequest()
	{
	}

	[Token(Token = "0x60008BE")]
	[Address(RVA = "0xC56E24", Offset = "0xC56E24", VA = "0xC56E24")]
	private void ShowRequestInBubble(CreatureRequest request)
	{
	}

	[Token(Token = "0x60008BF")]
	[Address(RVA = "0xC51910", Offset = "0xC51910", VA = "0xC51910")]
	public bool HasActiveRequest()
	{
		return default(bool);
	}

	[Token(Token = "0x60008C0")]
	[Address(RVA = "0xC52300", Offset = "0xC52300", VA = "0xC52300")]
	public CraftingSystem.ResourceType GetRequestedResourceType()
	{
		return default(CraftingSystem.ResourceType);
	}

	[Token(Token = "0x60008C1")]
	[Address(RVA = "0xC563A8", Offset = "0xC563A8", VA = "0xC563A8")]
	private void HideRequestbubble()
	{
	}

	[Token(Token = "0x60008C2")]
	[Address(RVA = "0xC57264", Offset = "0xC57264", VA = "0xC57264")]
	public void SetRewardTimer(float seconds)
	{
	}

	[Token(Token = "0x60008C3")]
	[Address(RVA = "0xC51CC4", Offset = "0xC51CC4", VA = "0xC51CC4")]
	public void UpdateRewardTimer(float dt, GrowthStateType creatureGrowthStateType)
	{
	}

	[Token(Token = "0x60008C4")]
	[Address(RVA = "0xC5726C", Offset = "0xC5726C", VA = "0xC5726C")]
	public bool SpawnReward(CreatureType creatureType, GrowthStateType growthStateType)
	{
		return default(bool);
	}

	[Token(Token = "0x60008C5")]
	[Address(RVA = "0xC57490", Offset = "0xC57490", VA = "0xC57490")]
	private void OnPostInitCallback(SpawnOperationCallbackData obj)
	{
	}

	[Token(Token = "0x60008C6")]
	[Address(RVA = "0xC563C8", Offset = "0xC563C8", VA = "0xC563C8")]
	private void TrySetRewardColor(SaveObjectBase rewardObject)
	{
	}

	[Token(Token = "0x60008C7")]
	[Address(RVA = "0xC518AC", Offset = "0xC518AC", VA = "0xC518AC")]
	public bool CanRequestBarnSpot()
	{
		return default(bool);
	}

	[Token(Token = "0x60008C8")]
	[Address(RVA = "0xC538C0", Offset = "0xC538C0", VA = "0xC538C0")]
	public bool IsCompletelyTame()
	{
		return default(bool);
	}

	[Token(Token = "0x60008C9")]
	[Address(RVA = "0xC519CC", Offset = "0xC519CC", VA = "0xC519CC")]
	public bool IsReadyToSpawnEgg()
	{
		return default(bool);
	}

	[Token(Token = "0x60008CA")]
	[Address(RVA = "0xC51BB4", Offset = "0xC51BB4", VA = "0xC51BB4")]
	public bool RandomlyWantsToNest(float dt)
	{
		return default(bool);
	}

	[Token(Token = "0x60008CB")]
	[Address(RVA = "0xC53428", Offset = "0xC53428", VA = "0xC53428")]
	public void IncreaseNestingProbability()
	{
	}

	[Token(Token = "0x60008CC")]
	[Address(RVA = "0xC52A14", Offset = "0xC52A14", VA = "0xC52A14")]
	public void SpawnEggInSpot(CreatureType creatureType, AnimalBarnSpot spot)
	{
	}

	[Token(Token = "0x60008CD")]
	[Address(RVA = "0xC574E8", Offset = "0xC574E8", VA = "0xC574E8")]
	private void OnEggSpawned(SpawnOperationCallbackData data)
	{
	}

	[Token(Token = "0x60008CE")]
	[Address(RVA = "0xC57670", Offset = "0xC57670", VA = "0xC57670")]
	private void OnChildSpawned(SpawnOperationCallbackData data)
	{
	}

	[Token(Token = "0x60008CF")]
	[Address(RVA = "0xC4F9E4", Offset = "0xC4F9E4", VA = "0xC4F9E4")]
	public bool IsHoldingItem()
	{
		return default(bool);
	}

	[Token(Token = "0x60008D0")]
	[Address(RVA = "0xC5784C", Offset = "0xC5784C", VA = "0xC5784C")]
	public CreatureTameness()
	{
	}
}
[Serializable]
[Token(Token = "0x2000179")]
public class CreatureTamenessState : ComponentState
{
	[Token(Token = "0x40007F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public bool CanBeTamed;

	[Token(Token = "0x40007F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float TamenessLevel;

	[Token(Token = "0x40007F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float DelayUntilFalloff;

	[Token(Token = "0x40007F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool EggMeterUnlocked;

	[Token(Token = "0x40007F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public uint RequestSeed;

	[Token(Token = "0x40007F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public uint SpawnedRewards;

	[Token(Token = "0x40007F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float RewardTimer;

	[Token(Token = "0x40007FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public SaveID HatchingEggId;

	[Token(Token = "0x40007FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public SaveID HeldItemId;

	[Token(Token = "0x40007FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public int FirstDay;

	[Token(Token = "0x40007FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public int LastDayUpdated;

	[Token(Token = "0x40007FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public int LeavingDay;

	[Token(Token = "0x60008D2")]
	[Address(RVA = "0xC55E04", Offset = "0xC55E04", VA = "0xC55E04")]
	public CreatureTamenessState(bool canBeTamed, float tamenessLevel, float delayBeforeFalloff, bool eggMeterUnlocked, uint requestSeed, float rewardTimer, uint numSpawnedRewards, int firstDay, int lastDayUpdated, int leavingDay, SaveID eggId, SaveID heldItemId)
	{
	}
}
[Token(Token = "0x200017A")]
public class EatingBehavior : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x200017B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x971C08", Offset = "0x971C08")]
	private sealed class <>c
	{
		[Token(Token = "0x4000812")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4000813")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Action<PlayerHand, Grabbable> <>9__35_0;

		[Token(Token = "0x4000814")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static Action <>9__35_1;

		[Token(Token = "0x4000815")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static Action <>9__35_2;

		[Token(Token = "0x60008E5")]
		[Address(RVA = "0xBF8C78", Offset = "0xBF8C78", VA = "0xBF8C78")]
		public <>c()
		{
		}

		[Token(Token = "0x60008E6")]
		[Address(RVA = "0xBF8C80", Offset = "0xBF8C80", VA = "0xBF8C80")]
		internal void <.ctor>b__35_0(PlayerHand <p0>, Grabbable <p1>)
		{
		}

		[Token(Token = "0x60008E7")]
		[Address(RVA = "0xBF8C84", Offset = "0xBF8C84", VA = "0xBF8C84")]
		internal void <.ctor>b__35_1()
		{
		}

		[Token(Token = "0x60008E8")]
		[Address(RVA = "0xBF8C88", Offset = "0xBF8C88", VA = "0xBF8C88")]
		internal void <.ctor>b__35_2()
		{
		}
	}

	[Token(Token = "0x40007FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x977DAC", Offset = "0x977DAC")]
	private CraftingSystem.ResourceTypeEnum favoriteFood;

	[Token(Token = "0x4000800")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private ParticleSystem happyParticles;

	[Token(Token = "0x4000801")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private GameObject moodBubble;

	[Token(Token = "0x4000802")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Transform m_foodTargetPosition;

	[Token(Token = "0x4000803")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x977E28", Offset = "0x977E28")]
	public UnityEvent OnEat;

	[Token(Token = "0x4000804")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public UnityEvent OnEatFavoriteFood;

	[Token(Token = "0x4000805")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public UnityEvent OnOpenMouth;

	[Token(Token = "0x4000806")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public UnityEvent OnCloseMouth;

	[Token(Token = "0x4000807")]
	private const float chewingTime = 0.4f;

	[Token(Token = "0x4000808")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float timeLeft;

	[Token(Token = "0x4000809")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private float originalScale;

	[Token(Token = "0x400080A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private float distanceToMouth;

	[Token(Token = "0x400080B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Grabbable foodBeingEaten;

	[Token(Token = "0x400080C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Grabbable nearbyObjectOfInterest;

	[Token(Token = "0x400080D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private PlayerHand handHoldingItem;

	[Token(Token = "0x400080E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private CreatureBehaviour creature;

	[Token(Token = "0x14000012")]
	[HideInInspector]
	public event Action<PlayerHand, Grabbable> OnObjectReceived
	{
		[Token(Token = "0x60008D3")]
		[Address(RVA = "0xBF716C", Offset = "0xBF716C", VA = "0xBF716C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9896F0", Offset = "0x9896F0")]
		add
		{
		}
		[Token(Token = "0x60008D4")]
		[Address(RVA = "0xBF7210", Offset = "0xBF7210", VA = "0xBF7210")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x989700", Offset = "0x989700")]
		remove
		{
		}
	}

	[Token(Token = "0x14000013")]
	public event Action OnOpenMouthCallback
	{
		[Token(Token = "0x60008D5")]
		[Address(RVA = "0xBF72B4", Offset = "0xBF72B4", VA = "0xBF72B4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x989710", Offset = "0x989710")]
		add
		{
		}
		[Token(Token = "0x60008D6")]
		[Address(RVA = "0xBF7358", Offset = "0xBF7358", VA = "0xBF7358")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x989720", Offset = "0x989720")]
		remove
		{
		}
	}

	[Token(Token = "0x14000014")]
	public event Action OnCloseMouthCallback
	{
		[Token(Token = "0x60008D7")]
		[Address(RVA = "0xBF73FC", Offset = "0xBF73FC", VA = "0xBF73FC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x989730", Offset = "0x989730")]
		add
		{
		}
		[Token(Token = "0x60008D8")]
		[Address(RVA = "0xBF74A0", Offset = "0xBF74A0", VA = "0xBF74A0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x989740", Offset = "0x989740")]
		remove
		{
		}
	}

	[Token(Token = "0x60008D9")]
	[Address(RVA = "0xBF7544", Offset = "0xBF7544", VA = "0xBF7544")]
	public static Grabbable GetObjectOfInterest(CreatureBehaviour creature, GameObject go, out bool isFood)
	{
		return null;
	}

	[Token(Token = "0x60008DA")]
	[Address(RVA = "0xBF781C", Offset = "0xBF781C", VA = "0xBF781C")]
	public static Grabbable GetObjectOfInterest(GameObject go, out bool isFood)
	{
		return null;
	}

	[Token(Token = "0x60008DB")]
	[Address(RVA = "0xBF7A18", Offset = "0xBF7A18", VA = "0xBF7A18")]
	private static bool CanBeUsedNow(Grabbable grabbableItem)
	{
		return default(bool);
	}

	[Token(Token = "0x60008DC")]
	[Address(RVA = "0xBF7AC4", Offset = "0xBF7AC4", VA = "0xBF7AC4")]
	private void Start()
	{
	}

	[Token(Token = "0x60008DD")]
	[Address(RVA = "0xBF7BA4", Offset = "0xBF7BA4", VA = "0xBF7BA4")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x60008DE")]
	[Address(RVA = "0xBF802C", Offset = "0xBF802C", VA = "0xBF802C")]
	private Grabbable TryGetObjectOfInterest(Collider other, out bool isFood)
	{
		return null;
	}

	[Token(Token = "0x60008DF")]
	[Address(RVA = "0xBF80FC", Offset = "0xBF80FC", VA = "0xBF80FC")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60008E0")]
	[Address(RVA = "0xBF8248", Offset = "0xBF8248", VA = "0xBF8248")]
	private void OnTriggerStay(Collider other)
	{
	}

	[Token(Token = "0x60008E1")]
	[Address(RVA = "0xBF889C", Offset = "0xBF889C", VA = "0xBF889C")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x60008E2")]
	[Address(RVA = "0xBF8710", Offset = "0xBF8710", VA = "0xBF8710")]
	private void Eat(Grabbable grabbable)
	{
	}

	[Token(Token = "0x60008E3")]
	[Address(RVA = "0xBF89AC", Offset = "0xBF89AC", VA = "0xBF89AC")]
	public EatingBehavior()
	{
	}
}
[Token(Token = "0x200017C")]
public class LiftAndDisappear : MonoBehaviour
{
	[Token(Token = "0x200017D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x971C18", Offset = "0x971C18")]
	private sealed class <DelayFunction>d__14 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000820")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000821")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000822")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float sec;

		[Token(Token = "0x4000823")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public LiftAndDisappear <>4__this;

		[Token(Token = "0x17000101")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60008F2")]
			[Address(RVA = "0xBE5BFC", Offset = "0xBE5BFC", VA = "0xBE5BFC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000102")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60008F4")]
			[Address(RVA = "0xBE5C64", Offset = "0xBE5C64", VA = "0xBE5C64", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60008EF")]
		[Address(RVA = "0xBE5AD8", Offset = "0xBE5AD8", VA = "0xBE5AD8")]
		[DebuggerHidden]
		public <DelayFunction>d__14(int <>1__state)
		{
		}

		[Token(Token = "0x60008F0")]
		[Address(RVA = "0xBE5B28", Offset = "0xBE5B28", VA = "0xBE5B28", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60008F1")]
		[Address(RVA = "0xBE5B2C", Offset = "0xBE5B2C", VA = "0xBE5B2C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60008F3")]
		[Address(RVA = "0xBE5C04", Offset = "0xBE5C04", VA = "0xBE5C04", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000816")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x977E90", Offset = "0x977E90")]
	public GameObject objectToLift;

	[Token(Token = "0x4000817")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x977EC8", Offset = "0x977EC8")]
	public GameObject objectParticles;

	[Token(Token = "0x4000818")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x977F00", Offset = "0x977F00")]
	public GameObject bubble;

	[Token(Token = "0x4000819")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x977F38", Offset = "0x977F38")]
	public GameObject disappearEffect;

	[Token(Token = "0x400081A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform bubbleStartPosition;

	[Token(Token = "0x400081B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool readyToYeet;

	[Token(Token = "0x400081C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[SerializeField]
	private float scaleItemInBubble;

	[Token(Token = "0x400081D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private bool disableRendererWhenDisappearing;

	[Token(Token = "0x400081E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
	[SerializeField]
	private bool disableGameObjectAfterDelay;

	[Token(Token = "0x400081F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private float originalItemScale;

	[Token(Token = "0x60008E9")]
	[Address(RVA = "0xBE54A0", Offset = "0xBE54A0", VA = "0xBE54A0")]
	public void BubbleOfThings()
	{
	}

	[Token(Token = "0x60008EA")]
	[Address(RVA = "0xBE572C", Offset = "0xBE572C", VA = "0xBE572C")]
	public void BubbleUp()
	{
	}

	[Token(Token = "0x60008EB")]
	[Address(RVA = "0xBE58F8", Offset = "0xBE58F8", VA = "0xBE58F8")]
	public void BubbleOfThingsEnd()
	{
	}

	[Token(Token = "0x60008EC")]
	[Address(RVA = "0xBE58FC", Offset = "0xBE58FC", VA = "0xBE58FC")]
	public void SpawnDissapearing()
	{
	}

	[Token(Token = "0x60008ED")]
	[Address(RVA = "0xBE5A4C", Offset = "0xBE5A4C", VA = "0xBE5A4C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x989750", Offset = "0x989750")]
	private IEnumerator DelayFunction(float sec)
	{
		return null;
	}

	[Token(Token = "0x60008EE")]
	[Address(RVA = "0xBE5B04", Offset = "0xBE5B04", VA = "0xBE5B04")]
	public LiftAndDisappear()
	{
	}
}
[Token(Token = "0x200017E")]
public class LookAtPlayer : MonoBehaviour
{
	[Token(Token = "0x200017F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x971C28", Offset = "0x971C28")]
	private sealed class <StopForcedUpdatesAfterDelay>d__15 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400082E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400082F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000830")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LookAtPlayer <>4__this;

		[Token(Token = "0x17000103")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60008FF")]
			[Address(RVA = "0xBEE608", Offset = "0xBEE608", VA = "0xBEE608", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000104")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000901")]
			[Address(RVA = "0xBEE670", Offset = "0xBEE670", VA = "0xBEE670", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60008FC")]
		[Address(RVA = "0xBEE4DC", Offset = "0xBEE4DC", VA = "0xBEE4DC")]
		[DebuggerHidden]
		public <StopForcedUpdatesAfterDelay>d__15(int <>1__state)
		{
		}

		[Token(Token = "0x60008FD")]
		[Address(RVA = "0xBEE588", Offset = "0xBEE588", VA = "0xBEE588", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60008FE")]
		[Address(RVA = "0xBEE58C", Offset = "0xBEE58C", VA = "0xBEE58C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000900")]
		[Address(RVA = "0xBEE610", Offset = "0xBEE610", VA = "0xBEE610", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000824")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private float maxDistanceFromPlayer;

	[Token(Token = "0x4000825")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private FLookAnimator lookAtAnimator;

	[Token(Token = "0x4000826")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool hasLookAtAnimator;

	[Token(Token = "0x4000827")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	private bool isCloseToPlayer;

	[Token(Token = "0x4000828")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float maxDistanceSquared;

	[Token(Token = "0x4000829")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float maxDistanceSquaredForUpdate;

	[Token(Token = "0x400082A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public bool m_forceLookAtPlayer;

	[Token(Token = "0x400082B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x35")]
	private bool m_forceUpdate;

	[Token(Token = "0x400082C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Coroutine m_stopDelayRoutine;

	[Token(Token = "0x400082D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private YieldInstruction m_delayStopInstruction;

	[Token(Token = "0x60008F5")]
	[Address(RVA = "0xBEE06C", Offset = "0xBEE06C", VA = "0xBEE06C")]
	private void Awake()
	{
	}

	[Token(Token = "0x60008F6")]
	[Address(RVA = "0xBEE120", Offset = "0xBEE120", VA = "0xBEE120")]
	private void Update()
	{
	}

	[Token(Token = "0x60008F7")]
	[Address(RVA = "0xBEE354", Offset = "0xBEE354", VA = "0xBEE354")]
	public void ForceLookAtPlayer(bool value)
	{
	}

	[Token(Token = "0x60008F8")]
	[Address(RVA = "0xBEE360", Offset = "0xBEE360", VA = "0xBEE360")]
	public void StartForcedLookAt()
	{
	}

	[Token(Token = "0x60008F9")]
	[Address(RVA = "0xBEE3D0", Offset = "0xBEE3D0", VA = "0xBEE3D0")]
	public void StopForcedLookAt()
	{
	}

	[Token(Token = "0x60008FA")]
	[Address(RVA = "0xBEE460", Offset = "0xBEE460", VA = "0xBEE460")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x989804", Offset = "0x989804")]
	private IEnumerator StopForcedUpdatesAfterDelay()
	{
		return null;
	}

	[Token(Token = "0x60008FB")]
	[Address(RVA = "0xBEE508", Offset = "0xBEE508", VA = "0xBEE508")]
	public LookAtPlayer()
	{
	}
}
[Token(Token = "0x2000180")]
public class Poopable : MonoBehaviour
{
	[Token(Token = "0x2000181")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x971C38", Offset = "0x971C38")]
	private sealed class <DelayCoroutine>d__7 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000835")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000836")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000837")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Poopable <>4__this;

		[Token(Token = "0x17000105")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600090A")]
			[Address(RVA = "0xD11A20", Offset = "0xD11A20", VA = "0xD11A20", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000106")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600090C")]
			[Address(RVA = "0xD11A88", Offset = "0xD11A88", VA = "0xD11A88", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000907")]
		[Address(RVA = "0xD118D8", Offset = "0xD118D8", VA = "0xD118D8")]
		[DebuggerHidden]
		public <DelayCoroutine>d__7(int <>1__state)
		{
		}

		[Token(Token = "0x6000908")]
		[Address(RVA = "0xD1191C", Offset = "0xD1191C", VA = "0xD1191C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000909")]
		[Address(RVA = "0xD11920", Offset = "0xD11920", VA = "0xD11920", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600090B")]
		[Address(RVA = "0xD11A28", Offset = "0xD11A28", VA = "0xD11A28", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000831")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float destroyPoopAfter;

	[Token(Token = "0x4000832")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool isConsideredPoop;

	[Token(Token = "0x4000833")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
	private bool isWaiting;

	[Token(Token = "0x4000834")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private SaveObjectBase saveObject;

	[Token(Token = "0x6000902")]
	[Address(RVA = "0xD116E4", Offset = "0xD116E4", VA = "0xD116E4")]
	public void TriggerSelfDestruct()
	{
	}

	[Token(Token = "0x6000903")]
	[Address(RVA = "0xD117B0", Offset = "0xD117B0", VA = "0xD117B0")]
	public void NoLongerConsiderPoop()
	{
	}

	[Token(Token = "0x6000904")]
	[Address(RVA = "0xD116E8", Offset = "0xD116E8", VA = "0xD116E8")]
	private void StartWaiting()
	{
	}

	[Token(Token = "0x6000905")]
	[Address(RVA = "0xD1185C", Offset = "0xD1185C", VA = "0xD1185C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9898B8", Offset = "0x9898B8")]
	private IEnumerator DelayCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000906")]
	[Address(RVA = "0xD11904", Offset = "0xD11904", VA = "0xD11904")]
	public Poopable()
	{
	}
}
[Token(Token = "0x2000182")]
public class Pooper : MonoBehaviour, IValidate
{
	[Token(Token = "0x2000183")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x971C48", Offset = "0x971C48")]
	private sealed class <DelayCoroutine>d__15 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000840")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000841")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000842")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Pooper <>4__this;

		[Token(Token = "0x4000843")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float waitTime;

		[Token(Token = "0x17000107")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000919")]
			[Address(RVA = "0xD120B4", Offset = "0xD120B4", VA = "0xD120B4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000108")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600091B")]
			[Address(RVA = "0xD1211C", Offset = "0xD1211C", VA = "0xD1211C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000916")]
		[Address(RVA = "0xD11F84", Offset = "0xD11F84", VA = "0xD11F84")]
		[DebuggerHidden]
		public <DelayCoroutine>d__15(int <>1__state)
		{
		}

		[Token(Token = "0x6000917")]
		[Address(RVA = "0xD11FC0", Offset = "0xD11FC0", VA = "0xD11FC0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000918")]
		[Address(RVA = "0xD11FC4", Offset = "0xD11FC4", VA = "0xD11FC4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600091A")]
		[Address(RVA = "0xD120BC", Offset = "0xD120BC", VA = "0xD120BC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000838")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AssetReference poopPrefab;

	[Token(Token = "0x4000839")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float poopingInterval;

	[Token(Token = "0x400083A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform poopSpawnPosition;

	[Token(Token = "0x400083B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool onlyPoopInPond;

	[Token(Token = "0x400083C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	private bool isInPond;

	[Token(Token = "0x400083D")]
	private const float timeUntilFirstPoop = 5f;

	[Token(Token = "0x400083E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "CacheReferenceAttribute", RVA = "0x977FD0", Offset = "0x977FD0")]
	[SerializeField]
	private Grabbable grabbable;

	[Token(Token = "0x400083F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool isWaiting;

	[Token(Token = "0x600090D")]
	[Address(RVA = "0xD11A90", Offset = "0xD11A90", VA = "0xD11A90")]
	private void Start()
	{
	}

	[Token(Token = "0x600090E")]
	[Address(RVA = "0xD11AAC", Offset = "0xD11AAC", VA = "0xD11AAC")]
	private void StartWaiting(float waitTime)
	{
	}

	[Token(Token = "0x600090F")]
	[Address(RVA = "0xD11BCC", Offset = "0xD11BCC", VA = "0xD11BCC")]
	private void StopWaiting()
	{
	}

	[Token(Token = "0x6000910")]
	[Address(RVA = "0xD11BD8", Offset = "0xD11BD8", VA = "0xD11BD8")]
	private void PoopAnObject()
	{
	}

	[Token(Token = "0x6000911")]
	[Address(RVA = "0xD11DE0", Offset = "0xD11DE0", VA = "0xD11DE0")]
	public void OnPoopSpawned(SpawnOperationCallbackData data)
	{
	}

	[Token(Token = "0x6000912")]
	[Address(RVA = "0xD11EB4", Offset = "0xD11EB4", VA = "0xD11EB4")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000913")]
	[Address(RVA = "0xD11F1C", Offset = "0xD11F1C", VA = "0xD11F1C")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x6000914")]
	[Address(RVA = "0xD11B40", Offset = "0xD11B40", VA = "0xD11B40")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x98996C", Offset = "0x98996C")]
	private IEnumerator DelayCoroutine(float waitTime)
	{
		return null;
	}

	[Token(Token = "0x6000915")]
	[Address(RVA = "0xD11FB0", Offset = "0xD11FB0", VA = "0xD11FB0")]
	public Pooper()
	{
	}
}
[Token(Token = "0x2000184")]
public interface IDataRowInterface
{
}
[Token(Token = "0x2000185")]
public abstract class DataAsset : ScriptableObject
{
	[Serializable]
	[Token(Token = "0x2000186")]
	public struct DataRowEntry
	{
		[Token(Token = "0x4000848")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string EntryName;

		[Token(Token = "0x4000849")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public string EntryData;
	}

	[Serializable]
	[Token(Token = "0x2000187")]
	public struct DataRow
	{
		[Token(Token = "0x400084A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string RowName;

		[Token(Token = "0x400084B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public DataRowEntry[] RowData;
	}

	[Token(Token = "0x4000844")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string[] CSVColumnNames;

	[Token(Token = "0x4000845")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	public List<DataRow> RawData;

	[Token(Token = "0x4000846")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	protected Dictionary<string, IDataRowInterface> DataStorage;

	[Token(Token = "0x4000847")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public IDataRowInterface CurrentStructToPopulate;

	[Token(Token = "0x600091C")]
	[Address(RVA = "0xBF351C", Offset = "0xBF351C", VA = "0xBF351C")]
	protected IDataRowInterface GetData_Internal(string dataRowName)
	{
		return null;
	}

	[Token(Token = "0x600091D")]
	protected abstract void RepopulateDataStorage();

	[Token(Token = "0x600091E")]
	[Address(RVA = "0xBF35FC", Offset = "0xBF35FC", VA = "0xBF35FC")]
	protected DataAsset()
	{
	}
}
[Token(Token = "0x2000188")]
public class DataManager : MonoBehaviour
{
	[Token(Token = "0x400084C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static DataManager Instance_Internal;

	[Token(Token = "0x400084D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ItemDataAsset ItemData;

	[Token(Token = "0x17000109")]
	public static DataManager Instance
	{
		[Token(Token = "0x600091F")]
		[Address(RVA = "0xBF3604", Offset = "0xBF3604", VA = "0xBF3604")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000920")]
	[Address(RVA = "0xBF36D8", Offset = "0xBF36D8", VA = "0xBF36D8")]
	public static DataManager GetManager()
	{
		return null;
	}

	[Token(Token = "0x6000921")]
	[Address(RVA = "0xBF36DC", Offset = "0xBF36DC", VA = "0xBF36DC")]
	public void Awake()
	{
	}

	[Token(Token = "0x6000922")]
	[Address(RVA = "0xBF3734", Offset = "0xBF3734", VA = "0xBF3734")]
	public static bool GetItemData(string inItemName, out ItemDataAssetRow outItemData)
	{
		return default(bool);
	}

	[Token(Token = "0x6000923")]
	[Address(RVA = "0xBF3820", Offset = "0xBF3820", VA = "0xBF3820")]
	public DataManager()
	{
	}
}
[Serializable]
[Token(Token = "0x2000189")]
public struct ItemDataAssetRow : IDataRowInterface
{
	[Token(Token = "0x400084E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public string RowName;

	[Token(Token = "0x400084F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public int SellValue;

	[Token(Token = "0x4000850")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public int BuyValue;

	[Token(Token = "0x4000851")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public bool Sellable;

	[Token(Token = "0x4000852")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string MerchantType;
}
[Token(Token = "0x200018A")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x971C58", Offset = "0x971C58")]
public class ItemDataAsset : DataAsset
{
	[Token(Token = "0x4000853")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public List<ItemDataAssetRow> RawDataRows;

	[Token(Token = "0x6000924")]
	[Address(RVA = "0xBE3C64", Offset = "0xBE3C64", VA = "0xBE3C64")]
	public bool GetData(string dataRowName, out ItemDataAssetRow outData)
	{
		return default(bool);
	}

	[Token(Token = "0x6000925")]
	[Address(RVA = "0xBE3D14", Offset = "0xBE3D14", VA = "0xBE3D14", Slot = "4")]
	protected override void RepopulateDataStorage()
	{
	}

	[Token(Token = "0x6000926")]
	[Address(RVA = "0xBE3EA0", Offset = "0xBE3EA0", VA = "0xBE3EA0")]
	public ItemDataAsset()
	{
	}
}
[Token(Token = "0x200018B")]
public class GrabbableToolImpostor : GrabbableImpostor
{
	[Token(Token = "0x4000854")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public string toolName;

	[Token(Token = "0x4000855")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x978030", Offset = "0x978030")]
	private Tool_Base <Tool>k__BackingField;

	[Token(Token = "0x4000856")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private MeshRenderer rnd;

	[Token(Token = "0x4000857")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private MaterialPropertyBlock mpb;

	[Token(Token = "0x1700010A")]
	public Tool_Base Tool
	{
		[Token(Token = "0x6000927")]
		[Address(RVA = "0xBDA140", Offset = "0xBDA140", VA = "0xBDA140")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x989A20", Offset = "0x989A20")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000928")]
		[Address(RVA = "0xBDA148", Offset = "0xBDA148", VA = "0xBDA148")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x989A30", Offset = "0x989A30")]
		private set
		{
		}
	}

	[Token(Token = "0x6000929")]
	[Address(RVA = "0xBDA150", Offset = "0xBDA150", VA = "0xBDA150", Slot = "17")]
	public override void Initialize()
	{
	}

	[Token(Token = "0x600092A")]
	[Address(RVA = "0xBDA1E8", Offset = "0xBDA1E8", VA = "0xBDA1E8")]
	private void Awake()
	{
	}

	[Token(Token = "0x600092B")]
	[Address(RVA = "0xBDA2B8", Offset = "0xBDA2B8", VA = "0xBDA2B8", Slot = "18")]
	public override int GetCurrentPriority()
	{
		return default(int);
	}

	[Token(Token = "0x600092C")]
	[Address(RVA = "0xBDA2C0", Offset = "0xBDA2C0", VA = "0xBDA2C0", Slot = "20")]
	public override bool IsEnabled()
	{
		return default(bool);
	}

	[Token(Token = "0x600092D")]
	[Address(RVA = "0xBDA370", Offset = "0xBDA370", VA = "0xBDA370", Slot = "16")]
	public override Grabbable GetRealGrabbable()
	{
		return null;
	}

	[Token(Token = "0x600092E")]
	[Address(RVA = "0xBDA400", Offset = "0xBDA400", VA = "0xBDA400")]
	public GrabbableToolImpostor()
	{
	}
}
[Token(Token = "0x200018C")]
public class KillPlane : MonoBehaviour
{
	[Token(Token = "0x600092F")]
	[Address(RVA = "0xBE3EA8", Offset = "0xBE3EA8", VA = "0xBE3EA8")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000930")]
	[Address(RVA = "0xBE41A4", Offset = "0xBE41A4", VA = "0xBE41A4")]
	public KillPlane()
	{
	}
}
[Token(Token = "0x200018D")]
public class EnvironmentLight : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x200018E")]
	public struct LightData
	{
		[Token(Token = "0x400085E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float LightSize;

		[Token(Token = "0x400085F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public Color LightColor;

		[Token(Token = "0x4000860")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float LightViewDistance;

		[Token(Token = "0x4000861")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float LightFadeoutDistance;
	}

	[Token(Token = "0x4000858")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public LightData Data;

	[Token(Token = "0x4000859")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public bool StartActive;

	[Token(Token = "0x400085A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject LightVisuals;

	[Token(Token = "0x400085B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool ToggleVisualsWithLight;

	[Token(Token = "0x400085C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
	protected bool LightActive;

	[Token(Token = "0x400085D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private EnvironmentLightManager LightManagerReference;

	[Token(Token = "0x6000931")]
	[Address(RVA = "0xBF8D2C", Offset = "0xBF8D2C", VA = "0xBF8D2C")]
	protected EnvironmentLightManager GetLightManagerReference()
	{
		return null;
	}

	[Token(Token = "0x6000932")]
	[Address(RVA = "0xBF8DE8", Offset = "0xBF8DE8", VA = "0xBF8DE8", Slot = "4")]
	protected virtual void Awake()
	{
	}

	[Token(Token = "0x6000933")]
	[Address(RVA = "0xBF8F04", Offset = "0xBF8F04", VA = "0xBF8F04", Slot = "5")]
	protected virtual void OnDestroy()
	{
	}

	[Token(Token = "0x6000934")]
	[Address(RVA = "0xBF8DF0", Offset = "0xBF8DF0", VA = "0xBF8DF0")]
	public void SetLightState(bool inNewState)
	{
	}

	[Token(Token = "0x6000935")]
	[Address(RVA = "0xBF9074", Offset = "0xBF9074", VA = "0xBF9074")]
	public EnvironmentLight()
	{
	}
}
[Token(Token = "0x200018F")]
public class EnvironmentLightManager : MonoBehaviour
{
	[Token(Token = "0x2000190")]
	private struct EnvironmentLightRenderData
	{
		[Token(Token = "0x4000867")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Color LightColor;

		[Token(Token = "0x4000868")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vector3 WorldPosition;

		[Token(Token = "0x4000869")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float LightSize;
	}

	[Token(Token = "0x2000191")]
	private struct ClosestLightHelper
	{
		[Token(Token = "0x400086A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int LightListID;

		[Token(Token = "0x400086B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float LightDistanceSquared;

		[Token(Token = "0x600093E")]
		[Address(RVA = "0xBF9968", Offset = "0xBF9968", VA = "0xBF9968")]
		public static int InsertElementIntoArray(ref ClosestLightHelper[] inArray, int numEntries, int inLightListID, float inLightDistSqr)
		{
			return default(int);
		}
	}

	[Token(Token = "0x4000862")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int MaxVisibleLightCount;

	[Token(Token = "0x4000863")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private List<EnvironmentLight> LightList;

	[Token(Token = "0x4000864")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private ComputeBuffer LightRenderDataBuffer;

	[Token(Token = "0x4000865")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private EnvironmentLight[] LightsToRender;

	[Token(Token = "0x4000866")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float[] LightDistancesSqr;

	[Token(Token = "0x6000936")]
	[Address(RVA = "0xBF9084", Offset = "0xBF9084", VA = "0xBF9084")]
	public EnvironmentLightManager()
	{
	}

	[Token(Token = "0x6000937")]
	[Address(RVA = "0xBF9118", Offset = "0xBF9118", VA = "0xBF9118")]
	public void Awake()
	{
	}

	[Token(Token = "0x6000938")]
	[Address(RVA = "0xBF9188", Offset = "0xBF9188", VA = "0xBF9188")]
	public void OnDestroy()
	{
	}

	[Token(Token = "0x6000939")]
	[Address(RVA = "0xBF9218", Offset = "0xBF9218", VA = "0xBF9218")]
	public void Update()
	{
	}

	[Token(Token = "0x600093A")]
	[Address(RVA = "0xBF9514", Offset = "0xBF9514", VA = "0xBF9514")]
	public void UpdateLightVisibility()
	{
	}

	[Token(Token = "0x600093B")]
	[Address(RVA = "0xBF98F8", Offset = "0xBF98F8", VA = "0xBF98F8")]
	public bool HaveInvalidBuffer()
	{
		return default(bool);
	}

	[Token(Token = "0x600093C")]
	[Address(RVA = "0xBF8F2C", Offset = "0xBF8F2C", VA = "0xBF8F2C")]
	public void AddEnvironmentLight(EnvironmentLight inLight)
	{
	}

	[Token(Token = "0x600093D")]
	[Address(RVA = "0xBF8FCC", Offset = "0xBF8FCC", VA = "0xBF8FCC")]
	public void RemoveEnvironmentLight(EnvironmentLight inLight)
	{
	}
}
[Token(Token = "0x2000192")]
public class TimeBasedEnvironmentLight : EnvironmentLight
{
	[Token(Token = "0x2000193")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x971CC0", Offset = "0x971CC0")]
	private sealed class <WaitForDependenciesInit>d__3 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400086E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400086F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000870")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TimeBasedEnvironmentLight <>4__this;

		[Token(Token = "0x1700010B")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000947")]
			[Address(RVA = "0xE2D980", Offset = "0xE2D980", VA = "0xE2D980", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700010C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000949")]
			[Address(RVA = "0xE2D9E8", Offset = "0xE2D9E8", VA = "0xE2D9E8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000944")]
		[Address(RVA = "0xE2D53C", Offset = "0xE2D53C", VA = "0xE2D53C")]
		[DebuggerHidden]
		public <WaitForDependenciesInit>d__3(int <>1__state)
		{
		}

		[Token(Token = "0x6000945")]
		[Address(RVA = "0xE2D74C", Offset = "0xE2D74C", VA = "0xE2D74C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000946")]
		[Address(RVA = "0xE2D750", Offset = "0xE2D750", VA = "0xE2D750", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000948")]
		[Address(RVA = "0xE2D988", Offset = "0xE2D988", VA = "0xE2D988", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400086C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public int StartHour;

	[Token(Token = "0x400086D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public int EndHour;

	[Token(Token = "0x600093F")]
	[Address(RVA = "0xE2D488", Offset = "0xE2D488", VA = "0xE2D488", Slot = "4")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x6000940")]
	[Address(RVA = "0xE2D4C0", Offset = "0xE2D4C0", VA = "0xE2D4C0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x989A40", Offset = "0x989A40")]
	private IEnumerator WaitForDependenciesInit()
	{
		return null;
	}

	[Token(Token = "0x6000941")]
	[Address(RVA = "0xE2D568", Offset = "0xE2D568", VA = "0xE2D568", Slot = "5")]
	protected override void OnDestroy()
	{
	}

	[Token(Token = "0x6000942")]
	[Address(RVA = "0xE2D6F0", Offset = "0xE2D6F0", VA = "0xE2D6F0")]
	private void OnNewHourOfDay(int newHour)
	{
	}

	[Token(Token = "0x6000943")]
	[Address(RVA = "0xE2D738", Offset = "0xE2D738", VA = "0xE2D738")]
	public TimeBasedEnvironmentLight()
	{
	}
}
[Token(Token = "0x2000194")]
public class LostAndFound : MonoBehaviour
{
	[Token(Token = "0x4000871")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static LostAndFound Instance;

	[Token(Token = "0x4000872")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private RaycastHit hitInfo;

	[Token(Token = "0x4000873")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static readonly Vector3 PositionOutsideHouse;

	[Token(Token = "0x4000874")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private static readonly Quaternion RotationOutsideHouse;

	[Token(Token = "0x600094A")]
	[Address(RVA = "0xBEE678", Offset = "0xBEE678", VA = "0xBEE678")]
	private void Awake()
	{
	}

	[Token(Token = "0x600094B")]
	[Address(RVA = "0xBEE6E8", Offset = "0xBEE6E8", VA = "0xBEE6E8")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x600094C")]
	[Address(RVA = "0xBEE8D8", Offset = "0xBEE8D8", VA = "0xBEE8D8")]
	public static void RecoverLostObject(RecoverIfLost comp, Rigidbody rb)
	{
	}

	[Token(Token = "0x600094D")]
	[Address(RVA = "0xBEF504", Offset = "0xBEF504", VA = "0xBEF504")]
	public static void ResetPosition(RecoverIfLost comp, Rigidbody rb)
	{
	}

	[Token(Token = "0x600094E")]
	[Address(RVA = "0xBEF118", Offset = "0xBEF118", VA = "0xBEF118")]
	private static void MoveObject(Rigidbody rb, Vector3 groundPos, Quaternion rot, bool dropFromAbove, float yOffset = 0f)
	{
	}

	[Token(Token = "0x600094F")]
	[Address(RVA = "0xBEFB10", Offset = "0xBEFB10", VA = "0xBEFB10")]
	public LostAndFound()
	{
	}
}
[Token(Token = "0x2000195")]
public class LostAndFoundPosition : MonoBehaviour
{
	[Token(Token = "0x4000875")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static List<LostAndFoundPosition> positions;

	[Token(Token = "0x4000876")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private int priority;

	[Token(Token = "0x6000951")]
	[Address(RVA = "0xBEFC4C", Offset = "0xBEFC4C", VA = "0xBEFC4C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000952")]
	[Address(RVA = "0xBEFD1C", Offset = "0xBEFD1C", VA = "0xBEFD1C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000953")]
	[Address(RVA = "0xBEF8F0", Offset = "0xBEF8F0", VA = "0xBEF8F0")]
	public static Transform GetLostAndFoundPosition()
	{
		return null;
	}

	[Token(Token = "0x6000954")]
	[Address(RVA = "0xBEFDEC", Offset = "0xBEFDEC", VA = "0xBEFDEC")]
	public LostAndFoundPosition()
	{
	}
}
[Token(Token = "0x2000196")]
public class ObjectSpawnLocation : MonoBehaviour
{
	[Token(Token = "0x4000877")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AssetReference OverrideInitialPrefabToSpawn;

	[Token(Token = "0x6000956")]
	[Address(RVA = "0xD720B0", Offset = "0xD720B0", VA = "0xD720B0")]
	public ObjectSpawnLocation()
	{
	}
}
[Token(Token = "0x2000197")]
public class RandomObjectSpawner : SaveableComponent, IInitializable
{
	[Token(Token = "0x2000198")]
	public class SpawnPoint
	{
		[Token(Token = "0x4000886")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public OrientedPoint posAndRot;

		[Token(Token = "0x4000887")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public SpawnedObject spawnedObj;

		[Token(Token = "0x4000888")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public SoilSurface soilSurface;
	}

	[Token(Token = "0x4000878")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private List<AssetReference> prefabsToSpawn;

	[Token(Token = "0x4000879")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private List<SpawnPoint> spawnPoints;

	[Token(Token = "0x400087A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private float timeBetweenSpawns;

	[Token(Token = "0x400087B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private int maxNumberOfSpawnedObjectsInWorld;

	[Token(Token = "0x400087C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private List<SpawnPoint> freeSpawnPoints;

	[Token(Token = "0x400087D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Queue<SpawnPoint> spawnPointsPendingSpawn;

	[Token(Token = "0x400087E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private List<SpawnedObject> spawnedObjects;

	[Token(Token = "0x400087F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private ObjectSpawnLocation[] ValidSpawnLocationComponents;

	[Token(Token = "0x4000880")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private OrientedPoint[] ValidSpawnPoints;

	[Token(Token = "0x4000881")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private SpawnedObject[] SpawnedObjectList;

	[Token(Token = "0x4000882")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private List<int> FreeSpawnPointIDs;

	[Token(Token = "0x4000883")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private float timer;

	[Token(Token = "0x4000884")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private bool HavePendingSpawn;

	[Token(Token = "0x4000885")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private int PendingSpawnPoint;

	[Token(Token = "0x6000957")]
	[Address(RVA = "0xD18268", Offset = "0xD18268", VA = "0xD18268")]
	private void FetchValidSpawnPoints()
	{
	}

	[Token(Token = "0x6000958")]
	[Address(RVA = "0xD18548", Offset = "0xD18548", VA = "0xD18548", Slot = "5")]
	public void Initialize()
	{
	}

	[Token(Token = "0x6000959")]
	[Address(RVA = "0xD18CEC", Offset = "0xD18CEC", VA = "0xD18CEC")]
	private void Update()
	{
	}

	[Token(Token = "0x600095A")]
	[Address(RVA = "0xD18DBC", Offset = "0xD18DBC", VA = "0xD18DBC")]
	private bool TrySpawnObject()
	{
		return default(bool);
	}

	[Token(Token = "0x600095B")]
	[Address(RVA = "0xD191E4", Offset = "0xD191E4", VA = "0xD191E4")]
	private void OnObjectSpawned(SpawnOperationCallbackData data)
	{
	}

	[Token(Token = "0x600095C")]
	[Address(RVA = "0xD19368", Offset = "0xD19368", VA = "0xD19368")]
	public void RemoveSpawnedObject(SpawnedObject so)
	{
	}

	[Token(Token = "0x600095D")]
	[Address(RVA = "0xD194A0", Offset = "0xD194A0", VA = "0xD194A0")]
	public void RemoveSpawnedObject(int inSpawnObjectID)
	{
	}

	[Token(Token = "0x600095E")]
	[Address(RVA = "0xD18A68", Offset = "0xD18A68", VA = "0xD18A68")]
	public void SpawnAllObjects()
	{
	}

	[Token(Token = "0x600095F")]
	[Address(RVA = "0xD194F0", Offset = "0xD194F0", VA = "0xD194F0")]
	private void OnAllObjectsSpawned(SpawnOperationCallbackData data)
	{
	}

	[Token(Token = "0x6000960")]
	[Address(RVA = "0xD19624", Offset = "0xD19624", VA = "0xD19624", Slot = "4")]
	public override ComponentState CreateState()
	{
		return null;
	}

	[Token(Token = "0x6000961")]
	[Address(RVA = "0xD199C8", Offset = "0xD199C8", VA = "0xD199C8")]
	public RandomObjectSpawner()
	{
	}
}
[Serializable]
[Token(Token = "0x2000199")]
public class RandomObjectSpawnerState : ComponentState
{
	[Serializable]
	[Token(Token = "0x200019A")]
	public struct SpawnPointSaveData
	{
		[Token(Token = "0x400088C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public SaveID ObjectSaveID;

		[Token(Token = "0x400088D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public OrientedPointSerializable OrientedSpawnPoint;
	}

	[Token(Token = "0x4000889")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public SpawnPointSaveData[] SpawnSaveDatas;

	[Token(Token = "0x400088A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float TimeBetweenSpawns;

	[Token(Token = "0x400088B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AssetReferenceSerializable[] PrefabsToSpawn;

	[Token(Token = "0x6000962")]
	[Address(RVA = "0xD196AC", Offset = "0xD196AC", VA = "0xD196AC")]
	public RandomObjectSpawnerState(OrientedPoint[] inValidSpawnPoints, SpawnedObject[] inSpawnedObjectList, List<AssetReference> inPrefabsToSpawn, float inTimeBetweenSpawns)
	{
	}
}
[Token(Token = "0x200019B")]
public class SpawnedObject : SaveableComponent
{
	[Token(Token = "0x400088E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private RandomObjectSpawner SpawnerReference;

	[Token(Token = "0x400088F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private int SpawnerObjectID;

	[Token(Token = "0x6000963")]
	[Address(RVA = "0xDFB704", Offset = "0xDFB704", VA = "0xDFB704")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000964")]
	[Address(RVA = "0xDFB79C", Offset = "0xDFB79C", VA = "0xDFB79C")]
	public void SetSpawner(RandomObjectSpawner inSpawner, int ObjectID)
	{
	}

	[Token(Token = "0x6000965")]
	[Address(RVA = "0xDFB7CC", Offset = "0xDFB7CC", VA = "0xDFB7CC", Slot = "4")]
	public override ComponentState CreateState()
	{
		return null;
	}

	[Token(Token = "0x6000966")]
	[Address(RVA = "0xDFB828", Offset = "0xDFB828", VA = "0xDFB828")]
	public SpawnedObject()
	{
	}
}
[Token(Token = "0x200019C")]
public class Ocean : MonoBehaviour
{
	[Token(Token = "0x4000890")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float MeshRadius;

	[Token(Token = "0x4000891")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int CirclePoints;

	[Token(Token = "0x4000892")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Mesh GeneratedMesh;

	[Token(Token = "0x6000967")]
	[Address(RVA = "0xD73044", Offset = "0xD73044", VA = "0xD73044")]
	private void OnValidate()
	{
	}

	[Token(Token = "0x6000968")]
	[Address(RVA = "0xD73064", Offset = "0xD73064", VA = "0xD73064")]
	public void GenerateMesh()
	{
	}

	[Token(Token = "0x6000969")]
	[Address(RVA = "0xD733FC", Offset = "0xD733FC", VA = "0xD733FC")]
	public Ocean()
	{
	}
}
[Token(Token = "0x200019D")]
public class OceanWaveParticles : MonoBehaviour
{
	[Token(Token = "0x4000893")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ParticleSystem particleSystem;

	[Token(Token = "0x4000894")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ParticleSystem innerParticleSystem;

	[Token(Token = "0x4000895")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float spawnRate;

	[Token(Token = "0x4000896")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float minDistance;

	[Token(Token = "0x4000897")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float maxDistance;

	[Token(Token = "0x4000898")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float distLifeTimeMultiplier;

	[Token(Token = "0x4000899")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float distSizeMultiplier;

	[Token(Token = "0x400089A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float startLifeTimeMin;

	[Token(Token = "0x400089B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float startLifeTimeMax;

	[Token(Token = "0x400089C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float startSizeMin;

	[Token(Token = "0x400089D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float startSizeMax;

	[Token(Token = "0x400089E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float playerTeleportDistance;

	[Token(Token = "0x400089F")]
	private const int instaspawnCount = 60;

	[Token(Token = "0x40008A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float spawnTime;

	[Token(Token = "0x40008A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private bool initialized;

	[Token(Token = "0x40008A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private ParticleSystem.MainModule mainModule;

	[Token(Token = "0x40008A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private ParticleSystem.MainModule mainModuleInner;

	[Token(Token = "0x40008A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private ParticleSystem.Particle[] particles;

	[Token(Token = "0x40008A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private float[] lifetimes;

	[Token(Token = "0x40008A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Vector3 previousPlayerOrigin;

	[Token(Token = "0x600096A")]
	[Address(RVA = "0xD7384C", Offset = "0xD7384C", VA = "0xD7384C")]
	private void Start()
	{
	}

	[Token(Token = "0x600096B")]
	[Address(RVA = "0xD738AC", Offset = "0xD738AC", VA = "0xD738AC")]
	private void ResetWaves()
	{
	}

	[Token(Token = "0x600096C")]
	[Address(RVA = "0xD73E48", Offset = "0xD73E48", VA = "0xD73E48")]
	private void Update()
	{
	}

	[Token(Token = "0x600096D")]
	[Address(RVA = "0xD73A90", Offset = "0xD73A90", VA = "0xD73A90")]
	private void SpawnWave()
	{
	}

	[Token(Token = "0x600096E")]
	[Address(RVA = "0xD74090", Offset = "0xD74090", VA = "0xD74090")]
	public OceanWaveParticles()
	{
	}
}
[Token(Token = "0x200019E")]
public class RecoverIfLost : MonoBehaviour, IInitializable
{
	[Token(Token = "0x200019F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x971CD0", Offset = "0x971CD0")]
	private sealed class <ResetPositionAfterDelay>d__9 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40008AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40008AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40008AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float delay;

		[Token(Token = "0x40008AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public RecoverIfLost <>4__this;

		[Token(Token = "0x40008AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Grabbable grabbable;

		[Token(Token = "0x1700010E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600097B")]
			[Address(RVA = "0xD1F2C8", Offset = "0xD1F2C8", VA = "0xD1F2C8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700010F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600097D")]
			[Address(RVA = "0xD1F330", Offset = "0xD1F330", VA = "0xD1F330", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000978")]
		[Address(RVA = "0xD1EF24", Offset = "0xD1EF24", VA = "0xD1EF24")]
		[DebuggerHidden]
		public <ResetPositionAfterDelay>d__9(int <>1__state)
		{
		}

		[Token(Token = "0x6000979")]
		[Address(RVA = "0xD1F104", Offset = "0xD1F104", VA = "0xD1F104", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600097A")]
		[Address(RVA = "0xD1F108", Offset = "0xD1F108", VA = "0xD1F108", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600097C")]
		[Address(RVA = "0xD1F2D0", Offset = "0xD1F2D0", VA = "0xD1F2D0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40008A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x978090", Offset = "0x978090")]
	private OrientedPoint <OriginalPositionAndRotation>k__BackingField;

	[Token(Token = "0x40008A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private SaveID originalBundle;

	[Token(Token = "0x40008A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Coroutine resetAfterDelayRoutine;

	[Token(Token = "0x1700010D")]
	public OrientedPoint OriginalPositionAndRotation
	{
		[Token(Token = "0x600096F")]
		[Address(RVA = "0xD1EA9C", Offset = "0xD1EA9C", VA = "0xD1EA9C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x989AF4", Offset = "0x989AF4")]
		get
		{
			return default(OrientedPoint);
		}
		[Token(Token = "0x6000970")]
		[Address(RVA = "0xD1EAB4", Offset = "0xD1EAB4", VA = "0xD1EAB4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x989B04", Offset = "0x989B04")]
		private set
		{
		}
	}

	[Token(Token = "0x6000971")]
	[Address(RVA = "0xD1EACC", Offset = "0xD1EACC", VA = "0xD1EACC", Slot = "4")]
	public void Initialize()
	{
	}

	[Token(Token = "0x6000972")]
	[Address(RVA = "0xD1EC28", Offset = "0xD1EC28", VA = "0xD1EC28")]
	public bool HasValidPosition()
	{
		return default(bool);
	}

	[Token(Token = "0x6000973")]
	[Address(RVA = "0xD1ED4C", Offset = "0xD1ED4C", VA = "0xD1ED4C")]
	public void ResetAfterDelay(float delay, Grabbable grabbable)
	{
	}

	[Token(Token = "0x6000974")]
	[Address(RVA = "0xD1EE7C", Offset = "0xD1EE7C", VA = "0xD1EE7C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x989B14", Offset = "0x989B14")]
	private IEnumerator ResetPositionAfterDelay(float delay, Grabbable grabbable)
	{
		return null;
	}

	[Token(Token = "0x6000975")]
	[Address(RVA = "0xD1EF50", Offset = "0xD1EF50", VA = "0xD1EF50")]
	public void OnGrabbed(Grabbable grabbable)
	{
	}

	[Token(Token = "0x6000976")]
	[Address(RVA = "0xD1F048", Offset = "0xD1F048", VA = "0xD1F048")]
	public void DidResetPosition()
	{
	}

	[Token(Token = "0x6000977")]
	[Address(RVA = "0xD1F0FC", Offset = "0xD1F0FC", VA = "0xD1F0FC")]
	public RecoverIfLost()
	{
	}
}
[Token(Token = "0x20001A0")]
public class ShowObjectBasedOnPlatform : MonoBehaviour
{
	[Token(Token = "0x40008AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject viveObject;

	[Token(Token = "0x40008B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject oculusObject;

	[Token(Token = "0x40008B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject indexObject;

	[Token(Token = "0x40008B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject defaultObject;

	[Token(Token = "0x40008B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private GameObject[] allObjects;

	[Token(Token = "0x600097E")]
	[Address(RVA = "0xCC6040", Offset = "0xCC6040", VA = "0xCC6040")]
	private void Awake()
	{
	}

	[Token(Token = "0x600097F")]
	[Address(RVA = "0xCC628C", Offset = "0xCC628C", VA = "0xCC628C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000980")]
	[Address(RVA = "0xCC65A0", Offset = "0xCC65A0", VA = "0xCC65A0")]
	public ShowObjectBasedOnPlatform()
	{
	}
}
[Token(Token = "0x20001A1")]
public class SkySphere : MonoBehaviour
{
	[Token(Token = "0x40008B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float MeshRadius;

	[Token(Token = "0x40008B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int SphereSegments;

	[Token(Token = "0x40008B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int SegmentResolution;

	[Token(Token = "0x40008B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Mesh GeneratedMesh;

	[Token(Token = "0x6000981")]
	[Address(RVA = "0xCC76F0", Offset = "0xCC76F0", VA = "0xCC76F0")]
	private void OnValidate()
	{
	}

	[Token(Token = "0x6000982")]
	[Address(RVA = "0xCC7708", Offset = "0xCC7708", VA = "0xCC7708")]
	public void GenerateMesh()
	{
	}

	[Token(Token = "0x6000983")]
	[Address(RVA = "0xCC7720", Offset = "0xCC7720", VA = "0xCC7720")]
	public SkySphere()
	{
	}
}
[Token(Token = "0x20001A2")]
[ExecuteInEditMode]
public class TutorialRunestone : SaveableComponent, IInitializable
{
	[Token(Token = "0x20001A3")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x971CF0", Offset = "0x971CF0")]
	private sealed class <MossFadeoutLoop>d__18 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40008C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40008C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40008CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TutorialRunestone <>4__this;

		[Token(Token = "0x17000110")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600098E")]
			[Address(RVA = "0xE6B334", Offset = "0xE6B334", VA = "0xE6B334", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000111")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000990")]
			[Address(RVA = "0xE6B39C", Offset = "0xE6B39C", VA = "0xE6B39C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600098B")]
		[Address(RVA = "0xE6B110", Offset = "0xE6B110", VA = "0xE6B110")]
		[DebuggerHidden]
		public <MossFadeoutLoop>d__18(int <>1__state)
		{
		}

		[Token(Token = "0x600098C")]
		[Address(RVA = "0xE6B228", Offset = "0xE6B228", VA = "0xE6B228", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600098D")]
		[Address(RVA = "0xE6B22C", Offset = "0xE6B22C", VA = "0xE6B22C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600098F")]
		[Address(RVA = "0xE6B33C", Offset = "0xE6B33C", VA = "0xE6B33C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40008B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9780A0", Offset = "0x9780A0")]
	public float MossVisibility;

	[Token(Token = "0x40008B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float MossMaxHeight;

	[Token(Token = "0x40008BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9780B8", Offset = "0x9780B8")]
	public float MossHeightPercent;

	[Token(Token = "0x40008BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9780D0", Offset = "0x9780D0")]
	public float MossNoiseModifierStrength;

	[Token(Token = "0x40008BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9780E8", Offset = "0x9780E8")]
	public float MossNoiseMultiplier;

	[Token(Token = "0x40008BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public AnimationCurve MossVisibilityCurve;

	[Token(Token = "0x40008BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float MossFadeoutDuration;

	[Token(Token = "0x40008BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private float MossFadeoutTimer;

	[Token(Token = "0x40008C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool HaveTriggeredFadeout;

	[Token(Token = "0x40008C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private int MossMaxHeightParamID;

	[Token(Token = "0x40008C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private int MossHeightPercentParamID;

	[Token(Token = "0x40008C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private int MossNoiseModifierStrengthParamID;

	[Token(Token = "0x40008C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private int MossNoiseMultiplierParamID;

	[Token(Token = "0x40008C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Renderer CachedRenderer;

	[Token(Token = "0x40008C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private MaterialPropertyBlock CachedPropertyBlock;

	[Token(Token = "0x40008C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Coroutine FadeoutRoutine;

	[Token(Token = "0x6000984")]
	[Address(RVA = "0xE6ACC8", Offset = "0xE6ACC8", VA = "0xE6ACC8", Slot = "5")]
	public void Initialize()
	{
	}

	[Token(Token = "0x6000985")]
	[Address(RVA = "0xE6B024", Offset = "0xE6B024", VA = "0xE6B024")]
	public void TriggerMossFadeout()
	{
	}

	[Token(Token = "0x6000986")]
	[Address(RVA = "0xE6B094", Offset = "0xE6B094", VA = "0xE6B094")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x989BC8", Offset = "0x989BC8")]
	private IEnumerator MossFadeoutLoop()
	{
		return null;
	}

	[Token(Token = "0x6000987")]
	[Address(RVA = "0xE6AD60", Offset = "0xE6AD60", VA = "0xE6AD60")]
	private void CacheRenderer()
	{
	}

	[Token(Token = "0x6000988")]
	[Address(RVA = "0xE6AEBC", Offset = "0xE6AEBC", VA = "0xE6AEBC")]
	private void ApplyMaterialParams()
	{
	}

	[Token(Token = "0x6000989")]
	[Address(RVA = "0xE6B13C", Offset = "0xE6B13C", VA = "0xE6B13C", Slot = "4")]
	public override ComponentState CreateState()
	{
		return null;
	}

	[Token(Token = "0x600098A")]
	[Address(RVA = "0xE6B204", Offset = "0xE6B204", VA = "0xE6B204")]
	public TutorialRunestone()
	{
	}
}
[Serializable]
[Token(Token = "0x20001A4")]
public class TutorialRunestoneComponentState : ComponentState
{
	[Token(Token = "0x40008CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float MossVisibility;

	[Token(Token = "0x40008CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public bool HaveTriggeredFadeout;

	[Token(Token = "0x6000991")]
	[Address(RVA = "0xE6B1BC", Offset = "0xE6B1BC", VA = "0xE6B1BC")]
	public TutorialRunestoneComponentState(float inMossVisibility, bool inHaveTriggeredFadeout)
	{
	}
}
[Token(Token = "0x20001A5")]
public class Water : MonoBehaviour
{
	[Token(Token = "0x40008CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static GameObject Ocean;

	[Token(Token = "0x6000992")]
	[Address(RVA = "0xE6CED4", Offset = "0xE6CED4", VA = "0xE6CED4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000993")]
	[Address(RVA = "0xE6CFA8", Offset = "0xE6CFA8", VA = "0xE6CFA8")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000994")]
	[Address(RVA = "0xE6D064", Offset = "0xE6D064", VA = "0xE6D064")]
	public Water()
	{
	}
}
[Token(Token = "0x20001A6")]
public class WaterGleamEffect : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x20001A7")]
	public struct Remappable
	{
		[Token(Token = "0x40008DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float iMin;

		[Token(Token = "0x40008DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float iMax;

		[Token(Token = "0x40008DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float oMin;

		[Token(Token = "0x40008DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float oMax;
	}

	[Token(Token = "0x40008CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float fadeInAngle;

	[Token(Token = "0x40008CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float fadeOutAngle;

	[Token(Token = "0x40008D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float turnOffAngle;

	[Token(Token = "0x40008D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private GameObject localGleam;

	[Token(Token = "0x40008D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject distantGleam;

	[Token(Token = "0x40008D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Mesh distantGleamMesh;

	[Token(Token = "0x40008D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private Remappable gleamWaveSize;

	[Token(Token = "0x40008D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private Remappable gleamWaveSpeed;

	[Token(Token = "0x40008D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private Remappable gleamScale;

	[NonSerialized]
	[Token(Token = "0x40008D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public float shadertime;

	[NonSerialized]
	[Token(Token = "0x40008D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public float wavesize;

	[NonSerialized]
	[Token(Token = "0x40008D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public float angle;

	[Token(Token = "0x6000995")]
	[Address(RVA = "0xE6E310", Offset = "0xE6E310", VA = "0xE6E310")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000996")]
	[Address(RVA = "0xE6E4F0", Offset = "0xE6E4F0", VA = "0xE6E4F0")]
	public void UpdateGleamEffectValues(float dt, Transform directionalLight, float dist, Vector3 cameraPos, float oceandepth)
	{
	}

	[Token(Token = "0x6000997")]
	[Address(RVA = "0xE6E8A4", Offset = "0xE6E8A4", VA = "0xE6E8A4")]
	public WaterGleamEffect()
	{
	}
}
[Token(Token = "0x20001A8")]
public class WaterSplash : MonoBehaviour
{
	[Token(Token = "0x40008DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ParticleSystem waterSplash;

	[Token(Token = "0x6000998")]
	[Address(RVA = "0xE6E8C0", Offset = "0xE6E8C0", VA = "0xE6E8C0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000999")]
	[Address(RVA = "0xE6E8F0", Offset = "0xE6E8F0", VA = "0xE6E8F0")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x600099A")]
	[Address(RVA = "0xE6E9BC", Offset = "0xE6E9BC", VA = "0xE6E9BC")]
	private void SplashAt(Vector3 pos)
	{
	}

	[Token(Token = "0x600099B")]
	[Address(RVA = "0xE6EAB0", Offset = "0xE6EAB0", VA = "0xE6EAB0")]
	public WaterSplash()
	{
	}
}
[Token(Token = "0x20001A9")]
public class BambooStem : SaveableComponent, IInitializable
{
	[Token(Token = "0x40008DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Vector3 leafPoint;

	[Token(Token = "0x40008E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private Stashable stashable;

	[Token(Token = "0x40008E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private AttachSlot attachSlot;

	[Token(Token = "0x600099C")]
	[Address(RVA = "0xF62754", Offset = "0xF62754", VA = "0xF62754", Slot = "4")]
	public override ComponentState CreateState()
	{
		return null;
	}

	[Token(Token = "0x600099D")]
	[Address(RVA = "0xF627B8", Offset = "0xF627B8", VA = "0xF627B8", Slot = "5")]
	public void Initialize()
	{
	}

	[Token(Token = "0x600099E")]
	[Address(RVA = "0xF629F0", Offset = "0xF629F0", VA = "0xF629F0")]
	public void OnStash()
	{
	}

	[Token(Token = "0x600099F")]
	[Address(RVA = "0xF62BAC", Offset = "0xF62BAC", VA = "0xF62BAC")]
	public void OnUnStash()
	{
	}

	[Token(Token = "0x60009A0")]
	[Address(RVA = "0xF629F8", Offset = "0xF629F8", VA = "0xF629F8")]
	public void ToggleVisibilityOfAttachedObjects(bool visible)
	{
	}

	[Token(Token = "0x60009A1")]
	[Address(RVA = "0xF62BB4", Offset = "0xF62BB4", VA = "0xF62BB4")]
	public BambooStem()
	{
	}
}
[Serializable]
[Token(Token = "0x20001AA")]
public class BambooStemState : ComponentState
{
	[Token(Token = "0x60009A2")]
	[Address(RVA = "0xF627B0", Offset = "0xF627B0", VA = "0xF627B0")]
	public BambooStemState()
	{
	}
}
[Token(Token = "0x20001AB")]
[ExecuteInEditMode]
public class GradientColorer : MonoBehaviour, IInitializable, IValidateCustom, IValidate
{
	[Token(Token = "0x40008E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly int shPropLevelsMin;

	[Token(Token = "0x40008E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	private static readonly int shPropLevelsMax;

	[Token(Token = "0x40008E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static readonly int patternProperty;

	[Token(Token = "0x40008E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private static readonly int patternStrengthProperty;

	[Token(Token = "0x40008E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static readonly int patternColorProperty;

	[Token(Token = "0x40008E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static List<GradientColorer> all;

	[Token(Token = "0x40008E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public PlantColors defaultColors;

	[Token(Token = "0x40008E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public PaintColor paint;

	[Token(Token = "0x40008EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x978164", Offset = "0x978164")]
	public float paintLevelsMin;

	[Token(Token = "0x40008EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x97817C", Offset = "0x97817C")]
	public float paintLevelsMax;

	[Token(Token = "0x40008EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Color currentHighlight;

	[Token(Token = "0x40008ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Color currentShadow;

	[Token(Token = "0x40008EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[AttributeAttribute(Name = "CacheReferenceAttribute", RVA = "0x978194", Offset = "0x978194")]
	[SerializeField]
	private Renderer meshRenderer;

	[Token(Token = "0x40008EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	private LODGroup lodGroup;

	[Token(Token = "0x40008F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public static MaterialPropertyBlock mpb;

	[Token(Token = "0x40008F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private static bool hasCreatedMpb;

	[Token(Token = "0x40008F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private PlantColors colors;

	[Token(Token = "0x40008F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private bool initialized;

	[Token(Token = "0x40008F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB9")]
	private bool m_hasDynamicPattern;

	[Token(Token = "0x40008F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private CreaturePattern m_pattern;

	[Token(Token = "0x40008F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private Color m_patternColor;

	[Token(Token = "0x17000112")]
	public Color Highlight
	{
		[Token(Token = "0x60009A3")]
		[Address(RVA = "0xBDAA1C", Offset = "0xBDAA1C", VA = "0xBDAA1C")]
		get
		{
			return default(Color);
		}
	}

	[Token(Token = "0x17000113")]
	public Color Shadow
	{
		[Token(Token = "0x60009A4")]
		[Address(RVA = "0xBDAA28", Offset = "0xBDAA28", VA = "0xBDAA28")]
		get
		{
			return default(Color);
		}
	}

	[Token(Token = "0x17000114")]
	public PlantColors CurrentColors
	{
		[Token(Token = "0x60009A5")]
		[Address(RVA = "0xBDAA34", Offset = "0xBDAA34", VA = "0xBDAA34")]
		get
		{
			return default(PlantColors);
		}
	}

	[Token(Token = "0x17000115")]
	public bool Initialized
	{
		[Token(Token = "0x60009A6")]
		[Address(RVA = "0xBDAA4C", Offset = "0xBDAA4C", VA = "0xBDAA4C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x60009A7")]
	[Address(RVA = "0xBDAA54", Offset = "0xBDAA54", VA = "0xBDAA54", Slot = "4")]
	public void Initialize()
	{
	}

	[Token(Token = "0x60009A8")]
	[Address(RVA = "0xBDAB6C", Offset = "0xBDAB6C", VA = "0xBDAB6C")]
	public void ApplyPaintColors(Color32 highlight, Color32 shadow)
	{
	}

	[Token(Token = "0x60009A9")]
	[Address(RVA = "0xBDAF84", Offset = "0xBDAF84", VA = "0xBDAF84")]
	public void RemovePaint()
	{
	}

	[Token(Token = "0x60009AA")]
	[Address(RVA = "0xBDAFD0", Offset = "0xBDAFD0", VA = "0xBDAFD0")]
	public void SetColors(Color dark, Color mid, Color bright)
	{
	}

	[Token(Token = "0x60009AB")]
	[Address(RVA = "0xBDAB54", Offset = "0xBDAB54", VA = "0xBDAB54")]
	public void SetColors(PlantColors newColors)
	{
	}

	[Token(Token = "0x60009AC")]
	[Address(RVA = "0xBDB07C", Offset = "0xBDB07C", VA = "0xBDB07C")]
	public void SetToDefaultColors()
	{
	}

	[Token(Token = "0x60009AD")]
	[Address(RVA = "0xBDABB8", Offset = "0xBDABB8", VA = "0xBDABB8")]
	public void ApplyColorsToMesh()
	{
	}

	[Token(Token = "0x60009AE")]
	[Address(RVA = "0xBDB098", Offset = "0xBDB098", VA = "0xBDB098")]
	public void SetCreaturePattern(CreaturePattern creaturePattern, Color color)
	{
	}

	[Token(Token = "0x60009AF")]
	[Address(RVA = "0xBDB0F0", Offset = "0xBDB0F0", VA = "0xBDB0F0")]
	public GradientColorer()
	{
	}
}
[Serializable]
[Token(Token = "0x20001AC")]
[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0x971D10", Offset = "0x971D10")]
public struct PlantColors
{
	[Token(Token = "0x40008F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Color dark;

	[Token(Token = "0x40008F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Color mid;

	[Token(Token = "0x40008F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Color bright;

	[Token(Token = "0x40008FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static int[] shaderPropIds;

	[Token(Token = "0x17000116")]
	public Color Item
	{
		[Token(Token = "0x60009B3")]
		[Address(RVA = "0xA42AA4", Offset = "0xA42AA4", VA = "0xA42AA4")]
		get
		{
			return default(Color);
		}
		[Token(Token = "0x60009B4")]
		[Address(RVA = "0xA42AAC", Offset = "0xA42AAC", VA = "0xA42AAC")]
		set
		{
		}
	}

	[Token(Token = "0x60009B1")]
	[Address(RVA = "0xA42A80", Offset = "0xA42A80", VA = "0xA42A80")]
	public PlantColors(Color dark, Color mid, Color bright)
	{
	}

	[Token(Token = "0x60009B2")]
	[Address(RVA = "0xA42A9C", Offset = "0xA42A9C", VA = "0xA42A9C")]
	public void ApplyTo(MaterialPropertyBlock mpb)
	{
	}
}
[Token(Token = "0x20001AD")]
public class GradientColorerHighPrio : GradientColorer
{
	[Token(Token = "0x60009B6")]
	[Address(RVA = "0xBDB2F4", Offset = "0xBDB2F4", VA = "0xBDB2F4")]
	private void Awake()
	{
	}

	[Token(Token = "0x60009B7")]
	[Address(RVA = "0xBDB2F8", Offset = "0xBDB2F8", VA = "0xBDB2F8")]
	public GradientColorerHighPrio()
	{
	}
}
[Token(Token = "0x20001AE")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x971D48", Offset = "0x971D48")]
public class PlantGrowthSettings : ScriptableObject
{
	[Token(Token = "0x40008FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x978264", Offset = "0x978264")]
	public float globalBaseGrowthRate;

	[Token(Token = "0x40008FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x97829C", Offset = "0x97829C")]
	public float growthTickInterval;

	[Token(Token = "0x40008FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9782D4", Offset = "0x9782D4")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9782D4", Offset = "0x9782D4")]
	public float soilnessRequiredForSowing;

	[Token(Token = "0x40008FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x978328", Offset = "0x978328")]
	public float waterLevelNeededToSprout;

	[Token(Token = "0x40008FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float averageSproutingDelay;

	[Token(Token = "0x4000900")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x978340", Offset = "0x978340")]
	public float sproutingDelayVariation;

	[Token(Token = "0x4000901")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float timeFromBudToFlower;

	[Token(Token = "0x4000902")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float timeFromFlowerToFruit;

	[Token(Token = "0x4000903")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x978378", Offset = "0x978378")]
	public float defaultShadeTolerance;

	[Token(Token = "0x4000904")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float defaultLightTolerance;

	[Token(Token = "0x4000905")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float defaultDroughtTolerance;

	[Token(Token = "0x4000906")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float defaultWaterTolerance;

	[Token(Token = "0x4000907")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9783B0", Offset = "0x9783B0")]
	public float yPosOfRootVeg;

	[Token(Token = "0x4000908")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float defaultHeightVariability;

	[Token(Token = "0x60009B8")]
	[Address(RVA = "0xBBCF24", Offset = "0xBBCF24", VA = "0xBBCF24")]
	public PlantGrowthSettings()
	{
	}
}
[Token(Token = "0x20001AF")]
public enum FlowerState
{
	[Token(Token = "0x400090A")]
	None,
	[Token(Token = "0x400090B")]
	Bud,
	[Token(Token = "0x400090C")]
	Flower,
	[Token(Token = "0x400090D")]
	Fruit
}
[Token(Token = "0x20001B0")]
public class FlowerHead : PlantPart
{
	[Token(Token = "0x400090E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public FlowerState state;

	[Token(Token = "0x400090F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[SerializeField]
	public AssetReference budAssetRef;

	[Token(Token = "0x4000910")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[SerializeField]
	public AssetReference flowerAssetRef;

	[Token(Token = "0x4000911")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[SerializeField]
	public AssetReference fruitAssetRef;

	[Token(Token = "0x4000912")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public float flowerToFruit;

	[Token(Token = "0x60009B9")]
	[Address(RVA = "0xCA5584", Offset = "0xCA5584", VA = "0xCA5584")]
	public FlowerHead()
	{
	}
}
[Token(Token = "0x20001B1")]
public class PlantPart : MonoBehaviour
{
	[Token(Token = "0x4000913")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Mesh mesh;

	[Token(Token = "0x4000914")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[HideInInspector]
	public float currentScale;

	[Token(Token = "0x4000915")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[HideInInspector]
	public Vector3 modifiedScale;

	[Token(Token = "0x4000916")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Mesh refSharedMesh;

	[Token(Token = "0x4000917")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GradientColorer ColorerComponent;

	[Token(Token = "0x4000918")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public MeshRenderer[] MeshRendererComponents;

	[Token(Token = "0x4000919")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float PartGrowth;

	[Token(Token = "0x400091A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public bool PlantPartDataDirty;

	[Token(Token = "0x400091B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4D")]
	public bool PartVisible;

	[Token(Token = "0x400091C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Matrix4x4 PartToRootMatrix;

	[Token(Token = "0x60009BA")]
	[Address(RVA = "0xBC00D8", Offset = "0xBC00D8", VA = "0xBC00D8")]
	public void OnBecameInvisible()
	{
	}

	[Token(Token = "0x60009BB")]
	[Address(RVA = "0xBC00E0", Offset = "0xBC00E0", VA = "0xBC00E0")]
	public void OnBecameVisible()
	{
	}

	[Token(Token = "0x60009BC")]
	[Address(RVA = "0xBC0104", Offset = "0xBC0104", VA = "0xBC0104", Slot = "4")]
	public virtual void Init()
	{
	}

	[Token(Token = "0x60009BD")]
	[Address(RVA = "0xBC0244", Offset = "0xBC0244", VA = "0xBC0244", Slot = "5")]
	public virtual void UpdateMesh(bool forceUpdate = false)
	{
	}

	[Token(Token = "0x60009BE")]
	[Address(RVA = "0xBC0354", Offset = "0xBC0354", VA = "0xBC0354", Slot = "6")]
	protected virtual void ApplyAdditionalMeshDataForUpdate(MaterialPropertyBlock PropertyBlock)
	{
	}

	[Token(Token = "0x60009BF")]
	[Address(RVA = "0xBC0358", Offset = "0xBC0358", VA = "0xBC0358", Slot = "7")]
	public virtual void PartGrowthFinished()
	{
	}

	[Token(Token = "0x60009C0")]
	[Address(RVA = "0xBC037C", Offset = "0xBC037C", VA = "0xBC037C")]
	public PlantPart()
	{
	}
}
[Token(Token = "0x20001B2")]
public class PlantSettingsManager : MonoBehaviour
{
	[Token(Token = "0x400091D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static PlantSettingsManager instance;

	[Token(Token = "0x400091E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static float avgSproutDelay;

	[Token(Token = "0x400091F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public static float sproutDelayVar;

	[Token(Token = "0x4000920")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static float waterLevelToSprout;

	[Token(Token = "0x4000921")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public static float soilnessReq;

	[Token(Token = "0x4000922")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private PlantGrowthSettings buildSettings;

	[Token(Token = "0x4000923")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AssetReference seedBase;

	[Token(Token = "0x17000117")]
	public static PlantSettingsManager Instance
	{
		[Token(Token = "0x60009C2")]
		[Address(RVA = "0xD836B0", Offset = "0xD836B0", VA = "0xD836B0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60009C1")]
	[Address(RVA = "0xD836A8", Offset = "0xD836A8", VA = "0xD836A8")]
	private PlantSettingsManager()
	{
	}

	[Token(Token = "0x60009C3")]
	[Address(RVA = "0xD83788", Offset = "0xD83788", VA = "0xD83788")]
	private void Awake()
	{
	}

	[Token(Token = "0x60009C4")]
	[Address(RVA = "0xD837E8", Offset = "0xD837E8", VA = "0xD837E8")]
	private void InitSettings()
	{
	}
}
[Token(Token = "0x20001B3")]
public struct PlantCullingData
{
	[Token(Token = "0x4000924")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public int ProxyID;

	[Token(Token = "0x4000925")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public Vector3 PlantPosition;

	[Token(Token = "0x4000926")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float PlantRadius;

	[Token(Token = "0x4000927")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public bool PlantVisible;
}
[Token(Token = "0x20001B4")]
public class PlantCullingSystem : PlantSystemBase
{
	[Token(Token = "0x4000928")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private List<int> ActiveProxyIDs;

	[Token(Token = "0x4000929")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Dictionary<int, int> ActivePlantCullingDataIDs;

	[Token(Token = "0x400092A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private DynamicNativeArray<PlantCullingData> PlantCullingDataStorage;

	[Token(Token = "0x400092B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private NativeArray<int> CullDataIndices;

	[Token(Token = "0x400092C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private NativeArray<int> PlantNeedsRenderUpdateFlags;

	[Token(Token = "0x400092D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private int NumParallelCullJobs;

	[Token(Token = "0x400092E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private int FinalCullJobIterations;

	[Token(Token = "0x400092F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private bool ShouldUpdateCullDataIndices;

	[Token(Token = "0x4000930")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
	private bool HavePendingCullJobs;

	[Token(Token = "0x4000931")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private JobHandle CullJobsHandle;

	[Token(Token = "0x4000932")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static readonly int NumIntBits;

	[Token(Token = "0x4000933")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public static bool DisablePlantCulling;

	[Token(Token = "0x60009C5")]
	[Address(RVA = "0xBBBEF8", Offset = "0xBBBEF8", VA = "0xBBBEF8")]
	public PlantCullingSystem(PlantProxySystem inProxySystem)
	{
	}

	[Token(Token = "0x60009C6")]
	[Address(RVA = "0xBBC008", Offset = "0xBBC008", VA = "0xBBC008", Slot = "4")]
	public override void Update()
	{
	}

	[Token(Token = "0x60009C7")]
	[Address(RVA = "0xBBC6E4", Offset = "0xBBC6E4", VA = "0xBBC6E4")]
	public void UpdatePlantRenderStates()
	{
	}

	[Token(Token = "0x60009C8")]
	[Address(RVA = "0xBBC87C", Offset = "0xBBC87C", VA = "0xBBC87C", Slot = "5")]
	public override void Cleanup()
	{
	}

	[Token(Token = "0x60009C9")]
	[Address(RVA = "0xBBC944", Offset = "0xBBC944", VA = "0xBBC944")]
	public void SetPlantRenderingEnabled(int inProxyID, bool newEnabled, bool inInitialCullState = false)
	{
	}

	[Token(Token = "0x60009CA")]
	[Address(RVA = "0xBBCA24", Offset = "0xBBCA24", VA = "0xBBCA24")]
	public void AddPlantCullingData(int inProxyID, bool inInitialCullState = false)
	{
	}

	[Token(Token = "0x60009CB")]
	[Address(RVA = "0xBBCC4C", Offset = "0xBBCC4C", VA = "0xBBCC4C")]
	public void RemovePlantCullingData(int inProxyID)
	{
	}

	[Token(Token = "0x60009CC")]
	[Address(RVA = "0xBBCDD8", Offset = "0xBBCDD8", VA = "0xBBCDD8")]
	public void UpdateCullingDataPosition(int inProxyID, Vector3 inPlantPosition)
	{
	}
}
[Token(Token = "0x20001B5")]
[AttributeAttribute(Name = "BurstCompileAttribute", RVA = "0x971DB4", Offset = "0x971DB4")]
public struct PlantCullJob : IJobParallelFor
{
	[Token(Token = "0x4000934")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[NativeDisableUnsafePtrRestriction]
	public unsafe int* DataIndicesBufferPtr;

	[Token(Token = "0x4000935")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	[NativeDisableUnsafePtrRestriction]
	public unsafe int* PlantNeedsRenderUpdateFlagsPtr;

	[Token(Token = "0x4000936")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[NativeDisableUnsafePtrRestriction]
	public unsafe PlantCullingData* CullDataStoragePtr;

	[Token(Token = "0x4000937")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int NumCameras;

	[Token(Token = "0x4000938")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[DeallocateOnJobCompletion]
	[Unity.Collections.ReadOnly]
	public NativeArray<Vector3> CameraPositions;

	[Token(Token = "0x4000939")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[Unity.Collections.ReadOnly]
	[DeallocateOnJobCompletion]
	public NativeArray<Vector3> CameraForwards;

	[Token(Token = "0x400093A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[Unity.Collections.ReadOnly]
	[DeallocateOnJobCompletion]
	public NativeArray<float> CameraMaxViewAngles;

	[Token(Token = "0x400093B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public int NumParallelCullJobs;

	[Token(Token = "0x400093C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public int FinalCullJobIterations;

	[Token(Token = "0x400093D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public bool DisablePlantCulling;

	[Token(Token = "0x60009CE")]
	[Address(RVA = "0xA42AF0", Offset = "0xA42AF0", VA = "0xA42AF0", Slot = "4")]
	public void Execute(int index)
	{
	}
}
[Token(Token = "0x20001B6")]
public class PlantGrowthSystem : PlantSystemBase
{
	[Token(Token = "0x20001B7")]
	private struct ProxyGrowthData
	{
		[Token(Token = "0x400094B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool HaveValidProxy;

		[Token(Token = "0x400094C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public int ProxyID;

		[Token(Token = "0x400094D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public int SoilSurfaceID;

		[Token(Token = "0x400094E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public bool IsGrowing;

		[Token(Token = "0x400094F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int GrowthListIndex;

		[Token(Token = "0x4000950")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int ResourceDataID;

		[Token(Token = "0x4000951")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float CachedProxyShrivel;

		[Token(Token = "0x60009E8")]
		[Address(RVA = "0xA42FB8", Offset = "0xA42FB8", VA = "0xA42FB8")]
		public void SetIsGrowing(bool inIsGrowing, int inGrowthListID = -1)
		{
		}
	}

	[Token(Token = "0x20001B8")]
	public struct ProxyGrowthRuntimeData
	{
		[Token(Token = "0x4000952")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool HaveValidData;

		[Token(Token = "0x4000953")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public int ProxyID;

		[Token(Token = "0x4000954")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public int ProxyPartCount;

		[Token(Token = "0x4000955")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float ProxyGrowth;

		[Token(Token = "0x4000956")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public unsafe PlantPartGrowthData* CachedDataPtr;

		[Token(Token = "0x4000957")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float TotalGrowthDuration;

		[Token(Token = "0x4000958")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int SoilSurfaceID;

		[Token(Token = "0x4000959")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Vector2 SoilSurfaceLocation;

		[Token(Token = "0x400095A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool OnUntillableSoilSurface;

		[Token(Token = "0x400095B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public int ResourceDataID;

		[Token(Token = "0x400095C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float PlantShrivel;

		[Token(Token = "0x400095D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float CurrentSoilWaterness;

		[Token(Token = "0x400095E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public bool HaveFertilizer;

		[Token(Token = "0x400095F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public PlantGrowthResult LastGrowthResult;

		[Token(Token = "0x4000960")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public int DirtPileID;

		[Token(Token = "0x4000961")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public int TillabilityCheckID;

		[Token(Token = "0x4000962")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public float AdditionalTimeSinceLastGrowth;

		[Token(Token = "0x4000963")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public float MossCover;
	}

	[Token(Token = "0x20001B9")]
	private struct PlantResourceData_Native
	{
		[Token(Token = "0x4000964")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float TimeToPickable;

		[Token(Token = "0x4000965")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float Waterings;

		[Token(Token = "0x4000966")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public int NumberOfPieces;

		[Token(Token = "0x4000967")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public int SeedsPerBag;

		[Token(Token = "0x4000968")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float FertilizerEfficiency;

		[Token(Token = "0x4000969")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float FertilizerWaterConsumptionMultiplier;
	}

	[Token(Token = "0x20001BA")]
	public struct SoilSurfaceData
	{
		[Token(Token = "0x400096A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public unsafe SurfaceData.TexelData* DataBufferPtr;

		[Token(Token = "0x400096B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Vector2Int SurfaceTextureSize;

		[Token(Token = "0x400096C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool HaveUntillableAreas;
	}

	[Token(Token = "0x20001BB")]
	public enum PlantGrowthResult
	{
		[Token(Token = "0x400096E")]
		NoWater,
		[Token(Token = "0x400096F")]
		MossCovered,
		[Token(Token = "0x4000970")]
		WaitingForValueCheck,
		[Token(Token = "0x4000971")]
		Success
	}

	[Token(Token = "0x20001BC")]
	private struct PlantGrowthJobResults
	{
		[Token(Token = "0x4000972")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int GrowthDataID;

		[Token(Token = "0x4000973")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public bool HaveWater;

		[Token(Token = "0x4000974")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5")]
		public bool HaveFertilizer;

		[Token(Token = "0x4000975")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6")]
		public bool OnUntillableSoil;

		[Token(Token = "0x4000976")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7")]
		public bool HavePendingValueCheck;
	}

	[Token(Token = "0x20001BD")]
	private struct PlantGrowthCurveCache
	{
		[Token(Token = "0x4000977")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public PlantPartGrowthCurveCache[] GrowthCurveCaches;
	}

	[Token(Token = "0x400093E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public SoilModificationManager SoilModManager;

	[Token(Token = "0x400093F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private List<PlantResourceData> ResourceDataList;

	[Token(Token = "0x4000940")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private List<PlantGrowthCurveCache> PlantGrowthCurves;

	[Token(Token = "0x4000941")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private DynamicNativeArray<PlantResourceData_Native> NativeResourceData;

	[Token(Token = "0x4000942")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private DynamicNativeArray<ProxyGrowthData> ProxyGrowthDataArray;

	[Token(Token = "0x4000943")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private DynamicNativeArray<ProxyGrowthRuntimeData> ActiveProxyGrowthData;

	[Token(Token = "0x4000944")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private DynamicNativeArray<SoilSurfaceData> SoilSurfaceDataArray;

	[Token(Token = "0x4000945")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public DynamicNativeArray<JobHandle> PendingGrowthJobs;

	[Token(Token = "0x4000946")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public DynamicNativeArray<SoilResourceJobPayload> PendingGrowthJobsPayload;

	[Token(Token = "0x4000947")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private DynamicNativeArray<int> PendingGrowthJobsDataID;

	[Token(Token = "0x4000948")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private DynamicNativeArray<PlantGrowthJobResults> LastFrameJobResults;

	[Token(Token = "0x4000949")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private float LastFrameDeltaTime;

	[Token(Token = "0x400094A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private float GlobalGrowthMultiplier;

	[Token(Token = "0x60009CF")]
	[Address(RVA = "0xBBCF60", Offset = "0xBBCF60", VA = "0xBBCF60")]
	public PlantGrowthSystem(PlantProxySystem inProxySystem)
	{
	}

	[Token(Token = "0x60009D0")]
	[Address(RVA = "0xBBD31C", Offset = "0xBBD31C", VA = "0xBBD31C", Slot = "4")]
	public override void Update()
	{
	}

	[Token(Token = "0x60009D1")]
	[Address(RVA = "0xBBDC78", Offset = "0xBBDC78", VA = "0xBBDC78", Slot = "5")]
	public override void Cleanup()
	{
	}

	[Token(Token = "0x60009D2")]
	[Address(RVA = "0xBBDD58", Offset = "0xBBDD58", VA = "0xBBDD58")]
	public int FetchPrefabDataResourceID(PlantPrefabData inPrefabData)
	{
		return default(int);
	}

	[Token(Token = "0x60009D3")]
	[Address(RVA = "0xBBDF4C", Offset = "0xBBDF4C", VA = "0xBBDF4C")]
	public void SetProxyGrowing(PlantPositionProxy inProxy, bool newIsGrowing)
	{
	}

	[Token(Token = "0x60009D4")]
	[Address(RVA = "0xBBE734", Offset = "0xBBE734", VA = "0xBBE734")]
	public bool GetProxyIsGrowing(int inProxyID)
	{
		return default(bool);
	}

	[Token(Token = "0x60009D5")]
	[Address(RVA = "0xBBE7B0", Offset = "0xBBE7B0", VA = "0xBBE7B0")]
	public void FetchCurrentProxyGrowth(PlantPositionProxy inProxy)
	{
	}

	[Token(Token = "0x60009D6")]
	[Address(RVA = "0xBBE884", Offset = "0xBBE884", VA = "0xBBE884")]
	public void SetProxyDirtPileID(int inProxyID, int inDirtPileID)
	{
	}

	[Token(Token = "0x60009D7")]
	[Address(RVA = "0xBBD360", Offset = "0xBBD360", VA = "0xBBD360")]
	private void ProcessPendingJobResults()
	{
	}

	[Token(Token = "0x60009D8")]
	[Address(RVA = "0xBBE930", Offset = "0xBBE930", VA = "0xBBE930")]
	private float CalculateGrowth(ref PlantResourceData_Native resourceData, ref ProxyGrowthRuntimeData currentRuntimeDataRef, bool hasFertilizer)
	{
		return default(float);
	}

	[Token(Token = "0x60009D9")]
	[Address(RVA = "0xBBD598", Offset = "0xBBD598", VA = "0xBBD598")]
	public void UpdateGrowth()
	{
	}

	[Token(Token = "0x60009DA")]
	[Address(RVA = "0xBBEF84", Offset = "0xBBEF84", VA = "0xBBEF84")]
	private unsafe void QueuePlantGrowthJobs(in ProxyGrowthRuntimeData* inGrowthDataPtr, in int inGrowthDataID, float inRequiredWaterAmount, float inRequiredFertilizerAmount)
	{
	}

	[Token(Token = "0x60009DB")]
	[Address(RVA = "0xBBDC64", Offset = "0xBBDC64", VA = "0xBBDC64")]
	private void UpdateSoil()
	{
	}

	[Token(Token = "0x60009DC")]
	[Address(RVA = "0xBBEBD4", Offset = "0xBBEBD4", VA = "0xBBEBD4")]
	private unsafe static void UpdateProxyGrowthRenderData(PlantGrowthSystem growthSystem, float currentProxyGrowth, float currentProxyShrivel, int plantPartCount, PlantPartGrowthData* plantGrowthDataPtr, PlantProxyRenderData* plantRenderDataPtr, in PlantRenderSystemData renderSystemData, int plantResourceID)
	{
	}

	[Token(Token = "0x60009DD")]
	[Address(RVA = "0xBBED88", Offset = "0xBBED88", VA = "0xBBED88")]
	private unsafe static void LerpProxyPartColors(float colorLerpVal, Color targetColor, int plantPartCount, PlantPartGrowthData* plantGrowthDataPtr, PlantProxyRenderData* plantRenderDataPtr, in PlantRenderSystemData renderSystemData)
	{
	}

	[Token(Token = "0x60009DE")]
	[Address(RVA = "0xBBF3CC", Offset = "0xBBF3CC", VA = "0xBBF3CC")]
	private unsafe static void ResetProxyPartColors(int plantPartCount, PlantPartGrowthData* plantGrowthDataPtr, PlantProxyRenderData* plantRenderDataPtr, in PlantRenderSystemData renderSystemData)
	{
	}

	[Token(Token = "0x60009DF")]
	[Address(RVA = "0xBBE544", Offset = "0xBBE544", VA = "0xBBE544")]
	public void ForceProxyGrowthValue(PlantPositionProxy inProxy, float inProxyGrowthValue, bool useCachedShrivel = false)
	{
	}

	[Token(Token = "0x60009E0")]
	[Address(RVA = "0xBBEA04", Offset = "0xBBEA04", VA = "0xBBEA04")]
	private unsafe void SetProxyGrowthFinished(PlantPositionProxy plantProxy, ProxyGrowthRuntimeData* growthRuntimeDataPtr, int proxyPartCount)
	{
	}

	[Token(Token = "0x60009E1")]
	[Address(RVA = "0xBBFAA0", Offset = "0xBBFAA0", VA = "0xBBFAA0")]
	public void RegisterProxy(PlantPositionProxy inProxy)
	{
	}

	[Token(Token = "0x60009E2")]
	[Address(RVA = "0xBBFB98", Offset = "0xBBFB98", VA = "0xBBFB98")]
	public void DeregisterProxy(PlantPositionProxy inProxy)
	{
	}

	[Token(Token = "0x60009E3")]
	[Address(RVA = "0xBBFC5C", Offset = "0xBBFC5C", VA = "0xBBFC5C")]
	public void RegisterSoilSurface(SoilSurfaceGround groundSurface)
	{
	}

	[Token(Token = "0x60009E4")]
	[Address(RVA = "0xBBFDB0", Offset = "0xBBFDB0", VA = "0xBBFDB0")]
	public void RegisterSimpleSoilSurface(SoilSurfaceSimple surface)
	{
	}

	[Token(Token = "0x60009E5")]
	[Address(RVA = "0xBBFEAC", Offset = "0xBBFEAC", VA = "0xBBFEAC")]
	public void DeregisterSoilSurface(SoilSurface surface)
	{
	}

	[Token(Token = "0x60009E6")]
	[Address(RVA = "0xBBFF70", Offset = "0xBBFF70", VA = "0xBBFF70")]
	public void UpdateSoilSurfaceData(SoilSurfaceGround groundSurface)
	{
	}

	[Token(Token = "0x60009E7")]
	[Address(RVA = "0xBBF1E4", Offset = "0xBBF1E4", VA = "0xBBF1E4")]
	public float GetGrowthValueFromCurveCache(float inGrowthValue, int inPlantResourceID, int inPlantPartCurveID)
	{
		return default(float);
	}
}
[Token(Token = "0x20001BE")]
public struct PlantPartGrowthData
{
	[Token(Token = "0x4000978")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float GrowthStart;

	[Token(Token = "0x4000979")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public float GrowthDistance;

	[Token(Token = "0x400097A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public int RenderDataIndex;

	[Token(Token = "0x400097B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public bool IsDirtPile;

	[Token(Token = "0x400097C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int PartGrowthCurveID;
}
[Token(Token = "0x20001BF")]
[ExecuteInEditMode]
public class PlantPositionProxy : PlantSystemIndexable, IInitializable
{
	[Token(Token = "0x20001C0")]
	private struct SubPlantIndexRange
	{
		[Token(Token = "0x400099D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int StartIndex;

		[Token(Token = "0x400099E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public int EndIndex;
	}

	[Token(Token = "0x20001C1")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x971DF8", Offset = "0x971DF8")]
	private sealed class <PlantWindStateLerp>d__51 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400099F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40009A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40009A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PlantPositionProxy <>4__this;

		[Token(Token = "0x17000119")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000A11")]
			[Address(RVA = "0xD7CF3C", Offset = "0xD7CF3C", VA = "0xD7CF3C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700011A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000A13")]
			[Address(RVA = "0xD7CFA4", Offset = "0xD7CFA4", VA = "0xD7CFA4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000A0E")]
		[Address(RVA = "0xD7CD94", Offset = "0xD7CD94", VA = "0xD7CD94")]
		[DebuggerHidden]
		public <PlantWindStateLerp>d__51(int <>1__state)
		{
		}

		[Token(Token = "0x6000A0F")]
		[Address(RVA = "0xD7CDC0", Offset = "0xD7CDC0", VA = "0xD7CDC0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000A10")]
		[Address(RVA = "0xD7CDC4", Offset = "0xD7CDC4", VA = "0xD7CDC4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000A12")]
		[Address(RVA = "0xD7CF44", Offset = "0xD7CF44", VA = "0xD7CF44", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400097D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public AssetReference PlantPrefabDataReference;

	[Token(Token = "0x400097E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public NativeArray<PlantPartGrowthData> CachedGrowthData;

	[Token(Token = "0x400097F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public PlantSubPartProxy[] SpawnedSubPartProxies;

	[Token(Token = "0x4000980")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public bool ShouldUpdateGrowthData;

	[Token(Token = "0x4000981")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public CapsuleCollider CollisionCollider;

	[Token(Token = "0x4000982")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public SaveID PlantedSurfaceID;

	[Token(Token = "0x4000983")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public bool RequireSoilSurfaceForGrowth;

	[Token(Token = "0x4000984")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD9")]
	private bool HaveValidSoilPosition;

	[Token(Token = "0x4000985")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private SoilSurface HoveredSoilSurface;

	[Token(Token = "0x4000986")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private Vector3 HoveredSoliPosition;

	[Token(Token = "0x4000987")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
	public bool ProxyGrowthFinished;

	[Token(Token = "0x4000988")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF5")]
	public bool HavePendingProxySplit;

	[Token(Token = "0x4000989")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF6")]
	public bool HaveGeneratedFinalGrowthData;

	[Token(Token = "0x400098A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public SaveID PlantSaveID;

	[Token(Token = "0x400098B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	public bool IsRootVegetable;

	[Token(Token = "0x400098C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x109")]
	public bool HaveFlowerHeads;

	[Token(Token = "0x400098D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	[SerializeField]
	private NeatAudioPlayer m_audioPlayer;

	[Token(Token = "0x400098E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	private bool InDropZone;

	[Token(Token = "0x400098F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
	private int NumberOfSubPartsToSpawn;

	[Token(Token = "0x4000990")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private SoilValueCheckHelper PendingValueCheck;

	[Token(Token = "0x4000991")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	private float CachedSoilValue;

	[Token(Token = "0x4000992")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	private Grabbable ProxyGrabbable;

	[Token(Token = "0x4000993")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	private bool HaveCustomSoilPatchPosition;

	[Token(Token = "0x4000994")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x139")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x978530", Offset = "0x978530")]
	private bool <HasFinishedGrowing>k__BackingField;

	[Token(Token = "0x4000995")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x13C")]
	private float TargetWindState;

	[Token(Token = "0x4000996")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	private float InitialWindState;

	[Token(Token = "0x4000997")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
	private float WindStateLerpDuration;

	[Token(Token = "0x4000998")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	private float WindStateLerpTimer;

	[Token(Token = "0x4000999")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14C")]
	private float WindStateCoroutineLastTimestamp;

	[Token(Token = "0x400099A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	private SubPlantIndexRange[] subArrayIndexes;

	[Token(Token = "0x400099B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	private bool isSpawningSubPartProxies;

	[Token(Token = "0x400099C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x159")]
	private bool m_initialized;

	[Token(Token = "0x17000118")]
	public bool HasFinishedGrowing
	{
		[Token(Token = "0x60009E9")]
		[Address(RVA = "0xBC038C", Offset = "0xBC038C", VA = "0xBC038C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x989C7C", Offset = "0x989C7C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60009EA")]
		[Address(RVA = "0xBC0394", Offset = "0xBC0394", VA = "0xBC0394")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x989C8C", Offset = "0x989C8C")]
		private set
		{
		}
	}

	[Token(Token = "0x60009EB")]
	[Address(RVA = "0xBC03A0", Offset = "0xBC03A0", VA = "0xBC03A0", Slot = "6")]
	public override bool CanEverGrow()
	{
		return default(bool);
	}

	[Token(Token = "0x60009EC")]
	[Address(RVA = "0xBC03A8", Offset = "0xBC03A8", VA = "0xBC03A8", Slot = "7")]
	public override bool HaveValidGrowthPosition()
	{
		return default(bool);
	}

	[Token(Token = "0x60009ED")]
	[Address(RVA = "0xBC03E8", Offset = "0xBC03E8", VA = "0xBC03E8", Slot = "8")]
	public override bool HaveValidData()
	{
		return default(bool);
	}

	[Token(Token = "0x60009EE")]
	[Address(RVA = "0xBC0458", Offset = "0xBC0458", VA = "0xBC0458", Slot = "16")]
	protected override void OnDestroy()
	{
	}

	[Token(Token = "0x60009EF")]
	[Address(RVA = "0xBC0548", Offset = "0xBC0548", VA = "0xBC0548", Slot = "4")]
	public override ComponentState CreateState()
	{
		return null;
	}

	[Token(Token = "0x60009F0")]
	[Address(RVA = "0xBC07DC", Offset = "0xBC07DC", VA = "0xBC07DC", Slot = "20")]
	public void Initialize()
	{
	}

	[Token(Token = "0x60009F1")]
	[Address(RVA = "0xBC1100", Offset = "0xBC1100", VA = "0xBC1100", Slot = "11")]
	public override void SetRenderingActive(bool newRenderingActive)
	{
	}

	[Token(Token = "0x60009F2")]
	[Address(RVA = "0xBC11A4", Offset = "0xBC11A4", VA = "0xBC11A4", Slot = "9")]
	public override void GatherRenderData()
	{
	}

	[Token(Token = "0x60009F3")]
	[Address(RVA = "0xBC1278", Offset = "0xBC1278", VA = "0xBC1278", Slot = "10")]
	protected override void GenerateCachedRenderData()
	{
	}

	[Token(Token = "0x60009F4")]
	[Address(RVA = "0xBBF4CC", Offset = "0xBBF4CC", VA = "0xBBF4CC")]
	public void DisableCachedRenderDataShrivel()
	{
	}

	[Token(Token = "0x60009F5")]
	[Address(RVA = "0xBBE334", Offset = "0xBBE334", VA = "0xBBE334")]
	public void GenerateCachedGrowthData()
	{
	}

	[Token(Token = "0x60009F6")]
	[Address(RVA = "0xBC1F28", Offset = "0xBC1F28", VA = "0xBC1F28", Slot = "12")]
	public override void PlantUpdate()
	{
	}

	[Token(Token = "0x60009F7")]
	[Address(RVA = "0xBC2898", Offset = "0xBC2898", VA = "0xBC2898", Slot = "13")]
	public override void UpdateRenderTransforms()
	{
	}

	[Token(Token = "0x60009F8")]
	[Address(RVA = "0xBC2AC0", Offset = "0xBC2AC0", VA = "0xBC2AC0", Slot = "14")]
	public override void OnProxyGrabbed(Grabbable grabbable)
	{
	}

	[Token(Token = "0x60009F9")]
	[Address(RVA = "0xBC2FA0", Offset = "0xBC2FA0", VA = "0xBC2FA0", Slot = "15")]
	public override void OnProxyDropped(Grabbable grabbable)
	{
	}

	[Token(Token = "0x60009FA")]
	[Address(RVA = "0xBC34A8", Offset = "0xBC34A8", VA = "0xBC34A8")]
	public void OnParentGrabbed(Grabbable parent)
	{
	}

	[Token(Token = "0x60009FB")]
	[Address(RVA = "0xBC3604", Offset = "0xBC3604", VA = "0xBC3604")]
	public void OnParentDropped(Grabbable parent)
	{
	}

	[Token(Token = "0x60009FC")]
	[Address(RVA = "0xBBF85C", Offset = "0xBBF85C", VA = "0xBBF85C")]
	public void SetPlantWindState(float newWindState, bool stopLerpCoroutine = true)
	{
	}

	[Token(Token = "0x60009FD")]
	[Address(RVA = "0xBBF80C", Offset = "0xBBF80C", VA = "0xBBF80C")]
	public void LerpPlantWindState(float targetWindState, float lerpDuration)
	{
	}

	[Token(Token = "0x60009FE")]
	[Address(RVA = "0xBC37A8", Offset = "0xBC37A8", VA = "0xBC37A8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x989C9C", Offset = "0x989C9C")]
	private IEnumerator PlantWindStateLerp()
	{
		return null;
	}

	[Token(Token = "0x60009FF")]
	[Address(RVA = "0xBC3824", Offset = "0xBC3824", VA = "0xBC3824")]
	public void SetHighlightForWholePlant(float newHighlight)
	{
	}

	[Token(Token = "0x6000A00")]
	[Address(RVA = "0xBBF9A8", Offset = "0xBBF9A8", VA = "0xBBF9A8")]
	public void UpdateGrabbableState()
	{
	}

	[Token(Token = "0x6000A01")]
	[Address(RVA = "0xBBF574", Offset = "0xBBF574", VA = "0xBBF574")]
	public void GenerateSubPartProxies()
	{
	}

	[Token(Token = "0x6000A02")]
	[Address(RVA = "0xBC3AAC", Offset = "0xBC3AAC", VA = "0xBC3AAC")]
	public void OnSubPartProxiesSpawned(SpawnOperationCallbackData data)
	{
	}

	[Token(Token = "0x6000A03")]
	[Address(RVA = "0xBBF990", Offset = "0xBBF990", VA = "0xBBF990")]
	public void OnFinishedGrowing()
	{
	}

	[Token(Token = "0x6000A04")]
	[Address(RVA = "0xBC4304", Offset = "0xBC4304", VA = "0xBC4304")]
	private void PlayFinishedSound()
	{
	}

	[Token(Token = "0x6000A05")]
	[Address(RVA = "0xBC3918", Offset = "0xBC3918", VA = "0xBC3918")]
	public bool AreAllSpawnedSubPartProxiesDetached()
	{
		return default(bool);
	}

	[Token(Token = "0x6000A06")]
	[Address(RVA = "0xBC43CC", Offset = "0xBC43CC", VA = "0xBC43CC", Slot = "19")]
	public override void InitializeComponentData(in PlantPrefabData dataForInit)
	{
	}

	[Token(Token = "0x6000A07")]
	[Address(RVA = "0xBC4B40", Offset = "0xBC4B40", VA = "0xBC4B40")]
	public void OnDropZoneBeginHover()
	{
	}

	[Token(Token = "0x6000A08")]
	[Address(RVA = "0xBC4B4C", Offset = "0xBC4B4C", VA = "0xBC4B4C")]
	public void OnDropZoneEndHover()
	{
	}

	[Token(Token = "0x6000A09")]
	[Address(RVA = "0xBC3278", Offset = "0xBC3278", VA = "0xBC3278")]
	public bool AttachToSoilSurface(SoilSurface inSurface)
	{
		return default(bool);
	}

	[Token(Token = "0x6000A0A")]
	[Address(RVA = "0xBC2C8C", Offset = "0xBC2C8C", VA = "0xBC2C8C")]
	public void DetachFromSoilSurface()
	{
	}

	[Token(Token = "0x6000A0B")]
	[Address(RVA = "0xBC0E7C", Offset = "0xBC0E7C", VA = "0xBC0E7C")]
	public void SetDirtPileActive(bool newDirtPileActive)
	{
	}

	[Token(Token = "0x6000A0C")]
	[Address(RVA = "0xBC4B54", Offset = "0xBC4B54", VA = "0xBC4B54")]
	public bool IsPlanted()
	{
		return default(bool);
	}

	[Token(Token = "0x6000A0D")]
	[Address(RVA = "0xBC4B98", Offset = "0xBC4B98", VA = "0xBC4B98")]
	public PlantPositionProxy()
	{
	}
}
[Serializable]
[Token(Token = "0x20001C2")]
public class PlantPositionProxyState : ComponentState
{
	[Token(Token = "0x40009A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public AssetReferenceSerializable plantPrefabData;

	[Token(Token = "0x40009A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float currentGrowth;

	[Token(Token = "0x40009A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public SaveID soilSurfaceId;

	[Token(Token = "0x40009A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public bool HaveGeneratedScale;

	[Token(Token = "0x40009A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Vector3 GeneratedScale;

	[Token(Token = "0x40009A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public bool HaveGeneratedRotation;

	[Token(Token = "0x40009A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float GeneratedRotation;

	[Token(Token = "0x40009A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public bool RequiresSoilSurfaceForGrowth;

	[Token(Token = "0x40009AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public int NumAttachedChildren;

	[Token(Token = "0x40009AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float PlantWindState;

	[Token(Token = "0x40009AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public bool PlantActive;

	[Token(Token = "0x40009AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public SaveID PlantSaveID;

	[Token(Token = "0x40009AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public byte PlantUpdateState;

	[Token(Token = "0x6000A14")]
	[Address(RVA = "0xD7CFAC", Offset = "0xD7CFAC", VA = "0xD7CFAC")]
	public PlantPositionProxyState(AssetReference prefabDataRef, float growth, SaveID soilSurface, bool haveGeneratedScale, Vector3 generatedScale, bool haveGeneratedRotation, float generatedRotation, bool requireSoildSurfaceForGrowth, int numChildren, float windState, bool inPlantActive, SaveID inPlantSaveID, byte inPlantUpdateState)
	{
	}
}
[Serializable]
[Token(Token = "0x20001C3")]
public struct PlantPartGrowthCurvePoint
{
	[Token(Token = "0x40009AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float Time;

	[Token(Token = "0x40009B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public float Value;
}
[Serializable]
[Token(Token = "0x20001C4")]
public struct PlantPartGrowthCurveCache
{
	[Token(Token = "0x40009B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public PlantPartGrowthCurvePoint[] CachedCurvePoints;
}
[Token(Token = "0x20001C5")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x971E08", Offset = "0x971E08")]
public class PlantPrefabData : ScriptableObject
{
	[Token(Token = "0x20001C6")]
	public enum PlantPartType
	{
		[Token(Token = "0x40009EB")]
		Stem,
		[Token(Token = "0x40009EC")]
		Root,
		[Token(Token = "0x40009ED")]
		Leaf,
		[Token(Token = "0x40009EE")]
		DirtPile,
		[Token(Token = "0x40009EF")]
		Head,
		[Token(Token = "0x40009F0")]
		COUNT
	}

	[Serializable]
	[Token(Token = "0x20001C7")]
	public struct PartTypeData
	{
		[Token(Token = "0x40009F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public PlantPartType PartType;

		[Token(Token = "0x40009F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public List<PlantPartRenderData> PartRenderDatas;

		[Token(Token = "0x40009F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public PlantPartGrowthData[] PartGrowthDatas;

		[Token(Token = "0x40009F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Matrix4x4[] AdditionalTypeMatrices;
	}

	[Serializable]
	[Token(Token = "0x20001C8")]
	public struct PlantPartRenderData
	{
		[Token(Token = "0x40009F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public PlantPartType PartType;

		[Token(Token = "0x40009F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public Matrix4x4 PartToRootMatrix;

		[Token(Token = "0x40009F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Mesh PartMesh;

		[Token(Token = "0x40009F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Material PartMaterial;

		[Token(Token = "0x40009F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Color ColorDark;

		[Token(Token = "0x40009FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Color ColorMid;

		[Token(Token = "0x40009FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public Color ColorBright;

		[Token(Token = "0x40009FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public int SubPlantIndex;

		[Token(Token = "0x40009FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		public bool AllowShrivel;

		[Token(Token = "0x40009FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8D")]
		public bool HaveOverrideGrowthData;

		[Token(Token = "0x40009FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public float OverrideGrowthStart;

		[Token(Token = "0x4000A00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		public float OverrideGrowthEnd;

		[Token(Token = "0x4000A01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public int GrowthCurveIndex;
	}

	[Serializable]
	[Token(Token = "0x20001C9")]
	public struct PlantPartGrowthData
	{
		[Token(Token = "0x4000A02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool IsValidGrowthData;

		[Token(Token = "0x4000A03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
		public bool HaveOverrideData;

		[Token(Token = "0x4000A04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float GrowthStart;

		[Token(Token = "0x4000A05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float GrowthDistance;

		[Token(Token = "0x4000A06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public int GrowthCurveIndex;
	}

	[Token(Token = "0x40009B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x978540", Offset = "0x978540")]
	public GameObject PrefabTemplate;

	[Token(Token = "0x40009B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public PlantResourceData ResourceData;

	[Token(Token = "0x40009B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool RequiresTrellis;

	[Token(Token = "0x40009B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	public bool IsRootVegetable;

	[Token(Token = "0x40009B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x978578", Offset = "0x978578")]
	public bool UseCustomPlantScale;

	[Token(Token = "0x40009B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public Vector3 MaxPlantScale;

	[Token(Token = "0x40009B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Vector3 MinPlantScale;

	[Token(Token = "0x40009B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public bool RandomizeYaw;

	[Token(Token = "0x40009BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float YawRandomizeRange;

	[Token(Token = "0x40009BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9785B0", Offset = "0x9785B0")]
	public bool UseSeparateHeadGrowthStage;

	[Token(Token = "0x40009BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4D")]
	public bool UseCustomHeadGrowthFraction;

	[Token(Token = "0x40009BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float CustomHeadGrowthFraction;

	[Token(Token = "0x40009BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9785E8", Offset = "0x9785E8")]
	public NeatAudioCue GrowthFinishedSound;

	[Token(Token = "0x40009BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x978620", Offset = "0x978620")]
	public float PlantHeight;

	[Token(Token = "0x40009C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public PartTypeData[] PartTypeDatas;

	[Token(Token = "0x40009C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public int PlantPartCount;

	[Token(Token = "0x40009C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public int NumSubPlants;

	[Token(Token = "0x40009C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public CurrencyType PlantHeadCurrencyType;

	[Token(Token = "0x40009C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public CurrencyType PlantBodyCurrencyType;

	[Token(Token = "0x40009C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public CraftingSystem.ResourceType PlantHeadResourceType;

	[Token(Token = "0x40009C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public CraftingSystem.ResourceType PlantBodyResourceType;

	[Token(Token = "0x40009C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public ItemDataAssetRow PlantBodyItemData;

	[Token(Token = "0x40009C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public ItemDataAssetRow PlantHeadItemData;

	[Token(Token = "0x40009C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public Vector3 PlantHeadColliderSize;

	[Token(Token = "0x40009CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	public Vector3 PlantHeadColliderCenter;

	[Token(Token = "0x40009CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public float PlantBodyRendererSize;

	[Token(Token = "0x40009CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
	public Vector3 PlantBodyRenderOffset;

	[Token(Token = "0x40009CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public float PlantHeadRendererSize;

	[Token(Token = "0x40009CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
	public Vector3 PlantHeadRenderOffset;

	[Token(Token = "0x40009CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public Vector3 PlantStemColliderCenter;

	[Token(Token = "0x40009D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
	public float PlantStemColliderHeight;

	[Token(Token = "0x40009D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	public float PlantStemColliderRadius;

	[Token(Token = "0x40009D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
	public bool HaveCustomGrabPoint;

	[Token(Token = "0x40009D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	public Vector3 PlantGrabPointPosition;

	[Token(Token = "0x40009D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
	public Quaternion PlantGrabPointRotation;

	[Token(Token = "0x40009D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
	public bool HaveCustomGrabPointLeft;

	[Token(Token = "0x40009D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	public Vector3 PlantGrabPointPositionLeft;

	[Token(Token = "0x40009D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
	public Quaternion PlantGrabPointRotationLeft;

	[Token(Token = "0x40009D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x154")]
	public bool HaveCustomHeadGrabPoint;

	[Token(Token = "0x40009D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	public Vector3 FlowerHeadGrabPointPosition;

	[Token(Token = "0x40009DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x164")]
	public Quaternion FlowerHeadGrabPointRotation;

	[Token(Token = "0x40009DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x174")]
	public bool HaveCustomHeadGrabPointLeft;

	[Token(Token = "0x40009DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	public Vector3 FlowerHeadGrabPointPositionLeft;

	[Token(Token = "0x40009DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x184")]
	public Quaternion FlowerHeadGrabPointRotationLeft;

	[Token(Token = "0x40009DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x194")]
	public PlantColors DirtColor_Watered;

	[Token(Token = "0x40009DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C4")]
	public PlantColors DirtColor_Dry;

	[Token(Token = "0x40009E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F4")]
	public int HashedNameProxy;

	[Token(Token = "0x40009E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
	public int HashedNameSubPart;

	[Token(Token = "0x40009E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1FC")]
	public int HashedNameSeed;

	[Token(Token = "0x40009E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
	public int HashedNameSeedBag;

	[Token(Token = "0x40009E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x204")]
	private int CurrentSubPlantIndex;

	[NonSerialized]
	[Token(Token = "0x40009E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
	public int PrefabDataID;

	[Token(Token = "0x40009E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
	private List<AnimationCurve> FoundAnimationCurves;

	[Token(Token = "0x40009E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
	public PlantPartGrowthCurveCache[] CachedGrowthCurves;

	[Token(Token = "0x40009E8")]
	private const int PLANT_GROWTH_CURVE_CACHE_SIZE = 128;

	[Token(Token = "0x40009E9")]
	private const int PLANT_GROWTH_CURVE_CACHE_SAMPLE_SIZE = 2049;

	[Token(Token = "0x6000A15")]
	[Address(RVA = "0xD7D124", Offset = "0xD7D124", VA = "0xD7D124")]
	private void RecalcPartCount()
	{
	}

	[Token(Token = "0x6000A16")]
	[Address(RVA = "0xD7D2E0", Offset = "0xD7D2E0", VA = "0xD7D2E0")]
	public PlantPrefabData()
	{
	}
}
[Token(Token = "0x20001CA")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x971E70", Offset = "0x971E70")]
public class PlantPrefabDataCollection : ScriptableObject
{
	[Token(Token = "0x4000A07")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float GlobalGrowthDurationModifier;

	[Token(Token = "0x4000A08")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public PlantPrefabData[] PrefabDatas;

	[Token(Token = "0x4000A09")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AssetReference[] PrefabDataAssetRefs;

	[Token(Token = "0x4000A0A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AssetReference[] PlantTypes;

	[Token(Token = "0x6000A17")]
	[Address(RVA = "0xD7D3E8", Offset = "0xD7D3E8", VA = "0xD7D3E8")]
	public PlantPrefabDataCollection()
	{
	}
}
[Token(Token = "0x20001CB")]
public class PlantPrefabDataManager : MonoBehaviour
{
	[Token(Token = "0x4000A0B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static PlantPrefabDataManager Instance;

	[Token(Token = "0x4000A0C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public PlantPrefabDataCollection collection;

	[Token(Token = "0x4000A0D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Dictionary<string, PlantPrefabData> plantPrefabDatas;

	[Token(Token = "0x4000A0E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private int numAssetsToLoad;

	[Token(Token = "0x6000A18")]
	[Address(RVA = "0xD7D3F8", Offset = "0xD7D3F8", VA = "0xD7D3F8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000A19")]
	[Address(RVA = "0xD7D6D0", Offset = "0xD7D6D0", VA = "0xD7D6D0")]
	public void Reset()
	{
	}

	[Token(Token = "0x6000A1A")]
	[Address(RVA = "0xD7D738", Offset = "0xD7D738", VA = "0xD7D738")]
	public bool DoneLoading()
	{
		return default(bool);
	}

	[Token(Token = "0x6000A1B")]
	[Address(RVA = "0xD7D748", Offset = "0xD7D748", VA = "0xD7D748")]
	private void OnAssetLoaded(AsyncOperationHandle<PlantPrefabData> handle)
	{
	}

	[Token(Token = "0x6000A1C")]
	[Address(RVA = "0xD7D800", Offset = "0xD7D800", VA = "0xD7D800")]
	private void OnPlantTypeLoaded(AsyncOperationHandle<PlantType> handle)
	{
	}

	[Token(Token = "0x6000A1D")]
	[Address(RVA = "0xD7D8B8", Offset = "0xD7D8B8", VA = "0xD7D8B8")]
	public PlantPrefabData GetPlantPrefabData(AssetReference assetRef)
	{
		return null;
	}

	[Token(Token = "0x6000A1E")]
	[Address(RVA = "0xD7D978", Offset = "0xD7D978", VA = "0xD7D978")]
	public PlantPrefabDataManager()
	{
	}
}
[Token(Token = "0x20001CC")]
public abstract class PlantSystemBase
{
	[Token(Token = "0x4000A0F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	protected bool NeedsInit;

	[Token(Token = "0x4000A10")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected PlantProxySystem MainProxySystem;

	[Token(Token = "0x6000A1F")]
	public abstract void Update();

	[Token(Token = "0x6000A20")]
	public abstract void Cleanup();

	[Token(Token = "0x6000A21")]
	[Address(RVA = "0xD7FF14", Offset = "0xD7FF14", VA = "0xD7FF14")]
	protected PlantSystemBase()
	{
	}
}
[Token(Token = "0x20001CD")]
public struct IndexableProxyData
{
	[Token(Token = "0x4000A11")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public int PlantID;

	[Token(Token = "0x4000A12")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public bool IsValidProxy;
}
[Token(Token = "0x20001CE")]
[ExecuteInEditMode]
public class PlantProxySystem : MonoBehaviour
{
	[Token(Token = "0x4000A13")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public PlantRenderSystem RenderSystem;

	[Token(Token = "0x4000A14")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public PlantGrowthSystem GrowthSystem;

	[Token(Token = "0x4000A15")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public PlantUpdateSystem UpdateSystem;

	[Token(Token = "0x4000A16")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public PlantCullingSystem CullingSystem;

	[Token(Token = "0x4000A17")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public PlantSpawnLocationManager SpawnLocationManager;

	[Token(Token = "0x4000A18")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static PlantProxySystem instance;

	[Token(Token = "0x4000A19")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool needsInit;

	[Token(Token = "0x4000A1A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public AssetReference BaseProxyTemplateRef;

	[Token(Token = "0x4000A1B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public AssetReference BaseSubPartProxyTemplateRef;

	[Token(Token = "0x4000A1C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public PlantPrefabDataCollection PrefabDataCollection;

	[Token(Token = "0x4000A1D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Material PlantRenderMaterial;

	[Token(Token = "0x4000A1E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public ComputeShader PlantCullingShader;

	[Token(Token = "0x4000A1F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private DynamicNativeArray<IndexableProxyData> IndexableProxyDataList;

	[Token(Token = "0x1700011B")]
	public static PlantProxySystem Instance
	{
		[Token(Token = "0x6000A25")]
		[Address(RVA = "0xD7E1EC", Offset = "0xD7E1EC", VA = "0xD7E1EC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000A22")]
	[Address(RVA = "0xD7DA0C", Offset = "0xD7DA0C", VA = "0xD7DA0C")]
	private void InitSystems()
	{
	}

	[Token(Token = "0x6000A23")]
	[Address(RVA = "0xD7DFD8", Offset = "0xD7DFD8", VA = "0xD7DFD8")]
	private void CleanupSystems()
	{
	}

	[Token(Token = "0x6000A24")]
	[Address(RVA = "0xD7E1D0", Offset = "0xD7E1D0", VA = "0xD7E1D0")]
	public void OnAreaUnloaded()
	{
	}

	[Token(Token = "0x6000A26")]
	[Address(RVA = "0xD7E300", Offset = "0xD7E300", VA = "0xD7E300")]
	public bool NeedsInit()
	{
		return default(bool);
	}

	[Token(Token = "0x6000A27")]
	[Address(RVA = "0xD7E308", Offset = "0xD7E308", VA = "0xD7E308")]
	private void Init()
	{
	}

	[Token(Token = "0x6000A28")]
	[Address(RVA = "0xD7E394", Offset = "0xD7E394", VA = "0xD7E394")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000A29")]
	[Address(RVA = "0xD7E41C", Offset = "0xD7E41C", VA = "0xD7E41C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000A2A")]
	[Address(RVA = "0xD7E47C", Offset = "0xD7E47C", VA = "0xD7E47C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000A2B")]
	[Address(RVA = "0xD7E600", Offset = "0xD7E600", VA = "0xD7E600")]
	public static PlantPrefabData GetProxyPrefabData()
	{
		return null;
	}

	[Token(Token = "0x6000A2C")]
	[Address(RVA = "0xD7E6E8", Offset = "0xD7E6E8", VA = "0xD7E6E8")]
	public static void PreInitializePlantProxy(PlantPositionProxy proxy, AssetReference inProxyPrefabData, float inBaseGrowth, SoilSurface inSoilSurface, bool requireSoilSurface = true)
	{
	}

	[Token(Token = "0x6000A2D")]
	[Address(RVA = "0xD7E7D4", Offset = "0xD7E7D4", VA = "0xD7E7D4")]
	public static bool SpawnNewPositionProxy(Transform inSpawnTransform, Action<SpawnOperationCallbackData> postSpawnCallback, bool sanitizeRotation = true)
	{
		return default(bool);
	}

	[Token(Token = "0x6000A2E")]
	[Address(RVA = "0xD7E9CC", Offset = "0xD7E9CC", VA = "0xD7E9CC")]
	public static void SpawnNewSubPartProxies(Transform inSpawnTransform, int numberOfProxies, Action<SpawnOperationCallbackData> preInitCallback)
	{
	}

	[Token(Token = "0x6000A2F")]
	[Address(RVA = "0xD7EC04", Offset = "0xD7EC04", VA = "0xD7EC04")]
	public static bool SetupNewSubPartProxyForCulling(PlantSubPartProxy inSubPartProxy)
	{
		return default(bool);
	}

	[Token(Token = "0x6000A30")]
	[Address(RVA = "0xD7EE20", Offset = "0xD7EE20", VA = "0xD7EE20")]
	public static bool SetupNewSubPartProxy(PlantSubPartProxy inSubPartProxy, Transform inSpawnTransform, in NativeArray<PlantPartRenderData> inSubPartRenderData, Matrix4x4 inOffsetMatrix, bool inInitialCullState = false)
	{
		return default(bool);
	}

	[Token(Token = "0x6000A31")]
	[Address(RVA = "0xD7F7D8", Offset = "0xD7F7D8", VA = "0xD7F7D8")]
	public void RegisterIndexableProxy(PlantSystemIndexable inIndexable)
	{
	}

	[Token(Token = "0x6000A32")]
	[Address(RVA = "0xD7FB28", Offset = "0xD7FB28", VA = "0xD7FB28")]
	public void DeregisterIndexableProxy(PlantSystemIndexable inIndexable)
	{
	}

	[Token(Token = "0x6000A33")]
	[Address(RVA = "0xD7F8B4", Offset = "0xD7F8B4", VA = "0xD7F8B4")]
	private void InitProxyData(PlantSystemIndexable inIndexable)
	{
	}

	[Token(Token = "0x6000A34")]
	[Address(RVA = "0xD7FD60", Offset = "0xD7FD60", VA = "0xD7FD60")]
	private void RemoveIndexableData(PlantSystemIndexable inIndexableProxy)
	{
	}

	[Token(Token = "0x6000A35")]
	[Address(RVA = "0xD7ECE4", Offset = "0xD7ECE4", VA = "0xD7ECE4")]
	public void SetProxyActive(PlantSystemIndexable inIndexable, bool newActive, bool inInitialCullState = false)
	{
	}

	[Token(Token = "0x6000A36")]
	[Address(RVA = "0xD7FF04", Offset = "0xD7FF04", VA = "0xD7FF04")]
	public PlantProxySystem()
	{
	}
}
[Token(Token = "0x20001CF")]
[ExecuteInEditMode]
public struct PlantProxyRenderData
{
	[Token(Token = "0x4000A20")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public bool HasValidProxy;

	[Token(Token = "0x4000A21")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
	public bool ProxyRenderingActive;

	[Token(Token = "0x4000A22")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public float PlantGrowth;

	[Token(Token = "0x4000A23")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public unsafe PlantPartRenderData* RenderDataBufferPtr;

	[Token(Token = "0x4000A24")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int RenderDataBufferCount;

	[Token(Token = "0x6000A37")]
	[Address(RVA = "0xA465F0", Offset = "0xA465F0", VA = "0xA465F0")]
	public void SetHasValidProxy(bool newHasValidProxy)
	{
	}
}
[Token(Token = "0x20001D0")]
public class PlantRenderSystem : PlantSystemBase
{
	[Token(Token = "0x20001D1")]
	private struct RenderArgsHelper
	{
		[Token(Token = "0x4000A3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public uint MeshIndexCount;

		[Token(Token = "0x4000A3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public uint MeshInstanceCount;

		[Token(Token = "0x4000A3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public uint MeshIndexStart;

		[Token(Token = "0x4000A3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public uint MeshBasevertex;

		[Token(Token = "0x4000A3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public uint AdditionalArg;
	}

	[Token(Token = "0x4000A25")]
	private const int PLANT_ARRAY_ALLOCATION_CHUNK = 256;

	[Token(Token = "0x4000A26")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public PlantPrefabDataCollection PrefabDataCollection;

	[Token(Token = "0x4000A27")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public DynamicNativeArray<PlantProxyRenderData> RenderProxyData;

	[Token(Token = "0x4000A28")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public List<PlantSystemIndexable> IndexableProxyList;

	[Token(Token = "0x4000A29")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public List<Mesh> PlantMeshes;

	[Token(Token = "0x4000A2A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public List<Mesh> PlantOutlineMeshes;

	[Token(Token = "0x4000A2B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Dictionary<Mesh, int> PlantMeshIds;

	[Token(Token = "0x4000A2C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private List<Material> PlantMaterials;

	[Token(Token = "0x4000A2D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private List<int> PlantPlantMeshInstances;

	[Token(Token = "0x4000A2E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Material PlantRenderMaterial;

	[Token(Token = "0x4000A2F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private List<int> PlantsToDeactivateRendering;

	[Token(Token = "0x4000A30")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private List<int> PlantsToActivateRendering;

	[Token(Token = "0x4000A31")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private List<MaterialPropertyBlock> MeshPropertyBlocks;

	[Token(Token = "0x4000A32")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public PlantRenderSystemData RenderData;

	[Token(Token = "0x4000A33")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private ComputeBuffer PlantRenderDatasBuffer;

	[Token(Token = "0x4000A34")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private ComputeBuffer PlantRenderArgsBuffer;

	[Token(Token = "0x4000A35")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private ComputeBuffer PlantInstanceOffsetBuffer;

	[Token(Token = "0x4000A36")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private List<ComputeBuffer> PlantMeshRenderDatasBuffers;

	[Token(Token = "0x4000A37")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private List<ComputeBuffer> PlantMeshRenderArgsBuffers;

	[Token(Token = "0x4000A38")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private NativeArray<RenderArgsHelper> PlantRenderArgsData;

	[Token(Token = "0x4000A39")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private bool PlantRenderingEnabled;

	[Token(Token = "0x4000A3A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC1")]
	public bool UseComputeCullingShader;

	[Token(Token = "0x6000A38")]
	[Address(RVA = "0xD7DB2C", Offset = "0xD7DB2C", VA = "0xD7DB2C")]
	public PlantRenderSystem(PlantProxySystem inProxySystem)
	{
	}

	[Token(Token = "0x6000A39")]
	[Address(RVA = "0xD7FF54", Offset = "0xD7FF54", VA = "0xD7FF54", Slot = "4")]
	public override void Update()
	{
	}

	[Token(Token = "0x6000A3A")]
	[Address(RVA = "0xD7FF58", Offset = "0xD7FF58", VA = "0xD7FF58", Slot = "5")]
	public override void Cleanup()
	{
	}

	[Token(Token = "0x6000A3B")]
	[Address(RVA = "0xD80198", Offset = "0xD80198", VA = "0xD80198")]
	private void CleanupMeshBuffers()
	{
	}

	[Token(Token = "0x6000A3C")]
	[Address(RVA = "0xD7F9B0", Offset = "0xD7F9B0", VA = "0xD7F9B0")]
	public void RegisterIndexableProxy(PlantSystemIndexable inIndexableProxy)
	{
	}

	[Token(Token = "0x6000A3D")]
	[Address(RVA = "0xD7FC50", Offset = "0xD7FC50", VA = "0xD7FC50")]
	public void DeregisterIndexableProxy(PlantSystemIndexable inIndexableProxy)
	{
	}

	[Token(Token = "0x6000A3E")]
	[Address(RVA = "0xD7FDE0", Offset = "0xD7FDE0", VA = "0xD7FDE0")]
	public void SetProxyRenderState(int inProxyIndex, bool inProxyRenderState, bool inInitialCullState = false)
	{
	}

	[Token(Token = "0x6000A3F")]
	[Address(RVA = "0xD80398", Offset = "0xD80398", VA = "0xD80398")]
	public void SetProxyRenderingActive(PlantSystemIndexable inIndexableProxy, bool inIsRenderingActive, bool inUpdateAllocation = true)
	{
	}

	[Token(Token = "0x6000A40")]
	[Address(RVA = "0xD80494", Offset = "0xD80494", VA = "0xD80494")]
	public void AllocatePlantRenderData(PlantSystemIndexable inIndexableProxy)
	{
	}

	[Token(Token = "0x6000A41")]
	[Address(RVA = "0xD806A4", Offset = "0xD806A4", VA = "0xD806A4")]
	public void FreePlantRenderData(PlantSystemIndexable inIndexableProxy)
	{
	}

	[Token(Token = "0x6000A42")]
	[Address(RVA = "0xD80A30", Offset = "0xD80A30", VA = "0xD80A30")]
	public int GetMeshID(Mesh inMesh, Material inMaterial)
	{
		return default(int);
	}

	[Token(Token = "0x6000A43")]
	[Address(RVA = "0xD80E20", Offset = "0xD80E20", VA = "0xD80E20")]
	private ComputeBuffer FetchMeshBuffer(int inMeshID, int inCount, int inStride)
	{
		return null;
	}

	[Token(Token = "0x6000A44")]
	[Address(RVA = "0xD80FE0", Offset = "0xD80FE0", VA = "0xD80FE0")]
	private ComputeBuffer FetchRenderArgsBuffer(int inMeshID, int inStride)
	{
		return null;
	}

	[Token(Token = "0x6000A45")]
	[Address(RVA = "0xD8117C", Offset = "0xD8117C", VA = "0xD8117C")]
	private MaterialPropertyBlock FetchMaterialPropertyBlock(int inMeshID)
	{
		return null;
	}

	[Token(Token = "0x6000A46")]
	[Address(RVA = "0xD812A4", Offset = "0xD812A4", VA = "0xD812A4")]
	private void UpdatePlantRenderDataBuffers(Camera c)
	{
	}

	[Token(Token = "0x6000A47")]
	[Address(RVA = "0xD815D4", Offset = "0xD815D4", VA = "0xD815D4")]
	protected void RenderPlants(Camera c)
	{
	}
}
[Token(Token = "0x20001D2")]
public struct PlantPartRenderBufferData
{
	[Token(Token = "0x4000A40")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Matrix4x4 PartRenderMatrix;

	[Token(Token = "0x4000A41")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Vector4 PartGrowthScale;

	[Token(Token = "0x4000A42")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float GreyscaleIntensity;

	[Token(Token = "0x4000A43")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public Color32 ColorDark;

	[Token(Token = "0x4000A44")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Color32 ColorMid;

	[Token(Token = "0x4000A45")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public Color32 ColorBright;

	[Token(Token = "0x4000A46")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Vector3 PlantWorldLocation;

	[Token(Token = "0x4000A47")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public Vector2 PlantWindData;

	[Token(Token = "0x4000A48")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public float PlantHightlight;
}
[Token(Token = "0x20001D3")]
public struct PlantPartIndexes
{
	[Token(Token = "0x4000A49")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public int PlantProxyIndex;

	[Token(Token = "0x4000A4A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public int PlantPartIndex;
}
[Token(Token = "0x20001D4")]
[AttributeAttribute(Name = "Il2CppSetOptionAttribute", RVA = "0x971EF8", Offset = "0x971EF8")]
[AttributeAttribute(Name = "Il2CppSetOptionAttribute", RVA = "0x971EF8", Offset = "0x971EF8")]
public class PlantRenderSystemData
{
	[Token(Token = "0x20001D5")]
	public enum RenderDataOffset
	{
		[Token(Token = "0x4000A55")]
		PartRenderMatrix = 0,
		[Token(Token = "0x4000A56")]
		PartGrowthScale = 64,
		[Token(Token = "0x4000A57")]
		GreyscaleIntensity = 80,
		[Token(Token = "0x4000A58")]
		ColorDark = 84,
		[Token(Token = "0x4000A59")]
		ColorMid = 88,
		[Token(Token = "0x4000A5A")]
		ColorBright = 92,
		[Token(Token = "0x4000A5B")]
		PlantWorldLocation = 96,
		[Token(Token = "0x4000A5C")]
		PlantWindData = 108,
		[Token(Token = "0x4000A5D")]
		PlantHighlight = 116
	}

	[Token(Token = "0x20001D6")]
	[AttributeAttribute(Name = "BurstCompileAttribute", RVA = "0x971FA0", Offset = "0x971FA0")]
	private struct ResizeBufferJob : IJob
	{
		[Token(Token = "0x4000A5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int InBlockSize;

		[Token(Token = "0x4000A5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public int NewBlockCount;

		[Token(Token = "0x4000A60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		[NativeDisableUnsafePtrRestriction]
		public unsafe int* BlockCountPtr;

		[Token(Token = "0x4000A61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[NativeDisableUnsafePtrRestriction]
		public unsafe int* indicesBufferCountPtr;

		[Token(Token = "0x4000A62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[NativeDisableUnsafePtrRestriction]
		public unsafe int** OccupiedIndicesBufferPtr;

		[Token(Token = "0x4000A63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[NativeDisableUnsafePtrRestriction]
		public unsafe void** BufferAddrPtr;

		[Token(Token = "0x6000A59")]
		[Address(RVA = "0xA46954", Offset = "0xA46954", VA = "0xA46954", Slot = "4")]
		public void Execute()
		{
		}
	}

	[Token(Token = "0x20001D7")]
	private struct MemoryBuffer
	{
		[Token(Token = "0x4000A64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int BufferBlockSize;

		[Token(Token = "0x4000A65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private int BufferBlockCount;

		[Token(Token = "0x4000A66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private int IndicesBufferCount;

		[Token(Token = "0x4000A67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private unsafe int* OccupiedIndicesBuffer;

		[Token(Token = "0x4000A68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private unsafe void* BufferAddr;

		[Token(Token = "0x4000A69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TimeSpan HighestSpan;

		[Token(Token = "0x6000A5A")]
		[Address(RVA = "0xD82CA0", Offset = "0xD82CA0", VA = "0xD82CA0")]
		public unsafe static void BlockMemCpy(void* destination, void* source, int blockCount)
		{
		}

		[Token(Token = "0x6000A5B")]
		[Address(RVA = "0xD82CC0", Offset = "0xD82CC0", VA = "0xD82CC0")]
		public unsafe static MemoryBuffer* AllocateNewBuffer(int inBlockSize, int inBufferCount)
		{
			//IL_0002: Expected I, but got O
			return (MemoryBuffer*)unchecked((nint)null);
		}

		[Token(Token = "0x6000A5C")]
		[Address(RVA = "0xD82E84", Offset = "0xD82E84", VA = "0xD82E84")]
		public unsafe static bool FreeMemoryBuffer(MemoryBuffer* inBufferToFree)
		{
			return default(bool);
		}

		[Token(Token = "0x6000A5D")]
		[Address(RVA = "0xA46600", Offset = "0xA46600", VA = "0xA46600")]
		public bool AllocateBufferData()
		{
			return default(bool);
		}

		[Token(Token = "0x6000A5E")]
		[Address(RVA = "0xA46608", Offset = "0xA46608", VA = "0xA46608")]
		public bool AllocateIndicesBuffer()
		{
			return default(bool);
		}

		[Token(Token = "0x6000A5F")]
		[Address(RVA = "0xA46610", Offset = "0xA46610", VA = "0xA46610")]
		public bool ResizeBufferAllocation(int newBufferBlockCount)
		{
			return default(bool);
		}

		[Token(Token = "0x6000A60")]
		[Address(RVA = "0xA46618", Offset = "0xA46618", VA = "0xA46618")]
		public bool FreeBufferData()
		{
			return default(bool);
		}

		[Token(Token = "0x6000A61")]
		[Address(RVA = "0xA46650", Offset = "0xA46650", VA = "0xA46650")]
		public bool FreeIndicesData()
		{
			return default(bool);
		}

		[Token(Token = "0x6000A62")]
		[Address(RVA = "0xA46688", Offset = "0xA46688", VA = "0xA46688")]
		public unsafe void* ClaimBufferBlock(out int claimedIndex)
		{
			//IL_0002: Expected I, but got O
			return (void*)unchecked((nint)null);
		}

		[Token(Token = "0x6000A63")]
		[Address(RVA = "0xA46690", Offset = "0xA46690", VA = "0xA46690")]
		public unsafe void* GetBufferBlockPtr(in int claimedIndex)
		{
			//IL_0002: Expected I, but got O
			return (void*)unchecked((nint)null);
		}

		[Token(Token = "0x6000A64")]
		[Address(RVA = "0xA466C0", Offset = "0xA466C0", VA = "0xA466C0")]
		public void FreeBufferBlock(uint indexToFree)
		{
		}

		[Token(Token = "0x6000A65")]
		[Address(RVA = "0xA466F0", Offset = "0xA466F0", VA = "0xA466F0")]
		public bool MoveBufferBlock(in MemoryTransactionData moveTransactionData)
		{
			return default(bool);
		}

		[Token(Token = "0x6000A66")]
		[Address(RVA = "0xD8329C", Offset = "0xD8329C", VA = "0xD8329C")]
		public static int GetRightMostUnsetBitIndex(int inValueToTest)
		{
			return default(int);
		}

		[Token(Token = "0x6000A67")]
		[Address(RVA = "0xD8342C", Offset = "0xD8342C", VA = "0xD8342C")]
		public static int GetLeftMostSetBitIndex(int inValueToTest)
		{
			return default(int);
		}

		[Token(Token = "0x6000A68")]
		[Address(RVA = "0xA466F8", Offset = "0xA466F8", VA = "0xA466F8")]
		public unsafe bool GetBufferInformation(out void* outBufferAddr, out int outBufferBlockCount)
		{
			return default(bool);
		}

		[Token(Token = "0x6000A69")]
		[Address(RVA = "0xA46724", Offset = "0xA46724", VA = "0xA46724")]
		public unsafe bool GetBufferInformation(out void* outBufferAddr, out int outBufferBlockCount, out int* outIndicesBufferAddr, out int outIndicesBufferCount)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x20001D8")]
	public struct MemoryTransactionData
	{
		[Token(Token = "0x4000A6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int sourceIndex;

		[Token(Token = "0x4000A6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public int destinationIndex;
	}

	[Token(Token = "0x20001D9")]
	public struct MeshMemoryBuffers
	{
		[Token(Token = "0x4000A6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private unsafe MemoryBuffer* RenderDataBuffer;

		[Token(Token = "0x4000A6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private unsafe MemoryBuffer* PlantIndexBuffer;

		[Token(Token = "0x4000A6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private bool NeedBufferCleanup;

		[Token(Token = "0x4000A6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int BufferInstanceCount;

		[Token(Token = "0x4000A70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool HaveUpdatedData;

		[Token(Token = "0x6000A6A")]
		[Address(RVA = "0xA467E8", Offset = "0xA467E8", VA = "0xA467E8")]
		public unsafe bool RequestInstanceAllocations(out int claimedBufferIndex, out PlantPartRenderBufferData* outRenderDataPtr, out PlantPartIndexes* outIndexDataPtr)
		{
			return default(bool);
		}

		[Token(Token = "0x6000A6B")]
		[Address(RVA = "0xA467F0", Offset = "0xA467F0", VA = "0xA467F0")]
		public bool SetOrChangeInstanceValues(ref int claimedBufferIndex, in PlantPartRenderBufferData inRenderBufferData, in PlantPartIndexes inPartIndexData)
		{
			return default(bool);
		}

		[Token(Token = "0x6000A6C")]
		public bool ChangeInstanceValue<ValueType>(int claimedBufferIndex, in ValueType newValue, int inDataOffset) where ValueType : struct
		{
			return default(bool);
		}

		[Token(Token = "0x6000A6D")]
		[Address(RVA = "0xA467F8", Offset = "0xA467F8", VA = "0xA467F8")]
		public bool ChangeInstancePartIndexData(int claimedBufferIndex, in PlantPartIndexes inPartIndexData)
		{
			return default(bool);
		}

		[Token(Token = "0x6000A6E")]
		[Address(RVA = "0xA46840", Offset = "0xA46840", VA = "0xA46840")]
		public void SetupBuffers(int initialBufferSizes = 256)
		{
		}

		[Token(Token = "0x6000A6F")]
		[Address(RVA = "0xA46848", Offset = "0xA46848", VA = "0xA46848")]
		public void FreeBuffers()
		{
		}

		[Token(Token = "0x6000A70")]
		[Address(RVA = "0xA46878", Offset = "0xA46878", VA = "0xA46878")]
		public bool FreeIndices(in int[] inIndices)
		{
			return default(bool);
		}

		[Token(Token = "0x6000A71")]
		[Address(RVA = "0xA46880", Offset = "0xA46880", VA = "0xA46880")]
		public unsafe bool FreeIndices(in int* inIndicesBuffer, in int inBufferSize)
		{
			return default(bool);
		}

		[Token(Token = "0x6000A72")]
		[Address(RVA = "0xA46888", Offset = "0xA46888", VA = "0xA46888")]
		public bool ConditionalCleanupBuffers()
		{
			return default(bool);
		}

		[Token(Token = "0x6000A73")]
		[Address(RVA = "0xA46890", Offset = "0xA46890", VA = "0xA46890")]
		public bool GetBufferDataAsArrays(out NativeArray<PlantPartRenderBufferData> outRenderBufferData)
		{
			return default(bool);
		}

		[Token(Token = "0x6000A74")]
		[Address(RVA = "0xA468AC", Offset = "0xA468AC", VA = "0xA468AC")]
		public bool GetInstanceData(int claimedBufferIndex, out PlantPartRenderBufferData outData)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x20001DA")]
	public struct PendingInstanceAllocationData
	{
		[Token(Token = "0x4000A71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public unsafe PlantPartRenderData* RenderDataCachePtr;

		[Token(Token = "0x4000A72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public unsafe int* RenderDataIndicesBufferPtr;

		[Token(Token = "0x4000A73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int RenderDataIndicesLength;

		[Token(Token = "0x4000A74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int DataIDToSkip;

		[Token(Token = "0x4000A75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Matrix4x4 ProxyLocalToWorld;

		[Token(Token = "0x4000A76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public float ProxyBaseGrowth;

		[Token(Token = "0x4000A77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public float ProxyWindState;
	}

	[Token(Token = "0x20001DB")]
	private struct PendingMeshBufferJobsData
	{
		[Token(Token = "0x4000A78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public DynamicNativeArray<int> IndicesToFree;

		[Token(Token = "0x4000A79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public DynamicNativeArray<PendingInstanceAllocationData> AllocationsToPerform;

		[Token(Token = "0x6000A75")]
		[Address(RVA = "0xA4694C", Offset = "0xA4694C", VA = "0xA4694C")]
		public void CleanUp()
		{
		}
	}

	[Token(Token = "0x4000A4B")]
	private const int BUFFER_RESIZE_INT_COUNT = 8;

	[Token(Token = "0x4000A4C")]
	private const int BUFFER_RESIZE_CHUNKS = 256;

	[Token(Token = "0x4000A4D")]
	private const Allocator AllocationType = Allocator.Persistent;

	[Token(Token = "0x4000A4E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private DynamicNativeArray<MeshMemoryBuffers> MemoryBufferList;

	[Token(Token = "0x4000A4F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private List<PendingMeshBufferJobsData> PendingBufferJobsData;

	[Token(Token = "0x4000A50")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool BuffersNeedCleanup;

	[Token(Token = "0x4000A51")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	private bool HavePendingBufferJobs;

	[Token(Token = "0x4000A52")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private NativeList<JobHandle> BufferJobHandles;

	[Token(Token = "0x4000A53")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public List<int> ProxiesThatNeedPartGrowthUpdate;

	[Token(Token = "0x6000A48")]
	[Address(RVA = "0xD81EF8", Offset = "0xD81EF8", VA = "0xD81EF8")]
	private unsafe static void* RenderSysMalloc(int inSize, int inAlignment, Allocator inAllocationType = Allocator.Persistent)
	{
		//IL_0002: Expected I, but got O
		return (void*)unchecked((nint)null);
	}

	[Token(Token = "0x6000A49")]
	[Address(RVA = "0xD81F04", Offset = "0xD81F04", VA = "0xD81F04")]
	private unsafe static void RenderSysFree(void* inPointerToFree, Allocator inAllocationType = Allocator.Persistent)
	{
	}

	[Token(Token = "0x6000A4A")]
	[Address(RVA = "0xD7FF24", Offset = "0xD7FF24", VA = "0xD7FF24")]
	public PlantRenderSystemData()
	{
	}

	[Token(Token = "0x6000A4B")]
	[Address(RVA = "0xD81F0C", Offset = "0xD81F0C", VA = "0xD81F0C")]
	private void InitData()
	{
	}

	[Token(Token = "0x6000A4C")]
	[Address(RVA = "0xD80080", Offset = "0xD80080", VA = "0xD80080")]
	public void FreeData()
	{
	}

	[Token(Token = "0x6000A4D")]
	[Address(RVA = "0xD81E68", Offset = "0xD81E68", VA = "0xD81E68")]
	public void ConditionalCleanupData()
	{
	}

	[Token(Token = "0x6000A4E")]
	[Address(RVA = "0xD80C98", Offset = "0xD80C98", VA = "0xD80C98")]
	public void EnsureMeshBufferIndexIsCreated(int inMeshIndex)
	{
	}

	[Token(Token = "0x6000A4F")]
	[Address(RVA = "0xD80768", Offset = "0xD80768", VA = "0xD80768")]
	public unsafe void AllocatePlantRenderData(PlantPartRenderData* inRenderDataCachePtr, in int inRenderDataLength, in PlantMeshBufferIndexMapping[] inIndexMappings, in int inDataIDToSkip, in Matrix4x4 inProxyLocalToWorld, in float inProxyBaseGrowth, in float inProxyWindState)
	{
	}

	[Token(Token = "0x6000A50")]
	[Address(RVA = "0xD82664", Offset = "0xD82664", VA = "0xD82664")]
	public bool SetOrChangeMeshInstanceValues(int inMeshID, ref int claimedBufferIndex, in PlantPartRenderBufferData inPartBufferData, in PlantPartIndexes inPartIndexData)
	{
		return default(bool);
	}

	[Token(Token = "0x6000A51")]
	public bool ChangeInstanceMeshValue<ValueType>(int inMeshID, int claimedBufferIndex, in ValueType newValue, RenderDataOffset inDataOffset) where ValueType : struct
	{
		return default(bool);
	}

	[Token(Token = "0x6000A52")]
	public bool ChangeInstanceMeshValue<ValueType>(int inMeshID, int claimedBufferIndex, in ValueType newValue, int inDataOffset) where ValueType : struct
	{
		return default(bool);
	}

	[Token(Token = "0x6000A53")]
	[Address(RVA = "0xD8281C", Offset = "0xD8281C", VA = "0xD8281C")]
	public bool ChangeInstanceMeshPartIndexData(int inMeshID, int claimedBufferIndex, in PlantPartIndexes inPartIndexData)
	{
		return default(bool);
	}

	[Token(Token = "0x6000A54")]
	[Address(RVA = "0xD8292C", Offset = "0xD8292C", VA = "0xD8292C")]
	public bool GetInstanceMeshReadOnlyData(int inMeshID, int claimedBufferIndex, out PlantPartRenderBufferData outInstanceData)
	{
		return default(bool);
	}

	[Token(Token = "0x6000A55")]
	[Address(RVA = "0xD81544", Offset = "0xD81544", VA = "0xD81544")]
	public bool GetMeshDataAsNativeArrays(int inMeshID, out NativeArray<PlantPartRenderBufferData> outRenderBufferData)
	{
		return default(bool);
	}

	[Token(Token = "0x6000A56")]
	[Address(RVA = "0xD808E4", Offset = "0xD808E4", VA = "0xD808E4")]
	public unsafe void AddPendingInstancesToFree(PlantPartRenderData* inCachedRenderDataBuffer, in PlantMeshBufferIndexMapping[] inIndexMappings)
	{
	}

	[Token(Token = "0x6000A57")]
	[Address(RVA = "0xD81A1C", Offset = "0xD81A1C", VA = "0xD81A1C")]
	public void ProcessPendingBufferDataJobs()
	{
	}

	[Token(Token = "0x6000A58")]
	[Address(RVA = "0xD82AE0", Offset = "0xD82AE0", VA = "0xD82AE0")]
	public void FreeMeshInstance(int inMeshID, int inBufferIndex)
	{
	}
}
[Token(Token = "0x20001DC")]
[AttributeAttribute(Name = "BurstCompileAttribute", RVA = "0x971FB0", Offset = "0x971FB0")]
public struct FreeBufferIndicesJob : IJob
{
	[Token(Token = "0x4000A7A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[NativeDisableUnsafePtrRestriction]
	public unsafe PlantRenderSystemData.MeshMemoryBuffers* MemoryBuffersStoragePtr;

	[Token(Token = "0x4000A7B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public int MeshID;

	[Token(Token = "0x4000A7C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[NativeDisableUnsafePtrRestriction]
	public unsafe int* IndicesToFreeBuffer;

	[Token(Token = "0x4000A7D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int IndicesToFreeBufferCount;

	[Token(Token = "0x6000A76")]
	[Address(RVA = "0xA43EC4", Offset = "0xA43EC4", VA = "0xA43EC4", Slot = "4")]
	public void Execute()
	{
	}
}
[Token(Token = "0x20001DD")]
[AttributeAttribute(Name = "BurstCompileAttribute", RVA = "0x971FE4", Offset = "0x971FE4")]
public struct AllocatePlantRenderDataJob : IJob
{
	[Token(Token = "0x4000A7E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[NativeDisableUnsafePtrRestriction]
	public unsafe PlantRenderSystemData.MeshMemoryBuffers* MemoryBuffersStoragePtr;

	[Token(Token = "0x4000A7F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	[NativeDisableUnsafePtrRestriction]
	public unsafe PlantRenderSystemData.PendingInstanceAllocationData* JobDataPtr;

	[Token(Token = "0x4000A80")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int JobDataCount;

	[Token(Token = "0x6000A77")]
	[Address(RVA = "0xA49478", Offset = "0xA49478", VA = "0xA49478", Slot = "4")]
	public void Execute()
	{
	}
}
[Token(Token = "0x20001DE")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x972018", Offset = "0x972018")]
public class PlantResourceData : ScriptableObject
{
	[Token(Token = "0x4000A81")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float TimeToPickable;

	[Token(Token = "0x4000A82")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float Waterings;

	[Token(Token = "0x4000A83")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int NumberOfPieces;

	[Token(Token = "0x4000A84")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int SeedsPerBag;

	[Token(Token = "0x4000A85")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float FertilizerEfficiency;

	[Token(Token = "0x4000A86")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float FertilizerWaterConsumptionMultiplier;

	[Token(Token = "0x6000A78")]
	[Address(RVA = "0xD83680", Offset = "0xD83680", VA = "0xD83680")]
	public PlantResourceData()
	{
	}
}
[Token(Token = "0x20001DF")]
[ExecuteInEditMode]
public class PlantSpawnLocation : SaveableComponent, IInitializable
{
	[Token(Token = "0x4000A87")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AssetReference PlantToSpawn;

	[Token(Token = "0x4000A88")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9786D8", Offset = "0x9786D8")]
	public float PlantBaseGrowth;

	[Token(Token = "0x4000A89")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public bool Refresh;

	[Token(Token = "0x4000A8A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x35")]
	public bool ShouldRespawn;

	[Token(Token = "0x4000A8B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float RespawnTimer;

	[Token(Token = "0x4000A8C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private PlantPositionProxy SpawnedPlant;

	[Token(Token = "0x4000A8D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool HasSpawnedPlant;

	[Token(Token = "0x4000A8E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
	private bool HavePendingRespawn;

	[Token(Token = "0x4000A8F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4A")]
	private bool HaveActiveTimer;

	[Token(Token = "0x4000A90")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private float TimeToRespawn;

	[Token(Token = "0x4000A91")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool SpawnLocationInitialized;

	[Token(Token = "0x4000A92")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public SaveID PlantSaveID;

	[Token(Token = "0x4000A93")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public float RecreatePlantCheckTimer;

	[Token(Token = "0x4000A94")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private float TimeSinceLastRecreateCheck;

	[Token(Token = "0x6000A79")]
	[Address(RVA = "0xD83DE4", Offset = "0xD83DE4", VA = "0xD83DE4", Slot = "4")]
	public override ComponentState CreateState()
	{
		return null;
	}

	[Token(Token = "0x6000A7A")]
	[Address(RVA = "0xD83F44", Offset = "0xD83F44", VA = "0xD83F44")]
	private void AssignSpawnedPlant(PlantPositionProxy plant)
	{
	}

	[Token(Token = "0x6000A7B")]
	[Address(RVA = "0xD83F74", Offset = "0xD83F74", VA = "0xD83F74")]
	private void InvalidateSpawnedPlantReference()
	{
	}

	[Token(Token = "0x6000A7C")]
	[Address(RVA = "0xD83FA4", Offset = "0xD83FA4", VA = "0xD83FA4")]
	public void DoUpdate()
	{
	}

	[Token(Token = "0x6000A7D")]
	[Address(RVA = "0xD84474", Offset = "0xD84474", VA = "0xD84474")]
	public void ResolveSaveIDToPlantInstance()
	{
	}

	[Token(Token = "0x6000A7E")]
	[Address(RVA = "0xD8467C", Offset = "0xD8467C", VA = "0xD8467C")]
	private void RegisterWithManager()
	{
	}

	[Token(Token = "0x6000A7F")]
	[Address(RVA = "0xD84788", Offset = "0xD84788", VA = "0xD84788")]
	public void OnDestroy()
	{
	}

	[Token(Token = "0x6000A80")]
	[Address(RVA = "0xD8478C", Offset = "0xD8478C", VA = "0xD8478C")]
	public void Cleanup()
	{
	}

	[Token(Token = "0x6000A81")]
	[Address(RVA = "0xD8499C", Offset = "0xD8499C", VA = "0xD8499C", Slot = "5")]
	public void Initialize()
	{
	}

	[Token(Token = "0x6000A82")]
	[Address(RVA = "0xD843A8", Offset = "0xD843A8", VA = "0xD843A8")]
	public void SpawnPlant(bool editor = false)
	{
	}

	[Token(Token = "0x6000A83")]
	[Address(RVA = "0xD84ABC", Offset = "0xD84ABC", VA = "0xD84ABC")]
	private void SetFlagsRecursive(GameObject root, HideFlags flags)
	{
	}

	[Token(Token = "0x6000A84")]
	[Address(RVA = "0xD84B70", Offset = "0xD84B70", VA = "0xD84B70")]
	private void OnProxyPlantSpawned(SpawnOperationCallbackData data)
	{
	}

	[Token(Token = "0x6000A85")]
	[Address(RVA = "0xD84F0C", Offset = "0xD84F0C", VA = "0xD84F0C")]
	public void OnSpawnedProxyGrabbed(Grabbable grabbable)
	{
	}

	[Token(Token = "0x6000A86")]
	[Address(RVA = "0xD85090", Offset = "0xD85090", VA = "0xD85090")]
	public void RespawnPlant()
	{
	}

	[Token(Token = "0x6000A87")]
	[Address(RVA = "0xD851A8", Offset = "0xD851A8", VA = "0xD851A8")]
	private void SetPlantGrowth(float newGrowth)
	{
	}

	[Token(Token = "0x6000A88")]
	[Address(RVA = "0xD852B0", Offset = "0xD852B0", VA = "0xD852B0")]
	public PlantSpawnLocation()
	{
	}
}
[Serializable]
[Token(Token = "0x20001E0")]
public class PlantSpawnLocationComponentState : ComponentState
{
	[Token(Token = "0x4000A95")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float PlantBaseGrowth;

	[Token(Token = "0x4000A96")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public bool ShouldRespawn;

	[Token(Token = "0x4000A97")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float RespawnTimer;

	[Token(Token = "0x4000A98")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool HavePendingRespawn;

	[Token(Token = "0x4000A99")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
	public bool HaveActiveTimer;

	[Token(Token = "0x4000A9A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float TimeToRespawn;

	[Token(Token = "0x4000A9B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public SaveID PlantSaveID;

	[Token(Token = "0x6000A89")]
	[Address(RVA = "0xD83EA4", Offset = "0xD83EA4", VA = "0xD83EA4")]
	public PlantSpawnLocationComponentState(float inPlantBaseGrowth, bool inShouldRespawn, float inRespawnTimer, bool inHavePendingRespawn, bool inHaveActiveTimer, float inTimeToRespawn, SaveID inPlantSaveID)
	{
	}
}
[Token(Token = "0x20001E1")]
[ExecuteInEditMode]
public class PlantSpawnLocationManager
{
	[Token(Token = "0x4000A9C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private List<PlantSpawnLocation> SpawnLocationList;

	[Token(Token = "0x4000A9D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private PlantProxySystem MainProxySystem;

	[Token(Token = "0x4000A9E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Dictionary<SaveID, PlantSpawnLocation> SpawnLocationSaveIDMappings;

	[Token(Token = "0x4000A9F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Dictionary<SaveID, PlantPositionProxy> PlantProxySaveIDMappings;

	[Token(Token = "0x6000A8A")]
	[Address(RVA = "0xD7DED8", Offset = "0xD7DED8", VA = "0xD7DED8")]
	public PlantSpawnLocationManager(PlantProxySystem proxySystem)
	{
	}

	[Token(Token = "0x6000A8B")]
	[Address(RVA = "0xD852D8", Offset = "0xD852D8", VA = "0xD852D8", Slot = "1")]
	~PlantSpawnLocationManager()
	{
	}

	[Token(Token = "0x6000A8C")]
	[Address(RVA = "0xD7E10C", Offset = "0xD7E10C", VA = "0xD7E10C")]
	public void Cleanup()
	{
	}

	[Token(Token = "0x6000A8D")]
	[Address(RVA = "0xD7E4FC", Offset = "0xD7E4FC", VA = "0xD7E4FC")]
	public void Update()
	{
	}

	[Token(Token = "0x6000A8E")]
	[Address(RVA = "0xD8471C", Offset = "0xD8471C", VA = "0xD8471C")]
	public void RegisterSpawnLocation(PlantSpawnLocation inSpawnLocation)
	{
	}

	[Token(Token = "0x6000A8F")]
	[Address(RVA = "0xD848C0", Offset = "0xD848C0", VA = "0xD848C0")]
	public void DeregisterSpawnLocation(PlantSpawnLocation inSpawnLocation)
	{
	}

	[Token(Token = "0x6000A90")]
	[Address(RVA = "0xD84E48", Offset = "0xD84E48", VA = "0xD84E48")]
	public void AddSpawnLocationSaveIDMapping(PlantSpawnLocation inSpawnLocation)
	{
	}

	[Token(Token = "0x6000A91")]
	[Address(RVA = "0xD85340", Offset = "0xD85340", VA = "0xD85340")]
	public void BroadcastSaveIDDestroyed(PlantPositionProxy inProxy)
	{
	}

	[Token(Token = "0x6000A92")]
	[Address(RVA = "0xD85474", Offset = "0xD85474", VA = "0xD85474")]
	public void RegisterPositionProxySaveID(PlantPositionProxy inProxy)
	{
	}
}
[Token(Token = "0x20001E2")]
public class PlantSubPartProxy : PlantSystemIndexable, IInitializable
{
	[Token(Token = "0x4000AA0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public bool NeedsRenderDataAllocationUpdate;

	[Token(Token = "0x4000AA1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	public Matrix4x4 SubPartOffsetMatrix;

	[Token(Token = "0x4000AA2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private AssetReference ParentPlantPrefabData;

	[Token(Token = "0x4000AA3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private int SubPartIndex;

	[Token(Token = "0x4000AA4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
	private bool DetachedFromParent;

	[Token(Token = "0x4000AA5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xED")]
	public bool ShouldStartActive;

	[Token(Token = "0x4000AA6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private PlantPositionProxy PlantParent;

	[Token(Token = "0x6000A93")]
	[Address(RVA = "0xD85534", Offset = "0xD85534", VA = "0xD85534")]
	public bool IsDetachedFromParent()
	{
		return default(bool);
	}

	[Token(Token = "0x6000A94")]
	[Address(RVA = "0xD8553C", Offset = "0xD8553C", VA = "0xD8553C")]
	public PlantSubPartProxy()
	{
	}

	[Token(Token = "0x6000A95")]
	[Address(RVA = "0xD85678", Offset = "0xD85678", VA = "0xD85678", Slot = "6")]
	public override bool CanEverGrow()
	{
		return default(bool);
	}

	[Token(Token = "0x6000A96")]
	[Address(RVA = "0xD85680", Offset = "0xD85680", VA = "0xD85680", Slot = "8")]
	public override bool HaveValidData()
	{
		return default(bool);
	}

	[Token(Token = "0x6000A97")]
	[Address(RVA = "0xD856EC", Offset = "0xD856EC", VA = "0xD856EC", Slot = "9")]
	public override void GatherRenderData()
	{
	}

	[Token(Token = "0x6000A98")]
	[Address(RVA = "0xD856F0", Offset = "0xD856F0", VA = "0xD856F0", Slot = "10")]
	protected override void GenerateCachedRenderData()
	{
	}

	[Token(Token = "0x6000A99")]
	[Address(RVA = "0xD862F0", Offset = "0xD862F0", VA = "0xD862F0", Slot = "4")]
	public override ComponentState CreateState()
	{
		return null;
	}

	[Token(Token = "0x6000A9A")]
	[Address(RVA = "0xD8665C", Offset = "0xD8665C", VA = "0xD8665C")]
	public PlantPositionProxy GetPlantParent()
	{
		return null;
	}

	[Token(Token = "0x6000A9B")]
	[Address(RVA = "0xD86714", Offset = "0xD86714", VA = "0xD86714", Slot = "20")]
	public void Initialize()
	{
	}

	[Token(Token = "0x6000A9C")]
	[Address(RVA = "0xD86CF0", Offset = "0xD86CF0", VA = "0xD86CF0", Slot = "14")]
	public override void OnProxyGrabbed(Grabbable grabbable)
	{
	}

	[Token(Token = "0x6000A9D")]
	[Address(RVA = "0xD86DC8", Offset = "0xD86DC8", VA = "0xD86DC8", Slot = "15")]
	public override void OnProxyDropped(Grabbable grabbable)
	{
	}

	[Token(Token = "0x6000A9E")]
	[Address(RVA = "0xD86DCC", Offset = "0xD86DCC", VA = "0xD86DCC", Slot = "11")]
	public override void SetRenderingActive(bool newRenderingActive)
	{
	}

	[Token(Token = "0x6000A9F")]
	[Address(RVA = "0xD86E20", Offset = "0xD86E20", VA = "0xD86E20", Slot = "12")]
	public override void PlantUpdate()
	{
	}

	[Token(Token = "0x6000AA0")]
	[Address(RVA = "0xD86E24", Offset = "0xD86E24", VA = "0xD86E24", Slot = "13")]
	public override void UpdateRenderTransforms()
	{
	}

	[Token(Token = "0x6000AA1")]
	[Address(RVA = "0xD87098", Offset = "0xD87098", VA = "0xD87098")]
	public void InitProxyData(AssetReference plantPrefabData, int subPlantIndex)
	{
	}

	[Token(Token = "0x6000AA2")]
	[Address(RVA = "0xD870C8", Offset = "0xD870C8", VA = "0xD870C8", Slot = "19")]
	public override void InitializeComponentData(in PlantPrefabData dataForInit)
	{
	}
}
[Serializable]
[Token(Token = "0x20001E3")]
public class PlantSubPartProxyState : ComponentState
{
	[Token(Token = "0x4000AA7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public AssetReferenceSerializable PlantPrefabData;

	[Token(Token = "0x4000AA8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool DetachedFromParentPlant;

	[Token(Token = "0x4000AA9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int SubPartIndex;

	[Token(Token = "0x4000AAA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int PlantPartCount;

	[Token(Token = "0x4000AAB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float CurrentGrowth;

	[Token(Token = "0x4000AAC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool HaveGeneratedScale;

	[Token(Token = "0x4000AAD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public Vector3 GeneratedScale;

	[Token(Token = "0x4000AAE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool HaveGeneratedRotation;

	[Token(Token = "0x4000AAF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float GeneratedRotation;

	[Token(Token = "0x4000AB0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float PlantWindState;

	[Token(Token = "0x4000AB1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public bool PlantActive;

	[Token(Token = "0x4000AB2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x45")]
	public byte PlantUpdateState;

	[Token(Token = "0x6000AA3")]
	[Address(RVA = "0xD86508", Offset = "0xD86508", VA = "0xD86508")]
	public PlantSubPartProxyState(AssetReference linkedData, bool detachedFromParent, int index, int partCount, float growth, bool haveGeneratedScale, Vector3 generatedScale, bool haveGeneratedRotation, float generatedRotation, float windState, bool inPlantActive, byte inPlantUpdateState)
	{
	}
}
[Token(Token = "0x20001E4")]
public struct PlantPartRenderData
{
	[Token(Token = "0x4000AB3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Matrix4x4 RenderTransform;

	[Token(Token = "0x4000AB4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Vector4 PlantGrowthScale;

	[Token(Token = "0x4000AB5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float GreyscaleIntensity;

	[Token(Token = "0x4000AB6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public Color32 PlantColorDark;

	[Token(Token = "0x4000AB7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Color32 PlantColorMid;

	[Token(Token = "0x4000AB8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public Color32 PlantColorBright;

	[Token(Token = "0x4000AB9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Vector3 PlantWorldLocation;

	[Token(Token = "0x4000ABA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public Vector2 PlantWindData;

	[Token(Token = "0x4000ABB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public float PlantHighlight;

	[Token(Token = "0x4000ABC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public int PlantProxyIndex;

	[Token(Token = "0x4000ABD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public int PlantPartIndex;

	[Token(Token = "0x4000ABE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public int RenderBufferIndex;

	[Token(Token = "0x4000ABF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public int MeshID;

	[Token(Token = "0x4000AC0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public int SubPlantIndex;
}
[Token(Token = "0x20001E5")]
public struct PlantMeshBufferIndexMapping
{
	[Token(Token = "0x4000AC1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public int MeshID;

	[Token(Token = "0x4000AC2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public NativeArray<int> CachedDataIndices;
}
[Token(Token = "0x20001E6")]
public abstract class PlantSystemIndexable : SaveableComponent, ICompostable
{
	[Token(Token = "0x4000AC3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int ProxyID;

	[Token(Token = "0x4000AC4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public int ProxyPartCount;

	[Token(Token = "0x4000AC5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool ShouldUpdateRenderData;

	[Token(Token = "0x4000AC6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float BaseGrowth;

	[Token(Token = "0x4000AC7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool ProxyRenderingActive;

	[Token(Token = "0x4000AC8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
	public bool ProxyActive;

	[Token(Token = "0x4000AC9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[HideInInspector]
	public PlantPrefabData LinkedData;

	[Token(Token = "0x4000ACA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x978700", Offset = "0x978700")]
	private Stashable <ProxyStashable>k__BackingField;

	[Token(Token = "0x4000ACB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public PlantMeshBufferIndexMapping[] MeshBufferIndexMappings;

	[Token(Token = "0x4000ACC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public bool DirtPileActive;

	[Token(Token = "0x4000ACD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public int DirtPileRenderDataID;

	[Token(Token = "0x4000ACE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public bool HaveGeneratedScale;

	[Token(Token = "0x4000ACF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public Vector3 GeneratedScale;

	[Token(Token = "0x4000AD0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public bool HaveGeneratedRotation;

	[Token(Token = "0x4000AD1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public float GeneratedYaw;

	[Token(Token = "0x4000AD2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public float PlantHeight;

	[Token(Token = "0x4000AD3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public float PlantWindState;

	[Token(Token = "0x4000AD4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public float PlantHighlight;

	[Token(Token = "0x4000AD5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public NativeArray<PlantPartRenderData> CachedRenderData;

	[Token(Token = "0x1700011C")]
	public Stashable ProxyStashable
	{
		[Token(Token = "0x6000AA4")]
		[Address(RVA = "0xD875B4", Offset = "0xD875B4", VA = "0xD875B4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x989D50", Offset = "0x989D50")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000AA5")]
		[Address(RVA = "0xD875BC", Offset = "0xD875BC", VA = "0xD875BC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x989D60", Offset = "0x989D60")]
		protected set
		{
		}
	}

	[Token(Token = "0x6000AA6")]
	[Address(RVA = "0xD875C4", Offset = "0xD875C4", VA = "0xD875C4", Slot = "6")]
	public virtual bool CanEverGrow()
	{
		return default(bool);
	}

	[Token(Token = "0x6000AA7")]
	[Address(RVA = "0xD875CC", Offset = "0xD875CC", VA = "0xD875CC", Slot = "7")]
	public virtual bool HaveValidGrowthPosition()
	{
		return default(bool);
	}

	[Token(Token = "0x6000AA8")]
	[Address(RVA = "0xD875D4", Offset = "0xD875D4", VA = "0xD875D4", Slot = "8")]
	public virtual bool HaveValidData()
	{
		return default(bool);
	}

	[Token(Token = "0x6000AA9")]
	public abstract void GatherRenderData();

	[Token(Token = "0x6000AAA")]
	protected abstract void GenerateCachedRenderData();

	[Token(Token = "0x6000AAB")]
	public abstract void SetRenderingActive(bool newRenderingActive);

	[Token(Token = "0x6000AAC")]
	public abstract void PlantUpdate();

	[Token(Token = "0x6000AAD")]
	public abstract void UpdateRenderTransforms();

	[Token(Token = "0x6000AAE")]
	public abstract void OnProxyGrabbed(Grabbable grabbable);

	[Token(Token = "0x6000AAF")]
	public abstract void OnProxyDropped(Grabbable grabbable);

	[Token(Token = "0x6000AB0")]
	[Address(RVA = "0xD875DC", Offset = "0xD875DC", VA = "0xD875DC", Slot = "16")]
	protected virtual void OnDestroy()
	{
	}

	[Token(Token = "0x6000AB1")]
	[Address(RVA = "0xD87758", Offset = "0xD87758", VA = "0xD87758", Slot = "17")]
	protected virtual void OnEnable()
	{
	}

	[Token(Token = "0x6000AB2")]
	[Address(RVA = "0xD87804", Offset = "0xD87804", VA = "0xD87804", Slot = "18")]
	protected virtual void OnDisable()
	{
	}

	[Token(Token = "0x6000AB3")]
	[Address(RVA = "0xD869C4", Offset = "0xD869C4", VA = "0xD869C4")]
	public void UpdateRenderDataBufferPtr()
	{
	}

	[Token(Token = "0x6000AB4")]
	[Address(RVA = "0xD86AB4", Offset = "0xD86AB4", VA = "0xD86AB4")]
	public void UpdateRenderDataPartIndexes()
	{
	}

	[Token(Token = "0x6000AB5")]
	public void SetProxyInstancesRenderData<ValueType>(ValueType inValue, PlantRenderSystemData.RenderDataOffset dataOffset) where ValueType : struct
	{
	}

	[Token(Token = "0x6000AB6")]
	public abstract void InitializeComponentData(in PlantPrefabData dataForInit);

	[Token(Token = "0x6000AB7")]
	[Address(RVA = "0xD878B0", Offset = "0xD878B0", VA = "0xD878B0", Slot = "5")]
	public int GetCompostContentValue()
	{
		return default(int);
	}

	[Token(Token = "0x6000AB8")]
	[Address(RVA = "0xD878B8", Offset = "0xD878B8", VA = "0xD878B8")]
	public void SetHighlight(float newHighlight)
	{
	}

	[Token(Token = "0x6000AB9")]
	[Address(RVA = "0xD855E4", Offset = "0xD855E4", VA = "0xD855E4")]
	protected PlantSystemIndexable()
	{
	}
}
[Token(Token = "0x20001E7")]
public class PlantUpdateSystem : PlantSystemBase
{
	[Token(Token = "0x20001E8")]
	public enum PlantUpdateType
	{
		[Token(Token = "0x4000AD8")]
		Transform = 1,
		[Token(Token = "0x4000AD9")]
		Update = 2,
		[Token(Token = "0x4000ADA")]
		All = 65535
	}

	[Token(Token = "0x20001E9")]
	private struct IndexedProxyUpdateData
	{
		[Token(Token = "0x4000ADB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int ProxyID;

		[Token(Token = "0x4000ADC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public bool IsValidData;

		[Token(Token = "0x4000ADD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5")]
		public bool ShouldDisableAfterUpdate;

		[Token(Token = "0x4000ADE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6")]
		public byte UpdateMask;
	}

	[Token(Token = "0x4000AD6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private DynamicNativeArray<IndexedProxyUpdateData> UpdateDataList;

	[Token(Token = "0x6000ABA")]
	[Address(RVA = "0xD7DE28", Offset = "0xD7DE28", VA = "0xD7DE28")]
	public PlantUpdateSystem(PlantProxySystem inProxySystem)
	{
	}

	[Token(Token = "0x6000ABB")]
	[Address(RVA = "0xD87B38", Offset = "0xD87B38", VA = "0xD87B38")]
	private int GetUpdateDataListForProxyID(int inProxyID)
	{
		return default(int);
	}

	[Token(Token = "0x6000ABC")]
	[Address(RVA = "0xD86B9C", Offset = "0xD86B9C", VA = "0xD86B9C")]
	public void SetProxyShouldReceiveUpdates(bool inShouldReceiveUpdates, int inProxyID)
	{
	}

	[Token(Token = "0x6000ABD")]
	[Address(RVA = "0xD87BD0", Offset = "0xD87BD0", VA = "0xD87BD0")]
	public void SetProxyShouldDisableAfterUpdate(int inProxyID, bool ShouldDisableAfterUpdate = true)
	{
	}

	[Token(Token = "0x6000ABE")]
	[Address(RVA = "0xD86C64", Offset = "0xD86C64", VA = "0xD86C64")]
	public void SetProxyUpdateMask(int inProxyID, PlantUpdateType inUpdateMask)
	{
	}

	[Token(Token = "0x6000ABF")]
	[Address(RVA = "0xD86470", Offset = "0xD86470", VA = "0xD86470")]
	public bool GetProxyIsUpdating(in int inProxyID, out byte outUpdateMask)
	{
		return default(bool);
	}

	[Token(Token = "0x6000AC0")]
	[Address(RVA = "0xD87C60", Offset = "0xD87C60", VA = "0xD87C60", Slot = "4")]
	public override void Update()
	{
	}

	[Token(Token = "0x6000AC1")]
	[Address(RVA = "0xD87DDC", Offset = "0xD87DDC", VA = "0xD87DDC", Slot = "5")]
	public override void Cleanup()
	{
	}

	[Token(Token = "0x6000AC2")]
	[Address(RVA = "0xD87C64", Offset = "0xD87C64", VA = "0xD87C64")]
	private void RunPlantUpdateFunctions()
	{
	}

	[Token(Token = "0x6000AC3")]
	[Address(RVA = "0xD87E4C", Offset = "0xD87E4C", VA = "0xD87E4C")]
	public void UpdatePlantTransform(PlantSystemIndexable inIndexable)
	{
	}
}
[Token(Token = "0x20001EA")]
public class FlowerHead_AttachPoint : MonoBehaviour
{
	[Token(Token = "0x6000AC4")]
	[Address(RVA = "0xCA558C", Offset = "0xCA558C", VA = "0xCA558C")]
	public FlowerHead_AttachPoint()
	{
	}
}
[Token(Token = "0x20001EB")]
public class PlantTemplate : MonoBehaviour
{
	[Token(Token = "0x4000ADF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string PlantBodyItemDataName;

	[Token(Token = "0x4000AE0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string PlantHeadItemDataName;

	[Token(Token = "0x6000AC5")]
	[Address(RVA = "0xD87924", Offset = "0xD87924", VA = "0xD87924")]
	public PlantTemplate()
	{
	}
}
[Token(Token = "0x20001EC")]
public abstract class PlantTemplatePart_Base : MonoBehaviour
{
	[Token(Token = "0x4000AE1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool UseOverrideGrowthSettings;

	[Token(Token = "0x4000AE2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool HaveGeneratedBaseGrowth;

	[Token(Token = "0x4000AE3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float GrowthStart;

	[Token(Token = "0x4000AE4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float GrowthEnd;

	[Token(Token = "0x4000AE5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float OverrideGrowthStart;

	[Token(Token = "0x4000AE6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float OverrideGrowthEnd;

	[Token(Token = "0x4000AE7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public bool UseGrowthCurve;

	[Token(Token = "0x4000AE8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AnimationCurve GrowthCurve;

	[Token(Token = "0x4000AE9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool UseGrowthOffset;

	[Token(Token = "0x4000AEA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
	public bool HaveXGrowthOffset;

	[Token(Token = "0x4000AEB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3A")]
	public bool HaveYGrowthOffset;

	[Token(Token = "0x4000AEC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3B")]
	public bool HaveZGrowthOffset;

	[Token(Token = "0x4000AED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public AnimationCurve XGrowthOffsetCurve;

	[Token(Token = "0x4000AEE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public AnimationCurve YGrowthOffsetCurve;

	[Token(Token = "0x4000AEF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public AnimationCurve ZGrowthOffsetCurve;

	[Token(Token = "0x6000AC6")]
	[Address(RVA = "0xD8792C", Offset = "0xD8792C", VA = "0xD8792C")]
	protected PlantTemplatePart_Base()
	{
	}
}
[Token(Token = "0x20001ED")]
public class PlantTemplatePart_Dirt : PlantTemplatePart_Base
{
	[Token(Token = "0x4000AF0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public PlantColors DirtColor_Watered;

	[Token(Token = "0x4000AF1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public PlantColors DirtColor_Dry;

	[Token(Token = "0x6000AC7")]
	[Address(RVA = "0xD87940", Offset = "0xD87940", VA = "0xD87940")]
	public PlantTemplatePart_Dirt()
	{
	}
}
[Token(Token = "0x20001EE")]
public class PlantTemplatePart_Head : PlantTemplatePart_Base
{
	[Token(Token = "0x6000AC8")]
	[Address(RVA = "0xD87954", Offset = "0xD87954", VA = "0xD87954")]
	public PlantTemplatePart_Head()
	{
	}
}
[Token(Token = "0x20001EF")]
public class PlantTemplatePart_HeadPart : PlantTemplatePart_Base
{
	[Token(Token = "0x6000AC9")]
	[Address(RVA = "0xD87968", Offset = "0xD87968", VA = "0xD87968")]
	public PlantTemplatePart_HeadPart()
	{
	}
}
[Token(Token = "0x20001F0")]
public class PlantTemplatePart_Leaf : PlantTemplatePart_Base
{
	[Token(Token = "0x6000ACA")]
	[Address(RVA = "0xD8797C", Offset = "0xD8797C", VA = "0xD8797C")]
	public PlantTemplatePart_Leaf()
	{
	}
}
[Token(Token = "0x20001F1")]
public class PlantTemplatePart_Root : PlantTemplatePart_Base
{
	[Token(Token = "0x6000ACB")]
	[Address(RVA = "0xD87990", Offset = "0xD87990", VA = "0xD87990")]
	public PlantTemplatePart_Root()
	{
	}
}
[Token(Token = "0x20001F2")]
public class PlantTemplatePart_Stem : PlantTemplatePart_Base
{
	[Token(Token = "0x6000ACC")]
	[Address(RVA = "0xD879A4", Offset = "0xD879A4", VA = "0xD879A4")]
	public PlantTemplatePart_Stem()
	{
	}
}
[Token(Token = "0x20001F3")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x9720A0", Offset = "0x9720A0")]
public class PlantType : ScriptableObject
{
	[Token(Token = "0x4000AF2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Sprite sprite;

	[Token(Token = "0x4000AF3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject seedMeshPrefab;

	[Token(Token = "0x4000AF4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool requiresTrellis;

	[Token(Token = "0x4000AF5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public CraftingSystem.ResourceTypeEnum resourceType;

	[Token(Token = "0x6000ACD")]
	[Address(RVA = "0xD879B8", Offset = "0xD879B8", VA = "0xD879B8")]
	public PlantType()
	{
	}
}
[Token(Token = "0x20001F4")]
public class PlantTypeDictionary : MonoBehaviour
{
	[Token(Token = "0x4000AF6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static PlantTypeDictionary Instance;

	[Token(Token = "0x4000AF7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private List<PlantType> plantTypes;

	[Token(Token = "0x4000AF8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Dictionary<CraftingSystem.ResourceType, PlantType> lookupTable;

	[Token(Token = "0x6000ACE")]
	[Address(RVA = "0xD87A30", Offset = "0xD87A30", VA = "0xD87A30")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000ACF")]
	[Address(RVA = "0xD87A88", Offset = "0xD87A88", VA = "0xD87A88")]
	public PlantTypeDictionary()
	{
	}
}
[Serializable]
[Token(Token = "0x20001F5")]
public class Seed : SaveableComponent, ITillable, IInitializable
{
	[Token(Token = "0x20001F6")]
	public enum SeedStatus
	{
		[Token(Token = "0x4000B17")]
		Dormant,
		[Token(Token = "0x4000B18")]
		LyingOnGround,
		[Token(Token = "0x4000B19")]
		Planted,
		[Token(Token = "0x4000B1A")]
		Germinating,
		[Token(Token = "0x4000B1B")]
		SpawnedPlant,
		[Token(Token = "0x4000B1C")]
		BeingRemoved
	}

	[Token(Token = "0x4000AF9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private PlantType plantType;

	[Token(Token = "0x4000AFA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private AssetReference plantTypeRef;

	[Token(Token = "0x4000AFB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool requiresTrellis;

	[Token(Token = "0x4000AFC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private CraftingSystem.ResourceType resourceType;

	[Token(Token = "0x4000AFD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private GameObject moodBubblePrefab;

	[Token(Token = "0x4000AFE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public AssetReference PlantData;

	[Token(Token = "0x4000AFF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private GameObject moodBubble;

	[Token(Token = "0x4000B00")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Grabbable grabbable;

	[Token(Token = "0x4000B01")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private float sproutingDelay;

	[Token(Token = "0x4000B02")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private float maxTimeAlive;

	[Token(Token = "0x4000B03")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private float lifeTimer;

	[Token(Token = "0x4000B04")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public SeedStatus CurrentStatus;

	[Token(Token = "0x4000B05")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x978730", Offset = "0x978730")]
	[SerializeField]
	private NeatAudioCue m_sproutedSound;

	[Token(Token = "0x4000B06")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private NeatAudioPlayer m_audioPlayer;

	[Token(Token = "0x4000B07")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private float statusTimer;

	[Token(Token = "0x4000B08")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private SoilSurface PlantedSoilSurface;

	[Token(Token = "0x4000B09")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private SaveID PlantedSurfaceSaveID;

	[Token(Token = "0x4000B0A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private float localWaterLevel;

	[Token(Token = "0x4000B0B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private Rigidbody SeedRigidBody;

	[Token(Token = "0x4000B0C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private BirdInterestPoint birdInterestPoint;

	[Token(Token = "0x4000B0D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private float colliderSize;

	[Token(Token = "0x4000B0E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private Vector3 trellisPlantPosition;

	[Token(Token = "0x4000B0F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private bool initialized;

	[Token(Token = "0x4000B10")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private ISoilManipulator m_soilManipulator;

	[Token(Token = "0x4000B11")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x97877C", Offset = "0x97877C")]
	private bool <IsSoilManipulator>k__BackingField;

	[Token(Token = "0x4000B12")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
	private Vector3 PendingPlantPosition;

	[Token(Token = "0x4000B13")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private SoilValueCheckHelper SoilnessValueCheck;

	[Token(Token = "0x4000B14")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private SoilValueCheckHelper WaterValueCheck;

	[Token(Token = "0x4000B15")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private AsyncOperationHandle<PlantType> PlantTypeAsyncHandle;

	[Token(Token = "0x1700011D")]
	public bool IsSoilManipulator
	{
		[Token(Token = "0x6000AD0")]
		[Address(RVA = "0xCC23D0", Offset = "0xCC23D0", VA = "0xCC23D0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x989D70", Offset = "0x989D70")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000AD1")]
		[Address(RVA = "0xCC23D8", Offset = "0xCC23D8", VA = "0xCC23D8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x989D80", Offset = "0x989D80")]
		private set
		{
		}
	}

	[Token(Token = "0x6000AD2")]
	[Address(RVA = "0xCC23E4", Offset = "0xCC23E4", VA = "0xCC23E4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000AD3")]
	[Address(RVA = "0xCC2810", Offset = "0xCC2810", VA = "0xCC2810")]
	private bool HavePendingAsyncOperations()
	{
		return default(bool);
	}

	[Token(Token = "0x6000AD4")]
	[Address(RVA = "0xCC2CA0", Offset = "0xCC2CA0", VA = "0xCC2CA0")]
	public void SetSoilManipulation(ISoilManipulator manipulator)
	{
	}

	[Token(Token = "0x6000AD5")]
	[Address(RVA = "0xCC2890", Offset = "0xCC2890", VA = "0xCC2890")]
	private bool IsAtEndOfLife()
	{
		return default(bool);
	}

	[Token(Token = "0x6000AD6")]
	[Address(RVA = "0xCC2DB4", Offset = "0xCC2DB4", VA = "0xCC2DB4")]
	private void OnStopMoving()
	{
	}

	[Token(Token = "0x6000AD7")]
	[Address(RVA = "0xCC2F5C", Offset = "0xCC2F5C", VA = "0xCC2F5C")]
	private bool TryFetchCurrentSoilSurface()
	{
		return default(bool);
	}

	[Token(Token = "0x6000AD8")]
	[Address(RVA = "0xCC28E4", Offset = "0xCC28E4", VA = "0xCC28E4")]
	private bool TryToPlantSelf()
	{
		return default(bool);
	}

	[Token(Token = "0x6000AD9")]
	[Address(RVA = "0xCC32E4", Offset = "0xCC32E4", VA = "0xCC32E4")]
	private void PlantSelf(Vector3 plantPosition)
	{
	}

	[Token(Token = "0x6000ADA")]
	[Address(RVA = "0xCC2B88", Offset = "0xCC2B88", VA = "0xCC2B88")]
	private void OnPlanted(Vector3 pos)
	{
	}

	[Token(Token = "0x6000ADB")]
	[Address(RVA = "0xCC3404", Offset = "0xCC3404", VA = "0xCC3404")]
	private void TryManipulateSoil(Vector3 pos)
	{
	}

	[Token(Token = "0x6000ADC")]
	[Address(RVA = "0xCC34DC", Offset = "0xCC34DC", VA = "0xCC34DC")]
	private void TrySprout(Vector3 plantPosition)
	{
	}

	[Token(Token = "0x6000ADD")]
	[Address(RVA = "0xCC2BCC", Offset = "0xCC2BCC", VA = "0xCC2BCC")]
	public void SpawnPlant()
	{
	}

	[Token(Token = "0x6000ADE")]
	[Address(RVA = "0xCC3768", Offset = "0xCC3768", VA = "0xCC3768")]
	private void OnProxyPlantSpawned(SpawnOperationCallbackData data)
	{
	}

	[Token(Token = "0x6000ADF")]
	[Address(RVA = "0xCC38B8", Offset = "0xCC38B8", VA = "0xCC38B8")]
	private void OnSeedSprouted()
	{
	}

	[Token(Token = "0x6000AE0")]
	[Address(RVA = "0xCC3970", Offset = "0xCC3970", VA = "0xCC3970")]
	private void OnPickedUp()
	{
	}

	[Token(Token = "0x6000AE1")]
	[Address(RVA = "0xCC2CB0", Offset = "0xCC2CB0", VA = "0xCC2CB0")]
	private void RemoveSeed()
	{
	}

	[Token(Token = "0x6000AE2")]
	[Address(RVA = "0xCC3AB8", Offset = "0xCC3AB8", VA = "0xCC3AB8")]
	public bool RequiresTrellis()
	{
		return default(bool);
	}

	[Token(Token = "0x6000AE3")]
	[Address(RVA = "0xCC3AC0", Offset = "0xCC3AC0", VA = "0xCC3AC0", Slot = "5")]
	public void Till()
	{
	}

	[Token(Token = "0x6000AE4")]
	[Address(RVA = "0xCC3BA4", Offset = "0xCC3BA4", VA = "0xCC3BA4", Slot = "4")]
	public override ComponentState CreateState()
	{
		return null;
	}

	[Token(Token = "0x6000AE5")]
	[Address(RVA = "0xCC3D14", Offset = "0xCC3D14", VA = "0xCC3D14", Slot = "6")]
	public void Initialize()
	{
	}

	[Token(Token = "0x6000AE6")]
	[Address(RVA = "0xCC4584", Offset = "0xCC4584", VA = "0xCC4584")]
	private void OnPlantTypeLoaded(AsyncOperationHandle<PlantType> inLoadedHandle)
	{
	}

	[Token(Token = "0x6000AE7")]
	[Address(RVA = "0xCC40A4", Offset = "0xCC40A4", VA = "0xCC40A4")]
	private void InitializePlantTypeData()
	{
	}

	[Token(Token = "0x6000AE8")]
	[Address(RVA = "0xCC45FC", Offset = "0xCC45FC", VA = "0xCC45FC")]
	public void SetPlantType(PlantType type, AssetReference plantRef)
	{
	}

	[Token(Token = "0x6000AE9")]
	[Address(RVA = "0xCC46C8", Offset = "0xCC46C8", VA = "0xCC46C8")]
	public Seed()
	{
	}
}
[Serializable]
[Token(Token = "0x20001F7")]
public class SeedState : ComponentState
{
	[Token(Token = "0x4000B1D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public AssetReferenceSerializable PlantTypeAsset;

	[Token(Token = "0x4000B1E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AssetReferenceSerializable PlantDataAsset;

	[Token(Token = "0x4000B1F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Seed.SeedStatus SeedStatus;

	[Token(Token = "0x4000B20")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float StatusTimer;

	[Token(Token = "0x4000B21")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float LifeTimer;

	[Token(Token = "0x4000B22")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public SaveID SoilSurfaceSaveID;

	[Token(Token = "0x6000AEA")]
	[Address(RVA = "0xCC3C4C", Offset = "0xCC3C4C", VA = "0xCC3C4C")]
	public SeedState(AssetReference inPlantTypeAsset, Seed.SeedStatus inSeedStatus, float inStatusTime, float inLifeTimer, SaveID inSoilSurfaceSaveID, AssetReference inPlantDataAsset)
	{
	}
}
[Token(Token = "0x20001F8")]
public struct BilinearSampleHelper
{
	[Token(Token = "0x4000B23")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public int BufferIndex;

	[Token(Token = "0x4000B24")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public float DataWeight;

	[Token(Token = "0x4000B25")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public unsafe float* DataValuePtr;

	[Token(Token = "0x6000AEB")]
	[Address(RVA = "0xF64E80", Offset = "0xF64E80", VA = "0xF64E80")]
	public unsafe static bool ModifyBilinearSample(in SurfaceData.TexelData* inDataBufferPtr, in SoilDataType inDataType, in float inModificationAmount, in Vector2 inSampleLocation, in Vector2Int inDataExtents)
	{
		return default(bool);
	}

	[Token(Token = "0x6000AEC")]
	[Address(RVA = "0xF64F24", Offset = "0xF64F24", VA = "0xF64F24")]
	public unsafe static bool ModifyBilinearSample_Prealloc(ref BilinearSampleHelper* inHelperBuffer, in SurfaceData.TexelData* inDataBufferPtr, in SoilDataType inDataType, in float inModificationAmount, in Vector2 inSampleLocation, in Vector2Int inDataExtents)
	{
		return default(bool);
	}

	[Token(Token = "0x6000AED")]
	[Address(RVA = "0xF64F90", Offset = "0xF64F90", VA = "0xF64F90")]
	public unsafe static void SetupSampleHelpers(ref BilinearSampleHelper* inHelperBuffer, in Vector2 inSampleLocation, in Vector2Int inDataExtents)
	{
	}

	[Token(Token = "0x6000AEE")]
	[Address(RVA = "0xF65268", Offset = "0xF65268", VA = "0xF65268")]
	public unsafe static void FetchDataPointersFromBuffer(ref BilinearSampleHelper* inHelperBuffer, in SurfaceData.TexelData* inDataBufferPtr, in SoilDataType inDataType)
	{
	}

	[Token(Token = "0x6000AEF")]
	[Address(RVA = "0xF65308", Offset = "0xF65308", VA = "0xF65308")]
	public unsafe static bool TryModifyData(ref BilinearSampleHelper* inHelperBuffer, in float inModificationAmount, in bool inAllowWeightChanges = false)
	{
		return default(bool);
	}
}
[Token(Token = "0x20001F9")]
public class SoilValueCheckHelper
{
	[Token(Token = "0x4000B26")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private int ResultStorageID;

	[Token(Token = "0x4000B27")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private float ResultValue;

	[Token(Token = "0x6000AF0")]
	[Address(RVA = "0xDF8554", Offset = "0xDF8554", VA = "0xDF8554")]
	private SoilValueCheckHelper()
	{
	}

	[Token(Token = "0x6000AF1")]
	[Address(RVA = "0xDF8584", Offset = "0xDF8584", VA = "0xDF8584", Slot = "1")]
	~SoilValueCheckHelper()
	{
	}

	[Token(Token = "0x6000AF2")]
	[Address(RVA = "0xDF869C", Offset = "0xDF869C", VA = "0xDF869C")]
	public bool IsValidRequest()
	{
		return default(bool);
	}

	[Token(Token = "0x6000AF3")]
	[Address(RVA = "0xDF86BC", Offset = "0xDF86BC", VA = "0xDF86BC")]
	public float GetRequestValue()
	{
		return default(float);
	}

	[Token(Token = "0x6000AF4")]
	[Address(RVA = "0xDF87BC", Offset = "0xDF87BC", VA = "0xDF87BC")]
	public static SoilValueCheckHelper CreateValueCheckRequest(in int inSoilID, in SoilDataType inDataValueToCheck, in Vector2 inLocationToCheck, in bool inDoBilinearCheck)
	{
		return null;
	}
}
[Token(Token = "0x20001FA")]
public struct SoilValueCheckData
{
	[Token(Token = "0x4000B28")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public int SoilID;

	[Token(Token = "0x4000B29")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public SoilDataType DataTypeToCheck;

	[Token(Token = "0x4000B2A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public Vector2 SurfaceLocationToCheck;

	[Token(Token = "0x4000B2B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public bool DoBilinearCheck;

	[Token(Token = "0x4000B2C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float FoundValue;

	[Token(Token = "0x4000B2D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int ResultStorageIndex;
}
[Token(Token = "0x20001FB")]
[AttributeAttribute(Name = "BurstCompileAttribute", RVA = "0x972108", Offset = "0x972108")]
public struct CheckSoilValuesJob : IJob
{
	[Token(Token = "0x4000B2E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[NativeDisableUnsafePtrRestriction]
	public unsafe SurfaceData.TexelData* TexelDataBuffer;

	[Token(Token = "0x4000B2F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public Vector2Int TexelDataBufferExtents;

	[Token(Token = "0x4000B30")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[NativeDisableUnsafePtrRestriction]
	public unsafe SoilValueCheckData* ValueCheckDataBuffer;

	[Token(Token = "0x4000B31")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int ValueCheckDataBufferSize;

	[Token(Token = "0x6000AF5")]
	[Address(RVA = "0xA437E4", Offset = "0xA437E4", VA = "0xA437E4", Slot = "4")]
	public void Execute()
	{
	}

	[Token(Token = "0x6000AF6")]
	[Address(RVA = "0xA437EC", Offset = "0xA437EC", VA = "0xA437EC")]
	private unsafe void SetCheckDataFromSample(SoilValueCheckData* inDataToSet, SurfaceData.TexelData* inTexelData)
	{
	}
}
[Token(Token = "0x20001FC")]
public class GrassBall : MonoBehaviour, ISoilManipulator, ICompostable
{
	[Token(Token = "0x4000B32")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private float GrassApplicationRadius;

	[Token(Token = "0x6000AF7")]
	[Address(RVA = "0xBDB35C", Offset = "0xBDB35C", VA = "0xBDB35C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000AF8")]
	[Address(RVA = "0xBDB3C0", Offset = "0xBDB3C0", VA = "0xBDB3C0")]
	private bool TryChangeSoilToGrassAtLocation(Vector3 inPosition)
	{
		return default(bool);
	}

	[Token(Token = "0x6000AF9")]
	[Address(RVA = "0xBDB52C", Offset = "0xBDB52C", VA = "0xBDB52C", Slot = "5")]
	public int GetCompostContentValue()
	{
		return default(int);
	}

	[Token(Token = "0x6000AFA")]
	[Address(RVA = "0xBDB534", Offset = "0xBDB534", VA = "0xBDB534", Slot = "4")]
	public void OnSoilManipulation(Vector3 inPosition)
	{
	}

	[Token(Token = "0x6000AFB")]
	[Address(RVA = "0xBDB538", Offset = "0xBDB538", VA = "0xBDB538")]
	public GrassBall()
	{
	}
}
[Token(Token = "0x20001FD")]
[AttributeAttribute(Name = "BurstCompileAttribute", RVA = "0x97213C", Offset = "0x97213C")]
public struct SoilModificationJob : IJobParallelFor
{
	[Token(Token = "0x4000B33")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[NativeDisableUnsafePtrRestriction]
	public unsafe SurfaceData.TexelData* DataToModify;

	[Token(Token = "0x4000B34")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	[Unity.Collections.ReadOnly]
	public int4 TexelData;

	[Token(Token = "0x4000B35")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Unity.Collections.ReadOnly]
	public int4 AdditionalData;

	[Token(Token = "0x4000B36")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[Unity.Collections.ReadOnly]
	public float4 ModificationData;

	[Token(Token = "0x6000AFC")]
	[Address(RVA = "0xA473C4", Offset = "0xA473C4", VA = "0xA473C4", Slot = "4")]
	public void Execute(int index)
	{
	}
}
[Token(Token = "0x20001FE")]
[AttributeAttribute(Name = "BurstCompileAttribute", RVA = "0x972170", Offset = "0x972170")]
internal struct UntillableSoilGrowthJob : IJobParallelFor
{
	[Token(Token = "0x4000B37")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[NativeDisableUnsafePtrRestriction]
	public unsafe SoilModificationData* ModificationDataBuffer;

	[Token(Token = "0x4000B38")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public int ModificationDataBufferSize;

	[Token(Token = "0x4000B39")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	[Unity.Collections.ReadOnly]
	public int4 AdditionalData;

	[Token(Token = "0x4000B3A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[Unity.Collections.ReadOnly]
	public Vector2Int SurfaceDataExtents;

	[Token(Token = "0x4000B3B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[Unity.Collections.ReadOnly]
	public uint RandomSeed;

	[Token(Token = "0x4000B3C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[NativeDisableUnsafePtrRestriction]
	public unsafe SurfaceData.TexelData* BaseDataPtr;

	[Token(Token = "0x4000B3D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[Unity.Collections.ReadOnly]
	public float TimeSinceLastJob;

	[Token(Token = "0x4000B3E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[NativeDisableUnsafePtrRestriction]
	public unsafe bool* JobModifiedDataPtr;

	[Token(Token = "0x6000AFD")]
	[Address(RVA = "0xA47B70", Offset = "0xA47B70", VA = "0xA47B70", Slot = "4")]
	public void Execute(int index)
	{
	}
}
[Token(Token = "0x20001FF")]
[AttributeAttribute(Name = "BurstCompileAttribute", RVA = "0x9721A4", Offset = "0x9721A4")]
public struct SoilEvaporationCheckJob : IJobParallelFor
{
	[Token(Token = "0x4000B3F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[NativeDisableUnsafePtrRestriction]
	public unsafe SurfaceData.TexelData* SoilDataPtr;

	[Token(Token = "0x4000B40")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public int SoilDataSize;

	[Token(Token = "0x4000B41")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[NativeDisableUnsafePtrRestriction]
	public unsafe long* JobResultBufferPtr;

	[Token(Token = "0x4000B42")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int JobResultIndex;

	[Token(Token = "0x4000B43")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int SoilSurfaceIndex;

	[Token(Token = "0x6000AFE")]
	[Address(RVA = "0xA472FC", Offset = "0xA472FC", VA = "0xA472FC", Slot = "4")]
	public void Execute(int index)
	{
	}
}
[Token(Token = "0x2000200")]
[AttributeAttribute(Name = "BurstCompileAttribute", RVA = "0x9721D8", Offset = "0x9721D8")]
public struct SoilEvaporationJob : IJobParallelFor
{
	[Token(Token = "0x4000B44")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[NativeDisableUnsafePtrRestriction]
	public unsafe SurfaceData.TexelData* SoilDataPtr;

	[Token(Token = "0x4000B45")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public int SoilDataSize;

	[Token(Token = "0x4000B46")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	[Unity.Collections.ReadOnly]
	public Vector2Int SurfaceDataExtents;

	[Token(Token = "0x4000B47")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[NativeDisableUnsafePtrRestriction]
	public unsafe long* JobResultBufferPtr;

	[Token(Token = "0x4000B48")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int JobResultIndex;

	[Token(Token = "0x4000B49")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[Unity.Collections.ReadOnly]
	public Vector2Int JobTileCount;

	[Token(Token = "0x4000B4A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[Unity.Collections.ReadOnly]
	public Vector2Int JobTileDataExtents;

	[Token(Token = "0x4000B4B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[Unity.Collections.ReadOnly]
	public float TimeSinceLastJob;

	[Token(Token = "0x4000B4C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public int SoilSurfaceIndex;

	[Token(Token = "0x6000AFF")]
	[Address(RVA = "0xA47304", Offset = "0xA47304", VA = "0xA47304", Slot = "4")]
	public void Execute(int index)
	{
	}
}
[Token(Token = "0x2000201")]
public struct SoilModificationActionData
{
	[Token(Token = "0x4000B4D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public int SoilID;

	[Token(Token = "0x4000B4E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public SoilDataType ModificationType;

	[Token(Token = "0x4000B4F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public Vector2 ModificationLocation;

	[Token(Token = "0x4000B50")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Vector2Int SoilExtents;

	[Token(Token = "0x4000B51")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float ModificationRadius;

	[Token(Token = "0x4000B52")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float ModificationValue;

	[Token(Token = "0x4000B53")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool UseFalloff;

	[Token(Token = "0x4000B54")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	public bool ValueChanged;

	[Token(Token = "0x4000B55")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float TimeLeft;
}
[Token(Token = "0x2000202")]
public struct SoilModificationData
{
	[Token(Token = "0x4000B56")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float4 Data;

	[Token(Token = "0x6000B00")]
	[Address(RVA = "0xA473B8", Offset = "0xA473B8", VA = "0xA473B8")]
	public SoilModificationData(float4 data)
	{
	}
}
[Token(Token = "0x2000203")]
public class SoilModificationManager
{
	[Token(Token = "0x4000B57")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public DynamicNativeArray<PlantGrowthSystem.SoilSurfaceData> ParentSurfaceData;

	[Token(Token = "0x4000B58")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private List<int> SoilSurfaceIDsToUpdate;

	[Token(Token = "0x4000B59")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private List<int> PendingSoilSurfaceWaternessUpdates;

	[Token(Token = "0x4000B5A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private List<int> PendingSoilSurfaceEvaporations;

	[Token(Token = "0x4000B5B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private List<SoilModificationActionData>[] PendingUntillableSoilModifications;

	[Token(Token = "0x4000B5C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private DynamicNativeArray<SoilModificationData>[] SoilModificationJobData;

	[Token(Token = "0x4000B5D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private NativeArray<JobHandle> ScheduledSoilGrowthJobs;

	[Token(Token = "0x4000B5E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private NativeArray<bool> SoilGrowthJobResults;

	[Token(Token = "0x4000B5F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private NativeArray<long> WaternessCheckJobResults;

	[Token(Token = "0x4000B60")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private NativeArray<long> SoilEvaporationJobResults;

	[Token(Token = "0x4000B61")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private DynamicNativeArray<SoilValueCheckData> PendingValueChecks;

	[Token(Token = "0x4000B62")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private DynamicNativeArray<SoilValueCheckData>[] ValueCheckJobPayloads;

	[Token(Token = "0x4000B63")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private DynamicNativeArray<float> ValueCheckResults;

	[Token(Token = "0x4000B64")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private DynamicNativeArray<SoilModificationActionData> PendingSoilModifications;

	[Token(Token = "0x4000B65")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public DynamicNativeArray<TryUseSoilResourceJob> QueuedSoilResourceJobs;

	[Token(Token = "0x4000B66")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public DynamicNativeArray<SoilModifyAtLocationJob> QueuedSoilLocationModifications;

	[Token(Token = "0x4000B67")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private PlantGrowthSystem ParentSystem;

	[Token(Token = "0x4000B68")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private JobHandle PreviousFrameCombinedHandle;

	[Token(Token = "0x6000B01")]
	[Address(RVA = "0xDF2104", Offset = "0xDF2104", VA = "0xDF2104")]
	public SoilModificationManager(PlantGrowthSystem inParentSystem, DynamicNativeArray<PlantGrowthSystem.SoilSurfaceData> inSurfaceData)
	{
	}

	[Token(Token = "0x6000B02")]
	[Address(RVA = "0xDF2384", Offset = "0xDF2384", VA = "0xDF2384", Slot = "1")]
	~SoilModificationManager()
	{
	}

	[Token(Token = "0x6000B03")]
	[Address(RVA = "0xDF2538", Offset = "0xDF2538", VA = "0xDF2538")]
	public void WaitForAllJobsFinished()
	{
	}

	[Token(Token = "0x6000B04")]
	[Address(RVA = "0xDF2544", Offset = "0xDF2544", VA = "0xDF2544")]
	public void Update()
	{
	}

	[Token(Token = "0x6000B05")]
	[Address(RVA = "0xDF39C8", Offset = "0xDF39C8", VA = "0xDF39C8")]
	private void CreateSoilValueCheckJobs(ref JobHandle outCombinedDependencies)
	{
	}

	[Token(Token = "0x6000B06")]
	[Address(RVA = "0xDF3EC0", Offset = "0xDF3EC0", VA = "0xDF3EC0")]
	private void CreateSoilModificationJobs(ref JobHandle outCombinedDependencies, ref JobHandle inCombinedDependencies)
	{
	}

	[Token(Token = "0x6000B07")]
	[Address(RVA = "0xDF4314", Offset = "0xDF4314", VA = "0xDF4314")]
	public void FinishJobsAndCleanup()
	{
	}

	[Token(Token = "0x6000B08")]
	[Address(RVA = "0xDF23EC", Offset = "0xDF23EC", VA = "0xDF23EC")]
	private void Cleanup()
	{
	}

	[Token(Token = "0x6000B09")]
	[Address(RVA = "0xDF4340", Offset = "0xDF4340", VA = "0xDF4340")]
	public void AddSoilSurfaceToUpdate(int inSurfaceIDToUpdate)
	{
	}

	[Token(Token = "0x6000B0A")]
	[Address(RVA = "0xDF43A0", Offset = "0xDF43A0", VA = "0xDF43A0")]
	public void AddPendingSoilModification(in int inSoilID, in SoilDataType inModificationType, in Vector2 inModificationLocation, in Vector2Int inSoilExtents, in float inModificationRadius, in float inModificationValue, bool inUseFalloff = true)
	{
	}

	[Token(Token = "0x6000B0B")]
	[Address(RVA = "0xDF44A4", Offset = "0xDF44A4", VA = "0xDF44A4")]
	public void AddPendingSoilModification_Untillable(in int inSoilID, in Vector2 inModificationLocation, in Vector2Int inSoilExtents, in float inModificationRadius, in float inModificationValue, in bool valueChangedSinceLastUpdate, in float duration)
	{
	}

	[Token(Token = "0x6000B0C")]
	[Address(RVA = "0xDF4650", Offset = "0xDF4650", VA = "0xDF4650")]
	public int AddPendingSoilValueCheck(in int inSoilID, in SoilDataType inDataValueToCheck, in Vector2 inLocationToCheck, in bool inDoBilinearCheck)
	{
		return default(int);
	}

	[Token(Token = "0x6000B0D")]
	[Address(RVA = "0xDF4760", Offset = "0xDF4760", VA = "0xDF4760")]
	public float FetchSoilCheckResult(in int resultStorageIndex, bool clearOnFetch = true, bool clearOnValidResult = true)
	{
		return default(float);
	}

	[Token(Token = "0x6000B0E")]
	[Address(RVA = "0xDF4830", Offset = "0xDF4830", VA = "0xDF4830")]
	public void ClearValueCheckResultSlot(in int resultSlotToClear)
	{
	}

	[Token(Token = "0x6000B0F")]
	[Address(RVA = "0xDF427C", Offset = "0xDF427C", VA = "0xDF427C")]
	private void SetSoilDataNeedWaterStateUpdate(int inSoilID)
	{
	}
}
[Token(Token = "0x2000204")]
public class SoilModifierComponent : SaveableComponent, IInitializable
{
	[Token(Token = "0x2000205")]
	public struct SoilModification
	{
		[Token(Token = "0x4000B77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Vector2 position;

		[Token(Token = "0x4000B78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float radius;

		[Token(Token = "0x4000B79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float modificationValue;

		[Token(Token = "0x6000B1F")]
		[Address(RVA = "0xA473CC", Offset = "0xA473CC", VA = "0xA473CC")]
		public SoilModification(Vector2 position, float radius, float value)
		{
		}

		[Token(Token = "0x6000B20")]
		[Address(RVA = "0xA473D8", Offset = "0xA473D8", VA = "0xA473D8")]
		public bool IsValid()
		{
			return default(bool);
		}
	}

	[Token(Token = "0x4000B69")]
	private const float DefaultModificationRadius = 1f;

	[Token(Token = "0x4000B6A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool RunEveryFrame;

	[Token(Token = "0x4000B6B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	public bool RunOnStart;

	[Token(Token = "0x4000B6C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A")]
	public bool UseDeltaTime;

	[Token(Token = "0x4000B6D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float ModificationValue;

	[Token(Token = "0x4000B6E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float ModificationRadius;

	[Token(Token = "0x4000B6F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	[HideInInspector]
	private bool[] SoilTypesToModify;

	[Token(Token = "0x4000B70")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Vector3 SoilTraceOffset;

	[Token(Token = "0x4000B71")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float TraceDistance;

	[Token(Token = "0x4000B72")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private Transform SoilTracePosition;

	[Token(Token = "0x4000B73")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private float m_radiusFactor;

	[Token(Token = "0x4000B74")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public bool OnlyModifySoilWithUntillableAreas;

	[Token(Token = "0x4000B75")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private SoilSurfaceGround soilSurface;

	[Token(Token = "0x4000B76")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private SoilModification previousModification;

	[Token(Token = "0x1700011E")]
	public float RadiusFactor
	{
		[Token(Token = "0x6000B10")]
		[Address(RVA = "0xDF48B8", Offset = "0xDF48B8", VA = "0xDF48B8")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000B11")]
		[Address(RVA = "0xDF48C0", Offset = "0xDF48C0", VA = "0xDF48C0")]
		set
		{
		}
	}

	[Token(Token = "0x6000B12")]
	[Address(RVA = "0xDF48C8", Offset = "0xDF48C8", VA = "0xDF48C8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000B13")]
	[Address(RVA = "0xDF4C84", Offset = "0xDF4C84", VA = "0xDF4C84")]
	public void UpdateWithValue(float modificationValue, SoilDataType dataToModify)
	{
	}

	[Token(Token = "0x6000B14")]
	[Address(RVA = "0xDF4D40", Offset = "0xDF4D40", VA = "0xDF4D40")]
	public void UpdateWithRadius(float modificationRadius, SoilDataType dataToModify)
	{
	}

	[Token(Token = "0x6000B15")]
	[Address(RVA = "0xDF4D58", Offset = "0xDF4D58", VA = "0xDF4D58")]
	public void UpdateWithRadiusFactor(float radiusFactor, SoilDataType dataToModify)
	{
	}

	[Token(Token = "0x6000B16")]
	[Address(RVA = "0xDF4C90", Offset = "0xDF4C90", VA = "0xDF4C90")]
	public void UpdateWithModification(float modificationValue, float modificationRadius, float radiusFactor, SoilDataType dataToModify)
	{
	}

	[Token(Token = "0x6000B17")]
	[Address(RVA = "0xDF4D6C", Offset = "0xDF4D6C", VA = "0xDF4D6C")]
	public void ApplyModificationToData(SoilDataType[] dataToModify)
	{
	}

	[Token(Token = "0x6000B18")]
	[Address(RVA = "0xDF48E0", Offset = "0xDF48E0", VA = "0xDF48E0")]
	private void CreateModificationJob([Optional] SoilDataType[] dataToModify, bool calledFromUpdate = false)
	{
	}

	[Token(Token = "0x6000B19")]
	[Address(RVA = "0xDF4F9C", Offset = "0xDF4F9C", VA = "0xDF4F9C")]
	private SoilSurfaceGround GetSoilSurfaceToModify()
	{
		return null;
	}

	[Token(Token = "0x6000B1A")]
	[Address(RVA = "0xDF5254", Offset = "0xDF5254", VA = "0xDF5254", Slot = "4")]
	public override ComponentState CreateState()
	{
		return null;
	}

	[Token(Token = "0x6000B1B")]
	[Address(RVA = "0xDF5358", Offset = "0xDF5358", VA = "0xDF5358", Slot = "5")]
	public void Initialize()
	{
	}

	[Token(Token = "0x6000B1C")]
	[Address(RVA = "0xDF543C", Offset = "0xDF543C", VA = "0xDF543C")]
	public void UpdateCachedSoilSurface()
	{
	}

	[Token(Token = "0x6000B1D")]
	[Address(RVA = "0xDF5468", Offset = "0xDF5468", VA = "0xDF5468")]
	public bool HasSoilSurfaceBelow()
	{
		return default(bool);
	}

	[Token(Token = "0x6000B1E")]
	[Address(RVA = "0xDF54D8", Offset = "0xDF54D8", VA = "0xDF54D8")]
	public SoilModifierComponent()
	{
	}
}
[Serializable]
[Token(Token = "0x2000206")]
public class SoilModifierComponentState : ComponentState
{
	[Token(Token = "0x4000B7A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public bool RunEveryFrame;

	[Token(Token = "0x4000B7B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
	public bool RunOnStart;

	[Token(Token = "0x4000B7C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x12")]
	public bool UseDeltaTime;

	[Token(Token = "0x4000B7D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float ModificationValue;

	[Token(Token = "0x4000B7E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float ModificationRadius;

	[Token(Token = "0x4000B7F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float RadiusFactor;

	[Token(Token = "0x6000B21")]
	[Address(RVA = "0xDF52E4", Offset = "0xDF52E4", VA = "0xDF52E4")]
	public SoilModifierComponentState(bool inRunEveryFrame, bool inRunOnStart, bool inUseDeltaTime, float inModificationValue, float inModificationRadius, float inRadiusFactor)
	{
	}
}
[Token(Token = "0x2000207")]
[AttributeAttribute(Name = "BurstCompileAttribute", RVA = "0x97220C", Offset = "0x97220C")]
public struct SoilModifyAtLocationJob : IJob
{
	[Token(Token = "0x4000B80")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[NativeDisableUnsafePtrRestriction]
	public unsafe SurfaceData.TexelData* DataToModify;

	[Token(Token = "0x4000B81")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public Vector2Int DataExtents;

	[Token(Token = "0x4000B82")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Vector2 JobLocation;

	[Token(Token = "0x4000B83")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public SoilDataType ModificationDataType;

	[Token(Token = "0x4000B84")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float ModificationValue;

	[Token(Token = "0x4000B85")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool IsBilinearModification;

	[Token(Token = "0x6000B22")]
	[Address(RVA = "0xA47454", Offset = "0xA47454", VA = "0xA47454", Slot = "4")]
	public void Execute()
	{
	}
}
[Token(Token = "0x2000208")]
public struct SoilResourceJobPayload
{
	[Token(Token = "0x4000B86")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector2 JobLocation;

	[Token(Token = "0x4000B87")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public SoilDataType JobResourceType;

	[Token(Token = "0x4000B88")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public float JobResourceValue;

	[Token(Token = "0x4000B89")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public bool UseBilinearData;

	[Token(Token = "0x4000B8A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
	public bool JobSuccess;
}
[Token(Token = "0x2000209")]
[AttributeAttribute(Name = "BurstCompileAttribute", RVA = "0x972240", Offset = "0x972240")]
public struct TryUseSoilResourceJob : IJob
{
	[Token(Token = "0x4000B8B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[NativeDisableUnsafePtrRestriction]
	public unsafe SurfaceData.TexelData* DataBufferPtr;

	[Token(Token = "0x4000B8C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public Vector2Int DataExtents;

	[Token(Token = "0x4000B8D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[NativeDisableUnsafePtrRestriction]
	public unsafe SoilResourceJobPayload* PayloadBufferPtr;

	[Token(Token = "0x4000B8E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int PayloadBufferStartIndex;

	[Token(Token = "0x4000B8F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int PayloadCount;

	[Token(Token = "0x6000B23")]
	[Address(RVA = "0xA47ADC", Offset = "0xA47ADC", VA = "0xA47ADC", Slot = "4")]
	public void Execute()
	{
	}
}
[Token(Token = "0x200020A")]
public class TrellisUtilities
{
	[Token(Token = "0x4000B90")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x978974", Offset = "0x978974")]
	private static float <MaxDistanceFromTrellis>k__BackingField;

	[Token(Token = "0x4000B91")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x978984", Offset = "0x978984")]
	private static string <TrellisTag>k__BackingField;

	[Token(Token = "0x4000B92")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static Collider[] results;

	[Token(Token = "0x1700011F")]
	public static float MaxDistanceFromTrellis
	{
		[Token(Token = "0x6000B24")]
		[Address(RVA = "0xE69948", Offset = "0xE69948", VA = "0xE69948")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x989D90", Offset = "0x989D90")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000120")]
	public static string TrellisTag
	{
		[Token(Token = "0x6000B25")]
		[Address(RVA = "0xE699B0", Offset = "0xE699B0", VA = "0xE699B0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x989DA0", Offset = "0x989DA0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000B26")]
	[Address(RVA = "0xE69A18", Offset = "0xE69A18", VA = "0xE69A18")]
	public static bool LookForTrellis(Vector3 pos, out Vector3 plantPos)
	{
		return default(bool);
	}

	[Token(Token = "0x6000B27")]
	[Address(RVA = "0xE69C14", Offset = "0xE69C14", VA = "0xE69C14")]
	public static Vector3 GetPositionNextToTrellis(Vector3 currentPlantPos, Vector3 trellisPos)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000B28")]
	[Address(RVA = "0xE69D78", Offset = "0xE69D78", VA = "0xE69D78")]
	public static bool ColliderHasTrellis(Collider col)
	{
		return default(bool);
	}
}
[Token(Token = "0x200020B")]
public class Boat : MonoBehaviour, IInitializable, IMovingPlatform
{
	[Token(Token = "0x200020C")]
	public enum BoatMovementState
	{
		[Token(Token = "0x4000BB9")]
		MovingForward,
		[Token(Token = "0x4000BBA")]
		MovingBackwards,
		[Token(Token = "0x4000BBB")]
		SlowingDown,
		[Token(Token = "0x4000BBC")]
		StandingStill
	}

	[Token(Token = "0x200020D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x972274", Offset = "0x972274")]
	private sealed class <UpdateMusic>d__57 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000BBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000BBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000BBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Boat <>4__this;

		[Token(Token = "0x4000BC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int <s>5__2;

		[Token(Token = "0x4000BC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private bool <allow>5__3;

		[Token(Token = "0x17000122")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000B4D")]
			[Address(RVA = "0xF6B30C", Offset = "0xF6B30C", VA = "0xF6B30C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000123")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000B4F")]
			[Address(RVA = "0xF6B374", Offset = "0xF6B374", VA = "0xF6B374", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000B4A")]
		[Address(RVA = "0xF6A210", Offset = "0xF6A210", VA = "0xF6A210")]
		[DebuggerHidden]
		public <UpdateMusic>d__57(int <>1__state)
		{
		}

		[Token(Token = "0x6000B4B")]
		[Address(RVA = "0xF6ACA4", Offset = "0xF6ACA4", VA = "0xF6ACA4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000B4C")]
		[Address(RVA = "0xF6ACA8", Offset = "0xF6ACA8", VA = "0xF6ACA8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000B4E")]
		[Address(RVA = "0xF6B314", Offset = "0xF6B314", VA = "0xF6B314", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000B93")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Boat Instance;

	[Token(Token = "0x4000B94")]
	private const float PlayerInRangeOfBoatSqDistance = 625f;

	[Token(Token = "0x4000B95")]
	private const float SphereCastRadius = 1f;

	[Token(Token = "0x4000B96")]
	private const float BoatLength = 4f;

	[Token(Token = "0x4000B97")]
	private const float ResetGasLeverDuration = 4f;

	[Token(Token = "0x4000B98")]
	private const float MOTOR_MAX_ANGLE = 35f;

	[Token(Token = "0x4000B99")]
	private const float MAX_SPEED = 4.5f;

	[Token(Token = "0x4000B9A")]
	private const float ACCELERATION = 0.25f;

	[Token(Token = "0x4000B9B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Rotatable2 gasLever;

	[Token(Token = "0x4000B9C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Rotatable steeringWheel;

	[Token(Token = "0x4000B9D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Rigidbody rigbod;

	[Token(Token = "0x4000B9E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Transform boatContainer;

	[Token(Token = "0x4000B9F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private Transform motorTransform;

	[Token(Token = "0x4000BA0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private Animator engineAnimator;

	[Token(Token = "0x4000BA1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private MeshCollider boatContainerTrigger;

	[Token(Token = "0x4000BA2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x978A04", Offset = "0x978A04")]
	[SerializeField]
	private UnityEvent m_onEnterBoatEvent;

	[Token(Token = "0x4000BA3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private UnityEvent m_onExitBoatEvent;

	[Token(Token = "0x4000BA4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private int speedMultiplierParam;

	[Token(Token = "0x4000BA5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public float currentSpeed;

	[Token(Token = "0x4000BA6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private float scaledSpeed;

	[Token(Token = "0x4000BA7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private float currentMaxSpeed;

	[Token(Token = "0x4000BA8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private BoatMovementState currentState;

	[Token(Token = "0x4000BA9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private bool needsToCheckDistanceFromLand;

	[Token(Token = "0x4000BAA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static readonly int SPEED;

	[Token(Token = "0x4000BAB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x978A60", Offset = "0x978A60")]
	[SerializeField]
	private NeatAudioPlayer m_audioPlayer;

	[Token(Token = "0x4000BAC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	private NeatAudioCue m_collisionSound;

	[Token(Token = "0x4000BAD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public NeatAudioPlayer boatEngineSound;

	[Token(Token = "0x4000BAE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public NeatAudioPlayer boatWavesSound;

	[Token(Token = "0x4000BAF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public NeatAudioPlayer boatIdleSound;

	[Token(Token = "0x4000BB0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private bool initialized;

	[Token(Token = "0x4000BB1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	private Vector3 velocity;

	[Token(Token = "0x4000BB2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private Vector3 m_sphereCastOffset;

	[Token(Token = "0x4000BB3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private float m_stuckDuration;

	[Token(Token = "0x4000BB4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private Coroutine boatMusic;

	[Token(Token = "0x4000BB5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private YieldInstruction WaitSlightly;

	[Token(Token = "0x4000BB6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private bool boatIsStopped;

	[Token(Token = "0x4000BB7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD1")]
	private bool boatMusicStopped;

	[Token(Token = "0x17000121")]
	public Vector3 Velocity
	{
		[Token(Token = "0x6000B2A")]
		[Address(RVA = "0xF67C7C", Offset = "0xF67C7C", VA = "0xF67C7C")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x6000B2B")]
	[Address(RVA = "0xF67C88", Offset = "0xF67C88", VA = "0xF67C88")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000B2C")]
	[Address(RVA = "0xF67DD8", Offset = "0xF67DD8", VA = "0xF67DD8")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000B2D")]
	[Address(RVA = "0xF67F34", Offset = "0xF67F34", VA = "0xF67F34")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000B2E")]
	[Address(RVA = "0xF67FF8", Offset = "0xF67FF8", VA = "0xF67FF8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000B2F")]
	[Address(RVA = "0xF680A8", Offset = "0xF680A8", VA = "0xF680A8", Slot = "4")]
	public void Initialize()
	{
	}

	[Token(Token = "0x6000B30")]
	[Address(RVA = "0xF683A0", Offset = "0xF683A0", VA = "0xF683A0")]
	private bool PlayerIsAttachedToBoat()
	{
		return default(bool);
	}

	[Token(Token = "0x6000B31")]
	[Address(RVA = "0xF6852C", Offset = "0xF6852C", VA = "0xF6852C")]
	private void OnLeverOrWheelGrabbed()
	{
	}

	[Token(Token = "0x6000B32")]
	[Address(RVA = "0xF686BC", Offset = "0xF686BC", VA = "0xF686BC")]
	public bool PlayerInRangeOfBoat()
	{
		return default(bool);
	}

	[Token(Token = "0x6000B33")]
	[Address(RVA = "0xF65D34", Offset = "0xF65D34", VA = "0xF65D34")]
	public bool OnBoat()
	{
		return default(bool);
	}

	[Token(Token = "0x6000B34")]
	[Address(RVA = "0xF688BC", Offset = "0xF688BC", VA = "0xF688BC")]
	private bool CheckIfPlayerIsInBoat()
	{
		return default(bool);
	}

	[Token(Token = "0x6000B35")]
	[Address(RVA = "0xF68560", Offset = "0xF68560", VA = "0xF68560")]
	private void AttachPlayerToBoat()
	{
	}

	[Token(Token = "0x6000B36")]
	[Address(RVA = "0xF68C24", Offset = "0xF68C24", VA = "0xF68C24")]
	private void Update()
	{
	}

	[Token(Token = "0x6000B37")]
	[Address(RVA = "0xF69544", Offset = "0xF69544", VA = "0xF69544")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000B38")]
	[Address(RVA = "0xF69400", Offset = "0xF69400", VA = "0xF69400")]
	private void UpdateBoatAutomaticReturn()
	{
	}

	[Token(Token = "0x6000B39")]
	[Address(RVA = "0xF69C3C", Offset = "0xF69C3C", VA = "0xF69C3C")]
	public void ReturnBoatToDock()
	{
	}

	[Token(Token = "0x6000B3A")]
	[Address(RVA = "0xF69B20", Offset = "0xF69B20", VA = "0xF69B20")]
	private void ReturnBoatToLand(Vector3 pos, Quaternion rot)
	{
	}

	[Token(Token = "0x6000B3B")]
	[Address(RVA = "0xF68CAC", Offset = "0xF68CAC", VA = "0xF68CAC")]
	private void UpdateSpeed()
	{
	}

	[Token(Token = "0x6000B3C")]
	[Address(RVA = "0xF6A194", Offset = "0xF6A194", VA = "0xF6A194")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x989DB0", Offset = "0x989DB0")]
	private IEnumerator UpdateMusic()
	{
		return null;
	}

	[Token(Token = "0x6000B3D")]
	[Address(RVA = "0xF691E8", Offset = "0xF691E8", VA = "0xF691E8")]
	private void UpdateDirection()
	{
	}

	[Token(Token = "0x6000B3E")]
	[Address(RVA = "0xF69548", Offset = "0xF69548", VA = "0xF69548")]
	private void UpdateMovement()
	{
	}

	[Token(Token = "0x6000B3F")]
	[Address(RVA = "0xF6A384", Offset = "0xF6A384", VA = "0xF6A384")]
	private bool CheckCollision(Vector3 vel, out Vector3 modifiedVelocity)
	{
		return default(bool);
	}

	[Token(Token = "0x6000B40")]
	[Address(RVA = "0xF6A2D4", Offset = "0xF6A2D4", VA = "0xF6A2D4")]
	private Vector3 GetUpdatedVelocity()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000B41")]
	[Address(RVA = "0xF6A23C", Offset = "0xF6A23C", VA = "0xF6A23C")]
	private void SlowDown()
	{
	}

	[Token(Token = "0x6000B42")]
	[Address(RVA = "0xF6A254", Offset = "0xF6A254", VA = "0xF6A254")]
	private void StandStill()
	{
	}

	[Token(Token = "0x6000B43")]
	[Address(RVA = "0xF6973C", Offset = "0xF6973C", VA = "0xF6973C")]
	private bool IsFarAwayFromLand(out Vector3 newPos, out Quaternion newRot)
	{
		return default(bool);
	}

	[Token(Token = "0x6000B44")]
	[Address(RVA = "0xF6A778", Offset = "0xF6A778", VA = "0xF6A778")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000B45")]
	[Address(RVA = "0xF6A8E4", Offset = "0xF6A8E4", VA = "0xF6A8E4")]
	private void OnPlayerTeleported(TeleportDestinationInfo destinationInfo)
	{
	}

	[Token(Token = "0x6000B46")]
	[Address(RVA = "0xF6A154", Offset = "0xF6A154", VA = "0xF6A154")]
	private void ResetGasLever()
	{
	}

	[Token(Token = "0x6000B47")]
	[Address(RVA = "0xF6AB58", Offset = "0xF6AB58", VA = "0xF6AB58", Slot = "5")]
	public Vector3 GetVelocity()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000B48")]
	[Address(RVA = "0xF6AB64", Offset = "0xF6AB64", VA = "0xF6AB64")]
	public Boat()
	{
	}
}
[Token(Token = "0x200020E")]
public class BoatDockPosition : MonoBehaviour
{
	[Token(Token = "0x4000BC2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static List<BoatDockPosition> positions;

	[Token(Token = "0x6000B50")]
	[Address(RVA = "0xF6B37C", Offset = "0xF6B37C", VA = "0xF6B37C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000B51")]
	[Address(RVA = "0xF6B44C", Offset = "0xF6B44C", VA = "0xF6B44C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000B52")]
	[Address(RVA = "0xF69D70", Offset = "0xF69D70", VA = "0xF69D70")]
	public static Transform GetBoatDockPosition()
	{
		return null;
	}

	[Token(Token = "0x6000B53")]
	[Address(RVA = "0xF6B51C", Offset = "0xF6B51C", VA = "0xF6B51C")]
	public BoatDockPosition()
	{
	}
}
[Token(Token = "0x200020F")]
public class SnapToSurface : MonoBehaviour
{
	[Token(Token = "0x2000210")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x972284", Offset = "0x972284")]
	private sealed class <SnapWhenStill>d__10 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000BC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000BC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000BCA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Rigidbody rb;

		[Token(Token = "0x4000BCB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Grabbable grabbable;

		[Token(Token = "0x4000BCC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public SnapToSurface <>4__this;

		[Token(Token = "0x4000BCD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float <timeOut>5__2;

		[Token(Token = "0x17000124")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000B62")]
			[Address(RVA = "0xDEF3EC", Offset = "0xDEF3EC", VA = "0xDEF3EC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000125")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000B64")]
			[Address(RVA = "0xDEF454", Offset = "0xDEF454", VA = "0xDEF454", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000B5F")]
		[Address(RVA = "0xDEEF14", Offset = "0xDEEF14", VA = "0xDEEF14")]
		[DebuggerHidden]
		public <SnapWhenStill>d__10(int <>1__state)
		{
		}

		[Token(Token = "0x6000B60")]
		[Address(RVA = "0xDEF088", Offset = "0xDEF088", VA = "0xDEF088", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000B61")]
		[Address(RVA = "0xDEF08C", Offset = "0xDEF08C", VA = "0xDEF08C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000B63")]
		[Address(RVA = "0xDEF3F4", Offset = "0xDEF3F4", VA = "0xDEF3F4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000BC3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform surfacePos;

	[Token(Token = "0x4000BC4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform parentObject;

	[Token(Token = "0x4000BC5")]
	private const float movementThreshold = 0.1f;

	[Token(Token = "0x4000BC6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private List<Rigidbody> intersectingRbs;

	[Token(Token = "0x4000BC7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private List<Grabbable> attachedObjects;

	[Token(Token = "0x6000B55")]
	[Address(RVA = "0xDEE0D8", Offset = "0xDEE0D8", VA = "0xDEE0D8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000B56")]
	[Address(RVA = "0xDEE250", Offset = "0xDEE250", VA = "0xDEE250")]
	private bool BoatIsActive()
	{
		return default(bool);
	}

	[Token(Token = "0x6000B57")]
	[Address(RVA = "0xDEE33C", Offset = "0xDEE33C", VA = "0xDEE33C")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000B58")]
	[Address(RVA = "0xDEE834", Offset = "0xDEE834", VA = "0xDEE834")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x6000B59")]
	[Address(RVA = "0xDEEC34", Offset = "0xDEEC34", VA = "0xDEEC34")]
	private void AddMovingPlatformVelocity(Rigidbody rb)
	{
	}

	[Token(Token = "0x6000B5A")]
	[Address(RVA = "0xDEEE68", Offset = "0xDEEE68", VA = "0xDEEE68")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x989E64", Offset = "0x989E64")]
	private IEnumerator SnapWhenStill(Rigidbody rb, Grabbable grabbable)
	{
		return null;
	}

	[Token(Token = "0x6000B5B")]
	[Address(RVA = "0xDEEF40", Offset = "0xDEEF40", VA = "0xDEEF40")]
	public void SnappedObjectGrabbed(Grabbable grabbable)
	{
	}

	[Token(Token = "0x6000B5C")]
	[Address(RVA = "0xDEE6B8", Offset = "0xDEE6B8", VA = "0xDEE6B8")]
	private void AddObject(Grabbable obj)
	{
	}

	[Token(Token = "0x6000B5D")]
	[Address(RVA = "0xDEEA58", Offset = "0xDEEA58", VA = "0xDEEA58")]
	private void RemoveObject(Grabbable obj)
	{
	}

	[Token(Token = "0x6000B5E")]
	[Address(RVA = "0xDEEFD8", Offset = "0xDEEFD8", VA = "0xDEEFD8")]
	public SnapToSurface()
	{
	}
}
[Token(Token = "0x2000211")]
public class ChildGrabbableToggler : MonoBehaviour
{
	[Token(Token = "0x2000212")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x972294", Offset = "0x972294")]
	private sealed class <CheckShouldDisableChildren>d__10 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000BD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000BD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000BD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ChildGrabbableToggler <>4__this;

		[Token(Token = "0x17000126")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000B77")]
			[Address(RVA = "0xC45534", Offset = "0xC45534", VA = "0xC45534", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000127")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000B79")]
			[Address(RVA = "0xC4559C", Offset = "0xC4559C", VA = "0xC4559C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000B74")]
		[Address(RVA = "0xC44EAC", Offset = "0xC44EAC", VA = "0xC44EAC")]
		[DebuggerHidden]
		public <CheckShouldDisableChildren>d__10(int <>1__state)
		{
		}

		[Token(Token = "0x6000B75")]
		[Address(RVA = "0xC4546C", Offset = "0xC4546C", VA = "0xC4546C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000B76")]
		[Address(RVA = "0xC45470", Offset = "0xC45470", VA = "0xC45470", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000B78")]
		[Address(RVA = "0xC4553C", Offset = "0xC4553C", VA = "0xC4553C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000BCE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public IGrabbable[] ChildGrabbables;

	[Token(Token = "0x4000BCF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool ShouldDisableChildren;

	[Token(Token = "0x4000BD0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	private bool ChildrenActive;

	[Token(Token = "0x4000BD1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Collider TogglerCollider;

	[Token(Token = "0x4000BD2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Grabbable MainChildGrabbable;

	[Token(Token = "0x4000BD3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool MainChildStashed;

	[Token(Token = "0x4000BD4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Coroutine disableChildrenRoutine;

	[Token(Token = "0x6000B65")]
	[Address(RVA = "0xC44344", Offset = "0xC44344", VA = "0xC44344")]
	public void Awake()
	{
	}

	[Token(Token = "0x6000B66")]
	[Address(RVA = "0xC4465C", Offset = "0xC4465C", VA = "0xC4465C")]
	public void SetupChildGrabbables(Component[] inAdditionalComponents)
	{
	}

	[Token(Token = "0x6000B67")]
	[Address(RVA = "0xC44350", Offset = "0xC44350", VA = "0xC44350")]
	public void SetChildrenActive(bool newActive, bool forceApply = false)
	{
	}

	[Token(Token = "0x6000B68")]
	[Address(RVA = "0xC44E30", Offset = "0xC44E30", VA = "0xC44E30")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x989F18", Offset = "0x989F18")]
	private IEnumerator CheckShouldDisableChildren()
	{
		return null;
	}

	[Token(Token = "0x6000B69")]
	[Address(RVA = "0xC44ED8", Offset = "0xC44ED8", VA = "0xC44ED8")]
	public bool HaveChildGrabbables()
	{
		return default(bool);
	}

	[Token(Token = "0x6000B6A")]
	[Address(RVA = "0xC44EF8", Offset = "0xC44EF8", VA = "0xC44EF8")]
	public bool IsEnabled()
	{
		return default(bool);
	}

	[Token(Token = "0x6000B6B")]
	[Address(RVA = "0xC44D50", Offset = "0xC44D50", VA = "0xC44D50")]
	private void OnMainChildGrabbed(Grabbable grabbable)
	{
	}

	[Token(Token = "0x6000B6C")]
	[Address(RVA = "0xC44F3C", Offset = "0xC44F3C", VA = "0xC44F3C")]
	private void OnMainChildReleased(Grabbable grabbable)
	{
	}

	[Token(Token = "0x6000B6D")]
	[Address(RVA = "0xC44DF4", Offset = "0xC44DF4", VA = "0xC44DF4")]
	private void OnMainChildStashed()
	{
	}

	[Token(Token = "0x6000B6E")]
	[Address(RVA = "0xC44FD8", Offset = "0xC44FD8", VA = "0xC44FD8")]
	private void OnMainChildUnstashed()
	{
	}

	[Token(Token = "0x6000B6F")]
	[Address(RVA = "0xC44FE8", Offset = "0xC44FE8", VA = "0xC44FE8")]
	public void Touch()
	{
	}

	[Token(Token = "0x6000B70")]
	[Address(RVA = "0xC44FF4", Offset = "0xC44FF4", VA = "0xC44FF4")]
	public void OnChildGrabbed(Grabbable childGrabbable)
	{
	}

	[Token(Token = "0x6000B71")]
	[Address(RVA = "0xC452BC", Offset = "0xC452BC", VA = "0xC452BC")]
	public bool MainChildIsStashed()
	{
		return default(bool);
	}

	[Token(Token = "0x6000B72")]
	[Address(RVA = "0xC4539C", Offset = "0xC4539C", VA = "0xC4539C")]
	public ChildGrabbableToggler()
	{
	}

	[Token(Token = "0x6000B73")]
	[Address(RVA = "0xC453AC", Offset = "0xC453AC", VA = "0xC453AC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x989F7C", Offset = "0x989F7C")]
	private bool <SetupChildGrabbables>b__8_0(IGrabbable arrayItem)
	{
		return default(bool);
	}
}
[Token(Token = "0x2000213")]
public class Bobber : MonoBehaviour
{
	[Token(Token = "0x2000214")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9722A4", Offset = "0x9722A4")]
	private sealed class <AnimateBobberResetToRod>d__52 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000BF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000BF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000BF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Bobber <>4__this;

		[Token(Token = "0x4000BFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float customYOffset;

		[Token(Token = "0x4000BFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float duration;

		[Token(Token = "0x4000BFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Vector3 <dir>5__2;

		[Token(Token = "0x4000BFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float <speed>5__3;

		[Token(Token = "0x17000129")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000BA1")]
			[Address(RVA = "0xF6DEEC", Offset = "0xF6DEEC", VA = "0xF6DEEC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700012A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000BA3")]
			[Address(RVA = "0xF6DF54", Offset = "0xF6DF54", VA = "0xF6DF54", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000B9E")]
		[Address(RVA = "0xF6D000", Offset = "0xF6D000", VA = "0xF6D000")]
		[DebuggerHidden]
		public <AnimateBobberResetToRod>d__52(int <>1__state)
		{
		}

		[Token(Token = "0x6000B9F")]
		[Address(RVA = "0xF6DA88", Offset = "0xF6DA88", VA = "0xF6DA88", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000BA0")]
		[Address(RVA = "0xF6DA8C", Offset = "0xF6DA8C", VA = "0xF6DA8C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000BA2")]
		[Address(RVA = "0xF6DEF4", Offset = "0xF6DEF4", VA = "0xF6DEF4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000215")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9722B4", Offset = "0x9722B4")]
	private sealed class <ReactivateBobberPhysicsAfterDuration>d__66 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000BFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000BFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000C00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float duration;

		[Token(Token = "0x4000C01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Bobber <>4__this;

		[Token(Token = "0x1700012B")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000BA7")]
			[Address(RVA = "0xF6E03C", Offset = "0xF6E03C", VA = "0xF6E03C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700012C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000BA9")]
			[Address(RVA = "0xF6E0A4", Offset = "0xF6E0A4", VA = "0xF6E0A4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000BA4")]
		[Address(RVA = "0xF6D9C8", Offset = "0xF6D9C8", VA = "0xF6D9C8")]
		[DebuggerHidden]
		public <ReactivateBobberPhysicsAfterDuration>d__66(int <>1__state)
		{
		}

		[Token(Token = "0x6000BA5")]
		[Address(RVA = "0xF6DF5C", Offset = "0xF6DF5C", VA = "0xF6DF5C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000BA6")]
		[Address(RVA = "0xF6DF60", Offset = "0xF6DF60", VA = "0xF6DF60", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000BA8")]
		[Address(RVA = "0xF6E044", Offset = "0xF6E044", VA = "0xF6E044", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000BD8")]
	private const float BobberTargetMaxDistance = 0.01f;

	[Token(Token = "0x4000BD9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Rigidbody rb;

	[Token(Token = "0x4000BDA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Tool_FishingRod rod;

	[Token(Token = "0x4000BDB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform lineAttachPoint;

	[Token(Token = "0x4000BDC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform fishAttachPoint;

	[Token(Token = "0x4000BDD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ConfigurableJoint joint;

	[Token(Token = "0x4000BDE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private ParticleSystem waterSplash;

	[Token(Token = "0x4000BDF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private ParticleSystem fishBiteLureEffect;

	[Token(Token = "0x4000BE0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private ParticleSystem fishReeledInEffect;

	[Token(Token = "0x4000BE1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private ParticleSystem fishSwimmingFastEffect;

	[Token(Token = "0x4000BE2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private Collider bobberCollider;

	[Token(Token = "0x4000BE3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Vector3 origStruggleScale;

	[Token(Token = "0x4000BE4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public NeatAudioCue throwSound;

	[Token(Token = "0x4000BE5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public NeatAudioCue retractSound;

	[Token(Token = "0x4000BE6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public NeatAudioCue splashSound;

	[NonSerialized]
	[Token(Token = "0x4000BE7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public NeatAudioPlayer soundPlayer;

	[Token(Token = "0x4000BE8")]
	private const float FLOAT_STRENGTH = 50f;

	[Token(Token = "0x4000BE9")]
	private const float FLOAT_Y_OFFSET = 0.21f;

	[Token(Token = "0x4000BEA")]
	private const float DRAG_FLOATING = 5f;

	[Token(Token = "0x4000BEB")]
	private const float DRAG_AIR = 1f;

	[Token(Token = "0x4000BEC")]
	private const float DRAG_AIR_BUBBLE_ATTACHED = 5f;

	[Token(Token = "0x4000BED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private Tweener scaleAnim;

	[Token(Token = "0x4000BEE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private Rigidbody attachedToBubble;

	[Token(Token = "0x4000BEF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private bool attachedBubbleIsFish;

	[Token(Token = "0x4000BF0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private float m_attachYOffset;

	[Token(Token = "0x4000BF1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private float m_additionalBobberYOffset;

	[Token(Token = "0x4000BF2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	private Vector3 bubbleOffset;

	[Token(Token = "0x4000BF3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private bool isAnimatingRetraction;

	[Token(Token = "0x4000BF4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private Rigidbody fishingRodRb;

	[Token(Token = "0x4000BF5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private Coroutine m_animatieBobberRoutine;

	[Token(Token = "0x4000BF6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private Coroutine m_activateBobberCollisionRoutine;

	[Token(Token = "0x17000128")]
	public Rigidbody AttachedFish
	{
		[Token(Token = "0x6000B7A")]
		[Address(RVA = "0xF6B59C", Offset = "0xF6B59C", VA = "0xF6B59C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000B7B")]
	[Address(RVA = "0xF6B5A4", Offset = "0xF6B5A4", VA = "0xF6B5A4")]
	public Collider GetCollider()
	{
		return null;
	}

	[Token(Token = "0x6000B7C")]
	[Address(RVA = "0xF6B5AC", Offset = "0xF6B5AC", VA = "0xF6B5AC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000B7D")]
	[Address(RVA = "0xF6B614", Offset = "0xF6B614", VA = "0xF6B614")]
	public void SetRod(Tool_FishingRod rod)
	{
	}

	[Token(Token = "0x6000B7E")]
	[Address(RVA = "0xF6B668", Offset = "0xF6B668", VA = "0xF6B668")]
	private void SplashAt(Vector3 pos)
	{
	}

	[Token(Token = "0x6000B7F")]
	[Address(RVA = "0xF6B7E0", Offset = "0xF6B7E0", VA = "0xF6B7E0")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000B80")]
	[Address(RVA = "0xF6B890", Offset = "0xF6B890", VA = "0xF6B890")]
	public bool CanBeThrown()
	{
		return default(bool);
	}

	[Token(Token = "0x6000B81")]
	[Address(RVA = "0xF6B8A0", Offset = "0xF6B8A0", VA = "0xF6B8A0")]
	public void ResetWaterPhysics()
	{
	}

	[Token(Token = "0x6000B82")]
	[Address(RVA = "0xF6B938", Offset = "0xF6B938", VA = "0xF6B938")]
	public void UpdateWaterPhysics()
	{
	}

	[Token(Token = "0x6000B83")]
	[Address(RVA = "0xF6BC90", Offset = "0xF6BC90", VA = "0xF6BC90")]
	public void UpdateAttachedBubble()
	{
	}

	[Token(Token = "0x6000B84")]
	[Address(RVA = "0xF6BEF8", Offset = "0xF6BEF8", VA = "0xF6BEF8")]
	public void DetachFromFishBubble(bool kinematic)
	{
	}

	[Token(Token = "0x6000B85")]
	[Address(RVA = "0xF6BFB8", Offset = "0xF6BFB8", VA = "0xF6BFB8")]
	public void AttachToComponent(Fish fish, Rigidbody fishRb)
	{
	}

	[Token(Token = "0x6000B86")]
	[Address(RVA = "0xF6C3DC", Offset = "0xF6C3DC", VA = "0xF6C3DC")]
	public void AttachToComponent(Grabbable grabbable, Rigidbody grabbableRb)
	{
	}

	[Token(Token = "0x6000B87")]
	[Address(RVA = "0xF6C1B0", Offset = "0xF6C1B0", VA = "0xF6C1B0")]
	private void SetBubbleOffsets(Fish fish, Rigidbody fishRb)
	{
	}

	[Token(Token = "0x6000B88")]
	[Address(RVA = "0xF6C434", Offset = "0xF6C434", VA = "0xF6C434")]
	private void SetBubbleOffset(Grabbable grabbable, Rigidbody grabbableRb)
	{
	}

	[Token(Token = "0x6000B89")]
	[Address(RVA = "0xF6C028", Offset = "0xF6C028", VA = "0xF6C028")]
	private void PrepBobberForAttaching()
	{
	}

	[Token(Token = "0x6000B8A")]
	[Address(RVA = "0xF6C0E4", Offset = "0xF6C0E4", VA = "0xF6C0E4")]
	private void IgnoreBobbleCollisionOnCaughtObject(Component component)
	{
	}

	[Token(Token = "0x6000B8B")]
	[Address(RVA = "0xF6C784", Offset = "0xF6C784", VA = "0xF6C784")]
	public void Throw(Vector3 pos, Vector3 velocity)
	{
	}

	[Token(Token = "0x6000B8C")]
	[Address(RVA = "0xF6C9D0", Offset = "0xF6C9D0", VA = "0xF6C9D0")]
	private void SetJointConnected(bool connected)
	{
	}

	[Token(Token = "0x6000B8D")]
	[Address(RVA = "0xF6CA34", Offset = "0xF6CA34", VA = "0xF6CA34")]
	public void ResetToRod(float animDuration = 0f, float customYOffset = 0f)
	{
	}

	[Token(Token = "0x6000B8E")]
	[Address(RVA = "0xF6CDA4", Offset = "0xF6CDA4", VA = "0xF6CDA4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x989FDC", Offset = "0x989FDC")]
	private IEnumerator AnimateBobberResetToRod(float duration, float customYOffset = 0f)
	{
		return null;
	}

	[Token(Token = "0x6000B8F")]
	[Address(RVA = "0xF6CE34", Offset = "0xF6CE34", VA = "0xF6CE34")]
	private void UpdateJointPhysics(bool connected, float customYOffset = 0f)
	{
	}

	[Token(Token = "0x6000B90")]
	[Address(RVA = "0xF6D02C", Offset = "0xF6D02C", VA = "0xF6D02C")]
	public void AddBobForce(Vector3 force)
	{
	}

	[Token(Token = "0x6000B91")]
	[Address(RVA = "0xF6D04C", Offset = "0xF6D04C", VA = "0xF6D04C")]
	public void OnThrownIntoWater()
	{
	}

	[Token(Token = "0x6000B92")]
	[Address(RVA = "0xF6D198", Offset = "0xF6D198", VA = "0xF6D198")]
	public void OnFishGrabbedOn()
	{
	}

	[Token(Token = "0x6000B93")]
	[Address(RVA = "0xF6D320", Offset = "0xF6D320", VA = "0xF6D320")]
	public void OnFishNibbled()
	{
	}

	[Token(Token = "0x6000B94")]
	[Address(RVA = "0xF6D3C4", Offset = "0xF6D3C4", VA = "0xF6D3C4")]
	public void OnBobberOutOfWater(bool playSound = true)
	{
	}

	[Token(Token = "0x6000B95")]
	[Address(RVA = "0xF6D550", Offset = "0xF6D550", VA = "0xF6D550")]
	public void OnFishStartedPulling()
	{
	}

	[Token(Token = "0x6000B96")]
	[Address(RVA = "0xF6D5A0", Offset = "0xF6D5A0", VA = "0xF6D5A0")]
	public void OnFishStoppedPulling()
	{
	}

	[Token(Token = "0x6000B97")]
	[Address(RVA = "0xF6D5F0", Offset = "0xF6D5F0", VA = "0xF6D5F0")]
	public void OnPlayerDroppedRod()
	{
	}

	[Token(Token = "0x6000B98")]
	[Address(RVA = "0xF6D680", Offset = "0xF6D680", VA = "0xF6D680")]
	public void OnPlayerPickedUpRod()
	{
	}

	[Token(Token = "0x6000B99")]
	[Address(RVA = "0xF6D738", Offset = "0xF6D738", VA = "0xF6D738")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x6000B9A")]
	[Address(RVA = "0xF6D838", Offset = "0xF6D838", VA = "0xF6D838")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000B9B")]
	[Address(RVA = "0xF6CD24", Offset = "0xF6CD24", VA = "0xF6CD24")]
	public void DeactivateCollision(float duration)
	{
	}

	[Token(Token = "0x6000B9C")]
	[Address(RVA = "0xF6D93C", Offset = "0xF6D93C", VA = "0xF6D93C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x98B040", Offset = "0x98B040")]
	private IEnumerator ReactivateBobberPhysicsAfterDuration(float duration)
	{
		return null;
	}

	[Token(Token = "0x6000B9D")]
	[Address(RVA = "0xF6D9F4", Offset = "0xF6D9F4", VA = "0xF6D9F4")]
	public Bobber()
	{
	}
}
[Token(Token = "0x2000216")]
public class Catchable : MonoBehaviour
{
	[Token(Token = "0x4000C02")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x978B0C", Offset = "0x978B0C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x978B0C", Offset = "0x978B0C")]
	public double catchWeight;

	[Token(Token = "0x4000C03")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Rigidbody rb;

	[Token(Token = "0x4000C04")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject bubble;

	[Token(Token = "0x6000BAA")]
	[Address(RVA = "0xC431E4", Offset = "0xC431E4", VA = "0xC431E4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000BAB")]
	[Address(RVA = "0xC43244", Offset = "0xC43244", VA = "0xC43244")]
	private void SetBubbleMode(bool on)
	{
	}

	[Token(Token = "0x6000BAC")]
	[Address(RVA = "0xC43290", Offset = "0xC43290", VA = "0xC43290")]
	public void SetCatchWeight(float value)
	{
	}

	[Token(Token = "0x6000BAD")]
	[Address(RVA = "0xC4329C", Offset = "0xC4329C", VA = "0xC4329C")]
	public void OnGrab()
	{
	}

	[Token(Token = "0x6000BAE")]
	[Address(RVA = "0xC432A4", Offset = "0xC432A4", VA = "0xC432A4")]
	public Catchable()
	{
	}
}
[Token(Token = "0x2000217")]
public class Fish : SaveableComponent, IInitializable
{
	[Token(Token = "0x2000218")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9722C4", Offset = "0x9722C4")]
	private sealed class <RandomPondMovement>d__30 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000C18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000C19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000C1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Fish <>4__this;

		[Token(Token = "0x4000C1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <currentSpeed>5__2;

		[Token(Token = "0x4000C1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <targetSpeed>5__3;

		[Token(Token = "0x4000C1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Vector3 <newPos>5__4;

		[Token(Token = "0x4000C1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private Vector3 <displ>5__5;

		[Token(Token = "0x1700012E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000BCA")]
			[Address(RVA = "0xC9D830", Offset = "0xC9D830", VA = "0xC9D830", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700012F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000BCC")]
			[Address(RVA = "0xC9D898", Offset = "0xC9D898", VA = "0xC9D898", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000BC7")]
		[Address(RVA = "0xC9C0EC", Offset = "0xC9C0EC", VA = "0xC9C0EC")]
		[DebuggerHidden]
		public <RandomPondMovement>d__30(int <>1__state)
		{
		}

		[Token(Token = "0x6000BC8")]
		[Address(RVA = "0xC9CEAC", Offset = "0xC9CEAC", VA = "0xC9CEAC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000BC9")]
		[Address(RVA = "0xC9CEB0", Offset = "0xC9CEB0", VA = "0xC9CEB0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000BCB")]
		[Address(RVA = "0xC9D838", Offset = "0xC9D838", VA = "0xC9D838", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000219")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9722D4", Offset = "0x9722D4")]
	private sealed class <SwimAway>d__40 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000C1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000C20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000C21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Fish <>4__this;

		[Token(Token = "0x4000C22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Vector3 <dir>5__2;

		[Token(Token = "0x4000C23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float <duration>5__3;

		[Token(Token = "0x4000C24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float <speed>5__4;

		[Token(Token = "0x17000130")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000BD0")]
			[Address(RVA = "0xC9DBEC", Offset = "0xC9DBEC", VA = "0xC9DBEC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000131")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000BD2")]
			[Address(RVA = "0xC9DC54", Offset = "0xC9DC54", VA = "0xC9DC54", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000BCD")]
		[Address(RVA = "0xC9CD64", Offset = "0xC9CD64", VA = "0xC9CD64")]
		[DebuggerHidden]
		public <SwimAway>d__40(int <>1__state)
		{
		}

		[Token(Token = "0x6000BCE")]
		[Address(RVA = "0xC9D8A0", Offset = "0xC9D8A0", VA = "0xC9D8A0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000BCF")]
		[Address(RVA = "0xC9D8A4", Offset = "0xC9D8A4", VA = "0xC9D8A4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000BD1")]
		[Address(RVA = "0xC9DBF4", Offset = "0xC9DBF4", VA = "0xC9DBF4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000C05")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Rigidbody rb;

	[Token(Token = "0x4000C06")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public MeshRenderer bubble;

	[Token(Token = "0x4000C07")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Animator anim;

	[Token(Token = "0x4000C08")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GradientColorer gradient;

	[Token(Token = "0x4000C09")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Grabbable grabbable;

	[Token(Token = "0x4000C0A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Material[] fishMaterials;

	[Token(Token = "0x4000C0B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private Collider[] colliders;

	[Token(Token = "0x4000C0C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private FishStruggleStats m_struggleStats;

	[Token(Token = "0x4000C0D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private PlantColors fishColors;

	[Token(Token = "0x4000C0E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private bool initialized;

	[Token(Token = "0x4000C0F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private Pond pond;

	[Token(Token = "0x4000C10")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private bool isAttachedToFishingRod;

	[Token(Token = "0x4000C11")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static string FishAnim_SpeedNormalized;

	[Token(Token = "0x4000C12")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static string FishAnim_OnLure;

	[Token(Token = "0x4000C13")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public Action OnStartSwimAway;

	[Token(Token = "0x4000C14")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public Action OnSwimAway;

	[Token(Token = "0x4000C15")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private Tweener twMoveLateral;

	[Token(Token = "0x4000C16")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private Tweener twPlopVertical;

	[Token(Token = "0x4000C17")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private Tweener twMoveRotate;

	[Token(Token = "0x1700012D")]
	public bool IsInPond
	{
		[Token(Token = "0x6000BAF")]
		[Address(RVA = "0xC9B7E4", Offset = "0xC9B7E4", VA = "0xC9B7E4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000BB0")]
	[Address(RVA = "0xC9B854", Offset = "0xC9B854", VA = "0xC9B854")]
	public void SetBubbleMode(bool on)
	{
	}

	[Token(Token = "0x6000BB1")]
	[Address(RVA = "0xC9B91C", Offset = "0xC9B91C", VA = "0xC9B91C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000BB2")]
	[Address(RVA = "0xC9BACC", Offset = "0xC9BACC", VA = "0xC9BACC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000BB3")]
	[Address(RVA = "0xC9BC24", Offset = "0xC9BC24", VA = "0xC9BC24", Slot = "5")]
	public void Initialize()
	{
	}

	[Token(Token = "0x6000BB4")]
	[Address(RVA = "0xC9BF5C", Offset = "0xC9BF5C", VA = "0xC9BF5C")]
	public Collider[] GetColliders()
	{
		return null;
	}

	[Token(Token = "0x6000BB5")]
	[Address(RVA = "0xC9BA6C", Offset = "0xC9BA6C", VA = "0xC9BA6C")]
	private void StopAllTweeners()
	{
	}

	[Token(Token = "0x6000BB6")]
	[Address(RVA = "0xC9BFBC", Offset = "0xC9BFBC", VA = "0xC9BFBC")]
	public void OnGrab(Grabbable grabbable)
	{
	}

	[Token(Token = "0x6000BB7")]
	[Address(RVA = "0xC9C010", Offset = "0xC9C010", VA = "0xC9C010")]
	public void SetBubbleNotCollidableWithWater()
	{
	}

	[Token(Token = "0x6000BB8")]
	[Address(RVA = "0xC9C040", Offset = "0xC9C040", VA = "0xC9C040")]
	public void OnDrop(Grabbable grabbable)
	{
	}

	[Token(Token = "0x6000BB9")]
	[Address(RVA = "0xC9C070", Offset = "0xC9C070", VA = "0xC9C070")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x98B144", Offset = "0x98B144")]
	private IEnumerator RandomPondMovement()
	{
		return null;
	}

	[Token(Token = "0x6000BBA")]
	[Address(RVA = "0xC9C118", Offset = "0xC9C118", VA = "0xC9C118")]
	public void PlopInto(Pond pond)
	{
	}

	[Token(Token = "0x6000BBB")]
	[Address(RVA = "0xC9C560", Offset = "0xC9C560", VA = "0xC9C560")]
	private void SetPosXZ(Vector2 v)
	{
	}

	[Token(Token = "0x6000BBC")]
	[Address(RVA = "0xC9C5D4", Offset = "0xC9C5D4", VA = "0xC9C5D4")]
	private Vector2 GetPosXZ()
	{
		return default(Vector2);
	}

	[Token(Token = "0x6000BBD")]
	[Address(RVA = "0xC9C600", Offset = "0xC9C600", VA = "0xC9C600", Slot = "4")]
	public override ComponentState CreateState()
	{
		return null;
	}

	[Token(Token = "0x6000BBE")]
	[Address(RVA = "0xC9C894", Offset = "0xC9C894", VA = "0xC9C894")]
	public void RandomizeColors()
	{
	}

	[Token(Token = "0x6000BBF")]
	[Address(RVA = "0xC9CA98", Offset = "0xC9CA98", VA = "0xC9CA98")]
	public void RandomizeRareColors()
	{
	}

	[Token(Token = "0x6000BC0")]
	[Address(RVA = "0xC9C964", Offset = "0xC9C964", VA = "0xC9C964")]
	private void CreateColors(float darkHue, float midHue, float brightHue, out Color dark, out Color mid, out Color bright)
	{
	}

	[Token(Token = "0x6000BC1")]
	[Address(RVA = "0xC9CBA0", Offset = "0xC9CBA0", VA = "0xC9CBA0")]
	public void SetIsAttachedToFishingRod(bool attached)
	{
	}

	[Token(Token = "0x6000BC2")]
	[Address(RVA = "0xC9CBAC", Offset = "0xC9CBAC", VA = "0xC9CBAC")]
	public void SwimAwayIntoOcean()
	{
	}

	[Token(Token = "0x6000BC3")]
	[Address(RVA = "0xC9CCE8", Offset = "0xC9CCE8", VA = "0xC9CCE8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x98B1A8", Offset = "0x98B1A8")]
	private IEnumerator SwimAway()
	{
		return null;
	}

	[Token(Token = "0x6000BC4")]
	[Address(RVA = "0xC9CD90", Offset = "0xC9CD90", VA = "0xC9CD90")]
	public Fish()
	{
	}

	[Token(Token = "0x6000BC6")]
	[Address(RVA = "0xC9CE80", Offset = "0xC9CE80", VA = "0xC9CE80")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x98B20C", Offset = "0x98B20C")]
	private void <PlopInto>b__31_0()
	{
	}
}
[Serializable]
[Token(Token = "0x200021A")]
public class FishState : ComponentState
{
	[Token(Token = "0x4000C25")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Color32Serializable dark;

	[Token(Token = "0x4000C26")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public Color32Serializable mid;

	[Token(Token = "0x4000C27")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Color32Serializable bright;

	[Token(Token = "0x6000BD3")]
	[Address(RVA = "0xC9C800", Offset = "0xC9C800", VA = "0xC9C800")]
	public FishState(Color32 dark, Color32 mid, Color32 bright)
	{
	}
}
[Token(Token = "0x200021B")]
public class FishCatchMovement
{
	[Token(Token = "0x4000C28")]
	private const float CATCH_TIME = 20f;

	[Token(Token = "0x4000C29")]
	private const float SWIM_SPEED_FAST = 4f;

	[Token(Token = "0x4000C2A")]
	private const float SWIM_SPEED_SLOW = 0.2f;

	[Token(Token = "0x4000C2B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static float REEL_IN_SPEED;

	[Token(Token = "0x4000C2C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private Bobber bobber;

	[Token(Token = "0x4000C2D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Vector3 chaseTangent;

	[Token(Token = "0x4000C2E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Vector3 dirFromRod;

	[Token(Token = "0x4000C2F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Vector3 randomSwimSlowlyDirection;

	[Token(Token = "0x4000C30")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float chaseTimeCurrent;

	[Token(Token = "0x4000C31")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float timeSpentReeling;

	[Token(Token = "0x4000C32")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private float timeLeftInCurrentDir;

	[Token(Token = "0x4000C33")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float timeSpentSwimming;

	[Token(Token = "0x4000C34")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private float fishSwimSpeed;

	[Token(Token = "0x4000C35")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool isReeling;

	[Token(Token = "0x4000C36")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private int numTimesFleeing;

	[Token(Token = "0x4000C37")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float timeToSpendInCurrentState;

	[Token(Token = "0x4000C38")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private float timeSpentReelingIncorrectly;

	[Token(Token = "0x4000C39")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private FishStruggleStats m_currentFishStruggleStats;

	[Token(Token = "0x4000C3A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private FishingState fishingState;

	[Token(Token = "0x4000C3B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Vector3 centerPos;

	[Token(Token = "0x4000C3C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private Vector3 targetCenterPos;

	[Token(Token = "0x4000C3D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private float currentAngle;

	[Token(Token = "0x4000C3E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private float dir;

	[Token(Token = "0x4000C3F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private float currentRadius;

	[Token(Token = "0x4000C40")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private float targetRadius;

	[Token(Token = "0x4000C41")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private float randomTargetAngle;

	[Token(Token = "0x4000C42")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	private float currentSpeed;

	[Token(Token = "0x4000C43")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private Vector3 currentFishFacingDir;

	[Token(Token = "0x17000132")]
	public bool FishIsStill
	{
		[Token(Token = "0x6000BD5")]
		[Address(RVA = "0xC9DD10", Offset = "0xC9DD10", VA = "0xC9DD10")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000BD4")]
	[Address(RVA = "0xC9DC5C", Offset = "0xC9DC5C", VA = "0xC9DC5C")]
	public float CatchProgress()
	{
		return default(float);
	}

	[Token(Token = "0x6000BD6")]
	[Address(RVA = "0xC9DD34", Offset = "0xC9DD34", VA = "0xC9DD34")]
	private float GetFishDistanceTraveled()
	{
		return default(float);
	}

	[Token(Token = "0x6000BD7")]
	[Address(RVA = "0xC9DD54", Offset = "0xC9DD54", VA = "0xC9DD54")]
	public bool FishGotAway()
	{
		return default(bool);
	}

	[Token(Token = "0x6000BD8")]
	[Address(RVA = "0xC9DE04", Offset = "0xC9DE04", VA = "0xC9DE04")]
	public bool LineSnapped()
	{
		return default(bool);
	}

	[Token(Token = "0x6000BD9")]
	[Address(RVA = "0xC9DE94", Offset = "0xC9DE94", VA = "0xC9DE94")]
	public void StartChasing(Vector3 chaseTangent, Vector3 dirFromRod, Bobber bobber)
	{
	}

	[Token(Token = "0x6000BDA")]
	[Address(RVA = "0xC9DF18", Offset = "0xC9DF18", VA = "0xC9DF18")]
	public FishingState UpdateMovement(Vector3 dragDir, float reelForce, PlayerHand hand, FishingEffects effects)
	{
		return null;
	}

	[Token(Token = "0x6000BDB")]
	[Address(RVA = "0xC9EF10", Offset = "0xC9EF10", VA = "0xC9EF10")]
	private void UpdateCircleMovement(Vector3 dirToPlayer)
	{
	}

	[Token(Token = "0x6000BDC")]
	[Address(RVA = "0xC9EAE4", Offset = "0xC9EAE4", VA = "0xC9EAE4")]
	private void GenerateNewCirclePos()
	{
	}

	[Token(Token = "0x6000BDD")]
	[Address(RVA = "0xC9EC1C", Offset = "0xC9EC1C", VA = "0xC9EC1C")]
	private Vector3 RandomizeNewDir(Vector3 currDragDir)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000BDE")]
	[Address(RVA = "0xC9F594", Offset = "0xC9F594", VA = "0xC9F594")]
	public FishCatchMovement()
	{
	}
}
[Token(Token = "0x200021C")]
public enum FishSwimState
{
	[Token(Token = "0x4000C45")]
	Fleeing,
	[Token(Token = "0x4000C46")]
	Still,
	[Token(Token = "0x4000C47")]
	None
}
[Token(Token = "0x200021D")]
public class FishingState
{
	[Token(Token = "0x4000C48")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public FishSwimState swimState;

	[Token(Token = "0x4000C49")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float swimSpeed;

	[Token(Token = "0x4000C4A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float progressInCurrentState;

	[Token(Token = "0x4000C4B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float timeSpentReelingIncorrectly;

	[Token(Token = "0x4000C4C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float counterActionAmount;

	[Token(Token = "0x4000C4D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float totalTimeElapsed;

	[Token(Token = "0x4000C4E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool playerIsReelingIn;

	[Token(Token = "0x6000BE0")]
	[Address(RVA = "0xCA21EC", Offset = "0xCA21EC", VA = "0xCA21EC")]
	public static void Clone(FishingState src, FishingState dst)
	{
	}

	[Token(Token = "0x6000BE1")]
	[Address(RVA = "0xC9DF00", Offset = "0xC9DF00", VA = "0xC9DF00")]
	public void ResetAll()
	{
	}

	[Token(Token = "0x6000BE2")]
	[Address(RVA = "0xC9F670", Offset = "0xC9F670", VA = "0xC9F670")]
	public FishingState()
	{
	}
}
[Token(Token = "0x200021E")]
[ExecuteAlways]
public class FishRegion : MonoBehaviour
{
	[Token(Token = "0x200021F")]
	public delegate void OnFishSpawnedCallback();

	[Serializable]
	[Token(Token = "0x2000220")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9722F4", Offset = "0x9722F4")]
	private sealed class <>c
	{
		[Token(Token = "0x4000C59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4000C5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Func<FishRegion, float> <>9__12_0;

		[Token(Token = "0x6000BF0")]
		[Address(RVA = "0xC9FEA0", Offset = "0xC9FEA0", VA = "0xC9FEA0")]
		public <>c()
		{
		}

		[Token(Token = "0x6000BF1")]
		[Address(RVA = "0xC9FEA8", Offset = "0xC9FEA8", VA = "0xC9FEA8")]
		internal float <OnEnable>b__12_0(FishRegion x)
		{
			return default(float);
		}
	}

	[Token(Token = "0x4000C4F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static List<FishRegion> all;

	[Token(Token = "0x4000C50")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float radius;

	[Token(Token = "0x4000C51")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x978B80", Offset = "0x978B80")]
	public float probability;

	[Token(Token = "0x4000C52")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float priority;

	[Token(Token = "0x4000C53")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x978B98", Offset = "0x978B98")]
	public AssetReference[] fishInRegion;

	[Token(Token = "0x4000C54")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x978BD0", Offset = "0x978BD0")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x978BD0", Offset = "0x978BD0")]
	public double[] fishCatchWeights;

	[Token(Token = "0x4000C55")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Vector3 posSelf;

	[Token(Token = "0x4000C56")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private float radiusSq;

	[Token(Token = "0x4000C57")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Scene sceneToSpawnFishIn;

	[Token(Token = "0x4000C58")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public OnFishSpawnedCallback OnFishSpawned;

	[Token(Token = "0x6000BE3")]
	[Address(RVA = "0xC9F6D8", Offset = "0xC9F6D8", VA = "0xC9F6D8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000BE4")]
	[Address(RVA = "0xC9F7C8", Offset = "0xC9F7C8", VA = "0xC9F7C8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000BE5")]
	[Address(RVA = "0xC9F984", Offset = "0xC9F984", VA = "0xC9F984")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000BE6")]
	[Address(RVA = "0xC9FA08", Offset = "0xC9FA08", VA = "0xC9FA08")]
	public bool TryGetFish(Vector3 pos, out AssetReference fishPrefab)
	{
		return default(bool);
	}

	[Token(Token = "0x6000BE7")]
	[Address(RVA = "0xC9FBE0", Offset = "0xC9FBE0", VA = "0xC9FBE0")]
	public static bool TryGetFishAt(Vector3 pos, out AssetReference fishPrefab, out FishRegion fishRegion)
	{
		return default(bool);
	}

	[Token(Token = "0x6000BE8")]
	[Address(RVA = "0xC9FB38", Offset = "0xC9FB38", VA = "0xC9FB38")]
	private AssetReference WhatsTheFish()
	{
		return null;
	}

	[Token(Token = "0x6000BE9")]
	[Address(RVA = "0xC9FDAC", Offset = "0xC9FDAC", VA = "0xC9FDAC")]
	public FishRegion()
	{
	}
}
[Token(Token = "0x2000221")]
public class FishingArrow : MonoBehaviour
{
	[Token(Token = "0x4000C5B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly int color;

	[Token(Token = "0x4000C5C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public MeshRenderer rnd;

	[Token(Token = "0x4000C5D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private MaterialPropertyBlock mpb;

	[Token(Token = "0x17000133")]
	public Color ArrowColor
	{
		[Token(Token = "0x6000BF2")]
		[Address(RVA = "0xCA0118", Offset = "0xCA0118", VA = "0xCA0118")]
		set
		{
		}
	}

	[Token(Token = "0x6000BF3")]
	[Address(RVA = "0xCA021C", Offset = "0xCA021C", VA = "0xCA021C")]
	public FishingArrow()
	{
	}
}
[Token(Token = "0x2000222")]
public class FishingCrank : MonoBehaviour, IGrabbable, IInitializable, IValidateCustom, IValidate
{
	[Token(Token = "0x4000C5E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Tool_FishingRod rod;

	[Token(Token = "0x4000C5F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Transform grabPoint;

	[Token(Token = "0x4000C60")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Collider[] colliders;

	[Token(Token = "0x4000C61")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private GrabbableOutline outline;

	[Token(Token = "0x4000C62")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private PlayerHand heldByHand;

	[Token(Token = "0x4000C63")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Vector3 ROTATION_AXIS;

	[Token(Token = "0x4000C64")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private Vector3 CRANK_HANDLE_DIR;

	[Token(Token = "0x4000C65")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Vector3 PERPENDICULAR_VEC;

	[Token(Token = "0x4000C66")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private float MAX_SPEED;

	[Token(Token = "0x4000C67")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x978C54", Offset = "0x978C54")]
	private float <CurrentSpeed>k__BackingField;

	[Token(Token = "0x4000C68")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x978C64", Offset = "0x978C64")]
	private float <PreviousSpeed>k__BackingField;

	[Token(Token = "0x4000C69")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private float currentAngle;

	[Token(Token = "0x4000C6A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private float rotationSpeed;

	[Token(Token = "0x4000C6B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Vector3 prevPosOnPlane;

	[Token(Token = "0x17000134")]
	public float CurrentSpeed
	{
		[Token(Token = "0x6000BF5")]
		[Address(RVA = "0xCA0288", Offset = "0xCA0288", VA = "0xCA0288")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x98B2BC", Offset = "0x98B2BC")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000BF6")]
		[Address(RVA = "0xCA0290", Offset = "0xCA0290", VA = "0xCA0290")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x98B2CC", Offset = "0x98B2CC")]
		private set
		{
		}
	}

	[Token(Token = "0x17000135")]
	public float PreviousSpeed
	{
		[Token(Token = "0x6000BF7")]
		[Address(RVA = "0xCA0298", Offset = "0xCA0298", VA = "0xCA0298")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x98B2DC", Offset = "0x98B2DC")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000BF8")]
		[Address(RVA = "0xCA02A0", Offset = "0xCA02A0", VA = "0xCA02A0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x98B2EC", Offset = "0x98B2EC")]
		private set
		{
		}
	}

	[Token(Token = "0x6000BF9")]
	[Address(RVA = "0xCA02A8", Offset = "0xCA02A8", VA = "0xCA02A8", Slot = "15")]
	public void Initialize()
	{
	}

	[Token(Token = "0x6000BFA")]
	[Address(RVA = "0xCA03B8", Offset = "0xCA03B8", VA = "0xCA03B8", Slot = "4")]
	public int GetCurrentPriority()
	{
		return default(int);
	}

	[Token(Token = "0x6000BFB")]
	[Address(RVA = "0xCA0478", Offset = "0xCA0478", VA = "0xCA0478", Slot = "16")]
	public PlayerHand GetHeldByHand()
	{
		return null;
	}

	[Token(Token = "0x6000BFC")]
	[Address(RVA = "0xCA03D8", Offset = "0xCA03D8", VA = "0xCA03D8", Slot = "10")]
	public bool IsEnabled()
	{
		return default(bool);
	}

	[Token(Token = "0x6000BFD")]
	[Address(RVA = "0xCA0480", Offset = "0xCA0480", VA = "0xCA0480", Slot = "17")]
	public bool HaveChildGrabbables()
	{
		return default(bool);
	}

	[Token(Token = "0x6000BFE")]
	[Address(RVA = "0xCA0488", Offset = "0xCA0488", VA = "0xCA0488", Slot = "11")]
	public bool ShouldConsumeGrab(Collider collider)
	{
		return default(bool);
	}

	[Token(Token = "0x6000BFF")]
	[Address(RVA = "0xCA0490", Offset = "0xCA0490", VA = "0xCA0490", Slot = "12")]
	public void Touch()
	{
	}

	[Token(Token = "0x6000C00")]
	[Address(RVA = "0xCA0494", Offset = "0xCA0494", VA = "0xCA0494", Slot = "7")]
	public void StartGrabbing(PlayerHand hand, Vector3 grabPositionOnItem, OrientedPoint handAttachPoint)
	{
	}

	[Token(Token = "0x6000C01")]
	[Address(RVA = "0xCA04C0", Offset = "0xCA04C0", VA = "0xCA04C0", Slot = "9")]
	public void UpdateGrabbing(PlayerHand hand, Vector3 grabPositionOnItem, OrientedPoint attachPoint)
	{
	}

	[Token(Token = "0x6000C02")]
	[Address(RVA = "0xCA0CEC", Offset = "0xCA0CEC", VA = "0xCA0CEC")]
	private void UpdatePlayerHandPosition(PlayerHand hand, OrientedPoint attachPoint)
	{
	}

	[Token(Token = "0x6000C03")]
	[Address(RVA = "0xCA0610", Offset = "0xCA0610", VA = "0xCA0610")]
	private void UpdateCrankRotation(PlayerHand hand, OrientedPoint attachPoint)
	{
	}

	[Token(Token = "0x6000C04")]
	[Address(RVA = "0xCA1004", Offset = "0xCA1004", VA = "0xCA1004", Slot = "8")]
	public void StopGrabbing(PlayerHand hand, Vector3 grabPositionOnItem, OrientedPoint attachPoint)
	{
	}

	[Token(Token = "0x6000C05")]
	[Address(RVA = "0xCA108C", Offset = "0xCA108C", VA = "0xCA108C", Slot = "5")]
	public bool IsExtraSticky()
	{
		return default(bool);
	}

	[Token(Token = "0x6000C06")]
	[Address(RVA = "0xCA1094", Offset = "0xCA1094", VA = "0xCA1094", Slot = "6")]
	public GrabbableOutline GetOutline()
	{
		return null;
	}

	[Token(Token = "0x6000C07")]
	[Address(RVA = "0xCA109C", Offset = "0xCA109C", VA = "0xCA109C", Slot = "13")]
	public float GetDelayBeforeGrab()
	{
		return default(float);
	}

	[Token(Token = "0x6000C08")]
	[Address(RVA = "0xCA10A4", Offset = "0xCA10A4", VA = "0xCA10A4", Slot = "14")]
	public Collider[] GetColliders()
	{
		return null;
	}

	[Token(Token = "0x6000C09")]
	[Address(RVA = "0xCA10AC", Offset = "0xCA10AC", VA = "0xCA10AC")]
	public FishingCrank()
	{
	}
}
[Token(Token = "0x2000223")]
public enum FishingEffectsState
{
	[Token(Token = "0x4000C6D")]
	Idle = 1,
	[Token(Token = "0x4000C6E")]
	BobberFlying = 2,
	[Token(Token = "0x4000C6F")]
	BobberInWater = 4,
	[Token(Token = "0x4000C70")]
	PlayerReeling = 8,
	[Token(Token = "0x4000C71")]
	FishNibbling = 0x10,
	[Token(Token = "0x4000C72")]
	FishOnHook = 0x20,
	[Token(Token = "0x4000C73")]
	FishResisting = 0x40
}
[Token(Token = "0x2000224")]
public class FishingEffects : MonoBehaviour
{
	[Token(Token = "0x4000C74")]
	private const float defaultTimeToMaxRedness = 1.5f;

	[Token(Token = "0x4000C75")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Animator fishingRodAnimator;

	[Token(Token = "0x4000C76")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Bobber bobber;

	[Token(Token = "0x4000C77")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private FishingLine fishingLine;

	[Token(Token = "0x4000C78")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private int bendinessXParameter;

	[Token(Token = "0x4000C79")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private int bendinessYParameter;

	[Token(Token = "0x4000C7A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Vector2 currentBendDirection;

	[Token(Token = "0x4000C7B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float currentBendStrength;

	[Token(Token = "0x4000C7C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private float targetBendStrength;

	[Token(Token = "0x4000C7D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float currentRedness;

	[Token(Token = "0x4000C7E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private float targetRedness;

	[Token(Token = "0x4000C7F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float m_maxRednessDuration;

	[Token(Token = "0x4000C80")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private FishingEffectsState EffectStates;

	[Token(Token = "0x4000C81")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private FishingEffectsState RodBentStates;

	[Token(Token = "0x4000C82")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static readonly int STRUGGLE;

	[Token(Token = "0x4000C83")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public NeatAudioPlayer struggleSoundPlayer;

	[Token(Token = "0x4000C84")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private FishingState prevState;

	[Token(Token = "0x6000C0A")]
	[Address(RVA = "0xCA1150", Offset = "0xCA1150", VA = "0xCA1150")]
	public void Setup(Animator anim, Bobber bobber, FishingLine line)
	{
	}

	[Token(Token = "0x6000C0B")]
	[Address(RVA = "0xCA12E8", Offset = "0xCA12E8", VA = "0xCA12E8")]
	public void OnBobberHitWater(PlayerHand hand)
	{
	}

	[Token(Token = "0x6000C0C")]
	[Address(RVA = "0xCA1400", Offset = "0xCA1400", VA = "0xCA1400")]
	public void OnFishGrabbedOn(PlayerHand hand)
	{
	}

	[Token(Token = "0x6000C0D")]
	[Address(RVA = "0xCA14FC", Offset = "0xCA14FC", VA = "0xCA14FC")]
	public void OnFishNibbled(PlayerHand hand)
	{
	}

	[Token(Token = "0x6000C0E")]
	[Address(RVA = "0xCA15E4", Offset = "0xCA15E4", VA = "0xCA15E4")]
	public void OnBobberResetted(PlayerHand hand, bool playSound)
	{
	}

	[Token(Token = "0x6000C0F")]
	[Address(RVA = "0xCA16A4", Offset = "0xCA16A4", VA = "0xCA16A4")]
	public void OnFishCaught()
	{
	}

	[Token(Token = "0x6000C10")]
	[Address(RVA = "0xCA17E0", Offset = "0xCA17E0", VA = "0xCA17E0")]
	public void UpdateEffects(FishingState state, PlayerHand hand)
	{
	}

	[Token(Token = "0x6000C11")]
	[Address(RVA = "0xCA1DF4", Offset = "0xCA1DF4", VA = "0xCA1DF4")]
	public void UpdateRodBend(FishingState state)
	{
	}

	[Token(Token = "0x6000C12")]
	[Address(RVA = "0xC9EBFC", Offset = "0xC9EBFC", VA = "0xC9EBFC")]
	public void SetEffectStateActive(FishingEffectsState state)
	{
	}

	[Token(Token = "0x6000C13")]
	[Address(RVA = "0xC9EC0C", Offset = "0xC9EC0C", VA = "0xC9EC0C")]
	public void SetEffectStateInactive(FishingEffectsState state)
	{
	}

	[Token(Token = "0x6000C14")]
	[Address(RVA = "0xCA1698", Offset = "0xCA1698", VA = "0xCA1698")]
	public void ResetEffectStates()
	{
	}

	[Token(Token = "0x6000C15")]
	[Address(RVA = "0xCA2350", Offset = "0xCA2350", VA = "0xCA2350")]
	public bool IsEffectStateActive(FishingEffectsState state)
	{
		return default(bool);
	}

	[Token(Token = "0x6000C16")]
	[Address(RVA = "0xCA1220", Offset = "0xCA1220", VA = "0xCA1220")]
	private void SetRodBendiness(float valueX, float valueY)
	{
	}

	[Token(Token = "0x6000C17")]
	[Address(RVA = "0xCA2360", Offset = "0xCA2360", VA = "0xCA2360")]
	public FishingEffects()
	{
	}
}
[Token(Token = "0x2000225")]
public class FishingLine : MonoBehaviour
{
	[Token(Token = "0x4000C85")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly int color;

	[Token(Token = "0x4000C86")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Material material;

	[Token(Token = "0x4000C87")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform customTarget;

	[Token(Token = "0x4000C88")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x978C74", Offset = "0x978C74")]
	public float wobblyness;

	[Token(Token = "0x4000C89")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float smoothCoef;

	[Token(Token = "0x4000C8A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x978CAC", Offset = "0x978CAC")]
	public float maxLineSlackExponent;

	[Token(Token = "0x4000C8B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float currentLineSlackExponent;

	[Token(Token = "0x4000C8C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float lineSlackChangeSpeed;

	[Token(Token = "0x4000C8D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float targetLineSlackExponent;

	[Token(Token = "0x4000C8E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private WobblyArc arc;

	[Token(Token = "0x4000C8F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private MaterialPropertyBlock mpb;

	[Token(Token = "0x4000C90")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private GameObject arcMeshObject;

	[Token(Token = "0x4000C91")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private MeshFilter mf;

	[Token(Token = "0x4000C92")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private MeshRenderer rnd;

	[Token(Token = "0x4000C93")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Color currentColor;

	[Token(Token = "0x4000C94")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private OrientedPoint[] pointsTarget;

	[Token(Token = "0x4000C95")]
	private const int INITIAL_LINE_SEGMENTS = 5;

	[Token(Token = "0x4000C96")]
	private const int POST_ROD_SEGMENTS = 32;

	[Token(Token = "0x4000C97")]
	private const int ARC_MESH_SEGMENT_COUNT = 37;

	[Token(Token = "0x4000C98")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public GameObject[] RodSegments;

	[Token(Token = "0x4000C99")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public GameObject RodReel;

	[Token(Token = "0x17000136")]
	public float lineSlackPercent
	{
		[Token(Token = "0x6000C19")]
		[Address(RVA = "0xCA2440", Offset = "0xCA2440", VA = "0xCA2440")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000137")]
	public bool VisibleInHierarchy
	{
		[Token(Token = "0x6000C21")]
		[Address(RVA = "0xCA3464", Offset = "0xCA3464", VA = "0xCA3464")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000C1A")]
	[Address(RVA = "0xCA245C", Offset = "0xCA245C", VA = "0xCA245C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000C1B")]
	[Address(RVA = "0xCA2784", Offset = "0xCA2784", VA = "0xCA2784")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000C1C")]
	[Address(RVA = "0xCA2838", Offset = "0xCA2838", VA = "0xCA2838")]
	public void SetCustomTarget(Transform target)
	{
	}

	[Token(Token = "0x6000C1D")]
	[Address(RVA = "0xCA2840", Offset = "0xCA2840", VA = "0xCA2840")]
	public void DoUpdate(bool lineIsExtended)
	{
	}

	[Token(Token = "0x6000C1E")]
	[Address(RVA = "0xCA2240", Offset = "0xCA2240", VA = "0xCA2240")]
	public void SetLineColor(Color newColor)
	{
	}

	[Token(Token = "0x6000C1F")]
	[Address(RVA = "0xCA33C8", Offset = "0xCA33C8", VA = "0xCA33C8")]
	public void Show()
	{
	}

	[Token(Token = "0x6000C20")]
	[Address(RVA = "0xCA3424", Offset = "0xCA3424", VA = "0xCA3424")]
	public void Hide()
	{
	}

	[Token(Token = "0x6000C22")]
	[Address(RVA = "0xCA2764", Offset = "0xCA2764", VA = "0xCA2764")]
	private void SetMeshVisibility(bool visible)
	{
	}

	[Token(Token = "0x6000C23")]
	[Address(RVA = "0xCA2A2C", Offset = "0xCA2A2C", VA = "0xCA2A2C")]
	private void UpdateLineData(Vector3 targetPosition)
	{
	}

	[Token(Token = "0x6000C24")]
	[Address(RVA = "0xCA3480", Offset = "0xCA3480", VA = "0xCA3480")]
	public void SetLineSlackExponent(float newExponent)
	{
	}

	[Token(Token = "0x6000C25")]
	[Address(RVA = "0xCA2158", Offset = "0xCA2158", VA = "0xCA2158")]
	public void AnimateLineSlackExponentToCustomValue(float targetValue, float duration)
	{
	}

	[Token(Token = "0x6000C26")]
	[Address(RVA = "0xCA351C", Offset = "0xCA351C", VA = "0xCA351C")]
	public void AnimateLineSlackExponentToMax(float duration)
	{
	}

	[Token(Token = "0x6000C27")]
	[Address(RVA = "0xCA214C", Offset = "0xCA214C", VA = "0xCA214C")]
	public void AnimateLineSlackExponentTo0(float duration)
	{
	}

	[Token(Token = "0x6000C28")]
	[Address(RVA = "0xCA3490", Offset = "0xCA3490", VA = "0xCA3490")]
	private void AnimateLineSlackToTarget(float newTargetExponent, float duration)
	{
	}

	[Token(Token = "0x6000C29")]
	[Address(RVA = "0xCA2990", Offset = "0xCA2990", VA = "0xCA2990")]
	private void UpdateLineSlack()
	{
	}

	[Token(Token = "0x6000C2A")]
	[Address(RVA = "0xCA3530", Offset = "0xCA3530", VA = "0xCA3530")]
	public FishingLine()
	{
	}
}
[Token(Token = "0x2000226")]
public class FishingRing : MonoBehaviour
{
	[Token(Token = "0x4000C9A")]
	private const float EXPAND_ANIM_TIME = 0.2f;

	[Token(Token = "0x4000C9B")]
	private const float RADIUS_CATCH = 0.5f;

	[Token(Token = "0x4000C9C")]
	private const float RADIUS_START = 3.5f;

	[Token(Token = "0x4000C9D")]
	private const float THICKNESS_PER_METER = 0.0075f;

	[Token(Token = "0x4000C9E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly int propRadiusRing;

	[Token(Token = "0x4000C9F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	private static readonly int propRadiusThickness;

	[Token(Token = "0x4000CA0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static readonly int propColor;

	[Token(Token = "0x4000CA1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Tool_FishingRod rod;

	[Token(Token = "0x4000CA2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Bobber bobber;

	[Token(Token = "0x4000CA3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public MeshRenderer rnd;

	[Token(Token = "0x4000CA4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Color colorDefault;

	[Token(Token = "0x4000CA5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Color colorFishCaught;

	[Token(Token = "0x4000CA6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private MaterialPropertyBlock mpb;

	[Token(Token = "0x4000CA7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Tweener animAppear;

	[Token(Token = "0x4000CA8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Tweener animBobberArrow;

	[Token(Token = "0x4000CA9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public FishingArrow arrowLeft;

	[Token(Token = "0x4000CAA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public FishingArrow arrowRight;

	[Token(Token = "0x4000CAB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Transform arrowBobber;

	[Token(Token = "0x4000CAC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Transform arrowPull;

	[Token(Token = "0x4000CAD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Color sideArrowColor;

	[Token(Token = "0x4000CAE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private float radius;

	[Token(Token = "0x4000CAF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	private float radiusThickness;

	[Token(Token = "0x4000CB0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private Color ringColor;

	[Token(Token = "0x4000CB1")]
	private const float SCALE_PER_METER_BOBBER_ARROW = 0.05f;

	[Token(Token = "0x4000CB2")]
	private const float SCALE_PER_METER_SIDE_ARROWS = 0.1f;

	[Token(Token = "0x17000138")]
	private float Radius
	{
		[Token(Token = "0x6000C2C")]
		[Address(RVA = "0xCA3630", Offset = "0xCA3630", VA = "0xCA3630")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000C2D")]
		[Address(RVA = "0xCA3638", Offset = "0xCA3638", VA = "0xCA3638")]
		set
		{
		}
	}

	[Token(Token = "0x17000139")]
	private float RadiusThickness
	{
		[Token(Token = "0x6000C2E")]
		[Address(RVA = "0xCA36E8", Offset = "0xCA36E8", VA = "0xCA36E8")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000C2F")]
		[Address(RVA = "0xCA36F0", Offset = "0xCA36F0", VA = "0xCA36F0")]
		set
		{
		}
	}

	[Token(Token = "0x1700013A")]
	private Color RingColor
	{
		[Token(Token = "0x6000C30")]
		[Address(RVA = "0xCA37A0", Offset = "0xCA37A0", VA = "0xCA37A0")]
		get
		{
			return default(Color);
		}
		[Token(Token = "0x6000C31")]
		[Address(RVA = "0xCA37AC", Offset = "0xCA37AC", VA = "0xCA37AC")]
		set
		{
		}
	}

	[Token(Token = "0x1700013B")]
	private float DistanceToPlayer
	{
		[Token(Token = "0x6000C39")]
		[Address(RVA = "0xCA41E8", Offset = "0xCA41E8", VA = "0xCA41E8")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x6000C32")]
	[Address(RVA = "0xCA3880", Offset = "0xCA3880", VA = "0xCA3880")]
	public void OnFishCaught()
	{
	}

	[Token(Token = "0x6000C33")]
	[Address(RVA = "0xCA3BA8", Offset = "0xCA3BA8", VA = "0xCA3BA8")]
	public void UpdateCatchShrink(float t, float bobberSignedDist)
	{
	}

	[Token(Token = "0x6000C34")]
	[Address(RVA = "0xCA3AE8", Offset = "0xCA3AE8", VA = "0xCA3AE8")]
	private void SetBobberArrow(bool visible)
	{
	}

	[Token(Token = "0x6000C35")]
	[Address(RVA = "0xCA3B24", Offset = "0xCA3B24", VA = "0xCA3B24")]
	public void SetPullArrow(bool visible, Vector3 dir)
	{
	}

	[Token(Token = "0x6000C36")]
	[Address(RVA = "0xCA3A7C", Offset = "0xCA3A7C", VA = "0xCA3A7C")]
	private void HideSideArrows()
	{
	}

	[Token(Token = "0x6000C37")]
	[Address(RVA = "0xCA413C", Offset = "0xCA413C", VA = "0xCA413C")]
	private Vector3 GetScaleByDistance(float dist, float scalePerMeter)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000C38")]
	[Address(RVA = "0xCA41B8", Offset = "0xCA41B8", VA = "0xCA41B8")]
	private void SetScaleByDistance(Transform tf, float distance, float scalePerMeter)
	{
	}

	[Token(Token = "0x6000C3A")]
	[Address(RVA = "0xCA3CEC", Offset = "0xCA3CEC", VA = "0xCA3CEC")]
	private void UpdateSideArrows(float bobberSignedDist)
	{
	}

	[Token(Token = "0x6000C3B")]
	[Address(RVA = "0xCA42E4", Offset = "0xCA42E4", VA = "0xCA42E4")]
	public void Appear(Vector3 pos)
	{
	}

	[Token(Token = "0x6000C3C")]
	[Address(RVA = "0xCA4628", Offset = "0xCA4628", VA = "0xCA4628")]
	public void Disappear()
	{
	}

	[Token(Token = "0x6000C3D")]
	[Address(RVA = "0xCA4688", Offset = "0xCA4688", VA = "0xCA4688")]
	public bool Contains(Vector3 pos)
	{
		return default(bool);
	}

	[Token(Token = "0x6000C3E")]
	[Address(RVA = "0xCA4790", Offset = "0xCA4790", VA = "0xCA4790")]
	public FishingRing()
	{
	}

	[Token(Token = "0x6000C40")]
	[Address(RVA = "0xCA4870", Offset = "0xCA4870", VA = "0xCA4870")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x98B2FC", Offset = "0x98B2FC")]
	private float <Appear>b__44_0()
	{
		return default(float);
	}

	[Token(Token = "0x6000C41")]
	[Address(RVA = "0xCA4878", Offset = "0xCA4878", VA = "0xCA4878")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x98B30C", Offset = "0x98B30C")]
	private void <Appear>b__44_1(float x)
	{
	}
}
[Token(Token = "0x2000227")]
public class FishingRod : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x2000228")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x972304", Offset = "0x972304")]
	private sealed class <>c
	{
		[Token(Token = "0x4000CB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4000CB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Func<Extendular, float> <>9__7_0;

		[Token(Token = "0x6000C48")]
		[Address(RVA = "0xCA4D2C", Offset = "0xCA4D2C", VA = "0xCA4D2C")]
		public <>c()
		{
		}

		[Token(Token = "0x6000C49")]
		[Address(RVA = "0xCA4D34", Offset = "0xCA4D34", VA = "0xCA4D34")]
		internal float <SetRodExtendedness>b__7_0(Extendular x)
		{
			return default(float);
		}
	}

	[Token(Token = "0x4000CB3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float distanceToTip;

	[Token(Token = "0x4000CB4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private Vector3 prevTipPos;

	[Token(Token = "0x4000CB5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Vector3 tipVel;

	[Token(Token = "0x4000CB6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Extendular[] extendulars;

	[Token(Token = "0x6000C42")]
	[Address(RVA = "0xCA487C", Offset = "0xCA487C", VA = "0xCA487C")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x6000C43")]
	[Address(RVA = "0xCA49A0", Offset = "0xCA49A0", VA = "0xCA49A0")]
	private Vector3 TangVel()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000C44")]
	[Address(RVA = "0xCA4AE8", Offset = "0xCA4AE8", VA = "0xCA4AE8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000C45")]
	[Address(RVA = "0xCA4AEC", Offset = "0xCA4AEC", VA = "0xCA4AEC")]
	public void SetRodExtendedness(float extendedness)
	{
	}

	[Token(Token = "0x6000C46")]
	[Address(RVA = "0xCA4CB4", Offset = "0xCA4CB4", VA = "0xCA4CB4")]
	public FishingRod()
	{
	}
}
[Serializable]
[Token(Token = "0x2000229")]
public class Extendular
{
	[Token(Token = "0x4000CB9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Transform tf;

	[Token(Token = "0x4000CBA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float zStart;

	[Token(Token = "0x4000CBB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float zEnd;

	[Token(Token = "0x1700013C")]
	public float Length
	{
		[Token(Token = "0x6000C4A")]
		[Address(RVA = "0xBFD0B4", Offset = "0xBFD0B4", VA = "0xBFD0B4")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x6000C4B")]
	[Address(RVA = "0xBFD0C0", Offset = "0xBFD0C0", VA = "0xBFD0C0")]
	public void SetZ(float t)
	{
	}

	[Token(Token = "0x6000C4C")]
	[Address(RVA = "0xBFD188", Offset = "0xBFD188", VA = "0xBFD188")]
	public Extendular()
	{
	}
}
[Token(Token = "0x200022A")]
public class Pond : MonoBehaviour
{
	[Token(Token = "0x4000CBC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Vector2[] region;

	[Token(Token = "0x4000CBD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Rect regionBounds;

	[Token(Token = "0x4000CBE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject[] fish;

	[Token(Token = "0x4000CBF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform regionHolder;

	[Token(Token = "0x4000CC0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float swimDepth;

	[Token(Token = "0x4000CC1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float debugAng;

	[Token(Token = "0x4000CC2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private List<Vector3> failedTests;

	[Token(Token = "0x6000C4D")]
	[Address(RVA = "0xD10B14", Offset = "0xD10B14", VA = "0xD10B14")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x6000C4E")]
	[Address(RVA = "0xD110F0", Offset = "0xD110F0", VA = "0xD110F0")]
	private Vector2 GetRandomPointInPond()
	{
		return default(Vector2);
	}

	[Token(Token = "0x6000C4F")]
	[Address(RVA = "0xD11350", Offset = "0xD11350", VA = "0xD11350")]
	public Vector2 GetRandomPointInPondInCircle(Vector2 circleCenter, float circleRadius)
	{
		return default(Vector2);
	}

	[Token(Token = "0x6000C50")]
	[Address(RVA = "0xD111D0", Offset = "0xD111D0", VA = "0xD111D0")]
	private bool PointInside(Vector2 p, Vector2[] path)
	{
		return default(bool);
	}

	[Token(Token = "0x6000C51")]
	[Address(RVA = "0xD10C58", Offset = "0xD10C58", VA = "0xD10C58")]
	private void UpdateRegion()
	{
	}

	[Token(Token = "0x6000C52")]
	[Address(RVA = "0xD114DC", Offset = "0xD114DC", VA = "0xD114DC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000C53")]
	[Address(RVA = "0xD110A8", Offset = "0xD110A8", VA = "0xD110A8")]
	private Vector3 RegionToWorld(Vector2 v)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000C54")]
	[Address(RVA = "0xD114E0", Offset = "0xD114E0", VA = "0xD114E0")]
	public Vector3 RegionToWorldSwim(Vector2 v)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000C55")]
	[Address(RVA = "0xD11538", Offset = "0xD11538", VA = "0xD11538")]
	public Vector2 WorldToRegion(Vector3 v)
	{
		return default(Vector2);
	}

	[Token(Token = "0x6000C56")]
	[Address(RVA = "0xD11540", Offset = "0xD11540", VA = "0xD11540")]
	private void OnTriggerStay(Collider other)
	{
	}

	[Token(Token = "0x6000C57")]
	[Address(RVA = "0xD11604", Offset = "0xD11604", VA = "0xD11604")]
	private void FishPlop(Fish fish)
	{
	}

	[Token(Token = "0x6000C58")]
	[Address(RVA = "0xD11628", Offset = "0xD11628", VA = "0xD11628")]
	public Vector3 GetNewFishMoveSpot(Vector3 pos, float moveRangeMax)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000C59")]
	[Address(RVA = "0xD11668", Offset = "0xD11668", VA = "0xD11668")]
	public Pond()
	{
	}
}
[Token(Token = "0x200022B")]
public class GarbageBin : MonoBehaviour, IInitializable
{
	[Token(Token = "0x200022C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x972314", Offset = "0x972314")]
	private sealed class <CloseLidAfterDelay>d__18 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000CCC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000CCD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000CCE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float delay;

		[Token(Token = "0x4000CCF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GarbageBin <>4__this;

		[Token(Token = "0x1700013D")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000C6C")]
			[Address(RVA = "0xE7568C", Offset = "0xE7568C", VA = "0xE7568C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700013E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000C6E")]
			[Address(RVA = "0xE756F4", Offset = "0xE756F4", VA = "0xE756F4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000C69")]
		[Address(RVA = "0xE74B50", Offset = "0xE74B50", VA = "0xE74B50")]
		[DebuggerHidden]
		public <CloseLidAfterDelay>d__18(int <>1__state)
		{
		}

		[Token(Token = "0x6000C6A")]
		[Address(RVA = "0xE755C4", Offset = "0xE755C4", VA = "0xE755C4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000C6B")]
		[Address(RVA = "0xE755C8", Offset = "0xE755C8", VA = "0xE755C8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000C6D")]
		[Address(RVA = "0xE75694", Offset = "0xE75694", VA = "0xE75694", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200022D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x972324", Offset = "0x972324")]
	private sealed class <RemoveObjectAfterDelay>d__20 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000CD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000CD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000CD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Grabbable obj;

		[Token(Token = "0x4000CD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GarbageBin <>4__this;

		[Token(Token = "0x1700013F")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000C72")]
			[Address(RVA = "0xE758F8", Offset = "0xE758F8", VA = "0xE758F8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000140")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000C74")]
			[Address(RVA = "0xE75960", Offset = "0xE75960", VA = "0xE75960", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000C6F")]
		[Address(RVA = "0xE74CDC", Offset = "0xE74CDC", VA = "0xE74CDC")]
		[DebuggerHidden]
		public <RemoveObjectAfterDelay>d__20(int <>1__state)
		{
		}

		[Token(Token = "0x6000C70")]
		[Address(RVA = "0xE756FC", Offset = "0xE756FC", VA = "0xE756FC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000C71")]
		[Address(RVA = "0xE75700", Offset = "0xE75700", VA = "0xE75700", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000C73")]
		[Address(RVA = "0xE75900", Offset = "0xE75900", VA = "0xE75900", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200022E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x972334", Offset = "0x972334")]
	private sealed class <ScaleUpGrabbable>d__21 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000CD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000CD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000CD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Grabbable obj;

		[Token(Token = "0x4000CD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float duration;

		[Token(Token = "0x4000CD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public Vector3 targetScale;

		[Token(Token = "0x4000CD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Vector3 <startScale>5__2;

		[Token(Token = "0x4000CDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private float <timeLeft>5__3;

		[Token(Token = "0x17000141")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000C78")]
			[Address(RVA = "0xE75BF4", Offset = "0xE75BF4", VA = "0xE75BF4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000142")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000C7A")]
			[Address(RVA = "0xE75C5C", Offset = "0xE75C5C", VA = "0xE75C5C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000C75")]
		[Address(RVA = "0xE74DAC", Offset = "0xE74DAC", VA = "0xE74DAC")]
		[DebuggerHidden]
		public <ScaleUpGrabbable>d__21(int <>1__state)
		{
		}

		[Token(Token = "0x6000C76")]
		[Address(RVA = "0xE75968", Offset = "0xE75968", VA = "0xE75968", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000C77")]
		[Address(RVA = "0xE7596C", Offset = "0xE7596C", VA = "0xE7596C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000C79")]
		[Address(RVA = "0xE75BFC", Offset = "0xE75BFC", VA = "0xE75BFC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200022F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x972344", Offset = "0x972344")]
	private sealed class <AnimateRemovalOfObject>d__22 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000CDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000CDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000CDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GarbageBin <>4__this;

		[Token(Token = "0x4000CDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Grabbable obj;

		[Token(Token = "0x4000CDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool throwOutAgain;

		[Token(Token = "0x4000CE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private Vector3 <startScale>5__2;

		[Token(Token = "0x4000CE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Vector3 <startPos>5__3;

		[Token(Token = "0x4000CE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private Vector3 <vec>5__4;

		[Token(Token = "0x4000CE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private float <duration>5__5;

		[Token(Token = "0x4000CE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private float <timeLeft>5__6;

		[Token(Token = "0x17000143")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000C7E")]
			[Address(RVA = "0xE75554", Offset = "0xE75554", VA = "0xE75554", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000144")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000C80")]
			[Address(RVA = "0xE755BC", Offset = "0xE755BC", VA = "0xE755BC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000C7B")]
		[Address(RVA = "0xE74E7C", Offset = "0xE74E7C", VA = "0xE74E7C")]
		[DebuggerHidden]
		public <AnimateRemovalOfObject>d__22(int <>1__state)
		{
		}

		[Token(Token = "0x6000C7C")]
		[Address(RVA = "0xE74F6C", Offset = "0xE74F6C", VA = "0xE74F6C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000C7D")]
		[Address(RVA = "0xE74F70", Offset = "0xE74F70", VA = "0xE74F70", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000C7F")]
		[Address(RVA = "0xE7555C", Offset = "0xE7555C", VA = "0xE7555C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000CC3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Animator animator;

	[Token(Token = "0x4000CC4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private BezierCurve bezierCurve;

	[Token(Token = "0x4000CC5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool initialized;

	[Token(Token = "0x4000CC6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	private bool lidOpen;

	[Token(Token = "0x4000CC7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Grabbable isAnimatingRemoval;

	[Token(Token = "0x4000CC8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int chewParam;

	[Token(Token = "0x4000CC9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private int burpParam;

	[Token(Token = "0x4000CCA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private int openBinParam;

	[Token(Token = "0x4000CCB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private List<Grabbable> objectsInBin;

	[Token(Token = "0x6000C5A")]
	[Address(RVA = "0xE743D0", Offset = "0xE743D0", VA = "0xE743D0", Slot = "4")]
	public void Initialize()
	{
	}

	[Token(Token = "0x6000C5B")]
	[Address(RVA = "0xE743DC", Offset = "0xE743DC", VA = "0xE743DC")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000C5C")]
	[Address(RVA = "0xE743E4", Offset = "0xE743E4", VA = "0xE743E4")]
	private void ResetAnimationParams()
	{
	}

	[Token(Token = "0x6000C5D")]
	[Address(RVA = "0xE74430", Offset = "0xE74430", VA = "0xE74430")]
	public void OpenLid()
	{
	}

	[Token(Token = "0x6000C5E")]
	[Address(RVA = "0xE744D4", Offset = "0xE744D4", VA = "0xE744D4")]
	public void CloseLid()
	{
	}

	[Token(Token = "0x6000C5F")]
	[Address(RVA = "0xE74600", Offset = "0xE74600", VA = "0xE74600")]
	private void Chew()
	{
	}

	[Token(Token = "0x6000C60")]
	[Address(RVA = "0xE74638", Offset = "0xE74638", VA = "0xE74638")]
	private void Burp()
	{
	}

	[Token(Token = "0x6000C61")]
	[Address(RVA = "0xE74670", Offset = "0xE74670", VA = "0xE74670")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000C62")]
	[Address(RVA = "0xE74A04", Offset = "0xE74A04", VA = "0xE74A04")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x6000C63")]
	[Address(RVA = "0xE74574", Offset = "0xE74574", VA = "0xE74574")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x98B31C", Offset = "0x98B31C")]
	private IEnumerator CloseLidAfterDelay(float delay)
	{
		return null;
	}

	[Token(Token = "0x6000C64")]
	[Address(RVA = "0xE74B7C", Offset = "0xE74B7C", VA = "0xE74B7C")]
	private void CloseLidImmediately()
	{
	}

	[Token(Token = "0x6000C65")]
	[Address(RVA = "0xE7496C", Offset = "0xE7496C", VA = "0xE7496C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x98B380", Offset = "0x98B380")]
	private IEnumerator RemoveObjectAfterDelay(Grabbable obj)
	{
		return null;
	}

	[Token(Token = "0x6000C66")]
	[Address(RVA = "0xE74D08", Offset = "0xE74D08", VA = "0xE74D08")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x98B3E4", Offset = "0x98B3E4")]
	private IEnumerator ScaleUpGrabbable(Grabbable obj, Vector3 targetScale, float duration)
	{
		return null;
	}

	[Token(Token = "0x6000C67")]
	[Address(RVA = "0xE74DD8", Offset = "0xE74DD8", VA = "0xE74DD8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x98B448", Offset = "0x98B448")]
	private IEnumerator AnimateRemovalOfObject(Grabbable obj, bool throwOutAgain = false)
	{
		return null;
	}

	[Token(Token = "0x6000C68")]
	[Address(RVA = "0xE74EA8", Offset = "0xE74EA8", VA = "0xE74EA8")]
	public GarbageBin()
	{
	}
}
[Token(Token = "0x2000230")]
public class GarbageBinLid : MonoBehaviour
{
	[Token(Token = "0x4000CE5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GarbageBin bin;

	[Token(Token = "0x4000CE6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private List<Rigidbody> currentIntersectionObjs;

	[Token(Token = "0x6000C81")]
	[Address(RVA = "0xE75C64", Offset = "0xE75C64", VA = "0xE75C64")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000C82")]
	[Address(RVA = "0xE75DB4", Offset = "0xE75DB4", VA = "0xE75DB4")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x6000C83")]
	[Address(RVA = "0xE75F14", Offset = "0xE75F14", VA = "0xE75F14")]
	public GarbageBinLid()
	{
	}
}
[Token(Token = "0x2000231")]
[DisallowMultipleComponent]
public class Grabbable : SaveableComponent, IGrabbable, IInitializable
{
	[Token(Token = "0x2000232")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x972364", Offset = "0x972364")]
	private sealed class <MakeKinematicAfterDelay>d__165 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000D2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000D2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000D2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Grabbable <>4__this;

		[Token(Token = "0x4000D2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool canAdjustDrag;

		[Token(Token = "0x4000D30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Rigidbody <rb>5__2;

		[Token(Token = "0x4000D31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float <delay>5__3;

		[Token(Token = "0x17000156")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000CE1")]
			[Address(RVA = "0xE879B8", Offset = "0xE879B8", VA = "0xE879B8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000157")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000CE3")]
			[Address(RVA = "0xE87A20", Offset = "0xE87A20", VA = "0xE87A20", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000CDE")]
		[Address(RVA = "0xE86978", Offset = "0xE86978", VA = "0xE86978")]
		[DebuggerHidden]
		public <MakeKinematicAfterDelay>d__165(int <>1__state)
		{
		}

		[Token(Token = "0x6000CDF")]
		[Address(RVA = "0xE873E0", Offset = "0xE873E0", VA = "0xE873E0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000CE0")]
		[Address(RVA = "0xE873E4", Offset = "0xE873E4", VA = "0xE873E4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000CE2")]
		[Address(RVA = "0xE879C0", Offset = "0xE879C0", VA = "0xE879C0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x2000233")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x972374", Offset = "0x972374")]
	private sealed class <>c
	{
		[Token(Token = "0x4000D32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4000D33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Action<Grabbable> <>9__175_0;

		[Token(Token = "0x4000D34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static Action<Grabbable> <>9__175_1;

		[Token(Token = "0x4000D35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static Action<bool> <>9__175_2;

		[Token(Token = "0x4000D36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public static Action<Grabbable> <>9__175_3;

		[Token(Token = "0x6000CE5")]
		[Address(RVA = "0xE873C8", Offset = "0xE873C8", VA = "0xE873C8")]
		public <>c()
		{
		}

		[Token(Token = "0x6000CE6")]
		[Address(RVA = "0xE873D0", Offset = "0xE873D0", VA = "0xE873D0")]
		internal void <.ctor>b__175_0(Grabbable <p0>)
		{
		}

		[Token(Token = "0x6000CE7")]
		[Address(RVA = "0xE873D4", Offset = "0xE873D4", VA = "0xE873D4")]
		internal void <.ctor>b__175_1(Grabbable <p0>)
		{
		}

		[Token(Token = "0x6000CE8")]
		[Address(RVA = "0xE873D8", Offset = "0xE873D8", VA = "0xE873D8")]
		internal void <.ctor>b__175_2(bool <p0>)
		{
		}

		[Token(Token = "0x6000CE9")]
		[Address(RVA = "0xE873DC", Offset = "0xE873DC", VA = "0xE873DC")]
		internal void <.ctor>b__175_3(Grabbable <p0>)
		{
		}
	}

	[Token(Token = "0x4000CE7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Material largeObjectMaterial;

	[Token(Token = "0x4000CE8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x978CF4", Offset = "0x978CF4")]
	public Transform fixedGrabPoint;

	[Token(Token = "0x4000CE9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	public Transform fixedGrabPointLeftHand;

	[Token(Token = "0x4000CEA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private bool hideHandWhileHolding;

	[Token(Token = "0x4000CEB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
	[SerializeField]
	private bool shouldSnapToSurfaceBelow;

	[Token(Token = "0x4000CEC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3A")]
	[SerializeField]
	private bool shouldSnapToWall;

	[Token(Token = "0x4000CED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3B")]
	[SerializeField]
	private bool isLargeObject;

	[Token(Token = "0x4000CEE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[SerializeField]
	private bool isVeryLargeObject;

	[Token(Token = "0x4000CEF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3D")]
	[SerializeField]
	private bool shouldFloat;

	[Token(Token = "0x4000CF0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private RecoverIfLost recoverIfLost;

	[Token(Token = "0x4000CF1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x978DC0", Offset = "0x978DC0")]
	private int grabPriority;

	[Token(Token = "0x4000CF2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x978E0C", Offset = "0x978E0C")]
	public UnityEvent OnGrab;

	[Token(Token = "0x4000CF3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public UnityEvent OnDrop;

	[Token(Token = "0x4000CF4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Action<Grabbable> OnDropped;

	[Token(Token = "0x4000CF5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Action<Grabbable> OnGrabbed;

	[Token(Token = "0x4000CF6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x978E44", Offset = "0x978E44")]
	public NeatAudioCue pickupSoundCue;

	[Token(Token = "0x4000CF7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public NeatAudioCue dropSoundCue;

	[Token(Token = "0x4000CFA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[HideInInspector]
	public bool GrabbableShouldConsumeGrab;

	[Token(Token = "0x4000CFB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x91")]
	private bool initialized;

	[Token(Token = "0x4000CFC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private AttachSlot attachedToSlot;

	[Token(Token = "0x4000CFD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x978EAC", Offset = "0x978EAC")]
	private bool <IsBeingAnimated>k__BackingField;

	[Token(Token = "0x4000CFE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA1")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x978EBC", Offset = "0x978EBC")]
	private bool <AllowSnapping>k__BackingField;

	[NonSerialized]
	[Token(Token = "0x4000CFF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA2")]
	public bool HavePlantedProxyWithDelay;

	[Token(Token = "0x4000D00")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[SerializeField]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x978ECC", Offset = "0x978ECC")]
	private Harvestable harvestable;

	[Token(Token = "0x4000D01")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[SerializeField]
	private Stashable stashable;

	[Token(Token = "0x4000D02")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[SerializeField]
	private Transform grabbableRootTransform;

	[Token(Token = "0x4000D03")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	[SerializeField]
	private GrabbableOutline outline;

	[Token(Token = "0x4000D04")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	[SerializeField]
	private NeatAudioPlayer grabbableSoundPlayer;

	[Token(Token = "0x4000D05")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	[SerializeField]
	private Collider[] colliders;

	[Token(Token = "0x4000D06")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private Purchaseable activePurchaseable;

	[Token(Token = "0x4000D07")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private SaveObjectBase saveObject;

	[Token(Token = "0x4000D08")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private bool hasSaveObject;

	[Token(Token = "0x4000D09")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private Transform m_projectedPrevisLocation;

	[Token(Token = "0x4000D0A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x978F68", Offset = "0x978F68")]
	private bool <IsStuckToHand>k__BackingField;

	[Token(Token = "0x4000D0B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private Coroutine kinematicAfterDelayCoroutine;

	[Token(Token = "0x4000D0C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private float lastHeldTimestamp;

	[Token(Token = "0x4000D0D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
	private float drag;

	[Token(Token = "0x4000D0E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	private Quaternion cachedHandRotation;

	[Token(Token = "0x4000D0F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private bool initializedPreLoad;

	[Token(Token = "0x4000D10")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x121")]
	private bool initializedPostLoad;

	[Token(Token = "0x4000D11")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
	public Vector3 originalScale;

	[Token(Token = "0x4000D12")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	private Vector3 originalLocalScale;

	[Token(Token = "0x4000D13")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x13C")]
	private Quaternion originalLocalRotation;

	[Token(Token = "0x4000D14")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14C")]
	private Vector3 fixedGrabPointPositionLS;

	[Token(Token = "0x4000D15")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	private Quaternion fixedGrabPointRotationLS;

	[Token(Token = "0x4000D16")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	private Vector3 fixedGrabPointLeftHandPositionLS;

	[Token(Token = "0x4000D17")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x174")]
	private Quaternion fixedGrabPointLeftHandRotationLS;

	[Token(Token = "0x4000D18")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	private GameObject largeObjectVisualizer;

	[Token(Token = "0x4000D19")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	private Vector3 largeObjectVisualizerLocalOffset;

	[Token(Token = "0x4000D1A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19C")]
	private int originalLayer;

	[Token(Token = "0x4000D1B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	private PlayerHand heldByHand;

	[Token(Token = "0x4000D1C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	private PlayerHand previousHeldByHand;

	[Token(Token = "0x4000D1D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	private LayerData[] m_originalObjectLayers;

	[Token(Token = "0x4000D1E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	private Vector3 startHandAttachPosLocal;

	[Token(Token = "0x4000D1F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C4")]
	private Quaternion startHandAttachRotLocal;

	[Token(Token = "0x4000D20")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D4")]
	private Vector3 startPositionWorld;

	[Token(Token = "0x4000D21")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
	private Quaternion rotationOffset;

	[Token(Token = "0x4000D22")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
	private List<Vector3> previousVelocities;

	[Token(Token = "0x4000D23")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
	private Vector3 currentPredictedVelocity;

	[Token(Token = "0x4000D24")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x204")]
	private bool hasSavedPredictedVelocity;

	[Token(Token = "0x4000D25")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
	private OrientedPoint largeObjectTransform;

	[Token(Token = "0x4000D26")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x230")]
	private bool hasValidLargeObjectTransform;

	[Token(Token = "0x4000D27")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x231")]
	[HideInInspector]
	public bool largeObjectHasBeenPlaced;

	[Token(Token = "0x4000D28")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x238")]
	[SerializeField]
	private Rigidbody grabbableRigidbody;

	[Token(Token = "0x4000D29")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x240")]
	public ChildGrabbableToggler ParentToggler;

	[Token(Token = "0x4000D2A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x248")]
	private bool didUpdateReferences;

	[Token(Token = "0x4000D2B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x249")]
	private bool m_isVisualizerOverridden;

	[Token(Token = "0x17000145")]
	private static Material LargeObjectMaterial
	{
		[Token(Token = "0x6000C84")]
		[Address(RVA = "0xE81184", Offset = "0xE81184", VA = "0xE81184")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000146")]
	public bool IsLargeObject
	{
		[Token(Token = "0x6000C85")]
		[Address(RVA = "0xE81258", Offset = "0xE81258", VA = "0xE81258")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000147")]
	public RecoverIfLost RecoverIfLost
	{
		[Token(Token = "0x6000C86")]
		[Address(RVA = "0xE81260", Offset = "0xE81260", VA = "0xE81260")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000148")]
	public bool IsBeingAnimated
	{
		[Token(Token = "0x6000C8B")]
		[Address(RVA = "0xE814F8", Offset = "0xE814F8", VA = "0xE814F8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x98B62C", Offset = "0x98B62C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000C8C")]
		[Address(RVA = "0xE81500", Offset = "0xE81500", VA = "0xE81500")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x98B63C", Offset = "0x98B63C")]
		private set
		{
		}
	}

	[Token(Token = "0x17000149")]
	public bool ShouldSnapToWall
	{
		[Token(Token = "0x6000C8E")]
		[Address(RVA = "0xE8150C", Offset = "0xE8150C", VA = "0xE8150C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700014A")]
	public bool IsAttached
	{
		[Token(Token = "0x6000C8F")]
		[Address(RVA = "0xE81514", Offset = "0xE81514", VA = "0xE81514")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700014B")]
	public bool AllowSnapping
	{
		[Token(Token = "0x6000C90")]
		[Address(RVA = "0xE81584", Offset = "0xE81584", VA = "0xE81584")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x98B64C", Offset = "0x98B64C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000C91")]
		[Address(RVA = "0xE8158C", Offset = "0xE8158C", VA = "0xE8158C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x98B65C", Offset = "0x98B65C")]
		set
		{
		}
	}

	[Token(Token = "0x1700014C")]
	public bool HideHandWhileHolding
	{
		[Token(Token = "0x6000C92")]
		[Address(RVA = "0xE81598", Offset = "0xE81598", VA = "0xE81598")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000C93")]
		[Address(RVA = "0xE815A0", Offset = "0xE815A0", VA = "0xE815A0")]
		set
		{
		}
	}

	[Token(Token = "0x1700014D")]
	public Harvestable Harvestable
	{
		[Token(Token = "0x6000C97")]
		[Address(RVA = "0xE815C4", Offset = "0xE815C4", VA = "0xE815C4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700014E")]
	public Stashable Stashable
	{
		[Token(Token = "0x6000C98")]
		[Address(RVA = "0xE815CC", Offset = "0xE815CC", VA = "0xE815CC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700014F")]
	public Transform GrabbableRootTransform
	{
		[Token(Token = "0x6000C99")]
		[Address(RVA = "0xE815D4", Offset = "0xE815D4", VA = "0xE815D4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000150")]
	public bool IsHeld
	{
		[Token(Token = "0x6000C9B")]
		[Address(RVA = "0xE748C4", Offset = "0xE748C4", VA = "0xE748C4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000151")]
	public SaveObjectBase SaveObj
	{
		[Token(Token = "0x6000C9C")]
		[Address(RVA = "0xE815E4", Offset = "0xE815E4", VA = "0xE815E4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000152")]
	public Vector3 ProjectedPrevisPos
	{
		[Token(Token = "0x6000C9D")]
		[Address(RVA = "0xE815EC", Offset = "0xE815EC", VA = "0xE815EC")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x17000153")]
	public bool IsStuckToHand
	{
		[Token(Token = "0x6000C9E")]
		[Address(RVA = "0xE81608", Offset = "0xE81608", VA = "0xE81608")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x98B66C", Offset = "0x98B66C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000C9F")]
		[Address(RVA = "0xE81610", Offset = "0xE81610", VA = "0xE81610")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x98B67C", Offset = "0x98B67C")]
		private set
		{
		}
	}

	[Token(Token = "0x17000154")]
	public Purchaseable ActivePurchaseable
	{
		[Token(Token = "0x6000CA2")]
		[Address(RVA = "0xE81624", Offset = "0xE81624", VA = "0xE81624")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000155")]
	public bool DidUpdateRefs
	{
		[Token(Token = "0x6000CAB")]
		[Address(RVA = "0xE820E4", Offset = "0xE820E4", VA = "0xE820E4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x14000015")]
	[HideInInspector]
	public event Action<bool> OnToggleUsage
	{
		[Token(Token = "0x6000C87")]
		[Address(RVA = "0xE81268", Offset = "0xE81268", VA = "0xE81268")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x98B5EC", Offset = "0x98B5EC")]
		add
		{
		}
		[Token(Token = "0x6000C88")]
		[Address(RVA = "0xE8130C", Offset = "0xE8130C", VA = "0xE8130C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x98B5FC", Offset = "0x98B5FC")]
		remove
		{
		}
	}

	[Token(Token = "0x14000016")]
	public event Action<Grabbable> OnPreGrab
	{
		[Token(Token = "0x6000C89")]
		[Address(RVA = "0xE813B0", Offset = "0xE813B0", VA = "0xE813B0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x98B60C", Offset = "0x98B60C")]
		add
		{
		}
		[Token(Token = "0x6000C8A")]
		[Address(RVA = "0xE81454", Offset = "0xE81454", VA = "0xE81454")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x98B61C", Offset = "0x98B61C")]
		remove
		{
		}
	}

	[Token(Token = "0x6000C8D")]
	[Address(RVA = "0xE75548", Offset = "0xE75548", VA = "0xE75548")]
	public void SetIsBeingAnimated(bool animated)
	{
	}

	[Token(Token = "0x6000C94")]
	[Address(RVA = "0xE815AC", Offset = "0xE815AC", VA = "0xE815AC", Slot = "5")]
	public int GetCurrentPriority()
	{
		return default(int);
	}

	[Token(Token = "0x6000C95")]
	[Address(RVA = "0xE815B4", Offset = "0xE815B4", VA = "0xE815B4", Slot = "17")]
	public PlayerHand GetHeldByHand()
	{
		return null;
	}

	[Token(Token = "0x6000C96")]
	[Address(RVA = "0xE815BC", Offset = "0xE815BC", VA = "0xE815BC")]
	public PlayerHand GetPreviousHeldByHand()
	{
		return null;
	}

	[Token(Token = "0x6000C9A")]
	[Address(RVA = "0xE815DC", Offset = "0xE815DC", VA = "0xE815DC", Slot = "7")]
	public GrabbableOutline GetOutline()
	{
		return null;
	}

	[Token(Token = "0x6000CA0")]
	[Address(RVA = "0xE74934", Offset = "0xE74934", VA = "0xE74934")]
	public bool WasHeldRecently()
	{
		return default(bool);
	}

	[Token(Token = "0x6000CA1")]
	[Address(RVA = "0xE8161C", Offset = "0xE8161C", VA = "0xE8161C")]
	public void AssignActivePurchaseable(Purchaseable p)
	{
	}

	[Token(Token = "0x6000CA3")]
	[Address(RVA = "0xE8162C", Offset = "0xE8162C", VA = "0xE8162C")]
	public Vector3 GetHandAttachPosition()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000CA4")]
	[Address(RVA = "0xE816F0", Offset = "0xE816F0", VA = "0xE816F0")]
	public Quaternion GetHandAttachRotation()
	{
		return default(Quaternion);
	}

	[Token(Token = "0x6000CA5")]
	[Address(RVA = "0xE81834", Offset = "0xE81834", VA = "0xE81834")]
	public Vector3 GetGrabPoint(bool right)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000CA6")]
	[Address(RVA = "0xE81984", Offset = "0xE81984", VA = "0xE81984")]
	public Transform GetGrabPointTransform()
	{
		return null;
	}

	[Token(Token = "0x6000CA7")]
	[Address(RVA = "0xE81A9C", Offset = "0xE81A9C", VA = "0xE81A9C")]
	private Vector3 GetScaleWhileHeld()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000CA8")]
	[Address(RVA = "0xE81BE0", Offset = "0xE81BE0", VA = "0xE81BE0")]
	public Vector3 GetOriginalScale()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000CA9")]
	[Address(RVA = "0xE75524", Offset = "0xE75524", VA = "0xE75524")]
	public Rigidbody GetRigidbody()
	{
		return null;
	}

	[Token(Token = "0x6000CAA")]
	[Address(RVA = "0xE81CA0", Offset = "0xE81CA0", VA = "0xE81CA0")]
	public void AddRigidbodyIfNeeded()
	{
	}

	[Token(Token = "0x6000CAC")]
	[Address(RVA = "0xE820EC", Offset = "0xE820EC", VA = "0xE820EC")]
	public bool SetupReferences(bool checkIfNeeded)
	{
		return default(bool);
	}

	[Token(Token = "0x6000CAD")]
	[Address(RVA = "0xE81E10", Offset = "0xE81E10", VA = "0xE81E10")]
	public bool AssignGrabbableRigidbody()
	{
		return default(bool);
	}

	[Token(Token = "0x6000CAE")]
	[Address(RVA = "0xE824D4", Offset = "0xE824D4", VA = "0xE824D4", Slot = "18")]
	public virtual void PreLoadInit()
	{
	}

	[Token(Token = "0x6000CAF")]
	[Address(RVA = "0xE827A0", Offset = "0xE827A0", VA = "0xE827A0")]
	private void SetupLargeObjectVisualisation()
	{
	}

	[Token(Token = "0x6000CB0")]
	[Address(RVA = "0xE82ED0", Offset = "0xE82ED0", VA = "0xE82ED0", Slot = "19")]
	public virtual void PostLoadInit()
	{
	}

	[Token(Token = "0x6000CB1")]
	[Address(RVA = "0xE835B8", Offset = "0xE835B8", VA = "0xE835B8", Slot = "8")]
	public void StartGrabbing(PlayerHand hand, Vector3 grabPositionOnItem, OrientedPoint handAttachPoint)
	{
	}

	[Token(Token = "0x6000CB2")]
	[Address(RVA = "0xE8403C", Offset = "0xE8403C", VA = "0xE8403C")]
	private void ShowLargeObjectVisualization()
	{
	}

	[Token(Token = "0x6000CB3")]
	[Address(RVA = "0xE84460", Offset = "0xE84460", VA = "0xE84460")]
	private void UpdateLargeObjectVisualization()
	{
	}

	[Token(Token = "0x6000CB4")]
	[Address(RVA = "0xE8502C", Offset = "0xE8502C", VA = "0xE8502C")]
	private void TryAssignVisualizerLocation(bool shouldReset = false)
	{
	}

	[Token(Token = "0x6000CB5")]
	[Address(RVA = "0xE8511C", Offset = "0xE8511C", VA = "0xE8511C")]
	public void OverrideObjectVisualizer(Vector3 pos, Quaternion rot)
	{
	}

	[Token(Token = "0x6000CB6")]
	[Address(RVA = "0xE8528C", Offset = "0xE8528C", VA = "0xE8528C")]
	public void ClearObjectVisualizerOverride()
	{
	}

	[Token(Token = "0x6000CB7")]
	[Address(RVA = "0xE8530C", Offset = "0xE8530C", VA = "0xE8530C")]
	public bool IsNewOverridePosition(Vector3 pos)
	{
		return default(bool);
	}

	[Token(Token = "0x6000CB8")]
	[Address(RVA = "0xE83A58", Offset = "0xE83A58", VA = "0xE83A58")]
	private void StickToHand(PlayerHand hand, OrientedPoint handAttachPoint, Vector3 grabPosOnItem)
	{
	}

	[Token(Token = "0x6000CB9")]
	[Address(RVA = "0xE85490", Offset = "0xE85490", VA = "0xE85490", Slot = "10")]
	public void UpdateGrabbing(PlayerHand hand, Vector3 grabPositionOnItem, OrientedPoint handAttachPoint)
	{
	}

	[Token(Token = "0x6000CBA")]
	[Address(RVA = "0xE855C0", Offset = "0xE855C0", VA = "0xE855C0")]
	private void FollowHand(PlayerHand hand, OrientedPoint handAttachPoint)
	{
	}

	[Token(Token = "0x6000CBB")]
	[Address(RVA = "0xE85770", Offset = "0xE85770", VA = "0xE85770")]
	public Quaternion GetCachedHandRotation()
	{
		return default(Quaternion);
	}

	[Token(Token = "0x6000CBC")]
	[Address(RVA = "0xE85784", Offset = "0xE85784", VA = "0xE85784")]
	public void SaveCurrentVelocity(PlayerHand hand, OrientedPoint handAttachPoint)
	{
	}

	[Token(Token = "0x6000CBD")]
	[Address(RVA = "0xE857D4", Offset = "0xE857D4", VA = "0xE857D4")]
	private Vector3 GetPredictedVelocity(PlayerHand hand, OrientedPoint handAttachPoint)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000CBE")]
	[Address(RVA = "0xE85864", Offset = "0xE85864", VA = "0xE85864")]
	private void ThrowGrabbable(Vector3 velocityToApply)
	{
	}

	[Token(Token = "0x6000CBF")]
	[Address(RVA = "0xE858BC", Offset = "0xE858BC", VA = "0xE858BC")]
	private bool PlaceOnFlatSurfaceBelow()
	{
		return default(bool);
	}

	[Token(Token = "0x6000CC0")]
	[Address(RVA = "0xE85AC0", Offset = "0xE85AC0", VA = "0xE85AC0")]
	private void SnapToSurfaceBelow()
	{
	}

	[Token(Token = "0x6000CC1")]
	[Address(RVA = "0xE85C8C", Offset = "0xE85C8C", VA = "0xE85C8C")]
	private void SnapToWall()
	{
	}

	[Token(Token = "0x6000CC2")]
	[Address(RVA = "0xE85D1C", Offset = "0xE85D1C", VA = "0xE85D1C", Slot = "9")]
	public void StopGrabbing(PlayerHand hand, Vector3 grabPositionOnItem, OrientedPoint handAttachPoint)
	{
	}

	[Token(Token = "0x6000CC3")]
	[Address(RVA = "0xE864EC", Offset = "0xE864EC", VA = "0xE864EC")]
	public void ForceDetach()
	{
	}

	[Token(Token = "0x6000CC4")]
	[Address(RVA = "0xE8659C", Offset = "0xE8659C", VA = "0xE8659C")]
	public void ForceLetGo()
	{
	}

	[Token(Token = "0x6000CC5")]
	[Address(RVA = "0xE863C0", Offset = "0xE863C0", VA = "0xE863C0")]
	private void MoveToCurrentZone()
	{
	}

	[Token(Token = "0x6000CC6")]
	[Address(RVA = "0xE865EC", Offset = "0xE865EC", VA = "0xE865EC")]
	public void AssignSaveObject(SaveObjectBase saveObj)
	{
	}

	[Token(Token = "0x6000CC7")]
	[Address(RVA = "0xE8661C", Offset = "0xE8661C", VA = "0xE8661C", Slot = "11")]
	public bool IsEnabled()
	{
		return default(bool);
	}

	[Token(Token = "0x6000CC8")]
	[Address(RVA = "0xE86624", Offset = "0xE86624", VA = "0xE86624", Slot = "20")]
	public bool HaveChildGrabbables()
	{
		return default(bool);
	}

	[Token(Token = "0x6000CC9")]
	[Address(RVA = "0xE8662C", Offset = "0xE8662C", VA = "0xE8662C", Slot = "12")]
	public bool ShouldConsumeGrab(Collider collider)
	{
		return default(bool);
	}

	[Token(Token = "0x6000CCA")]
	[Address(RVA = "0xE866FC", Offset = "0xE866FC", VA = "0xE866FC", Slot = "13")]
	public void Touch()
	{
	}

	[Token(Token = "0x6000CCB")]
	[Address(RVA = "0xE8678C", Offset = "0xE8678C", VA = "0xE8678C", Slot = "15")]
	public Collider[] GetColliders()
	{
		return null;
	}

	[Token(Token = "0x6000CCC")]
	[Address(RVA = "0xE86794", Offset = "0xE86794", VA = "0xE86794")]
	public void AssignCollider(Collider col)
	{
	}

	[Token(Token = "0x6000CCD")]
	[Address(RVA = "0xE84FC4", Offset = "0xE84FC4", VA = "0xE84FC4")]
	private void ToggleUseage(bool inUse)
	{
	}

	[Token(Token = "0x6000CCE")]
	[Address(RVA = "0xE86854", Offset = "0xE86854", VA = "0xE86854")]
	public void ApplyVeryLargeObjectScaleIfNeeded()
	{
	}

	[Token(Token = "0x6000CCF")]
	[Address(RVA = "0xE863B4", Offset = "0xE863B4", VA = "0xE863B4")]
	private void ResetLayers(GameObject go, int layer)
	{
	}

	[Token(Token = "0x6000CD0")]
	[Address(RVA = "0xE868A8", Offset = "0xE868A8", VA = "0xE868A8")]
	private bool CanBeMadeKinematic()
	{
		return default(bool);
	}

	[Token(Token = "0x6000CD1")]
	[Address(RVA = "0xE868C4", Offset = "0xE868C4", VA = "0xE868C4")]
	public bool IsHeldStashedOrAnimated()
	{
		return default(bool);
	}

	[Token(Token = "0x6000CD2")]
	[Address(RVA = "0xE85BFC", Offset = "0xE85BFC", VA = "0xE85BFC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x98B68C", Offset = "0x98B68C")]
	private IEnumerator MakeKinematicAfterDelay(bool canAdjustDrag = true)
	{
		return null;
	}

	[Token(Token = "0x6000CD3")]
	[Address(RVA = "0xE83990", Offset = "0xE83990", VA = "0xE83990")]
	private void CancelKinematicAfterDelayRoutine()
	{
	}

	[Token(Token = "0x6000CD4")]
	[Address(RVA = "0xE869A4", Offset = "0xE869A4", VA = "0xE869A4", Slot = "4")]
	public override ComponentState CreateState()
	{
		return null;
	}

	[Token(Token = "0x6000CD5")]
	[Address(RVA = "0xE86A0C", Offset = "0xE86A0C", VA = "0xE86A0C", Slot = "16")]
	public void Initialize()
	{
	}

	[Token(Token = "0x6000CD6")]
	[Address(RVA = "0xE86B58", Offset = "0xE86B58", VA = "0xE86B58")]
	public void AttachToSaveObjectSlot(AttachSlot slot)
	{
	}

	[Token(Token = "0x6000CD7")]
	[Address(RVA = "0xE853FC", Offset = "0xE853FC", VA = "0xE853FC")]
	public void DetachFromSaveObjectSlot()
	{
	}

	[Token(Token = "0x6000CD8")]
	[Address(RVA = "0xE86CD0", Offset = "0xE86CD0", VA = "0xE86CD0")]
	public void WasDetachedFromSaveObjectSlot()
	{
	}

	[Token(Token = "0x6000CD9")]
	[Address(RVA = "0xE86CDC", Offset = "0xE86CDC", VA = "0xE86CDC")]
	public bool IsAttachedToParentGrabbable()
	{
		return default(bool);
	}

	[Token(Token = "0x6000CDA")]
	[Address(RVA = "0xE86DA4", Offset = "0xE86DA4", VA = "0xE86DA4", Slot = "6")]
	public bool IsExtraSticky()
	{
		return default(bool);
	}

	[Token(Token = "0x6000CDB")]
	[Address(RVA = "0xE86DAC", Offset = "0xE86DAC", VA = "0xE86DAC", Slot = "14")]
	public float GetDelayBeforeGrab()
	{
		return default(float);
	}

	[Token(Token = "0x6000CDC")]
	[Address(RVA = "0xE86ED8", Offset = "0xE86ED8", VA = "0xE86ED8")]
	public Grabbable()
	{
	}
}
[Serializable]
[Token(Token = "0x2000234")]
public class GrabbableState : ComponentState
{
	[Token(Token = "0x4000D37")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public bool largeObjectHasBeenPlaced;

	[Token(Token = "0x6000CEA")]
	[Address(RVA = "0xBDA110", Offset = "0xBDA110", VA = "0xBDA110")]
	public GrabbableState(bool objectPlaced)
	{
	}
}
[Token(Token = "0x2000235")]
public class GrabbableOutline : MonoBehaviour, IValidateCustom, IValidate
{
	[Token(Token = "0x2000236")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x972384", Offset = "0x972384")]
	private sealed class <>c__DisplayClass18_0
	{
		[Token(Token = "0x4000D4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool value;

		[Token(Token = "0x6000D04")]
		[Address(RVA = "0xBDA0E4", Offset = "0xBDA0E4", VA = "0xBDA0E4")]
		public <>c__DisplayClass18_0()
		{
		}

		[Token(Token = "0x6000D05")]
		[Address(RVA = "0xBDA0EC", Offset = "0xBDA0EC", VA = "0xBDA0EC")]
		internal void <set_ShowSpriteOutline>b__0(SpriteRenderer x)
		{
		}
	}

	[Token(Token = "0x4000D38")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x978F98", Offset = "0x978F98")]
	private Transform[] m_ignoredObjects;

	[Token(Token = "0x4000D39")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Color currentOutlineColor;

	[Token(Token = "0x4000D3A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool HavePlantHighlight;

	[Token(Token = "0x4000D3B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private PlantSystemIndexable PlantComponent;

	[Token(Token = "0x4000D3C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[HideInInspector]
	public ChildGrabbableToggler ParentToggler;

	[Token(Token = "0x4000D3D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x978FF4", Offset = "0x978FF4")]
	[SerializeField]
	private SpriteRenderer[] spritesToOutlineOnHover;

	[Token(Token = "0x4000D3E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x979040", Offset = "0x979040")]
	[SerializeField]
	private MeshFilter[] MeshFilters;

	[Token(Token = "0x4000D3F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private MeshRenderer[] MeshRenderers;

	[Token(Token = "0x4000D40")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private SkinnedMeshRenderer[] SkinnedMeshRenderers;

	[Token(Token = "0x4000D41")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private Mesh[] overrideOutlineMeshes;

	[Token(Token = "0x4000D42")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private bool hasOutlineSprites;

	[Token(Token = "0x4000D43")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private SpriteRenderer[] spriteOutlines;

	[Token(Token = "0x4000D44")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Grabbable attachedGrabbable;

	[Token(Token = "0x4000D45")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9790BC", Offset = "0x9790BC")]
	private bool <CanShowOutline>k__BackingField;

	[Token(Token = "0x4000D46")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Material outlineMaterialSprite;

	[Token(Token = "0x4000D47")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static Material outlineMaterial3D;

	[Token(Token = "0x4000D48")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static Material outlineMaterialPlants3D;

	[Token(Token = "0x4000D49")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static readonly int outlineColorId;

	[Token(Token = "0x4000D4A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private static Color defaultOutlineColor;

	[Token(Token = "0x4000D4B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private static bool defaultColorInitialized;

	[Token(Token = "0x4000D4C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private static Dictionary<Mesh, Mesh> outlineMeshDict;

	[Token(Token = "0x4000D4D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private Mesh[] outlineMeshes;

	[Token(Token = "0x4000D4E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public static bool OutlineDisabled;

	[Token(Token = "0x17000158")]
	public bool CanShowOutline
	{
		[Token(Token = "0x6000CEB")]
		[Address(RVA = "0xE87A28", Offset = "0xE87A28", VA = "0xE87A28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x98B740", Offset = "0x98B740")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000CEC")]
		[Address(RVA = "0xE87A30", Offset = "0xE87A30", VA = "0xE87A30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x98B750", Offset = "0x98B750")]
		set
		{
		}
	}

	[Token(Token = "0x17000159")]
	public bool ShowSpriteOutline
	{
		[Token(Token = "0x6000CED")]
		[Address(RVA = "0xE87A3C", Offset = "0xE87A3C", VA = "0xE87A3C")]
		set
		{
		}
	}

	[Token(Token = "0x1700015A")]
	private static Material OutlineMaterialSprite
	{
		[Token(Token = "0x6000CEE")]
		[Address(RVA = "0xE87B18", Offset = "0xE87B18", VA = "0xE87B18")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700015B")]
	private static Material OutlineMaterial3D
	{
		[Token(Token = "0x6000CEF")]
		[Address(RVA = "0xE87BEC", Offset = "0xE87BEC", VA = "0xE87BEC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700015C")]
	private static Material OutlineMaterialPlants3D
	{
		[Token(Token = "0x6000CF0")]
		[Address(RVA = "0xE87CC0", Offset = "0xE87CC0", VA = "0xE87CC0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000CF1")]
	[Address(RVA = "0xE87D94", Offset = "0xE87D94", VA = "0xE87D94")]
	public void AssignGrabbable(Grabbable grabbable)
	{
	}

	[Token(Token = "0x6000CF2")]
	[Address(RVA = "0xE87D9C", Offset = "0xE87D9C", VA = "0xE87D9C")]
	public Grabbable GetGrabbable()
	{
		return null;
	}

	[Token(Token = "0x6000CF3")]
	[Address(RVA = "0xE87DA4", Offset = "0xE87DA4", VA = "0xE87DA4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000CF4")]
	[Address(RVA = "0xE8897C", Offset = "0xE8897C", VA = "0xE8897C")]
	private void UpdateSkinnedMeshRenderers(bool enable)
	{
	}

	[Token(Token = "0x6000CF5")]
	[Address(RVA = "0xE880D0", Offset = "0xE880D0", VA = "0xE880D0")]
	public void SetupOutlineMeshes()
	{
	}

	[Token(Token = "0x6000CF6")]
	[Address(RVA = "0xE88A98", Offset = "0xE88A98", VA = "0xE88A98")]
	public static Mesh MakeOutlineMesh(Mesh inputMesh)
	{
		return null;
	}

	[Token(Token = "0x6000CF7")]
	[Address(RVA = "0xE89010", Offset = "0xE89010", VA = "0xE89010")]
	public bool SetupHighlighting(bool shouldFix = true)
	{
		return default(bool);
	}

	[Token(Token = "0x6000CF8")]
	[Address(RVA = "0xE87FEC", Offset = "0xE87FEC", VA = "0xE87FEC")]
	private void SetOutlineColor()
	{
	}

	[Token(Token = "0x6000CF9")]
	[Address(RVA = "0xE87DEC", Offset = "0xE87DEC", VA = "0xE87DEC")]
	private void Setup2DHighlighting()
	{
	}

	[Token(Token = "0x6000CFA")]
	private T[] GetNonIgnoredOutlineComponents<T>(T[] outlineComponents) where T : Component
	{
		return null;
	}

	[Token(Token = "0x6000CFB")]
	[Address(RVA = "0xE89240", Offset = "0xE89240", VA = "0xE89240")]
	public void OnHoverStart()
	{
	}

	[Token(Token = "0x6000CFC")]
	[Address(RVA = "0xE892F8", Offset = "0xE892F8", VA = "0xE892F8")]
	public void OnHoverUpdate(Camera c)
	{
	}

	[Token(Token = "0x6000CFD")]
	[Address(RVA = "0xE89C5C", Offset = "0xE89C5C", VA = "0xE89C5C")]
	public void OnHoverEnd()
	{
	}

	[Token(Token = "0x6000CFE")]
	[Address(RVA = "0xE893D4", Offset = "0xE893D4", VA = "0xE893D4")]
	private bool DrawOutline3D(Camera c)
	{
		return default(bool);
	}

	[Token(Token = "0x6000CFF")]
	[Address(RVA = "0xE89C88", Offset = "0xE89C88", VA = "0xE89C88")]
	public void SetOutlineColor(Color newColor)
	{
	}

	[Token(Token = "0x6000D00")]
	[Address(RVA = "0xE89C94", Offset = "0xE89C94", VA = "0xE89C94")]
	public void ResetOutlineColor()
	{
	}

	[Token(Token = "0x6000D01")]
	[Address(RVA = "0xE89D04", Offset = "0xE89D04", VA = "0xE89D04")]
	public GrabbableOutline()
	{
	}

	[Token(Token = "0x6000D03")]
	[Address(RVA = "0xE89138", Offset = "0xE89138", VA = "0xE89138")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x98B760", Offset = "0x98B760")]
	internal static SpriteRenderer <Setup2DHighlighting>g__CreateOutlineSprite|41_0(SpriteRenderer parentSprite)
	{
		return null;
	}
}
[Token(Token = "0x2000237")]
public class GrabbableUtils
{
	[Token(Token = "0x6000D06")]
	[Address(RVA = "0xBDA408", Offset = "0xBDA408", VA = "0xBDA408")]
	public static Vector3 PredictVelocityForFrame(ref List<Vector3> previousVelocities, int frame)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000D07")]
	[Address(RVA = "0xBDA790", Offset = "0xBDA790", VA = "0xBDA790")]
	public static Collider[] FindGrabbableColliders(IGrabbable rootGrabbable, GameObject rootGo)
	{
		return null;
	}

	[Token(Token = "0x6000D08")]
	[Address(RVA = "0xBDA830", Offset = "0xBDA830", VA = "0xBDA830")]
	private static void FindCollidersRecursive(IGrabbable rootGrabbable, GameObject go, ref List<Collider> collidersOut)
	{
	}
}
[Token(Token = "0x2000238")]
public class Harvestable : MonoBehaviour
{
	[Token(Token = "0x4000D50")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9790CC", Offset = "0x9790CC")]
	private CraftingSystem.ResourceTypeEnum craftingResourceType;

	[Token(Token = "0x4000D51")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x979118", Offset = "0x979118")]
	[SerializeField]
	private CurrencyType currencyType;

	[Token(Token = "0x1700015D")]
	public CraftingSystem.ResourceType ResourceType
	{
		[Token(Token = "0x6000D09")]
		[Address(RVA = "0xBDD984", Offset = "0xBDD984", VA = "0xBDD984")]
		get
		{
			return default(CraftingSystem.ResourceType);
		}
	}

	[Token(Token = "0x1700015E")]
	public CurrencyType CurrencyType
	{
		[Token(Token = "0x6000D0A")]
		[Address(RVA = "0xBDD9D4", Offset = "0xBDD9D4", VA = "0xBDD9D4")]
		get
		{
			return default(CurrencyType);
		}
		[Token(Token = "0x6000D0B")]
		[Address(RVA = "0xBDD9DC", Offset = "0xBDD9DC", VA = "0xBDD9DC")]
		set
		{
		}
	}

	[Token(Token = "0x1700015F")]
	public bool HasValidResourceType
	{
		[Token(Token = "0x6000D0C")]
		[Address(RVA = "0xBDD9E4", Offset = "0xBDD9E4", VA = "0xBDD9E4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000D0D")]
	[Address(RVA = "0xBDDA48", Offset = "0xBDDA48", VA = "0xBDDA48")]
	public void SetResourceType(CraftingSystem.ResourceType resourceType)
	{
	}

	[Token(Token = "0x6000D0E")]
	[Address(RVA = "0xBDDAC0", Offset = "0xBDDAC0", VA = "0xBDDAC0")]
	public Harvestable()
	{
	}
}
[Token(Token = "0x2000239")]
public interface IStickyVolume
{
	[Token(Token = "0x6000D0F")]
	bool TrySetSticky(StickyNote sticky);
}
[Token(Token = "0x200023A")]
public class InstrumentCrystalAnimation : MonoBehaviour
{
	[Token(Token = "0x200023B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x972394", Offset = "0x972394")]
	private sealed class <AnimateScale>d__4 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000D54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000D55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000D56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float duration;

		[Token(Token = "0x4000D57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float minScale;

		[Token(Token = "0x4000D58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float maxScale;

		[Token(Token = "0x4000D59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public InstrumentCrystalAnimation <>4__this;

		[Token(Token = "0x4000D5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float <timeElapsed>5__2;

		[Token(Token = "0x4000D5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float <dir>5__3;

		[Token(Token = "0x17000160")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000D19")]
			[Address(RVA = "0xBDF308", Offset = "0xBDF308", VA = "0xBDF308", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000161")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000D1B")]
			[Address(RVA = "0xBDF370", Offset = "0xBDF370", VA = "0xBDF370", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000D16")]
		[Address(RVA = "0xBDEEF4", Offset = "0xBDEEF4", VA = "0xBDEEF4")]
		[DebuggerHidden]
		public <AnimateScale>d__4(int <>1__state)
		{
		}

		[Token(Token = "0x6000D17")]
		[Address(RVA = "0xBDF128", Offset = "0xBDF128", VA = "0xBDF128", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000D18")]
		[Address(RVA = "0xBDF12C", Offset = "0xBDF12C", VA = "0xBDF12C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000D1A")]
		[Address(RVA = "0xBDF310", Offset = "0xBDF310", VA = "0xBDF310", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000D52")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Coroutine shakeAnim;

	[Token(Token = "0x4000D53")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Coroutine scaleAnim;

	[Token(Token = "0x6000D10")]
	[Address(RVA = "0xBDED14", Offset = "0xBDED14", VA = "0xBDED14")]
	public void Scale(float duration, float minScale, float maxScale)
	{
	}

	[Token(Token = "0x6000D11")]
	[Address(RVA = "0xBDEE34", Offset = "0xBDEE34", VA = "0xBDEE34")]
	public void StopScaling()
	{
	}

	[Token(Token = "0x6000D12")]
	[Address(RVA = "0xBDED94", Offset = "0xBDED94", VA = "0xBDED94")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x98B770", Offset = "0x98B770")]
	private IEnumerator AnimateScale(float duration, float minScale, float maxScale)
	{
		return null;
	}

	[Token(Token = "0x6000D13")]
	[Address(RVA = "0xBDEF20", Offset = "0xBDEF20", VA = "0xBDEF20")]
	public void Shake(float duration)
	{
	}

	[Token(Token = "0x6000D14")]
	[Address(RVA = "0xBDF024", Offset = "0xBDF024", VA = "0xBDF024")]
	public void StopShaking()
	{
	}

	[Token(Token = "0x6000D15")]
	[Address(RVA = "0xBDF120", Offset = "0xBDF120", VA = "0xBDF120")]
	public InstrumentCrystalAnimation()
	{
	}
}
[Token(Token = "0x200023C")]
public interface IGrabbable
{
	[Token(Token = "0x6000D1C")]
	int GetCurrentPriority();

	[Token(Token = "0x6000D1D")]
	bool IsExtraSticky();

	[Token(Token = "0x6000D1E")]
	GrabbableOutline GetOutline();

	[Token(Token = "0x6000D1F")]
	void StartGrabbing(PlayerHand hand, Vector3 grabPositionOnItem, OrientedPoint handAttachPoint);

	[Token(Token = "0x6000D20")]
	void StopGrabbing(PlayerHand hand, Vector3 grabPositionOnItem, OrientedPoint attachPoint);

	[Token(Token = "0x6000D21")]
	void UpdateGrabbing(PlayerHand hand, Vector3 grabPositionOnItem, OrientedPoint attachPoint);

	[Token(Token = "0x6000D22")]
	bool IsEnabled();

	[Token(Token = "0x6000D23")]
	bool ShouldConsumeGrab(Collider collider);

	[Token(Token = "0x6000D24")]
	void Touch();

	[Token(Token = "0x6000D25")]
	float GetDelayBeforeGrab();

	[Token(Token = "0x6000D26")]
	Collider[] GetColliders();
}
[Token(Token = "0x200023D")]
public interface IInteractableByTool
{
	[Token(Token = "0x6000D27")]
	void DoInteraction(ITool tool);
}
[Token(Token = "0x200023E")]
public interface ITillable
{
	[Token(Token = "0x6000D28")]
	void Till();
}
[Token(Token = "0x200023F")]
public enum ToolType
{
	[Token(Token = "0x4000D5D")]
	WateringCan,
	[Token(Token = "0x4000D5E")]
	Hoe,
	[Token(Token = "0x4000D5F")]
	SeedBag,
	[Token(Token = "0x4000D60")]
	Seed,
	[Token(Token = "0x4000D61")]
	FishingRod,
	[Token(Token = "0x4000D62")]
	Sickle,
	[Token(Token = "0x4000D63")]
	Plantable,
	[Token(Token = "0x4000D64")]
	Axe,
	[Token(Token = "0x4000D65")]
	Camera,
	[Token(Token = "0x4000D66")]
	Wallet,
	[Token(Token = "0x4000D67")]
	None
}
[Token(Token = "0x2000240")]
public interface ITool
{
	[Token(Token = "0x6000D29")]
	ToolType GetToolType();

	[Token(Token = "0x6000D2A")]
	int GetUpgradeLevel();
}
[Token(Token = "0x2000241")]
public class KinematicAtRest : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x2000242")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9723A4", Offset = "0x9723A4")]
	private sealed class <>c
	{
		[Token(Token = "0x4000D6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4000D6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Action <>9__9_0;

		[Token(Token = "0x6000D31")]
		[Address(RVA = "0xBE45FC", Offset = "0xBE45FC", VA = "0xBE45FC")]
		public <>c()
		{
		}

		[Token(Token = "0x6000D32")]
		[Address(RVA = "0xBE4604", Offset = "0xBE4604", VA = "0xBE4604")]
		internal void <.ctor>b__9_0()
		{
		}
	}

	[Token(Token = "0x4000D69")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private float movementThreshold;

	[Token(Token = "0x4000D6A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	private float timeAtRestBeforeKinematic;

	[Token(Token = "0x4000D6B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float timer;

	[Token(Token = "0x4000D6C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Rigidbody rb;

	[Token(Token = "0x14000017")]
	public event Action OnSettle
	{
		[Token(Token = "0x6000D2B")]
		[Address(RVA = "0xBE41AC", Offset = "0xBE41AC", VA = "0xBE41AC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x98B824", Offset = "0x98B824")]
		add
		{
		}
		[Token(Token = "0x6000D2C")]
		[Address(RVA = "0xBE4250", Offset = "0xBE4250", VA = "0xBE4250")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x98B834", Offset = "0x98B834")]
		remove
		{
		}
	}

	[Token(Token = "0x6000D2D")]
	[Address(RVA = "0xBE42F4", Offset = "0xBE42F4", VA = "0xBE42F4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000D2E")]
	[Address(RVA = "0xBE43C8", Offset = "0xBE43C8", VA = "0xBE43C8")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000D2F")]
	[Address(RVA = "0xBE4490", Offset = "0xBE4490", VA = "0xBE4490")]
	public KinematicAtRest()
	{
	}
}
[Token(Token = "0x2000243")]
public class Pettable : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x2000244")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9723B4", Offset = "0x9723B4")]
	private sealed class <>c
	{
		[Token(Token = "0x4000D7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4000D7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Action <>9__19_0;

		[Token(Token = "0x4000D7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static Action <>9__19_1;

		[Token(Token = "0x6000D3E")]
		[Address(RVA = "0xBBB2F4", Offset = "0xBBB2F4", VA = "0xBBB2F4")]
		public <>c()
		{
		}

		[Token(Token = "0x6000D3F")]
		[Address(RVA = "0xBBB2FC", Offset = "0xBBB2FC", VA = "0xBBB2FC")]
		internal void <.ctor>b__19_0()
		{
		}

		[Token(Token = "0x6000D40")]
		[Address(RVA = "0xBBB300", Offset = "0xBBB300", VA = "0xBBB300")]
		internal void <.ctor>b__19_1()
		{
		}
	}

	[Token(Token = "0x4000D6F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x979194", Offset = "0x979194")]
	public UnityEvent OnPettingStart;

	[Token(Token = "0x4000D70")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public UnityEvent OnPettingEnd;

	[Token(Token = "0x4000D71")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public UnityEvent OnDidPetForALongTime;

	[Token(Token = "0x4000D72")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private NeatAudioPlayer pettingAudio;

	[Token(Token = "0x4000D73")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static readonly int SPEED;

	[Token(Token = "0x4000D74")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private PettableCollider[] m_pettableColliders;

	[Token(Token = "0x4000D77")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private PlayerHand currentPetter;

	[Token(Token = "0x4000D78")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float pettingTimeout;

	[Token(Token = "0x4000D79")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private float timeSpentPetting;

	[Token(Token = "0x14000018")]
	[HideInInspector]
	public event Action OnPettingStartCallback
	{
		[Token(Token = "0x6000D33")]
		[Address(RVA = "0xBBAA10", Offset = "0xBBAA10", VA = "0xBBAA10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x98B844", Offset = "0x98B844")]
		add
		{
		}
		[Token(Token = "0x6000D34")]
		[Address(RVA = "0xBBAAB4", Offset = "0xBBAAB4", VA = "0xBBAAB4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x98B854", Offset = "0x98B854")]
		remove
		{
		}
	}

	[Token(Token = "0x14000019")]
	public event Action OnPettingEndCallback
	{
		[Token(Token = "0x6000D35")]
		[Address(RVA = "0xBBAB58", Offset = "0xBBAB58", VA = "0xBBAB58")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x98B864", Offset = "0x98B864")]
		add
		{
		}
		[Token(Token = "0x6000D36")]
		[Address(RVA = "0xBBABFC", Offset = "0xBBABFC", VA = "0xBBABFC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x98B874", Offset = "0x98B874")]
		remove
		{
		}
	}

	[Token(Token = "0x6000D37")]
	[Address(RVA = "0xBBACA0", Offset = "0xBBACA0", VA = "0xBBACA0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000D38")]
	[Address(RVA = "0xBBAEF0", Offset = "0xBBAEF0", VA = "0xBBAEF0")]
	public bool CanPet(PlayerHand hand)
	{
		return default(bool);
	}

	[Token(Token = "0x6000D39")]
	[Address(RVA = "0xBBAEF8", Offset = "0xBBAEF8", VA = "0xBBAEF8")]
	public void Pet(PlayerHand hand)
	{
	}

	[Token(Token = "0x6000D3A")]
	[Address(RVA = "0xBBB00C", Offset = "0xBBB00C", VA = "0xBBB00C")]
	public void StopPetting(PlayerHand hand)
	{
	}

	[Token(Token = "0x6000D3B")]
	[Address(RVA = "0xBBB098", Offset = "0xBBB098", VA = "0xBBB098")]
	public Pettable()
	{
	}
}
[Token(Token = "0x2000245")]
public class PrevNextButton : PushButton
{
	[Token(Token = "0x2000246")]
	public enum BtnDirection
	{
		[Token(Token = "0x4000D86")]
		Prev,
		[Token(Token = "0x4000D87")]
		Next
	}

	[Token(Token = "0x4000D7D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly Vector3 DefaultHoverScale;

	[Token(Token = "0x4000D7E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	[SerializeField]
	private Transform m_visual;

	[Token(Token = "0x4000D7F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	[SerializeField]
	private Vector3 m_hoverScaleUpValue;

	[Token(Token = "0x4000D80")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
	[SerializeField]
	private float m_scaleSpeed;

	[Token(Token = "0x4000D81")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private Vector3 m_defaultScale;

	[Token(Token = "0x4000D82")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
	public BtnDirection Direction;

	[Token(Token = "0x4000D83")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	public GameSettingId SettingId;

	[Token(Token = "0x4000D84")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x97923C", Offset = "0x97923C")]
	private int <Value>k__BackingField;

	[Token(Token = "0x17000162")]
	public int Value
	{
		[Token(Token = "0x6000D41")]
		[Address(RVA = "0xD140F4", Offset = "0xD140F4", VA = "0xD140F4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x98B884", Offset = "0x98B884")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000D42")]
		[Address(RVA = "0xD140FC", Offset = "0xD140FC", VA = "0xD140FC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x98B894", Offset = "0x98B894")]
		set
		{
		}
	}

	[Token(Token = "0x6000D43")]
	[Address(RVA = "0xD14104", Offset = "0xD14104", VA = "0xD14104", Slot = "21")]
	public override void Awake()
	{
	}

	[Token(Token = "0x6000D44")]
	[Address(RVA = "0xD141B4", Offset = "0xD141B4", VA = "0xD141B4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000D45")]
	[Address(RVA = "0xD142D8", Offset = "0xD142D8", VA = "0xD142D8")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000D46")]
	[Address(RVA = "0xD143FC", Offset = "0xD143FC", VA = "0xD143FC", Slot = "7")]
	public override void PressButton(PlayerHand hand)
	{
	}

	[Token(Token = "0x6000D47")]
	[Address(RVA = "0xD14434", Offset = "0xD14434", VA = "0xD14434")]
	public void HoverOver(PushButton button)
	{
	}

	[Token(Token = "0x6000D48")]
	[Address(RVA = "0xD144EC", Offset = "0xD144EC", VA = "0xD144EC")]
	public void HoverOut(PushButton button)
	{
	}

	[Token(Token = "0x6000D49")]
	[Address(RVA = "0xD14504", Offset = "0xD14504", VA = "0xD14504")]
	public PrevNextButton()
	{
	}
}
[Token(Token = "0x2000247")]
public class Pushable : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x2000248")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9723C4", Offset = "0x9723C4")]
	private sealed class <>c
	{
		[Token(Token = "0x4000D90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4000D91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Action<PlayerHand> <>9__15_0;

		[Token(Token = "0x6000D54")]
		[Address(RVA = "0xD168B0", Offset = "0xD168B0", VA = "0xD168B0")]
		public <>c()
		{
		}

		[Token(Token = "0x6000D55")]
		[Address(RVA = "0xD168B8", Offset = "0xD168B8", VA = "0xD168B8")]
		internal void <.ctor>b__15_0(PlayerHand <p0>)
		{
		}
	}

	[Token(Token = "0x4000D89")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float maxPushDistance;

	[Token(Token = "0x4000D8A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float currentDistance;

	[Token(Token = "0x4000D8B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Vector3 startPos;

	[Token(Token = "0x4000D8C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private Vector3 previousPos;

	[Token(Token = "0x4000D8D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Collider currentCollider;

	[Token(Token = "0x4000D8E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private PlayerHand currentHand;

	[Token(Token = "0x4000D8F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool pushed;

	[Token(Token = "0x1400001A")]
	[HideInInspector]
	public event Action<PlayerHand> OnPush
	{
		[Token(Token = "0x6000D4B")]
		[Address(RVA = "0xD16078", Offset = "0xD16078", VA = "0xD16078")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x98B8A4", Offset = "0x98B8A4")]
		add
		{
		}
		[Token(Token = "0x6000D4C")]
		[Address(RVA = "0xD1611C", Offset = "0xD1611C", VA = "0xD1611C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x98B8B4", Offset = "0x98B8B4")]
		remove
		{
		}
	}

	[Token(Token = "0x6000D4D")]
	[Address(RVA = "0xD161C0", Offset = "0xD161C0", VA = "0xD161C0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000D4E")]
	[Address(RVA = "0xD161FC", Offset = "0xD161FC", VA = "0xD161FC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000D4F")]
	[Address(RVA = "0xD164E4", Offset = "0xD164E4", VA = "0xD164E4")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000D50")]
	[Address(RVA = "0xD16660", Offset = "0xD16660", VA = "0xD16660")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x6000D51")]
	[Address(RVA = "0xD165FC", Offset = "0xD165FC", VA = "0xD165FC")]
	private void Reset()
	{
	}

	[Token(Token = "0x6000D52")]
	[Address(RVA = "0xD166F8", Offset = "0xD166F8", VA = "0xD166F8")]
	public Pushable()
	{
	}
}
[Token(Token = "0x2000249")]
public class RecipeBoard : SaveableComponent, IInitializable, IHouseholdMovable, IStickyVolume
{
	[Token(Token = "0x200024A")]
	private class RecipeBoardState : ComponentState
	{
		[Token(Token = "0x4000D96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool HasUnlockedAll;

		[Token(Token = "0x6000D63")]
		[Address(RVA = "0xD1E2E4", Offset = "0xD1E2E4", VA = "0xD1E2E4")]
		public RecipeBoardState(bool hasUnlockedAll)
		{
		}
	}

	[Token(Token = "0x4000D92")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private List<StickyNotePosition> m_positions;

	[Token(Token = "0x4000D93")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Collider[] m_stickyColliders;

	[Token(Token = "0x4000D94")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool m_hasUnlockedAll;

	[Token(Token = "0x4000D95")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
	private bool m_initialized;

	[Token(Token = "0x6000D56")]
	[Address(RVA = "0xD1D6D8", Offset = "0xD1D6D8", VA = "0xD1D6D8")]
	private void OnValidate()
	{
	}

	[Token(Token = "0x6000D57")]
	[Address(RVA = "0xD1D9B8", Offset = "0xD1D9B8", VA = "0xD1D9B8", Slot = "5")]
	public void Initialize()
	{
	}

	[Token(Token = "0x6000D58")]
	[Address(RVA = "0xD1DB18", Offset = "0xD1DB18", VA = "0xD1DB18")]
	private void PlaceStickyNotes()
	{
	}

	[Token(Token = "0x6000D59")]
	[Address(RVA = "0xD1DCB0", Offset = "0xD1DCB0", VA = "0xD1DCB0")]
	private void PlaceStickys(BoxCollider col)
	{
	}

	[Token(Token = "0x6000D5A")]
	[Address(RVA = "0xD1DECC", Offset = "0xD1DECC", VA = "0xD1DECC", Slot = "10")]
	public bool TrySetSticky(StickyNote sticky)
	{
		return default(bool);
	}

	[Token(Token = "0x6000D5B")]
	[Address(RVA = "0xD1DFAC", Offset = "0xD1DFAC", VA = "0xD1DFAC")]
	private StickyNotePosition GetNearestStickyPosition(Vector3 position)
	{
		return null;
	}

	[Token(Token = "0x6000D5C")]
	[Address(RVA = "0xD1E1B8", Offset = "0xD1E1B8", VA = "0xD1E1B8", Slot = "6")]
	public void OnPreUpgrade(int homeLevel)
	{
	}

	[Token(Token = "0x6000D5D")]
	[Address(RVA = "0xD1DA5C", Offset = "0xD1DA5C", VA = "0xD1DA5C")]
	private void UnlockAllRecipePositions()
	{
	}

	[Token(Token = "0x6000D5E")]
	[Address(RVA = "0xD1E1D0", Offset = "0xD1E1D0", VA = "0xD1E1D0", Slot = "7")]
	public void OnPostUpgrade(int homeLevel)
	{
	}

	[Token(Token = "0x6000D5F")]
	[Address(RVA = "0xD1E1D4", Offset = "0xD1E1D4", VA = "0xD1E1D4", Slot = "8")]
	public void OnBeforeMove(int homeLevel)
	{
	}

	[Token(Token = "0x6000D60")]
	[Address(RVA = "0xD1E1D8", Offset = "0xD1E1D8", VA = "0xD1E1D8", Slot = "9")]
	public void OnMoved(int homeLevel)
	{
	}

	[Token(Token = "0x6000D61")]
	[Address(RVA = "0xD1E27C", Offset = "0xD1E27C", VA = "0xD1E27C", Slot = "4")]
	public override ComponentState CreateState()
	{
		return null;
	}

	[Token(Token = "0x6000D62")]
	[Address(RVA = "0xD1E314", Offset = "0xD1E314", VA = "0xD1E314")]
	public RecipeBoard()
	{
	}
}
[Token(Token = "0x200024B")]
public class Rotatable : MonoBehaviour, IGrabbable, IInitializable, IValidateCustom, IValidate
{
	[Serializable]
	[Token(Token = "0x200024C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9723D4", Offset = "0x9723D4")]
	private sealed class <>c
	{
		[Token(Token = "0x4000DBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4000DC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Action<bool> <>9__84_0;

		[Token(Token = "0x4000DC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static Action <>9__84_1;

		[Token(Token = "0x6000D8D")]
		[Address(RVA = "0xCB2598", Offset = "0xCB2598", VA = "0xCB2598")]
		public <>c()
		{
		}

		[Token(Token = "0x6000D8E")]
		[Address(RVA = "0xCB25A0", Offset = "0xCB25A0", VA = "0xCB25A0")]
		internal void <.ctor>b__84_0(bool <p0>)
		{
		}

		[Token(Token = "0x6000D8F")]
		[Address(RVA = "0xCB25A4", Offset = "0xCB25A4", VA = "0xCB25A4")]
		internal void <.ctor>b__84_1()
		{
		}
	}

	[Token(Token = "0x4000D97")]
	private const int DefaultPriority = 120;

	[Token(Token = "0x4000D98")]
	private const bool DefaultIsExtraSticky = true;

	[Token(Token = "0x4000D99")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x97926C", Offset = "0x97926C")]
	[SerializeField]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x97926C", Offset = "0x97926C")]
	private float maxPositiveRotation;

	[Token(Token = "0x4000D9A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9792DC", Offset = "0x9792DC")]
	[SerializeField]
	private float maxNegativeRotation;

	[Token(Token = "0x4000D9B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x979328", Offset = "0x979328")]
	public float maxPositiveTotalDelta;

	[Token(Token = "0x4000D9C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x979360", Offset = "0x979360")]
	public float maxNegativeTotalDelta;

	[Token(Token = "0x4000D9D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x979398", Offset = "0x979398")]
	[SerializeField]
	private bool returnToDefaultRotationOnRelease;

	[Token(Token = "0x4000D9E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	[SerializeField]
	private bool elasticRelease;

	[Token(Token = "0x4000D9F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[SerializeField]
	private float elasticityOverflowModifier;

	[Token(Token = "0x4000DA0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private float elasticityDuration;

	[Token(Token = "0x4000DA1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[SerializeField]
	private float returnToDefaultDelay;

	[Token(Token = "0x4000DA2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x979424", Offset = "0x979424")]
	private bool rotateAroundXAxis;

	[Token(Token = "0x4000DA3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
	[SerializeField]
	private bool rotateAroundZAxis;

	[Token(Token = "0x4000DA4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x979480", Offset = "0x979480")]
	public UnityEvent OnGrab;

	[Token(Token = "0x4000DA5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public UnityEvent OnDrop;

	[Token(Token = "0x4000DA8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9794D8", Offset = "0x9794D8")]
	private GrabbableOutline outline;

	[Token(Token = "0x4000DA9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private Collider[] colliders;

	[Token(Token = "0x4000DAA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x979534", Offset = "0x979534")]
	[SerializeField]
	private float m_shutAtDegree;

	[Token(Token = "0x4000DAB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	[SerializeField]
	private float m_shutEvaluationThreshold;

	[Token(Token = "0x4000DAC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private NeatAudioPlayer m_shutAudioCue;

	[Token(Token = "0x4000DAD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private PlayerHand heldByHand;

	[Token(Token = "0x4000DAE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private float currentRotationInDegrees;

	[Token(Token = "0x4000DAF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private Vector3 rotationAxis;

	[Token(Token = "0x4000DB0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private Vector3 maxRotatedYVec;

	[Token(Token = "0x4000DB1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	private Vector3 minRotatedYVec;

	[Token(Token = "0x4000DB2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private float maxAngleCosinePos;

	[Token(Token = "0x4000DB3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	private float maxAngleCosineNeg;

	[NonSerialized]
	[Token(Token = "0x4000DB4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public float totalDeltaRotation;

	[Token(Token = "0x4000DB5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private Quaternion previousLocalRotation;

	[Token(Token = "0x4000DB6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	private Vector3 originalLocalEulerAngles;

	[Token(Token = "0x4000DB7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private Vector3 previousUpLocal;

	[Token(Token = "0x4000DB8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private Sequence rotationTweenSequence;

	[Token(Token = "0x4000DB9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private float[] rotationDeltaBuffer;

	[Token(Token = "0x4000DBA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private bool m_canBeGrabbed;

	[Token(Token = "0x4000DBB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
	private int m_currentPriority;

	[Token(Token = "0x4000DBC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private bool m_isExtraSticky;

	[Token(Token = "0x4000DBD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
	private float m_lastShutRotationDelta;

	[Token(Token = "0x4000DBE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private bool m_initialized;

	[Token(Token = "0x17000163")]
	public bool IsHeld
	{
		[Token(Token = "0x6000D68")]
		[Address(RVA = "0xD20260", Offset = "0xD20260", VA = "0xD20260")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000164")]
	public float CurrentRotation
	{
		[Token(Token = "0x6000D69")]
		[Address(RVA = "0xD202D0", Offset = "0xD202D0", VA = "0xD202D0")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000165")]
	public bool Initialized
	{
		[Token(Token = "0x6000D6A")]
		[Address(RVA = "0xD202D8", Offset = "0xD202D8", VA = "0xD202D8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000166")]
	public float MaxPositiveRoation
	{
		[Token(Token = "0x6000D6B")]
		[Address(RVA = "0xD202E0", Offset = "0xD202E0", VA = "0xD202E0")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000167")]
	public float MaxNegativeRotation
	{
		[Token(Token = "0x6000D6C")]
		[Address(RVA = "0xD202E8", Offset = "0xD202E8", VA = "0xD202E8")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000168")]
	public bool CanBeGrabbed
	{
		[Token(Token = "0x6000D6D")]
		[Address(RVA = "0xD202F0", Offset = "0xD202F0", VA = "0xD202F0")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000D6E")]
		[Address(RVA = "0xD202F8", Offset = "0xD202F8", VA = "0xD202F8")]
		set
		{
		}
	}

	[Token(Token = "0x1400001B")]
	public event Action<bool> OnToggleUsage
	{
		[Token(Token = "0x6000D64")]
		[Address(RVA = "0xD1FFD0", Offset = "0xD1FFD0", VA = "0xD1FFD0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x98B8C4", Offset = "0x98B8C4")]
		add
		{
		}
		[Token(Token = "0x6000D65")]
		[Address(RVA = "0xD20074", Offset = "0xD20074", VA = "0xD20074")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x98B8D4", Offset = "0x98B8D4")]
		remove
		{
		}
	}

	[Token(Token = "0x1400001C")]
	public event Action OnPreGrab
	{
		[Token(Token = "0x6000D66")]
		[Address(RVA = "0xD20118", Offset = "0xD20118", VA = "0xD20118")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x98B8E4", Offset = "0x98B8E4")]
		add
		{
		}
		[Token(Token = "0x6000D67")]
		[Address(RVA = "0xD201BC", Offset = "0xD201BC", VA = "0xD201BC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x98B8F4", Offset = "0x98B8F4")]
		remove
		{
		}
	}

	[Token(Token = "0x6000D6F")]
	[Address(RVA = "0xD203B0", Offset = "0xD203B0", VA = "0xD203B0", Slot = "15")]
	public void Initialize()
	{
	}

	[Token(Token = "0x6000D70")]
	[Address(RVA = "0xD20484", Offset = "0xD20484", VA = "0xD20484")]
	private void Precalculate()
	{
	}

	[Token(Token = "0x6000D71")]
	[Address(RVA = "0xD20678", Offset = "0xD20678", VA = "0xD20678")]
	private void Update()
	{
	}

	[Token(Token = "0x6000D72")]
	[Address(RVA = "0xD20934", Offset = "0xD20934", VA = "0xD20934")]
	private void HandleShutAudio(float rotationDelta)
	{
	}

	[Token(Token = "0x6000D73")]
	[Address(RVA = "0xD20300", Offset = "0xD20300", VA = "0xD20300")]
	private void SetCanBeGrabbed(bool value)
	{
	}

	[Token(Token = "0x6000D74")]
	[Address(RVA = "0xD20A74", Offset = "0xD20A74", VA = "0xD20A74")]
	private bool GetCanBeGrabbed()
	{
		return default(bool);
	}

	[Token(Token = "0x6000D75")]
	[Address(RVA = "0xD20A7C", Offset = "0xD20A7C", VA = "0xD20A7C", Slot = "4")]
	public int GetCurrentPriority()
	{
		return default(int);
	}

	[Token(Token = "0x6000D76")]
	[Address(RVA = "0xD20A84", Offset = "0xD20A84", VA = "0xD20A84", Slot = "16")]
	public PlayerHand GetHeldByHand()
	{
		return null;
	}

	[Token(Token = "0x6000D77")]
	[Address(RVA = "0xD20A8C", Offset = "0xD20A8C", VA = "0xD20A8C", Slot = "7")]
	public void StartGrabbing(PlayerHand hand, Vector3 grabPositionOnItem, OrientedPoint handAttachPoint)
	{
	}

	[Token(Token = "0x6000D78")]
	[Address(RVA = "0xD20BCC", Offset = "0xD20BCC", VA = "0xD20BCC")]
	private Vector3 GetLocalUpNormalized(OrientedPoint orientedPoint)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000D79")]
	[Address(RVA = "0xD20CC0", Offset = "0xD20CC0", VA = "0xD20CC0", Slot = "9")]
	public void UpdateGrabbing(PlayerHand hand, Vector3 grabPositionOnItem, OrientedPoint handAttachPoint)
	{
	}

	[Token(Token = "0x6000D7A")]
	[Address(RVA = "0xD20D6C", Offset = "0xD20D6C", VA = "0xD20D6C")]
	private void UpdateRotationTowardsHand(OrientedPoint handAttachPoint)
	{
	}

	[Token(Token = "0x6000D7B")]
	[Address(RVA = "0xD208F4", Offset = "0xD208F4", VA = "0xD208F4")]
	private float GetRotationDelta(float a, float b)
	{
		return default(float);
	}

	[Token(Token = "0x6000D7C")]
	[Address(RVA = "0xD21CB8", Offset = "0xD21CB8", VA = "0xD21CB8")]
	public void ForceStopGrabbing()
	{
	}

	[Token(Token = "0x6000D7D")]
	[Address(RVA = "0xD21D5C", Offset = "0xD21D5C", VA = "0xD21D5C", Slot = "8")]
	public void StopGrabbing(PlayerHand hand, Vector3 grabPositionOnItem, OrientedPoint attachPoint)
	{
	}

	[Token(Token = "0x6000D7E")]
	[Address(RVA = "0xD2203C", Offset = "0xD2203C", VA = "0xD2203C")]
	public void BounceRotateToDegree(float degree, float windupDuration, float bounceDuration)
	{
	}

	[Token(Token = "0x6000D7F")]
	[Address(RVA = "0xD22510", Offset = "0xD22510", VA = "0xD22510")]
	public float GetRotationNormalized()
	{
		return default(float);
	}

	[Token(Token = "0x6000D80")]
	[Address(RVA = "0xD225FC", Offset = "0xD225FC", VA = "0xD225FC", Slot = "10")]
	public bool IsEnabled()
	{
		return default(bool);
	}

	[Token(Token = "0x6000D81")]
	[Address(RVA = "0xD22604", Offset = "0xD22604", VA = "0xD22604", Slot = "17")]
	public bool HaveChildGrabbables()
	{
		return default(bool);
	}

	[Token(Token = "0x6000D82")]
	[Address(RVA = "0xD2260C", Offset = "0xD2260C", VA = "0xD2260C", Slot = "11")]
	public bool ShouldConsumeGrab(Collider collider)
	{
		return default(bool);
	}

	[Token(Token = "0x6000D83")]
	[Address(RVA = "0xD22614", Offset = "0xD22614", VA = "0xD22614", Slot = "12")]
	public void Touch()
	{
	}

	[Token(Token = "0x6000D84")]
	[Address(RVA = "0xD20C58", Offset = "0xD20C58", VA = "0xD20C58")]
	private void ToggleUseage(bool inUse)
	{
	}

	[Token(Token = "0x6000D85")]
	[Address(RVA = "0xD214B8", Offset = "0xD214B8", VA = "0xD214B8")]
	private bool ClampRotation(Quaternion rotationToClamp, out Quaternion clampedRotation)
	{
		return default(bool);
	}

	[Token(Token = "0x6000D86")]
	[Address(RVA = "0xD22618", Offset = "0xD22618", VA = "0xD22618", Slot = "5")]
	public bool IsExtraSticky()
	{
		return default(bool);
	}

	[Token(Token = "0x6000D87")]
	[Address(RVA = "0xD22620", Offset = "0xD22620", VA = "0xD22620", Slot = "6")]
	public GrabbableOutline GetOutline()
	{
		return null;
	}

	[Token(Token = "0x6000D88")]
	[Address(RVA = "0xD22628", Offset = "0xD22628", VA = "0xD22628", Slot = "13")]
	public float GetDelayBeforeGrab()
	{
		return default(float);
	}

	[Token(Token = "0x6000D89")]
	[Address(RVA = "0xD22630", Offset = "0xD22630", VA = "0xD22630", Slot = "14")]
	public Collider[] GetColliders()
	{
		return null;
	}

	[Token(Token = "0x6000D8A")]
	[Address(RVA = "0xD22638", Offset = "0xD22638", VA = "0xD22638")]
	public Rotatable()
	{
	}

	[Token(Token = "0x6000D8B")]
	[Address(RVA = "0xD22880", Offset = "0xD22880", VA = "0xD22880")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x98B904", Offset = "0x98B904")]
	private void <BounceRotateToDegree>b__72_0()
	{
	}
}
[Token(Token = "0x200024D")]
public class Rotatable2 : MonoBehaviour, IGrabbable, IValidateCustom, IValidate, IInitializable
{
	[Token(Token = "0x200024E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9723E4", Offset = "0x9723E4")]
	private sealed class <AnimateTo>d__75 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000DEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000DEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000DF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Rotatable2 <>4__this;

		[Token(Token = "0x4000DF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float delay;

		[Token(Token = "0x4000DF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float angle;

		[Token(Token = "0x4000DF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float duration;

		[Token(Token = "0x4000DF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float <timeElapsed>5__2;

		[Token(Token = "0x4000DF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float <progress>5__3;

		[Token(Token = "0x4000DF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float <startAngle>5__4;

		[Token(Token = "0x4000DF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float <diffAngle>5__5;

		[Token(Token = "0x17000171")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000DC1")]
			[Address(RVA = "0xCB4A78", Offset = "0xCB4A78", VA = "0xCB4A78", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000172")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000DC3")]
			[Address(RVA = "0xCB4AE0", Offset = "0xCB4AE0", VA = "0xCB4AE0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000DBE")]
		[Address(RVA = "0xCB3574", Offset = "0xCB3574", VA = "0xCB3574")]
		[DebuggerHidden]
		public <AnimateTo>d__75(int <>1__state)
		{
		}

		[Token(Token = "0x6000DBF")]
		[Address(RVA = "0xCB4830", Offset = "0xCB4830", VA = "0xCB4830", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000DC0")]
		[Address(RVA = "0xCB4834", Offset = "0xCB4834", VA = "0xCB4834", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000DC2")]
		[Address(RVA = "0xCB4A80", Offset = "0xCB4A80", VA = "0xCB4A80", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x200024F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9723F4", Offset = "0x9723F4")]
	private sealed class <>c
	{
		[Token(Token = "0x4000DF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4000DF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Action<bool> <>9__97_0;

		[Token(Token = "0x4000DFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static Action <>9__97_1;

		[Token(Token = "0x4000DFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static Action<Rotatable2> <>9__97_2;

		[Token(Token = "0x4000DFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public static Action<Rotatable2> <>9__97_3;

		[Token(Token = "0x6000DC5")]
		[Address(RVA = "0xCB4818", Offset = "0xCB4818", VA = "0xCB4818")]
		public <>c()
		{
		}

		[Token(Token = "0x6000DC6")]
		[Address(RVA = "0xCB4820", Offset = "0xCB4820", VA = "0xCB4820")]
		internal void <.ctor>b__97_0(bool <p0>)
		{
		}

		[Token(Token = "0x6000DC7")]
		[Address(RVA = "0xCB4824", Offset = "0xCB4824", VA = "0xCB4824")]
		internal void <.ctor>b__97_1()
		{
		}

		[Token(Token = "0x6000DC8")]
		[Address(RVA = "0xCB4828", Offset = "0xCB4828", VA = "0xCB4828")]
		internal void <.ctor>b__97_2(Rotatable2 <p0>)
		{
		}

		[Token(Token = "0x6000DC9")]
		[Address(RVA = "0xCB482C", Offset = "0xCB482C", VA = "0xCB482C")]
		internal void <.ctor>b__97_3(Rotatable2 <p0>)
		{
		}
	}

	[Token(Token = "0x4000DC2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9795A0", Offset = "0x9795A0")]
	[SerializeField]
	private int grabPriority;

	[Token(Token = "0x4000DC3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private float maxDegreesPerSecond;

	[Token(Token = "0x4000DC4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private float snapToAngleIncrements;

	[Token(Token = "0x4000DC5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	private float snapToAngleThreshold;

	[Token(Token = "0x4000DC6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private float snapToAngleOffset;

	[Token(Token = "0x4000DC7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[SerializeField]
	private float targetAngle;

	[Token(Token = "0x4000DC8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x97963C", Offset = "0x97963C")]
	[SerializeField]
	private bool limitRotation;

	[Token(Token = "0x4000DC9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[SerializeField]
	private float maxPositiveAngle;

	[Token(Token = "0x4000DCA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private float maxNegativeAngle;

	[Token(Token = "0x4000DCB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[SerializeField]
	private bool shouldResetAfterDelay;

	[Token(Token = "0x4000DCC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3D")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9796B8", Offset = "0x9796B8")]
	[SerializeField]
	private bool decelerateAfterRelease;

	[Token(Token = "0x4000DCD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3E")]
	[SerializeField]
	private bool isHeavy;

	[Token(Token = "0x4000DCE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x979714", Offset = "0x979714")]
	[SerializeField]
	private Transform grabHandle;

	[Token(Token = "0x4000DCF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private Collider[] colliders;

	[Token(Token = "0x4000DD0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x979770", Offset = "0x979770")]
	public UnityEvent OnGrab;

	[Token(Token = "0x4000DD1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public UnityEvent OnDrop;

	[Token(Token = "0x4000DD2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public UnityEvent OnSnap;

	[Token(Token = "0x4000DD3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public UnityEvent OnSnapQuickly;

	[Token(Token = "0x4000DD8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[SerializeField]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9797E8", Offset = "0x9797E8")]
	private GrabbableOutline outline;

	[Token(Token = "0x4000DD9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private PlayerHand heldByHand;

	[Token(Token = "0x4000DDA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private Vector3 currentEulerAngles;

	[Token(Token = "0x4000DDB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private Vector3 previousEulerAngles;

	[Token(Token = "0x4000DDC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private Vector3 startUpDirection;

	[Token(Token = "0x4000DDD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	private float overrideAngle;

	[Token(Token = "0x4000DDE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private bool didSnap;

	[Token(Token = "0x4000DDF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC9")]
	private bool isAnimating;

	[Token(Token = "0x4000DE0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	private float startAngle;

	[Token(Token = "0x4000DE1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private float delayBeforeTriggering;

	[Token(Token = "0x4000DE2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	private bool slowDownOverTime;

	[Token(Token = "0x4000DE3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private float degreesMovedLastUpdate;

	[Token(Token = "0x4000DE4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
	private float delayBeforeSlowDown;

	[Token(Token = "0x4000DE5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private bool allowedToSnap;

	[Token(Token = "0x4000DE6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private float[] speedHistory;

	[Token(Token = "0x4000DE7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private int currentFrame;

	[Token(Token = "0x4000DE8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private List<Vector3> previousVelocities;

	[Token(Token = "0x4000DE9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x979834", Offset = "0x979834")]
	private bool <CanBeGrabbed>k__BackingField;

	[Token(Token = "0x4000DEA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
	private float angleInDegrees;

	[Token(Token = "0x4000DEB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private float anglesToMove;

	[Token(Token = "0x4000DEC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
	private float previousRotationDir;

	[Token(Token = "0x4000DED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	private Vector3 previousHandPos;

	[Token(Token = "0x17000169")]
	public bool IsHeld
	{
		[Token(Token = "0x6000D98")]
		[Address(RVA = "0xCB2AC8", Offset = "0xCB2AC8", VA = "0xCB2AC8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700016A")]
	public float CurrentRotation
	{
		[Token(Token = "0x6000D99")]
		[Address(RVA = "0xCB2B38", Offset = "0xCB2B38", VA = "0xCB2B38")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x1700016B")]
	public float DeltaRotation
	{
		[Token(Token = "0x6000D9A")]
		[Address(RVA = "0xCB2B4C", Offset = "0xCB2B4C", VA = "0xCB2B4C")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x1700016C")]
	public float MaxSpeedDegPerSec
	{
		[Token(Token = "0x6000D9B")]
		[Address(RVA = "0xCB2B5C", Offset = "0xCB2B5C", VA = "0xCB2B5C")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x1700016D")]
	public float CurrentSignedRotation
	{
		[Token(Token = "0x6000D9C")]
		[Address(RVA = "0xCB2B64", Offset = "0xCB2B64", VA = "0xCB2B64")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x1700016E")]
	public float MaxPositiveAngle
	{
		[Token(Token = "0x6000D9D")]
		[Address(RVA = "0xCB2B88", Offset = "0xCB2B88", VA = "0xCB2B88")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x1700016F")]
	public float MaxNegativeAngle
	{
		[Token(Token = "0x6000D9E")]
		[Address(RVA = "0xCB2B90", Offset = "0xCB2B90", VA = "0xCB2B90")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000170")]
	public bool CanBeGrabbed
	{
		[Token(Token = "0x6000D9F")]
		[Address(RVA = "0xCB2B98", Offset = "0xCB2B98", VA = "0xCB2B98")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x98B994", Offset = "0x98B994")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000DA0")]
		[Address(RVA = "0xCB2BA0", Offset = "0xCB2BA0", VA = "0xCB2BA0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x98B9A4", Offset = "0x98B9A4")]
		set
		{
		}
	}

	[Token(Token = "0x1400001D")]
	public event Action<bool> OnToggleUsage
	{
		[Token(Token = "0x6000D90")]
		[Address(RVA = "0xCB25A8", Offset = "0xCB25A8", VA = "0xCB25A8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x98B914", Offset = "0x98B914")]
		add
		{
		}
		[Token(Token = "0x6000D91")]
		[Address(RVA = "0xCB264C", Offset = "0xCB264C", VA = "0xCB264C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x98B924", Offset = "0x98B924")]
		remove
		{
		}
	}

	[Token(Token = "0x1400001E")]
	public event Action OnPreGrab
	{
		[Token(Token = "0x6000D92")]
		[Address(RVA = "0xCB26F0", Offset = "0xCB26F0", VA = "0xCB26F0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x98B934", Offset = "0x98B934")]
		add
		{
		}
		[Token(Token = "0x6000D93")]
		[Address(RVA = "0xCB2794", Offset = "0xCB2794", VA = "0xCB2794")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x98B944", Offset = "0x98B944")]
		remove
		{
		}
	}

	[Token(Token = "0x1400001F")]
	public event Action<Rotatable2> OnSnapped
	{
		[Token(Token = "0x6000D94")]
		[Address(RVA = "0xCB2838", Offset = "0xCB2838", VA = "0xCB2838")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x98B954", Offset = "0x98B954")]
		add
		{
		}
		[Token(Token = "0x6000D95")]
		[Address(RVA = "0xCB28DC", Offset = "0xCB28DC", VA = "0xCB28DC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x98B964", Offset = "0x98B964")]
		remove
		{
		}
	}

	[Token(Token = "0x14000020")]
	public event Action<Rotatable2> OnReachedTarget
	{
		[Token(Token = "0x6000D96")]
		[Address(RVA = "0xCB2980", Offset = "0xCB2980", VA = "0xCB2980")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x98B974", Offset = "0x98B974")]
		add
		{
		}
		[Token(Token = "0x6000D97")]
		[Address(RVA = "0xCB2A24", Offset = "0xCB2A24", VA = "0xCB2A24")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x98B984", Offset = "0x98B984")]
		remove
		{
		}
	}

	[Token(Token = "0x6000DA1")]
	[Address(RVA = "0xCB2BAC", Offset = "0xCB2BAC", VA = "0xCB2BAC", Slot = "15")]
	public void Initialize()
	{
	}

	[Token(Token = "0x6000DA2")]
	[Address(RVA = "0xCB2BB0", Offset = "0xCB2BB0", VA = "0xCB2BB0")]
	public void SetSnapToAngleIncrements(float angle, float offset)
	{
	}

	[Token(Token = "0x6000DA3")]
	[Address(RVA = "0xCB2BBC", Offset = "0xCB2BBC", VA = "0xCB2BBC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000DA4")]
	[Address(RVA = "0xCB2C3C", Offset = "0xCB2C3C", VA = "0xCB2C3C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000DA5")]
	[Address(RVA = "0xCB3258", Offset = "0xCB3258", VA = "0xCB3258")]
	private float GetAverageSpeed()
	{
		return default(float);
	}

	[Token(Token = "0x6000DA6")]
	[Address(RVA = "0xCB32CC", Offset = "0xCB32CC", VA = "0xCB32CC")]
	public float GetRotationNormalized()
	{
		return default(float);
	}

	[Token(Token = "0x6000DA7")]
	[Address(RVA = "0xCB3128", Offset = "0xCB3128", VA = "0xCB3128")]
	private float GetClosestSnapAngle()
	{
		return default(float);
	}

	[Token(Token = "0x6000DA8")]
	[Address(RVA = "0xCB33C4", Offset = "0xCB33C4", VA = "0xCB33C4")]
	public void ForceSnapToClosest()
	{
	}

	[Token(Token = "0x6000DA9")]
	[Address(RVA = "0xCB3428", Offset = "0xCB3428", VA = "0xCB3428")]
	public void AnimateToAngle(float angle, float duration, float delay = 0f)
	{
	}

	[Token(Token = "0x6000DAA")]
	[Address(RVA = "0xCB34F4", Offset = "0xCB34F4", VA = "0xCB34F4")]
	public void ResetToOriginalAngle(float duration = 0f, float delay = 0f)
	{
	}

	[Token(Token = "0x6000DAB")]
	[Address(RVA = "0xCB3454", Offset = "0xCB3454", VA = "0xCB3454")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x98B9B4", Offset = "0x98B9B4")]
	private IEnumerator AnimateTo(float angle, float duration, float delay)
	{
		return null;
	}

	[Token(Token = "0x6000DAC")]
	[Address(RVA = "0xCB35A0", Offset = "0xCB35A0", VA = "0xCB35A0", Slot = "4")]
	public int GetCurrentPriority()
	{
		return default(int);
	}

	[Token(Token = "0x6000DAD")]
	[Address(RVA = "0xCB35A8", Offset = "0xCB35A8", VA = "0xCB35A8", Slot = "16")]
	public PlayerHand GetHeldByHand()
	{
		return null;
	}

	[Token(Token = "0x6000DAE")]
	[Address(RVA = "0xCB35B0", Offset = "0xCB35B0", VA = "0xCB35B0", Slot = "7")]
	public void StartGrabbing(PlayerHand hand, Vector3 grabPositionOnItem, OrientedPoint handAttachPoint)
	{
	}

	[Token(Token = "0x6000DAF")]
	[Address(RVA = "0xCB3734", Offset = "0xCB3734", VA = "0xCB3734", Slot = "9")]
	public void UpdateGrabbing(PlayerHand hand, Vector3 grabPositionOnItem, OrientedPoint handAttachPoint)
	{
	}

	[Token(Token = "0x6000DB0")]
	[Address(RVA = "0xCB383C", Offset = "0xCB383C", VA = "0xCB383C")]
	private void UpdateRotationTowardsHand(OrientedPoint handAttachPoint)
	{
	}

	[Token(Token = "0x6000DB1")]
	[Address(RVA = "0xCB3FF4", Offset = "0xCB3FF4", VA = "0xCB3FF4")]
	public void ForceStopGrabbing()
	{
	}

	[Token(Token = "0x6000DB2")]
	[Address(RVA = "0xCB40B0", Offset = "0xCB40B0", VA = "0xCB40B0", Slot = "8")]
	public void StopGrabbing(PlayerHand hand, Vector3 grabPositionOnItem, OrientedPoint attachPoint)
	{
	}

	[Token(Token = "0x6000DB3")]
	[Address(RVA = "0xCB4324", Offset = "0xCB4324", VA = "0xCB4324")]
	private Vector3 GetPredictedVelocity(PlayerHand hand, OrientedPoint handAttachPoint)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000DB4")]
	[Address(RVA = "0xCB43B4", Offset = "0xCB43B4", VA = "0xCB43B4", Slot = "10")]
	public bool IsEnabled()
	{
		return default(bool);
	}

	[Token(Token = "0x6000DB5")]
	[Address(RVA = "0xCB43F0", Offset = "0xCB43F0", VA = "0xCB43F0", Slot = "17")]
	public bool HaveChildGrabbables()
	{
		return default(bool);
	}

	[Token(Token = "0x6000DB6")]
	[Address(RVA = "0xCB43F8", Offset = "0xCB43F8", VA = "0xCB43F8", Slot = "11")]
	public bool ShouldConsumeGrab(Collider collider)
	{
		return default(bool);
	}

	[Token(Token = "0x6000DB7")]
	[Address(RVA = "0xCB4400", Offset = "0xCB4400", VA = "0xCB4400", Slot = "12")]
	public void Touch()
	{
	}

	[Token(Token = "0x6000DB8")]
	[Address(RVA = "0xCB36CC", Offset = "0xCB36CC", VA = "0xCB36CC")]
	private void ToggleUseage(bool inUse)
	{
	}

	[Token(Token = "0x6000DB9")]
	[Address(RVA = "0xCB4404", Offset = "0xCB4404", VA = "0xCB4404", Slot = "5")]
	public bool IsExtraSticky()
	{
		return default(bool);
	}

	[Token(Token = "0x6000DBA")]
	[Address(RVA = "0xCB440C", Offset = "0xCB440C", VA = "0xCB440C", Slot = "6")]
	public GrabbableOutline GetOutline()
	{
		return null;
	}

	[Token(Token = "0x6000DBB")]
	[Address(RVA = "0xCB4414", Offset = "0xCB4414", VA = "0xCB4414", Slot = "13")]
	public float GetDelayBeforeGrab()
	{
		return default(float);
	}

	[Token(Token = "0x6000DBC")]
	[Address(RVA = "0xCB441C", Offset = "0xCB441C", VA = "0xCB441C", Slot = "14")]
	public Collider[] GetColliders()
	{
		return null;
	}

	[Token(Token = "0x6000DBD")]
	[Address(RVA = "0xCB4424", Offset = "0xCB4424", VA = "0xCB4424")]
	public Rotatable2()
	{
	}
}
[Token(Token = "0x2000250")]
public class SettingsButton : PushButton
{
	[Token(Token = "0x4000DFD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
	public GameSettingId SettingId;

	[Token(Token = "0x6000DCA")]
	[Address(RVA = "0xCC532C", Offset = "0xCC532C", VA = "0xCC532C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000DCB")]
	[Address(RVA = "0xCC5460", Offset = "0xCC5460", VA = "0xCC5460", Slot = "7")]
	public override void PressButton(PlayerHand hand)
	{
	}

	[Token(Token = "0x6000DCC")]
	[Address(RVA = "0xCC551C", Offset = "0xCC551C", VA = "0xCC551C")]
	public SettingsButton()
	{
	}
}
[Token(Token = "0x2000251")]
public class SettingsSlider : PushButton
{
	[Token(Token = "0x4000DFE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
	public GameSettingId SettingId;

	[Token(Token = "0x4000DFF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	[SerializeField]
	private Transform[] steps;

	[Token(Token = "0x4000E00")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	[SerializeField]
	private GameObject[] settings;

	[Token(Token = "0x4000E01")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	[SerializeField]
	private GameObject sliderKnob;

	[Token(Token = "0x4000E02")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private int currentSelection;

	[Token(Token = "0x6000DCD")]
	[Address(RVA = "0xCC552C", Offset = "0xCC552C", VA = "0xCC552C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000DCE")]
	[Address(RVA = "0xCC57C4", Offset = "0xCC57C4", VA = "0xCC57C4", Slot = "4")]
	public override void StartGrabbing(PlayerHand hand, Vector3 grabPositionOnItem, OrientedPoint handAttachPoint)
	{
	}

	[Token(Token = "0x6000DCF")]
	[Address(RVA = "0xCC57F8", Offset = "0xCC57F8", VA = "0xCC57F8", Slot = "6")]
	public override void StopGrabbing(PlayerHand hand, Vector3 grabPositionOnItem, OrientedPoint attachPoint)
	{
	}

	[Token(Token = "0x6000DD0")]
	[Address(RVA = "0xCC582C", Offset = "0xCC582C", VA = "0xCC582C", Slot = "5")]
	public override void UpdateGrabbing(PlayerHand hand, Vector3 grabPositionOnItem, OrientedPoint attachPoint)
	{
	}

	[Token(Token = "0x6000DD1")]
	[Address(RVA = "0xCC5A48", Offset = "0xCC5A48", VA = "0xCC5A48")]
	private void UpdateSelection(int index)
	{
	}

	[Token(Token = "0x6000DD2")]
	[Address(RVA = "0xCC565C", Offset = "0xCC565C", VA = "0xCC565C")]
	private void SelectStep(int step)
	{
	}

	[Token(Token = "0x6000DD3")]
	[Address(RVA = "0xCC5AF4", Offset = "0xCC5AF4", VA = "0xCC5AF4")]
	public SettingsSlider()
	{
	}
}
[Token(Token = "0x2000252")]
public class SnapToWall : MonoBehaviour
{
	[Token(Token = "0x4000E03")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Grabbable grabbable;

	[Token(Token = "0x4000E04")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Transform wallAttachPoint;

	[Token(Token = "0x4000E05")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private RaycastHit hitInfo;

	[Token(Token = "0x6000DD4")]
	[Address(RVA = "0xDEF45C", Offset = "0xDEF45C", VA = "0xDEF45C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000DD5")]
	[Address(RVA = "0xDEF538", Offset = "0xDEF538", VA = "0xDEF538")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000DD6")]
	[Address(RVA = "0xDEF614", Offset = "0xDEF614", VA = "0xDEF614")]
	public void OnGrabbableDropped(bool isHeld)
	{
	}

	[Token(Token = "0x6000DD7")]
	[Address(RVA = "0xDEFCE8", Offset = "0xDEFCE8", VA = "0xDEFCE8")]
	public SnapToWall()
	{
	}
}
[Token(Token = "0x2000253")]
public class SnowBall : MonoBehaviour
{
	[Token(Token = "0x4000E06")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private ParticleSystem particles;

	[Token(Token = "0x4000E07")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private float speedRequiredToSploosh;

	[Token(Token = "0x6000DD8")]
	[Address(RVA = "0xDEFCF0", Offset = "0xDEFCF0", VA = "0xDEFCF0")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x6000DD9")]
	[Address(RVA = "0xDEFE10", Offset = "0xDEFE10", VA = "0xDEFE10")]
	public SnowBall()
	{
	}
}
[Token(Token = "0x2000254")]
[DisallowMultipleComponent]
public class Stashable : SaveableComponent, IInitializable
{
	[Token(Token = "0x2000255")]
	public delegate void OnDropZoneBeginHover();

	[Token(Token = "0x2000256")]
	public delegate void OnDropZoneEndHover();

	[Serializable]
	[Token(Token = "0x2000257")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x972414", Offset = "0x972414")]
	private sealed class <>c
	{
		[Token(Token = "0x4000E26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4000E27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Action <>9__84_0;

		[Token(Token = "0x4000E28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static Action <>9__84_1;

		[Token(Token = "0x4000E29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static Action <>9__84_2;

		[Token(Token = "0x4000E2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public static Action <>9__84_3;

		[Token(Token = "0x6000E12")]
		[Address(RVA = "0xDFDEFC", Offset = "0xDFDEFC", VA = "0xDFDEFC")]
		public <>c()
		{
		}

		[Token(Token = "0x6000E13")]
		[Address(RVA = "0xDFDF04", Offset = "0xDFDF04", VA = "0xDFDF04")]
		internal void <.ctor>b__84_0()
		{
		}

		[Token(Token = "0x6000E14")]
		[Address(RVA = "0xDFDF08", Offset = "0xDFDF08", VA = "0xDFDF08")]
		internal void <.ctor>b__84_1()
		{
		}

		[Token(Token = "0x6000E15")]
		[Address(RVA = "0xDFDF0C", Offset = "0xDFDF0C", VA = "0xDFDF0C")]
		internal void <.ctor>b__84_2()
		{
		}

		[Token(Token = "0x6000E16")]
		[Address(RVA = "0xDFDF10", Offset = "0xDFDF10", VA = "0xDFDF10")]
		internal void <.ctor>b__84_3()
		{
		}
	}

	[Token(Token = "0x4000E08")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Vector3 boundsLocalCenter;

	[Token(Token = "0x4000E09")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float boundsRadius;

	[Token(Token = "0x4000E0A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool useCustomBounds;

	[Token(Token = "0x4000E0B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
	public bool useGrabPointRotation;

	[Token(Token = "0x4000E0C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private Vector3 originalScale;

	[Token(Token = "0x4000E0D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Grabbable grabbable;

	[Token(Token = "0x4000E0E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private Transform objectRoot;

	[Token(Token = "0x4000E0F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private int hashedName;

	[Token(Token = "0x4000E10")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	[SerializeField]
	private bool RequireInventoryHeroSlot;

	[Token(Token = "0x4000E11")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private Mesh HeroSlotMesh;

	[Token(Token = "0x4000E12")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private InventoryHeroSlot ConnectedHeroSlot;

	[Token(Token = "0x4000E13")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Func<bool> InventoryAddFunction;

	[Token(Token = "0x4000E14")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public string ItemDataName;

	[Token(Token = "0x4000E15")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public ItemDataAssetRow ItemData;

	[Token(Token = "0x4000E16")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private bool stashed;

	[Token(Token = "0x4000E17")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA1")]
	private bool initialized;

	[Token(Token = "0x4000E18")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA2")]
	private bool isEmissive;

	[Token(Token = "0x4000E19")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private MaterialPropertyBlock emissiveMpb;

	[Token(Token = "0x4000E1A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private MaterialPropertyBlock[] previousMpbs;

	[Token(Token = "0x4000E1B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private Renderer[] renderers;

	[Token(Token = "0x4000E1C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private Quaternion precalcGrabPointRotation;

	[Token(Token = "0x4000E21")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public OnDropZoneBeginHover BeginHoverDelegate;

	[Token(Token = "0x4000E22")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public OnDropZoneEndHover EndHoverDelegate;

	[Token(Token = "0x4000E23")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private LayerData[] m_originalObjectLayers;

	[Token(Token = "0x4000E24")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x979934", Offset = "0x979934")]
	private int <HoveredDropZones>k__BackingField;

	[Token(Token = "0x4000E25")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static int StashableHighlightProp;

	[Token(Token = "0x17000173")]
	public Vector3 OriginalScale
	{
		[Token(Token = "0x6000DDA")]
		[Address(RVA = "0xDFBD44", Offset = "0xDFBD44", VA = "0xDFBD44")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x17000174")]
	public Transform ObjectRoot
	{
		[Token(Token = "0x6000DDB")]
		[Address(RVA = "0xDFBD50", Offset = "0xDFBD50", VA = "0xDFBD50")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000175")]
	public bool IsHeld
	{
		[Token(Token = "0x6000DDC")]
		[Address(RVA = "0xDFBD58", Offset = "0xDFBD58", VA = "0xDFBD58")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000176")]
	public bool IsStashed
	{
		[Token(Token = "0x6000DDD")]
		[Address(RVA = "0xDFBD74", Offset = "0xDFBD74", VA = "0xDFBD74")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000177")]
	public bool Initialized
	{
		[Token(Token = "0x6000DDE")]
		[Address(RVA = "0xDFBD7C", Offset = "0xDFBD7C", VA = "0xDFBD7C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000178")]
	public int HashedName
	{
		[Token(Token = "0x6000DDF")]
		[Address(RVA = "0xDFBD84", Offset = "0xDFBD84", VA = "0xDFBD84")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000179")]
	public int HoveredDropZones
	{
		[Token(Token = "0x6000DE8")]
		[Address(RVA = "0xDFC208", Offset = "0xDFC208", VA = "0xDFC208")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x98BAE8", Offset = "0x98BAE8")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000DE9")]
		[Address(RVA = "0xDFC210", Offset = "0xDFC210", VA = "0xDFC210")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x98BAF8", Offset = "0x98BAF8")]
		set
		{
		}
	}

	[Token(Token = "0x14000021")]
	public event Action OnStashedItem
	{
		[Token(Token = "0x6000DE0")]
		[Address(RVA = "0xDF79E8", Offset = "0xDF79E8", VA = "0xDF79E8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x98BA68", Offset = "0x98BA68")]
		add
		{
		}
		[Token(Token = "0x6000DE1")]
		[Address(RVA = "0xDFBD8C", Offset = "0xDFBD8C", VA = "0xDFBD8C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x98BA78", Offset = "0x98BA78")]
		remove
		{
		}
	}

	[Token(Token = "0x14000022")]
	public event Action OnUnStashedItem
	{
		[Token(Token = "0x6000DE2")]
		[Address(RVA = "0xDFBE30", Offset = "0xDFBE30", VA = "0xDFBE30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x98BA88", Offset = "0x98BA88")]
		add
		{
		}
		[Token(Token = "0x6000DE3")]
		[Address(RVA = "0xDFBED4", Offset = "0xDFBED4", VA = "0xDFBED4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x98BA98", Offset = "0x98BA98")]
		remove
		{
		}
	}

	[Token(Token = "0x14000023")]
	public event Action OnAddedToPlayerInventory
	{
		[Token(Token = "0x6000DE4")]
		[Address(RVA = "0xDFBF78", Offset = "0xDFBF78", VA = "0xDFBF78")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x98BAA8", Offset = "0x98BAA8")]
		add
		{
		}
		[Token(Token = "0x6000DE5")]
		[Address(RVA = "0xDFC01C", Offset = "0xDFC01C", VA = "0xDFC01C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x98BAB8", Offset = "0x98BAB8")]
		remove
		{
		}
	}

	[Token(Token = "0x14000024")]
	public event Action OnRemovedFromPlayerInventory
	{
		[Token(Token = "0x6000DE6")]
		[Address(RVA = "0xDFC0C0", Offset = "0xDFC0C0", VA = "0xDFC0C0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x98BAC8", Offset = "0x98BAC8")]
		add
		{
		}
		[Token(Token = "0x6000DE7")]
		[Address(RVA = "0xDFC164", Offset = "0xDFC164", VA = "0xDFC164")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x98BAD8", Offset = "0x98BAD8")]
		remove
		{
		}
	}

	[Token(Token = "0x6000DEA")]
	[Address(RVA = "0xDFC218", Offset = "0xDFC218", VA = "0xDFC218", Slot = "5")]
	public void Initialize()
	{
	}

	[Token(Token = "0x6000DEB")]
	[Address(RVA = "0xDFC790", Offset = "0xDFC790", VA = "0xDFC790")]
	public float GetRadiusWorldSpace()
	{
		return default(float);
	}

	[Token(Token = "0x6000DEC")]
	[Address(RVA = "0xDFC7C8", Offset = "0xDFC7C8", VA = "0xDFC7C8")]
	public Vector3 GetCenterPosWorld()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000DED")]
	[Address(RVA = "0xDFC7FC", Offset = "0xDFC7FC", VA = "0xDFC7FC")]
	public Vector3 GetMinBoundsPosition()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000DEE")]
	[Address(RVA = "0xDFC920", Offset = "0xDFC920", VA = "0xDFC920")]
	public Vector3 GetMaxBoundsPosition()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000DEF")]
	[Address(RVA = "0xDFC9EC", Offset = "0xDFC9EC", VA = "0xDFC9EC")]
	public void UpdateHoveredDropzones(int v)
	{
	}

	[Token(Token = "0x6000DF0")]
	[Address(RVA = "0xDFC668", Offset = "0xDFC668", VA = "0xDFC668")]
	public void AssignOriginalScale()
	{
	}

	[Token(Token = "0x6000DF1")]
	[Address(RVA = "0xDFCA9C", Offset = "0xDFCA9C", VA = "0xDFCA9C")]
	public void ApplyNewOriginalScale(Vector3 newScale)
	{
	}

	[Token(Token = "0x6000DF2")]
	[Address(RVA = "0xDFCACC", Offset = "0xDFCACC", VA = "0xDFCACC")]
	public bool HasUpdatedBounds()
	{
		return default(bool);
	}

	[Token(Token = "0x6000DF3")]
	[Address(RVA = "0xDFCADC", Offset = "0xDFCADC", VA = "0xDFCADC")]
	public Rigidbody TryFindRootRigidbody()
	{
		return null;
	}

	[Token(Token = "0x6000DF4")]
	[Address(RVA = "0xDFCB3C", Offset = "0xDFCB3C", VA = "0xDFCB3C")]
	public OrientedPoint CalculateLocalPosition(OrientedPoint op)
	{
		return default(OrientedPoint);
	}

	[Token(Token = "0x6000DF5")]
	[Address(RVA = "0xDFCD58", Offset = "0xDFCD58", VA = "0xDFCD58")]
	public void SetLocalPosition(OrientedPoint op, bool preCalculated = false)
	{
	}

	[Token(Token = "0x6000DF6")]
	[Address(RVA = "0xDFCFDC", Offset = "0xDFCFDC", VA = "0xDFCFDC")]
	public void SetVisible(bool visible)
	{
	}

	[Token(Token = "0x6000DF7")]
	[Address(RVA = "0xDFD018", Offset = "0xDFD018", VA = "0xDFD018")]
	public bool CanBeStashed()
	{
		return default(bool);
	}

	[Token(Token = "0x6000DF8")]
	[Address(RVA = "0xDFD104", Offset = "0xDFD104", VA = "0xDFD104")]
	public void Stash(Transform parent)
	{
	}

	[Token(Token = "0x6000DF9")]
	[Address(RVA = "0xDFD1CC", Offset = "0xDFD1CC", VA = "0xDFD1CC")]
	public void Unstash()
	{
	}

	[Token(Token = "0x6000DFA")]
	[Address(RVA = "0xDFD3FC", Offset = "0xDFD3FC", VA = "0xDFD3FC")]
	public void AddedToPlayerInventory()
	{
	}

	[Token(Token = "0x6000DFB")]
	[Address(RVA = "0xDFD410", Offset = "0xDFD410", VA = "0xDFD410")]
	public void RemovedFromPlayerInventory()
	{
	}

	[Token(Token = "0x6000DFC")]
	[Address(RVA = "0xDFD424", Offset = "0xDFD424", VA = "0xDFD424")]
	public bool HaveCustomInventoryAddLogic()
	{
		return default(bool);
	}

	[Token(Token = "0x6000DFD")]
	[Address(RVA = "0xDFD434", Offset = "0xDFD434", VA = "0xDFD434")]
	public bool HasCorrectReferences()
	{
		return default(bool);
	}

	[Token(Token = "0x6000DFE")]
	[Address(RVA = "0xDFD4F0", Offset = "0xDFD4F0", VA = "0xDFD4F0", Slot = "4")]
	public override ComponentState CreateState()
	{
		return null;
	}

	[Token(Token = "0x6000DFF")]
	[Address(RVA = "0xDFD5E8", Offset = "0xDFD5E8", VA = "0xDFD5E8")]
	public void SetCustomHashedName(int hash)
	{
	}

	[Token(Token = "0x6000E00")]
	[Address(RVA = "0xDFD5F0", Offset = "0xDFD5F0", VA = "0xDFD5F0")]
	public void SetEmissiveness(bool emissive)
	{
	}

	[Token(Token = "0x6000E01")]
	[Address(RVA = "0xDFD9B0", Offset = "0xDFD9B0", VA = "0xDFD9B0")]
	private void SetEmissiveness_Plant(float emissiveValue, PlantSystemIndexable indexable)
	{
	}

	[Token(Token = "0x6000E02")]
	[Address(RVA = "0xDFDA60", Offset = "0xDFDA60", VA = "0xDFDA60")]
	public void SetConnectedHeroSlot(InventoryHeroSlot newHeroSlot)
	{
	}

	[Token(Token = "0x6000E03")]
	[Address(RVA = "0xDFDA68", Offset = "0xDFDA68", VA = "0xDFDA68")]
	public bool RequireHeroSlot()
	{
		return default(bool);
	}

	[Token(Token = "0x6000E04")]
	[Address(RVA = "0xDFDA70", Offset = "0xDFDA70", VA = "0xDFDA70")]
	public InventoryHeroSlot GetConnectedHeroSlot()
	{
		return null;
	}

	[Token(Token = "0x6000E05")]
	[Address(RVA = "0xDFDA78", Offset = "0xDFDA78", VA = "0xDFDA78")]
	public Mesh GetHeroSlotMesh()
	{
		return null;
	}

	[Token(Token = "0x6000E06")]
	[Address(RVA = "0xDFDA80", Offset = "0xDFDA80", VA = "0xDFDA80")]
	public bool NeedNewHeroSlot()
	{
		return default(bool);
	}

	[Token(Token = "0x6000E07")]
	[Address(RVA = "0xDFDB08", Offset = "0xDFDB08", VA = "0xDFDB08")]
	public Stashable()
	{
	}
}
[Serializable]
[Token(Token = "0x2000258")]
public class StashableState : ComponentState
{
	[Token(Token = "0x4000E2B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Vector3Serializable originalScale;

	[Token(Token = "0x6000E17")]
	[Address(RVA = "0xDFD570", Offset = "0xDFD570", VA = "0xDFD570")]
	public StashableState(Vector3 scale)
	{
	}
}
[Token(Token = "0x2000259")]
public class StickyNote : Grabbable
{
	[Token(Token = "0x4000E2C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24C")]
	private Vector3 colliderSize;

	[Token(Token = "0x4000E2D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x258")]
	private bool isStuck;

	[Token(Token = "0x4000E2E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x259")]
	private bool m_hasTriedUnlockCollectable;

	[Token(Token = "0x1700017A")]
	public bool IsStuck
	{
		[Token(Token = "0x6000E18")]
		[Address(RVA = "0xDFF488", Offset = "0xDFF488", VA = "0xDFF488")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000E19")]
	[Address(RVA = "0xDFF490", Offset = "0xDFF490", VA = "0xDFF490", Slot = "19")]
	public override void PostLoadInit()
	{
	}

	[Token(Token = "0x6000E1A")]
	[Address(RVA = "0xDFF604", Offset = "0xDFF604", VA = "0xDFF604")]
	private void OnLetGo()
	{
	}

	[Token(Token = "0x6000E1B")]
	[Address(RVA = "0xDFF7D4", Offset = "0xDFF7D4", VA = "0xDFF7D4")]
	private void HandleGrabbed()
	{
	}

	[Token(Token = "0x6000E1C")]
	[Address(RVA = "0xDFF8CC", Offset = "0xDFF8CC", VA = "0xDFF8CC")]
	public void SetIsStuck(bool stuck)
	{
	}

	[Token(Token = "0x6000E1D")]
	[Address(RVA = "0xDFF8D8", Offset = "0xDFF8D8", VA = "0xDFF8D8")]
	public StickyNote()
	{
	}
}
[Token(Token = "0x200025A")]
public class StickyVolume : MonoBehaviour, IInitializable, IHouseholdMovable, IStickyVolume
{
	[Token(Token = "0x4000E2F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private List<StickyNotePosition> positions;

	[Token(Token = "0x4000E30")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private StickyNote playerSticky;

	[Token(Token = "0x4000E31")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Collider[] cols;

	[Token(Token = "0x6000E1E")]
	[Address(RVA = "0xDFF940", Offset = "0xDFF940", VA = "0xDFF940")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000E1F")]
	[Address(RVA = "0xDFFC08", Offset = "0xDFFC08", VA = "0xDFFC08", Slot = "4")]
	public void Initialize()
	{
	}

	[Token(Token = "0x6000E20")]
	[Address(RVA = "0xDFFF60", Offset = "0xDFFF60", VA = "0xDFFF60", Slot = "9")]
	public bool TrySetSticky(StickyNote sticky)
	{
		return default(bool);
	}

	[Token(Token = "0x6000E21")]
	[Address(RVA = "0xE00040", Offset = "0xE00040", VA = "0xE00040")]
	private StickyNotePosition GetNearestStickyPosition(Vector3 position)
	{
		return null;
	}

	[Token(Token = "0x6000E22")]
	[Address(RVA = "0xE001F8", Offset = "0xE001F8", VA = "0xE001F8", Slot = "5")]
	public void OnPreUpgrade(int homeLevel)
	{
	}

	[Token(Token = "0x6000E23")]
	[Address(RVA = "0xE001FC", Offset = "0xE001FC", VA = "0xE001FC", Slot = "6")]
	public void OnPostUpgrade(int homeLevel)
	{
	}

	[Token(Token = "0x6000E24")]
	[Address(RVA = "0xE00200", Offset = "0xE00200", VA = "0xE00200", Slot = "7")]
	public void OnBeforeMove(int homeLevel)
	{
	}

	[Token(Token = "0x6000E25")]
	[Address(RVA = "0xE00204", Offset = "0xE00204", VA = "0xE00204", Slot = "8")]
	public void OnMoved(int homeLevel)
	{
	}

	[Token(Token = "0x6000E26")]
	[Address(RVA = "0xE002A8", Offset = "0xE002A8", VA = "0xE002A8")]
	public StickyVolume()
	{
	}
}
[Token(Token = "0x200025B")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x972424", Offset = "0x972424")]
public class Storage : MonoBehaviour, IInitializable
{
	[Token(Token = "0x200025C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x972488", Offset = "0x972488")]
	private sealed class <MoveItemIntoSlot>d__11 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000E37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000E38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000E39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Storage <>4__this;

		[Token(Token = "0x4000E3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public InventorySlot slot;

		[Token(Token = "0x1700017B")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000E36")]
			[Address(RVA = "0xE0121C", Offset = "0xE0121C", VA = "0xE0121C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700017C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000E38")]
			[Address(RVA = "0xE01284", Offset = "0xE01284", VA = "0xE01284", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000E33")]
		[Address(RVA = "0xE00D60", Offset = "0xE00D60", VA = "0xE00D60")]
		[DebuggerHidden]
		public <MoveItemIntoSlot>d__11(int <>1__state)
		{
		}

		[Token(Token = "0x6000E34")]
		[Address(RVA = "0xE0111C", Offset = "0xE0111C", VA = "0xE0111C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000E35")]
		[Address(RVA = "0xE01120", Offset = "0xE01120", VA = "0xE01120", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000E37")]
		[Address(RVA = "0xE01224", Offset = "0xE01224", VA = "0xE01224", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000E32")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private StorageDropzone dropZone;

	[Token(Token = "0x4000E33")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private InventorySlot[] slots;

	[Token(Token = "0x4000E34")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private ObjectContainer container;

	[Token(Token = "0x4000E35")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Stashable stashable;

	[Token(Token = "0x4000E36")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool isMovingItemIntoSlot;

	[Token(Token = "0x6000E27")]
	[Address(RVA = "0xE00328", Offset = "0xE00328", VA = "0xE00328", Slot = "4")]
	public void Initialize()
	{
	}

	[Token(Token = "0x6000E28")]
	[Address(RVA = "0xE0078C", Offset = "0xE0078C", VA = "0xE0078C")]
	public bool HasSpaceForItem(Stashable item)
	{
		return default(bool);
	}

	[Token(Token = "0x6000E29")]
	[Address(RVA = "0xE00894", Offset = "0xE00894", VA = "0xE00894")]
	private void AddToSlot(Stashable item, InventorySlot slot)
	{
	}

	[Token(Token = "0x6000E2A")]
	[Address(RVA = "0xE006C8", Offset = "0xE006C8", VA = "0xE006C8")]
	private void AddImmediately(Stashable item)
	{
	}

	[Token(Token = "0x6000E2B")]
	[Address(RVA = "0xE00AFC", Offset = "0xE00AFC", VA = "0xE00AFC")]
	public void Add(Stashable item)
	{
	}

	[Token(Token = "0x6000E2C")]
	[Address(RVA = "0xE00C78", Offset = "0xE00C78", VA = "0xE00C78")]
	public bool TryAdd(Stashable item)
	{
		return default(bool);
	}

	[Token(Token = "0x6000E2D")]
	[Address(RVA = "0xE00BE0", Offset = "0xE00BE0", VA = "0xE00BE0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x98BB08", Offset = "0x98BB08")]
	private IEnumerator MoveItemIntoSlot(InventorySlot slot)
	{
		return null;
	}

	[Token(Token = "0x6000E2E")]
	[Address(RVA = "0xE009CC", Offset = "0xE009CC", VA = "0xE009CC")]
	private InventorySlot FindSlotWithSpaceForItem(Stashable item)
	{
		return null;
	}

	[Token(Token = "0x6000E2F")]
	[Address(RVA = "0xE00D8C", Offset = "0xE00D8C", VA = "0xE00D8C")]
	private void OnPreGrabItem(Grabbable grabbable)
	{
	}

	[Token(Token = "0x6000E30")]
	[Address(RVA = "0xE00E64", Offset = "0xE00E64", VA = "0xE00E64")]
	public void Remove(Stashable item)
	{
	}

	[Token(Token = "0x6000E31")]
	[Address(RVA = "0xE00F6C", Offset = "0xE00F6C", VA = "0xE00F6C")]
	public void UpdateSlotsHoverStatus(List<StashableTrigger.StashableCollider> hoveringColliders)
	{
	}

	[Token(Token = "0x6000E32")]
	[Address(RVA = "0xE01114", Offset = "0xE01114", VA = "0xE01114")]
	public Storage()
	{
	}
}
[Token(Token = "0x200025D")]
public class StorageDropzone : StashableTrigger
{
	[Token(Token = "0x4000E3B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Storage storage;

	[Token(Token = "0x4000E3C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool m_initialized;

	[Token(Token = "0x6000E39")]
	[Address(RVA = "0xE00634", Offset = "0xE00634", VA = "0xE00634")]
	public void Init(Storage storage)
	{
	}

	[Token(Token = "0x6000E3A")]
	[Address(RVA = "0xE0128C", Offset = "0xE0128C", VA = "0xE0128C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000E3B")]
	[Address(RVA = "0xE01478", Offset = "0xE01478", VA = "0xE01478")]
	private void OnTriggerEnter(Collider col)
	{
	}

	[Token(Token = "0x6000E3C")]
	[Address(RVA = "0xE015BC", Offset = "0xE015BC", VA = "0xE015BC")]
	private void OnTriggerExit(Collider col)
	{
	}

	[Token(Token = "0x6000E3D")]
	[Address(RVA = "0xE01700", Offset = "0xE01700", VA = "0xE01700")]
	private bool HasValidItemInside()
	{
		return default(bool);
	}

	[Token(Token = "0x6000E3E")]
	[Address(RVA = "0xE01818", Offset = "0xE01818", VA = "0xE01818", Slot = "4")]
	protected override void OnHoverStateChanged()
	{
	}

	[Token(Token = "0x6000E3F")]
	[Address(RVA = "0xE018AC", Offset = "0xE018AC", VA = "0xE018AC")]
	public StorageDropzone()
	{
	}
}
[Token(Token = "0x200025E")]
public class Choppable : SaveableComponent, IInitializable
{
	[Token(Token = "0x200025F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x972498", Offset = "0x972498")]
	private sealed class <RemoveChoppedPartAndSpawnResources>d__32 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000E5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000E5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000E5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Choppable <>4__this;

		[Token(Token = "0x4000E5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <timeWaited>5__2;

		[Token(Token = "0x4000E5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <duration>5__3;

		[Token(Token = "0x4000E60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float <timeElapsed>5__4;

		[Token(Token = "0x4000E61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Transform <objToScale>5__5;

		[Token(Token = "0x4000E62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float <startScale>5__6;

		[Token(Token = "0x4000E63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private Vector3 <brokenTopOrigPos>5__7;

		[Token(Token = "0x4000E64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private bool <shouldPlaySecondPoof>5__8;

		[Token(Token = "0x1700017E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000E52")]
			[Address(RVA = "0xC47B0C", Offset = "0xC47B0C", VA = "0xC47B0C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700017F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000E54")]
			[Address(RVA = "0xC47B74", Offset = "0xC47B74", VA = "0xC47B74", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000E4F")]
		[Address(RVA = "0xC45888", Offset = "0xC45888", VA = "0xC45888")]
		[DebuggerHidden]
		public <RemoveChoppedPartAndSpawnResources>d__32(int <>1__state)
		{
		}

		[Token(Token = "0x6000E50")]
		[Address(RVA = "0xC47128", Offset = "0xC47128", VA = "0xC47128", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000E51")]
		[Address(RVA = "0xC4712C", Offset = "0xC4712C", VA = "0xC4712C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000E53")]
		[Address(RVA = "0xC47B14", Offset = "0xC47B14", VA = "0xC47B14", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000260")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9724A8", Offset = "0x9724A8")]
	private sealed class <WaitForRespawn>d__33 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000E65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000E66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000E67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Choppable <>4__this;

		[Token(Token = "0x17000180")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000E58")]
			[Address(RVA = "0xC47CCC", Offset = "0xC47CCC", VA = "0xC47CCC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000181")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000E5A")]
			[Address(RVA = "0xC47D34", Offset = "0xC47D34", VA = "0xC47D34", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000E55")]
		[Address(RVA = "0xC45930", Offset = "0xC45930", VA = "0xC45930")]
		[DebuggerHidden]
		public <WaitForRespawn>d__33(int <>1__state)
		{
		}

		[Token(Token = "0x6000E56")]
		[Address(RVA = "0xC47B7C", Offset = "0xC47B7C", VA = "0xC47B7C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000E57")]
		[Address(RVA = "0xC47B80", Offset = "0xC47B80", VA = "0xC47B80", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000E59")]
		[Address(RVA = "0xC47CD4", Offset = "0xC47CD4", VA = "0xC47CD4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000E3D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x979984", Offset = "0x979984")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x979984", Offset = "0x979984")]
	[SerializeField]
	private AssetReference[] prefabsToSpawn;

	[Token(Token = "0x4000E3E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9799F4", Offset = "0x9799F4")]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x9799F4", Offset = "0x9799F4")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9799F4", Offset = "0x9799F4")]
	private int[] numCopiesOfEachPrefab;

	[Token(Token = "0x4000E3F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x979A88", Offset = "0x979A88")]
	[SerializeField]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x979A88", Offset = "0x979A88")]
	private GameObject fullTreeObject;

	[Token(Token = "0x4000E40")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x979AF8", Offset = "0x979AF8")]
	[SerializeField]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x979AF8", Offset = "0x979AF8")]
	private GameObject treeCrownObject;

	[Token(Token = "0x4000E41")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x979B68", Offset = "0x979B68")]
	private GameObject stumpObject;

	[Token(Token = "0x4000E42")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x979BB4", Offset = "0x979BB4")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x979BB4", Offset = "0x979BB4")]
	[SerializeField]
	private Tool_Axe.AxeLevelType m_requieredAxeLevel;

	[Token(Token = "0x4000E43")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	[SerializeField]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x979C24", Offset = "0x979C24")]
	private int hitsRequired;

	[Token(Token = "0x4000E44")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x979C70", Offset = "0x979C70")]
	[SerializeField]
	private float chopForceApplied;

	[Token(Token = "0x4000E45")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	[SerializeField]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x979CBC", Offset = "0x979CBC")]
	private float delayBeforeRemoval;

	[Token(Token = "0x4000E46")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private bool shouldRespawn;

	[Token(Token = "0x4000E47")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x979D18", Offset = "0x979D18")]
	[SerializeField]
	private float delayBeforeRespawn;

	[Token(Token = "0x4000E48")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x979D64", Offset = "0x979D64")]
	[SerializeField]
	private Transform resourceSpawnPoint;

	[Token(Token = "0x4000E49")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private Transform brokenTopScalePoint;

	[Token(Token = "0x4000E4A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private Rigidbody rigbod;

	[Token(Token = "0x4000E4B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	private ParticleSystem particleEffect;

	[Token(Token = "0x4000E4C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	private Transform forcePoint;

	[Token(Token = "0x4000E4D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private float timeLeftUntilRespawn;

	[Token(Token = "0x4000E4E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private int hits;

	[Token(Token = "0x4000E4F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private float timeLeftBeforeRemoval;

	[Token(Token = "0x4000E50")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	private Vector3 fallVector;

	[Token(Token = "0x4000E51")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private bool hasBeenChopped;

	[Token(Token = "0x4000E52")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private OrientedPoint defaultPosAndRot;

	[Token(Token = "0x4000E53")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	private int numItemsLeftToSpawn;

	[Token(Token = "0x4000E54")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private int totalNumItemsToSpawn;

	[Token(Token = "0x4000E55")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
	private float timeLeftBeforeResourceSpawn;

	[Token(Token = "0x4000E56")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x979DF0", Offset = "0x979DF0")]
	public UnityEvent OnChop;

	[Token(Token = "0x4000E57")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public UnityEvent OnChopFail;

	[Token(Token = "0x4000E58")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public UnityEvent OnFall;

	[Token(Token = "0x4000E59")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public UnityEvent OnRemoved;

	[Token(Token = "0x4000E5A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private bool initialized;

	[Token(Token = "0x1700017D")]
	public int RequieredAxeLevel
	{
		[Token(Token = "0x6000E40")]
		[Address(RVA = "0xC45804", Offset = "0xC45804", VA = "0xC45804")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x6000E41")]
	[Address(RVA = "0xC4580C", Offset = "0xC4580C", VA = "0xC4580C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x98BBBC", Offset = "0x98BBBC")]
	private IEnumerator RemoveChoppedPartAndSpawnResources()
	{
		return null;
	}

	[Token(Token = "0x6000E42")]
	[Address(RVA = "0xC458B4", Offset = "0xC458B4", VA = "0xC458B4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x98BC20", Offset = "0x98BC20")]
	private IEnumerator WaitForRespawn()
	{
		return null;
	}

	[Token(Token = "0x6000E43")]
	[Address(RVA = "0xC4595C", Offset = "0xC4595C", VA = "0xC4595C")]
	private Vector3 GetResourceSpawnPos()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000E44")]
	[Address(RVA = "0xC45A7C", Offset = "0xC45A7C", VA = "0xC45A7C")]
	private void SpawnResource()
	{
	}

	[Token(Token = "0x6000E45")]
	[Address(RVA = "0xC45D48", Offset = "0xC45D48", VA = "0xC45D48")]
	private void OnResourceSpawned(SpawnOperationCallbackData data)
	{
	}

	[Token(Token = "0x6000E46")]
	[Address(RVA = "0xC45E94", Offset = "0xC45E94", VA = "0xC45E94")]
	private void Respawn()
	{
	}

	[Token(Token = "0x6000E47")]
	[Address(RVA = "0xC4611C", Offset = "0xC4611C", VA = "0xC4611C")]
	public void Chop(float chopForce, Vector3 chopDirection, int axeLevel)
	{
	}

	[Token(Token = "0x6000E48")]
	[Address(RVA = "0xC464D8", Offset = "0xC464D8", VA = "0xC464D8")]
	private void OnChopped()
	{
	}

	[Token(Token = "0x6000E49")]
	[Address(RVA = "0xC468E0", Offset = "0xC468E0", VA = "0xC468E0")]
	private void ShakeTree()
	{
	}

	[Token(Token = "0x6000E4A")]
	[Address(RVA = "0xC4625C", Offset = "0xC4625C", VA = "0xC4625C")]
	private void ShakeOnFail()
	{
	}

	[Token(Token = "0x6000E4B")]
	[Address(RVA = "0xC46BAC", Offset = "0xC46BAC", VA = "0xC46BAC")]
	private bool PlayerIsNearby()
	{
		return default(bool);
	}

	[Token(Token = "0x6000E4C")]
	[Address(RVA = "0xC46CCC", Offset = "0xC46CCC", VA = "0xC46CCC", Slot = "4")]
	public override ComponentState CreateState()
	{
		return null;
	}

	[Token(Token = "0x6000E4D")]
	[Address(RVA = "0xC46D84", Offset = "0xC46D84", VA = "0xC46D84", Slot = "5")]
	public void Initialize()
	{
	}

	[Token(Token = "0x6000E4E")]
	[Address(RVA = "0xC47110", Offset = "0xC47110", VA = "0xC47110")]
	public Choppable()
	{
	}
}
[Serializable]
[Token(Token = "0x2000261")]
public class ChoppableState : ComponentState
{
	[Token(Token = "0x4000E68")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public bool hasBeenChopped;

	[Token(Token = "0x4000E69")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float timeLeftUntilRespawn;

	[Token(Token = "0x6000E5B")]
	[Address(RVA = "0xC46D44", Offset = "0xC46D44", VA = "0xC46D44")]
	public ChoppableState(bool chopped, float timeTilRespawn)
	{
	}
}
[Token(Token = "0x2000262")]
public class Telescope : Tool_Base, ITool
{
	[Token(Token = "0x4000E6A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private GameObject cam;

	[Token(Token = "0x6000E5C")]
	[Address(RVA = "0xE2C3E8", Offset = "0xE2C3E8", VA = "0xE2C3E8", Slot = "19")]
	public ToolType GetToolType()
	{
		return default(ToolType);
	}

	[Token(Token = "0x6000E5D")]
	[Address(RVA = "0xE2C3F0", Offset = "0xE2C3F0", VA = "0xE2C3F0", Slot = "6")]
	public override void Init()
	{
	}

	[Token(Token = "0x6000E5E")]
	[Address(RVA = "0xE2C640", Offset = "0xE2C640", VA = "0xE2C640", Slot = "12")]
	public override void StartUsing(PlayerHand hand)
	{
	}

	[Token(Token = "0x6000E5F")]
	[Address(RVA = "0xE2C660", Offset = "0xE2C660", VA = "0xE2C660", Slot = "13")]
	public override void StopUsing(PlayerHand hand)
	{
	}

	[Token(Token = "0x6000E60")]
	[Address(RVA = "0xE2C680", Offset = "0xE2C680", VA = "0xE2C680", Slot = "4")]
	public override ComponentState CreateState()
	{
		return null;
	}

	[Token(Token = "0x6000E61")]
	[Address(RVA = "0xE2C6DC", Offset = "0xE2C6DC", VA = "0xE2C6DC")]
	public Telescope()
	{
	}
}
[Token(Token = "0x2000263")]
public class ToolManager : SaveableComponent, IInitializable
{
	[Token(Token = "0x4000E6B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static ToolManager Instance;

	[Token(Token = "0x4000E6C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static List<Tool_Base> allTools;

	[Token(Token = "0x4000E6D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static List<ToolShed> allToolSheds;

	[Token(Token = "0x4000E6E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool fishingRodFound;

	[Token(Token = "0x4000E6F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	private bool axeFound;

	[Token(Token = "0x4000E70")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A")]
	private bool cameraFound;

	[Token(Token = "0x6000E62")]
	[Address(RVA = "0xE3097C", Offset = "0xE3097C", VA = "0xE3097C")]
	public static bool GetFishingRodFound()
	{
		return default(bool);
	}

	[Token(Token = "0x6000E63")]
	[Address(RVA = "0xE30A5C", Offset = "0xE30A5C", VA = "0xE30A5C")]
	public static bool GetCameraFound()
	{
		return default(bool);
	}

	[Token(Token = "0x6000E64")]
	[Address(RVA = "0xE30B3C", Offset = "0xE30B3C", VA = "0xE30B3C")]
	public static bool GetAxeFound()
	{
		return default(bool);
	}

	[Token(Token = "0x6000E65")]
	[Address(RVA = "0xE30C1C", Offset = "0xE30C1C", VA = "0xE30C1C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000E66")]
	[Address(RVA = "0xE30CD0", Offset = "0xE30CD0", VA = "0xE30CD0")]
	public static void RegisterTool(Tool_Base tool)
	{
	}

	[Token(Token = "0x6000E67")]
	[Address(RVA = "0xE30D54", Offset = "0xE30D54", VA = "0xE30D54")]
	public static void RegisterToolShed(ToolShed shed)
	{
	}

	[Token(Token = "0x6000E68")]
	[Address(RVA = "0xE30DD8", Offset = "0xE30DD8", VA = "0xE30DD8")]
	public static void RemoveToolShed(ToolShed shed)
	{
	}

	[Token(Token = "0x6000E69")]
	[Address(RVA = "0xE30EA8", Offset = "0xE30EA8", VA = "0xE30EA8", Slot = "5")]
	public void Initialize()
	{
	}

	[Token(Token = "0x6000E6A")]
	[Address(RVA = "0xE30F48", Offset = "0xE30F48", VA = "0xE30F48")]
	public static void ReturnAllToolsToHouse()
	{
	}

	[Token(Token = "0x6000E6B")]
	[Address(RVA = "0xE31134", Offset = "0xE31134", VA = "0xE31134")]
	public static void ReturnAllToolsToBoat()
	{
	}

	[Token(Token = "0x6000E6C")]
	[Address(RVA = "0xE31274", Offset = "0xE31274", VA = "0xE31274")]
	public static Tool_Base GetToolWithName(string name)
	{
		return null;
	}

	[Token(Token = "0x6000E6D")]
	[Address(RVA = "0xE314F0", Offset = "0xE314F0", VA = "0xE314F0")]
	public static void FoundFishingRod()
	{
	}

	[Token(Token = "0x6000E6E")]
	[Address(RVA = "0xE31758", Offset = "0xE31758", VA = "0xE31758")]
	public static void FoundCamera()
	{
	}

	[Token(Token = "0x6000E6F")]
	[Address(RVA = "0xE319C0", Offset = "0xE319C0", VA = "0xE319C0")]
	public static void FoundAxe()
	{
	}

	[Token(Token = "0x6000E70")]
	[Address(RVA = "0xE31C28", Offset = "0xE31C28", VA = "0xE31C28", Slot = "4")]
	public override ComponentState CreateState()
	{
		return null;
	}

	[Token(Token = "0x6000E71")]
	[Address(RVA = "0xE31CB0", Offset = "0xE31CB0", VA = "0xE31CB0")]
	public ToolManager()
	{
	}
}
[Serializable]
[Token(Token = "0x2000264")]
public class ToolShedState : ComponentState
{
	[Token(Token = "0x4000E71")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public bool fishingRodFound;

	[Token(Token = "0x4000E72")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
	public bool axeCrafted;

	[Token(Token = "0x4000E73")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x12")]
	public bool cameraFound;

	[Token(Token = "0x6000E73")]
	[Address(RVA = "0xE31CA8", Offset = "0xE31CA8", VA = "0xE31CA8")]
	public ToolShedState()
	{
	}
}
[Token(Token = "0x2000265")]
public class ToolPosition : MonoBehaviour, IInitializable
{
	[Token(Token = "0x2000266")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9724B8", Offset = "0x9724B8")]
	private sealed class <AnimateSnapToPosition>d__9 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000E7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000E7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000E7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ToolPosition <>4__this;

		[Token(Token = "0x4000E7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform tool;

		[Token(Token = "0x4000E7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float duration;

		[Token(Token = "0x4000E7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float <timeElapsed>5__2;

		[Token(Token = "0x4000E80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool <done>5__3;

		[Token(Token = "0x17000182")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000E7E")]
			[Address(RVA = "0xE32760", Offset = "0xE32760", VA = "0xE32760", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000183")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000E80")]
			[Address(RVA = "0xE327C8", Offset = "0xE327C8", VA = "0xE327C8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000E7B")]
		[Address(RVA = "0xE3224C", Offset = "0xE3224C", VA = "0xE3224C")]
		[DebuggerHidden]
		public <AnimateSnapToPosition>d__9(int <>1__state)
		{
		}

		[Token(Token = "0x6000E7C")]
		[Address(RVA = "0xE324B8", Offset = "0xE324B8", VA = "0xE324B8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000E7D")]
		[Address(RVA = "0xE324BC", Offset = "0xE324BC", VA = "0xE324BC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000E7F")]
		[Address(RVA = "0xE32768", Offset = "0xE32768", VA = "0xE32768", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000E74")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GrabbableToolImpostor impostor;

	[Token(Token = "0x4000E75")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool hasTool;

	[Token(Token = "0x4000E76")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Rigidbody rb;

	[Token(Token = "0x4000E77")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Stashable stashable;

	[Token(Token = "0x4000E78")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Tool_Base toolRef;

	[Token(Token = "0x4000E79")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool initialized;

	[Token(Token = "0x6000E74")]
	[Address(RVA = "0xE31D7C", Offset = "0xE31D7C", VA = "0xE31D7C", Slot = "4")]
	public void Initialize()
	{
	}

	[Token(Token = "0x6000E75")]
	[Address(RVA = "0xE31F08", Offset = "0xE31F08", VA = "0xE31F08")]
	public void ResetToolPosition()
	{
	}

	[Token(Token = "0x6000E76")]
	[Address(RVA = "0xE32078", Offset = "0xE32078", VA = "0xE32078")]
	private void SnapToPosition(Rigidbody toolRb, bool animate = true)
	{
	}

	[Token(Token = "0x6000E77")]
	[Address(RVA = "0xE321A4", Offset = "0xE321A4", VA = "0xE321A4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x98BD24", Offset = "0x98BD24")]
	private IEnumerator AnimateSnapToPosition(Transform tool, float duration)
	{
		return null;
	}

	[Token(Token = "0x6000E78")]
	[Address(RVA = "0xE32278", Offset = "0xE32278", VA = "0xE32278")]
	private void OnTriggerStay(Collider other)
	{
	}

	[Token(Token = "0x6000E79")]
	[Address(RVA = "0xE323D0", Offset = "0xE323D0", VA = "0xE323D0")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x6000E7A")]
	[Address(RVA = "0xE324B0", Offset = "0xE324B0", VA = "0xE324B0")]
	public ToolPosition()
	{
	}
}
[Token(Token = "0x2000267")]
public class ToolShed : MonoBehaviour, IInitializable, IValidateCustom, IValidate
{
	[Token(Token = "0x4000E81")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool isShedNextToHouse;

	[Token(Token = "0x4000E82")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool isShedOnBoat;

	[Token(Token = "0x4000E83")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject FishingRodCollider;

	[Token(Token = "0x4000E84")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject FishingRodImpostor;

	[Token(Token = "0x4000E85")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject AxeCollider;

	[Token(Token = "0x4000E86")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject AxeImpostor;

	[Token(Token = "0x4000E87")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject CameraCollider;

	[Token(Token = "0x4000E88")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject CameraImpostor;

	[Token(Token = "0x4000E89")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private ToolPosition[] allToolPositions;

	[Token(Token = "0x6000E81")]
	[Address(RVA = "0xE327D0", Offset = "0xE327D0", VA = "0xE327D0", Slot = "4")]
	public void Initialize()
	{
	}

	[Token(Token = "0x6000E82")]
	[Address(RVA = "0xE328B4", Offset = "0xE328B4", VA = "0xE328B4")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000E83")]
	[Address(RVA = "0xE31710", Offset = "0xE31710", VA = "0xE31710")]
	public void ToggleFishingRodImpostor(bool found)
	{
	}

	[Token(Token = "0x6000E84")]
	[Address(RVA = "0xE31BE0", Offset = "0xE31BE0", VA = "0xE31BE0")]
	public void ToggleAxeImpostor(bool crafted)
	{
	}

	[Token(Token = "0x6000E85")]
	[Address(RVA = "0xE31978", Offset = "0xE31978", VA = "0xE31978")]
	public void ToggleCameraImpostor(bool found)
	{
	}

	[Token(Token = "0x6000E86")]
	[Address(RVA = "0xE31088", Offset = "0xE31088", VA = "0xE31088")]
	public void ReturnAllToolsToShed()
	{
	}

	[Token(Token = "0x6000E87")]
	[Address(RVA = "0xE32918", Offset = "0xE32918", VA = "0xE32918")]
	public ToolShed()
	{
	}
}
[Token(Token = "0x2000268")]
public class Tool_Axe : Tool_Base, ITool, IInitializable
{
	[Token(Token = "0x2000269")]
	public enum AxeLevelType
	{
		[Token(Token = "0x4000E90")]
		Any,
		[Token(Token = "0x4000E91")]
		Level1,
		[Token(Token = "0x4000E92")]
		Level2,
		[Token(Token = "0x4000E93")]
		Level3
	}

	[Token(Token = "0x4000E8A")]
	private const float chopCooldownTime = 0.5f;

	[Token(Token = "0x4000E8B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private float chopCooldownLeft;

	[Token(Token = "0x4000E8C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public NeatAudioPlayer chopSoundPlayer;

	[Token(Token = "0x4000E8D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int AxeLevel;

	[Token(Token = "0x4000E8E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private ChopEvent chopEvent;

	[Token(Token = "0x6000E88")]
	[Address(RVA = "0xE32920", Offset = "0xE32920", VA = "0xE32920", Slot = "19")]
	public ToolType GetToolType()
	{
		return default(ToolType);
	}

	[Token(Token = "0x6000E89")]
	[Address(RVA = "0xE32928", Offset = "0xE32928", VA = "0xE32928")]
	private void Update()
	{
	}

	[Token(Token = "0x6000E8A")]
	[Address(RVA = "0xE32968", Offset = "0xE32968", VA = "0xE32968", Slot = "21")]
	public void Initialize()
	{
	}

	[Token(Token = "0x6000E8B")]
	[Address(RVA = "0xE32A8C", Offset = "0xE32A8C", VA = "0xE32A8C", Slot = "6")]
	public override void Init()
	{
	}

	[Token(Token = "0x6000E8C")]
	[Address(RVA = "0xE32B2C", Offset = "0xE32B2C", VA = "0xE32B2C", Slot = "12")]
	public override void StartUsing(PlayerHand hand)
	{
	}

	[Token(Token = "0x6000E8D")]
	[Address(RVA = "0xE32B8C", Offset = "0xE32B8C", VA = "0xE32B8C")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000E8E")]
	[Address(RVA = "0xE33110", Offset = "0xE33110", VA = "0xE33110", Slot = "4")]
	public override ComponentState CreateState()
	{
		return null;
	}

	[Token(Token = "0x6000E8F")]
	[Address(RVA = "0xE3319C", Offset = "0xE3319C", VA = "0xE3319C", Slot = "17")]
	public override void SetToolUpgradeLevel(int upgradeLevel)
	{
	}

	[Token(Token = "0x6000E90")]
	[Address(RVA = "0xE33228", Offset = "0xE33228", VA = "0xE33228")]
	public Tool_Axe()
	{
	}
}
[Token(Token = "0x200026A")]
public abstract class Tool_Base : SaveableComponent
{
	[Token(Token = "0x4000E94")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x979E48", Offset = "0x979E48")]
	private Grabbable <Grabbable>k__BackingField;

	[Token(Token = "0x4000E95")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	internal bool isBeingUsed;

	[Token(Token = "0x4000E96")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	protected GameObject[] m_upgradeVisuals;

	[Token(Token = "0x4000E97")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	protected GameObject m_currentVisual;

	[Token(Token = "0x4000E98")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private int m_upgradeLevel;

	[Token(Token = "0x17000184")]
	public Grabbable Grabbable
	{
		[Token(Token = "0x6000E92")]
		[Address(RVA = "0xE3328C", Offset = "0xE3328C", VA = "0xE3328C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x98BDD8", Offset = "0x98BDD8")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000E93")]
		[Address(RVA = "0xE33294", Offset = "0xE33294", VA = "0xE33294")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x98BDE8", Offset = "0x98BDE8")]
		protected set
		{
		}
	}

	[Token(Token = "0x6000E94")]
	[Address(RVA = "0xE3329C", Offset = "0xE3329C", VA = "0xE3329C", Slot = "5")]
	public virtual void Awake()
	{
	}

	[Token(Token = "0x6000E95")]
	[Address(RVA = "0xE2C528", Offset = "0xE2C528", VA = "0xE2C528", Slot = "6")]
	public virtual void Init()
	{
	}

	[Token(Token = "0x6000E96")]
	[Address(RVA = "0xE32A5C", Offset = "0xE32A5C", VA = "0xE32A5C")]
	public void InitializeToolLevel(int level)
	{
	}

	[Token(Token = "0x6000E97")]
	[Address(RVA = "0xE332A8", Offset = "0xE332A8", VA = "0xE332A8")]
	private void TryReactivateTool()
	{
	}

	[Token(Token = "0x6000E98")]
	[Address(RVA = "0xE3340C", Offset = "0xE3340C", VA = "0xE3340C", Slot = "7")]
	public virtual void Reset()
	{
	}

	[Token(Token = "0x6000E99")]
	[Address(RVA = "0xE33080", Offset = "0xE33080", VA = "0xE33080")]
	public PlayerHand GetHand()
	{
		return null;
	}

	[Token(Token = "0x6000E9A")]
	[Address(RVA = "0xE334F8", Offset = "0xE334F8", VA = "0xE334F8", Slot = "8")]
	internal virtual void ToggleUseage(bool pickUp)
	{
	}

	[Token(Token = "0x6000E9B")]
	[Address(RVA = "0xE33568", Offset = "0xE33568", VA = "0xE33568", Slot = "9")]
	internal virtual void OnPickUp()
	{
	}

	[Token(Token = "0x6000E9C")]
	[Address(RVA = "0xE33574", Offset = "0xE33574", VA = "0xE33574", Slot = "10")]
	internal virtual void OnLetGo()
	{
	}

	[Token(Token = "0x6000E9D")]
	[Address(RVA = "0xE3357C", Offset = "0xE3357C", VA = "0xE3357C", Slot = "11")]
	public virtual void OnStashedInToolShed()
	{
	}

	[Token(Token = "0x6000E9E")]
	[Address(RVA = "0xE32B88", Offset = "0xE32B88", VA = "0xE32B88", Slot = "12")]
	public virtual void StartUsing(PlayerHand hand)
	{
	}

	[Token(Token = "0x6000E9F")]
	[Address(RVA = "0xE33580", Offset = "0xE33580", VA = "0xE33580", Slot = "13")]
	public virtual void StopUsing(PlayerHand hand)
	{
	}

	[Token(Token = "0x6000EA0")]
	[Address(RVA = "0xE33584", Offset = "0xE33584", VA = "0xE33584", Slot = "14")]
	public virtual void WhileHeld(PlayerHand hand)
	{
	}

	[Token(Token = "0x6000EA1")]
	[Address(RVA = "0xE33588", Offset = "0xE33588", VA = "0xE33588", Slot = "15")]
	public virtual void OnSnapTurnWhileHeld()
	{
	}

	[Token(Token = "0x6000EA2")]
	[Address(RVA = "0xE3358C", Offset = "0xE3358C", VA = "0xE3358C", Slot = "16")]
	public virtual float GetDelayBeforeRelease()
	{
		return default(float);
	}

	[Token(Token = "0x6000EA3")]
	[Address(RVA = "0xE33220", Offset = "0xE33220", VA = "0xE33220", Slot = "17")]
	public virtual void SetToolUpgradeLevel(int upgradeLevel)
	{
	}

	[Token(Token = "0x6000EA4")]
	[Address(RVA = "0xE336AC", Offset = "0xE336AC", VA = "0xE336AC", Slot = "18")]
	public int GetUpgradeLevel()
	{
		return default(int);
	}

	[Token(Token = "0x6000EA5")]
	[Address(RVA = "0xE33594", Offset = "0xE33594", VA = "0xE33594")]
	private void SetUpgradeVisual(int upgradeLevel)
	{
	}

	[Token(Token = "0x6000EA6")]
	[Address(RVA = "0xE2C6EC", Offset = "0xE2C6EC", VA = "0xE2C6EC")]
	protected Tool_Base()
	{
	}
}
[Token(Token = "0x200026B")]
public class Tool_FishingRod : Tool_Base, ITool, IInitializable
{
	[Token(Token = "0x200026C")]
	private struct BobberVelocityData
	{
		[Token(Token = "0x4000ED2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float TimeStamp;

		[Token(Token = "0x4000ED3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public Vector3 Velocity;

		[Token(Token = "0x4000ED4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vector3 Pos;

		[Token(Token = "0x6000EDE")]
		[Address(RVA = "0xA47968", Offset = "0xA47968", VA = "0xA47968")]
		public BobberVelocityData(float inTimeStamp, Vector3 inVelocity, Vector3 inPos)
		{
		}
	}

	[Token(Token = "0x200026D")]
	private enum State
	{
		[Token(Token = "0x4000ED6")]
		BobberHanging,
		[Token(Token = "0x4000ED7")]
		BobberFlyingOut,
		[Token(Token = "0x4000ED8")]
		BobberLandedWaitingForFish,
		[Token(Token = "0x4000ED9")]
		FishBitingRingAppearing,
		[Token(Token = "0x4000EDA")]
		FishChasing,
		[Token(Token = "0x4000EDB")]
		FishReadyToYeet,
		[Token(Token = "0x4000EDC")]
		FishYeeting,
		[Token(Token = "0x4000EDD")]
		FishBubbleAttached
	}

	[Token(Token = "0x200026E")]
	private enum YankDir
	{
		[Token(Token = "0x4000EDF")]
		Forward,
		[Token(Token = "0x4000EE0")]
		Backward
	}

	[Token(Token = "0x200026F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9724C8", Offset = "0x9724C8")]
	private sealed class <DebugWaitForBite>d__93 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000EE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000EE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000EE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Tool_FishingRod <>4__this;

		[Token(Token = "0x4000EE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int <nibbleCount>5__2;

		[Token(Token = "0x17000185")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000EE2")]
			[Address(RVA = "0xE38864", Offset = "0xE38864", VA = "0xE38864", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000186")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000EE4")]
			[Address(RVA = "0xE388CC", Offset = "0xE388CC", VA = "0xE388CC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000EDF")]
		[Address(RVA = "0xE375A4", Offset = "0xE375A4", VA = "0xE375A4")]
		[DebuggerHidden]
		public <DebugWaitForBite>d__93(int <>1__state)
		{
		}

		[Token(Token = "0x6000EE0")]
		[Address(RVA = "0xE38598", Offset = "0xE38598", VA = "0xE38598", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000EE1")]
		[Address(RVA = "0xE3859C", Offset = "0xE3859C", VA = "0xE3859C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000EE3")]
		[Address(RVA = "0xE3886C", Offset = "0xE3886C", VA = "0xE3886C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000270")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9724D8", Offset = "0x9724D8")]
	private sealed class <StopFishingAfterDelay>d__108 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000EE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000EE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000EE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Tool_FishingRod <>4__this;

		[Token(Token = "0x17000187")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000EE8")]
			[Address(RVA = "0xE38A18", Offset = "0xE38A18", VA = "0xE38A18", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000188")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000EEA")]
			[Address(RVA = "0xE38A80", Offset = "0xE38A80", VA = "0xE38A80", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000EE5")]
		[Address(RVA = "0xE380C0", Offset = "0xE380C0", VA = "0xE380C0")]
		[DebuggerHidden]
		public <StopFishingAfterDelay>d__108(int <>1__state)
		{
		}

		[Token(Token = "0x6000EE6")]
		[Address(RVA = "0xE388D4", Offset = "0xE388D4", VA = "0xE388D4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000EE7")]
		[Address(RVA = "0xE388D8", Offset = "0xE388D8", VA = "0xE388D8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000EE9")]
		[Address(RVA = "0xE38A20", Offset = "0xE38A20", VA = "0xE38A20", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000E99")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private GameObject[] m_bobberUpgradeVisuals;

	[Token(Token = "0x4000E9A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private Transform[] m_crankUpgradeVisuals;

	[Token(Token = "0x4000E9B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public GameObject bobberPrefab;

	[Token(Token = "0x4000E9C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Transform bobberStartPos;

	[Token(Token = "0x4000E9D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Rigidbody bobberAttach;

	[Token(Token = "0x4000E9E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public FishingRod rodModel;

	[Token(Token = "0x4000E9F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Stashable stashable;

	[Token(Token = "0x4000EA0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public FishingLine fishingLine;

	[Token(Token = "0x4000EA1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public NeatAudioPlayer sounds;

	[Token(Token = "0x4000EA2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public Animator animator;

	[Token(Token = "0x4000EA3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public Transform bendyRootJoint;

	[Token(Token = "0x4000EA4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public FishingEffects effects;

	[Token(Token = "0x4000EA5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public Transform spool;

	[Token(Token = "0x4000EA6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public Transform crankPositionLeftHand;

	[Token(Token = "0x4000EA7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public Transform crankPositionRightHand;

	[Token(Token = "0x4000EA8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	[SerializeField]
	private Transform crankJoint;

	[Token(Token = "0x4000EA9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	[SerializeField]
	private Transform bobberAttachParent;

	[Token(Token = "0x4000EAA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private FishingCrank crank;

	[Token(Token = "0x4000EAB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private Bobber bobber;

	[Token(Token = "0x4000EAC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public NeatAudioPlayer ReelSoundPlayer;

	[Token(Token = "0x4000EAD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static readonly int SPEED;

	[Token(Token = "0x4000EAE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private AssetReference fishPrefab;

	[Token(Token = "0x4000EAF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private FishRegion currentFishRegion;

	[Token(Token = "0x4000EB0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private Rigidbody spawnedFish;

	[Token(Token = "0x4000EB1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	public AudioSource CaughtSound;

	[Token(Token = "0x4000EB2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public static float FishDangleOffset;

	[Token(Token = "0x4000EB3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static float BobberDangleOffset;

	[Token(Token = "0x4000EB4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	private float timeSinceBobberThrown;

	[Token(Token = "0x4000EB5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
	private bool IsCurrentlyReeling;

	[Token(Token = "0x4000EB6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x115")]
	private bool stashedInToolShed;

	[Token(Token = "0x4000EB7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	private Vector3 playerPositionWhenFishingStarted;

	[Token(Token = "0x4000EB8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	private RaycastHit[] raycastResults;

	[Token(Token = "0x4000EB9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	private Collider[] fishingRodColliders;

	[Token(Token = "0x4000EBA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private static int CollapsedRodId;

	[Token(Token = "0x4000EBB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	private float timeLeftBeforeFishingStops;

	[Token(Token = "0x4000EBC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x13C")]
	private float timeLeftToUpdateFishingLine;

	[Token(Token = "0x4000EBD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	private Vector3 prevBobberPos;

	[Token(Token = "0x4000EBE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	private Transform m_currentCrankVisual;

	[Token(Token = "0x4000EBF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	private GameObject m_currentBobberVisual;

	[Token(Token = "0x4000EC0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static int FishingRodLevel;

	[Token(Token = "0x4000EC1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	private float fishSwimSpeed;

	[Token(Token = "0x4000EC2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x164")]
	private float currentSpoolSpeed;

	[Token(Token = "0x4000EC3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	private float targetSpoolSpeed;

	[Token(Token = "0x4000EC4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	private List<BobberVelocityData> previousVelocities;

	[Token(Token = "0x4000EC5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	private readonly FishCatchMovement catchMovement;

	[Token(Token = "0x4000EC6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	private State fishingState;

	[Token(Token = "0x4000EC7")]
	private const float THRESH_THROW_SPEED = 20f;

	[Token(Token = "0x4000EC8")]
	private const float THRESH_PULL_SPEED = 15f;

	[Token(Token = "0x4000EC9")]
	private const float THRESH_POINTING_UP = 0.4f;

	[Token(Token = "0x4000ECA")]
	private const float THRESH_THROW_FORWARD = 0.1f;

	[Token(Token = "0x4000ECB")]
	private const float THRESH_THROW_TIME = 0.5f;

	[Token(Token = "0x4000ECC")]
	private const float THRESH_THROW_VELOCITY = 13f;

	[Token(Token = "0x4000ECD")]
	private const float THRESH_THROW_ANGLE_DELTA_MIN = 60f;

	[Token(Token = "0x4000ECE")]
	private const float THRESH_THROW_ANGLE_DELTA_MAX = 160f;

	[Token(Token = "0x4000ECF")]
	private const float THRESH_THROW_UP_DIR = 45f;

	[Token(Token = "0x4000ED0")]
	private const float THRESH_THROW_BACK_DIR = 75f;

	[Token(Token = "0x4000ED1")]
	private const bool USE_BEFORE_SHARPEST_TURN_VELOCITY = true;

	[Token(Token = "0x6000EA7")]
	[Address(RVA = "0xE336B4", Offset = "0xE336B4", VA = "0xE336B4", Slot = "19")]
	public ToolType GetToolType()
	{
		return default(ToolType);
	}

	[Token(Token = "0x6000EA8")]
	[Address(RVA = "0xE336BC", Offset = "0xE336BC", VA = "0xE336BC")]
	public void SetCrank(FishingCrank crank)
	{
	}

	[Token(Token = "0x6000EA9")]
	[Address(RVA = "0xE336C4", Offset = "0xE336C4", VA = "0xE336C4")]
	private void ResetFishData()
	{
	}

	[Token(Token = "0x6000EAA")]
	[Address(RVA = "0xE33708", Offset = "0xE33708", VA = "0xE33708")]
	public static bool UseTeleportButtonToThrowLine()
	{
		return default(bool);
	}

	[Token(Token = "0x6000EAB")]
	[Address(RVA = "0xE33710", Offset = "0xE33710", VA = "0xE33710", Slot = "21")]
	public void Initialize()
	{
	}

	[Token(Token = "0x6000EAC")]
	[Address(RVA = "0xE337F8", Offset = "0xE337F8", VA = "0xE337F8", Slot = "6")]
	public override void Init()
	{
	}

	[Token(Token = "0x6000EAD")]
	[Address(RVA = "0xE33D88", Offset = "0xE33D88", VA = "0xE33D88")]
	private void StashRod()
	{
	}

	[Token(Token = "0x6000EAE")]
	[Address(RVA = "0xE3400C", Offset = "0xE3400C", VA = "0xE3400C")]
	private void OnStash()
	{
	}

	[Token(Token = "0x6000EAF")]
	[Address(RVA = "0xE34098", Offset = "0xE34098", VA = "0xE34098", Slot = "11")]
	public override void OnStashedInToolShed()
	{
	}

	[Token(Token = "0x6000EB0")]
	[Address(RVA = "0xE340CC", Offset = "0xE340CC", VA = "0xE340CC")]
	private void OnRecovered(RecoverEvent e)
	{
	}

	[Token(Token = "0x6000EB1")]
	[Address(RVA = "0xE33E44", Offset = "0xE33E44", VA = "0xE33E44")]
	private void ResetBobberAndLine()
	{
	}

	[Token(Token = "0x6000EB2")]
	[Address(RVA = "0xE33A88", Offset = "0xE33A88", VA = "0xE33A88")]
	private void TrySetupBobber()
	{
	}

	[Token(Token = "0x6000EB3")]
	[Address(RVA = "0xE342B8", Offset = "0xE342B8", VA = "0xE342B8")]
	private void TrackBobberVelocityOverTime(PlayerHand hand)
	{
	}

	[Token(Token = "0x6000EB4")]
	[Address(RVA = "0xE34478", Offset = "0xE34478", VA = "0xE34478")]
	private Vector3 GetCurrentBobberVelocity()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000EB5")]
	[Address(RVA = "0xE34510", Offset = "0xE34510", VA = "0xE34510", Slot = "14")]
	public override void WhileHeld(PlayerHand hand)
	{
	}

	[Token(Token = "0x6000EB6")]
	[Address(RVA = "0xE34A68", Offset = "0xE34A68", VA = "0xE34A68")]
	private void UpdateBobberAngle()
	{
	}

	[Token(Token = "0x6000EB7")]
	[Address(RVA = "0xE34C84", Offset = "0xE34C84", VA = "0xE34C84")]
	public float GetCurrentReelForce()
	{
		return default(float);
	}

	[Token(Token = "0x6000EB8")]
	[Address(RVA = "0xE34B98", Offset = "0xE34B98", VA = "0xE34B98")]
	private Vector3 GetCurrentDragDirection()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000EB9")]
	[Address(RVA = "0xE350E0", Offset = "0xE350E0", VA = "0xE350E0")]
	private bool CheckIfRodDidAHeckaYank(PlayerHand hand, YankDir throwDir, Vector3 throwVelocity)
	{
		return default(bool);
	}

	[Token(Token = "0x6000EBA")]
	[Address(RVA = "0xE3555C", Offset = "0xE3555C", VA = "0xE3555C")]
	private bool CanCatchFishNow(PlayerHand hand)
	{
		return default(bool);
	}

	[Token(Token = "0x6000EBB")]
	[Address(RVA = "0xE34948", Offset = "0xE34948", VA = "0xE34948")]
	private bool ShouldThrowBobber(out float throwSpeed, out Vector3 throwDirection, out Vector3 startPos)
	{
		return default(bool);
	}

	[Token(Token = "0x6000EBC")]
	[Address(RVA = "0xE365B0", Offset = "0xE365B0", VA = "0xE365B0")]
	private void DrawPrevVelocities(int num)
	{
	}

	[Token(Token = "0x6000EBD")]
	[Address(RVA = "0xE356F8", Offset = "0xE356F8", VA = "0xE356F8")]
	private bool IsValidThrow(out float throwSpeed, out Vector3 throwDirection, out Vector3 startPos)
	{
		return default(bool);
	}

	[Token(Token = "0x6000EBE")]
	[Address(RVA = "0xE368FC", Offset = "0xE368FC", VA = "0xE368FC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000EBF")]
	[Address(RVA = "0xE34DE4", Offset = "0xE34DE4", VA = "0xE34DE4")]
	private void UpdateReeling(Vector3 dragDir, float reelForce, PlayerHand hand)
	{
	}

	[Token(Token = "0x6000EC0")]
	[Address(RVA = "0xE3505C", Offset = "0xE3505C", VA = "0xE3505C")]
	private void CheckIfBobberHasBeenReeledIn(Vector3 dragDir, float reelForce)
	{
	}

	[Token(Token = "0x6000EC1")]
	[Address(RVA = "0xE36DC4", Offset = "0xE36DC4", VA = "0xE36DC4")]
	private void UpdateSpoolAnimation(float reelForce)
	{
	}

	[Token(Token = "0x6000EC2")]
	[Address(RVA = "0xE37090", Offset = "0xE37090", VA = "0xE37090")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000EC3")]
	[Address(RVA = "0xE3736C", Offset = "0xE3736C", VA = "0xE3736C")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000EC4")]
	[Address(RVA = "0xE37400", Offset = "0xE37400", VA = "0xE37400", Slot = "4")]
	public override ComponentState CreateState()
	{
		return null;
	}

	[Token(Token = "0x6000EC5")]
	[Address(RVA = "0xE34820", Offset = "0xE34820", VA = "0xE34820")]
	public void ThrowBobber(Vector3 pos, Vector3 velocity)
	{
	}

	[Token(Token = "0x6000EC6")]
	[Address(RVA = "0xE3748C", Offset = "0xE3748C", VA = "0xE3748C")]
	public bool BobberIsFlyingOut()
	{
		return default(bool);
	}

	[Token(Token = "0x6000EC7")]
	[Address(RVA = "0xE3749C", Offset = "0xE3749C", VA = "0xE3749C")]
	public void OnBobberHitWater()
	{
	}

	[Token(Token = "0x6000EC8")]
	[Address(RVA = "0xE37528", Offset = "0xE37528", VA = "0xE37528")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x98BDF8", Offset = "0x98BDF8")]
	private IEnumerator DebugWaitForBite()
	{
		return null;
	}

	[Token(Token = "0x6000EC9")]
	[Address(RVA = "0xE375D0", Offset = "0xE375D0", VA = "0xE375D0")]
	private void StartFishBite()
	{
	}

	[Token(Token = "0x6000ECA")]
	[Address(RVA = "0xE37698", Offset = "0xE37698", VA = "0xE37698")]
	private void StartFishChase()
	{
	}

	[Token(Token = "0x6000ECB")]
	[Address(RVA = "0xE36C04", Offset = "0xE36C04", VA = "0xE36C04")]
	private void OnCatchAndReadyToYeet()
	{
	}

	[Token(Token = "0x6000ECC")]
	[Address(RVA = "0xE37844", Offset = "0xE37844", VA = "0xE37844")]
	private void OnFishSpawned(SpawnOperationCallbackData data)
	{
	}

	[Token(Token = "0x6000ECD")]
	[Address(RVA = "0xE37CFC", Offset = "0xE37CFC", VA = "0xE37CFC")]
	private void FishGrabbed(Grabbable grabbable)
	{
	}

	[Token(Token = "0x6000ECE")]
	[Address(RVA = "0xE35490", Offset = "0xE35490", VA = "0xE35490")]
	private void OnYeetFishWithRod()
	{
	}

	[Token(Token = "0x6000ECF")]
	[Address(RVA = "0xE37E20", Offset = "0xE37E20", VA = "0xE37E20")]
	public void OnBobberHitWall()
	{
	}

	[Token(Token = "0x6000ED0")]
	[Address(RVA = "0xE36D80", Offset = "0xE36D80", VA = "0xE36D80")]
	private void OnFailCatch()
	{
	}

	[Token(Token = "0x6000ED1")]
	[Address(RVA = "0xE37E3C", Offset = "0xE37E3C", VA = "0xE37E3C", Slot = "12")]
	public override void StartUsing(PlayerHand hand)
	{
	}

	[Token(Token = "0x6000ED2")]
	[Address(RVA = "0xE341E4", Offset = "0xE341E4", VA = "0xE341E4")]
	public void ResetBobberToRod(bool animate)
	{
	}

	[Token(Token = "0x6000ED3")]
	[Address(RVA = "0xE37FDC", Offset = "0xE37FDC", VA = "0xE37FDC")]
	private void OnPlayerSnapTurned(NeatVR_Player player)
	{
	}

	[Token(Token = "0x6000ED4")]
	[Address(RVA = "0xE38008", Offset = "0xE38008", VA = "0xE38008")]
	private void OnPlayerTeleported(TeleportDestinationInfo destinationInfo)
	{
	}

	[Token(Token = "0x6000ED5")]
	[Address(RVA = "0xE37FE0", Offset = "0xE37FE0", VA = "0xE37FE0")]
	private void PlayerMovedQuickly()
	{
	}

	[Token(Token = "0x6000ED6")]
	[Address(RVA = "0xE3800C", Offset = "0xE3800C", VA = "0xE3800C", Slot = "13")]
	public override void StopUsing(PlayerHand hand)
	{
	}

	[Token(Token = "0x6000ED7")]
	[Address(RVA = "0xE38044", Offset = "0xE38044", VA = "0xE38044")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x98BE5C", Offset = "0x98BE5C")]
	private IEnumerator StopFishingAfterDelay()
	{
		return null;
	}

	[Token(Token = "0x6000ED8")]
	[Address(RVA = "0xE380EC", Offset = "0xE380EC", VA = "0xE380EC", Slot = "16")]
	public override float GetDelayBeforeRelease()
	{
		return default(float);
	}

	[Token(Token = "0x6000ED9")]
	[Address(RVA = "0xE380F4", Offset = "0xE380F4", VA = "0xE380F4", Slot = "17")]
	public override void SetToolUpgradeLevel(int upgradeLevel)
	{
	}

	[Token(Token = "0x6000EDA")]
	[Address(RVA = "0xE38190", Offset = "0xE38190", VA = "0xE38190")]
	private void UpdateBobberVisuals(int upgradeLevel)
	{
	}

	[Token(Token = "0x6000EDB")]
	[Address(RVA = "0xE38298", Offset = "0xE38298", VA = "0xE38298")]
	private void UpdateCrankVisuals(int upgradeLevel)
	{
	}

	[Token(Token = "0x6000EDC")]
	[Address(RVA = "0xE383C8", Offset = "0xE383C8", VA = "0xE383C8")]
	public Tool_FishingRod()
	{
	}
}
[Token(Token = "0x2000271")]
public class Tool_Hoe : Tool_Base, ITool, IInitializable
{
	[Token(Token = "0x4000EE8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public ParticleSystem diggingEffect;

	[Token(Token = "0x4000EE9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public NeatAudioPlayer digSound;

	[Token(Token = "0x4000EEA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private float digCooldownLeft;

	[Token(Token = "0x4000EEB")]
	private const float DIGGING_SPEED_REQUIRED = 1f;

	[Token(Token = "0x4000EEC")]
	private const float DIG_COOLDOWN = 0.5f;

	[Token(Token = "0x4000EED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private Quaternion diggingEffectRotation;

	[Token(Token = "0x4000EEE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private RaycastHit hitInfo;

	[Token(Token = "0x4000EEF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private Vector3 lastDigPos;

	[Token(Token = "0x4000EF0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private float tillRadius;

	[Token(Token = "0x4000EF1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private TillEvent tillEvent;

	[Token(Token = "0x4000EF2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private Collider[] cols;

	[Token(Token = "0x6000EEB")]
	[Address(RVA = "0xE38A88", Offset = "0xE38A88", VA = "0xE38A88", Slot = "19")]
	public ToolType GetToolType()
	{
		return default(ToolType);
	}

	[Token(Token = "0x6000EEC")]
	[Address(RVA = "0xE38A90", Offset = "0xE38A90", VA = "0xE38A90", Slot = "21")]
	public void Initialize()
	{
	}

	[Token(Token = "0x6000EED")]
	[Address(RVA = "0xE38AF4", Offset = "0xE38AF4", VA = "0xE38AF4", Slot = "6")]
	public override void Init()
	{
	}

	[Token(Token = "0x6000EEE")]
	[Address(RVA = "0xE38BD0", Offset = "0xE38BD0", VA = "0xE38BD0")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000EEF")]
	[Address(RVA = "0xE38C18", Offset = "0xE38C18", VA = "0xE38C18")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000EF0")]
	[Address(RVA = "0xE39494", Offset = "0xE39494", VA = "0xE39494")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x6000EF1")]
	[Address(RVA = "0xE39158", Offset = "0xE39158", VA = "0xE39158")]
	private bool TryToTillAtPosition(Vector3 pos)
	{
		return default(bool);
	}

	[Token(Token = "0x6000EF2")]
	[Address(RVA = "0xE392CC", Offset = "0xE392CC", VA = "0xE392CC")]
	private void StartDig(Vector3 position)
	{
	}

	[Token(Token = "0x6000EF3")]
	[Address(RVA = "0xE394F4", Offset = "0xE394F4", VA = "0xE394F4", Slot = "4")]
	public override ComponentState CreateState()
	{
		return null;
	}

	[Token(Token = "0x6000EF4")]
	[Address(RVA = "0xE39550", Offset = "0xE39550", VA = "0xE39550")]
	public Tool_Hoe()
	{
	}
}
[Token(Token = "0x2000272")]
public class Tool_Plantable : Tool_Base, ITool
{
	[Token(Token = "0x4000EF3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private GameObject targetMarkerTEMP;

	[Token(Token = "0x4000EF4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Material mat;

	[Token(Token = "0x4000EF5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private NeatAudioPlayer seedSoundPlayer;

	[Token(Token = "0x4000EF6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private bool hasValidPlantPos;

	[Token(Token = "0x4000EF7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private RaycastHit hitInfo;

	[Token(Token = "0x4000EF8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[SerializeField]
	private Vector3 plantPos;

	[Token(Token = "0x4000EF9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	private float radius;

	[Token(Token = "0x4000EFA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private bool initialized;

	[Token(Token = "0x4000EFB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private readonly int PICK;

	[Token(Token = "0x6000EF5")]
	[Address(RVA = "0xE39608", Offset = "0xE39608", VA = "0xE39608", Slot = "19")]
	public ToolType GetToolType()
	{
		return default(ToolType);
	}

	[Token(Token = "0x6000EF6")]
	[Address(RVA = "0xE39610", Offset = "0xE39610", VA = "0xE39610", Slot = "6")]
	public override void Init()
	{
	}

	[Token(Token = "0x6000EF7")]
	[Address(RVA = "0xE39768", Offset = "0xE39768", VA = "0xE39768")]
	private void Update()
	{
	}

	[Token(Token = "0x6000EF8")]
	[Address(RVA = "0xE3993C", Offset = "0xE3993C", VA = "0xE3993C")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000EF9")]
	[Address(RVA = "0xE39AC8", Offset = "0xE39AC8", VA = "0xE39AC8", Slot = "10")]
	internal override void OnLetGo()
	{
	}

	[Token(Token = "0x6000EFA")]
	[Address(RVA = "0xE39950", Offset = "0xE39950", VA = "0xE39950")]
	private void TryTargetSoil()
	{
	}

	[Token(Token = "0x6000EFB")]
	[Address(RVA = "0xE39BB4", Offset = "0xE39BB4", VA = "0xE39BB4")]
	private void AnimateSeedDrop()
	{
	}

	[Token(Token = "0x6000EFC")]
	[Address(RVA = "0xE39AD4", Offset = "0xE39AD4", VA = "0xE39AD4")]
	private void EnableTargetMarker(bool enable)
	{
	}

	[Token(Token = "0x6000EFD")]
	[Address(RVA = "0xE39778", Offset = "0xE39778", VA = "0xE39778")]
	private void UpdateTargetMarker()
	{
	}

	[Token(Token = "0x6000EFE")]
	[Address(RVA = "0xE39D0C", Offset = "0xE39D0C", VA = "0xE39D0C", Slot = "4")]
	public override ComponentState CreateState()
	{
		return null;
	}

	[Token(Token = "0x6000EFF")]
	[Address(RVA = "0xE39D68", Offset = "0xE39D68", VA = "0xE39D68")]
	public Tool_Plantable()
	{
	}
}
[Token(Token = "0x2000273")]
public class Tool_SeedBag : Tool_Base, ITool, IInitializable
{
	[Token(Token = "0x4000EFC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private IntValueContainer container;

	[Token(Token = "0x4000EFD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private PlantType plantType;

	[Token(Token = "0x4000EFE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private AssetReference plantTypeRef;

	[Token(Token = "0x4000EFF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private AssetReference PlantPrefabData;

	[Token(Token = "0x4000F00")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private GameObject openBag;

	[Token(Token = "0x4000F01")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private GameObject closedBag;

	[Token(Token = "0x4000F02")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	private Transform seedTransform;

	[Token(Token = "0x4000F03")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	private GameObject counterLabel;

	[Token(Token = "0x4000F04")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[SerializeField]
	private TextMeshPro counterText;

	[Token(Token = "0x4000F05")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[SerializeField]
	private SpriteRenderer icon;

	[Token(Token = "0x4000F06")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private float lastTimeSeedWasSpawned;

	[Token(Token = "0x4000F07")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private AssetReference seedPrefab;

	[Token(Token = "0x4000F08")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private bool bagIsOpen;

	[Token(Token = "0x4000F09")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public NeatAudioPlayer seedSoundPlayer;

	[Token(Token = "0x4000F0A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private PlayerHand hand;

	[Token(Token = "0x4000F0B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private SeedbagShakeEvent shakeEvent;

	[Token(Token = "0x4000F0C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public bool DebugCrazySprinklerMode;

	[Token(Token = "0x4000F0D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	public int SeedSpamPerFrameInCrayMode;

	[Token(Token = "0x4000F0E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[HideInInspector]
	public static int EmptySeedBagHashedName;

	[Token(Token = "0x4000F0F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private readonly int PICK;

	[Token(Token = "0x6000F00")]
	[Address(RVA = "0xE5F910", Offset = "0xE5F910", VA = "0xE5F910", Slot = "19")]
	public ToolType GetToolType()
	{
		return default(ToolType);
	}

	[Token(Token = "0x6000F01")]
	[Address(RVA = "0xE5F918", Offset = "0xE5F918", VA = "0xE5F918")]
	private bool IsUpsideDown()
	{
		return default(bool);
	}

	[Token(Token = "0x6000F02")]
	[Address(RVA = "0xE5F9E8", Offset = "0xE5F9E8", VA = "0xE5F9E8", Slot = "4")]
	public override ComponentState CreateState()
	{
		return null;
	}

	[Token(Token = "0x6000F03")]
	[Address(RVA = "0xE5FA50", Offset = "0xE5FA50", VA = "0xE5FA50", Slot = "21")]
	public void Initialize()
	{
	}

	[Token(Token = "0x6000F04")]
	[Address(RVA = "0xE6026C", Offset = "0xE6026C", VA = "0xE6026C")]
	private void OnAssetLoadComplete(AsyncOperationHandle<PlantType> handle)
	{
	}

	[Token(Token = "0x6000F05")]
	[Address(RVA = "0xE5FE90", Offset = "0xE5FE90", VA = "0xE5FE90")]
	private void UpdatePlantType(PlantType newPlantType)
	{
	}

	[Token(Token = "0x6000F06")]
	[Address(RVA = "0xE60318", Offset = "0xE60318", VA = "0xE60318")]
	private bool IsEmpty()
	{
		return default(bool);
	}

	[Token(Token = "0x6000F07")]
	[Address(RVA = "0xE603B8", Offset = "0xE603B8", VA = "0xE603B8", Slot = "14")]
	public override void WhileHeld(PlayerHand hand)
	{
	}

	[Token(Token = "0x6000F08")]
	[Address(RVA = "0xE60588", Offset = "0xE60588", VA = "0xE60588")]
	private bool CanReleaseSeed()
	{
		return default(bool);
	}

	[Token(Token = "0x6000F09")]
	[Address(RVA = "0xE6093C", Offset = "0xE6093C", VA = "0xE6093C")]
	private void OnBagShakeDown(float obj)
	{
	}

	[Token(Token = "0x6000F0A")]
	[Address(RVA = "0xE605F4", Offset = "0xE605F4", VA = "0xE605F4")]
	private void ReleaseSeed()
	{
	}

	[Token(Token = "0x6000F0B")]
	[Address(RVA = "0xE60970", Offset = "0xE60970", VA = "0xE60970")]
	private void OnSeedSpawned(SpawnOperationCallbackData obj)
	{
	}

	[Token(Token = "0x6000F0C")]
	[Address(RVA = "0xE5FEB8", Offset = "0xE5FEB8", VA = "0xE5FEB8")]
	private void UpdateSprite()
	{
	}

	[Token(Token = "0x6000F0D")]
	[Address(RVA = "0xE600B4", Offset = "0xE600B4", VA = "0xE600B4")]
	private void UpdateResource(PlantPrefabData prefabData)
	{
	}

	[Token(Token = "0x6000F0E")]
	[Address(RVA = "0xE60D38", Offset = "0xE60D38", VA = "0xE60D38")]
	public bool IsOpen()
	{
		return default(bool);
	}

	[Token(Token = "0x6000F0F")]
	[Address(RVA = "0xE60D40", Offset = "0xE60D40", VA = "0xE60D40", Slot = "12")]
	public override void StartUsing(PlayerHand hand)
	{
	}

	[Token(Token = "0x6000F10")]
	[Address(RVA = "0xE60DF4", Offset = "0xE60DF4", VA = "0xE60DF4", Slot = "13")]
	public override void StopUsing(PlayerHand hand)
	{
	}

	[Token(Token = "0x6000F11")]
	[Address(RVA = "0xE60EA8", Offset = "0xE60EA8", VA = "0xE60EA8", Slot = "9")]
	internal override void OnPickUp()
	{
	}

	[Token(Token = "0x6000F12")]
	[Address(RVA = "0xE60EE8", Offset = "0xE60EE8", VA = "0xE60EE8", Slot = "10")]
	internal override void OnLetGo()
	{
	}

	[Token(Token = "0x6000F13")]
	[Address(RVA = "0xE6047C", Offset = "0xE6047C", VA = "0xE6047C")]
	private void ToggleOpenBag(bool open)
	{
	}

	[Token(Token = "0x6000F14")]
	[Address(RVA = "0xE60F14", Offset = "0xE60F14", VA = "0xE60F14")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000F15")]
	[Address(RVA = "0xE60FF0", Offset = "0xE60FF0", VA = "0xE60FF0")]
	public Tool_SeedBag()
	{
	}
}
[Serializable]
[Token(Token = "0x2000274")]
public class SeedbagState : ComponentState
{
	[Token(Token = "0x4000F10")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public AssetReferenceSerializable plantType;

	[Token(Token = "0x6000F17")]
	[Address(RVA = "0xCC476C", Offset = "0xCC476C", VA = "0xCC476C")]
	public SeedbagState(AssetReference assetReference)
	{
	}
}
[Token(Token = "0x2000275")]
public class Tool_Sickle : Tool_Base, ITool
{
	[Token(Token = "0x6000F18")]
	[Address(RVA = "0xE610B0", Offset = "0xE610B0", VA = "0xE610B0", Slot = "19")]
	public ToolType GetToolType()
	{
		return default(ToolType);
	}

	[Token(Token = "0x6000F19")]
	[Address(RVA = "0xE610B8", Offset = "0xE610B8", VA = "0xE610B8")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000F1A")]
	[Address(RVA = "0xE6154C", Offset = "0xE6154C", VA = "0xE6154C", Slot = "4")]
	public override ComponentState CreateState()
	{
		return null;
	}

	[Token(Token = "0x6000F1B")]
	[Address(RVA = "0xE615A8", Offset = "0xE615A8", VA = "0xE615A8")]
	public Tool_Sickle()
	{
	}
}
[Token(Token = "0x2000276")]
public class Tool_Wallet : Tool_Base, ITool, IInitializable, IGloveBlobReactable
{
	[Token(Token = "0x2000277")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9724E8", Offset = "0x9724E8")]
	private sealed class <WalletInfusion>d__80 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000F57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000F58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000F59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Tool_Wallet <>4__this;

		[Token(Token = "0x4000F5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <currentInfusionTime>5__2;

		[Token(Token = "0x4000F5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Transform <walletMainTransform>5__3;

		[Token(Token = "0x17000189")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000F49")]
			[Address(RVA = "0xE647D0", Offset = "0xE647D0", VA = "0xE647D0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700018A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000F4B")]
			[Address(RVA = "0xE64838", Offset = "0xE64838", VA = "0xE64838", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000F46")]
		[Address(RVA = "0xE63540", Offset = "0xE63540", VA = "0xE63540")]
		[DebuggerHidden]
		public <WalletInfusion>d__80(int <>1__state)
		{
		}

		[Token(Token = "0x6000F47")]
		[Address(RVA = "0xE6454C", Offset = "0xE6454C", VA = "0xE6454C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000F48")]
		[Address(RVA = "0xE64550", Offset = "0xE64550", VA = "0xE64550", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000F4A")]
		[Address(RVA = "0xE647D8", Offset = "0xE647D8", VA = "0xE647D8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000278")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9724F8", Offset = "0x9724F8")]
	private sealed class <EatRoutine>d__98 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000F5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000F5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000F5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Tool_Wallet <>4__this;

		[Token(Token = "0x4000F5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Vector3 <initialScale>5__2;

		[Token(Token = "0x4000F60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float <timeElapsed>5__3;

		[Token(Token = "0x1700018B")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000F4F")]
			[Address(RVA = "0xE642A4", Offset = "0xE642A4", VA = "0xE642A4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700018C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000F51")]
			[Address(RVA = "0xE6430C", Offset = "0xE6430C", VA = "0xE6430C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000F4C")]
		[Address(RVA = "0xE63BFC", Offset = "0xE63BFC", VA = "0xE63BFC")]
		[DebuggerHidden]
		public <EatRoutine>d__98(int <>1__state)
		{
		}

		[Token(Token = "0x6000F4D")]
		[Address(RVA = "0xE640D8", Offset = "0xE640D8", VA = "0xE640D8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000F4E")]
		[Address(RVA = "0xE640DC", Offset = "0xE640DC", VA = "0xE640DC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000F50")]
		[Address(RVA = "0xE642AC", Offset = "0xE642AC", VA = "0xE642AC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000279")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x972508", Offset = "0x972508")]
	private sealed class <OpenMouthRoutine>d__99 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000F61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000F62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000F63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Tool_Wallet <>4__this;

		[Token(Token = "0x4000F64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <timeElapsed>5__2;

		[Token(Token = "0x1700018D")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000F55")]
			[Address(RVA = "0xE644DC", Offset = "0xE644DC", VA = "0xE644DC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700018E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000F57")]
			[Address(RVA = "0xE64544", Offset = "0xE64544", VA = "0xE64544", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000F52")]
		[Address(RVA = "0xE63C28", Offset = "0xE63C28", VA = "0xE63C28")]
		[DebuggerHidden]
		public <OpenMouthRoutine>d__99(int <>1__state)
		{
		}

		[Token(Token = "0x6000F53")]
		[Address(RVA = "0xE64314", Offset = "0xE64314", VA = "0xE64314", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000F54")]
		[Address(RVA = "0xE64318", Offset = "0xE64318", VA = "0xE64318", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000F56")]
		[Address(RVA = "0xE644E4", Offset = "0xE644E4", VA = "0xE644E4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000F11")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private Stashable Stashable;

	[Token(Token = "0x4000F12")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Mesh WalletOpenMesh;

	[Token(Token = "0x4000F13")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Mesh WalletClosedMesh;

	[Token(Token = "0x4000F14")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public MeshFilter WalletMeshFilter;

	[Token(Token = "0x4000F15")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private float CurrencyInputDistance;

	[Token(Token = "0x4000F16")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private float CurrencyInputDistanceSqr;

	[Token(Token = "0x4000F17")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private float lookRotationSpeed;

	[Token(Token = "0x4000F18")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private float lookRotationSpeedModifier;

	[Token(Token = "0x4000F19")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private IEnumerator scaleAnimationRoutine;

	[Token(Token = "0x4000F1A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private bool WalletOpen;

	[Token(Token = "0x4000F1B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private int StoredCurrency;

	[Token(Token = "0x4000F1C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private CurrencyHolder TrackedCurrencyHolder;

	[Token(Token = "0x4000F1D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private bool InMerchantWalletArea;

	[Token(Token = "0x4000F1E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private MerchantBoat WalletAreaMerchantBoat;

	[Token(Token = "0x4000F1F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public float MoneyPourAngle;

	[Token(Token = "0x4000F20")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	public float MaxWalletPourFracPerSecond;

	[Token(Token = "0x4000F21")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private bool HaveBegunPouring;

	[Token(Token = "0x4000F22")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	private int PourInitialWalletAmount;

	[Token(Token = "0x4000F23")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public ParticleSystem MoneyPourParticles;

	[Token(Token = "0x4000F24")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public float MaxParticleSpawnRate;

	[Token(Token = "0x4000F25")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	public bool PourParticleSystemActive;

	[Token(Token = "0x4000F26")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public GameObject CurrencyDisplayObject;

	[Token(Token = "0x4000F27")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public TextMeshPro CurrencyLabel;

	[Token(Token = "0x4000F28")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	[SerializeField]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x979FA8", Offset = "0x979FA8")]
	private NeatAudioCue WalletOpenCue;

	[Token(Token = "0x4000F29")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	[SerializeField]
	private NeatAudioCue WalletCloseCue;

	[Token(Token = "0x4000F2A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	[SerializeField]
	private NeatAudioCue WalletFeedCue;

	[Token(Token = "0x4000F2B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	[SerializeField]
	private NeatAudioCue WalletFirstPickupCue;

	[Token(Token = "0x4000F2C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	[SerializeField]
	private NeatAudioPlayer WalletAudioPlayer;

	[Token(Token = "0x4000F2D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x97A034", Offset = "0x97A034")]
	[SerializeField]
	private NeatAudioCue WalletPourCue;

	[Token(Token = "0x4000F2E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	[SerializeField]
	private NeatAudioCue WalletCoinTrayImpactCue;

	[Token(Token = "0x4000F2F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	[SerializeField]
	private NeatAudioPlayer WalletPourAudioPlayer;

	[Token(Token = "0x4000F30")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	[SerializeField]
	private NeatAudioPlayer WalletCoinTrayImpactAudioPlayer;

	[Token(Token = "0x4000F31")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private bool IsPlayingPourLoop;

	[Token(Token = "0x4000F32")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static readonly int POURSPEED;

	[Token(Token = "0x4000F33")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x121")]
	private bool IsPlayingTrayImpactLoop;

	[Token(Token = "0x4000F34")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x97A0B0", Offset = "0x97A0B0")]
	[SerializeField]
	private float eatAnimationDuration;

	[Token(Token = "0x4000F35")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x97A0FC", Offset = "0x97A0FC")]
	[SerializeField]
	private float closeMouthAtCurvePercentage;

	[Token(Token = "0x4000F36")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
	[SerializeField]
	private float eatAnimationMaxScale;

	[Token(Token = "0x4000F37")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	[SerializeField]
	private AnimationCurve eatMoneyAnimationCurveX;

	[Token(Token = "0x4000F38")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	[SerializeField]
	private AnimationCurve eatMoneyAnimationCurveY;

	[Token(Token = "0x4000F39")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	[SerializeField]
	private AnimationCurve eatMoneyAnimationCurveZ;

	[Token(Token = "0x4000F3A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	private bool isEating;

	[Token(Token = "0x4000F3B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14C")]
	[SerializeField]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x97A17C", Offset = "0x97A17C")]
	private float openMouthAnimationDuration;

	[Token(Token = "0x4000F3C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x97A1C8", Offset = "0x97A1C8")]
	[SerializeField]
	private float openMouthAtCurvePercentage;

	[Token(Token = "0x4000F3D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x154")]
	[SerializeField]
	private float openMouthAnimationMaxScale;

	[Token(Token = "0x4000F3E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	[SerializeField]
	private AnimationCurve openMouthMoneyAnimationCurveX;

	[Token(Token = "0x4000F3F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	[SerializeField]
	private AnimationCurve openMouthMoneyAnimationCurveY;

	[Token(Token = "0x4000F40")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	[SerializeField]
	private AnimationCurve openMouthMoneyAnimationCurveZ;

	[Token(Token = "0x4000F41")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	private bool IsOpeningMouth;

	[Token(Token = "0x4000F42")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x174")]
	[SerializeField]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x97A248", Offset = "0x97A248")]
	private GloveBlobReactionColors BlobReactionColors;

	[Token(Token = "0x4000F43")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A4")]
	[SerializeField]
	private float InfusionDuration;

	[Token(Token = "0x4000F44")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	[SerializeField]
	private AnimationCurve InfusionScaleCurve;

	[Token(Token = "0x4000F45")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	[SerializeField]
	private AnimationCurve InfusionTranslationCurve;

	[Token(Token = "0x4000F46")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	private Coroutine WalletInfusionCoroutine;

	[Token(Token = "0x4000F47")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	private Vector3 InitialInfusionPosition;

	[Token(Token = "0x4000F48")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1CC")]
	private Vector3 InitialInfusionScale;

	[Token(Token = "0x4000F49")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
	private Transform InfusionTarget;

	[Token(Token = "0x4000F4A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
	private PlayerHand InfusionHand;

	[Token(Token = "0x4000F4B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
	private Quaternion lastSlerpRotation;

	[Token(Token = "0x4000F4C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
	private Quaternion targetRotation;

	[Token(Token = "0x4000F4D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
	private Vector3 initialLerpScale;

	[Token(Token = "0x4000F4E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x214")]
	private bool hasBeenGrabbedOnce;

	[Token(Token = "0x4000F4F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x97A2C4", Offset = "0x97A2C4")]
	[SerializeField]
	private float CurrencyLabelDisplayDuration;

	[Token(Token = "0x4000F50")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21C")]
	private float RemainingCurrencyLabelDisplayDuration;

	[Token(Token = "0x4000F51")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x220")]
	private bool ShouldShowCurrencyDisplayLabel;

	[Token(Token = "0x4000F52")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x221")]
	public bool HasBeenAddedToInventory;

	[Token(Token = "0x4000F53")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x222")]
	private bool IsInventoryDropZone;

	[Token(Token = "0x4000F54")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x224")]
	private Vector3 InitialCurrencyDisplayLocation;

	[Token(Token = "0x4000F55")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x230")]
	private float CurrencyDisplayUpVectorOffset;

	[Token(Token = "0x4000F56")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x234")]
	private float CurrencyDisplayForwardVectorOffset;

	[Token(Token = "0x6000F1C")]
	[Address(RVA = "0xE615B0", Offset = "0xE615B0", VA = "0xE615B0", Slot = "21")]
	public void Initialize()
	{
	}

	[Token(Token = "0x6000F1D")]
	[Address(RVA = "0xE618E4", Offset = "0xE618E4", VA = "0xE618E4", Slot = "6")]
	public override void Init()
	{
	}

	[Token(Token = "0x6000F1E")]
	[Address(RVA = "0xE619C0", Offset = "0xE619C0", VA = "0xE619C0", Slot = "7")]
	public override void Reset()
	{
	}

	[Token(Token = "0x6000F1F")]
	[Address(RVA = "0xE61A9C", Offset = "0xE61A9C", VA = "0xE61A9C")]
	private void OnGrabbed(Grabbable obj)
	{
	}

	[Token(Token = "0x6000F20")]
	[Address(RVA = "0xE61B54", Offset = "0xE61B54", VA = "0xE61B54")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000F21")]
	[Address(RVA = "0xE61CEC", Offset = "0xE61CEC", VA = "0xE61CEC")]
	public void Update()
	{
	}

	[Token(Token = "0x6000F22")]
	[Address(RVA = "0xE62908", Offset = "0xE62908", VA = "0xE62908")]
	public void UpdateCurrencyLabelPosition()
	{
	}

	[Token(Token = "0x6000F23")]
	[Address(RVA = "0xE62EA8", Offset = "0xE62EA8", VA = "0xE62EA8", Slot = "12")]
	public override void StartUsing(PlayerHand hand)
	{
	}

	[Token(Token = "0x6000F24")]
	[Address(RVA = "0xE631E8", Offset = "0xE631E8", VA = "0xE631E8", Slot = "13")]
	public override void StopUsing(PlayerHand hand)
	{
	}

	[Token(Token = "0x6000F25")]
	[Address(RVA = "0xE63370", Offset = "0xE63370", VA = "0xE63370")]
	public void TriggerWalletInfusion(PlayerHand handToInfuseInto)
	{
	}

	[Token(Token = "0x6000F26")]
	[Address(RVA = "0xE634C4", Offset = "0xE634C4", VA = "0xE634C4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x98BF60", Offset = "0x98BF60")]
	private IEnumerator WalletInfusion()
	{
		return null;
	}

	[Token(Token = "0x6000F27")]
	[Address(RVA = "0xE6356C", Offset = "0xE6356C", VA = "0xE6356C")]
	public void WalletInfusionFinished()
	{
	}

	[Token(Token = "0x6000F28")]
	[Address(RVA = "0xE62804", Offset = "0xE62804", VA = "0xE62804")]
	private void OpenWallet()
	{
	}

	[Token(Token = "0x6000F29")]
	[Address(RVA = "0xE61C14", Offset = "0xE61C14", VA = "0xE61C14")]
	public void CloseWallet(bool silently = false)
	{
	}

	[Token(Token = "0x6000F2A")]
	[Address(RVA = "0xE630E8", Offset = "0xE630E8", VA = "0xE630E8")]
	public void SetTrackedCurrencyHolder(CurrencyHolder newTrackedCurrencyHolder)
	{
	}

	[Token(Token = "0x6000F2B")]
	[Address(RVA = "0xE636C0", Offset = "0xE636C0", VA = "0xE636C0")]
	public bool CanBeUsedAsDropZone()
	{
		return default(bool);
	}

	[Token(Token = "0x6000F2C")]
	[Address(RVA = "0xE63798", Offset = "0xE63798", VA = "0xE63798")]
	public void AddToStoredCurrency(int currencyToAdd)
	{
	}

	[Token(Token = "0x6000F2D")]
	[Address(RVA = "0xE62864", Offset = "0xE62864", VA = "0xE62864")]
	public void RemoveFromStoredCurrency(int currencyToRemove)
	{
	}

	[Token(Token = "0x6000F2E")]
	[Address(RVA = "0xE63868", Offset = "0xE63868", VA = "0xE63868")]
	public void ResetStoredCurrency()
	{
	}

	[Token(Token = "0x6000F2F")]
	[Address(RVA = "0xE61808", Offset = "0xE61808", VA = "0xE61808")]
	public void OnStoredCurrencyUpdated()
	{
	}

	[Token(Token = "0x6000F30")]
	[Address(RVA = "0xE63904", Offset = "0xE63904", VA = "0xE63904")]
	public void SetInWalletArea(bool newInWalletArea, [Optional] MerchantBoat inWalletAreaMerchantBoat)
	{
	}

	[Token(Token = "0x6000F31")]
	[Address(RVA = "0xE63918", Offset = "0xE63918", VA = "0xE63918")]
	public void OnAddedToInventory()
	{
	}

	[Token(Token = "0x6000F32")]
	[Address(RVA = "0xE63940", Offset = "0xE63940", VA = "0xE63940")]
	public void OnRemovedFromInventory()
	{
	}

	[Token(Token = "0x6000F33")]
	[Address(RVA = "0xE63964", Offset = "0xE63964", VA = "0xE63964")]
	public void SetIsInventoryDropZone(bool newIsInventoryDropZone)
	{
	}

	[Token(Token = "0x6000F34")]
	[Address(RVA = "0xE63870", Offset = "0xE63870", VA = "0xE63870")]
	public void ShowCurrencyDisplayLabel()
	{
	}

	[Token(Token = "0x6000F35")]
	[Address(RVA = "0xE62874", Offset = "0xE62874", VA = "0xE62874")]
	public void HideCurrencyDisplayLabel()
	{
	}

	[Token(Token = "0x6000F36")]
	[Address(RVA = "0xE63B74", Offset = "0xE63B74", VA = "0xE63B74", Slot = "19")]
	public ToolType GetToolType()
	{
		return default(ToolType);
	}

	[Token(Token = "0x6000F37")]
	[Address(RVA = "0xE63B7C", Offset = "0xE63B7C", VA = "0xE63B7C", Slot = "4")]
	public override ComponentState CreateState()
	{
		return null;
	}

	[Token(Token = "0x6000F38")]
	[Address(RVA = "0xE637EC", Offset = "0xE637EC", VA = "0xE637EC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x98BFC4", Offset = "0x98BFC4")]
	private IEnumerator EatRoutine()
	{
		return null;
	}

	[Token(Token = "0x6000F39")]
	[Address(RVA = "0xE6261C", Offset = "0xE6261C", VA = "0xE6261C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x98D028", Offset = "0x98D028")]
	private IEnumerator OpenMouthRoutine()
	{
		return null;
	}

	[Token(Token = "0x6000F3A")]
	[Address(RVA = "0xE63C54", Offset = "0xE63C54", VA = "0xE63C54")]
	private bool AnimateScale(Transform t, Vector3 initialScale, float targetScale, float duration, ref float timeElapsed, AnimationCurve curveX, AnimationCurve curveY, AnimationCurve curveZ)
	{
		return default(bool);
	}

	[Token(Token = "0x6000F3B")]
	[Address(RVA = "0xE63DE4", Offset = "0xE63DE4", VA = "0xE63DE4")]
	private float GetScaleBasedOnCurve(float fraction, float initialScale, float targetScale, AnimationCurve curve)
	{
		return default(float);
	}

	[Token(Token = "0x6000F3C")]
	[Address(RVA = "0xE62698", Offset = "0xE62698", VA = "0xE62698")]
	private void StopAndPlayScaleRoutine(IEnumerator coroutine)
	{
	}

	[Token(Token = "0x6000F3D")]
	[Address(RVA = "0xE63E90", Offset = "0xE63E90", VA = "0xE63E90")]
	private void StartPlayingTrayImpactLoop()
	{
	}

	[Token(Token = "0x6000F3E")]
	[Address(RVA = "0xE63EBC", Offset = "0xE63EBC", VA = "0xE63EBC")]
	private void StopPlayingTrayImpactLoop()
	{
	}

	[Token(Token = "0x6000F3F")]
	[Address(RVA = "0xE63EE0", Offset = "0xE63EE0", VA = "0xE63EE0", Slot = "22")]
	public Grabbable GetGrabbable()
	{
		return null;
	}

	[Token(Token = "0x6000F40")]
	[Address(RVA = "0xE63EE8", Offset = "0xE63EE8", VA = "0xE63EE8", Slot = "23")]
	public GameObject GetGameObject()
	{
		return null;
	}

	[Token(Token = "0x6000F41")]
	[Address(RVA = "0xE63EF0", Offset = "0xE63EF0", VA = "0xE63EF0", Slot = "24")]
	public GloveBlobReactionColors GetReactionColors()
	{
		return default(GloveBlobReactionColors);
	}

	[Token(Token = "0x6000F42")]
	[Address(RVA = "0xE63F14", Offset = "0xE63F14", VA = "0xE63F14")]
	public void OnParticleCollision(GameObject other)
	{
	}

	[Token(Token = "0x6000F43")]
	[Address(RVA = "0xE63FBC", Offset = "0xE63FBC", VA = "0xE63FBC")]
	public void OnParticleSystemStopped()
	{
	}

	[Token(Token = "0x6000F44")]
	[Address(RVA = "0xE63FCC", Offset = "0xE63FCC", VA = "0xE63FCC")]
	public Tool_Wallet()
	{
	}
}
[Serializable]
[Token(Token = "0x200027A")]
public class Tool_WalletState : ComponentState
{
	[Token(Token = "0x4000F65")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int StoredCurrency;

	[Token(Token = "0x4000F66")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public bool hasBeenGrabbedOnce;

	[Token(Token = "0x6000F58")]
	[Address(RVA = "0xE63BF4", Offset = "0xE63BF4", VA = "0xE63BF4")]
	public Tool_WalletState()
	{
	}
}
[Token(Token = "0x200027B")]
public class UpgradeableToolState : ComponentState
{
	[Token(Token = "0x4000F67")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int Level;

	[Token(Token = "0x6000F59")]
	[Address(RVA = "0xE6C020", Offset = "0xE6C020", VA = "0xE6C020")]
	public UpgradeableToolState(int level)
	{
	}
}
[Token(Token = "0x200027C")]
public class WalletGrabbedEvent : GameEvent
{
	[Token(Token = "0x6000F5A")]
	[Address(RVA = "0xE61B4C", Offset = "0xE61B4C", VA = "0xE61B4C")]
	public WalletGrabbedEvent()
	{
	}
}
[Token(Token = "0x200027D")]
public class WalletStand : MonoBehaviour
{
	[Token(Token = "0x6000F5B")]
	[Address(RVA = "0xE6CCB8", Offset = "0xE6CCB8", VA = "0xE6CCB8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000F5C")]
	[Address(RVA = "0xE6CD60", Offset = "0xE6CD60", VA = "0xE6CD60")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000F5D")]
	[Address(RVA = "0xE6CE08", Offset = "0xE6CE08", VA = "0xE6CE08")]
	private void OnWalletGrabbedEvent(WalletGrabbedEvent e)
	{
	}

	[Token(Token = "0x6000F5E")]
	[Address(RVA = "0xE6CECC", Offset = "0xE6CECC", VA = "0xE6CECC")]
	public WalletStand()
	{
	}
}
[Token(Token = "0x200027E")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x972518", Offset = "0x972518")]
public class WaterConeEmitter : MonoBehaviour
{
	[Token(Token = "0x200027F")]
	public class Particle
	{
		[Token(Token = "0x4000F7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vector3 position;

		[Token(Token = "0x4000F7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Vector3 velocity;

		[Token(Token = "0x6000F6D")]
		[Address(RVA = "0xE6E050", Offset = "0xE6E050", VA = "0xE6E050")]
		public Particle()
		{
		}

		[Token(Token = "0x6000F6E")]
		[Address(RVA = "0xE6E1FC", Offset = "0xE6E1FC", VA = "0xE6E1FC")]
		public void StepNext(float dt, Vector3 gravity)
		{
		}
	}

	[Token(Token = "0x2000280")]
	[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0x972598", Offset = "0x972598")]
	public class ParticleRing
	{
		[Token(Token = "0x4000F7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Particle[] particles;

		[Token(Token = "0x4000F7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float lifeTime;

		[Token(Token = "0x4000F7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float spawnTime;

		[Token(Token = "0x4000F7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool active;

		[Token(Token = "0x6000F6F")]
		[Address(RVA = "0xE6D3EC", Offset = "0xE6D3EC", VA = "0xE6D3EC")]
		public ParticleRing()
		{
		}

		[Token(Token = "0x6000F70")]
		[Address(RVA = "0xE6D840", Offset = "0xE6D840", VA = "0xE6D840")]
		public void StepNext(float dt, Vector3 gravity)
		{
		}
	}

	[Token(Token = "0x2000281")]
	public struct PosDir
	{
		[Token(Token = "0x4000F80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Vector3 pos;

		[Token(Token = "0x4000F81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public Vector3 dir;
	}

	[Token(Token = "0x2000282")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9725D0", Offset = "0x9725D0")]
	private sealed class <Run>d__24 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000F82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000F83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000F84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public WaterConeEmitter <>4__this;

		[Token(Token = "0x1700018F")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000F74")]
			[Address(RVA = "0xE6E18C", Offset = "0xE6E18C", VA = "0xE6E18C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000190")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000F76")]
			[Address(RVA = "0xE6E1F4", Offset = "0xE6E1F4", VA = "0xE6E1F4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000F71")]
		[Address(RVA = "0xE6D730", Offset = "0xE6D730", VA = "0xE6D730")]
		[DebuggerHidden]
		public <Run>d__24(int <>1__state)
		{
		}

		[Token(Token = "0x6000F72")]
		[Address(RVA = "0xE6E060", Offset = "0xE6E060", VA = "0xE6E060", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000F73")]
		[Address(RVA = "0xE6E064", Offset = "0xE6E064", VA = "0xE6E064", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000F75")]
		[Address(RVA = "0xE6E194", Offset = "0xE6E194", VA = "0xE6E194", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000F68")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float emissionRadius;

	[Token(Token = "0x4000F69")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float emissionAngle;

	[Token(Token = "0x4000F6A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float emissionSpeed;

	[Token(Token = "0x4000F6B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int angularSegments;

	[Token(Token = "0x4000F6C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float ringMaxLifetime;

	[Token(Token = "0x4000F6D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float emissionInterval;

	[Token(Token = "0x4000F6E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private MeshFilter mf;

	[Token(Token = "0x4000F6F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Mesh m_dynamicMesh;

	[Token(Token = "0x4000F70")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Mesh mesh;

	[Token(Token = "0x4000F71")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private ParticleRing[] particleRings;

	[Token(Token = "0x4000F72")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private int[] triangleIndices;

	[Token(Token = "0x4000F73")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Vector3[] vertices;

	[Token(Token = "0x4000F74")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private List<Vector3> uv0;

	[Token(Token = "0x4000F75")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private int ringCount;

	[Token(Token = "0x4000F76")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private int vertsPerRing;

	[Token(Token = "0x4000F77")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private int quadCount;

	[Token(Token = "0x4000F78")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private int vertexCount;

	[Token(Token = "0x4000F79")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private int emissionRootRingIndex;

	[Token(Token = "0x6000F5F")]
	[Address(RVA = "0xE6D06C", Offset = "0xE6D06C", VA = "0xE6D06C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000F60")]
	[Address(RVA = "0xE6D33C", Offset = "0xE6D33C", VA = "0xE6D33C")]
	private void CreateMesh()
	{
	}

	[Token(Token = "0x6000F61")]
	[Address(RVA = "0xE6D680", Offset = "0xE6D680", VA = "0xE6D680")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000F62")]
	[Address(RVA = "0xE6D728", Offset = "0xE6D728", VA = "0xE6D728")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000F63")]
	[Address(RVA = "0xE6D6AC", Offset = "0xE6D6AC", VA = "0xE6D6AC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x98D17C", Offset = "0x98D17C")]
	private IEnumerator Run()
	{
		return null;
	}

	[Token(Token = "0x6000F64")]
	[Address(RVA = "0xE6D75C", Offset = "0xE6D75C", VA = "0xE6D75C")]
	public void FixedUpdate()
	{
	}

	[Token(Token = "0x6000F65")]
	[Address(RVA = "0xE6D8E4", Offset = "0xE6D8E4", VA = "0xE6D8E4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000F66")]
	[Address(RVA = "0xE6DC7C", Offset = "0xE6DC7C", VA = "0xE6DC7C")]
	public void Reset()
	{
	}

	[Token(Token = "0x6000F67")]
	[Address(RVA = "0xE6D8E8", Offset = "0xE6D8E8", VA = "0xE6D8E8")]
	public void UpdateMesh()
	{
	}

	[Token(Token = "0x6000F68")]
	[Address(RVA = "0xE6DD08", Offset = "0xE6DD08", VA = "0xE6DD08")]
	private void EmitRing()
	{
	}

	[Token(Token = "0x6000F69")]
	[Address(RVA = "0xE6DD9C", Offset = "0xE6DD9C", VA = "0xE6DD9C")]
	public void CullRings()
	{
	}

	[Token(Token = "0x6000F6A")]
	[Address(RVA = "0xE6D3FC", Offset = "0xE6D3FC", VA = "0xE6D3FC")]
	private void SetParticleRingSpawnPos(ParticleRing ring)
	{
	}

	[Token(Token = "0x6000F6B")]
	[Address(RVA = "0xE6DE14", Offset = "0xE6DE14", VA = "0xE6DE14")]
	public PosDir GetSpawnCoordinate(int index)
	{
		return default(PosDir);
	}

	[Token(Token = "0x6000F6C")]
	[Address(RVA = "0xE6E058", Offset = "0xE6E058", VA = "0xE6E058")]
	public WaterConeEmitter()
	{
	}
}
[Token(Token = "0x2000283")]
public class Waterable : MonoBehaviour
{
	[Token(Token = "0x4000F85")]
	private const string SHADER_PROP_NAME_WATER = "_WaterAmount";

	[Token(Token = "0x4000F86")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static int shaderPropIdWater;

	[Token(Token = "0x4000F87")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[HideInInspector]
	public FloatVariable_Ranged waterLevel;

	[Token(Token = "0x4000F88")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private MeshRenderer meshRenderer;

	[Token(Token = "0x4000F89")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private MaterialPropertyBlock mpb;

	[Token(Token = "0x4000F8A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private float maxWaterLevel;

	[Token(Token = "0x4000F8B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[SerializeField]
	private float defaultWaterLevel;

	[Token(Token = "0x6000F77")]
	[Address(RVA = "0xE6EAB8", Offset = "0xE6EAB8", VA = "0xE6EAB8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000F78")]
	[Address(RVA = "0xE6EBF0", Offset = "0xE6EBF0", VA = "0xE6EBF0")]
	public void ChangeWaterLevel(float amount)
	{
	}

	[Token(Token = "0x6000F79")]
	[Address(RVA = "0xE6EDA0", Offset = "0xE6EDA0", VA = "0xE6EDA0", Slot = "4")]
	public void AddWater(float amount)
	{
	}

	[Token(Token = "0x6000F7A")]
	[Address(RVA = "0xE6ECA4", Offset = "0xE6ECA4", VA = "0xE6ECA4")]
	private void UpdateWaterLevelOnMesh()
	{
	}

	[Token(Token = "0x6000F7B")]
	[Address(RVA = "0xE6EDA4", Offset = "0xE6EDA4", VA = "0xE6EDA4")]
	public Waterable()
	{
	}
}
[Token(Token = "0x2000284")]
public class ConsoleCommandButton : PushButton
{
	[Token(Token = "0x4000F8C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public string consoleCommand;

	[Token(Token = "0x4000F8D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private TextMeshPro text;

	[Token(Token = "0x6000F7D")]
	[Address(RVA = "0xC48868", Offset = "0xC48868", VA = "0xC48868", Slot = "21")]
	public override void Awake()
	{
	}

	[Token(Token = "0x6000F7E")]
	[Address(RVA = "0xC48944", Offset = "0xC48944", VA = "0xC48944", Slot = "7")]
	public override void PressButton(PlayerHand hand)
	{
	}

	[Token(Token = "0x6000F7F")]
	[Address(RVA = "0xC488EC", Offset = "0xC488EC", VA = "0xC488EC")]
	public void SetConsoleCommand(string newCommand, string description)
	{
	}

	[Token(Token = "0x6000F80")]
	[Address(RVA = "0xC4894C", Offset = "0xC4894C", VA = "0xC4894C")]
	public ConsoleCommandButton()
	{
	}
}
[Token(Token = "0x2000285")]
public class MainMenuSaveSlot : MenuButton
{
	[Token(Token = "0x4000F8E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public int index;

	[Token(Token = "0x4000F8F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x97A350", Offset = "0x97A350")]
	private SaveSlot <Slot>k__BackingField;

	[Token(Token = "0x4000F90")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	[SerializeField]
	private GameObject emptySlot;

	[Token(Token = "0x4000F91")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	[SerializeField]
	private GameObject filledSlot;

	[Token(Token = "0x4000F92")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	[SerializeField]
	private PushButton removeButton;

	[Token(Token = "0x4000F93")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	[SerializeField]
	private PushButton saveButton;

	[Token(Token = "0x4000F94")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	[SerializeField]
	private PushButton loadButton;

	[Token(Token = "0x4000F95")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	[SerializeField]
	private TextMeshPro playtimeText;

	[Token(Token = "0x4000F96")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	[SerializeField]
	private TextMeshPro lastSavedText;

	[Token(Token = "0x4000F97")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	[SerializeField]
	private TextMeshPro slotNrLabel;

	[Token(Token = "0x4000F98")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	[SerializeField]
	private Color defaultSlotNrColor;

	[Token(Token = "0x4000F99")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	[SerializeField]
	private Color selectedSlotNrColor;

	[Token(Token = "0x4000F9A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	private MenuManager menu;

	[Token(Token = "0x17000191")]
	public SaveSlot Slot
	{
		[Token(Token = "0x6000F81")]
		[Address(RVA = "0xBEFE74", Offset = "0xBEFE74", VA = "0xBEFE74")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x98D230", Offset = "0x98D230")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000F82")]
		[Address(RVA = "0xBEFE7C", Offset = "0xBEFE7C", VA = "0xBEFE7C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x98D240", Offset = "0x98D240")]
		private set
		{
		}
	}

	[Token(Token = "0x6000F83")]
	[Address(RVA = "0xBEFE84", Offset = "0xBEFE84", VA = "0xBEFE84")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000F84")]
	[Address(RVA = "0xBF00D8", Offset = "0xBF00D8", VA = "0xBF00D8")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000F85")]
	[Address(RVA = "0xBF032C", Offset = "0xBF032C", VA = "0xBF032C")]
	public void Init(MenuManager menu, SaveSlot s)
	{
	}

	[Token(Token = "0x6000F86")]
	[Address(RVA = "0xBF0364", Offset = "0xBF0364", VA = "0xBF0364")]
	public void UpdateText(bool isAllowedToSave)
	{
	}

	[Token(Token = "0x6000F87")]
	[Address(RVA = "0xBF06B0", Offset = "0xBF06B0", VA = "0xBF06B0")]
	private void OnRemovePressed(PushButton button)
	{
	}

	[Token(Token = "0x6000F88")]
	[Address(RVA = "0xBF06D0", Offset = "0xBF06D0", VA = "0xBF06D0")]
	private void OnSavePressed(PushButton button)
	{
	}

	[Token(Token = "0x6000F89")]
	[Address(RVA = "0xBF06F0", Offset = "0xBF06F0", VA = "0xBF06F0")]
	private void OnLoadPressed(PushButton button)
	{
	}

	[Token(Token = "0x6000F8A")]
	[Address(RVA = "0xBF0710", Offset = "0xBF0710", VA = "0xBF0710")]
	public MainMenuSaveSlot()
	{
	}
}
[Token(Token = "0x2000286")]
public class MenuButton : PushButton
{
	[Token(Token = "0x4000F9B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
	public MenuActionType type;

	[Token(Token = "0x4000F9C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private MenuButtonPushedEvent pushEvent;

	[Token(Token = "0x6000F8B")]
	[Address(RVA = "0xC15968", Offset = "0xC15968", VA = "0xC15968")]
	private void Init()
	{
	}

	[Token(Token = "0x6000F8C")]
	[Address(RVA = "0xC1596C", Offset = "0xC1596C", VA = "0xC1596C")]
	public new void StartGrabbing(PlayerHand hand, Vector3 grabPositionOnItem, OrientedPoint handAttachPoint)
	{
	}

	[Token(Token = "0x6000F8D")]
	[Address(RVA = "0xC159A0", Offset = "0xC159A0", VA = "0xC159A0")]
	public MenuButton()
	{
	}
}
[Token(Token = "0x2000287")]
public class MenuManager : MonoBehaviour
{
	[Token(Token = "0x2000288")]
	public enum State
	{
		[Token(Token = "0x4000FE4")]
		Start,
		[Token(Token = "0x4000FE5")]
		ManageSlotsPage,
		[Token(Token = "0x4000FE6")]
		LoadingSlot,
		[Token(Token = "0x4000FE7")]
		SavingToSlot,
		[Token(Token = "0x4000FE8")]
		RemovingSlot,
		[Token(Token = "0x4000FE9")]
		ConfirmQuitPage,
		[Token(Token = "0x4000FEA")]
		SettingsPage,
		[Token(Token = "0x4000FEB")]
		PrivacyPage,
		[Token(Token = "0x4000FEC")]
		ConfirmQuitWithoutSavingPage,
		[Token(Token = "0x4000FED")]
		CheatsPage,
		[Token(Token = "0x4000FEE")]
		DebugCommandsPage
	}

	[Token(Token = "0x4000F9D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static MenuManager Instance;

	[Token(Token = "0x4000F9E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private State state;

	[Token(Token = "0x4000F9F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject m_menuBook;

	[Token(Token = "0x4000FA0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private PushButton m_homeButton;

	[Token(Token = "0x4000FA1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private PushButton m_recipeButton;

	[Token(Token = "0x4000FA2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private PushButton m_animalButton;

	[Token(Token = "0x4000FA3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private BookmarkHandler m_bookmarkHandler;

	[Token(Token = "0x4000FA4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private GameObject m_homePage;

	[Token(Token = "0x4000FA5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private GameObject m_recipePage;

	[Token(Token = "0x4000FA6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private GameObject m_animalPage;

	[Token(Token = "0x4000FA7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private PushButton newGameButton;

	[Token(Token = "0x4000FA8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private ToggleableObject newGameButtonVariants;

	[Token(Token = "0x4000FA9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private PushButton continueButton;

	[Token(Token = "0x4000FAA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private GameObject continuePlayingExtraInfo;

	[Token(Token = "0x4000FAB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	private GameObject incompatibleSaveWarning;

	[Token(Token = "0x4000FAC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	private GameObject incompatibleSaveWarningWhileLoading;

	[Token(Token = "0x4000FAD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[SerializeField]
	private ToggleableObject continueButtonVariants;

	[Token(Token = "0x4000FAE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[SerializeField]
	private TextMeshPro continueSaveSlotText;

	[Token(Token = "0x4000FAF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[SerializeField]
	private TextMeshPro continueLastSavedText;

	[Token(Token = "0x4000FB0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[SerializeField]
	private GameObject autoSave;

	[Token(Token = "0x4000FB1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[SerializeField]
	private GameObject lastSavedLabel;

	[Token(Token = "0x4000FB2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[SerializeField]
	private PushButton manageSlotsButton;

	[Token(Token = "0x4000FB3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	[SerializeField]
	private PushButton quitButton;

	[Token(Token = "0x4000FB4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	[SerializeField]
	private ToggleableObject quitButtonVariants;

	[Token(Token = "0x4000FB5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	[SerializeField]
	private MainMenuSaveSlot[] mainMenuSaveSlots;

	[Token(Token = "0x4000FB6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	[SerializeField]
	private GameObject slotsPage;

	[Token(Token = "0x4000FB7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	[SerializeField]
	private ToggleableObject infoMessageVariants;

	[Token(Token = "0x4000FB8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	[SerializeField]
	private PushButton confirmQuitButton;

	[Token(Token = "0x4000FB9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	[SerializeField]
	private PushButton cancelQuitButton;

	[Token(Token = "0x4000FBA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	[SerializeField]
	private GameObject confirmQuitPage;

	[Token(Token = "0x4000FBB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	[SerializeField]
	private PushButton settingsButton;

	[Token(Token = "0x4000FBC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	[SerializeField]
	private PushButton quitWithoutSavingButton;

	[Token(Token = "0x4000FBD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	[SerializeField]
	private ToggleableObject confirmQuitVariants;

	[Token(Token = "0x4000FBE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	[SerializeField]
	private GameObject mainInfoPage;

	[Token(Token = "0x4000FBF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	[SerializeField]
	private GameObject settingsPage;

	[Token(Token = "0x4000FC0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	[SerializeField]
	private GameObject privacyPage;

	[Token(Token = "0x4000FC1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	[SerializeField]
	private PushButton returnToHouseButton;

	[Token(Token = "0x4000FC2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	[SerializeField]
	private PushButton privacyButton;

	[Token(Token = "0x4000FC3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	[SerializeField]
	private PushButton confirmPrivacyButton;

	[Token(Token = "0x4000FC4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	[SerializeField]
	private PushButton abortPrivacyButton;

	[Token(Token = "0x4000FC5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	[SerializeField]
	private GameObject privacyErrorMsg;

	[Token(Token = "0x4000FC6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	[SerializeField]
	private GameObject privacyLoadingText;

	[Token(Token = "0x4000FC7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	[SerializeField]
	private GameObject privacyConfirmButtons;

	[Token(Token = "0x4000FC8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	[SerializeField]
	private TextMeshPro buildVersionText;

	[Token(Token = "0x4000FC9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	[SerializeField]
	private TextMeshPro versionText;

	[Token(Token = "0x4000FCA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	[SerializeField]
	private PushButton confirmButton;

	[Token(Token = "0x4000FCB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	[SerializeField]
	private PushButton cancelButton;

	[Token(Token = "0x4000FCC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	[SerializeField]
	private GameObject consoleCommandsPage;

	[Token(Token = "0x4000FCD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	[SerializeField]
	private GameObject cheatsPage;

	[Token(Token = "0x4000FCE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	[SerializeField]
	private GameObject debugCommandsPage;

	[Token(Token = "0x4000FCF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	[SerializeField]
	private PushButton cheatsPageButton;

	[Token(Token = "0x4000FD0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	[SerializeField]
	private PushButton debugCommandsPageButton;

	[Token(Token = "0x4000FD1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	[SerializeField]
	private GameObject consoleCommandButtonTemplate;

	[Token(Token = "0x4000FD2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	private bool didCreateConsoleCommandButtons;

	[Token(Token = "0x4000FD3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x97A730", Offset = "0x97A730")]
	[SerializeField]
	private NeatAudioPlayer menuSoundsPlayer;

	[Token(Token = "0x4000FD4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
	[SerializeField]
	private NeatAudioCue openMenuSound;

	[Token(Token = "0x4000FD5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
	[SerializeField]
	private NeatAudioCue closeMenuSound;

	[Token(Token = "0x4000FD6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
	[SerializeField]
	private NeatAudioCue flipPageSound;

	[Token(Token = "0x4000FD7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
	[SerializeField]
	private NeatAudioCue hoverSound;

	[Token(Token = "0x4000FD8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
	[SerializeField]
	private NeatAudioCue selectSound;

	[Token(Token = "0x4000FD9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
	[SerializeField]
	private NeatAudioCue saveGameSound;

	[NonSerialized]
	[Token(Token = "0x4000FDA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
	public bool isOpen;

	[Token(Token = "0x4000FDB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
	private GameObject currentOpenPage;

	[Token(Token = "0x4000FDC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
	private MainMenuSaveSlot selectedSaveSlot;

	[Token(Token = "0x4000FDD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
	private PushButton selectedMainPageButton;

	[Token(Token = "0x4000FDE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
	private Vector3 playerOffset;

	[Token(Token = "0x4000FDF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x228")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x97A7DC", Offset = "0x97A7DC")]
	private PlayerHand <HandUsingMenu>k__BackingField;

	[Token(Token = "0x4000FE0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x230")]
	private string privacyUrl;

	[Token(Token = "0x4000FE1")]
	public const float END_DEPTH = 0.8f;

	[Token(Token = "0x4000FE2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static CultureInfo EnglishCulture;

	[Token(Token = "0x17000192")]
	public PlayerHand HandUsingMenu
	{
		[Token(Token = "0x6000F8E")]
		[Address(RVA = "0xC15A1C", Offset = "0xC15A1C", VA = "0xC15A1C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x98D250", Offset = "0x98D250")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000F8F")]
		[Address(RVA = "0xC15A24", Offset = "0xC15A24", VA = "0xC15A24")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x98D260", Offset = "0x98D260")]
		private set
		{
		}
	}

	[Token(Token = "0x6000F90")]
	[Address(RVA = "0xC15A34", Offset = "0xC15A34", VA = "0xC15A34")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000F91")]
	[Address(RVA = "0xC15B1C", Offset = "0xC15B1C", VA = "0xC15B1C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000F92")]
	[Address(RVA = "0xC15CC4", Offset = "0xC15CC4", VA = "0xC15CC4")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000F93")]
	[Address(RVA = "0xC15D30", Offset = "0xC15D30", VA = "0xC15D30")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000F94")]
	[Address(RVA = "0xC165E8", Offset = "0xC165E8", VA = "0xC165E8")]
	private void HomeButtonPressed(PushButton button)
	{
	}

	[Token(Token = "0x6000F95")]
	[Address(RVA = "0xC16640", Offset = "0xC16640", VA = "0xC16640")]
	private void RecipeButtonPressed(PushButton button)
	{
	}

	[Token(Token = "0x6000F96")]
	[Address(RVA = "0xC16698", Offset = "0xC16698", VA = "0xC16698")]
	private void AnimalButtonPressed(PushButton button)
	{
	}

	[Token(Token = "0x6000F97")]
	[Address(RVA = "0xC166F0", Offset = "0xC166F0", VA = "0xC166F0")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000F98")]
	[Address(RVA = "0xC16FA8", Offset = "0xC16FA8", VA = "0xC16FA8")]
	private void NewGameButtonPressed(PushButton button)
	{
	}

	[Token(Token = "0x6000F99")]
	[Address(RVA = "0xC171AC", Offset = "0xC171AC", VA = "0xC171AC")]
	private void ContinueButtonPressed(PushButton button)
	{
	}

	[Token(Token = "0x6000F9A")]
	[Address(RVA = "0xC17720", Offset = "0xC17720", VA = "0xC17720")]
	private void OpenStartPage()
	{
	}

	[Token(Token = "0x6000F9B")]
	[Address(RVA = "0xC17DF8", Offset = "0xC17DF8", VA = "0xC17DF8")]
	private void UpdateConsoleCommands()
	{
	}

	[Token(Token = "0x6000F9C")]
	[Address(RVA = "0xC17E18", Offset = "0xC17E18", VA = "0xC17E18")]
	private void AddDebugButtonsToPage(ConsoleCommand[] commands, GameObject page)
	{
	}

	[Token(Token = "0x6000F9D")]
	[Address(RVA = "0xC1817C", Offset = "0xC1817C", VA = "0xC1817C")]
	private void SettingsButtonPressed(PushButton button)
	{
	}

	[Token(Token = "0x6000F9E")]
	[Address(RVA = "0xC183F8", Offset = "0xC183F8", VA = "0xC183F8")]
	private void OnCheatsButtonPressed(PushButton button)
	{
	}

	[Token(Token = "0x6000F9F")]
	[Address(RVA = "0xC18404", Offset = "0xC18404", VA = "0xC18404")]
	private void OnDebugCommandsButtonPressed(PushButton button)
	{
	}

	[Token(Token = "0x6000FA0")]
	[Address(RVA = "0xC18410", Offset = "0xC18410", VA = "0xC18410")]
	private void ManageSlotsButtonPressed(PushButton button)
	{
	}

	[Token(Token = "0x6000FA1")]
	[Address(RVA = "0xC1841C", Offset = "0xC1841C", VA = "0xC1841C")]
	private void QuitButtonPressed(PushButton button)
	{
	}

	[Token(Token = "0x6000FA2")]
	[Address(RVA = "0xC1850C", Offset = "0xC1850C", VA = "0xC1850C")]
	private void QuitWithoutSavingButtonPressed(PushButton button)
	{
	}

	[Token(Token = "0x6000FA3")]
	[Address(RVA = "0xC176E4", Offset = "0xC176E4", VA = "0xC176E4")]
	private void ShowInfoMessage(bool show)
	{
	}

	[Token(Token = "0x6000FA4")]
	[Address(RVA = "0xC18188", Offset = "0xC18188", VA = "0xC18188")]
	private void OpenOrClosePage(PushButton button, GameObject page, State openState)
	{
	}

	[Token(Token = "0x6000FA5")]
	[Address(RVA = "0xC17418", Offset = "0xC17418", VA = "0xC17418")]
	private void UpdateSaveSlots()
	{
	}

	[Token(Token = "0x6000FA6")]
	[Address(RVA = "0xC18554", Offset = "0xC18554", VA = "0xC18554")]
	private void OnConfirmQuitButtonPressed(PushButton button)
	{
	}

	[Token(Token = "0x6000FA7")]
	[Address(RVA = "0xC18650", Offset = "0xC18650", VA = "0xC18650")]
	private void OnCancelQuitButtonPressed(PushButton button)
	{
	}

	[Token(Token = "0x6000FA8")]
	[Address(RVA = "0xC18654", Offset = "0xC18654", VA = "0xC18654")]
	private void ReturnToHouseButtonPressed(PushButton button)
	{
	}

	[Token(Token = "0x6000FA9")]
	[Address(RVA = "0xC1878C", Offset = "0xC1878C", VA = "0xC1878C")]
	private void ConfirmPrivacyButtonPressed(PushButton button)
	{
	}

	[Token(Token = "0x6000FAA")]
	[Address(RVA = "0xC18798", Offset = "0xC18798", VA = "0xC18798")]
	private void AbortPrivacyButtonPressed(PushButton button)
	{
	}

	[Token(Token = "0x6000FAB")]
	[Address(RVA = "0xC187A4", Offset = "0xC187A4", VA = "0xC187A4")]
	private void PrivacyButtonPressed(PushButton button)
	{
	}

	[Token(Token = "0x6000FAC")]
	[Address(RVA = "0xC188B0", Offset = "0xC188B0", VA = "0xC188B0")]
	private void FetchUrlSuccess(string msg)
	{
	}

	[Token(Token = "0x6000FAD")]
	[Address(RVA = "0xC18908", Offset = "0xC18908", VA = "0xC18908")]
	private void FetchUrlFailure(string msg)
	{
	}

	[Token(Token = "0x6000FAE")]
	[Address(RVA = "0xC18960", Offset = "0xC18960", VA = "0xC18960")]
	public void OnLoadSlotPressed(MainMenuSaveSlot slotButton)
	{
	}

	[Token(Token = "0x6000FAF")]
	[Address(RVA = "0xC18BD4", Offset = "0xC18BD4", VA = "0xC18BD4")]
	public void OnRemoveSlotPressed(MainMenuSaveSlot slotButton)
	{
	}

	[Token(Token = "0x6000FB0")]
	[Address(RVA = "0xC18BDC", Offset = "0xC18BDC", VA = "0xC18BDC")]
	public void OnSaveToSlotPressed(MainMenuSaveSlot slotButton)
	{
	}

	[Token(Token = "0x6000FB1")]
	[Address(RVA = "0xC175E8", Offset = "0xC175E8", VA = "0xC175E8")]
	private void DeselectCurrentSlot()
	{
	}

	[Token(Token = "0x6000FB2")]
	[Address(RVA = "0xC18968", Offset = "0xC18968", VA = "0xC18968")]
	private void SelectSlot(MainMenuSaveSlot slotButton, State nextState)
	{
	}

	[Token(Token = "0x6000FB3")]
	[Address(RVA = "0xC18BE4", Offset = "0xC18BE4", VA = "0xC18BE4")]
	private void UpdateInfoText()
	{
	}

	[Token(Token = "0x6000FB4")]
	[Address(RVA = "0xC18EC0", Offset = "0xC18EC0", VA = "0xC18EC0")]
	private void OnCancelPressed(PushButton button)
	{
	}

	[Token(Token = "0x6000FB5")]
	[Address(RVA = "0xC18EE4", Offset = "0xC18EE4", VA = "0xC18EE4")]
	private void OnConfirmPressed(PushButton button)
	{
	}

	[Token(Token = "0x6000FB6")]
	[Address(RVA = "0xC193B8", Offset = "0xC193B8", VA = "0xC193B8")]
	private void OnPlayerTeleported(TeleportDestinationInfo destinationInfo)
	{
	}

	[Token(Token = "0x6000FB7")]
	[Address(RVA = "0xC193BC", Offset = "0xC193BC", VA = "0xC193BC")]
	public void Open(PlayerHand handUsingMenu)
	{
	}

	[Token(Token = "0x6000FB8")]
	[Address(RVA = "0xC19694", Offset = "0xC19694", VA = "0xC19694")]
	public void FollowPlayer()
	{
	}

	[Token(Token = "0x6000FB9")]
	[Address(RVA = "0xC170EC", Offset = "0xC170EC", VA = "0xC170EC")]
	public void Close()
	{
	}

	[Token(Token = "0x6000FBA")]
	[Address(RVA = "0xC19584", Offset = "0xC19584", VA = "0xC19584")]
	public Vector3 GetMenuSpawnPos()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000FBB")]
	[Address(RVA = "0xC1792C", Offset = "0xC1792C", VA = "0xC1792C")]
	private void CheckForAutosave()
	{
	}

	[Token(Token = "0x6000FBC")]
	[Address(RVA = "0xC198A4", Offset = "0xC198A4", VA = "0xC198A4")]
	private void UpdateVersionText()
	{
	}

	[Token(Token = "0x6000FBD")]
	[Address(RVA = "0xC19A28", Offset = "0xC19A28", VA = "0xC19A28")]
	public MenuManager()
	{
	}
}
[Token(Token = "0x2000289")]
public enum MenuActionType
{
	[Token(Token = "0x4000FF0")]
	Unknown,
	[Token(Token = "0x4000FF1")]
	Navigation,
	[Token(Token = "0x4000FF2")]
	Confirm,
	[Token(Token = "0x4000FF3")]
	SaveSlotSelect,
	[Token(Token = "0x4000FF4")]
	Save,
	[Token(Token = "0x4000FF5")]
	Load,
	[Token(Token = "0x4000FF6")]
	Clear,
	[Token(Token = "0x4000FF7")]
	GDPR,
	[Token(Token = "0x4000FF8")]
	ReturnToHouse,
	[Token(Token = "0x4000FF9")]
	QuitToMain,
	[Token(Token = "0x4000FFA")]
	Quit
}
[Token(Token = "0x200028A")]
public class MenuNavigationButton : MenuButton
{
	[Token(Token = "0x4000FFB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public GameObject targetPage;

	[Token(Token = "0x6000FBF")]
	[Address(RVA = "0xC19AA8", Offset = "0xC19AA8", VA = "0xC19AA8")]
	public MenuNavigationButton()
	{
	}
}
[Token(Token = "0x200028B")]
public class MenuOpenSpinner : MonoBehaviour
{
	[Token(Token = "0x4000FFC")]
	public const float OPEN_MENU_HOLD_TIME = 0.5f;

	[Token(Token = "0x4000FFD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public MeshRenderer rnd;

	[Token(Token = "0x4000FFE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private MaterialPropertyBlock mpb;

	[Token(Token = "0x4000FFF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private int propIdFill;

	[Token(Token = "0x4001000")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private MenuManager menuManager;

	[Token(Token = "0x4001001")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float openMenuHoldTimer;

	[Token(Token = "0x4001002")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float delayAfterClose;

	[Token(Token = "0x4001003")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private PlayerHand leftHand;

	[Token(Token = "0x4001004")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private PlayerHand rightHand;

	[Token(Token = "0x4001005")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool initialized;

	[Token(Token = "0x6000FC0")]
	[Address(RVA = "0xC19AAC", Offset = "0xC19AAC", VA = "0xC19AAC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000FC1")]
	[Address(RVA = "0xC19FFC", Offset = "0xC19FFC", VA = "0xC19FFC")]
	private PlayerHand IsHoldingMenuButton()
	{
		return null;
	}

	[Token(Token = "0x6000FC2")]
	[Address(RVA = "0xC1A1FC", Offset = "0xC1A1FC", VA = "0xC1A1FC")]
	private bool DidPressCloseMenuButton()
	{
		return default(bool);
	}

	[Token(Token = "0x6000FC3")]
	[Address(RVA = "0xC19DA4", Offset = "0xC19DA4", VA = "0xC19DA4")]
	public void SetProgress(float fill)
	{
	}

	[Token(Token = "0x6000FC4")]
	[Address(RVA = "0xC1A310", Offset = "0xC1A310", VA = "0xC1A310")]
	public MenuOpenSpinner()
	{
	}
}
[Token(Token = "0x200028C")]
public class WaypointNavigationScript : MonoBehaviour
{
	[Token(Token = "0x4001006")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public UnityEvent OnReachedDestination;

	[Token(Token = "0x4001007")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public UnityEvent OnReachedWaypoint;

	[Token(Token = "0x4001008")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform[] waypoints;

	[Token(Token = "0x4001009")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform carryPosition;

	[Token(Token = "0x400100A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool isActivated;

	[Token(Token = "0x400100B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Transform currentWaypoint;

	[Token(Token = "0x400100C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private NavMeshAgent navAgent;

	[Token(Token = "0x400100D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Animator animator;

	[Token(Token = "0x400100E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private int i;

	[Token(Token = "0x400100F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private bool variableSet;

	[Token(Token = "0x17000193")]
	public float CurrentSpeedNormalized
	{
		[Token(Token = "0x6000FC5")]
		[Address(RVA = "0xE6EE10", Offset = "0xE6EE10", VA = "0xE6EE10")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x6000FC6")]
	[Address(RVA = "0xE6EE84", Offset = "0xE6EE84", VA = "0xE6EE84")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000FC7")]
	[Address(RVA = "0xE6EF08", Offset = "0xE6EF08", VA = "0xE6EF08")]
	private void Update()
	{
	}

	[Token(Token = "0x6000FC8")]
	[Address(RVA = "0xE6F268", Offset = "0xE6F268", VA = "0xE6F268")]
	public int GetCurrentWaypointNumber()
	{
		return default(int);
	}

	[Token(Token = "0x6000FC9")]
	[Address(RVA = "0xE6F270", Offset = "0xE6F270", VA = "0xE6F270")]
	public void SetIsActivated(bool value)
	{
	}

	[Token(Token = "0x6000FCA")]
	[Address(RVA = "0xE6F27C", Offset = "0xE6F27C", VA = "0xE6F27C")]
	public WaypointNavigationScript()
	{
	}
}
[Token(Token = "0x200028D")]
public struct TeleportDestinationInfo
{
	[Token(Token = "0x4001010")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float hitDistancePercentage;

	[Token(Token = "0x4001011")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public RaycastHit raycastHit;

	[Token(Token = "0x4001012")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool IsOverride;

	[Token(Token = "0x4001013")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public Vector3 OverridePosition;

	[Token(Token = "0x4001014")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool valid;
}
[Token(Token = "0x200028E")]
public class LocomotionArc : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x200028F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9725E0", Offset = "0x9725E0")]
	private sealed class <>c
	{
		[Token(Token = "0x400103F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4001040")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Func<Tweener, Tweener> <>9__42_0;

		[Token(Token = "0x6000FF0")]
		[Address(RVA = "0xBEAAC0", Offset = "0xBEAAC0", VA = "0xBEAAC0")]
		public <>c()
		{
		}

		[Token(Token = "0x6000FF1")]
		[Address(RVA = "0xBEAAC8", Offset = "0xBEAAC8", VA = "0xBEAAC8")]
		internal Tweener <Show>b__42_0(Tweener tw)
		{
			return null;
		}
	}

	[Token(Token = "0x2000290")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9725F0", Offset = "0x9725F0")]
	private sealed class <ActivateOverrideDestination>d__56 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001041")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001042")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001043")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionArc <>4__this;

		[Token(Token = "0x17000197")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000FF5")]
			[Address(RVA = "0xBEABDC", Offset = "0xBEABDC", VA = "0xBEABDC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000198")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000FF7")]
			[Address(RVA = "0xBEAC44", Offset = "0xBEAC44", VA = "0xBEAC44", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000FF2")]
		[Address(RVA = "0xBE9BAC", Offset = "0xBE9BAC", VA = "0xBE9BAC")]
		[DebuggerHidden]
		public <ActivateOverrideDestination>d__56(int <>1__state)
		{
		}

		[Token(Token = "0x6000FF3")]
		[Address(RVA = "0xBEAB1C", Offset = "0xBEAB1C", VA = "0xBEAB1C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000FF4")]
		[Address(RVA = "0xBEAB20", Offset = "0xBEAB20", VA = "0xBEAB20", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000FF6")]
		[Address(RVA = "0xBEABE4", Offset = "0xBEABE4", VA = "0xBEABE4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4001015")]
	private const int ARC_MESH_SEGMENT_COUNT = 64;

	[Token(Token = "0x4001016")]
	private const int ARC_MESH_ANGULAR_COUNT = 16;

	[Token(Token = "0x4001017")]
	private const int ARC_MESH_VERTS_PER_SEGMENT = 17;

	[Token(Token = "0x4001018")]
	private const int ARC_MESH_VERTEX_COUNT = 1024;

	[Token(Token = "0x4001019")]
	private const float ARC_MESH_RADIUS_NEAR = 0.01f;

	[Token(Token = "0x400101A")]
	private const float ARC_MESH_RADIUS_CENTER = 0.02f;

	[Token(Token = "0x400101B")]
	private const float ARC_MESH_RADIUS_FAR = 0.08f;

	[Token(Token = "0x400101C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static float ARC_MESH_RADIUS_MAX;

	[Token(Token = "0x400101D")]
	private const float ARC_TRACE_TIME = 4f;

	[Token(Token = "0x400101E")]
	private const float ARC_TRACE_SPEED = 8f;

	[Token(Token = "0x400101F")]
	private const float ARC_MAX_TRACE_DISTANCE = 20f;

	[Token(Token = "0x4001020")]
	private const float ARC_SMOOTH_COEF = 0.2f;

	[Token(Token = "0x4001021")]
	private const float ARC_SMOOTH_COEF_INVALID = 0.1f;

	[Token(Token = "0x4001022")]
	private const float ARC_WOBBLINESS = 0.9f;

	[Token(Token = "0x4001023")]
	private const float ARC_APPEAR_UP_FORCE = 2000f;

	[Token(Token = "0x4001024")]
	private const float ARC_ANIM_APPEAR_TIME = 0.35f;

	[Token(Token = "0x4001025")]
	private const float ARC_ANIM_DISAPPEAR_TIME = 0.2f;

	[Token(Token = "0x4001026")]
	private const float ARC_ANIM_VALIDITY_COEF = 0.15f;

	[Token(Token = "0x4001027")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Material material;

	[Token(Token = "0x4001028")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x97A7EC", Offset = "0x97A7EC")]
	private TeleportDestinationInfo <Destination>k__BackingField;

	[Token(Token = "0x4001029")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private TweenyFloat animExtend;

	[Token(Token = "0x400102A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private TweenyFloat animBubbleActivity;

	[Token(Token = "0x400102B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private float validitySmooth;

	[Token(Token = "0x400102C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private MaterialPropertyBlock mpb;

	[Token(Token = "0x400102D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private GameObject arcMeshObject;

	[Token(Token = "0x400102E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private MeshFilter mf;

	[Token(Token = "0x400102F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private MeshRenderer rnd;

	[Token(Token = "0x4001030")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private Mesh mesh;

	[Token(Token = "0x4001031")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private Mesh2D mesh2D;

	[Token(Token = "0x4001032")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[SerializeField]
	private PlayerHandAnimator m_playerHandAnimator;

	[Token(Token = "0x4001033")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private OrientedPoint[] pointsTarget;

	[Token(Token = "0x4001034")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private OrientedPoint[] pointsCurrent;

	[Token(Token = "0x4001035")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private Vector3[] pointsVelocities;

	[Token(Token = "0x4001036")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private bool HaveOverrideDestination;

	[Token(Token = "0x4001037")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD1")]
	private bool OverrideDestinationActive;

	[Token(Token = "0x4001038")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	private Vector3 OverrideDestination;

	[Token(Token = "0x4001039")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private bool initializedDataStreams;

	[Token(Token = "0x400103A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private Vector3[] verts;

	[Token(Token = "0x400103B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private Vector3[] normals;

	[Token(Token = "0x400103C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private List<Vector4> uvs;

	[Token(Token = "0x400103D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private int[] triangles;

	[Token(Token = "0x400103E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private Coroutine m_activateOverrideDestinationRoutine;

	[Token(Token = "0x17000194")]
	public TeleportDestinationInfo Destination
	{
		[Token(Token = "0x6000FCB")]
		[Address(RVA = "0xBE7EFC", Offset = "0xBE7EFC", VA = "0xBE7EFC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x98D270", Offset = "0x98D270")]
		get
		{
			return default(TeleportDestinationInfo);
		}
		[Token(Token = "0x6000FCC")]
		[Address(RVA = "0xBE7F0C", Offset = "0xBE7F0C", VA = "0xBE7F0C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x98D280", Offset = "0x98D280")]
		private set
		{
		}
	}

	[Token(Token = "0x17000195")]
	public bool VisibleInHierarchy
	{
		[Token(Token = "0x6000FD2")]
		[Address(RVA = "0xBE8FB4", Offset = "0xBE8FB4", VA = "0xBE8FB4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000196")]
	private float TimePerSegment
	{
		[Token(Token = "0x6000FDA")]
		[Address(RVA = "0xBE9A30", Offset = "0xBE9A30", VA = "0xBE9A30")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x6000FCD")]
	[Address(RVA = "0xBE7F28", Offset = "0xBE7F28", VA = "0xBE7F28")]
	public void Init()
	{
	}

	[Token(Token = "0x6000FCE")]
	[Address(RVA = "0xBE8384", Offset = "0xBE8384", VA = "0xBE8384")]
	private void Update()
	{
	}

	[Token(Token = "0x6000FCF")]
	[Address(RVA = "0xBE8F50", Offset = "0xBE8F50", VA = "0xBE8F50")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000FD0")]
	[Address(RVA = "0xBE9090", Offset = "0xBE9090", VA = "0xBE9090")]
	public void Show()
	{
	}

	[Token(Token = "0x6000FD1")]
	[Address(RVA = "0xBE92D4", Offset = "0xBE92D4", VA = "0xBE92D4")]
	public void Hide()
	{
	}

	[Token(Token = "0x6000FD3")]
	[Address(RVA = "0xBE8364", Offset = "0xBE8364", VA = "0xBE8364")]
	private void SetMeshVisibility(bool visible)
	{
	}

	[Token(Token = "0x6000FD4")]
	[Address(RVA = "0xBE8FF4", Offset = "0xBE8FF4", VA = "0xBE8FF4")]
	private void UpdateValiditySmoothing()
	{
	}

	[Token(Token = "0x6000FD5")]
	[Address(RVA = "0xBE91B0", Offset = "0xBE91B0", VA = "0xBE91B0")]
	public void Stabilize()
	{
	}

	[Token(Token = "0x6000FD6")]
	[Address(RVA = "0xBE8FD0", Offset = "0xBE8FD0", VA = "0xBE8FD0")]
	private void UpdatePathPhysics(float dt)
	{
	}

	[Token(Token = "0x6000FD7")]
	[Address(RVA = "0xBE9374", Offset = "0xBE9374", VA = "0xBE9374")]
	private void UpdatePathPositionsAndVelocity(float dt)
	{
	}

	[Token(Token = "0x6000FD8")]
	[Address(RVA = "0xBE9960", Offset = "0xBE9960", VA = "0xBE9960")]
	private float GetInfluenceCurve(float t)
	{
		return default(float);
	}

	[Token(Token = "0x6000FD9")]
	[Address(RVA = "0xBE9718", Offset = "0xBE9718", VA = "0xBE9718")]
	private void UpdatePathRotations()
	{
	}

	[Token(Token = "0x6000FDB")]
	[Address(RVA = "0xBE9A3C", Offset = "0xBE9A3C", VA = "0xBE9A3C")]
	public void SetLocationOverride(Vector3 inOverrideLocation, bool inOverrideStartsActive)
	{
	}

	[Token(Token = "0x6000FDC")]
	[Address(RVA = "0xBE9B30", Offset = "0xBE9B30", VA = "0xBE9B30")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x98D290", Offset = "0x98D290")]
	private IEnumerator ActivateOverrideDestination()
	{
		return null;
	}

	[Token(Token = "0x6000FDD")]
	[Address(RVA = "0xBE9BD8", Offset = "0xBE9BD8", VA = "0xBE9BD8")]
	public void ResetLocationOverride()
	{
	}

	[Token(Token = "0x6000FDE")]
	[Address(RVA = "0xBE9C70", Offset = "0xBE9C70", VA = "0xBE9C70")]
	public bool HaveLocationOverride()
	{
		return default(bool);
	}

	[Token(Token = "0x6000FDF")]
	[Address(RVA = "0xBE9C78", Offset = "0xBE9C78", VA = "0xBE9C78")]
	public bool IsLocationOverrideActive()
	{
		return default(bool);
	}

	[Token(Token = "0x6000FE0")]
	[Address(RVA = "0xBE843C", Offset = "0xBE843C", VA = "0xBE843C")]
	private TeleportDestinationInfo UpdateArcData()
	{
		return default(TeleportDestinationInfo);
	}

	[Token(Token = "0x6000FE1")]
	[Address(RVA = "0xBE9C98", Offset = "0xBE9C98", VA = "0xBE9C98")]
	private TeleportDestinationInfo UpdateArcData_DestinationOverride()
	{
		return default(TeleportDestinationInfo);
	}

	[Token(Token = "0x6000FE2")]
	[Address(RVA = "0xBEA2A4", Offset = "0xBEA2A4", VA = "0xBEA2A4")]
	private void InitializeDataStreamsIfNeeded()
	{
	}

	[Token(Token = "0x6000FE3")]
	[Address(RVA = "0xBE8B00", Offset = "0xBE8B00", VA = "0xBE8B00")]
	private void UpdateArcMesh()
	{
	}

	[Token(Token = "0x6000FE4")]
	[Address(RVA = "0xBEA584", Offset = "0xBEA584", VA = "0xBEA584")]
	public void ShowGoop(bool show)
	{
	}

	[Token(Token = "0x6000FE5")]
	[Address(RVA = "0xBEA638", Offset = "0xBEA638", VA = "0xBEA638")]
	public void SetGoopValidity(bool validity)
	{
	}

	[Token(Token = "0x6000FE6")]
	[Address(RVA = "0xBEA4EC", Offset = "0xBEA4EC", VA = "0xBEA4EC")]
	private float GetMeshRadius(float t)
	{
		return default(float);
	}

	[Token(Token = "0x6000FE7")]
	[Address(RVA = "0xBEA6CC", Offset = "0xBEA6CC", VA = "0xBEA6CC")]
	private float GetExpandedMeshRadius(float t)
	{
		return default(float);
	}

	[Token(Token = "0x6000FE8")]
	[Address(RVA = "0xBEA814", Offset = "0xBEA814", VA = "0xBEA814")]
	private float GetMirrorMask(float t)
	{
		return default(float);
	}

	[Token(Token = "0x6000FE9")]
	[Address(RVA = "0xBEA77C", Offset = "0xBEA77C", VA = "0xBEA77C")]
	private float GetExtentionAnimMultiplier(float t)
	{
		return default(float);
	}

	[Token(Token = "0x6000FEA")]
	[Address(RVA = "0xBEA090", Offset = "0xBEA090", VA = "0xBEA090")]
	private OrientedPoint EvalArc(Vector2 v0, Vector3 lateralDir, float t)
	{
		return default(OrientedPoint);
	}

	[Token(Token = "0x6000FEB")]
	[Address(RVA = "0xBEA828", Offset = "0xBEA828", VA = "0xBEA828")]
	public LocomotionArc()
	{
	}

	[Token(Token = "0x6000FED")]
	[Address(RVA = "0xBEA98C", Offset = "0xBEA98C", VA = "0xBEA98C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x98D2F4", Offset = "0x98D2F4")]
	private Tweener <Hide>b__43_0(Tweener tw)
	{
		return null;
	}

	[Token(Token = "0x6000FEE")]
	[Address(RVA = "0xBEAA38", Offset = "0xBEAA38", VA = "0xBEAA38")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x98D304", Offset = "0x98D304")]
	private void <Hide>b__43_1()
	{
	}
}
[Token(Token = "0x2000291")]
public class AnimationParameterReset : StateMachineBehaviour
{
	[Token(Token = "0x4001044")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string parameter;

	[Token(Token = "0x4001045")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int parameterId;

	[Token(Token = "0x6000FF8")]
	[Address(RVA = "0xF5F260", Offset = "0xF5F260", VA = "0xF5F260")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000FF9")]
	[Address(RVA = "0xF5F290", Offset = "0xF5F290", VA = "0xF5F290", Slot = "4")]
	public override void OnStateEnter(Animator animator, AnimatorStateInfo stateInfo, int layerIndex)
	{
	}

	[Token(Token = "0x6000FFA")]
	[Address(RVA = "0xF5F2C0", Offset = "0xF5F2C0", VA = "0xF5F2C0")]
	public AnimationParameterReset()
	{
	}
}
[Token(Token = "0x2000292")]
public class CurrencyHolder : SaveableComponent, IInitializable
{
	[Token(Token = "0x2000293")]
	public delegate void CurrencyHolderDelegate();

	[Token(Token = "0x2000294")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x972600", Offset = "0x972600")]
	private sealed class <MoneyBagInventoryAlert>d__24 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001056")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001057")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001058")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CurrencyHolder <>4__this;

		[Token(Token = "0x4001059")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Tool_Wallet <foundWallet>5__2;

		[Token(Token = "0x400105A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool <walletIsAddedToInventory>5__3;

		[Token(Token = "0x17000199")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001014")]
			[Address(RVA = "0xBF1A88", Offset = "0xBF1A88", VA = "0xBF1A88", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700019A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001016")]
			[Address(RVA = "0xBF1AF0", Offset = "0xBF1AF0", VA = "0xBF1AF0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001011")]
		[Address(RVA = "0xBF1764", Offset = "0xBF1764", VA = "0xBF1764")]
		[DebuggerHidden]
		public <MoneyBagInventoryAlert>d__24(int <>1__state)
		{
		}

		[Token(Token = "0x6001012")]
		[Address(RVA = "0xBF1790", Offset = "0xBF1790", VA = "0xBF1790", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001013")]
		[Address(RVA = "0xBF1794", Offset = "0xBF1794", VA = "0xBF1794", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001015")]
		[Address(RVA = "0xBF1A90", Offset = "0xBF1A90", VA = "0xBF1A90", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000295")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x972610", Offset = "0x972610")]
	private sealed class <MoveMoneyBagToMouth>d__25 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400105B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400105C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400105D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform bagTransform;

		[Token(Token = "0x400105E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public CurrencyHolder <>4__this;

		[Token(Token = "0x400105F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Vector3 <startPosition>5__2;

		[Token(Token = "0x4001060")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private Vector3 <startScale>5__3;

		[Token(Token = "0x4001061")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float <currentLerpTime>5__4;

		[Token(Token = "0x4001062")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private float <lerpProgress>5__5;

		[Token(Token = "0x1700019B")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600101A")]
			[Address(RVA = "0xBF1DE4", Offset = "0xBF1DE4", VA = "0xBF1DE4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700019C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600101C")]
			[Address(RVA = "0xBF1E4C", Offset = "0xBF1E4C", VA = "0xBF1E4C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001017")]
		[Address(RVA = "0xBF1AF8", Offset = "0xBF1AF8", VA = "0xBF1AF8")]
		[DebuggerHidden]
		public <MoveMoneyBagToMouth>d__25(int <>1__state)
		{
		}

		[Token(Token = "0x6001018")]
		[Address(RVA = "0xBF1B24", Offset = "0xBF1B24", VA = "0xBF1B24", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001019")]
		[Address(RVA = "0xBF1B28", Offset = "0xBF1B28", VA = "0xBF1B28", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600101B")]
		[Address(RVA = "0xBF1DEC", Offset = "0xBF1DEC", VA = "0xBF1DEC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4001046")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int ContainedCurrency;

	[Token(Token = "0x4001047")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Stashable CurrencyHolderStashable;

	[Token(Token = "0x4001048")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Grabbable CurrencyHolderGrabbable;

	[Token(Token = "0x4001049")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public TextMeshPro CurrencyDisplayLabel;

	[Token(Token = "0x400104A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public CurrencyHolderDelegate OnFinishedResizing;

	[Token(Token = "0x400104B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private float sizeUpLerpTime;

	[Token(Token = "0x400104C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	[SerializeField]
	private float lerpToMouthDuration;

	[Token(Token = "0x400104D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private MerchantBoat MerchantBoatOwner;

	[Token(Token = "0x400104E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private bool IsMerchantCurrencyStorage;

	[Token(Token = "0x400104F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
	private bool InWalletDropZone;

	[Token(Token = "0x4001050")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x62")]
	private bool SizeLerping;

	[Token(Token = "0x4001051")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private float currentSizeLerpTime;

	[Token(Token = "0x4001052")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Vector3 targetSize;

	[Token(Token = "0x4001053")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Tool_Wallet FeedingWallet;

	[Token(Token = "0x4001054")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private readonly Vector3 startSize;

	[Token(Token = "0x4001055")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private Coroutine MoneyBagAlertFeedback;

	[Token(Token = "0x6000FFB")]
	[Address(RVA = "0xC5794C", Offset = "0xC5794C", VA = "0xC5794C", Slot = "5")]
	public void Initialize()
	{
	}

	[Token(Token = "0x6000FFC")]
	[Address(RVA = "0xC579F4", Offset = "0xC579F4", VA = "0xC579F4")]
	public void Awake()
	{
	}

	[Token(Token = "0x6000FFD")]
	[Address(RVA = "0xC57C54", Offset = "0xC57C54", VA = "0xC57C54")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000FFE")]
	[Address(RVA = "0xC57DA0", Offset = "0xC57DA0", VA = "0xC57DA0")]
	public void OnDestroy()
	{
	}

	[Token(Token = "0x6000FFF")]
	[Address(RVA = "0xC57F20", Offset = "0xC57F20", VA = "0xC57F20")]
	private void Update()
	{
	}

	[Token(Token = "0x6001000")]
	[Address(RVA = "0xC58068", Offset = "0xC58068", VA = "0xC58068")]
	public void OnGrabbed(Grabbable inGrabbable)
	{
	}

	[Token(Token = "0x6001001")]
	[Address(RVA = "0xC582E8", Offset = "0xC582E8", VA = "0xC582E8")]
	public void OnDropped(Grabbable inGrabbable)
	{
	}

	[Token(Token = "0x6001002")]
	[Address(RVA = "0xC5826C", Offset = "0xC5826C", VA = "0xC5826C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x98D364", Offset = "0x98D364")]
	private IEnumerator MoneyBagInventoryAlert()
	{
		return null;
	}

	[Token(Token = "0x6001003")]
	[Address(RVA = "0xC58530", Offset = "0xC58530", VA = "0xC58530")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x98D3C8", Offset = "0x98D3C8")]
	private IEnumerator MoveMoneyBagToMouth(Transform bagTransform)
	{
		return null;
	}

	[Token(Token = "0x6001004")]
	[Address(RVA = "0xC585C8", Offset = "0xC585C8", VA = "0xC585C8")]
	public bool OnAddedToInventory()
	{
		return default(bool);
	}

	[Token(Token = "0x6001005")]
	[Address(RVA = "0xC58784", Offset = "0xC58784", VA = "0xC58784")]
	public void SetInWalletDropZone(bool newInWalletDropZone)
	{
	}

	[Token(Token = "0x6001006")]
	[Address(RVA = "0xC58790", Offset = "0xC58790", VA = "0xC58790")]
	public bool GetIsInWalletDropZone()
	{
		return default(bool);
	}

	[Token(Token = "0x6001007")]
	[Address(RVA = "0xC58798", Offset = "0xC58798", VA = "0xC58798")]
	public void SetMerchantBoatOwner(MerchantBoat inMerchantBoat)
	{
	}

	[Token(Token = "0x6001008")]
	[Address(RVA = "0xC579EC", Offset = "0xC579EC", VA = "0xC579EC")]
	public void SetContainedCurrency(int newContainedCurrency)
	{
	}

	[Token(Token = "0x6001009")]
	[Address(RVA = "0xC587C8", Offset = "0xC587C8", VA = "0xC587C8")]
	public void UpdateCurrencyDisplayLabel()
	{
	}

	[Token(Token = "0x600100A")]
	[Address(RVA = "0xC58884", Offset = "0xC58884", VA = "0xC58884", Slot = "4")]
	public override ComponentState CreateState()
	{
		return null;
	}

	[Token(Token = "0x600100B")]
	[Address(RVA = "0xC588EC", Offset = "0xC588EC", VA = "0xC588EC")]
	public void StartChangingSize(Vector3 sizeFrom, Vector3 sizeTo)
	{
	}

	[Token(Token = "0x600100C")]
	[Address(RVA = "0xC589EC", Offset = "0xC589EC", VA = "0xC589EC")]
	public CurrencyHolder()
	{
	}
}
[Token(Token = "0x2000296")]
public class CurrencyHolderState : ComponentState
{
	[Token(Token = "0x4001063")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int ContainedCurrency;

	[Token(Token = "0x600101D")]
	[Address(RVA = "0xBF275C", Offset = "0xBF275C", VA = "0xBF275C")]
	public CurrencyHolderState(int inContainedCurrency)
	{
	}
}
[Token(Token = "0x2000297")]
public class CurrencyHolderDispenser : MonoBehaviour
{
	[Token(Token = "0x2000298")]
	public delegate void PostCurrencyHolderSpawnedDelegate(CurrencyHolder spawnedCurrencyHolder);

	[Token(Token = "0x4001064")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AssetReference ReferenceToSpawn;

	[Token(Token = "0x4001065")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform TargetTransform;

	[Token(Token = "0x4001066")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private int PendingCurrency;

	[Token(Token = "0x4001067")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public PostCurrencyHolderSpawnedDelegate PostCurrencyHolderSpawned;

	[Token(Token = "0x600101E")]
	[Address(RVA = "0xBF20AC", Offset = "0xBF20AC", VA = "0xBF20AC")]
	public void DispenseCurrencyHolder(int currencyToDispense)
	{
	}

	[Token(Token = "0x600101F")]
	[Address(RVA = "0xBF20B4", Offset = "0xBF20B4", VA = "0xBF20B4")]
	public void DispenseCurrencyHolder(int currencyToDispense, AssetReference holderAssetReference)
	{
	}

	[Token(Token = "0x6001020")]
	[Address(RVA = "0xBF21F8", Offset = "0xBF21F8", VA = "0xBF21F8")]
	public void OnCurrencyHolderSpawned(SpawnOperationCallbackData data)
	{
	}

	[Token(Token = "0x6001021")]
	[Address(RVA = "0xBF2710", Offset = "0xBF2710", VA = "0xBF2710")]
	public CurrencyHolderDispenser()
	{
	}
}
[Token(Token = "0x2000299")]
public class MerchantAnimation : MonoBehaviour
{
	[Token(Token = "0x200029A")]
	public enum MerchantAnim
	{
		[Token(Token = "0x400106B")]
		Wave,
		[Token(Token = "0x400106C")]
		WareSelected,
		[Token(Token = "0x400106D")]
		PayFirst,
		[Token(Token = "0x400106E")]
		ChangedWare,
		[Token(Token = "0x400106F")]
		PaidForWare,
		[Token(Token = "0x4001070")]
		GrabbedWare,
		[Token(Token = "0x4001071")]
		UpgradeSelected,
		[Token(Token = "0x4001072")]
		UpgradePaid,
		[Token(Token = "0x4001073")]
		SoldItems,
		[Token(Token = "0x4001074")]
		InsufficientFunds,
		[Token(Token = "0x4001075")]
		None
	}

	[Token(Token = "0x4001068")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Animator animator;

	[Token(Token = "0x4001069")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int[] animIds;

	[Token(Token = "0x6001026")]
	[Address(RVA = "0xC1A320", Offset = "0xC1A320", VA = "0xC1A320")]
	private void PlayAnimation(MerchantAnim anim, bool resetOtherAnimations = true)
	{
	}

	[Token(Token = "0x6001027")]
	[Address(RVA = "0xC1A3F4", Offset = "0xC1A3F4", VA = "0xC1A3F4")]
	private void ResetParameters(MerchantAnim exclude = MerchantAnim.None)
	{
	}

	[Token(Token = "0x6001028")]
	[Address(RVA = "0xC1A490", Offset = "0xC1A490", VA = "0xC1A490")]
	public void TriggerWave()
	{
	}

	[Token(Token = "0x6001029")]
	[Address(RVA = "0xC1A49C", Offset = "0xC1A49C", VA = "0xC1A49C")]
	public void TriggerWareSelected()
	{
	}

	[Token(Token = "0x600102A")]
	[Address(RVA = "0xC1A4A8", Offset = "0xC1A4A8", VA = "0xC1A4A8")]
	public void TriggerShouldPayFirst()
	{
	}

	[Token(Token = "0x600102B")]
	[Address(RVA = "0xC1A4B4", Offset = "0xC1A4B4", VA = "0xC1A4B4")]
	public void TriggerWareChanged()
	{
	}

	[Token(Token = "0x600102C")]
	[Address(RVA = "0xC1A4C0", Offset = "0xC1A4C0", VA = "0xC1A4C0")]
	public void TriggerWarePaidFor()
	{
	}

	[Token(Token = "0x600102D")]
	[Address(RVA = "0xC1A4F4", Offset = "0xC1A4F4", VA = "0xC1A4F4")]
	public void SetInsufficientFundsConditions()
	{
	}

	[Token(Token = "0x600102E")]
	[Address(RVA = "0xC1A5A0", Offset = "0xC1A5A0", VA = "0xC1A5A0")]
	public void TriggerWareGrabbed(bool resetOtherAnimations = false)
	{
	}

	[Token(Token = "0x600102F")]
	[Address(RVA = "0xC1A5AC", Offset = "0xC1A5AC", VA = "0xC1A5AC")]
	public void TriggerIdle()
	{
	}

	[Token(Token = "0x6001030")]
	[Address(RVA = "0xC1A5B4", Offset = "0xC1A5B4", VA = "0xC1A5B4")]
	public void TriggerUpgradeSelected()
	{
	}

	[Token(Token = "0x6001031")]
	[Address(RVA = "0xC1A5C0", Offset = "0xC1A5C0", VA = "0xC1A5C0")]
	public void SetLayerWeight(int layer, float newWeight)
	{
	}

	[Token(Token = "0x6001032")]
	[Address(RVA = "0xC1A5DC", Offset = "0xC1A5DC", VA = "0xC1A5DC")]
	public void TriggerUpgradePaid()
	{
	}

	[Token(Token = "0x6001033")]
	[Address(RVA = "0xC1A5E8", Offset = "0xC1A5E8", VA = "0xC1A5E8")]
	public void TriggerPlayerSoldItems()
	{
	}

	[Token(Token = "0x6001034")]
	[Address(RVA = "0xC1A654", Offset = "0xC1A654", VA = "0xC1A654")]
	public void ResetSelectedItem()
	{
	}

	[Token(Token = "0x6001035")]
	[Address(RVA = "0xC1A6D4", Offset = "0xC1A6D4", VA = "0xC1A6D4")]
	public MerchantAnimation()
	{
	}
}
[Token(Token = "0x200029B")]
public class MerchantBehavior : MonoBehaviour, IInitializable
{
	[Token(Token = "0x200029C")]
	public delegate float EasingFunction(float t);

	[Token(Token = "0x200029D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x972620", Offset = "0x972620")]
	private sealed class <NightTransition>d__34 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400108F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001090")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001091")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MerchantBehavior <>4__this;

		[Token(Token = "0x4001092")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool shouldBeNight;

		[Token(Token = "0x4001093")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <weight>5__2;

		[Token(Token = "0x4001094")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float <weightDir>5__3;

		[Token(Token = "0x1700019F")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001064")]
			[Address(RVA = "0xC1DC7C", Offset = "0xC1DC7C", VA = "0xC1DC7C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001A0")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001066")]
			[Address(RVA = "0xC1DCE4", Offset = "0xC1DCE4", VA = "0xC1DCE4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001061")]
		[Address(RVA = "0xC1AE24", Offset = "0xC1AE24", VA = "0xC1AE24")]
		[DebuggerHidden]
		public <NightTransition>d__34(int <>1__state)
		{
		}

		[Token(Token = "0x6001062")]
		[Address(RVA = "0xC1DB3C", Offset = "0xC1DB3C", VA = "0xC1DB3C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001063")]
		[Address(RVA = "0xC1DB40", Offset = "0xC1DB40", VA = "0xC1DB40", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001065")]
		[Address(RVA = "0xC1DC84", Offset = "0xC1DC84", VA = "0xC1DC84", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200029E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x972630", Offset = "0x972630")]
	private sealed class <PlayerLeftBoatRoutine>d__37 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001095")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001096")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001097")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MerchantBehavior <>4__this;

		[Token(Token = "0x170001A1")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600106A")]
			[Address(RVA = "0xC1DD60", Offset = "0xC1DD60", VA = "0xC1DD60", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001A2")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600106C")]
			[Address(RVA = "0xC1DDC8", Offset = "0xC1DDC8", VA = "0xC1DDC8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001067")]
		[Address(RVA = "0xC1AFF8", Offset = "0xC1AFF8", VA = "0xC1AFF8")]
		[DebuggerHidden]
		public <PlayerLeftBoatRoutine>d__37(int <>1__state)
		{
		}

		[Token(Token = "0x6001068")]
		[Address(RVA = "0xC1DCEC", Offset = "0xC1DCEC", VA = "0xC1DCEC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001069")]
		[Address(RVA = "0xC1DCF0", Offset = "0xC1DCF0", VA = "0xC1DCF0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600106B")]
		[Address(RVA = "0xC1DD68", Offset = "0xC1DD68", VA = "0xC1DD68", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200029F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x972640", Offset = "0x972640")]
	private sealed class <MoveThingToMerchantHand>d__46 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001098")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001099")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400109A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MerchantBehavior <>4__this;

		[Token(Token = "0x400109B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Purchaseable thing;

		[Token(Token = "0x400109C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public CurrencyCost cost;

		[Token(Token = "0x400109D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private Vector3 <origScale>5__2;

		[Token(Token = "0x400109E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float <timeElapsed>5__3;

		[Token(Token = "0x400109F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private Vector3 <targetScale>5__4;

		[Token(Token = "0x170001A3")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001070")]
			[Address(RVA = "0xC1DACC", Offset = "0xC1DACC", VA = "0xC1DACC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001A4")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001072")]
			[Address(RVA = "0xC1DB34", Offset = "0xC1DB34", VA = "0xC1DB34", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600106D")]
		[Address(RVA = "0xC1BAC0", Offset = "0xC1BAC0", VA = "0xC1BAC0")]
		[DebuggerHidden]
		public <MoveThingToMerchantHand>d__46(int <>1__state)
		{
		}

		[Token(Token = "0x600106E")]
		[Address(RVA = "0xC1D3C8", Offset = "0xC1D3C8", VA = "0xC1D3C8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600106F")]
		[Address(RVA = "0xC1D3CC", Offset = "0xC1D3CC", VA = "0xC1D3CC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001071")]
		[Address(RVA = "0xC1DAD4", Offset = "0xC1DAD4", VA = "0xC1DAD4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20002A0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x972650", Offset = "0x972650")]
	private sealed class <MoveThingBackToShelf>d__55 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40010A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40010A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40010A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MerchantBehavior <>4__this;

		[Token(Token = "0x40010A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Purchaseable thing;

		[Token(Token = "0x40010A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Vector3 <bubbleScale>5__2;

		[Token(Token = "0x40010A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float <timeElapsed>5__3;

		[Token(Token = "0x40010A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Vector3 <targetScale>5__4;

		[Token(Token = "0x170001A5")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001076")]
			[Address(RVA = "0xC1D358", Offset = "0xC1D358", VA = "0xC1D358", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001A6")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001078")]
			[Address(RVA = "0xC1D3C0", Offset = "0xC1D3C0", VA = "0xC1D3C0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001073")]
		[Address(RVA = "0xC1C118", Offset = "0xC1C118", VA = "0xC1C118")]
		[DebuggerHidden]
		public <MoveThingBackToShelf>d__55(int <>1__state)
		{
		}

		[Token(Token = "0x6001074")]
		[Address(RVA = "0xC1CCD8", Offset = "0xC1CCD8", VA = "0xC1CCD8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001075")]
		[Address(RVA = "0xC1CCDC", Offset = "0xC1CCDC", VA = "0xC1CCDC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001077")]
		[Address(RVA = "0xC1D360", Offset = "0xC1D360", VA = "0xC1D360", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20002A1")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x972660", Offset = "0x972660")]
	private sealed class <AnimateSpeechBubble>d__56 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40010A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40010A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40010A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MerchantBehavior <>4__this;

		[Token(Token = "0x40010AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool show;

		[Token(Token = "0x40010AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <initialScale>5__2;

		[Token(Token = "0x40010AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float <targetScale>5__3;

		[Token(Token = "0x40010AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float <timeElapsed>5__4;

		[Token(Token = "0x170001A7")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600107C")]
			[Address(RVA = "0xC1CC68", Offset = "0xC1CC68", VA = "0xC1CC68", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001A8")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600107E")]
			[Address(RVA = "0xC1CCD0", Offset = "0xC1CCD0", VA = "0xC1CCD0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001079")]
		[Address(RVA = "0xC1C144", Offset = "0xC1C144", VA = "0xC1C144")]
		[DebuggerHidden]
		public <AnimateSpeechBubble>d__56(int <>1__state)
		{
		}

		[Token(Token = "0x600107A")]
		[Address(RVA = "0xC1C9F0", Offset = "0xC1C9F0", VA = "0xC1C9F0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600107B")]
		[Address(RVA = "0xC1C9F4", Offset = "0xC1C9F4", VA = "0xC1C9F4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600107D")]
		[Address(RVA = "0xC1CC70", Offset = "0xC1CC70", VA = "0xC1CC70", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4001076")]
	public const int NightMerchantLayerIndex = 1;

	[Token(Token = "0x4001077")]
	public const int SellReactionLayerIndex = 2;

	[Token(Token = "0x4001078")]
	private const float WeightChangeSpeed = 0.5f;

	[Token(Token = "0x4001079")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	protected MerchantAnimation anim;

	[Token(Token = "0x400107A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Transform merchantHandJoint;

	[Token(Token = "0x400107B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	protected GameObject bubble;

	[Token(Token = "0x400107C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	protected MerchantSpeechBubbleBase speechBubble;

	[Token(Token = "0x400107D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float speechBubbleFullScale;

	[Token(Token = "0x400107E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private ParticleSystem[] poofEffects;

	[Token(Token = "0x400107F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private int currentEffect;

	[Token(Token = "0x4001080")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	protected Purchaseable selectedObj;

	[Token(Token = "0x4001081")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	protected Purchaseable boughtObj;

	[Token(Token = "0x4001082")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	protected bool m_initialized;

	[Token(Token = "0x4001083")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
	protected bool isBusyMovingThingToShelf;

	[Token(Token = "0x4001084")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x62")]
	protected bool isBusyMovingThingToHand;

	[Token(Token = "0x4001085")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x63")]
	protected bool isAnimatingBubble;

	[Token(Token = "0x4001086")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	protected bool isAnimatingSpeechBubble;

	[Token(Token = "0x4001087")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x65")]
	private bool m_isNight;

	[Token(Token = "0x4001088")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	protected float timePayFirstAnimWasTriggered;

	[Token(Token = "0x4001089")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private MerchantSpeechBubble merchantSpeechBubble;

	[Token(Token = "0x400108A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	protected Transform m_bubbleContainer;

	[Token(Token = "0x400108B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private IEnumerator playerLeftBoatRoutine;

	[Token(Token = "0x400108C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	protected static float scaleDuration;

	[Token(Token = "0x400108D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	protected static float bounceDuration;

	[Token(Token = "0x400108E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	protected static float bounceFactor;

	[Token(Token = "0x1700019D")]
	public bool IsInTransaction
	{
		[Token(Token = "0x6001036")]
		[Address(RVA = "0xC1A8C0", Offset = "0xC1A8C0", VA = "0xC1A8C0")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700019E")]
	protected MerchantSpeechBubbleBase SpeechBubble
	{
		[Token(Token = "0x6001039")]
		[Address(RVA = "0xC1A98C", Offset = "0xC1A98C", VA = "0xC1A98C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6001037")]
	[Address(RVA = "0xC1A97C", Offset = "0xC1A97C", VA = "0xC1A97C")]
	public Purchaseable GetThingPlayerWants()
	{
		return null;
	}

	[Token(Token = "0x6001038")]
	[Address(RVA = "0xC1A984", Offset = "0xC1A984", VA = "0xC1A984")]
	public Purchaseable GetThingPlayerBought()
	{
		return null;
	}

	[Token(Token = "0x600103A")]
	[Address(RVA = "0xC1A994", Offset = "0xC1A994", VA = "0xC1A994")]
	private void Awake()
	{
	}

	[Token(Token = "0x600103B")]
	[Address(RVA = "0xC1AA50", Offset = "0xC1AA50", VA = "0xC1AA50")]
	protected void InitializeBubble()
	{
	}

	[Token(Token = "0x600103C")]
	[Address(RVA = "0xC1AA94", Offset = "0xC1AA94", VA = "0xC1AA94", Slot = "4")]
	public void Initialize()
	{
	}

	[Token(Token = "0x600103D")]
	[Address(RVA = "0xC1ABA0", Offset = "0xC1ABA0", VA = "0xC1ABA0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600103E")]
	[Address(RVA = "0xC1AC90", Offset = "0xC1AC90", VA = "0xC1AC90")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600103F")]
	[Address(RVA = "0xC1AB1C", Offset = "0xC1AB1C", VA = "0xC1AB1C")]
	private void OnNewHourOfDay(int hour)
	{
	}

	[Token(Token = "0x6001040")]
	[Address(RVA = "0xC1AD94", Offset = "0xC1AD94", VA = "0xC1AD94")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x98D4CC", Offset = "0x98D4CC")]
	private IEnumerator NightTransition(bool shouldBeNight)
	{
		return null;
	}

	[Token(Token = "0x6001041")]
	[Address(RVA = "0xC1AE50", Offset = "0xC1AE50", VA = "0xC1AE50")]
	public void PlayerEnteredBoat()
	{
	}

	[Token(Token = "0x6001042")]
	[Address(RVA = "0xC1AF24", Offset = "0xC1AF24", VA = "0xC1AF24")]
	public void PlayerLeftBoat()
	{
	}

	[Token(Token = "0x6001043")]
	[Address(RVA = "0xC1AF7C", Offset = "0xC1AF7C", VA = "0xC1AF7C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x98D530", Offset = "0x98D530")]
	private IEnumerator PlayerLeftBoatRoutine()
	{
		return null;
	}

	[Token(Token = "0x6001044")]
	[Address(RVA = "0xC1B024", Offset = "0xC1B024", VA = "0xC1B024", Slot = "5")]
	protected virtual void ResetOnLeftBoat()
	{
	}

	[Token(Token = "0x6001045")]
	[Address(RVA = "0xC1B2DC", Offset = "0xC1B2DC", VA = "0xC1B2DC", Slot = "6")]
	public virtual void SetInsufficientPayement()
	{
	}

	[Token(Token = "0x6001046")]
	[Address(RVA = "0xC1B2F4", Offset = "0xC1B2F4", VA = "0xC1B2F4")]
	public void CancelCurrentPurchase()
	{
	}

	[Token(Token = "0x6001047")]
	[Address(RVA = "0xC1B3E8", Offset = "0xC1B3E8", VA = "0xC1B3E8", Slot = "7")]
	public virtual void PlayerPointedAtThing(Purchaseable thing, CurrencyCost cost, bool canAffordThing)
	{
	}

	[Token(Token = "0x6001048")]
	[Address(RVA = "0xC1B8DC", Offset = "0xC1B8DC", VA = "0xC1B8DC")]
	private void TryTriggerPayFirstAnim()
	{
	}

	[Token(Token = "0x6001049")]
	[Address(RVA = "0xC1B938", Offset = "0xC1B938", VA = "0xC1B938")]
	public void OnFundsRemoved()
	{
	}

	[Token(Token = "0x600104A")]
	[Address(RVA = "0xC1B980", Offset = "0xC1B980", VA = "0xC1B980")]
	private void Update()
	{
	}

	[Token(Token = "0x600104B")]
	[Address(RVA = "0xC1B9C4", Offset = "0xC1B9C4", VA = "0xC1B9C4")]
	protected void UpdateBubblePosition()
	{
	}

	[Token(Token = "0x600104C")]
	[Address(RVA = "0xC1B83C", Offset = "0xC1B83C", VA = "0xC1B83C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x98D594", Offset = "0x98D594")]
	private IEnumerator MoveThingToMerchantHand(Purchaseable thing, CurrencyCost cost)
	{
		return null;
	}

	[Token(Token = "0x600104D")]
	[Address(RVA = "0xC1BAEC", Offset = "0xC1BAEC", VA = "0xC1BAEC")]
	protected bool AnimateFromTo(Transform t, float initialScale, float targetScale, float duration, ref float timeElapsed, EasingFunction Ease)
	{
		return default(bool);
	}

	[Token(Token = "0x600104E")]
	[Address(RVA = "0xC1BCC0", Offset = "0xC1BCC0", VA = "0xC1BCC0")]
	private bool AnimateXAndYScale(Transform t, float initialScale, float targetScale, float duration, ref float timeElapsed, AnimationCurve curveX, AnimationCurve curveY)
	{
		return default(bool);
	}

	[Token(Token = "0x600104F")]
	[Address(RVA = "0xC1BE04", Offset = "0xC1BE04", VA = "0xC1BE04")]
	private float GetScaleBasedOnCurve(float fraction, float initialScale, float targetScale, AnimationCurve curve)
	{
		return default(float);
	}

	[Token(Token = "0x6001050")]
	[Address(RVA = "0xC1BC14", Offset = "0xC1BC14", VA = "0xC1BC14")]
	private float GetScaleBasedOnEasingFunction(float fraction, float initialScale, float targetScale, EasingFunction Ease)
	{
		return default(float);
	}

	[Token(Token = "0x6001051")]
	[Address(RVA = "0xC1B244", Offset = "0xC1B244", VA = "0xC1B244")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x98D5F8", Offset = "0x98D5F8")]
	protected IEnumerator MoveThingBackToShelf(Purchaseable thing)
	{
		return null;
	}

	[Token(Token = "0x6001052")]
	[Address(RVA = "0xC1B358", Offset = "0xC1B358", VA = "0xC1B358")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x98D65C", Offset = "0x98D65C")]
	protected IEnumerator AnimateSpeechBubble(bool show)
	{
		return null;
	}

	[Token(Token = "0x6001053")]
	[Address(RVA = "0xC1C170", Offset = "0xC1C170", VA = "0xC1C170")]
	protected void PlayPoofEffect(Vector3 pos)
	{
	}

	[Token(Token = "0x6001054")]
	[Address(RVA = "0xC1C2EC", Offset = "0xC1C2EC", VA = "0xC1C2EC")]
	private ParticleSystem GetAvailableEffect()
	{
		return null;
	}

	[Token(Token = "0x6001055")]
	[Address(RVA = "0xC1C348", Offset = "0xC1C348", VA = "0xC1C348", Slot = "8")]
	public virtual void SetPaymentStatus(bool hasSufficientFunds)
	{
	}

	[Token(Token = "0x6001056")]
	[Address(RVA = "0xC1C440", Offset = "0xC1C440", VA = "0xC1C440")]
	public bool PlayerPaidForThing(Purchaseable thing)
	{
		return default(bool);
	}

	[Token(Token = "0x6001057")]
	[Address(RVA = "0xC1C5C0", Offset = "0xC1C5C0", VA = "0xC1C5C0", Slot = "9")]
	public virtual void PlayerGrabbedBoughtThing(Purchaseable thing)
	{
	}

	[Token(Token = "0x6001058")]
	[Address(RVA = "0xC1C81C", Offset = "0xC1C81C", VA = "0xC1C81C", Slot = "10")]
	public virtual void FinishAnyPendingPurchase()
	{
	}

	[Token(Token = "0x6001059")]
	[Address(RVA = "0xC1C944", Offset = "0xC1C944", VA = "0xC1C944", Slot = "11")]
	public virtual bool HasQualifiedPayment()
	{
		return default(bool);
	}

	[Token(Token = "0x600105A")]
	[Address(RVA = "0xC1C94C", Offset = "0xC1C94C", VA = "0xC1C94C")]
	public void PlayerSoldItems()
	{
	}

	[Token(Token = "0x600105B")]
	[Address(RVA = "0xC1C964", Offset = "0xC1C964", VA = "0xC1C964")]
	public MerchantBehavior()
	{
	}
}
[Token(Token = "0x20002A2")]
public class MerchantBoat : SaveableComponent, IInitializable
{
	[Token(Token = "0x40010AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static MerchantBoat Instance;

	[Token(Token = "0x40010AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	protected MerchantType m_merchantType;

	[Token(Token = "0x40010B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private PaymentBin[] bins;

	[Token(Token = "0x40010B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private MerchantWalletArea WalletArea;

	[Token(Token = "0x40010B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private StockManagerBase stockManager;

	[Token(Token = "0x40010B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private MerchantBehavior merchantBehavior;

	[Token(Token = "0x40010B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x97A8DC", Offset = "0x97A8DC")]
	private NeatAudioPlayer m_audioPlayer;

	[Token(Token = "0x40010B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private NeatAudioCue m_paymentAcceptedSound;

	[Token(Token = "0x40010B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private NeatAudioCue m_transactionCompletedSound;

	[Token(Token = "0x40010B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private SellBin MerchantSellBin;

	[Token(Token = "0x40010B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private CurrencyHolderDispenser MerchantCurrencyDispenser;

	[Token(Token = "0x40010B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private CurrencyHolder MerchantCurrencyHolder;

	[Token(Token = "0x40010BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private float playerLeftBoatTimestamp;

	[Token(Token = "0x40010BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private bool isPlayerOnBoat;

	[Token(Token = "0x40010BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x85")]
	private bool m_hasPlayedAcceptedSound;

	[Token(Token = "0x40010BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	private TextMeshPro TotalStoredValueLabel;

	[Token(Token = "0x40010BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private int TotalStoredValue;

	[Token(Token = "0x40010BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private int SellBinValue;

	[Token(Token = "0x40010C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private int WalletZoneValue;

	[Token(Token = "0x40010C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	private int InternalStoredValue;

	[Token(Token = "0x40010C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private bool HavePendingCurrencyHolderSpawn;

	[Token(Token = "0x170001A9")]
	public int CurrentWalletZoneValue
	{
		[Token(Token = "0x600107F")]
		[Address(RVA = "0xC1DE88", Offset = "0xC1DE88", VA = "0xC1DE88")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x170001AA")]
	public int CurrentSellBinValue
	{
		[Token(Token = "0x6001080")]
		[Address(RVA = "0xC1DE90", Offset = "0xC1DE90", VA = "0xC1DE90")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x170001AB")]
	public int CurrentTotalStoredValue
	{
		[Token(Token = "0x6001081")]
		[Address(RVA = "0xC1DE98", Offset = "0xC1DE98", VA = "0xC1DE98")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x170001AC")]
	public MerchantType MerchantType
	{
		[Token(Token = "0x6001082")]
		[Address(RVA = "0xC1DEA0", Offset = "0xC1DEA0", VA = "0xC1DEA0")]
		get
		{
			return default(MerchantType);
		}
	}

	[Token(Token = "0x6001083")]
	[Address(RVA = "0xC1DEA8", Offset = "0xC1DEA8", VA = "0xC1DEA8")]
	public bool GetTryRestockResult()
	{
		return default(bool);
	}

	[Token(Token = "0x6001084")]
	[Address(RVA = "0xC1E090", Offset = "0xC1E090", VA = "0xC1E090")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001085")]
	[Address(RVA = "0xC1E1D4", Offset = "0xC1E1D4", VA = "0xC1E1D4", Slot = "5")]
	public void Initialize()
	{
	}

	[Token(Token = "0x6001086")]
	[Address(RVA = "0xC1E520", Offset = "0xC1E520", VA = "0xC1E520")]
	private void Update()
	{
	}

	[Token(Token = "0x6001087")]
	[Address(RVA = "0xC1E54C", Offset = "0xC1E54C", VA = "0xC1E54C")]
	private void UpdateWantedThing()
	{
	}

	[Token(Token = "0x6001088")]
	[Address(RVA = "0xC1E76C", Offset = "0xC1E76C", VA = "0xC1E76C")]
	private void UpdateBoughtThing()
	{
	}

	[Token(Token = "0x6001089")]
	[Address(RVA = "0xC1E948", Offset = "0xC1E948", VA = "0xC1E948")]
	private void CancelCurrentPurchaseAfterDuration()
	{
	}

	[Token(Token = "0x600108A")]
	[Address(RVA = "0xC1E9A4", Offset = "0xC1E9A4", VA = "0xC1E9A4")]
	private void UpdateAmountsPaid(CurrencyCost cost)
	{
	}

	[Token(Token = "0x600108B")]
	[Address(RVA = "0xC1EA24", Offset = "0xC1EA24", VA = "0xC1EA24")]
	public void ConfirmPurchase(Grabbable grabbable)
	{
	}

	[Token(Token = "0x600108C")]
	[Address(RVA = "0xC1EDC4", Offset = "0xC1EDC4", VA = "0xC1EDC4")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x600108D")]
	[Address(RVA = "0xC1EEF0", Offset = "0xC1EEF0", VA = "0xC1EEF0")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x600108E")]
	[Address(RVA = "0xC1DEF4", Offset = "0xC1DEF4", VA = "0xC1DEF4")]
	private void CancelCurrentPurchase()
	{
	}

	[Token(Token = "0x600108F")]
	[Address(RVA = "0xC1F01C", Offset = "0xC1F01C", VA = "0xC1F01C")]
	public void PlayerSelectedItem(Purchaseable item)
	{
	}

	[Token(Token = "0x6001090")]
	[Address(RVA = "0xC1F0B4", Offset = "0xC1F0B4", VA = "0xC1F0B4")]
	private bool CanPayThePrice(ItemCost cost)
	{
		return default(bool);
	}

	[Token(Token = "0x6001091")]
	[Address(RVA = "0xC1E9D4", Offset = "0xC1E9D4", VA = "0xC1E9D4")]
	private bool CanPayThePrice(CurrencyCost cost)
	{
		return default(bool);
	}

	[Token(Token = "0x6001092")]
	[Address(RVA = "0xC1ED38", Offset = "0xC1ED38", VA = "0xC1ED38")]
	private bool HasSufficientFunds(CurrencyCost cost)
	{
		return default(bool);
	}

	[Token(Token = "0x6001093")]
	[Address(RVA = "0xC1F184", Offset = "0xC1F184", VA = "0xC1F184")]
	private bool AcceptPayment(ItemCost cost)
	{
		return default(bool);
	}

	[Token(Token = "0x6001094")]
	[Address(RVA = "0xC1ED48", Offset = "0xC1ED48", VA = "0xC1ED48")]
	private bool AcceptCurrencyPayment(int currencyCost)
	{
		return default(bool);
	}

	[Token(Token = "0x6001095")]
	[Address(RVA = "0xC1E3D4", Offset = "0xC1E3D4", VA = "0xC1E3D4")]
	public void OnCurrencyValuesUpdated(bool shouldUpdateCurrencyHolder = true)
	{
	}

	[Token(Token = "0x6001096")]
	[Address(RVA = "0xC1F4B0", Offset = "0xC1F4B0", VA = "0xC1F4B0")]
	public void SpawnCurrencyHolder(int currencyAmount)
	{
	}

	[Token(Token = "0x6001097")]
	[Address(RVA = "0xC1F2D8", Offset = "0xC1F2D8", VA = "0xC1F2D8")]
	public void DestroyCurrencyHolder()
	{
	}

	[Token(Token = "0x6001098")]
	[Address(RVA = "0xC1F55C", Offset = "0xC1F55C", VA = "0xC1F55C")]
	private void OnFinishedResizingMerchantCurrencyHolder()
	{
	}

	[Token(Token = "0x6001099")]
	[Address(RVA = "0xC1F68C", Offset = "0xC1F68C", VA = "0xC1F68C")]
	public void SellBinValueUpdated(int newSellBinValue)
	{
	}

	[Token(Token = "0x600109A")]
	[Address(RVA = "0xC1F228", Offset = "0xC1F228", VA = "0xC1F228")]
	public void ConsumeSellBinItems()
	{
	}

	[Token(Token = "0x600109B")]
	[Address(RVA = "0xC1F69C", Offset = "0xC1F69C", VA = "0xC1F69C")]
	private void OnMerchantCurrencyHolderSpawned(CurrencyHolder spawnedCurrencyHolder)
	{
	}

	[Token(Token = "0x600109C")]
	[Address(RVA = "0xC1F720", Offset = "0xC1F720", VA = "0xC1F720")]
	public void AddMoneyFromWallet(int moneyToAdd)
	{
	}

	[Token(Token = "0x600109D")]
	[Address(RVA = "0xC1F734", Offset = "0xC1F734", VA = "0xC1F734")]
	public void UpdateMoneyFromWallet(int newValue)
	{
	}

	[Token(Token = "0x600109E")]
	[Address(RVA = "0xC1F744", Offset = "0xC1F744", VA = "0xC1F744")]
	public void OnMerchantCurrencyHolderGrabbed()
	{
	}

	[Token(Token = "0x600109F")]
	[Address(RVA = "0xC1F798", Offset = "0xC1F798", VA = "0xC1F798", Slot = "4")]
	public override ComponentState CreateState()
	{
		return null;
	}

	[Token(Token = "0x60010A0")]
	[Address(RVA = "0xC1F8C0", Offset = "0xC1F8C0", VA = "0xC1F8C0")]
	public MerchantBoat()
	{
	}
}
[Token(Token = "0x20002A3")]
public class MerchantBoatState : ComponentState
{
	[Token(Token = "0x40010C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int WalletZoneValue;

	[Token(Token = "0x40010C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public int InternalStoredValue;

	[Token(Token = "0x40010C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public SaveID MerchantCurrencyHolderSaveID;

	[Token(Token = "0x60010A2")]
	[Address(RVA = "0xC1F8B8", Offset = "0xC1F8B8", VA = "0xC1F8B8")]
	public MerchantBoatState()
	{
	}
}
[Token(Token = "0x20002A4")]
public class MerchantItemCostSpeechBubble : MerchantSpeechBubbleBase
{
	[Token(Token = "0x40010C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	private TextMeshPro flowerAmount;

	[Token(Token = "0x40010C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[SerializeField]
	private TextMeshPro vegAmount;

	[Token(Token = "0x40010C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[SerializeField]
	private TextMeshPro fruitAmount;

	[Token(Token = "0x40010C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[SerializeField]
	private SpriteRenderer flowerIcon;

	[Token(Token = "0x40010CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[SerializeField]
	private SpriteRenderer vegIcon;

	[Token(Token = "0x40010CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[SerializeField]
	private SpriteRenderer fruitIcon;

	[Token(Token = "0x60010A3")]
	[Address(RVA = "0xC1F8D4", Offset = "0xC1F8D4", VA = "0xC1F8D4")]
	private void Awake()
	{
	}

	[Token(Token = "0x60010A4")]
	[Address(RVA = "0xC1F8E4", Offset = "0xC1F8E4", VA = "0xC1F8E4")]
	private void Init()
	{
	}

	[Token(Token = "0x60010A5")]
	[Address(RVA = "0xC1F924", Offset = "0xC1F924", VA = "0xC1F924")]
	public void SetPrice(ItemCost cost)
	{
	}

	[Token(Token = "0x60010A6")]
	[Address(RVA = "0xC1FA24", Offset = "0xC1FA24", VA = "0xC1FA24")]
	public void SetPricesPaid(bool flowersPaid = false, bool veggiesPaid = false, bool fruitPaid = false)
	{
	}

	[Token(Token = "0x60010A7")]
	[Address(RVA = "0xC1FC44", Offset = "0xC1FC44", VA = "0xC1FC44", Slot = "6")]
	public override void ResetPricesPaid()
	{
	}

	[Token(Token = "0x60010A8")]
	[Address(RVA = "0xC1FC54", Offset = "0xC1FC54", VA = "0xC1FC54")]
	public MerchantItemCostSpeechBubble()
	{
	}
}
[Token(Token = "0x20002A5")]
public class MerchantSpeechBubble : MerchantSpeechBubbleBase
{
	[Token(Token = "0x40010CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	private TextMeshPro currencyAmount;

	[Token(Token = "0x40010CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[SerializeField]
	private SpriteRenderer currencyIcon;

	[Token(Token = "0x60010A9")]
	[Address(RVA = "0xC204F4", Offset = "0xC204F4", VA = "0xC204F4")]
	private void Awake()
	{
	}

	[Token(Token = "0x60010AA")]
	[Address(RVA = "0xC20504", Offset = "0xC20504", VA = "0xC20504")]
	private void Init()
	{
	}

	[Token(Token = "0x60010AB")]
	[Address(RVA = "0xC1DA30", Offset = "0xC1DA30", VA = "0xC1DA30")]
	public void SetPrice(CurrencyCost cost)
	{
	}

	[Token(Token = "0x60010AC")]
	[Address(RVA = "0xC1C370", Offset = "0xC1C370", VA = "0xC1C370")]
	public void SetPricesPaid(bool currencyPaid = false)
	{
	}

	[Token(Token = "0x60010AD")]
	[Address(RVA = "0xC20544", Offset = "0xC20544", VA = "0xC20544", Slot = "6")]
	public override void ResetPricesPaid()
	{
	}

	[Token(Token = "0x60010AE")]
	[Address(RVA = "0xC2054C", Offset = "0xC2054C", VA = "0xC2054C")]
	public MerchantSpeechBubble()
	{
	}
}
[Token(Token = "0x20002A6")]
internal class MerchantWalletArea : MonoBehaviour
{
	[Token(Token = "0x40010CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<CurrencyHolder> ContainedCurrencyHolders;

	[Token(Token = "0x40010CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Tool_Wallet ContainedWallet;

	[Token(Token = "0x40010D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public MerchantBoat MerchantBoatOwner;

	[Token(Token = "0x60010AF")]
	[Address(RVA = "0xC20554", Offset = "0xC20554", VA = "0xC20554")]
	public void Awake()
	{
	}

	[Token(Token = "0x60010B0")]
	[Address(RVA = "0xC205C4", Offset = "0xC205C4", VA = "0xC205C4")]
	public void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60010B1")]
	[Address(RVA = "0xC20748", Offset = "0xC20748", VA = "0xC20748")]
	public void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x60010B2")]
	[Address(RVA = "0xC208A0", Offset = "0xC208A0", VA = "0xC208A0")]
	public MerchantWalletArea()
	{
	}
}
[Token(Token = "0x20002A7")]
public class PaymentBin : CraftingBubble
{
	[Token(Token = "0x20002A8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x972670", Offset = "0x972670")]
	private sealed class <PlayRejectSoundAfterDelay>d__15 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40010DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40010DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40010DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PaymentBin <>4__this;

		[Token(Token = "0x170001AE")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60010C3")]
			[Address(RVA = "0xBBA640", Offset = "0xBBA640", VA = "0xBBA640", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001AF")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60010C5")]
			[Address(RVA = "0xBBA6A8", Offset = "0xBBA6A8", VA = "0xBBA6A8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60010C0")]
		[Address(RVA = "0xBBA0C0", Offset = "0xBBA0C0", VA = "0xBBA0C0")]
		[DebuggerHidden]
		public <PlayRejectSoundAfterDelay>d__15(int <>1__state)
		{
		}

		[Token(Token = "0x60010C1")]
		[Address(RVA = "0xBBA57C", Offset = "0xBBA57C", VA = "0xBBA57C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60010C2")]
		[Address(RVA = "0xBBA580", Offset = "0xBBA580", VA = "0xBBA580", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60010C4")]
		[Address(RVA = "0xBBA648", Offset = "0xBBA648", VA = "0xBBA648", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20002A9")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x972680", Offset = "0x972680")]
	private sealed class <ThrowItOut>d__16 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40010DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40010DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40010DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Grabbable grabbable;

		[Token(Token = "0x40010E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public PaymentBin <>4__this;

		[Token(Token = "0x40010E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Rigidbody <rb>5__2;

		[Token(Token = "0x40010E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float <timeElapsed>5__3;

		[Token(Token = "0x40010E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float <progress>5__4;

		[Token(Token = "0x40010E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float <done>5__5;

		[Token(Token = "0x170001B0")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60010C9")]
			[Address(RVA = "0xBBA9A0", Offset = "0xBBA9A0", VA = "0xBBA9A0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001B1")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60010CB")]
			[Address(RVA = "0xBBAA08", Offset = "0xBBAA08", VA = "0xBBAA08", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60010C6")]
		[Address(RVA = "0xBBA184", Offset = "0xBBA184", VA = "0xBBA184")]
		[DebuggerHidden]
		public <ThrowItOut>d__16(int <>1__state)
		{
		}

		[Token(Token = "0x60010C7")]
		[Address(RVA = "0xBBA6B0", Offset = "0xBBA6B0", VA = "0xBBA6B0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60010C8")]
		[Address(RVA = "0xBBA6B4", Offset = "0xBBA6B4", VA = "0xBBA6B4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60010CA")]
		[Address(RVA = "0xBBA9A8", Offset = "0xBBA9A8", VA = "0xBBA9A8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40010D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	[SerializeField]
	private CurrencyType currencyType;

	[Token(Token = "0x40010D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	[SerializeField]
	private ParticleSystem acceptPaymentEffect;

	[Token(Token = "0x40010D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	[SerializeField]
	private TextMeshPro itemCountLabel;

	[Token(Token = "0x40010D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	[SerializeField]
	private BezierCurve bezier;

	[Token(Token = "0x40010D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	[SerializeField]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x97AA38", Offset = "0x97AA38")]
	private NeatAudioPlayer m_audioPlayer;

	[Token(Token = "0x40010D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	[SerializeField]
	private NeatAudioCue m_rejectedSound;

	[Token(Token = "0x40010D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	[SerializeField]
	private NeatAudioCue m_acceptedSound;

	[Token(Token = "0x40010D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private Coroutine m_playRejectSoundRoutine;

	[Token(Token = "0x40010D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	private int m_lastCount;

	[Token(Token = "0x170001AD")]
	public CurrencyType CurrencyType
	{
		[Token(Token = "0x60010B3")]
		[Address(RVA = "0xBB9DCC", Offset = "0xBB9DCC", VA = "0xBB9DCC")]
		get
		{
			return default(CurrencyType);
		}
	}

	[Token(Token = "0x60010B4")]
	[Address(RVA = "0xBB9DD4", Offset = "0xBB9DD4", VA = "0xBB9DD4")]
	private void Awake()
	{
	}

	[Token(Token = "0x60010B5")]
	[Address(RVA = "0xBB9E4C", Offset = "0xBB9E4C", VA = "0xBB9E4C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60010B6")]
	[Address(RVA = "0xBB9E54", Offset = "0xBB9E54", VA = "0xBB9E54", Slot = "5")]
	protected override bool CanBeAdded(Stashable stashable, bool canBeHeld)
	{
		return default(bool);
	}

	[Token(Token = "0x60010B7")]
	[Address(RVA = "0xBB9F3C", Offset = "0xBB9F3C", VA = "0xBB9F3C", Slot = "6")]
	protected override void HandleInvalidGrabbable(Grabbable grabbable)
	{
	}

	[Token(Token = "0x60010B8")]
	[Address(RVA = "0xBBA044", Offset = "0xBBA044", VA = "0xBBA044")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x98D850", Offset = "0x98D850")]
	private IEnumerator PlayRejectSoundAfterDelay()
	{
		return null;
	}

	[Token(Token = "0x60010B9")]
	[Address(RVA = "0xBBA0EC", Offset = "0xBBA0EC", VA = "0xBBA0EC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x98D8B4", Offset = "0x98D8B4")]
	private IEnumerator ThrowItOut(Grabbable grabbable)
	{
		return null;
	}

	[Token(Token = "0x60010BA")]
	[Address(RVA = "0xBBA1B0", Offset = "0xBBA1B0", VA = "0xBBA1B0")]
	private void UpdateItemCountLabel()
	{
	}

	[Token(Token = "0x60010BB")]
	[Address(RVA = "0xBBA2B4", Offset = "0xBBA2B4", VA = "0xBBA2B4")]
	public int NumItems()
	{
		return default(int);
	}

	[Token(Token = "0x60010BC")]
	[Address(RVA = "0xBBA304", Offset = "0xBBA304", VA = "0xBBA304")]
	public bool PricePaid(ItemCost cost)
	{
		return default(bool);
	}

	[Token(Token = "0x60010BD")]
	[Address(RVA = "0xBBA36C", Offset = "0xBBA36C", VA = "0xBBA36C")]
	public int GetCost(ItemCost cost)
	{
		return default(int);
	}

	[Token(Token = "0x60010BE")]
	[Address(RVA = "0xBBA394", Offset = "0xBBA394", VA = "0xBBA394")]
	public bool AcceptPayment(ItemCost cost)
	{
		return default(bool);
	}

	[Token(Token = "0x60010BF")]
	[Address(RVA = "0xBBA50C", Offset = "0xBBA50C", VA = "0xBBA50C")]
	public PaymentBin()
	{
	}
}
[Token(Token = "0x20002AA")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x972690", Offset = "0x972690")]
public class Purchaseable : MonoBehaviour
{
	[Token(Token = "0x40010E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Transform scaleTransform;

	[Token(Token = "0x40010E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Vector3 m_localPosition;

	[Token(Token = "0x40010E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[SerializeField]
	private Quaternion m_localRotation;

	[Token(Token = "0x40010E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[SerializeField]
	private Vector3 m_localScale;

	[Token(Token = "0x40010E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private bool m_isLargeObject;

	[Token(Token = "0x40010EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
	private bool isOnShelf;

	[Token(Token = "0x40010EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4A")]
	private bool canAfford;

	[Token(Token = "0x40010EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4B")]
	protected bool boughtAndReadyToBeGrabbed;

	[Token(Token = "0x40010ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[HideInInspector]
	[SerializeField]
	private Grabbable grabbable;

	[Token(Token = "0x40010EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[HideInInspector]
	[SerializeField]
	private Stashable stashable;

	[Token(Token = "0x40010EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private OrientedPoint placementOnShelf;

	[Token(Token = "0x40010F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private Vector3 originalScale;

	[Token(Token = "0x40010F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Color highlightColor;

	[Token(Token = "0x40010F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private SaveObjectSpawnable m_saveObjectSpawnable;

	[Token(Token = "0x40010F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public string MerchantType;

	[Token(Token = "0x170001B2")]
	public Transform ScaleTransform
	{
		[Token(Token = "0x60010CC")]
		[Address(RVA = "0xD14C38", Offset = "0xD14C38", VA = "0xD14C38")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170001B3")]
	public bool IsOnShelf
	{
		[Token(Token = "0x60010CD")]
		[Address(RVA = "0xD14C40", Offset = "0xD14C40", VA = "0xD14C40")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170001B4")]
	public bool CanAfford
	{
		[Token(Token = "0x60010CE")]
		[Address(RVA = "0xD14C48", Offset = "0xD14C48", VA = "0xD14C48")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170001B5")]
	public bool BoughtAndReadyToBeGrabbed
	{
		[Token(Token = "0x60010CF")]
		[Address(RVA = "0xD14C50", Offset = "0xD14C50", VA = "0xD14C50")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170001B6")]
	public bool IsLargeObject
	{
		[Token(Token = "0x60010D2")]
		[Address(RVA = "0xD14D2C", Offset = "0xD14D2C", VA = "0xD14D2C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170001B7")]
	public Grabbable Grabbable
	{
		[Token(Token = "0x60010D3")]
		[Address(RVA = "0xD14D34", Offset = "0xD14D34", VA = "0xD14D34")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170001B8")]
	public Stashable Stashable
	{
		[Token(Token = "0x60010D4")]
		[Address(RVA = "0xD14D3C", Offset = "0xD14D3C", VA = "0xD14D3C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170001B9")]
	public SaveObjectSpawnable SaveObjectSpawnable
	{
		[Token(Token = "0x60010D5")]
		[Address(RVA = "0xD14D44", Offset = "0xD14D44", VA = "0xD14D44")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60010D0")]
	[Address(RVA = "0xD14C58", Offset = "0xD14C58", VA = "0xD14C58")]
	public void InitOnShelf()
	{
	}

	[Token(Token = "0x60010D1")]
	[Address(RVA = "0xD14C80", Offset = "0xD14C80", VA = "0xD14C80")]
	private void Awake()
	{
	}

	[Token(Token = "0x60010D6")]
	[Address(RVA = "0xD14E8C", Offset = "0xD14E8C", VA = "0xD14E8C")]
	private void OnValidate()
	{
	}

	[Token(Token = "0x60010D7")]
	[Address(RVA = "0xD14FE0", Offset = "0xD14FE0", VA = "0xD14FE0")]
	public void StoreCurrentPlacement()
	{
	}

	[Token(Token = "0x60010D8")]
	[Address(RVA = "0xD1505C", Offset = "0xD1505C", VA = "0xD1505C")]
	public void WasPurchased()
	{
	}

	[Token(Token = "0x60010D9")]
	[Address(RVA = "0xD15094", Offset = "0xD15094", VA = "0xD15094")]
	public void InsuffecientFunds()
	{
	}

	[Token(Token = "0x60010DA")]
	[Address(RVA = "0xD1511C", Offset = "0xD1511C", VA = "0xD1511C")]
	public void GrabbedByMerchant(Transform parent)
	{
	}

	[Token(Token = "0x60010DB")]
	[Address(RVA = "0xD154EC", Offset = "0xD154EC", VA = "0xD154EC")]
	public void PutBackOnShelf()
	{
	}

	[Token(Token = "0x60010DC")]
	[Address(RVA = "0xD15694", Offset = "0xD15694", VA = "0xD15694")]
	public void PlayerStartedPointingAtUs()
	{
	}

	[Token(Token = "0x60010DD")]
	[Address(RVA = "0xD15754", Offset = "0xD15754", VA = "0xD15754")]
	public void PlayerIsPointingAtUs()
	{
	}

	[Token(Token = "0x60010DE")]
	[Address(RVA = "0xD15814", Offset = "0xD15814", VA = "0xD15814")]
	public void PlayerStoppedPointingAtUs()
	{
	}

	[Token(Token = "0x60010DF")]
	[Address(RVA = "0xD158B8", Offset = "0xD158B8", VA = "0xD158B8")]
	public void SelectedByPlayer()
	{
	}

	[Token(Token = "0x60010E0")]
	[Address(RVA = "0xD15934", Offset = "0xD15934", VA = "0xD15934")]
	public bool GetStorePlacement(out Vector3 localPosition, out Quaternion localRotation, out Vector3 localScale)
	{
		return default(bool);
	}

	[Token(Token = "0x60010E1")]
	[Address(RVA = "0xD15ADC", Offset = "0xD15ADC", VA = "0xD15ADC")]
	public AssetReference GetAssetReference()
	{
		return null;
	}

	[Token(Token = "0x60010E2")]
	[Address(RVA = "0xD15CA0", Offset = "0xD15CA0", VA = "0xD15CA0")]
	public AssetReference GetAssetReferenceInParent()
	{
		return null;
	}

	[Token(Token = "0x60010E3")]
	[Address(RVA = "0xD14D48", Offset = "0xD14D48", VA = "0xD14D48")]
	private SaveObjectSpawnable GetSaveObjectSpawnable()
	{
		return null;
	}

	[Token(Token = "0x60010E4")]
	[Address(RVA = "0xD15E0C", Offset = "0xD15E0C", VA = "0xD15E0C")]
	public OrientedPoint GetStorePlacementAsOrientedPoint()
	{
		return default(OrientedPoint);
	}

	[Token(Token = "0x60010E5")]
	[Address(RVA = "0xD15E5C", Offset = "0xD15E5C", VA = "0xD15E5C")]
	public void SetSaveComponentActive(bool shouldBeActive)
	{
	}

	[Token(Token = "0x60010E6")]
	[Address(RVA = "0xD15E8C", Offset = "0xD15E8C", VA = "0xD15E8C", Slot = "4")]
	public virtual void GrabbedByPlayer()
	{
	}

	[Token(Token = "0x60010E7")]
	[Address(RVA = "0xD15EB4", Offset = "0xD15EB4", VA = "0xD15EB4")]
	public Purchaseable()
	{
	}
}
[Token(Token = "0x20002AB")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x9726F4", Offset = "0x9726F4")]
public class PurchaseableToolUpgrade : PurchaseableUpgrade
{
	[Token(Token = "0x40010F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public PurchasableUpgradeType UpgradeType;

	[Token(Token = "0x40010F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	public int UpgradeLevel;

	[Token(Token = "0x60010E9")]
	[Address(RVA = "0xD15FFC", Offset = "0xD15FFC", VA = "0xD15FFC", Slot = "4")]
	public override void GrabbedByPlayer()
	{
	}

	[Token(Token = "0x60010EA")]
	[Address(RVA = "0xD16000", Offset = "0xD16000", VA = "0xD16000")]
	public PurchaseableToolUpgrade()
	{
	}
}
[Token(Token = "0x20002AC")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x972758", Offset = "0x972758")]
public class PurchaseableUpgrade : Purchaseable
{
	[Token(Token = "0x60010EB")]
	[Address(RVA = "0xD16070", Offset = "0xD16070", VA = "0xD16070", Slot = "4")]
	public override void GrabbedByPlayer()
	{
	}

	[Token(Token = "0x60010EC")]
	[Address(RVA = "0xD1600C", Offset = "0xD1600C", VA = "0xD1600C")]
	public PurchaseableUpgrade()
	{
	}
}
[Token(Token = "0x20002AD")]
public class SellBin : CraftingBubble
{
	[Token(Token = "0x40010F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public CurrencyHolderDispenser ConnectedDispenser;

	[Token(Token = "0x40010F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public MerchantBoat ConnectedMerchantBoat;

	[Token(Token = "0x40010F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	[SerializeField]
	private TextMeshPro ItemValueLabel;

	[Token(Token = "0x40010F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	[SerializeField]
	private Rotatable2 handle;

	[Token(Token = "0x40010FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	[SerializeField]
	private BezierCurve RejectBezier;

	[Token(Token = "0x40010FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private int TotalContainedCurrency;

	[Token(Token = "0x60010ED")]
	[Address(RVA = "0xCC47C4", Offset = "0xCC47C4", VA = "0xCC47C4", Slot = "7")]
	public override void Initialize()
	{
	}

	[Token(Token = "0x60010EE")]
	[Address(RVA = "0xCC4848", Offset = "0xCC4848", VA = "0xCC4848")]
	public void Awake()
	{
	}

	[Token(Token = "0x60010EF")]
	[Address(RVA = "0xCC49D0", Offset = "0xCC49D0", VA = "0xCC49D0")]
	public void ContainedItemsUpdated()
	{
	}

	[Token(Token = "0x60010F0")]
	[Address(RVA = "0xCC4914", Offset = "0xCC4914", VA = "0xCC4914")]
	public void UpdateSellValueLabel()
	{
	}

	[Token(Token = "0x60010F1")]
	[Address(RVA = "0xCC4AD8", Offset = "0xCC4AD8", VA = "0xCC4AD8")]
	public void UpdateConnectedMerchantBoat()
	{
	}

	[Token(Token = "0x60010F2")]
	[Address(RVA = "0xCC4B6C", Offset = "0xCC4B6C", VA = "0xCC4B6C", Slot = "5")]
	protected override bool CanBeAdded(Stashable stashable, bool canBeHeld)
	{
		return default(bool);
	}

	[Token(Token = "0x60010F3")]
	[Address(RVA = "0xCC4BBC", Offset = "0xCC4BBC", VA = "0xCC4BBC", Slot = "6")]
	protected override void HandleInvalidGrabbable(Grabbable grabbable)
	{
	}

	[Token(Token = "0x60010F4")]
	[Address(RVA = "0xCC4C74", Offset = "0xCC4C74", VA = "0xCC4C74")]
	public void SellContainedItems()
	{
	}

	[Token(Token = "0x60010F5")]
	[Address(RVA = "0xCC4D18", Offset = "0xCC4D18", VA = "0xCC4D18")]
	public void DestroyContainedItems()
	{
	}

	[Token(Token = "0x60010F6")]
	[Address(RVA = "0xCC4EA0", Offset = "0xCC4EA0", VA = "0xCC4EA0")]
	public void OnLeverPulled(Rotatable2 handle)
	{
	}

	[Token(Token = "0x60010F7")]
	[Address(RVA = "0xCC4EA4", Offset = "0xCC4EA4", VA = "0xCC4EA4")]
	public int GetContainedItemValue()
	{
		return default(int);
	}

	[Token(Token = "0x60010F8")]
	[Address(RVA = "0xCC4EAC", Offset = "0xCC4EAC", VA = "0xCC4EAC")]
	public SellBin()
	{
	}
}
[Token(Token = "0x20002AE")]
public static class ByteArrayExtensions
{
	[Serializable]
	[Token(Token = "0x20002AF")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9727CC", Offset = "0x9727CC")]
	private sealed class <>c
	{
		[Token(Token = "0x40010FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x40010FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Func<byte, string> <>9__0_0;

		[Token(Token = "0x60010FB")]
		[Address(RVA = "0xC4313C", Offset = "0xC4313C", VA = "0xC4313C")]
		public <>c()
		{
		}

		[Token(Token = "0x60010FC")]
		[Address(RVA = "0xC43144", Offset = "0xC43144", VA = "0xC43144")]
		internal string <ToHexString>b__0_0(byte b)
		{
			return null;
		}
	}

	[Token(Token = "0x60010F9")]
	[Address(RVA = "0xF6E210", Offset = "0xF6E210", VA = "0xF6E210")]
	public static string ToHexString(this byte[] bytes)
	{
		return null;
	}
}
[Token(Token = "0x20002B0")]
public static class DictionaryExtensions
{
	[Token(Token = "0x20002B1")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9727EC", Offset = "0x9727EC")]
	private sealed class <>c__DisplayClass1_0<TKey, TValue>
	{
		[Token(Token = "0x40010FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public TValue value;

		[Token(Token = "0x40010FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Func<KeyValuePair<TKey, TValue>, bool> <>9__0;

		[Token(Token = "0x60010FF")]
		public <>c__DisplayClass1_0()
		{
		}

		[Token(Token = "0x6001100")]
		internal bool <RemoveAllWhereValueIs>b__0(KeyValuePair<TKey, TValue> kvp)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x60010FD")]
	public static TValue GetValueOrDefault<TKey, TValue>(this IDictionary<TKey, TValue> dictionary, TKey key)
	{
		return (TValue)null;
	}

	[Token(Token = "0x60010FE")]
	public static void RemoveAllWhereValueIs<TKey, TValue>(this IDictionary<TKey, TValue> dictionary, TValue value)
	{
	}
}
[Token(Token = "0x20002B2")]
public static class FloatExtensions
{
	[Token(Token = "0x6001101")]
	[Address(RVA = "0xCA4D58", Offset = "0xCA4D58", VA = "0xCA4D58")]
	public static float Smooth01(this float x)
	{
		return default(float);
	}

	[Token(Token = "0x6001102")]
	[Address(RVA = "0xCA4D70", Offset = "0xCA4D70", VA = "0xCA4D70")]
	private static float Lerp(float a, float b, float t)
	{
		return default(float);
	}

	[Token(Token = "0x6001103")]
	[Address(RVA = "0xCA4D88", Offset = "0xCA4D88", VA = "0xCA4D88")]
	private static float InverseLerp(float a, float b, float v)
	{
		return default(float);
	}

	[Token(Token = "0x6001104")]
	[Address(RVA = "0xCA4D98", Offset = "0xCA4D98", VA = "0xCA4D98")]
	public static float Remap(this float value, float iMin, float iMax, float oMin, float oMax)
	{
		return default(float);
	}

	[Token(Token = "0x6001105")]
	[Address(RVA = "0xCA4DBC", Offset = "0xCA4DBC", VA = "0xCA4DBC")]
	public static float RemapClamped(this float value, float iMin, float iMax, float oMin, float oMax)
	{
		return default(float);
	}
}
[Token(Token = "0x20002B3")]
public static class GameObjectExtensions
{
	[Token(Token = "0x6001106")]
	public static T CreateChildWithComponent<T>(this GameObject go, string name) where T : Component
	{
		return null;
	}

	[Token(Token = "0x6001107")]
	public static T InstantiateGetComp<T>(this GameObject original) where T : Component
	{
		return null;
	}

	[Token(Token = "0x6001108")]
	[Address(RVA = "0xE72B24", Offset = "0xE72B24", VA = "0xE72B24")]
	public static void SetLayer(this GameObject go, int layer, bool recursive = true)
	{
	}

	[Token(Token = "0x6001109")]
	[Address(RVA = "0xE72BD0", Offset = "0xE72BD0", VA = "0xE72BD0")]
	public static Vector3 GetClosestPointOnColliderBounds(this GameObject go, Vector3 point)
	{
		return default(Vector3);
	}

	[Token(Token = "0x600110A")]
	public static void RemoveComponent<T>(this GameObject go) where T : Component
	{
	}

	[Token(Token = "0x600110B")]
	[Address(RVA = "0xE72D78", Offset = "0xE72D78", VA = "0xE72D78")]
	public static void GetRendererBoundingCircle(this GameObject go, out Vector3 localCenter, out float radius, bool logError = true)
	{
	}
}
[Token(Token = "0x20002B4")]
public static class IEnumerableExtensions
{
	[Token(Token = "0x600110C")]
	public static void ForEach<T>(this IEnumerable<T> list, Action<T> action)
	{
	}
}
[Token(Token = "0x20002B5")]
public static class IEnumeratorExtensions
{
	[Token(Token = "0x600110D")]
	public static int IndexOf<T>(this T[] array, T testThing) where T : class
	{
		return default(int);
	}
}
[Token(Token = "0x20002B6")]
public static class ListExtensions
{
	[Token(Token = "0x600110E")]
	public static bool ContainsWhere<T>(this List<T> list, Func<T, bool> cond)
	{
		return default(bool);
	}

	[Token(Token = "0x600110F")]
	public static void AddIfUnique<T>(this List<T> list, T item)
	{
	}
}
[Token(Token = "0x20002B7")]
public static class MaterialPropertyBlockExtensions
{
	[Token(Token = "0x4001100")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static bool initializedPropertyIds;

	[Token(Token = "0x4001101")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static int[] propertyIds;

	[Token(Token = "0x6001110")]
	[Address(RVA = "0xC1397C", Offset = "0xC1397C", VA = "0xC1397C")]
	public static void SetColorTriplet(this MaterialPropertyBlock mpb, ColorTriplet colorTriplet)
	{
	}
}
[Token(Token = "0x20002B8")]
public static class ObjectExtensions
{
	[Token(Token = "0x6001111")]
	public static T Ref<T>(this T o) where T : UnityEngine.Object
	{
		return null;
	}
}
[Token(Token = "0x20002B9")]
public static class RectExtensions
{
	[Token(Token = "0x170001BA")]
	private static Vector2 Random01Vec2
	{
		[Token(Token = "0x6001112")]
		[Address(RVA = "0xD1F338", Offset = "0xD1F338", VA = "0xD1F338")]
		get
		{
			return default(Vector2);
		}
	}

	[Token(Token = "0x6001113")]
	[Address(RVA = "0xD11154", Offset = "0xD11154", VA = "0xD11154")]
	public static Vector2 GetRandomPointInside(this Rect r)
	{
		return default(Vector2);
	}
}
[Token(Token = "0x20002BA")]
public static class StringExtensions
{
	[Token(Token = "0x4001102")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static MD5 md5;

	[Token(Token = "0x6001114")]
	[Address(RVA = "0xE018B0", Offset = "0xE018B0", VA = "0xE018B0")]
	public static string GetMD5HashHexString(this string s)
	{
		return null;
	}

	[Token(Token = "0x6001115")]
	[Address(RVA = "0xE01978", Offset = "0xE01978", VA = "0xE01978")]
	public static int GetDeterministicHashCode(this string str)
	{
		return default(int);
	}
}
[Token(Token = "0x20002BB")]
public enum TransformType
{
	[Token(Token = "0x4001104")]
	Point,
	[Token(Token = "0x4001105")]
	Direction,
	[Token(Token = "0x4001106")]
	Vector
}
[Token(Token = "0x20002BC")]
public static class TransformExtensions
{
	[Token(Token = "0x6001116")]
	[Address(RVA = "0xE68508", Offset = "0xE68508", VA = "0xE68508")]
	public static string ChildPath(this Transform tf, [Optional] Transform grandParent)
	{
		return null;
	}

	[Token(Token = "0x6001117")]
	[Address(RVA = "0xE68628", Offset = "0xE68628", VA = "0xE68628")]
	public static Vector3 WorldToLocal(this Transform tf, Vector3 v3, TransformType type = TransformType.Point)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6001118")]
	[Address(RVA = "0xE62EA4", Offset = "0xE62EA4", VA = "0xE62EA4")]
	public static Quaternion WorldToLocal(this Transform tf, Quaternion r)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x6001119")]
	[Address(RVA = "0xE6874C", Offset = "0xE6874C", VA = "0xE6874C")]
	public static OrientedPoint WorldToLocal(this Transform tf, OrientedPoint op)
	{
		return default(OrientedPoint);
	}

	[Token(Token = "0x600111A")]
	[Address(RVA = "0xE6866C", Offset = "0xE6866C", VA = "0xE6866C")]
	public static Quaternion InverseTransformRotation(this Transform t, Quaternion worldSpaceRotation)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x600111B")]
	[Address(RVA = "0xE6272C", Offset = "0xE6272C", VA = "0xE6272C")]
	public static Quaternion TransformRotation(this Transform t, Quaternion localSpaceRotation)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x600111C")]
	[Address(RVA = "0xE687C4", Offset = "0xE687C4", VA = "0xE687C4")]
	public static void DestroyAllChildren(this Transform tf)
	{
	}

	[Token(Token = "0x600111D")]
	[Address(RVA = "0xE68880", Offset = "0xE68880", VA = "0xE68880")]
	public static void Reset(this Transform tf, Space space = Space.Self)
	{
	}

	[Token(Token = "0x600111E")]
	[Address(RVA = "0xE688B4", Offset = "0xE688B4", VA = "0xE688B4")]
	public static void ResetPosition(this Transform tf, Space space = Space.Self)
	{
	}

	[Token(Token = "0x600111F")]
	[Address(RVA = "0xE68974", Offset = "0xE68974", VA = "0xE68974")]
	public static void ResetRotation(this Transform tf, Space space = Space.Self)
	{
	}

	[Token(Token = "0x6001120")]
	[Address(RVA = "0xE68A34", Offset = "0xE68A34", VA = "0xE68A34")]
	public static void ResetScale(this Transform tf)
	{
	}

	[Token(Token = "0x6001121")]
	[Address(RVA = "0xE68AAC", Offset = "0xE68AAC", VA = "0xE68AAC")]
	public static Transform[] GetAllChildren(this Transform parent)
	{
		return null;
	}

	[Token(Token = "0x6001122")]
	[Address(RVA = "0xE68BD0", Offset = "0xE68BD0", VA = "0xE68BD0")]
	public static void SetLocalEulerY(this Transform transform, float y)
	{
	}

	[Token(Token = "0x6001123")]
	public static T FindComponentInParent<T>(this Transform parent) where T : class
	{
		return null;
	}
}
[Token(Token = "0x20002BD")]
public static class Vector2Extensions
{
	[Token(Token = "0x6001124")]
	[Address(RVA = "0xE6C04C", Offset = "0xE6C04C", VA = "0xE6C04C")]
	public static Vector3 XYZ(this Vector2 vec, float y = 0f)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6001125")]
	[Address(RVA = "0xE6C08C", Offset = "0xE6C08C", VA = "0xE6C08C")]
	public static Vector2 Floor(this Vector2 vec)
	{
		return default(Vector2);
	}

	[Token(Token = "0x6001126")]
	[Address(RVA = "0xE6ABF0", Offset = "0xE6ABF0", VA = "0xE6ABF0")]
	public static Vector2 Round(this Vector2 v)
	{
		return default(Vector2);
	}

	[Token(Token = "0x6001127")]
	[Address(RVA = "0xE6AC94", Offset = "0xE6AC94", VA = "0xE6AC94")]
	public static Vector2Int ToInt(this Vector2 v)
	{
		return default(Vector2Int);
	}
}
[Token(Token = "0x20002BE")]
public static class Vector3Extensions
{
	[Token(Token = "0x6001128")]
	[Address(RVA = "0xE6C114", Offset = "0xE6C114", VA = "0xE6C114")]
	public static Vector2 XZ(this Vector3 vec)
	{
		return default(Vector2);
	}

	[Token(Token = "0x6001129")]
	[Address(RVA = "0xE6C144", Offset = "0xE6C144", VA = "0xE6C144")]
	public static Vector3 FlattenY(this Vector3 v)
	{
		return default(Vector3);
	}

	[Token(Token = "0x600112A")]
	[Address(RVA = "0xE6C14C", Offset = "0xE6C14C", VA = "0xE6C14C")]
	public static bool EqualsFast(this Vector3 a, Vector3 b)
	{
		return default(bool);
	}

	[Token(Token = "0x600112B")]
	[Address(RVA = "0xE6C174", Offset = "0xE6C174", VA = "0xE6C174")]
	public static bool IsWithinSqrDist(this Vector3 self, Vector3 other, float f)
	{
		return default(bool);
	}
}
[Token(Token = "0x20002BF")]
public class LocalizationTester : MonoBehaviour
{
	[Token(Token = "0x20002C0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9728BC", Offset = "0x9728BC")]
	private sealed class <Start>d__3 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400110A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400110B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400110C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocalizationTester <>4__this;

		[Token(Token = "0x170001BB")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001132")]
			[Address(RVA = "0xBE759C", Offset = "0xBE759C", VA = "0xBE759C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001BC")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001134")]
			[Address(RVA = "0xBE7604", Offset = "0xBE7604", VA = "0xBE7604", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600112F")]
		[Address(RVA = "0xBE7398", Offset = "0xBE7398", VA = "0xBE7398")]
		[DebuggerHidden]
		public <Start>d__3(int <>1__state)
		{
		}

		[Token(Token = "0x6001130")]
		[Address(RVA = "0xBE7490", Offset = "0xBE7490", VA = "0xBE7490", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001131")]
		[Address(RVA = "0xBE7494", Offset = "0xBE7494", VA = "0xBE7494", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001133")]
		[Address(RVA = "0xBE75A4", Offset = "0xBE75A4", VA = "0xBE75A4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4001107")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string testLocale;

	[Token(Token = "0x4001108")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float waitBeforePlaySubtitle;

	[Token(Token = "0x4001109")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string subtitle;

	[Token(Token = "0x600112C")]
	[Address(RVA = "0xBE731C", Offset = "0xBE731C", VA = "0xBE731C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x98DC68", Offset = "0x98DC68")]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x600112D")]
	[Address(RVA = "0xBE73C4", Offset = "0xBE73C4", VA = "0xBE73C4")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600112E")]
	[Address(RVA = "0xBE7410", Offset = "0xBE7410", VA = "0xBE7410")]
	public LocalizationTester()
	{
	}
}
[Token(Token = "0x20002C1")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x9728CC", Offset = "0x9728CC")]
public class LoadTextFromLocalization : MonoBehaviour
{
	[Token(Token = "0x400110D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string Key;

	[Token(Token = "0x400110E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Text text;

	[Token(Token = "0x6001135")]
	[Address(RVA = "0xBE5C74", Offset = "0xBE5C74", VA = "0xBE5C74")]
	private void Start()
	{
	}

	[Token(Token = "0x6001136")]
	[Address(RVA = "0xBE5CDC", Offset = "0xBE5CDC", VA = "0xBE5CDC")]
	public void Refresh()
	{
	}

	[Token(Token = "0x6001137")]
	[Address(RVA = "0xBE5D78", Offset = "0xBE5D78", VA = "0xBE5D78")]
	public LoadTextFromLocalization()
	{
	}
}
[Token(Token = "0x20002C2")]
public class LocalizationResource : MonoBehaviour
{
	[Token(Token = "0x400110F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string ResourceKey;

	[Token(Token = "0x4001110")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string ResourceFilename;

	[Token(Token = "0x4001111")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool allowDefaultString;

	[Token(Token = "0x6001138")]
	[Address(RVA = "0xBE72BC", Offset = "0xBE72BC", VA = "0xBE72BC")]
	public LocalizationResource()
	{
	}
}
[Token(Token = "0x20002C3")]
public class ResourceLoader
{
	[Token(Token = "0x6001139")]
	[Address(RVA = "0xD1F39C", Offset = "0xD1F39C", VA = "0xD1F39C")]
	public static Dictionary<string, string> LoadTextResource(string languageCode, string resourceFilename)
	{
		return null;
	}
}
[Token(Token = "0x20002C4")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x972930", Offset = "0x972930")]
public class ResourceSprite : MonoBehaviour
{
	[Token(Token = "0x4001112")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string FileName;

	[Token(Token = "0x4001113")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private SpriteRenderer r;

	[Token(Token = "0x600113A")]
	[Address(RVA = "0xD1F510", Offset = "0xD1F510", VA = "0xD1F510")]
	private void Start()
	{
	}

	[Token(Token = "0x600113B")]
	[Address(RVA = "0xD1F578", Offset = "0xD1F578", VA = "0xD1F578")]
	public void Refresh()
	{
	}

	[Token(Token = "0x600113C")]
	[Address(RVA = "0xD1F6F4", Offset = "0xD1F6F4", VA = "0xD1F6F4")]
	public ResourceSprite()
	{
	}
}
[Token(Token = "0x20002C5")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x972994", Offset = "0x972994")]
public class ResourceTextField : LocalizationResource
{
	[Token(Token = "0x4001114")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public int MaxCharactersPerLine;

	[Token(Token = "0x4001115")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Vector3 refSize;

	[NonSerialized]
	[Token(Token = "0x4001116")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public string replaceFourDigitCode;

	[Token(Token = "0x4001117")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private TextMesh textMesh;

	[Token(Token = "0x4001118")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private MeshRenderer rend;

	[Token(Token = "0x600113D")]
	[Address(RVA = "0xD1F6FC", Offset = "0xD1F6FC", VA = "0xD1F6FC")]
	public void Start()
	{
	}

	[Token(Token = "0x600113E")]
	[Address(RVA = "0xD1F9DC", Offset = "0xD1F9DC", VA = "0xD1F9DC")]
	private Vector3 CheckLocalRenderBounds()
	{
		return default(Vector3);
	}

	[Token(Token = "0x600113F")]
	[Address(RVA = "0xD1F788", Offset = "0xD1F788", VA = "0xD1F788")]
	public void Refresh()
	{
	}

	[Token(Token = "0x6001140")]
	[Address(RVA = "0xD1FB34", Offset = "0xD1FB34", VA = "0xD1FB34")]
	public ResourceTextField()
	{
	}
}
[Token(Token = "0x20002C6")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x9729F8", Offset = "0x9729F8")]
public class ResourceTextFieldCanvas : LocalizationResource
{
	[Token(Token = "0x20002C7")]
	public enum Branching
	{
		[Token(Token = "0x400111E")]
		None,
		[Token(Token = "0x400111F")]
		ControllerType
	}

	[Token(Token = "0x4001119")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public Branching branching;

	[Token(Token = "0x400111A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public string ResourceKeyControllerOculus;

	[Token(Token = "0x400111B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public string ResourceKeyControllerVive;

	[Token(Token = "0x400111C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Text uiText;

	[Token(Token = "0x6001141")]
	[Address(RVA = "0xD1FB44", Offset = "0xD1FB44", VA = "0xD1FB44")]
	public void Start()
	{
	}

	[Token(Token = "0x6001142")]
	[Address(RVA = "0xD1FB48", Offset = "0xD1FB48", VA = "0xD1FB48")]
	public void Refresh()
	{
	}

	[Token(Token = "0x6001143")]
	[Address(RVA = "0xD1FD20", Offset = "0xD1FD20", VA = "0xD1FD20")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001144")]
	[Address(RVA = "0xD1FDCC", Offset = "0xD1FDCC", VA = "0xD1FDCC")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6001145")]
	[Address(RVA = "0xD1FC60", Offset = "0xD1FC60", VA = "0xD1FC60")]
	private string GetResourceKey()
	{
		return null;
	}

	[Token(Token = "0x6001146")]
	[Address(RVA = "0xD1FE78", Offset = "0xD1FE78", VA = "0xD1FE78")]
	public ResourceTextFieldCanvas()
	{
	}
}
[Token(Token = "0x20002C8")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x972A5C", Offset = "0x972A5C")]
public class ResourceTextFieldTMP : LocalizationResource
{
	[Token(Token = "0x4001120")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public int MaxCharactersPerLine;

	[Token(Token = "0x4001121")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private TMP_Text textMesh;

	[Token(Token = "0x6001147")]
	[Address(RVA = "0xD1FE80", Offset = "0xD1FE80", VA = "0xD1FE80")]
	public void Start()
	{
	}

	[Token(Token = "0x6001148")]
	[Address(RVA = "0xD1FEE8", Offset = "0xD1FEE8", VA = "0xD1FEE8")]
	public void Refresh()
	{
	}

	[Token(Token = "0x6001149")]
	[Address(RVA = "0xD1FFB8", Offset = "0xD1FFB8", VA = "0xD1FFB8")]
	public ResourceTextFieldTMP()
	{
	}
}
[Token(Token = "0x20002C9")]
public class TextHelper
{
	[Token(Token = "0x600114A")]
	[Address(RVA = "0xE2C910", Offset = "0xE2C910", VA = "0xE2C910")]
	public static string Wrap(string text, int lineWidth)
	{
		return null;
	}
}
[Token(Token = "0x20002CA")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x972AC0", Offset = "0x972AC0")]
public class TextMeshZoom : MonoBehaviour
{
	[Token(Token = "0x4001122")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private TextMesh text;

	[Token(Token = "0x4001123")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float nearCS;

	[Token(Token = "0x4001124")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float nearFS;

	[Token(Token = "0x4001125")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float farFS;

	[Token(Token = "0x4001126")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[SerializeField]
	private float zoomFactor;

	[Token(Token = "0x4001127")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private float minDistance;

	[Token(Token = "0x4001128")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[SerializeField]
	private float maxDistance;

	[Token(Token = "0x4001129")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Camera cam;

	[Token(Token = "0x400112A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float currentDistance;

	[Token(Token = "0x400112B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private Vector3 cachedPos;

	[Token(Token = "0x600114B")]
	[Address(RVA = "0xE2CAB4", Offset = "0xE2CAB4", VA = "0xE2CAB4")]
	private void Start()
	{
	}

	[Token(Token = "0x600114C")]
	[Address(RVA = "0xE2CBC4", Offset = "0xE2CBC4", VA = "0xE2CBC4")]
	private void Update()
	{
	}

	[Token(Token = "0x600114D")]
	[Address(RVA = "0xE2CD3C", Offset = "0xE2CD3C", VA = "0xE2CD3C")]
	public TextMeshZoom()
	{
	}
}
[Token(Token = "0x20002CB")]
public class TextResource
{
	[Token(Token = "0x400112C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Dictionary<string, Dictionary<string, string>> defaultSnippets;

	[Token(Token = "0x400112D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static Dictionary<string, Dictionary<string, string>> textSnippets;

	[Token(Token = "0x400112E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static Font OverrideFont;

	[Token(Token = "0x600114E")]
	[Address(RVA = "0xE2CD58", Offset = "0xE2CD58", VA = "0xE2CD58")]
	public static void Init(string resourceFilename)
	{
	}

	[Token(Token = "0x600114F")]
	[Address(RVA = "0xE2D084", Offset = "0xE2D084", VA = "0xE2D084")]
	private static void setFont()
	{
	}

	[Token(Token = "0x6001150")]
	[Address(RVA = "0xE2D088", Offset = "0xE2D088", VA = "0xE2D088")]
	public static string GetString(string resourceName, string resourceFilename, bool allowDefaultString)
	{
		return null;
	}

	[Token(Token = "0x6001151")]
	[Address(RVA = "0xE2D238", Offset = "0xE2D238", VA = "0xE2D238")]
	public static void SetCurrentLocale(string locale)
	{
	}

	[Token(Token = "0x6001152")]
	[Address(RVA = "0xE2CE38", Offset = "0xE2CE38", VA = "0xE2CE38")]
	public static string GetCurrentLocale()
	{
		return null;
	}
}
[Token(Token = "0x20002CC")]
public class SubtitlePlayer : MonoBehaviour
{
	[Token(Token = "0x20002CD")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x972B24", Offset = "0x972B24")]
	private sealed class <playback>d__8 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001134")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001135")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001136")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SubtitlePlayer <>4__this;

		[Token(Token = "0x4001137")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public JObject txt;

		[Token(Token = "0x4001138")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Color <c>5__2;

		[Token(Token = "0x4001139")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private IEnumerator<KeyValuePair<string, JToken>> <>7__wrap2;

		[Token(Token = "0x400113A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private JToken <j>5__4;

		[Token(Token = "0x400113B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private float <t>5__5;

		[Token(Token = "0x170001BD")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600115E")]
			[Address(RVA = "0xE02828", Offset = "0xE02828", VA = "0xE02828", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001BE")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001160")]
			[Address(RVA = "0xE02890", Offset = "0xE02890", VA = "0xE02890", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600115A")]
		[Address(RVA = "0xE01F58", Offset = "0xE01F58", VA = "0xE01F58")]
		[DebuggerHidden]
		public <playback>d__8(int <>1__state)
		{
		}

		[Token(Token = "0x600115B")]
		[Address(RVA = "0xE02080", Offset = "0xE02080", VA = "0xE02080", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600115C")]
		[Address(RVA = "0xE0216C", Offset = "0xE0216C", VA = "0xE0216C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600115D")]
		[Address(RVA = "0xE020AC", Offset = "0xE020AC", VA = "0xE020AC")]
		private void <>m__Finally1()
		{
		}

		[Token(Token = "0x600115F")]
		[Address(RVA = "0xE02830", Offset = "0xE02830", VA = "0xE02830", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400112F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Text Sub;

	[Token(Token = "0x4001130")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int maxCharsPerLine;

	[Token(Token = "0x4001131")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private bool FadeIn;

	[Token(Token = "0x4001132")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
	private bool FadeOut;

	[Token(Token = "0x4001133")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Font defaultFont;

	[Token(Token = "0x6001154")]
	[Address(RVA = "0xE01A34", Offset = "0xE01A34", VA = "0xE01A34")]
	public static SubtitlePlayer PlaySub(string key, bool fadeIn = true, bool fadeOut = true)
	{
		return null;
	}

	[Token(Token = "0x6001155")]
	[Address(RVA = "0xE01D78", Offset = "0xE01D78", VA = "0xE01D78")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001156")]
	[Address(RVA = "0xE01B44", Offset = "0xE01B44", VA = "0xE01B44")]
	public void PlayFile(string file, bool fadeIn = true, bool fadeOut = true)
	{
	}

	[Token(Token = "0x6001157")]
	[Address(RVA = "0xE01EC0", Offset = "0xE01EC0", VA = "0xE01EC0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x98DD1C", Offset = "0x98DD1C")]
	private IEnumerator playback(JObject txt)
	{
		return null;
	}

	[Token(Token = "0x6001158")]
	[Address(RVA = "0xE01F84", Offset = "0xE01F84", VA = "0xE01F84")]
	private string GetLineBrokenText(string source)
	{
		return null;
	}

	[Token(Token = "0x6001159")]
	[Address(RVA = "0xE02070", Offset = "0xE02070", VA = "0xE02070")]
	public SubtitlePlayer()
	{
	}
}
[Token(Token = "0x20002CE")]
public class NeatAPI_Validator : MonoBehaviour
{
	[Token(Token = "0x20002CF")]
	public enum Validity
	{
		[Token(Token = "0x400113E")]
		Unknown,
		[Token(Token = "0x400113F")]
		Invalid,
		[Token(Token = "0x4001140")]
		Valid
	}

	[Token(Token = "0x400113C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Validity validity;

	[Token(Token = "0x6001161")]
	[Address(RVA = "0xC26DC8", Offset = "0xC26DC8", VA = "0xC26DC8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001162")]
	[Address(RVA = "0xC26FB8", Offset = "0xC26FB8", VA = "0xC26FB8")]
	private void EntitlementCallback(Message msg)
	{
	}

	[Token(Token = "0x6001163")]
	[Address(RVA = "0xC26F38", Offset = "0xC26F38", VA = "0xC26F38")]
	private void OnInvalid()
	{
	}

	[Token(Token = "0x6001164")]
	[Address(RVA = "0xC270C4", Offset = "0xC270C4", VA = "0xC270C4")]
	private void ShutDown()
	{
	}

	[Token(Token = "0x6001165")]
	[Address(RVA = "0xC270CC", Offset = "0xC270CC", VA = "0xC270CC")]
	private void LoadErrorScene()
	{
	}

	[Token(Token = "0x6001166")]
	[Address(RVA = "0xC2704C", Offset = "0xC2704C", VA = "0xC2704C")]
	private void OnValid()
	{
	}

	[Token(Token = "0x6001167")]
	[Address(RVA = "0xC27138", Offset = "0xC27138", VA = "0xC27138")]
	public NeatAPI_Validator()
	{
	}
}
[Token(Token = "0x20002D0")]
public class NeatVR_Controller
{
	[Token(Token = "0x20002D1")]
	public enum InputAction
	{
		[Token(Token = "0x4001154")]
		Grab,
		[Token(Token = "0x4001155")]
		GrabHandGesture,
		[Token(Token = "0x4001156")]
		Inventory,
		[Token(Token = "0x4001157")]
		Teleport,
		[Token(Token = "0x4001158")]
		SnapTurnLeft,
		[Token(Token = "0x4001159")]
		SnapTurnRight,
		[Token(Token = "0x400115A")]
		Menu,
		[Token(Token = "0x400115B")]
		CloseMenu,
		[Token(Token = "0x400115C")]
		UseTool,
		[Token(Token = "0x400115D")]
		NUM_ACTIONS
	}

	[Token(Token = "0x4001141")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x97ABD4", Offset = "0x97ABD4")]
	private int <ButtonsNum>k__BackingField;

	[Token(Token = "0x4001142")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected NeatVR_Button[] buttons;

	[Token(Token = "0x4001143")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool grabDown;

	[Token(Token = "0x4001144")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	private bool grabHeld;

	[Token(Token = "0x4001145")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x22")]
	private bool grabUp;

	[Token(Token = "0x4001146")]
	protected const float THR_TRIGGER_RELEASE = 0.85f;

	[Token(Token = "0x4001147")]
	protected const float THR_TRIGGER_PRESS = 0.9f;

	[Token(Token = "0x4001148")]
	protected const float THR_GRIP_RELEASE = 0.9f;

	[Token(Token = "0x4001149")]
	protected const float THR_GRIP_PRESS = 0.95f;

	[Token(Token = "0x400114A")]
	protected const float THR_SNAP_TURN_RELEASE = 0.5f;

	[Token(Token = "0x400114B")]
	protected const float THR_SNAP_TURN_PRESS = 0.6f;

	[Token(Token = "0x400114C")]
	public const float THR_DYNAMIC_WINDOW = 0.08f;

	[Token(Token = "0x400114D")]
	public const float THR_DYNAMIC_DEADZONE = 0.03f;

	[Token(Token = "0x400114E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x23")]
	public bool isRightHand;

	[Token(Token = "0x400114F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private InputAction? currentGrabAction;

	[Token(Token = "0x4001150")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private InputDevice device;

	[Token(Token = "0x4001151")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Quaternion localHandRotationPrev;

	[Token(Token = "0x4001152")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Vector3 angularVelocity;

	[Token(Token = "0x170001BF")]
	protected int ButtonsNum
	{
		[Token(Token = "0x6001168")]
		[Address(RVA = "0xD6061C", Offset = "0xD6061C", VA = "0xD6061C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x98DDD0", Offset = "0x98DDD0")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x170001C0")]
	public virtual bool IsReadyForInput
	{
		[Token(Token = "0x6001169")]
		[Address(RVA = "0xD60624", Offset = "0xD60624", VA = "0xD60624", Slot = "4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170001C1")]
	public InputDevice Device
	{
		[Token(Token = "0x600116A")]
		[Address(RVA = "0xD60694", Offset = "0xD60694", VA = "0xD60694")]
		get
		{
			return default(InputDevice);
		}
	}

	[Token(Token = "0x170001C2")]
	public virtual Vector3 Velocity
	{
		[Token(Token = "0x600116F")]
		[Address(RVA = "0xD60E58", Offset = "0xD60E58", VA = "0xD60E58", Slot = "7")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x170001C3")]
	public Vector3 AngularVelocity
	{
		[Token(Token = "0x6001170")]
		[Address(RVA = "0xD60EC8", Offset = "0xD60EC8", VA = "0xD60EC8")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x600116B")]
	[Address(RVA = "0xD606A0", Offset = "0xD606A0", VA = "0xD606A0")]
	public NeatVR_Controller(InputDevice device, bool isRightHand)
	{
	}

	[Token(Token = "0x600116C")]
	[Address(RVA = "0xD60930", Offset = "0xD60930", VA = "0xD60930", Slot = "1")]
	~NeatVR_Controller()
	{
	}

	[Token(Token = "0x600116D")]
	[Address(RVA = "0xD60A8C", Offset = "0xD60A8C", VA = "0xD60A8C", Slot = "5")]
	protected virtual void CreateButtons()
	{
	}

	[Token(Token = "0x600116E")]
	[Address(RVA = "0xD60DB0", Offset = "0xD60DB0", VA = "0xD60DB0", Slot = "6")]
	public virtual void ApplyControllerPoseTo(Transform transform)
	{
	}

	[Token(Token = "0x6001171")]
	[Address(RVA = "0xD60F38", Offset = "0xD60F38", VA = "0xD60F38", Slot = "8")]
	public virtual void UpdateInputDelta()
	{
	}

	[Token(Token = "0x6001172")]
	[Address(RVA = "0xD60FE8", Offset = "0xD60FE8", VA = "0xD60FE8")]
	protected bool HasValidDevice()
	{
		return default(bool);
	}

	[Token(Token = "0x6001173")]
	[Address(RVA = "0xD6119C", Offset = "0xD6119C", VA = "0xD6119C")]
	protected void CalculateAngularVelocity()
	{
	}

	[Token(Token = "0x6001174")]
	[Address(RVA = "0xD61374", Offset = "0xD61374", VA = "0xD61374", Slot = "9")]
	protected virtual void UpdatePlatformSpecificInputDelta(bool rightHand)
	{
	}

	[Token(Token = "0x6001175")]
	[Address(RVA = "0xD6103C", Offset = "0xD6103C", VA = "0xD6103C")]
	protected void UpdateButton(InputAction action, NeatVR_Input.AbstractButtonName buttonName, bool right)
	{
	}

	[Token(Token = "0x6001176")]
	[Address(RVA = "0xD61478", Offset = "0xD61478", VA = "0xD61478")]
	public void UpdateGrab(bool isUsingMenu)
	{
	}

	[Token(Token = "0x6001177")]
	[Address(RVA = "0xD61620", Offset = "0xD61620", VA = "0xD61620")]
	public bool OnGrabDown()
	{
		return default(bool);
	}

	[Token(Token = "0x6001178")]
	[Address(RVA = "0xD61628", Offset = "0xD61628", VA = "0xD61628")]
	public bool OnGrabUp()
	{
		return default(bool);
	}

	[Token(Token = "0x6001179")]
	[Address(RVA = "0xD61630", Offset = "0xD61630", VA = "0xD61630")]
	public bool OnGrabHeld()
	{
		return default(bool);
	}

	[Token(Token = "0x600117A")]
	[Address(RVA = "0xD61638", Offset = "0xD61638", VA = "0xD61638")]
	public void TriggerHapticPulse(float amplitude)
	{
	}

	[Token(Token = "0x600117B")]
	[Address(RVA = "0xD61694", Offset = "0xD61694", VA = "0xD61694")]
	public void StopHapticPulse()
	{
	}

	[Token(Token = "0x600117C")]
	[Address(RVA = "0xD616D4", Offset = "0xD616D4", VA = "0xD616D4")]
	public bool GetFingerCurls(out float[] curlData)
	{
		return default(bool);
	}

	[Token(Token = "0x600117D")]
	[Address(RVA = "0xD616F8", Offset = "0xD616F8", VA = "0xD616F8", Slot = "10")]
	public virtual Vector2 GetStickInput(bool isRightHand)
	{
		return default(Vector2);
	}

	[Token(Token = "0x600117E")]
	[Address(RVA = "0xD6179C", Offset = "0xD6179C", VA = "0xD6179C", Slot = "11")]
	public virtual bool GetOnPress(InputAction action)
	{
		return default(bool);
	}

	[Token(Token = "0x600117F")]
	[Address(RVA = "0xD617FC", Offset = "0xD617FC", VA = "0xD617FC", Slot = "12")]
	public virtual bool GetOnRelease(InputAction action)
	{
		return default(bool);
	}

	[Token(Token = "0x6001180")]
	[Address(RVA = "0xD6185C", Offset = "0xD6185C", VA = "0xD6185C", Slot = "13")]
	public virtual bool GetIsPressed(InputAction action)
	{
		return default(bool);
	}

	[Token(Token = "0x6001181")]
	[Address(RVA = "0xD618BC", Offset = "0xD618BC", VA = "0xD618BC")]
	private void OnSettingsChanged(SettingsChangedEvent e)
	{
	}

	[Token(Token = "0x6001182")]
	[Address(RVA = "0xD61908", Offset = "0xD61908", VA = "0xD61908")]
	private void OnTrackingLost(XRNodeState xrNode)
	{
	}

	[Token(Token = "0x6001183")]
	[Address(RVA = "0xD61A4C", Offset = "0xD61A4C", VA = "0xD61A4C", Slot = "14")]
	protected virtual void OnDominantHandChanged(bool useLeftHand)
	{
	}

	[Token(Token = "0x6001184")]
	[Address(RVA = "0xD61A50", Offset = "0xD61A50", VA = "0xD61A50", Slot = "15")]
	protected virtual void OnSmoothLocomotionSettingChanged(bool enabled)
	{
	}
}
[Token(Token = "0x20002D2")]
public struct ShakeTracker
{
	[Token(Token = "0x400115E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private Vector3 defaultDirection;

	[Token(Token = "0x400115F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private Vector3 currentDirection;

	[Token(Token = "0x4001160")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Vector3 previousDirection;

	[Token(Token = "0x4001161")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float shakeDuration;

	[Token(Token = "0x4001162")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float shakeErrorDuration;

	[Token(Token = "0x4001163")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float angleThreshold;

	[Token(Token = "0x4001164")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float lastShakeDuration;

	[Token(Token = "0x6001185")]
	[Address(RVA = "0xA4431C", Offset = "0xA4431C", VA = "0xA4431C")]
	public ShakeTracker(Vector3 dir, float shakeAngleThresh)
	{
	}

	[Token(Token = "0x6001186")]
	[Address(RVA = "0xA44340", Offset = "0xA44340", VA = "0xA44340")]
	public float CheckShaking(bool isMoving, Vector3 vel, out Vector3 dir)
	{
		return default(float);
	}

	[Token(Token = "0x6001187")]
	[Address(RVA = "0xA4434C", Offset = "0xA4434C", VA = "0xA4434C")]
	private void ResetDetection()
	{
	}
}
[Token(Token = "0x20002D3")]
public class NeatVR
{
	[Token(Token = "0x170001C4")]
	public static Vector3 EyePosLeftLocal
	{
		[Token(Token = "0x6001188")]
		[Address(RVA = "0xD60024", Offset = "0xD60024", VA = "0xD60024")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x170001C5")]
	public static Vector3 EyePosRightLocal
	{
		[Token(Token = "0x6001189")]
		[Address(RVA = "0xD60088", Offset = "0xD60088", VA = "0xD60088")]
		get
		{
			return default(Vector3);
		}
	}
}
[Token(Token = "0x20002D4")]
public class NeatVR_Button
{
	[Token(Token = "0x20002D5")]
	public enum ButtonPressChange
	{
		[Token(Token = "0x4001170")]
		None,
		[Token(Token = "0x4001171")]
		Press,
		[Token(Token = "0x4001172")]
		Release
	}

	[Token(Token = "0x20002D6")]
	public enum ButtonState
	{
		[Token(Token = "0x4001174")]
		Pressed,
		[Token(Token = "0x4001175")]
		Released
	}

	[Token(Token = "0x20002D7")]
	public enum ThresholdType
	{
		[Token(Token = "0x4001177")]
		Static,
		[Token(Token = "0x4001178")]
		Dynamic
	}

	[Token(Token = "0x4001165")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ButtonPressChange change;

	[Token(Token = "0x4001166")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public ButtonState state;

	[Token(Token = "0x4001167")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ThresholdType thresholdType;

	[Token(Token = "0x4001168")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float releaseInterpolator;

	[Token(Token = "0x4001169")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float value;

	[Token(Token = "0x400116A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float thrStaticRelease;

	[Token(Token = "0x400116B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float thrStaticPress;

	[Token(Token = "0x400116C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float thrDynamicRelease;

	[Token(Token = "0x400116D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float thrDynamicPress;

	[Token(Token = "0x400116E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private bool calcInterpolator;

	[Token(Token = "0x600118A")]
	[Address(RVA = "0xD600EC", Offset = "0xD600EC", VA = "0xD600EC")]
	public NeatVR_Button()
	{
	}

	[Token(Token = "0x600118B")]
	[Address(RVA = "0xD60108", Offset = "0xD60108", VA = "0xD60108")]
	public static NeatVR_Button CreateAnalogStatic(bool calcInterpolator = false, float thrStaticRelease = 0.05f, float thrStaticPress = 0.95f)
	{
		return null;
	}

	[Token(Token = "0x600118C")]
	[Address(RVA = "0xD601A4", Offset = "0xD601A4", VA = "0xD601A4")]
	public static NeatVR_Button CreateAnalogDynamic(bool calcInterpolator = false)
	{
		return null;
	}

	[Token(Token = "0x600118D")]
	[Address(RVA = "0xD60234", Offset = "0xD60234", VA = "0xD60234")]
	public void Update(bool valueNew)
	{
	}

	[Token(Token = "0x600118E")]
	[Address(RVA = "0xD60270", Offset = "0xD60270", VA = "0xD60270")]
	public void Update(float valueNew)
	{
	}

	[Token(Token = "0x600118F")]
	[Address(RVA = "0xD6028C", Offset = "0xD6028C", VA = "0xD6028C")]
	private void UpdateStatic(float valueNew)
	{
	}

	[Token(Token = "0x6001190")]
	[Address(RVA = "0xD60374", Offset = "0xD60374", VA = "0xD60374")]
	private void UpdateDynamic(float valueNew)
	{
	}

	[Token(Token = "0x6001191")]
	[Address(RVA = "0xD604D4", Offset = "0xD604D4", VA = "0xD604D4")]
	private void UpdateDynamicReleaseThreshold(float valueNew)
	{
	}

	[Token(Token = "0x6001192")]
	[Address(RVA = "0xD60560", Offset = "0xD60560", VA = "0xD60560")]
	private void UpdateDynamicPressThreshold(float valueNew)
	{
	}

	[Token(Token = "0x6001193")]
	[Address(RVA = "0xD605EC", Offset = "0xD605EC", VA = "0xD605EC")]
	public bool GetOnPress()
	{
		return default(bool);
	}

	[Token(Token = "0x6001194")]
	[Address(RVA = "0xD605FC", Offset = "0xD605FC", VA = "0xD605FC")]
	public bool GetOnRelease()
	{
		return default(bool);
	}

	[Token(Token = "0x6001195")]
	[Address(RVA = "0xD6060C", Offset = "0xD6060C", VA = "0xD6060C")]
	public bool IsPressed()
	{
		return default(bool);
	}
}
[Token(Token = "0x20002D8")]
public class NeatVR_ControllerOffset
{
	[Token(Token = "0x4001179")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Vector3 localPosition;

	[Token(Token = "0x400117A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Quaternion localRotation;

	[Token(Token = "0x6001196")]
	[Address(RVA = "0xD61A54", Offset = "0xD61A54", VA = "0xD61A54")]
	public NeatVR_ControllerOffset()
	{
	}

	[Token(Token = "0x6001197")]
	[Address(RVA = "0xD61AFC", Offset = "0xD61AFC", VA = "0xD61AFC")]
	public NeatVR_ControllerOffset(Vector3 pos, Vector3 eulerAngles)
	{
	}
}
[Token(Token = "0x20002D9")]
public class NeatVR_Hardware
{
	[Token(Token = "0x20002DA")]
	public enum TrackingSpace
	{
		[Token(Token = "0x4001183")]
		Unknown,
		[Token(Token = "0x4001184")]
		ThreeSixty,
		[Token(Token = "0x4001185")]
		ForwardFacing,
		[Token(Token = "0x4001186")]
		Debug
	}

	[Token(Token = "0x20002DB")]
	public enum Controller
	{
		[Token(Token = "0x4001188")]
		Unknown,
		[Token(Token = "0x4001189")]
		ViveWands,
		[Token(Token = "0x400118A")]
		OculusTouch,
		[Token(Token = "0x400118B")]
		Knuckles,
		[Token(Token = "0x400118C")]
		WMR,
		[Token(Token = "0x400118D")]
		Debug
	}

	[Token(Token = "0x20002DC")]
	public enum Hmd
	{
		[Token(Token = "0x400118F")]
		Unknown,
		[Token(Token = "0x4001190")]
		Vive,
		[Token(Token = "0x4001191")]
		OculusRift,
		[Token(Token = "0x4001192")]
		WMR,
		[Token(Token = "0x4001193")]
		Debug
	}

	[Serializable]
	[Token(Token = "0x20002DD")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x972B34", Offset = "0x972B34")]
	private sealed class <>c
	{
		[Token(Token = "0x4001194")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x60011A3")]
		[Address(RVA = "0xD64D44", Offset = "0xD64D44", VA = "0xD64D44")]
		public <>c()
		{
		}

		[Token(Token = "0x60011A4")]
		[Address(RVA = "0xD64D4C", Offset = "0xD64D4C", VA = "0xD64D4C")]
		internal void <.cctor>b__28_0()
		{
		}

		[Token(Token = "0x60011A5")]
		[Address(RVA = "0xD64D50", Offset = "0xD64D50", VA = "0xD64D50")]
		internal void <.cctor>b__28_1()
		{
		}
	}

	[Token(Token = "0x400117B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static TrackingSpace trackingSpace;

	[Token(Token = "0x400117C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public static Controller controllerType;

	[Token(Token = "0x400117D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static Hmd headsetType;

	[Token(Token = "0x400117F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x97ABF4", Offset = "0x97ABF4")]
	private static Action OnHeadsetTypeFound;

	[Token(Token = "0x4001180")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public static NeatVR_ControllerOffset controllerOffsetOculus;

	[Token(Token = "0x4001181")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public static NeatVR_ControllerOffset controllerOffsetVive;

	[Token(Token = "0x170001C6")]
	public static bool FoundTrackingSpaceType
	{
		[Token(Token = "0x6001198")]
		[Address(RVA = "0xD62EE4", Offset = "0xD62EE4", VA = "0xD62EE4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170001C7")]
	public static bool FoundControllerType
	{
		[Token(Token = "0x6001199")]
		[Address(RVA = "0xD608C0", Offset = "0xD608C0", VA = "0xD608C0")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170001C8")]
	public static bool FoundHeadsetType
	{
		[Token(Token = "0x600119A")]
		[Address(RVA = "0xD62F54", Offset = "0xD62F54", VA = "0xD62F54")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x14000025")]
	public static event Action OnControllerTypeFound
	{
		[Token(Token = "0x600119B")]
		[Address(RVA = "0xD62FC4", Offset = "0xD62FC4", VA = "0xD62FC4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x98DDE0", Offset = "0x98DDE0")]
		add
		{
		}
		[Token(Token = "0x600119C")]
		[Address(RVA = "0xD630B4", Offset = "0xD630B4", VA = "0xD630B4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x98DDF0", Offset = "0x98DDF0")]
		remove
		{
		}
	}

	[Token(Token = "0x600119D")]
	[Address(RVA = "0xD631A4", Offset = "0xD631A4", VA = "0xD631A4")]
	public static NeatVR_ControllerOffset GetControllerOffset()
	{
		return null;
	}

	[Token(Token = "0x600119E")]
	[Address(RVA = "0xD63318", Offset = "0xD63318", VA = "0xD63318")]
	public static bool TryDetectHardware()
	{
		return default(bool);
	}

	[Token(Token = "0x600119F")]
	[Address(RVA = "0xD639D4", Offset = "0xD639D4", VA = "0xD639D4")]
	private static void SetCurrentControllerType(Controller controller)
	{
	}

	[Token(Token = "0x60011A0")]
	[Address(RVA = "0xD63910", Offset = "0xD63910", VA = "0xD63910")]
	private static void SetCurrentHeadsetType(Hmd hmd)
	{
	}
}
[Token(Token = "0x20002DE")]
public static class NeatVR_Input
{
	[Token(Token = "0x20002DF")]
	public enum AbstractButtonName
	{
		[Token(Token = "0x40011A7")]
		Grab,
		[Token(Token = "0x40011A8")]
		Inventory,
		[Token(Token = "0x40011A9")]
		Teleport,
		[Token(Token = "0x40011AA")]
		SnapTurn,
		[Token(Token = "0x40011AB")]
		Menu,
		[Token(Token = "0x40011AC")]
		CloseMenu,
		[Token(Token = "0x40011AD")]
		UseTool,
		[Token(Token = "0x40011AE")]
		NumButtons
	}

	[Token(Token = "0x20002E0")]
	private struct HarwareInputButton
	{
		[Token(Token = "0x40011AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string buttonName;

		[Token(Token = "0x40011B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public bool isAnalog;
	}

	[Token(Token = "0x20002E1")]
	public class HardwareInput
	{
		[Token(Token = "0x40011B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private HarwareInputButton inputLeft;

		[Token(Token = "0x40011B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private HarwareInputButton inputRight;

		[Token(Token = "0x60011C2")]
		[Address(RVA = "0xD6699C", Offset = "0xD6699C", VA = "0xD6699C")]
		public HardwareInput(string left, string right, bool analog = false)
		{
		}

		[Token(Token = "0x60011C3")]
		[Address(RVA = "0xD66A88", Offset = "0xD66A88", VA = "0xD66A88")]
		public bool IsAnalog(bool isRight)
		{
			return default(bool);
		}

		[Token(Token = "0x60011C4")]
		[Address(RVA = "0xD66A64", Offset = "0xD66A64", VA = "0xD66A64")]
		public bool GetButton(bool isRight)
		{
			return default(bool);
		}

		[Token(Token = "0x60011C5")]
		[Address(RVA = "0xD657BC", Offset = "0xD657BC", VA = "0xD657BC")]
		public float GetAxis(bool isRight)
		{
			return default(float);
		}
	}

	[Token(Token = "0x20002E2")]
	public class AbstractedInput
	{
		[Token(Token = "0x40011B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public HardwareInput oculus;

		[Token(Token = "0x40011B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public HardwareInput vive;

		[Token(Token = "0x40011B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public HardwareInput knuckles;

		[Token(Token = "0x60011C6")]
		[Address(RVA = "0xD66A00", Offset = "0xD66A00", VA = "0xD66A00")]
		public AbstractedInput(HardwareInput oculus, HardwareInput vive, HardwareInput knuckles)
		{
		}

		[Token(Token = "0x60011C7")]
		[Address(RVA = "0xD64F58", Offset = "0xD64F58", VA = "0xD64F58")]
		public bool GetButton(NeatVR_Hardware.Controller controllerType, bool right)
		{
			return default(bool);
		}

		[Token(Token = "0x60011C8")]
		[Address(RVA = "0xD64E2C", Offset = "0xD64E2C", VA = "0xD64E2C")]
		public float GetAxis(NeatVR_Hardware.Controller controllerType, bool right)
		{
			return default(float);
		}

		[Token(Token = "0x60011C9")]
		[Address(RVA = "0xD656E4", Offset = "0xD656E4", VA = "0xD656E4")]
		public bool IsAnalog(NeatVR_Hardware.Controller controllerType, bool right)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x4001195")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static int lastNodeStateGrabFrame;

	[Token(Token = "0x4001196")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static List<XRNodeState> nodeStates;

	[Token(Token = "0x4001197")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static HardwareInput inputAxisTrigger;

	[Token(Token = "0x4001198")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static HardwareInput inputAxisGrip;

	[Token(Token = "0x4001199")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public static HardwareInput inputAxisStickHorizontal;

	[Token(Token = "0x400119A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private static HardwareInput inputBtnOculusFaceFar;

	[Token(Token = "0x400119B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private static HardwareInput inputBtnOculusFaceNear;

	[Token(Token = "0x400119C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public static HardwareInput inputBtnOculusStick;

	[Token(Token = "0x400119D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public static HardwareInput inputBtnViveTouchpadLeft;

	[Token(Token = "0x400119E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public static HardwareInput inputBtnViveTouchpadRight;

	[Token(Token = "0x400119F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public static HardwareInput inputBtnViveTouchpad;

	[Token(Token = "0x40011A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public static HardwareInput inputBtnViveMenu;

	[Token(Token = "0x40011A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public static HardwareInput inputBtnKnucklesMenu;

	[Token(Token = "0x40011A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public static HardwareInput inputBtnKnucklesInventory;

	[Token(Token = "0x40011A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public static HardwareInput inputAxisStickVertical;

	[Token(Token = "0x40011A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public static HardwareInput inputNull;

	[Token(Token = "0x40011A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private static AbstractedInput[] abstractedButtons;

	[Token(Token = "0x60011A6")]
	[Address(RVA = "0xD64D54", Offset = "0xD64D54", VA = "0xD64D54")]
	public static float GetAnalogButtonState(AbstractButtonName buttonName, bool right)
	{
		return default(float);
	}

	[Token(Token = "0x60011A7")]
	[Address(RVA = "0xD64E80", Offset = "0xD64E80", VA = "0xD64E80")]
	public static bool GetDigitalButtonState(AbstractButtonName buttonName, bool right)
	{
		return default(bool);
	}

	[Token(Token = "0x60011A8")]
	[Address(RVA = "0xD64FC4", Offset = "0xD64FC4", VA = "0xD64FC4")]
	public static float GetTurnLeftButtonState(bool right)
	{
		return default(float);
	}

	[Token(Token = "0x60011A9")]
	[Address(RVA = "0xD651FC", Offset = "0xD651FC", VA = "0xD651FC")]
	public static float GetTurnRightButtonState(bool right)
	{
		return default(float);
	}

	[Token(Token = "0x60011AA")]
	[Address(RVA = "0xD65298", Offset = "0xD65298", VA = "0xD65298")]
	public static bool GetStickForwardButtonState(out float inputScale, bool right, float threshold = 0f)
	{
		return default(bool);
	}

	[Token(Token = "0x60011AB")]
	[Address(RVA = "0xD653CC", Offset = "0xD653CC", VA = "0xD653CC")]
	public static bool GetStickBackwardButtonState(out float inputScale, bool right, float threshold = 0f)
	{
		return default(bool);
	}

	[Token(Token = "0x60011AC")]
	[Address(RVA = "0xD65468", Offset = "0xD65468", VA = "0xD65468")]
	public static bool GetStickLeftButtonState(out float inputScale, bool right, float threshold = 0f)
	{
		return default(bool);
	}

	[Token(Token = "0x60011AD")]
	[Address(RVA = "0xD65504", Offset = "0xD65504", VA = "0xD65504")]
	public static bool GetStickRightButtonState(out float inputScale, bool right, float threshold = 0f)
	{
		return default(bool);
	}

	[Token(Token = "0x60011AE")]
	[Address(RVA = "0xD6559C", Offset = "0xD6559C", VA = "0xD6559C")]
	public static bool GetHasVerticalInput(float threshold, bool right)
	{
		return default(bool);
	}

	[Token(Token = "0x60011AF")]
	[Address(RVA = "0xD65640", Offset = "0xD65640", VA = "0xD65640")]
	public static bool GetHasHorizontalInput(float threshold, bool right)
	{
		return default(bool);
	}

	[Token(Token = "0x60011B0")]
	[Address(RVA = "0xD65060", Offset = "0xD65060", VA = "0xD65060")]
	public static float GetStickHorizontalState(bool right)
	{
		return default(float);
	}

	[Token(Token = "0x60011B1")]
	[Address(RVA = "0xD65330", Offset = "0xD65330", VA = "0xD65330")]
	public static float GetStickVerticalState(bool right)
	{
		return default(float);
	}

	[Token(Token = "0x60011B2")]
	[Address(RVA = "0xD6573C", Offset = "0xD6573C", VA = "0xD6573C")]
	private static float GetThresholdAdjustedInputScale(float inputVal)
	{
		return default(float);
	}

	[Token(Token = "0x60011B3")]
	[Address(RVA = "0xD657E4", Offset = "0xD657E4", VA = "0xD657E4")]
	public static Vector3 GetHandPosLocal(bool right)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60011B4")]
	[Address(RVA = "0xD65858", Offset = "0xD65858", VA = "0xD65858")]
	public static Quaternion GetHandRotLocal(bool right)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x60011B5")]
	[Address(RVA = "0xD658CC", Offset = "0xD658CC", VA = "0xD658CC")]
	private static void UpdateNodeStatesIfNeeded()
	{
	}

	[Token(Token = "0x60011B6")]
	[Address(RVA = "0xD659B0", Offset = "0xD659B0", VA = "0xD659B0")]
	public static string GetControllerName(bool right)
	{
		return null;
	}

	[Token(Token = "0x60011B7")]
	[Address(RVA = "0xD65A88", Offset = "0xD65A88", VA = "0xD65A88")]
	public static bool TryGetHandNode(bool right, out XRNodeState handNode)
	{
		return default(bool);
	}

	[Token(Token = "0x60011B8")]
	[Address(RVA = "0xD65C58", Offset = "0xD65C58", VA = "0xD65C58")]
	public static bool GetHandReadyForInput(bool right)
	{
		return default(bool);
	}

	[Token(Token = "0x60011B9")]
	[Address(RVA = "0xD65CBC", Offset = "0xD65CBC", VA = "0xD65CBC")]
	public static bool GetHandExists(bool right)
	{
		return default(bool);
	}

	[Token(Token = "0x60011BA")]
	[Address(RVA = "0xD65D44", Offset = "0xD65D44", VA = "0xD65D44")]
	public static Vector3 GetHandVelocityLocal(bool right)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60011BB")]
	[Address(RVA = "0xD65DB8", Offset = "0xD65DB8", VA = "0xD65DB8")]
	public static Vector3 GetHandAngularVelocityLocal(bool right)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60011BC")]
	[Address(RVA = "0xD65E7C", Offset = "0xD65E7C", VA = "0xD65E7C")]
	public static Vector3 GetHandVelocity(bool right)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60011BD")]
	[Address(RVA = "0xD6600C", Offset = "0xD6600C", VA = "0xD6600C")]
	public static Vector3 GetHandAngularVelocity(bool right)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60011BE")]
	[Address(RVA = "0xD660B0", Offset = "0xD660B0", VA = "0xD660B0")]
	public static bool ButtonIsAnalog(AbstractButtonName button, bool right)
	{
		return default(bool);
	}

	[Token(Token = "0x60011BF")]
	[Address(RVA = "0xD66188", Offset = "0xD66188", VA = "0xD66188")]
	public static void RebindAbstractButton(AbstractButtonName name, AbstractedInput newAbrstractedInput)
	{
	}

	[Token(Token = "0x60011C0")]
	[Address(RVA = "0xD66250", Offset = "0xD66250", VA = "0xD66250")]
	public static AbstractedInput GetAbstractButton(AbstractButtonName name)
	{
		return null;
	}
}
[Token(Token = "0x20002E3")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x972B44", Offset = "0x972B44")]
public class NeatVR_PlatformDefines : ScriptableObject
{
	[Token(Token = "0x20002E4")]
	public enum PlatformEnum
	{
		[Token(Token = "0x40011B8")]
		Android,
		[Token(Token = "0x40011B9")]
		Default,
		[Token(Token = "0x40011BA")]
		COUNT
	}

	[Serializable]
	[Token(Token = "0x20002E5")]
	public struct DefineInfo
	{
		[Token(Token = "0x40011BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string DefineKeyWord;

		[Token(Token = "0x40011BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public bool DefineState;
	}

	[Serializable]
	[Token(Token = "0x20002E6")]
	public struct PlatformInfo
	{
		[Token(Token = "0x40011BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public PlatformEnum Platform;

		[Token(Token = "0x40011BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public DefineInfo[] Defines;

		[Token(Token = "0x60011CD")]
		[Address(RVA = "0xA46430", Offset = "0xA46430", VA = "0xA46430")]
		public void ApplyDefines()
		{
		}
	}

	[Token(Token = "0x40011B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public PlatformInfo[] Platforms;

	[Token(Token = "0x170001C9")]
	public int PlatformCount
	{
		[Token(Token = "0x60011CA")]
		[Address(RVA = "0xD66AA0", Offset = "0xD66AA0", VA = "0xD66AA0")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x60011CB")]
	[Address(RVA = "0xD66AA8", Offset = "0xD66AA8", VA = "0xD66AA8")]
	public void ApplyDefines()
	{
	}

	[Token(Token = "0x60011CC")]
	[Address(RVA = "0xD66B7C", Offset = "0xD66B7C", VA = "0xD66B7C")]
	public NeatVR_PlatformDefines()
	{
	}
}
[Token(Token = "0x20002E7")]
public class NeatVR_Player : MonoBehaviour
{
	[Token(Token = "0x20002E8")]
	public delegate void PlayerTeleportDelegate(TeleportDestinationInfo destinationInfo);

	[Serializable]
	[Token(Token = "0x20002E9")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x972BAC", Offset = "0x972BAC")]
	private sealed class <>c
	{
		[Token(Token = "0x40011E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x40011E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Action <>9__104_0;

		[Token(Token = "0x40011E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static Action <>9__104_1;

		[Token(Token = "0x40011E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static Action <>9__104_2;

		[Token(Token = "0x40011E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public static Action <>9__106_0;

		[Token(Token = "0x40011E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public static Action <>9__107_0;

		[Token(Token = "0x40011E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public static Action <>9__107_1;

		[Token(Token = "0x6001219")]
		[Address(RVA = "0xD6BCD0", Offset = "0xD6BCD0", VA = "0xD6BCD0")]
		public <>c()
		{
		}

		[Token(Token = "0x600121A")]
		[Address(RVA = "0xD6BCD8", Offset = "0xD6BCD8", VA = "0xD6BCD8")]
		internal void <ShowLoadingScreen>b__104_0()
		{
		}

		[Token(Token = "0x600121B")]
		[Address(RVA = "0xD6BD84", Offset = "0xD6BD84", VA = "0xD6BD84")]
		internal void <ShowLoadingScreen>b__104_1()
		{
		}

		[Token(Token = "0x600121C")]
		[Address(RVA = "0xD6BE34", Offset = "0xD6BE34", VA = "0xD6BE34")]
		internal void <ShowLoadingScreen>b__104_2()
		{
		}

		[Token(Token = "0x600121D")]
		[Address(RVA = "0xD6BEE0", Offset = "0xD6BEE0", VA = "0xD6BEE0")]
		internal void <StartPlaying>b__106_0()
		{
		}

		[Token(Token = "0x600121E")]
		[Address(RVA = "0xD6BEEC", Offset = "0xD6BEEC", VA = "0xD6BEEC")]
		internal void <StartPlayingInHouse>b__107_0()
		{
		}

		[Token(Token = "0x600121F")]
		[Address(RVA = "0xD6BEF8", Offset = "0xD6BEF8", VA = "0xD6BEF8")]
		internal void <StartPlayingInHouse>b__107_1()
		{
		}

		[Token(Token = "0x6001220")]
		[Address(RVA = "0xD6BF74", Offset = "0xD6BF74", VA = "0xD6BF74")]
		internal void <.cctor>b__120_0(NeatVR_Player <p0>)
		{
		}
	}

	[Token(Token = "0x20002EA")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x972BBC", Offset = "0x972BBC")]
	private sealed class <>c__DisplayClass105_0
	{
		[Token(Token = "0x40011E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Action OnComplete;

		[Token(Token = "0x40011E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Action AfterFade;

		[Token(Token = "0x6001221")]
		[Address(RVA = "0xD6AF74", Offset = "0xD6AF74", VA = "0xD6AF74")]
		public <>c__DisplayClass105_0()
		{
		}

		[Token(Token = "0x6001222")]
		[Address(RVA = "0xD6BF78", Offset = "0xD6BF78", VA = "0xD6BF78")]
		internal void <ShowLoadingScreen>b__0()
		{
		}

		[Token(Token = "0x6001223")]
		[Address(RVA = "0xD6C038", Offset = "0xD6C038", VA = "0xD6C038")]
		internal void <ShowLoadingScreen>b__1()
		{
		}
	}

	[Token(Token = "0x20002EB")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x972BCC", Offset = "0x972BCC")]
	private sealed class <>c__DisplayClass106_0
	{
		[Token(Token = "0x40011EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool startInTutorial;

		[Token(Token = "0x6001224")]
		[Address(RVA = "0xD6B138", Offset = "0xD6B138", VA = "0xD6B138")]
		public <>c__DisplayClass106_0()
		{
		}

		[Token(Token = "0x6001225")]
		[Address(RVA = "0xD6C04C", Offset = "0xD6C04C", VA = "0xD6C04C")]
		internal void <StartPlaying>b__1()
		{
		}
	}

	[Token(Token = "0x20002EC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x972BDC", Offset = "0x972BDC")]
	private sealed class <DetectHardwareTypeLoop>d__114 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40011EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40011EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x170001DA")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001229")]
			[Address(RVA = "0xD6C228", Offset = "0xD6C228", VA = "0xD6C228", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001DB")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600122B")]
			[Address(RVA = "0xD6C290", Offset = "0xD6C290", VA = "0xD6C290", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001226")]
		[Address(RVA = "0xD6B9EC", Offset = "0xD6B9EC", VA = "0xD6B9EC")]
		[DebuggerHidden]
		public <DetectHardwareTypeLoop>d__114(int <>1__state)
		{
		}

		[Token(Token = "0x6001227")]
		[Address(RVA = "0xD6C184", Offset = "0xD6C184", VA = "0xD6C184", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001228")]
		[Address(RVA = "0xD6C188", Offset = "0xD6C188", VA = "0xD6C188", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600122A")]
		[Address(RVA = "0xD6C230", Offset = "0xD6C230", VA = "0xD6C230", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40011BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static NeatVR_Player instance;

	[Token(Token = "0x40011C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static bool readyToStart;

	[Token(Token = "0x40011C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9")]
	private static bool fullyInitialized;

	[Token(Token = "0x40011C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x97AC04", Offset = "0x97AC04")]
	private static bool <CanOpenInventory>k__BackingField;

	[Token(Token = "0x40011C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Transform origin;

	[Token(Token = "0x40011C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Transform head;

	[Token(Token = "0x40011C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public RecordingCamera recorderCamera;

	[Token(Token = "0x40011C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private LoadingScreen m_loadingScreen;

	[Token(Token = "0x40011C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Vector3 leftEyePosWorld;

	[Token(Token = "0x40011C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private Vector3 rightEyePosWorld;

	[Token(Token = "0x40011C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Vector3 lastValidPlayerPosition;

	[Token(Token = "0x40011CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private static Vector3 InvalidPosition;

	[Token(Token = "0x40011CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Camera headCamera;

	[Token(Token = "0x40011CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private PlayerState playerState;

	[Token(Token = "0x40011CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private MissionBeaconMapState[] BeaconMapStates;

	[Token(Token = "0x40011CE")]
	private const float SNAP_TURN_AMOUNT = 45f;

	[Token(Token = "0x40011CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private float m_heightAdjustmentOffset;

	[Token(Token = "0x40011D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public NeatVR_PlatformDefines PlatformDefines;

	[Token(Token = "0x40011D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x97AC44", Offset = "0x97AC44")]
	public Material SSAOMat;

	[Token(Token = "0x40011D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x97AC7C", Offset = "0x97AC7C")]
	public float SSAOIntensity;

	[Token(Token = "0x40011D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x97AC94", Offset = "0x97AC94")]
	public float SSAOBlurAmount;

	[Token(Token = "0x40011D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x97ACAC", Offset = "0x97ACAC")]
	public float SSAORadius;

	[Token(Token = "0x40011D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x97ACC4", Offset = "0x97ACC4")]
	public float SSAOArea;

	[Token(Token = "0x40011D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public bool SSAOFastMode;

	[Token(Token = "0x40011D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static PlayerTeleportDelegate PlayerTeleported;

	[Token(Token = "0x40011D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public static Action<NeatVR_Player> OnPlayerSnapTurned;

	[Token(Token = "0x40011D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x97ACDC", Offset = "0x97ACDC")]
	private static bool <IsFadingLoadingScreen>k__BackingField;

	[Token(Token = "0x40011DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x97ACEC", Offset = "0x97ACEC")]
	private static bool <IsUsingDebugCamera>k__BackingField;

	[Token(Token = "0x40011DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA1")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x97ACFC", Offset = "0x97ACFC")]
	private bool <HasMovingPlatform>k__BackingField;

	[Token(Token = "0x40011DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x97AD0C", Offset = "0x97AD0C")]
	private IMovingPlatform <MovingPlatform>k__BackingField;

	[Token(Token = "0x40011DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private bool didCompleteTutorial;

	[Token(Token = "0x40011DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB1")]
	private bool m_heightOffsetInitialized;

	[Token(Token = "0x40011DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	private Vector3 m_lastHeadPos;

	[Token(Token = "0x40011E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x97AD1C", Offset = "0x97AD1C")]
	private static bool <InputDisabled>k__BackingField;

	[Token(Token = "0x170001CA")]
	public static bool CanOpenInventory
	{
		[Token(Token = "0x60011CE")]
		[Address(RVA = "0xD66BE8", Offset = "0xD66BE8", VA = "0xD66BE8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x98DE00", Offset = "0x98DE00")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60011CF")]
		[Address(RVA = "0xD66C50", Offset = "0xD66C50", VA = "0xD66C50")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x98DE10", Offset = "0x98DE10")]
		private set
		{
		}
	}

	[Token(Token = "0x170001CB")]
	public static float HeightAdjustmentOffset
	{
		[Token(Token = "0x60011D0")]
		[Address(RVA = "0xD66CC0", Offset = "0xD66CC0", VA = "0xD66CC0")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x170001CC")]
	public static bool IsFadingLoadingScreen
	{
		[Token(Token = "0x60011D1")]
		[Address(RVA = "0xD66D34", Offset = "0xD66D34", VA = "0xD66D34")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x98DE20", Offset = "0x98DE20")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60011D2")]
		[Address(RVA = "0xD66D9C", Offset = "0xD66D9C", VA = "0xD66D9C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x98DE30", Offset = "0x98DE30")]
		private set
		{
		}
	}

	[Token(Token = "0x170001CD")]
	public static bool IsUsingDebugCamera
	{
		[Token(Token = "0x60011D3")]
		[Address(RVA = "0xD66E0C", Offset = "0xD66E0C", VA = "0xD66E0C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x98DE40", Offset = "0x98DE40")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60011D4")]
		[Address(RVA = "0xD66E74", Offset = "0xD66E74", VA = "0xD66E74")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x98DE50", Offset = "0x98DE50")]
		private set
		{
		}
	}

	[Token(Token = "0x170001CE")]
	public bool HasMovingPlatform
	{
		[Token(Token = "0x60011D5")]
		[Address(RVA = "0xD66EE4", Offset = "0xD66EE4", VA = "0xD66EE4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x98DE60", Offset = "0x98DE60")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60011D6")]
		[Address(RVA = "0xD66EEC", Offset = "0xD66EEC", VA = "0xD66EEC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x98DE70", Offset = "0x98DE70")]
		set
		{
		}
	}

	[Token(Token = "0x170001CF")]
	public IMovingPlatform MovingPlatform
	{
		[Token(Token = "0x60011D7")]
		[Address(RVA = "0xD66EF8", Offset = "0xD66EF8", VA = "0xD66EF8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x98DE80", Offset = "0x98DE80")]
		get
		{
			return null;
		}
		[Token(Token = "0x60011D8")]
		[Address(RVA = "0xD66F00", Offset = "0xD66F00", VA = "0xD66F00")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x98DE90", Offset = "0x98DE90")]
		private set
		{
		}
	}

	[Token(Token = "0x170001D0")]
	public static NeatVR_Player Instance
	{
		[Token(Token = "0x60011DB")]
		[Address(RVA = "0xD66F74", Offset = "0xD66F74", VA = "0xD66F74")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170001D1")]
	public static bool IsReady
	{
		[Token(Token = "0x60011DC")]
		[Address(RVA = "0xD66FDC", Offset = "0xD66FDC", VA = "0xD66FDC")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170001D2")]
	public static bool IsFullyInitialized
	{
		[Token(Token = "0x60011DD")]
		[Address(RVA = "0xD67044", Offset = "0xD67044", VA = "0xD67044")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170001D3")]
	public static bool InputDisabled
	{
		[Token(Token = "0x60011DE")]
		[Address(RVA = "0xD670AC", Offset = "0xD670AC", VA = "0xD670AC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x98DEA0", Offset = "0x98DEA0")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60011DF")]
		[Address(RVA = "0xD67114", Offset = "0xD67114", VA = "0xD67114")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x98DEB0", Offset = "0x98DEB0")]
		private set
		{
		}
	}

	[Token(Token = "0x170001D4")]
	public static Transform Head
	{
		[Token(Token = "0x60011E0")]
		[Address(RVA = "0xD67184", Offset = "0xD67184", VA = "0xD67184")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170001D5")]
	public static Vector3 LocalHeadPos
	{
		[Token(Token = "0x60011E1")]
		[Address(RVA = "0xD67224", Offset = "0xD67224", VA = "0xD67224")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x170001D6")]
	public static Transform Origin
	{
		[Token(Token = "0x60011E2")]
		[Address(RVA = "0xD65F98", Offset = "0xD65F98", VA = "0xD65F98")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170001D7")]
	public static Camera HeadCamera
	{
		[Token(Token = "0x60011E3")]
		[Address(RVA = "0xD672F4", Offset = "0xD672F4", VA = "0xD672F4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170001D8")]
	public Vector3 LeftEyePosWorld
	{
		[Token(Token = "0x60011E6")]
		[Address(RVA = "0xD67770", Offset = "0xD67770", VA = "0xD67770")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x170001D9")]
	public Vector3 RightEyePosWorld
	{
		[Token(Token = "0x60011E7")]
		[Address(RVA = "0xD67838", Offset = "0xD67838", VA = "0xD67838")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x60011D9")]
	[Address(RVA = "0xD66F08", Offset = "0xD66F08", VA = "0xD66F08")]
	public void SetMovingPlatform(IMovingPlatform mover)
	{
	}

	[Token(Token = "0x60011DA")]
	[Address(RVA = "0xD66F44", Offset = "0xD66F44", VA = "0xD66F44")]
	public void UnsetMovingPlatform()
	{
	}

	[Token(Token = "0x60011E4")]
	[Address(RVA = "0xD67448", Offset = "0xD67448", VA = "0xD67448")]
	public static bool ObjectIsNearbyPlayer(Vector3 objectPos, float maxDistance)
	{
		return default(bool);
	}

	[Token(Token = "0x60011E5")]
	[Address(RVA = "0xD675C0", Offset = "0xD675C0", VA = "0xD675C0")]
	public static bool PlayerIsLookingAtObject(Vector3 objectPos, float minDotProd)
	{
		return default(bool);
	}

	[Token(Token = "0x60011E8")]
	[Address(RVA = "0xD67900", Offset = "0xD67900", VA = "0xD67900")]
	public void SetHeadCamera(ref Camera cam, bool isDebugCamera)
	{
	}

	[Token(Token = "0x60011E9")]
	[Address(RVA = "0xD67AFC", Offset = "0xD67AFC", VA = "0xD67AFC")]
	private void Awake()
	{
	}

	[Token(Token = "0x60011EA")]
	[Address(RVA = "0xD67E00", Offset = "0xD67E00", VA = "0xD67E00")]
	public void SetPlayerState(PlayerState ps)
	{
	}

	[Token(Token = "0x60011EB")]
	[Address(RVA = "0xD67E08", Offset = "0xD67E08", VA = "0xD67E08")]
	private void InitFromPlayerState(bool startInTutorial)
	{
	}

	[Token(Token = "0x60011EC")]
	[Address(RVA = "0xD684E0", Offset = "0xD684E0", VA = "0xD684E0")]
	private void InitializeHeightOffset()
	{
	}

	[Token(Token = "0x60011ED")]
	[Address(RVA = "0xD68750", Offset = "0xD68750", VA = "0xD68750")]
	internal void ToggleSSAO()
	{
	}

	[Token(Token = "0x60011EE")]
	[Address(RVA = "0xD68314", Offset = "0xD68314", VA = "0xD68314")]
	private void AssignItemToHand(SaveID id, bool right)
	{
	}

	[Token(Token = "0x60011EF")]
	[Address(RVA = "0xD68754", Offset = "0xD68754", VA = "0xD68754")]
	private void Start()
	{
	}

	[Token(Token = "0x60011F0")]
	[Address(RVA = "0xD687E0", Offset = "0xD687E0", VA = "0xD687E0")]
	private void Update()
	{
	}

	[Token(Token = "0x60011F1")]
	[Address(RVA = "0xD68C9C", Offset = "0xD68C9C", VA = "0xD68C9C")]
	public static bool TryGetHeadVelocity(out Vector3 velocity)
	{
		return default(bool);
	}

	[Token(Token = "0x60011F2")]
	[Address(RVA = "0xD68FDC", Offset = "0xD68FDC", VA = "0xD68FDC")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60011F3")]
	[Address(RVA = "0xD69044", Offset = "0xD69044", VA = "0xD69044")]
	private void UpdateEyePositions()
	{
	}

	[Token(Token = "0x60011F4")]
	[Address(RVA = "0xD690AC", Offset = "0xD690AC", VA = "0xD690AC")]
	private void MakePlayerLookInPrimaryDirection()
	{
	}

	[Token(Token = "0x60011F5")]
	[Address(RVA = "0xD691D4", Offset = "0xD691D4", VA = "0xD691D4")]
	public static Vector3 GetFlatHeadLookDir()
	{
		return default(Vector3);
	}

	[Token(Token = "0x60011F6")]
	[Address(RVA = "0xD69400", Offset = "0xD69400", VA = "0xD69400")]
	public static Vector3 GetPositionAbovePlayer(float distanceAbove)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60011F7")]
	[Address(RVA = "0xD695D0", Offset = "0xD695D0", VA = "0xD695D0")]
	public static Vector3 GetPositionInFrontOfPlayer(float distanceAhead)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60011F8")]
	[Address(RVA = "0xD69784", Offset = "0xD69784", VA = "0xD69784")]
	public static void SnapTurn(bool right)
	{
	}

	[Token(Token = "0x60011F9")]
	[Address(RVA = "0xD69B84", Offset = "0xD69B84", VA = "0xD69B84")]
	public static void TeleportTo(Vector3 position)
	{
	}

	[Token(Token = "0x60011FA")]
	[Address(RVA = "0xD69F04", Offset = "0xD69F04", VA = "0xD69F04")]
	public static void TeleportTo(Transform newPos)
	{
	}

	[Token(Token = "0x60011FB")]
	[Address(RVA = "0xD69FDC", Offset = "0xD69FDC", VA = "0xD69FDC")]
	public static void TeleportTo(Transform newPos, TeleportDestinationInfo locomotionArcDestination)
	{
	}

	[Token(Token = "0x60011FC")]
	[Address(RVA = "0xD69C4C", Offset = "0xD69C4C", VA = "0xD69C4C")]
	public static void TeleportTo(Vector3 position, Quaternion rotation)
	{
	}

	[Token(Token = "0x60011FD")]
	[Address(RVA = "0xD6A104", Offset = "0xD6A104", VA = "0xD6A104")]
	public static void TeleportToWithSnap(Vector3 position)
	{
	}

	[Token(Token = "0x60011FE")]
	[Address(RVA = "0xD6A070", Offset = "0xD6A070", VA = "0xD6A070")]
	private static void InvokeTeleported(TeleportDestinationInfo locomotionArcDestination)
	{
	}

	[Token(Token = "0x60011FF")]
	[Address(RVA = "0xD6A610", Offset = "0xD6A610", VA = "0xD6A610")]
	public static void MoveAwayFromEverything()
	{
	}

	[Token(Token = "0x6001200")]
	[Address(RVA = "0xD6A6F0", Offset = "0xD6A6F0", VA = "0xD6A6F0")]
	public static void ResetToLastKnownPosition()
	{
	}

	[Token(Token = "0x6001201")]
	[Address(RVA = "0xD6A7C0", Offset = "0xD6A7C0", VA = "0xD6A7C0")]
	private static bool PositionIsValid(Vector3 pos)
	{
		return default(bool);
	}

	[Token(Token = "0x6001202")]
	[Address(RVA = "0xD6A7F0", Offset = "0xD6A7F0", VA = "0xD6A7F0")]
	public static Vector3 GetLastValidPosition()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6001203")]
	[Address(RVA = "0xD6AA40", Offset = "0xD6AA40", VA = "0xD6AA40")]
	public static void ShowLoadingScreen(bool setLoadingStateAfterFade = false)
	{
	}

	[Token(Token = "0x6001204")]
	[Address(RVA = "0xD6ADB0", Offset = "0xD6ADB0", VA = "0xD6ADB0")]
	public static void ShowLoadingScreen(Action AfterFade, Action OnComplete)
	{
	}

	[Token(Token = "0x6001205")]
	[Address(RVA = "0xD6AF7C", Offset = "0xD6AF7C", VA = "0xD6AF7C")]
	public static void StartPlaying(bool startInTutorial)
	{
	}

	[Token(Token = "0x6001206")]
	[Address(RVA = "0xD6B140", Offset = "0xD6B140", VA = "0xD6B140")]
	public static void StartPlayingInHouse()
	{
	}

	[Token(Token = "0x6001207")]
	[Address(RVA = "0xD6B32C", Offset = "0xD6B32C", VA = "0xD6B32C")]
	public static void TeleportToHouseImmediately()
	{
	}

	[Token(Token = "0x6001208")]
	[Address(RVA = "0xD6B6A0", Offset = "0xD6B6A0", VA = "0xD6B6A0")]
	public static void UnlockInventory()
	{
	}

	[Token(Token = "0x6001209")]
	[Address(RVA = "0xD6B748", Offset = "0xD6B748", VA = "0xD6B748")]
	public static bool HasGloveAbility(GemType abilityType)
	{
		return default(bool);
	}

	[Token(Token = "0x600120A")]
	[Address(RVA = "0xD6B8A0", Offset = "0xD6B8A0", VA = "0xD6B8A0")]
	public static void DisablePlayerInput()
	{
	}

	[Token(Token = "0x600120B")]
	[Address(RVA = "0xD6B948", Offset = "0xD6B948", VA = "0xD6B948")]
	public static void EnablePlayerInput()
	{
	}

	[Token(Token = "0x600120C")]
	[Address(RVA = "0xD69A84", Offset = "0xD69A84", VA = "0xD69A84")]
	private void UpdateHandsAfterQuickMovement()
	{
	}

	[Token(Token = "0x600120D")]
	[Address(RVA = "0xD68780", Offset = "0xD68780", VA = "0xD68780")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x98DEC0", Offset = "0x98DEC0")]
	private IEnumerator DetectHardwareTypeLoop()
	{
		return null;
	}

	[Token(Token = "0x600120E")]
	[Address(RVA = "0xD6855C", Offset = "0xD6855C", VA = "0xD6855C")]
	public static void UpdateHeightOffset(float newHeightOffset)
	{
	}

	[Token(Token = "0x600120F")]
	[Address(RVA = "0xD6BA18", Offset = "0xD6BA18", VA = "0xD6BA18")]
	public void UpdateMissionBeaconMapState(MissionBeaconMapType mapToUpdate, MissionBeaconMapState newState)
	{
	}

	[Token(Token = "0x6001210")]
	[Address(RVA = "0xD6BA58", Offset = "0xD6BA58", VA = "0xD6BA58")]
	public MissionBeaconMapState GetMissionBeaconMapState(MissionBeaconMapType mapToFetch)
	{
		return default(MissionBeaconMapState);
	}

	[Token(Token = "0x6001211")]
	[Address(RVA = "0xD6BA94", Offset = "0xD6BA94", VA = "0xD6BA94")]
	public MissionBeaconMapState[] GetMissionBeaconMapStates()
	{
		return null;
	}

	[Token(Token = "0x6001212")]
	[Address(RVA = "0xD6BA9C", Offset = "0xD6BA9C", VA = "0xD6BA9C")]
	public NeatVR_Player()
	{
	}
}
[Token(Token = "0x20002ED")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x972BEC", Offset = "0x972BEC")]
public class PaintColor : ScriptableObject
{
	[Token(Token = "0x40011ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Color highlight;

	[Token(Token = "0x40011EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Color shadow;

	[Token(Token = "0x40011EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static int shaderPropPaintHighlight;

	[Token(Token = "0x40011F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	private static int shaderPropPaintShadow;

	[Token(Token = "0x600122C")]
	[Address(RVA = "0xBB8D2C", Offset = "0xBB8D2C", VA = "0xBB8D2C")]
	public void ApplyTo(MaterialPropertyBlock mpb)
	{
	}

	[Token(Token = "0x600122D")]
	[Address(RVA = "0xBB8DDC", Offset = "0xBB8DDC", VA = "0xBB8DDC")]
	public static void Clear(MaterialPropertyBlock mpb)
	{
	}

	[Token(Token = "0x600122E")]
	[Address(RVA = "0xBB8E90", Offset = "0xBB8E90", VA = "0xBB8E90")]
	public static void ApplyTo(MaterialPropertyBlock mpb, Color hightlightOverride, Color shadowOverride)
	{
	}

	[Token(Token = "0x600122F")]
	[Address(RVA = "0xBB8F84", Offset = "0xBB8F84", VA = "0xBB8F84")]
	public PaintColor()
	{
	}
}
[Token(Token = "0x20002EE")]
public class Paintable : SaveableComponent, IInitializable
{
	[Token(Token = "0x40011F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool colorChildren;

	[Token(Token = "0x40011F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private Color32 currentHighlight;

	[Token(Token = "0x40011F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Color32 currentShadow;

	[Token(Token = "0x40011F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public UnityEvent OnSucessfulPaintEvent;

	[Token(Token = "0x6001231")]
	[Address(RVA = "0xBB9208", Offset = "0xBB9208", VA = "0xBB9208", Slot = "5")]
	public void Initialize()
	{
	}

	[Token(Token = "0x6001232")]
	[Address(RVA = "0xBB9424", Offset = "0xBB9424", VA = "0xBB9424")]
	public bool TryPaint(PaintColor paint)
	{
		return default(bool);
	}

	[Token(Token = "0x6001233")]
	[Address(RVA = "0xBB92C4", Offset = "0xBB92C4", VA = "0xBB92C4")]
	private bool ApplyPaintColors(Color32 highlight, Color32 shadow)
	{
		return default(bool);
	}

	[Token(Token = "0x6001234")]
	[Address(RVA = "0xBB94A0", Offset = "0xBB94A0", VA = "0xBB94A0", Slot = "4")]
	public override ComponentState CreateState()
	{
		return null;
	}

	[Token(Token = "0x6001235")]
	[Address(RVA = "0xBB9684", Offset = "0xBB9684", VA = "0xBB9684")]
	public Paintable()
	{
	}
}
[Serializable]
[Token(Token = "0x20002EF")]
public class PaintableState : ComponentState
{
	[Token(Token = "0x40011F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Color32Serializable highlightColor;

	[Token(Token = "0x40011F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public Color32Serializable shadowColor;

	[Token(Token = "0x6001236")]
	[Address(RVA = "0xBB9618", Offset = "0xBB9618", VA = "0xBB9618")]
	public PaintableState(Color32 highlight, Color32 shadow)
	{
	}
}
[Token(Token = "0x20002F0")]
[ExecuteAlways]
public class Paintball : MonoBehaviour
{
	[Token(Token = "0x40011F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public MeshRenderer rnd;

	[Token(Token = "0x40011F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public PaintColor color;

	[Token(Token = "0x40011F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject splashParticlePrefab;

	[Token(Token = "0x40011FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool isEraserPaintball;

	[Token(Token = "0x40011FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private ParticleSystem paintSplash;

	[Token(Token = "0x40011FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Grabbable grabbable;

	[Token(Token = "0x40011FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private PaintSplashColor paintballColor;

	[Token(Token = "0x40011FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private Rigidbody m_rigidBody;

	[Token(Token = "0x6001237")]
	[Address(RVA = "0xBB96D8", Offset = "0xBB96D8", VA = "0xBB96D8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6001238")]
	[Address(RVA = "0xBB97BC", Offset = "0xBB97BC", VA = "0xBB97BC")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x6001239")]
	[Address(RVA = "0xBB9AE0", Offset = "0xBB9AE0", VA = "0xBB9AE0")]
	public Paintball()
	{
	}
}
[Token(Token = "0x20002F1")]
public class DebugController : NeatVR_Controller
{
	[Token(Token = "0x40011FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private Vector3 controllerPosition;

	[Token(Token = "0x4001200")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Vector3 prevControllerPosition;

	[Token(Token = "0x4001201")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private Quaternion controllerRotation;

	[Token(Token = "0x4001202")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private Vector3 velocity;

	[Token(Token = "0x4001203")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private float angle;

	[Token(Token = "0x4001204")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private bool isCurrentlySelected;

	[Token(Token = "0x4001205")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private bool[] currentInput;

	[Token(Token = "0x4001206")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private bool[] previousInput;

	[Token(Token = "0x170001DC")]
	public override bool IsReadyForInput
	{
		[Token(Token = "0x600123A")]
		[Address(RVA = "0xBF3828", Offset = "0xBF3828", VA = "0xBF3828", Slot = "4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170001DD")]
	public override Vector3 Velocity
	{
		[Token(Token = "0x600123B")]
		[Address(RVA = "0xBF3830", Offset = "0xBF3830", VA = "0xBF3830", Slot = "7")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x600123C")]
	[Address(RVA = "0xBF383C", Offset = "0xBF383C", VA = "0xBF383C")]
	public DebugController(bool isRightHand)
	{
	}

	[Token(Token = "0x600123D")]
	[Address(RVA = "0xBF395C", Offset = "0xBF395C", VA = "0xBF395C", Slot = "8")]
	public override void UpdateInputDelta()
	{
	}

	[Token(Token = "0x600123E")]
	[Address(RVA = "0xBF3BA0", Offset = "0xBF3BA0", VA = "0xBF3BA0", Slot = "11")]
	public override bool GetOnPress(InputAction button)
	{
		return default(bool);
	}

	[Token(Token = "0x600123F")]
	[Address(RVA = "0xBF3C10", Offset = "0xBF3C10", VA = "0xBF3C10", Slot = "12")]
	public override bool GetOnRelease(InputAction button)
	{
		return default(bool);
	}

	[Token(Token = "0x6001240")]
	[Address(RVA = "0xBF3C80", Offset = "0xBF3C80", VA = "0xBF3C80", Slot = "13")]
	public override bool GetIsPressed(InputAction button)
	{
		return default(bool);
	}

	[Token(Token = "0x6001241")]
	[Address(RVA = "0xBF3CBC", Offset = "0xBF3CBC", VA = "0xBF3CBC", Slot = "6")]
	public override void ApplyControllerPoseTo(Transform transform)
	{
	}
}
[Token(Token = "0x20002F2")]
public class DebugNavigation : MonoBehaviour
{
	[Token(Token = "0x4001207")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static DebugNavigation Instance;

	[Token(Token = "0x4001208")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static GameObject debugObjects;

	[Token(Token = "0x4001209")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Camera debugCamera;

	[Token(Token = "0x400120A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject debugHUD;

	[Token(Token = "0x400120B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject objectList;

	[Token(Token = "0x400120C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	public bool DisableHUD;

	[Token(Token = "0x6001242")]
	[Address(RVA = "0xBF3E14", Offset = "0xBF3E14", VA = "0xBF3E14")]
	public DebugNavigation()
	{
	}
}
[Token(Token = "0x20002F3")]
public class DebugTeleportPlayer : MonoBehaviour
{
	[Token(Token = "0x400120D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public DebugTeleportPlayer destination;

	[Token(Token = "0x400120E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool ignoreNextEnter;

	[Token(Token = "0x6001244")]
	[Address(RVA = "0xBF3E20", Offset = "0xBF3E20", VA = "0xBF3E20")]
	public DebugTeleportPlayer()
	{
	}
}
[Serializable]
[Token(Token = "0x20002F4")]
public struct GloveBlobReactionColors
{
	[Token(Token = "0x400120F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Color InnerColor;

	[Token(Token = "0x4001210")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Color CenterColor;

	[Token(Token = "0x4001211")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Color OuterColor;
}
[Token(Token = "0x20002F5")]
public interface IGloveBlobReactable
{
	[Token(Token = "0x6001245")]
	Grabbable GetGrabbable();

	[Token(Token = "0x6001246")]
	GameObject GetGameObject();

	[Token(Token = "0x6001247")]
	GloveBlobReactionColors GetReactionColors();
}
[Token(Token = "0x20002F6")]
public class InventoryDropzone : StashableTrigger
{
	[Token(Token = "0x4001212")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private MeshRenderer rnd;

	[Token(Token = "0x4001213")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private MaterialPropertyBlock mpb;

	[Token(Token = "0x4001214")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool initialized;

	[Token(Token = "0x4001215")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
	public bool IsPlayerInventory;

	[Token(Token = "0x4001216")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public InventorySlot ContainedSlot;

	[Token(Token = "0x6001248")]
	[Address(RVA = "0xBE02A8", Offset = "0xBE02A8", VA = "0xBE02A8")]
	public void Init()
	{
	}

	[Token(Token = "0x6001249")]
	[Address(RVA = "0xBE0350", Offset = "0xBE0350", VA = "0xBE0350")]
	private bool IsValidCollider(Collider col)
	{
		return default(bool);
	}

	[Token(Token = "0x600124A")]
	[Address(RVA = "0xBE0358", Offset = "0xBE0358", VA = "0xBE0358")]
	private void OnTriggerEnter(Collider col)
	{
	}

	[Token(Token = "0x600124B")]
	[Address(RVA = "0xBE0498", Offset = "0xBE0498", VA = "0xBE0498")]
	private void OnTriggerExit(Collider col)
	{
	}

	[Token(Token = "0x600124C")]
	[Address(RVA = "0xBE05D8", Offset = "0xBE05D8", VA = "0xBE05D8")]
	public void OnObjectRemovedFromInventory()
	{
	}

	[Token(Token = "0x600124D")]
	[Address(RVA = "0xBE0710", Offset = "0xBE0710", VA = "0xBE0710")]
	private void Update()
	{
	}

	[Token(Token = "0x600124E")]
	[Address(RVA = "0xBE11FC", Offset = "0xBE11FC", VA = "0xBE11FC")]
	private void OnPreGrabItem(Grabbable grabbable)
	{
	}

	[Token(Token = "0x600124F")]
	[Address(RVA = "0xBE1468", Offset = "0xBE1468", VA = "0xBE1468")]
	private bool HasValidItemInside()
	{
		return default(bool);
	}

	[Token(Token = "0x6001250")]
	[Address(RVA = "0xBE1614", Offset = "0xBE1614", VA = "0xBE1614", Slot = "4")]
	protected override void OnHoverStateChanged()
	{
	}

	[Token(Token = "0x6001251")]
	[Address(RVA = "0xBE05DC", Offset = "0xBE05DC", VA = "0xBE05DC")]
	public void UpdateMaterial()
	{
	}

	[Token(Token = "0x6001252")]
	[Address(RVA = "0xBE1618", Offset = "0xBE1618", VA = "0xBE1618")]
	public InventoryDropzone()
	{
	}
}
[Serializable]
[Token(Token = "0x20002F7")]
public class InventoryHeroSlot : InventorySlot
{
	[Token(Token = "0x4001217")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	private Stashable ConnectedHeroItem;

	[Token(Token = "0x6001253")]
	[Address(RVA = "0xBE1628", Offset = "0xBE1628", VA = "0xBE1628", Slot = "16")]
	public override void SlotActivated()
	{
	}

	[Token(Token = "0x6001254")]
	[Address(RVA = "0xBE17E0", Offset = "0xBE17E0", VA = "0xBE17E0", Slot = "17")]
	public override bool CanStash(Stashable item)
	{
		return default(bool);
	}

	[Token(Token = "0x6001255")]
	[Address(RVA = "0xBE18AC", Offset = "0xBE18AC", VA = "0xBE18AC", Slot = "18")]
	public override void OnItemAdded(Stashable item)
	{
	}

	[Token(Token = "0x6001256")]
	[Address(RVA = "0xBE19D8", Offset = "0xBE19D8", VA = "0xBE19D8", Slot = "19")]
	public override void OnItemRemoved(Stashable item)
	{
	}

	[Token(Token = "0x6001257")]
	[Address(RVA = "0xBE1A6C", Offset = "0xBE1A6C", VA = "0xBE1A6C", Slot = "20")]
	public override void UpdateHoverStatus(bool isHovering)
	{
	}

	[Token(Token = "0x6001258")]
	[Address(RVA = "0xBE1A70", Offset = "0xBE1A70", VA = "0xBE1A70", Slot = "23")]
	public override GrabbableOutline GetOutline()
	{
		return null;
	}

	[Token(Token = "0x6001259")]
	[Address(RVA = "0xBE1B44", Offset = "0xBE1B44", VA = "0xBE1B44")]
	public InventoryHeroSlot()
	{
	}
}
[Serializable]
[Token(Token = "0x20002F8")]
public class InventorySlot : MonoBehaviour, IGrabbable, IInitializable, IValidateCustom, IValidate
{
	[Token(Token = "0x4001218")]
	private const float SMOOTHING_VALUE = 0.3f;

	[Token(Token = "0x4001219")]
	public const float BASE_SLOT_RADIUS = 0.048f;

	[Token(Token = "0x400121A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float SlotRadius;

	[Token(Token = "0x400121B")]
	public const int MAX_NUM_ITEMS = 10;

	[Token(Token = "0x400121C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private OrientedPoint localOpSlotTarget;

	[Token(Token = "0x400121D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private OrientedPoint localOpSlot;

	[Token(Token = "0x400121E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private OrientedPoint localOpItemRecentlyAdded;

	[Token(Token = "0x400121F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private OrientedPoint localOpItemTarget;

	[Token(Token = "0x4001220")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private int hashedName;

	[Token(Token = "0x4001221")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private Vector3 trgInvSpacePos;

	[Token(Token = "0x4001222")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	private Quaternion trgInvSpaceRot;

	[Token(Token = "0x4001223")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public GrabbableOutline outline;

	[Token(Token = "0x4001224")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private List<Stashable> items;

	[Token(Token = "0x4001225")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public GameObject numberCounterObject;

	[Token(Token = "0x4001226")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public TextMeshPro numberCounterLabel;

	[Token(Token = "0x4001227")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	[SerializeField]
	private GameObject iconBackground;

	[Token(Token = "0x4001228")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	[SerializeField]
	private GameObject iconFlowers;

	[Token(Token = "0x4001229")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	[SerializeField]
	private GameObject iconVeggies;

	[Token(Token = "0x400122A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	[SerializeField]
	private Collider[] colliders;

	[Token(Token = "0x400122B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	[SerializeField]
	private GameObject iconBerries;

	[Token(Token = "0x400122C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	private GameObject[] icons;

	[Token(Token = "0x400122D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	protected MeshRenderer rnd;

	[Token(Token = "0x400122E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	protected MeshFilter mf;

	[Token(Token = "0x400122F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	protected MaterialPropertyBlock mpb;

	[Token(Token = "0x4001230")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	private bool initialized;

	[Token(Token = "0x4001231")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x149")]
	private bool HaveOverrideTargetPosition;

	[Token(Token = "0x4001232")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14C")]
	private OrientedPoint OverrideLocalOpSlotTarget;

	[Token(Token = "0x4001233")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static int HoverShaderId;

	[Token(Token = "0x170001DE")]
	public int NumItems
	{
		[Token(Token = "0x600125A")]
		[Address(RVA = "0xBE1C30", Offset = "0xBE1C30", VA = "0xBE1C30")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x170001DF")]
	public bool IsFull
	{
		[Token(Token = "0x600125B")]
		[Address(RVA = "0xBE1C80", Offset = "0xBE1C80", VA = "0xBE1C80")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170001E0")]
	public bool HasRoomLeft
	{
		[Token(Token = "0x600125C")]
		[Address(RVA = "0xBE1CD8", Offset = "0xBE1CD8", VA = "0xBE1CD8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170001E1")]
	public bool IsEmpty
	{
		[Token(Token = "0x600125D")]
		[Address(RVA = "0xBE1D30", Offset = "0xBE1D30", VA = "0xBE1D30")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170001E2")]
	public Vector3 LocalTargetPosition
	{
		[Token(Token = "0x600125E")]
		[Address(RVA = "0xBE1D88", Offset = "0xBE1D88", VA = "0xBE1D88")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x600125F")]
	[Address(RVA = "0xBE1D94", Offset = "0xBE1D94", VA = "0xBE1D94")]
	private void UpdateIcons()
	{
	}

	[Token(Token = "0x6001260")]
	[Address(RVA = "0xBE1DB8", Offset = "0xBE1DB8", VA = "0xBE1DB8")]
	private void UpdateCounterLabel()
	{
	}

	[Token(Token = "0x6001261")]
	[Address(RVA = "0xBE1E9C", Offset = "0xBE1E9C", VA = "0xBE1E9C")]
	private void UpdateCurrencyIcons()
	{
	}

	[Token(Token = "0x6001262")]
	[Address(RVA = "0xBE20E8", Offset = "0xBE20E8", VA = "0xBE20E8", Slot = "15")]
	public void Initialize()
	{
	}

	[Token(Token = "0x6001263")]
	[Address(RVA = "0xBE22EC", Offset = "0xBE22EC", VA = "0xBE22EC")]
	public void Reset()
	{
	}

	[Token(Token = "0x6001264")]
	[Address(RVA = "0xBE247C", Offset = "0xBE247C", VA = "0xBE247C")]
	public void Activate()
	{
	}

	[Token(Token = "0x6001265")]
	[Address(RVA = "0xBE2660", Offset = "0xBE2660", VA = "0xBE2660", Slot = "16")]
	public virtual void SlotActivated()
	{
	}

	[Token(Token = "0x6001266")]
	[Address(RVA = "0xBE2664", Offset = "0xBE2664", VA = "0xBE2664")]
	public void UpdateItemPositions()
	{
	}

	[Token(Token = "0x6001267")]
	[Address(RVA = "0xBE2914", Offset = "0xBE2914", VA = "0xBE2914")]
	public void CheckForNullItems()
	{
	}

	[Token(Token = "0x6001268")]
	[Address(RVA = "0xBE1004", Offset = "0xBE1004", VA = "0xBE1004")]
	public void MakeItemsSnapToTargets()
	{
	}

	[Token(Token = "0x6001269")]
	[Address(RVA = "0xBE24D4", Offset = "0xBE24D4", VA = "0xBE24D4")]
	private void UpdateItemVisibilities()
	{
	}

	[Token(Token = "0x600126A")]
	[Address(RVA = "0xBE25C4", Offset = "0xBE25C4", VA = "0xBE25C4")]
	public void MakeAllItemsEmissive()
	{
	}

	[Token(Token = "0x600126B")]
	[Address(RVA = "0xBE2460", Offset = "0xBE2460", VA = "0xBE2460")]
	public void Snap()
	{
	}

	[Token(Token = "0x600126C")]
	[Address(RVA = "0xBE2B1C", Offset = "0xBE2B1C", VA = "0xBE2B1C")]
	public bool ItemHasReachedTarget()
	{
		return default(bool);
	}

	[Token(Token = "0x600126D")]
	[Address(RVA = "0xBE2CA8", Offset = "0xBE2CA8", VA = "0xBE2CA8")]
	public bool ContainsType(Stashable item)
	{
		return default(bool);
	}

	[Token(Token = "0x600126E")]
	[Address(RVA = "0xBE2CF4", Offset = "0xBE2CF4", VA = "0xBE2CF4", Slot = "17")]
	public virtual bool CanStash(Stashable item)
	{
		return default(bool);
	}

	[Token(Token = "0x600126F")]
	[Address(RVA = "0xBE2D48", Offset = "0xBE2D48", VA = "0xBE2D48")]
	public void UpdateSmoothing()
	{
	}

	[Token(Token = "0x6001270")]
	[Address(RVA = "0xBE0DE0", Offset = "0xBE0DE0", VA = "0xBE0DE0")]
	public void UpdateSlotTargetPos(Vector3 localPos, Quaternion localRot)
	{
	}

	[Token(Token = "0x6001271")]
	[Address(RVA = "0xBE2E98", Offset = "0xBE2E98", VA = "0xBE2E98")]
	public void SetOverrideTargetSlotPos(Vector3 localPos, Quaternion localRot)
	{
	}

	[Token(Token = "0x6001272")]
	[Address(RVA = "0xBE2F9C", Offset = "0xBE2F9C", VA = "0xBE2F9C")]
	public void ResetOverrideTargetSlotPos()
	{
	}

	[Token(Token = "0x6001273")]
	[Address(RVA = "0xBE2FA4", Offset = "0xBE2FA4", VA = "0xBE2FA4")]
	public Stashable FirstItemInList()
	{
		return null;
	}

	[Token(Token = "0x6001274")]
	[Address(RVA = "0xBE0BF4", Offset = "0xBE0BF4", VA = "0xBE0BF4")]
	public void AddItemToList(Stashable item)
	{
	}

	[Token(Token = "0x6001275")]
	[Address(RVA = "0xBE3060", Offset = "0xBE3060", VA = "0xBE3060", Slot = "18")]
	public virtual void OnItemAdded(Stashable item)
	{
	}

	[Token(Token = "0x6001276")]
	[Address(RVA = "0xBE1318", Offset = "0xBE1318", VA = "0xBE1318")]
	public bool TryRemoveItemFromList(Stashable item)
	{
		return default(bool);
	}

	[Token(Token = "0x6001277")]
	[Address(RVA = "0xBE3064", Offset = "0xBE3064", VA = "0xBE3064", Slot = "19")]
	public virtual void OnItemRemoved(Stashable item)
	{
	}

	[Token(Token = "0x6001278")]
	[Address(RVA = "0xBE3068", Offset = "0xBE3068", VA = "0xBE3068")]
	public void DestroyAllItems()
	{
	}

	[Token(Token = "0x6001279")]
	[Address(RVA = "0xBE3198", Offset = "0xBE3198", VA = "0xBE3198", Slot = "20")]
	public virtual void UpdateHoverStatus(bool isHovering)
	{
	}

	[Token(Token = "0x600127A")]
	[Address(RVA = "0xBE3284", Offset = "0xBE3284", VA = "0xBE3284")]
	public void CommitMaterialChanges()
	{
	}

	[Token(Token = "0x600127B")]
	[Address(RVA = "0xBE3324", Offset = "0xBE3324", VA = "0xBE3324")]
	public List<SaveID> GetSaveIDsOfItems()
	{
		return null;
	}

	[Token(Token = "0x600127C")]
	[Address(RVA = "0xBE37B8", Offset = "0xBE37B8", VA = "0xBE37B8", Slot = "4")]
	public int GetCurrentPriority()
	{
		return default(int);
	}

	[Token(Token = "0x600127D")]
	[Address(RVA = "0xBE37C0", Offset = "0xBE37C0", VA = "0xBE37C0", Slot = "5")]
	public bool IsExtraSticky()
	{
		return default(bool);
	}

	[Token(Token = "0x600127E")]
	[Address(RVA = "0xBE37C8", Offset = "0xBE37C8", VA = "0xBE37C8", Slot = "21")]
	public PlayerHand GetHeldByHand()
	{
		return null;
	}

	[Token(Token = "0x600127F")]
	[Address(RVA = "0xBE37D0", Offset = "0xBE37D0", VA = "0xBE37D0", Slot = "7")]
	public void StartGrabbing(PlayerHand hand, Vector3 grabPositionOnItem, OrientedPoint handAttachPoint)
	{
	}

	[Token(Token = "0x6001280")]
	[Address(RVA = "0xBE3A20", Offset = "0xBE3A20", VA = "0xBE3A20", Slot = "8")]
	public void StopGrabbing(PlayerHand hand, Vector3 grabPositionOnItem, OrientedPoint attachPoint)
	{
	}

	[Token(Token = "0x6001281")]
	[Address(RVA = "0xBE3A70", Offset = "0xBE3A70", VA = "0xBE3A70", Slot = "9")]
	public void UpdateGrabbing(PlayerHand hand, Vector3 grabPositionOnItem, OrientedPoint attachPoint)
	{
	}

	[Token(Token = "0x6001282")]
	[Address(RVA = "0xBE3AC0", Offset = "0xBE3AC0", VA = "0xBE3AC0", Slot = "10")]
	public bool IsEnabled()
	{
		return default(bool);
	}

	[Token(Token = "0x6001283")]
	[Address(RVA = "0xBE3B30", Offset = "0xBE3B30", VA = "0xBE3B30", Slot = "22")]
	public bool HaveChildGrabbables()
	{
		return default(bool);
	}

	[Token(Token = "0x6001284")]
	[Address(RVA = "0xBE3B38", Offset = "0xBE3B38", VA = "0xBE3B38", Slot = "11")]
	public bool ShouldConsumeGrab(Collider collider)
	{
		return default(bool);
	}

	[Token(Token = "0x6001285")]
	[Address(RVA = "0xBE3B40", Offset = "0xBE3B40", VA = "0xBE3B40", Slot = "12")]
	public void Touch()
	{
	}

	[Token(Token = "0x6001286")]
	[Address(RVA = "0xBE3B44", Offset = "0xBE3B44", VA = "0xBE3B44", Slot = "23")]
	public virtual GrabbableOutline GetOutline()
	{
		return null;
	}

	[Token(Token = "0x6001287")]
	[Address(RVA = "0xBE3B4C", Offset = "0xBE3B4C", VA = "0xBE3B4C", Slot = "13")]
	public float GetDelayBeforeGrab()
	{
		return default(float);
	}

	[Token(Token = "0x6001288")]
	[Address(RVA = "0xBE3B54", Offset = "0xBE3B54", VA = "0xBE3B54", Slot = "14")]
	public Collider[] GetColliders()
	{
		return null;
	}

	[Token(Token = "0x6001289")]
	[Address(RVA = "0xBE1BA8", Offset = "0xBE1BA8", VA = "0xBE1BA8")]
	public InventorySlot()
	{
	}
}
[Token(Token = "0x20002F9")]
public class NeatVR_Fade : MonoBehaviour
{
	[Token(Token = "0x20002FA")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x972C0C", Offset = "0x972C0C")]
	private sealed class <>c__DisplayClass18_0
	{
		[Token(Token = "0x4001241")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Color fadeToColor;

		[Token(Token = "0x4001242")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Action callback;

		[Token(Token = "0x6001295")]
		[Address(RVA = "0xD62998", Offset = "0xD62998", VA = "0xD62998")]
		public <>c__DisplayClass18_0()
		{
		}

		[Token(Token = "0x6001296")]
		[Address(RVA = "0xD62CA0", Offset = "0xD62CA0", VA = "0xD62CA0")]
		internal void <FaceFade>b__0()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x20002FB")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x972C1C", Offset = "0x972C1C")]
	private sealed class <>c
	{
		[Token(Token = "0x4001243")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4001244")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static DOGetter<Color> <>9__18_1;

		[Token(Token = "0x4001245")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static DOSetter<Color> <>9__18_2;

		[Token(Token = "0x6001298")]
		[Address(RVA = "0xD62B90", Offset = "0xD62B90", VA = "0xD62B90")]
		public <>c()
		{
		}

		[Token(Token = "0x6001299")]
		[Address(RVA = "0xD62B98", Offset = "0xD62B98", VA = "0xD62B98")]
		internal Color <FaceFade>b__18_1()
		{
			return default(Color);
		}

		[Token(Token = "0x600129A")]
		[Address(RVA = "0xD62C04", Offset = "0xD62C04", VA = "0xD62C04")]
		internal void <FaceFade>b__18_2(Color x)
		{
		}
	}

	[Token(Token = "0x20002FC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x972C2C", Offset = "0x972C2C")]
	private sealed class <>c__DisplayClass20_0
	{
		[Token(Token = "0x4001246")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Color fadeToColor;

		[Token(Token = "0x600129B")]
		[Address(RVA = "0xD629A0", Offset = "0xD629A0", VA = "0xD629A0")]
		public <>c__DisplayClass20_0()
		{
		}

		[Token(Token = "0x600129C")]
		[Address(RVA = "0xD62DD4", Offset = "0xD62DD4", VA = "0xD62DD4")]
		internal void <MonitorFade>b__0()
		{
		}
	}

	[Token(Token = "0x4001234")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static NeatVR_Fade Instance;

	[Token(Token = "0x4001235")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Color currentColor;

	[Token(Token = "0x4001236")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Color targetColor;

	[Token(Token = "0x4001237")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Color deltaColor;

	[Token(Token = "0x4001238")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Shader fadeShader;

	[Token(Token = "0x4001239")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Image monitorFade;

	[Token(Token = "0x400123A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public MeshRenderer faceFaderRenderer;

	[Token(Token = "0x400123B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static Color LoadingColor;

	[Token(Token = "0x400123C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static Material fadeMaterial;

	[Token(Token = "0x400123D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private static int fadeMaterialColorID;

	[Token(Token = "0x400123E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private static int faceFaderID;

	[Token(Token = "0x400123F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private static Tweener faceFadeTweener;

	[Token(Token = "0x4001240")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private static Tweener monitorFadeTweener;

	[Token(Token = "0x600128B")]
	[Address(RVA = "0xD61BFC", Offset = "0xD61BFC", VA = "0xD61BFC")]
	public static void FadeToColor(Color newColor, float duration, [Optional] Action callback)
	{
	}

	[Token(Token = "0x600128C")]
	[Address(RVA = "0xD622BC", Offset = "0xD622BC", VA = "0xD622BC")]
	public void OnStartFade(Color newColor, float duration)
	{
	}

	[Token(Token = "0x600128D")]
	[Address(RVA = "0xD62324", Offset = "0xD62324", VA = "0xD62324")]
	private void Awake()
	{
	}

	[Token(Token = "0x600128E")]
	[Address(RVA = "0xD62394", Offset = "0xD62394", VA = "0xD62394")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600128F")]
	[Address(RVA = "0xD625F8", Offset = "0xD625F8", VA = "0xD625F8")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6001290")]
	[Address(RVA = "0xD626F8", Offset = "0xD626F8", VA = "0xD626F8")]
	private void OnPostRender()
	{
	}

	[Token(Token = "0x6001291")]
	[Address(RVA = "0xD61EF0", Offset = "0xD61EF0", VA = "0xD61EF0")]
	public static void FaceFade(Color fadeToColor, float fadeTime, Action callback)
	{
	}

	[Token(Token = "0x6001292")]
	[Address(RVA = "0xD61CD0", Offset = "0xD61CD0", VA = "0xD61CD0")]
	public static void MonitorFade(Color fadeToColor, float fadeTime)
	{
	}

	[Token(Token = "0x6001293")]
	[Address(RVA = "0xD629A8", Offset = "0xD629A8", VA = "0xD629A8")]
	public NeatVR_Fade()
	{
	}
}
[Token(Token = "0x20002FD")]
public class PlayerHand : MonoBehaviour, IDebugInfo
{
	[Token(Token = "0x20002FE")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x972C3C", Offset = "0x972C3C")]
	private sealed class <FadeOutInfusionColor>d__184 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40012A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40012A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40012A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PlayerHand <>4__this;

		[Token(Token = "0x40012A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <timeElapsed>5__2;

		[Token(Token = "0x40012A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <duration>5__3;

		[Token(Token = "0x170001F1")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60012F7")]
			[Address(RVA = "0xD905A4", Offset = "0xD905A4", VA = "0xD905A4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001F2")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60012F9")]
			[Address(RVA = "0xD9060C", Offset = "0xD9060C", VA = "0xD9060C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60012F4")]
		[Address(RVA = "0xD8FDC0", Offset = "0xD8FDC0", VA = "0xD8FDC0")]
		[DebuggerHidden]
		public <FadeOutInfusionColor>d__184(int <>1__state)
		{
		}

		[Token(Token = "0x60012F5")]
		[Address(RVA = "0xD903CC", Offset = "0xD903CC", VA = "0xD903CC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60012F6")]
		[Address(RVA = "0xD903D0", Offset = "0xD903D0", VA = "0xD903D0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60012F8")]
		[Address(RVA = "0xD905AC", Offset = "0xD905AC", VA = "0xD905AC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x20002FF")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x972C4C", Offset = "0x972C4C")]
	private sealed class <>c
	{
		[Token(Token = "0x40012A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x40012A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Action <>9__190_0;

		[Token(Token = "0x40012A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static Action<float, float> <>9__190_1;

		[Token(Token = "0x40012AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static Action<float> <>9__190_2;

		[Token(Token = "0x40012AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public static Action<float> <>9__190_3;

		[Token(Token = "0x60012FB")]
		[Address(RVA = "0xD903B4", Offset = "0xD903B4", VA = "0xD903B4")]
		public <>c()
		{
		}

		[Token(Token = "0x60012FC")]
		[Address(RVA = "0xD903BC", Offset = "0xD903BC", VA = "0xD903BC")]
		internal void <.ctor>b__190_0()
		{
		}

		[Token(Token = "0x60012FD")]
		[Address(RVA = "0xD903C0", Offset = "0xD903C0", VA = "0xD903C0")]
		internal void <.ctor>b__190_1(float <p0>, float <p1>)
		{
		}

		[Token(Token = "0x60012FE")]
		[Address(RVA = "0xD903C4", Offset = "0xD903C4", VA = "0xD903C4")]
		internal void <.ctor>b__190_2(float <p0>)
		{
		}

		[Token(Token = "0x60012FF")]
		[Address(RVA = "0xD903C8", Offset = "0xD903C8", VA = "0xD903C8")]
		internal void <.ctor>b__190_3(float <p0>)
		{
		}
	}

	[Token(Token = "0x4001247")]
	private const float TOOL_USE_MAX_SPEED = 4f;

	[Token(Token = "0x4001248")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[HideInInspector]
	public bool isDominantHand;

	[Token(Token = "0x4001249")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Transform rootTransform;

	[Token(Token = "0x400124A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Transform modelRootTransform;

	[Token(Token = "0x400124B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private PlayerHandAnimator m_playerHandAnimator;

	[Token(Token = "0x400124C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform grabbableAttachSpot;

	[Token(Token = "0x400124D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Transform gemTransform;

	[Token(Token = "0x400124E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Transform braceletAttachPoint;

	[Token(Token = "0x400124F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public MeshRenderer braceletMesh;

	[Token(Token = "0x4001250")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x97ADEC", Offset = "0x97ADEC")]
	private bool <HasBracelet>k__BackingField;

	[Token(Token = "0x4001251")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Transform finger1;

	[Token(Token = "0x4001252")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Transform finger2;

	[Token(Token = "0x4001253")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Transform finger3;

	[Token(Token = "0x4001254")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Transform finger4;

	[Token(Token = "0x4001255")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	private Transform inventoryTransform;

	[Token(Token = "0x4001256")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	private SmoothLerper smoothLerper;

	[Token(Token = "0x4001257")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[SerializeField]
	private Transform smoothLerperTransform;

	[Token(Token = "0x4001258")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[SerializeField]
	public Transform menuPointer;

	[Token(Token = "0x4001259")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[SerializeField]
	public Transform grabDirection;

	[Token(Token = "0x400125A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public LocomotionArc locomotionArc;

	[Token(Token = "0x400125B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[SerializeField]
	private GrabbableTracker grabbableTracker;

	[Token(Token = "0x400125C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private IGrabbable currentGrabbable;

	[Token(Token = "0x400125D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private IGrabbable currentGrabbableInProgress;

	[Token(Token = "0x400125E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private Tool_Base currentTool;

	[Token(Token = "0x400125F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private float timeLeftBeforeGrab;

	[Token(Token = "0x4001260")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Color DisabledGrabbableColor;

	[Token(Token = "0x4001261")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	private bool isHoldingPolaroid;

	[Token(Token = "0x4001262")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private NeatVR_Controller controller;

	[Token(Token = "0x4001263")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	[HideInInspector]
	public PlayerHand otherHand;

	[Token(Token = "0x4001264")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private GrabbableOutline hoveredGrabbable;

	[Token(Token = "0x4001265")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private Vector3 oriVelocity;

	[Token(Token = "0x4001266")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
	public float oriVelMag;

	[Token(Token = "0x4001267")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private Vector3 oriAcceleration;

	[Token(Token = "0x4001268")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
	public float oriAccMag;

	[Token(Token = "0x4001269")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	public float grabRadius;

	[Token(Token = "0x400126A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
	public OrientedPoint trackedAttachPointLocal;

	[Token(Token = "0x400126B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	private PlayerHandAnimator animator;

	[Token(Token = "0x400126C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	private Pettable currentPettable;

	[Token(Token = "0x400126D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	public Action OnOpenInventoryEvent;

	[Token(Token = "0x400126E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	internal bool hasInventoryOpen;

	[Token(Token = "0x400126F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x15C")]
	[SerializeField]
	private float shakeAngleThreshold;

	[Token(Token = "0x4001270")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	[SerializeField]
	private float shakeIntensityThreshold;

	[Token(Token = "0x4001275")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	private MaterialPropertyBlock mpbMenu;

	[Token(Token = "0x4001276")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	private MeshRenderer menuPointerRenderer;

	[Token(Token = "0x4001277")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	private float delayUntilRelease;

	[Token(Token = "0x4001278")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	private UIButton currentButton;

	[Token(Token = "0x4001279")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	private bool didPressPushButton;

	[Token(Token = "0x400127A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1AC")]
	private Vector3 m_currentGrabPosision;

	[Token(Token = "0x400127B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	private IGrabbable m_currentGrabbableInRange;

	[Token(Token = "0x400127C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	private float[] m_curlData;

	[Token(Token = "0x400127D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
	private bool m_hasCurlData;

	[Token(Token = "0x400127E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1CC")]
	private RaycastHit m_hitInfo;

	[Token(Token = "0x400127F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
	private CreaturePettingEvent pettingEvent;

	[Token(Token = "0x4001280")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
	private ShakeTracker shakeTrackerHorizontal;

	[Token(Token = "0x4001281")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x234")]
	private ShakeTracker shakeTrackerVertical;

	[Token(Token = "0x4001282")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x268")]
	private bool initialized;

	[Token(Token = "0x4001283")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x270")]
	private Collider[] collidersInRange;

	[Token(Token = "0x4001284")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x278")]
	private OptimizedCollection<PotentialGrabbable> grabbablesInRange;

	[Token(Token = "0x4001285")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x288")]
	public Renderer handRenderer;

	[Token(Token = "0x4001286")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x290")]
	private MaterialPropertyBlock gloveGemPropertyBlock;

	[Token(Token = "0x4001287")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x298")]
	private bool menuWasOpen;

	[Token(Token = "0x4001288")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x299")]
	private bool isReactingToGem;

	[Token(Token = "0x4001289")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29A")]
	public bool isAbsorbingWallet;

	[Token(Token = "0x400128A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A0")]
	private IGloveBlobReactable objectForBlobReaction;

	[Token(Token = "0x400128B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A8")]
	private bool controllerReady;

	[Token(Token = "0x400128C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2AC")]
	private Vector3 currentVelocity;

	[Token(Token = "0x400128D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2B8")]
	private Vector3 currentAngularVelocity;

	[Token(Token = "0x400128E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static int AttractStateBlendId;

	[Token(Token = "0x400128F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public static int TargetLocationId;

	[Token(Token = "0x4001290")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static int TargetCenterColorId;

	[Token(Token = "0x4001291")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public static int TargetInnerColorId;

	[Token(Token = "0x4001292")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public static int TargetOuterColorId;

	[Token(Token = "0x4001293")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public static int InfusionAmountId;

	[Token(Token = "0x4001294")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C8")]
	[SerializeField]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x97AECC", Offset = "0x97AECC")]
	private Glove m_glove;

	[Token(Token = "0x4001295")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D0")]
	[SerializeField]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x97AF18", Offset = "0x97AF18")]
	private NeatAudioPlayer m_feedbackAudioPlayer;

	[Token(Token = "0x4001296")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D8")]
	[SerializeField]
	private NeatAudioCue m_startFeedbackSound;

	[Token(Token = "0x4001297")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2E0")]
	[SerializeField]
	private NeatAudioCue m_feedbackLoopSound;

	[Token(Token = "0x4001298")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2E8")]
	[SerializeField]
	private NeatAudioPlayer grabAudioPlayer;

	[Token(Token = "0x4001299")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2F0")]
	[SerializeField]
	private NeatAudioCue grabAudioCue;

	[Token(Token = "0x400129A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2F8")]
	[SerializeField]
	private NeatAudioCue releaseAudioCue;

	[Token(Token = "0x400129B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x300")]
	private bool m_handShouldBeVisibleWhileGrabbing;

	[Token(Token = "0x400129C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public static readonly int MUCHNESS;

	[Token(Token = "0x400129D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x301")]
	private bool inputFocus;

	[Token(Token = "0x400129E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x302")]
	private bool handShouldBeVisible;

	[Token(Token = "0x400129F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x303")]
	private bool isAnimatingInfusion;

	[Token(Token = "0x40012A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x304")]
	private float currAttractState;

	[Token(Token = "0x40012A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x308")]
	private float currGemAttractState;

	[Token(Token = "0x170001E3")]
	public PlayerHandAnimator PlayerHandAnimator
	{
		[Token(Token = "0x600129D")]
		[Address(RVA = "0xD88340", Offset = "0xD88340", VA = "0xD88340")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170001E4")]
	public bool HasBracelet
	{
		[Token(Token = "0x600129E")]
		[Address(RVA = "0xD88348", Offset = "0xD88348", VA = "0xD88348")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x98DF74", Offset = "0x98DF74")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600129F")]
		[Address(RVA = "0xD88350", Offset = "0xD88350", VA = "0xD88350")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x98DF84", Offset = "0x98DF84")]
		private set
		{
		}
	}

	[Token(Token = "0x170001E5")]
	public SmoothLerper SmoothLerper
	{
		[Token(Token = "0x60012A0")]
		[Address(RVA = "0xD8835C", Offset = "0xD8835C", VA = "0xD8835C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170001E6")]
	public NeatVR_Controller Controller
	{
		[Token(Token = "0x60012A9")]
		[Address(RVA = "0xD888A4", Offset = "0xD888A4", VA = "0xD888A4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170001E7")]
	public bool IsRightHand
	{
		[Token(Token = "0x60012AA")]
		[Address(RVA = "0xD888AC", Offset = "0xD888AC", VA = "0xD888AC")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170001E8")]
	public bool IsGrabbingSomething
	{
		[Token(Token = "0x60012AB")]
		[Address(RVA = "0xD888C8", Offset = "0xD888C8", VA = "0xD888C8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170001E9")]
	public bool IsTryingToGrabSomething
	{
		[Token(Token = "0x60012AC")]
		[Address(RVA = "0xD888D8", Offset = "0xD888D8", VA = "0xD888D8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170001EA")]
	public bool ControllerIsReadyAndTracking
	{
		[Token(Token = "0x60012AD")]
		[Address(RVA = "0xD888E8", Offset = "0xD888E8", VA = "0xD888E8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170001EB")]
	public Vector3 AngularVelocity
	{
		[Token(Token = "0x60012AE")]
		[Address(RVA = "0xD888F0", Offset = "0xD888F0", VA = "0xD888F0")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x170001EC")]
	public Vector3 Velocity
	{
		[Token(Token = "0x60012AF")]
		[Address(RVA = "0xD88900", Offset = "0xD88900", VA = "0xD88900")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x170001ED")]
	public bool IsMovingTooFastForToolUse
	{
		[Token(Token = "0x60012B0")]
		[Address(RVA = "0xD88910", Offset = "0xD88910", VA = "0xD88910")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170001EE")]
	public GemType GloveType
	{
		[Token(Token = "0x60012B2")]
		[Address(RVA = "0xD8895C", Offset = "0xD8895C", VA = "0xD8895C")]
		get
		{
			return default(GemType);
		}
	}

	[Token(Token = "0x170001EF")]
	private bool IsHoldingGrabbable
	{
		[Token(Token = "0x60012D5")]
		[Address(RVA = "0xD8EA4C", Offset = "0xD8EA4C", VA = "0xD8EA4C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170001F0")]
	private bool IsHoldingTool
	{
		[Token(Token = "0x60012D6")]
		[Address(RVA = "0xD8DB60", Offset = "0xD8DB60", VA = "0xD8DB60")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x14000026")]
	public event Action OnShake
	{
		[Token(Token = "0x60012A1")]
		[Address(RVA = "0xD88364", Offset = "0xD88364", VA = "0xD88364")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x98DF94", Offset = "0x98DF94")]
		add
		{
		}
		[Token(Token = "0x60012A2")]
		[Address(RVA = "0xD8840C", Offset = "0xD8840C", VA = "0xD8840C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x98DFA4", Offset = "0x98DFA4")]
		remove
		{
		}
	}

	[Token(Token = "0x14000027")]
	public event Action<float, float> OnShakeHorizontal
	{
		[Token(Token = "0x60012A3")]
		[Address(RVA = "0xD884B4", Offset = "0xD884B4", VA = "0xD884B4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x98DFB4", Offset = "0x98DFB4")]
		add
		{
		}
		[Token(Token = "0x60012A4")]
		[Address(RVA = "0xD8855C", Offset = "0xD8855C", VA = "0xD8855C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x98DFC4", Offset = "0x98DFC4")]
		remove
		{
		}
	}

	[Token(Token = "0x14000028")]
	public event Action<float> OnShakeUp
	{
		[Token(Token = "0x60012A5")]
		[Address(RVA = "0xD88604", Offset = "0xD88604", VA = "0xD88604")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x98DFD4", Offset = "0x98DFD4")]
		add
		{
		}
		[Token(Token = "0x60012A6")]
		[Address(RVA = "0xD886AC", Offset = "0xD886AC", VA = "0xD886AC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x98DFE4", Offset = "0x98DFE4")]
		remove
		{
		}
	}

	[Token(Token = "0x14000029")]
	public event Action<float> OnShakeDown
	{
		[Token(Token = "0x60012A7")]
		[Address(RVA = "0xD88754", Offset = "0xD88754", VA = "0xD88754")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x98DFF4", Offset = "0x98DFF4")]
		add
		{
		}
		[Token(Token = "0x60012A8")]
		[Address(RVA = "0xD887FC", Offset = "0xD887FC", VA = "0xD887FC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x98E004", Offset = "0x98E004")]
		remove
		{
		}
	}

	[Token(Token = "0x60012B1")]
	[Address(RVA = "0xD88954", Offset = "0xD88954", VA = "0xD88954")]
	public Glove GetGlove()
	{
		return null;
	}

	[Token(Token = "0x60012B3")]
	[Address(RVA = "0xD88978", Offset = "0xD88978", VA = "0xD88978")]
	public bool HasGloveAbility(GemType abilityType)
	{
		return default(bool);
	}

	[Token(Token = "0x60012B4")]
	[Address(RVA = "0xD88A64", Offset = "0xD88A64", VA = "0xD88A64")]
	public void Init()
	{
	}

	[Token(Token = "0x60012B5")]
	[Address(RVA = "0xD890A0", Offset = "0xD890A0", VA = "0xD890A0")]
	public OrientedPoint GetAttachPointWorld()
	{
		return default(OrientedPoint);
	}

	[Token(Token = "0x60012B6")]
	[Address(RVA = "0xD89164", Offset = "0xD89164", VA = "0xD89164")]
	public void EnableSmoothing(bool enable)
	{
	}

	[Token(Token = "0x60012B7")]
	[Address(RVA = "0xD88F40", Offset = "0xD88F40", VA = "0xD88F40")]
	private void InitMenuPointer()
	{
	}

	[Token(Token = "0x60012B8")]
	[Address(RVA = "0xD88E40", Offset = "0xD88E40", VA = "0xD88E40")]
	private void InitShakeTrackers()
	{
	}

	[Token(Token = "0x60012B9")]
	[Address(RVA = "0xD8920C", Offset = "0xD8920C", VA = "0xD8920C")]
	public void InitializeController(bool rightHand)
	{
	}

	[Token(Token = "0x60012BA")]
	[Address(RVA = "0xD89574", Offset = "0xD89574", VA = "0xD89574")]
	public void InitializeDebugController(bool rightHand)
	{
	}

	[Token(Token = "0x60012BB")]
	[Address(RVA = "0xD89394", Offset = "0xD89394", VA = "0xD89394")]
	private void InitControllerOffset()
	{
	}

	[Token(Token = "0x60012BC")]
	[Address(RVA = "0xD8963C", Offset = "0xD8963C", VA = "0xD8963C")]
	private OrientedPoint GetTrackedAttachPointLocal()
	{
		return default(OrientedPoint);
	}

	[Token(Token = "0x60012BD")]
	[Address(RVA = "0xD89724", Offset = "0xD89724", VA = "0xD89724")]
	private Transform GetControllerTransform()
	{
		return null;
	}

	[Token(Token = "0x60012BE")]
	[Address(RVA = "0xD897D4", Offset = "0xD897D4", VA = "0xD897D4")]
	public void UpdateHandPoses()
	{
	}

	[Token(Token = "0x60012BF")]
	[Address(RVA = "0xD89820", Offset = "0xD89820", VA = "0xD89820")]
	public Vector3 GetVelocityAtPoint(Vector3 worldPos)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60012C0")]
	[Address(RVA = "0xD898BC", Offset = "0xD898BC", VA = "0xD898BC")]
	public void SetMenuPointerVisibility(bool visible)
	{
	}

	[Token(Token = "0x60012C1")]
	[Address(RVA = "0xD8990C", Offset = "0xD8990C", VA = "0xD8990C")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x60012C2")]
	[Address(RVA = "0xD89E7C", Offset = "0xD89E7C", VA = "0xD89E7C")]
	private void Update()
	{
	}

	[Token(Token = "0x60012C3")]
	[Address(RVA = "0xD8A324", Offset = "0xD8A324", VA = "0xD8A324")]
	private void UpdateFingerTracking()
	{
	}

	[Token(Token = "0x60012C4")]
	[Address(RVA = "0xD8AC9C", Offset = "0xD8AC9C", VA = "0xD8AC9C")]
	private void UpdateGameInput()
	{
	}

	[Token(Token = "0x60012C5")]
	[Address(RVA = "0xD8DF78", Offset = "0xD8DF78", VA = "0xD8DF78")]
	private void DrawOutline(Camera c)
	{
	}

	[Token(Token = "0x60012C6")]
	[Address(RVA = "0xD8DD0C", Offset = "0xD8DD0C", VA = "0xD8DD0C")]
	private void UpdateTurning(bool smoothTurningEnabled)
	{
	}

	[Token(Token = "0x60012C7")]
	[Address(RVA = "0xD8E1FC", Offset = "0xD8E1FC", VA = "0xD8E1FC")]
	public void UpdatePositionOfHeldItem()
	{
	}

	[Token(Token = "0x60012C8")]
	[Address(RVA = "0xD8E084", Offset = "0xD8E084", VA = "0xD8E084")]
	private void UpdateSmoothTurning()
	{
	}

	[Token(Token = "0x60012C9")]
	[Address(RVA = "0xD8E12C", Offset = "0xD8E12C", VA = "0xD8E12C")]
	private void UpdateSnapTurning(NeatVR_Controller.InputAction inputAction)
	{
	}

	[Token(Token = "0x60012CA")]
	[Address(RVA = "0xD8DBD0", Offset = "0xD8DBD0", VA = "0xD8DBD0")]
	private float DelayBeforeReleasingHeldObject()
	{
		return default(float);
	}

	[Token(Token = "0x60012CB")]
	[Address(RVA = "0xD8DD50", Offset = "0xD8DD50", VA = "0xD8DD50")]
	private bool IsAllowedToTeleport()
	{
		return default(bool);
	}

	[Token(Token = "0x60012CC")]
	[Address(RVA = "0xD8DE4C", Offset = "0xD8DE4C", VA = "0xD8DE4C")]
	private bool IsAllowedToOpenInventory()
	{
		return default(bool);
	}

	[Token(Token = "0x60012CD")]
	[Address(RVA = "0xD8A434", Offset = "0xD8A434", VA = "0xD8A434")]
	private bool IsUsingMenu()
	{
		return default(bool);
	}

	[Token(Token = "0x60012CE")]
	[Address(RVA = "0xD8E3EC", Offset = "0xD8E3EC", VA = "0xD8E3EC")]
	private bool IsHoldingPolaroid()
	{
		return default(bool);
	}

	[Token(Token = "0x60012CF")]
	[Address(RVA = "0xD8E3F4", Offset = "0xD8E3F4", VA = "0xD8E3F4")]
	public void OnGrabPolaroid()
	{
	}

	[Token(Token = "0x60012D0")]
	[Address(RVA = "0xD8E400", Offset = "0xD8E400", VA = "0xD8E400")]
	public void OnDropPolaroid()
	{
	}

	[Token(Token = "0x60012D1")]
	[Address(RVA = "0xD8A52C", Offset = "0xD8A52C", VA = "0xD8A52C")]
	private void UpdateMenuInput()
	{
	}

	[Token(Token = "0x60012D2")]
	[Address(RVA = "0xD8A9A4", Offset = "0xD8A9A4", VA = "0xD8A9A4")]
	private void UpdatePolaroidInput()
	{
	}

	[Token(Token = "0x60012D3")]
	[Address(RVA = "0xD8A8E0", Offset = "0xD8A8E0", VA = "0xD8A8E0")]
	private void TryDeselectAndClearButton()
	{
	}

	[Token(Token = "0x60012D4")]
	[Address(RVA = "0xD8E408", Offset = "0xD8E408", VA = "0xD8E408")]
	private void UpdateUIButtonInput(bool overrideDistance = false)
	{
	}

	[Token(Token = "0x60012D7")]
	[Address(RVA = "0xD8E31C", Offset = "0xD8E31C", VA = "0xD8E31C")]
	private void SnapTurn(bool right)
	{
	}

	[Token(Token = "0x60012D8")]
	[Address(RVA = "0xD89C94", Offset = "0xD89C94", VA = "0xD89C94")]
	private void DetectShaking()
	{
	}

	[Token(Token = "0x60012D9")]
	[Address(RVA = "0xD8EA5C", Offset = "0xD8EA5C", VA = "0xD8EA5C")]
	public void OnGrabItem()
	{
	}

	[Token(Token = "0x60012DA")]
	[Address(RVA = "0xD89ACC", Offset = "0xD89ACC", VA = "0xD89ACC")]
	private void UpdatePhysicsVectors()
	{
	}

	[Token(Token = "0x60012DB")]
	[Address(RVA = "0xD8CDEC", Offset = "0xD8CDEC", VA = "0xD8CDEC")]
	public void StopGrabbing()
	{
	}

	[Token(Token = "0x60012DC")]
	[Address(RVA = "0xD8ECB8", Offset = "0xD8ECB8", VA = "0xD8ECB8")]
	private void AdjustHandToMatchGrabbable(Grabbable grabbable, Vector3 grabPosOnItem)
	{
	}

	[Token(Token = "0x60012DD")]
	[Address(RVA = "0xD8F2E0", Offset = "0xD8F2E0", VA = "0xD8F2E0")]
	[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x98E014", Offset = "0x98E014")]
	private void DrawDebugLine(Vector3 start, Vector3 end, Color color)
	{
	}

	[Token(Token = "0x60012DE")]
	[Address(RVA = "0xD8D85C", Offset = "0xD8D85C", VA = "0xD8D85C")]
	private bool TryToGrabLargeObject(IGrabbable grabbable, out float delayBeforeGrab)
	{
		return default(bool);
	}

	[Token(Token = "0x60012DF")]
	[Address(RVA = "0xD8CF60", Offset = "0xD8CF60", VA = "0xD8CF60")]
	private bool TryToGrabObject(IGrabbable grabbable, Vector3 grabPosOnItem)
	{
		return default(bool);
	}

	[Token(Token = "0x60012E0")]
	[Address(RVA = "0xD8F3D0", Offset = "0xD8F3D0", VA = "0xD8F3D0")]
	public void ForceGrabObject(Grabbable grabbable)
	{
	}

	[Token(Token = "0x60012E1")]
	[Address(RVA = "0xD88E20", Offset = "0xD88E20", VA = "0xD88E20")]
	public void SetHandVisibility(bool visible)
	{
	}

	[Token(Token = "0x60012E2")]
	[Address(RVA = "0xD89A74", Offset = "0xD89A74", VA = "0xD89A74")]
	private void ToggleRenderers(bool enable)
	{
	}

	[Token(Token = "0x60012E3")]
	[Address(RVA = "0xD8F424", Offset = "0xD8F424", VA = "0xD8F424")]
	private bool InventoryIsOpenOnThisHand()
	{
		return default(bool);
	}

	[Token(Token = "0x60012E4")]
	[Address(RVA = "0xD8D5F4", Offset = "0xD8D5F4", VA = "0xD8D5F4")]
	private IGrabbable GetBestGrabbable(out Vector3 grabPos)
	{
		return null;
	}

	[Token(Token = "0x60012E5")]
	[Address(RVA = "0xD8EAF8", Offset = "0xD8EAF8", VA = "0xD8EAF8")]
	public void ReleaseIfThingIsHeld()
	{
	}

	[Token(Token = "0x60012E6")]
	[Address(RVA = "0xD8D948", Offset = "0xD8D948", VA = "0xD8D948")]
	private Pettable TryToFindPettable()
	{
		return null;
	}

	[Token(Token = "0x60012E7")]
	[Address(RVA = "0xD8CC8C", Offset = "0xD8CC8C", VA = "0xD8CC8C")]
	private void UpdatePetting(Pettable newPettable)
	{
	}

	[Token(Token = "0x60012E8")]
	[Address(RVA = "0xD8F624", Offset = "0xD8F624", VA = "0xD8F624")]
	public IGrabbable GetCurrentGrabbable()
	{
		return null;
	}

	[Token(Token = "0x60012E9")]
	[Address(RVA = "0xD8F62C", Offset = "0xD8F62C", VA = "0xD8F62C")]
	public string[,] GetDebugInfo()
	{
		return null;
	}

	[Token(Token = "0x60012EA")]
	[Address(RVA = "0xD8F878", Offset = "0xD8F878", VA = "0xD8F878")]
	public Transform GetRoot()
	{
		return null;
	}

	[Token(Token = "0x60012EB")]
	[Address(RVA = "0xD8F880", Offset = "0xD8F880", VA = "0xD8F880")]
	public void StartReactingToGem(IGloveBlobReactable inGem)
	{
	}

	[Token(Token = "0x60012EC")]
	[Address(RVA = "0xD8C78C", Offset = "0xD8C78C", VA = "0xD8C78C")]
	public void StopReactingToGem(bool updateAnimation = true)
	{
	}

	[Token(Token = "0x60012ED")]
	[Address(RVA = "0xD8FD04", Offset = "0xD8FD04", VA = "0xD8FD04")]
	public void AnimateInfusionEffect()
	{
	}

	[Token(Token = "0x60012EE")]
	[Address(RVA = "0xD8FD44", Offset = "0xD8FD44", VA = "0xD8FD44")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x98E04C", Offset = "0x98E04C")]
	private IEnumerator FadeOutInfusionColor()
	{
		return null;
	}

	[Token(Token = "0x60012EF")]
	[Address(RVA = "0xD8BFD4", Offset = "0xD8BFD4", VA = "0xD8BFD4")]
	private void UpdateGemReaction()
	{
	}

	[Token(Token = "0x60012F0")]
	[Address(RVA = "0xD8FDEC", Offset = "0xD8FDEC", VA = "0xD8FDEC")]
	public void OverrideCurrentGrabbable(IGrabbable grabbable)
	{
	}

	[Token(Token = "0x60012F1")]
	[Address(RVA = "0xD8FDF4", Offset = "0xD8FDF4", VA = "0xD8FDF4")]
	public void SetBraceletVisible(bool visible)
	{
	}

	[Token(Token = "0x60012F2")]
	[Address(RVA = "0xD8FE1C", Offset = "0xD8FE1C", VA = "0xD8FE1C")]
	public PlayerHand()
	{
	}
}
[Token(Token = "0x2000300")]
public class PlayerHandAnimator : MonoBehaviour
{
	[Token(Token = "0x40012AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private int animGrabbingId;

	[Token(Token = "0x40012AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private int animGrabbingToolId;

	[Token(Token = "0x40012AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int curlThumbId;

	[Token(Token = "0x40012AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private int curlIndexId;

	[Token(Token = "0x40012B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private int curlMiddleId;

	[Token(Token = "0x40012B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private int curlRingId;

	[Token(Token = "0x40012B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private int curlPinkyId;

	[Token(Token = "0x40012B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private int useFingerCurls;

	[Token(Token = "0x40012B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Animator handModelAnimator;

	[Token(Token = "0x6001300")]
	[Address(RVA = "0xD8CEEC", Offset = "0xD8CEEC", VA = "0xD8CEEC")]
	public void TriggerGrabAnimation()
	{
	}

	[Token(Token = "0x6001301")]
	[Address(RVA = "0xD8CF14", Offset = "0xD8CF14", VA = "0xD8CF14")]
	public void TriggerIdleAnimation()
	{
	}

	[Token(Token = "0x6001302")]
	[Address(RVA = "0xD90614", Offset = "0xD90614", VA = "0xD90614")]
	public void SetFingerTracking(bool useFingerTracking)
	{
	}

	[Token(Token = "0x6001303")]
	[Address(RVA = "0xD8CBA4", Offset = "0xD8CBA4", VA = "0xD8CBA4")]
	public void UpdateFingerCurls(float[] curlData)
	{
	}

	[Token(Token = "0x6001304")]
	[Address(RVA = "0xD8CB08", Offset = "0xD8CB08", VA = "0xD8CB08")]
	public void ResetFingerCurls()
	{
	}

	[Token(Token = "0x6001305")]
	[Address(RVA = "0xD90640", Offset = "0xD90640", VA = "0xD90640")]
	public void SetLayerWeight(int layerIndex, float weight)
	{
	}

	[Token(Token = "0x6001306")]
	[Address(RVA = "0xD8FCE4", Offset = "0xD8FCE4", VA = "0xD8FCE4")]
	public void SetAnimationBoolParam(int animatorHash, bool shouldBeOn)
	{
	}

	[Token(Token = "0x6001307")]
	[Address(RVA = "0xD9065C", Offset = "0xD9065C", VA = "0xD9065C")]
	public void SetAnimationTriggerParam(int animatorHash)
	{
	}

	[Token(Token = "0x6001308")]
	[Address(RVA = "0xD90678", Offset = "0xD90678", VA = "0xD90678")]
	public void SetAnimationState(string animatorState, int layer)
	{
	}

	[Token(Token = "0x6001309")]
	[Address(RVA = "0xD90694", Offset = "0xD90694", VA = "0xD90694")]
	public PlayerHandAnimator()
	{
	}
}
[Token(Token = "0x2000301")]
public class PlayerHandManager : MonoBehaviour
{
	[Token(Token = "0x40012B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static PlayerHandManager instance;

	[Token(Token = "0x40012B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject playerHandPrefabRight;

	[Token(Token = "0x40012B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject playerHandPrefabLeft;

	[Token(Token = "0x40012B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Camera debugCamera;

	[Token(Token = "0x40012B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[HideInInspector]
	public PlayerHand[] hands;

	[Token(Token = "0x40012BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Grabbable leftHandStartingItem;

	[Token(Token = "0x40012BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Grabbable rightHandStartingItem;

	[Token(Token = "0x40012BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x97AFC4", Offset = "0x97AFC4")]
	private bool <IsHandsActive>k__BackingField;

	[Token(Token = "0x40012BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x97AFD4", Offset = "0x97AFD4")]
	private bool <HasInitializedHands>k__BackingField;

	[Token(Token = "0x40012BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x97AFE4", Offset = "0x97AFE4")]
	private bool <HasSpawnedHands>k__BackingField;

	[Token(Token = "0x170001F3")]
	public bool IsHandsActive
	{
		[Token(Token = "0x600130A")]
		[Address(RVA = "0xD9079C", Offset = "0xD9079C", VA = "0xD9079C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x98E100", Offset = "0x98E100")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600130B")]
		[Address(RVA = "0xD907A4", Offset = "0xD907A4", VA = "0xD907A4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x98E110", Offset = "0x98E110")]
		private set
		{
		}
	}

	[Token(Token = "0x170001F4")]
	public bool HasInitializedHands
	{
		[Token(Token = "0x600130C")]
		[Address(RVA = "0xD907B0", Offset = "0xD907B0", VA = "0xD907B0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x98E120", Offset = "0x98E120")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600130D")]
		[Address(RVA = "0xD907B8", Offset = "0xD907B8", VA = "0xD907B8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x98E130", Offset = "0x98E130")]
		private set
		{
		}
	}

	[Token(Token = "0x170001F5")]
	public bool HasSpawnedHands
	{
		[Token(Token = "0x600130E")]
		[Address(RVA = "0xD907C4", Offset = "0xD907C4", VA = "0xD907C4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x98E140", Offset = "0x98E140")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600130F")]
		[Address(RVA = "0xD907CC", Offset = "0xD907CC", VA = "0xD907CC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x98E150", Offset = "0x98E150")]
		private set
		{
		}
	}

	[Token(Token = "0x6001310")]
	[Address(RVA = "0xD907D8", Offset = "0xD907D8", VA = "0xD907D8")]
	public static PlayerHand GetHand(bool rightHand)
	{
		return null;
	}

	[Token(Token = "0x6001311")]
	[Address(RVA = "0xD908B8", Offset = "0xD908B8", VA = "0xD908B8")]
	public void SetStartingItem(Grabbable grabbable, bool right)
	{
	}

	[Token(Token = "0x6001312")]
	[Address(RVA = "0xD908CC", Offset = "0xD908CC", VA = "0xD908CC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001313")]
	[Address(RVA = "0xD90924", Offset = "0xD90924", VA = "0xD90924")]
	private void Update()
	{
	}

	[Token(Token = "0x6001314")]
	[Address(RVA = "0xD90A38", Offset = "0xD90A38", VA = "0xD90A38")]
	public void SetupStartingItems()
	{
	}

	[Token(Token = "0x6001315")]
	[Address(RVA = "0xD90B74", Offset = "0xD90B74", VA = "0xD90B74")]
	public void InitDefaultGloves()
	{
	}

	[Token(Token = "0x6001316")]
	[Address(RVA = "0xD90D6C", Offset = "0xD90D6C", VA = "0xD90D6C")]
	public void InitGlovesFromState(PlayerState playerState)
	{
	}

	[Token(Token = "0x6001317")]
	[Address(RVA = "0xD91024", Offset = "0xD91024", VA = "0xD91024")]
	public void SpawnHands()
	{
	}

	[Token(Token = "0x6001318")]
	[Address(RVA = "0xD91390", Offset = "0xD91390", VA = "0xD91390")]
	public static IGrabbable[] GetHeldGrabbables()
	{
		return null;
	}

	[Token(Token = "0x6001319")]
	[Address(RVA = "0xD914FC", Offset = "0xD914FC", VA = "0xD914FC")]
	public static void SetGloveAbility(GemType gloveType)
	{
	}

	[Token(Token = "0x600131A")]
	[Address(RVA = "0xD90C38", Offset = "0xD90C38", VA = "0xD90C38")]
	private void SetGloveAbilityOnBothHands(GemType gloveType)
	{
	}

	[Token(Token = "0x600131B")]
	[Address(RVA = "0xD915D0", Offset = "0xD915D0", VA = "0xD915D0")]
	public PlayerHand GetDominantHand()
	{
		return null;
	}

	[Token(Token = "0x600131C")]
	[Address(RVA = "0xD9119C", Offset = "0xD9119C", VA = "0xD9119C")]
	private PlayerHand CreatePlayerHand(bool rightHand)
	{
		return null;
	}

	[Token(Token = "0x600131D")]
	[Address(RVA = "0xD916E0", Offset = "0xD916E0", VA = "0xD916E0")]
	public void InitializeDebugControllers()
	{
	}

	[Token(Token = "0x600131E")]
	[Address(RVA = "0xD91774", Offset = "0xD91774", VA = "0xD91774")]
	public static void SetHandsVisible(bool visible)
	{
	}

	[Token(Token = "0x600131F")]
	[Address(RVA = "0xD912B0", Offset = "0xD912B0", VA = "0xD912B0")]
	public static void SetHandsActive(bool shouldBeActive)
	{
	}

	[Token(Token = "0x6001320")]
	[Address(RVA = "0xD91848", Offset = "0xD91848", VA = "0xD91848")]
	public PlayerHandManager()
	{
	}
}
[Token(Token = "0x2000302")]
public class PlayerInventory : SaveableComponent, IInitializable
{
	[Token(Token = "0x2000303")]
	public delegate void OpenInventoryDelegate(PlayerHand hand, Transform inventoryPosition);

	[Token(Token = "0x2000304")]
	public delegate void CloseInventoryDelegate();

	[Serializable]
	[Token(Token = "0x2000305")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x972C5C", Offset = "0x972C5C")]
	private sealed class <>c
	{
		[Token(Token = "0x40012E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x40012E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Func<InventorySlot, int> <>9__29_0;

		[Token(Token = "0x6001355")]
		[Address(RVA = "0xD0F19C", Offset = "0xD0F19C", VA = "0xD0F19C")]
		public <>c()
		{
		}

		[Token(Token = "0x6001356")]
		[Address(RVA = "0xD0F1A4", Offset = "0xD0F1A4", VA = "0xD0F1A4")]
		internal int <get_HeldItemCount>b__29_0(InventorySlot slot)
		{
			return default(int);
		}
	}

	[Token(Token = "0x2000306")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x972C6C", Offset = "0x972C6C")]
	private sealed class <>c__DisplayClass57_0
	{
		[Token(Token = "0x40012E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Stashable item;

		[Token(Token = "0x6001357")]
		[Address(RVA = "0xD0C1B4", Offset = "0xD0C1B4", VA = "0xD0C1B4")]
		public <>c__DisplayClass57_0()
		{
		}

		[Token(Token = "0x6001358")]
		[Address(RVA = "0xD0F1C0", Offset = "0xD0F1C0", VA = "0xD0F1C0")]
		internal bool <HasSpaceForItem>b__0(InventorySlot slot)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x40012BF")]
	private const int MAX_SLOT_COUNT = 8;

	[Token(Token = "0x40012C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static PlayerInventory instance;

	[Token(Token = "0x40012C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool initialized;

	[Token(Token = "0x40012C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static bool ItemWantsPlayersAttention;

	[Token(Token = "0x40012C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x97AFF4", Offset = "0x97AFF4")]
	public float radiusArc;

	[Token(Token = "0x40012C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private GameObject m_root;

	[Token(Token = "0x40012C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private InventorySlot[] inventorySlots;

	[Token(Token = "0x40012C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private InventoryHeroSlot[] InventoryHeroSlots;

	[Token(Token = "0x40012C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private List<InventorySlot> activeSlots;

	[Token(Token = "0x40012C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private List<InventorySlot> inactiveSlots;

	[Token(Token = "0x40012C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private List<InventoryHeroSlot> ActiveHeroSlots;

	[Token(Token = "0x40012CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private List<InventoryHeroSlot> InactiveHeroSlots;

	[Token(Token = "0x40012CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public SmoothLerper smoother;

	[Token(Token = "0x40012CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public GameObject inventorySlotPrefab;

	[Token(Token = "0x40012CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private Transform counterLabel;

	[Token(Token = "0x40012CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	private TextMeshPro counterText;

	[Token(Token = "0x40012CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x97B05C", Offset = "0x97B05C")]
	[SerializeField]
	private NeatAudioPlayer m_audioPlayer;

	[Token(Token = "0x40012D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[SerializeField]
	private NeatAudioCue m_openSound;

	[Token(Token = "0x40012D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[SerializeField]
	private NeatAudioCue m_closeSound;

	[Token(Token = "0x40012D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[SerializeField]
	private NeatAudioCue m_itemAddedSound;

	[Token(Token = "0x40012D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[SerializeField]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x97B0D8", Offset = "0x97B0D8")]
	private UnityEvent m_openInventoryEvent;

	[Token(Token = "0x40012D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[SerializeField]
	private UnityEvent m_closeInventoryEvent;

	[Token(Token = "0x40012D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private InventoryDropzone dropZone;

	[Token(Token = "0x40012D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private float[] anglesBetweenRad;

	[Token(Token = "0x40012D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private float totalAngularSpanRad;

	[Token(Token = "0x40012D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	private float totalAngularSpanStashArcDegrees;

	[Token(Token = "0x40012D9")]
	private const float ARC_STASH_THICKNESS_DEFAULT = 0.1f;

	[Token(Token = "0x40012DA")]
	private const float ARC_STASH_THICKNESS_ITEM_INSIDE_BUFFER = 0.05f;

	[Token(Token = "0x40012DB")]
	private const float ARC_STASH_EDGE_PAD_ANGLE = 15f;

	[Token(Token = "0x40012DC")]
	private const float ARC_STASH_EDGE_PAD_ANGLE_ITEM_INSIDE_BUFFER = 2f;

	[NonSerialized]
	[Token(Token = "0x40012DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public PlayerHand hand;

	[NonSerialized]
	[Token(Token = "0x40012DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public PlayerHand handLastUsed;

	[Token(Token = "0x40012DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public GameObject debugAddItem;

	[Token(Token = "0x40012E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private bool CurrencyHolderBeingHeld;

	[Token(Token = "0x40012E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE9")]
	private bool WalletIsDropZone;

	[Token(Token = "0x40012E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public OpenInventoryDelegate OnOpenInventory;

	[Token(Token = "0x40012E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public CloseInventoryDelegate OnClose;

	[Token(Token = "0x40012E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private bool needsUpdate;

	[Token(Token = "0x170001F6")]
	public int ActiveSlotCount
	{
		[Token(Token = "0x6001321")]
		[Address(RVA = "0xD0AF8C", Offset = "0xD0AF8C", VA = "0xD0AF8C")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x170001F7")]
	public int HeldItemCount
	{
		[Token(Token = "0x6001322")]
		[Address(RVA = "0xD0AFDC", Offset = "0xD0AFDC", VA = "0xD0AFDC")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x170001F8")]
	public bool IsOpen
	{
		[Token(Token = "0x6001323")]
		[Address(RVA = "0xD0B0D4", Offset = "0xD0B0D4", VA = "0xD0B0D4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170001F9")]
	public float Fullness
	{
		[Token(Token = "0x6001324")]
		[Address(RVA = "0xD0B0F0", Offset = "0xD0B0F0", VA = "0xD0B0F0")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x170001FA")]
	public static PlayerInventory Instance
	{
		[Token(Token = "0x6001325")]
		[Address(RVA = "0xD0B174", Offset = "0xD0B174", VA = "0xD0B174")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6001326")]
	[Address(RVA = "0xD0B1DC", Offset = "0xD0B1DC", VA = "0xD0B1DC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001327")]
	[Address(RVA = "0xD0B3E0", Offset = "0xD0B3E0", VA = "0xD0B3E0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6001328")]
	[Address(RVA = "0xD0B600", Offset = "0xD0B600", VA = "0xD0B600")]
	private void CreateInventorySlot()
	{
	}

	[Token(Token = "0x6001329")]
	[Address(RVA = "0xD0B6FC", Offset = "0xD0B6FC", VA = "0xD0B6FC")]
	private void CreateInventoryHeroSlot()
	{
	}

	[Token(Token = "0x600132A")]
	[Address(RVA = "0xD0B7F8", Offset = "0xD0B7F8", VA = "0xD0B7F8")]
	private void Update()
	{
	}

	[Token(Token = "0x600132B")]
	[Address(RVA = "0xD0BDB0", Offset = "0xD0BDB0", VA = "0xD0BDB0")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x600132C")]
	[Address(RVA = "0xD0BF64", Offset = "0xD0BF64", VA = "0xD0BF64")]
	public static void Init([Optional] ComponentState s)
	{
	}

	[Token(Token = "0x600132D")]
	[Address(RVA = "0xD0C078", Offset = "0xD0C078", VA = "0xD0C078")]
	public bool HasSpaceForItem(Stashable item)
	{
		return default(bool);
	}

	[Token(Token = "0x600132E")]
	[Address(RVA = "0xD0C1BC", Offset = "0xD0C1BC", VA = "0xD0C1BC")]
	public Component GetFirstItemOfType(Type componentType)
	{
		return null;
	}

	[Token(Token = "0x600132F")]
	[Address(RVA = "0xD0C36C", Offset = "0xD0C36C", VA = "0xD0C36C")]
	private void ActivateItemsInInventory()
	{
	}

	[Token(Token = "0x6001330")]
	[Address(RVA = "0xD0C58C", Offset = "0xD0C58C", VA = "0xD0C58C")]
	private void DisableItemsInInventory()
	{
	}

	[Token(Token = "0x6001331")]
	[Address(RVA = "0xD0C770", Offset = "0xD0C770", VA = "0xD0C770")]
	private void UpdateSlotTargetPositions()
	{
	}

	[Token(Token = "0x6001332")]
	[Address(RVA = "0xD0CC3C", Offset = "0xD0CC3C", VA = "0xD0CC3C")]
	private void UpdateSlotCounter()
	{
	}

	[Token(Token = "0x6001333")]
	[Address(RVA = "0xD0BB94", Offset = "0xD0BB94", VA = "0xD0BB94")]
	private void UpdateSlotPositions(bool snap = false)
	{
	}

	[Token(Token = "0x6001334")]
	[Address(RVA = "0xD0BDB4", Offset = "0xD0BDB4", VA = "0xD0BDB4")]
	private void UpdateSlotSmoothing()
	{
	}

	[Token(Token = "0x6001335")]
	[Address(RVA = "0xD0CCFC", Offset = "0xD0CCFC", VA = "0xD0CCFC")]
	private bool TryGetSlotIndexFor(Stashable stashable, out int index)
	{
		return default(bool);
	}

	[Token(Token = "0x6001336")]
	[Address(RVA = "0xD0B928", Offset = "0xD0B928", VA = "0xD0B928")]
	public void Add(Stashable item)
	{
	}

	[Token(Token = "0x6001337")]
	[Address(RVA = "0xD0CE6C", Offset = "0xD0CE6C", VA = "0xD0CE6C")]
	private void AddHeroItem(Stashable heroItem)
	{
	}

	[Token(Token = "0x6001338")]
	[Address(RVA = "0xD0D19C", Offset = "0xD0D19C", VA = "0xD0D19C")]
	public void Remove(Stashable item)
	{
	}

	[Token(Token = "0x6001339")]
	[Address(RVA = "0xD0D380", Offset = "0xD0D380", VA = "0xD0D380")]
	private void RemoveHeroItem(Stashable heroItem)
	{
	}

	[Token(Token = "0x600133A")]
	[Address(RVA = "0xD0D544", Offset = "0xD0D544", VA = "0xD0D544")]
	public void RemoveItemsInSlot(int index)
	{
	}

	[Token(Token = "0x600133B")]
	[Address(RVA = "0xD0D450", Offset = "0xD0D450", VA = "0xD0D450")]
	private void RemoveSlotAtIndex(int index)
	{
	}

	[Token(Token = "0x600133C")]
	[Address(RVA = "0xD0D640", Offset = "0xD0D640", VA = "0xD0D640")]
	private void RemoveHeroSlotAtIndex(int index)
	{
	}

	[Token(Token = "0x600133D")]
	[Address(RVA = "0xD0D734", Offset = "0xD0D734", VA = "0xD0D734")]
	public void SnapInventoryItems()
	{
	}

	[Token(Token = "0x600133E")]
	[Address(RVA = "0xD0CAE0", Offset = "0xD0CAE0", VA = "0xD0CAE0")]
	private Vector2 GetLocalPositionForSlot(int i, out float angRad)
	{
		return default(Vector2);
	}

	[Token(Token = "0x600133F")]
	[Address(RVA = "0xD0D82C", Offset = "0xD0D82C", VA = "0xD0D82C")]
	public void TryAlignAndOpen(PlayerHand hand, Transform inventoryPosition)
	{
	}

	[Token(Token = "0x6001340")]
	[Address(RVA = "0xD0E2EC", Offset = "0xD0E2EC", VA = "0xD0E2EC")]
	public void TryClose(PlayerHand hand)
	{
	}

	[Token(Token = "0x6001341")]
	[Address(RVA = "0xD0DB14", Offset = "0xD0DB14", VA = "0xD0DB14")]
	public void Close(bool playSound = true)
	{
	}

	[Token(Token = "0x6001342")]
	[Address(RVA = "0xD0D09C", Offset = "0xD0D09C", VA = "0xD0D09C")]
	private void CheckForEmptySlots()
	{
	}

	[Token(Token = "0x6001343")]
	[Address(RVA = "0xD0C998", Offset = "0xD0C998", VA = "0xD0C998")]
	public void CalculateAnglesBetweenItems()
	{
	}

	[Token(Token = "0x6001344")]
	[Address(RVA = "0xD0E7BC", Offset = "0xD0E7BC", VA = "0xD0E7BC")]
	public void SetIsCurrencyHolderHeld(bool newCurrencyHolderHeld)
	{
	}

	[Token(Token = "0x6001345")]
	[Address(RVA = "0xD0E010", Offset = "0xD0E010", VA = "0xD0E010")]
	public void SetWalletAsDropZone()
	{
	}

	[Token(Token = "0x6001346")]
	[Address(RVA = "0xD0E594", Offset = "0xD0E594", VA = "0xD0E594")]
	public void RemoveWalletAsDropZone()
	{
	}

	[Token(Token = "0x6001347")]
	[Address(RVA = "0xD0E82C", Offset = "0xD0E82C", VA = "0xD0E82C", Slot = "4")]
	public override ComponentState CreateState()
	{
		return null;
	}

	[Token(Token = "0x6001348")]
	[Address(RVA = "0xD0EAA4", Offset = "0xD0EAA4", VA = "0xD0EAA4")]
	public void Reset()
	{
	}

	[Token(Token = "0x6001349")]
	[Address(RVA = "0xD0EBD4", Offset = "0xD0EBD4", VA = "0xD0EBD4", Slot = "5")]
	public void Initialize()
	{
	}

	[Token(Token = "0x600134A")]
	[Address(RVA = "0xD0F030", Offset = "0xD0F030", VA = "0xD0F030")]
	public PlayerInventory()
	{
	}
}
[Serializable]
[Token(Token = "0x2000307")]
public class InventoryState : ComponentState
{
	[Token(Token = "0x40012E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public SaveID[] inventoryContents;

	[Token(Token = "0x6001359")]
	[Address(RVA = "0xBE3BC0", Offset = "0xBE3BC0", VA = "0xBE3BC0")]
	public InventoryState()
	{
	}
}
[Token(Token = "0x2000308")]
public enum SpawnPositionType
{
	[Token(Token = "0x40012EA")]
	SceneStartPosition,
	[Token(Token = "0x40012EB")]
	LoadingScreenPosition,
	[Token(Token = "0x40012EC")]
	PositionInHouse,
	[Token(Token = "0x40012ED")]
	TutorialStartPosition,
	[Token(Token = "0x40012EE")]
	Unknown
}
[Token(Token = "0x2000309")]
public class PlayerSpawnPosition : MonoBehaviour
{
	[Token(Token = "0x40012EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static List<PlayerSpawnPosition> positions;

	[Token(Token = "0x40012F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public SpawnPositionType spawnPosType;

	[Token(Token = "0x600135A")]
	[Address(RVA = "0xD0F288", Offset = "0xD0F288", VA = "0xD0F288")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600135B")]
	[Address(RVA = "0xD0F358", Offset = "0xD0F358", VA = "0xD0F358")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600135C")]
	[Address(RVA = "0xD0F428", Offset = "0xD0F428", VA = "0xD0F428")]
	public static PlayerSpawnPosition GetSpawnPosition(SpawnPositionType posType)
	{
		return null;
	}

	[Token(Token = "0x600135D")]
	[Address(RVA = "0xD0F5DC", Offset = "0xD0F5DC", VA = "0xD0F5DC")]
	public PlayerSpawnPosition()
	{
	}
}
[Token(Token = "0x200030A")]
public class PlayerTeleport : MonoBehaviour
{
	[Token(Token = "0x40012F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float teleportDuration;

	[Token(Token = "0x40012F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Transform pointerStartTransform;

	[Token(Token = "0x40012F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private PlayerHand pointerHand;

	[Token(Token = "0x40012F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool visible;

	[Token(Token = "0x40012F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private Vector3 pointedAtPosition;

	[Token(Token = "0x40012F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool teleporting;

	[Token(Token = "0x40012F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private float currentTeleportTimeLeft;

	[Token(Token = "0x40012F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool hasValidDestination;

	[Token(Token = "0x40012F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private TeleportDestinationInfo lastValidDestination;

	[Token(Token = "0x40012FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public NeatAudioPlayer teleportSoundPlayer;

	[Token(Token = "0x40012FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private PlayerTeleportEvent teleportEvent;

	[Token(Token = "0x40012FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static PlayerTeleport _instance;

	[Token(Token = "0x40012FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private bool m_cancelNextTeleport;

	[Token(Token = "0x40012FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	private float m_lastTeleportTime;

	[Token(Token = "0x40012FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private float m_lastTeleportDistance;

	[Token(Token = "0x4001300")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private readonly int PICK;

	[Token(Token = "0x170001FB")]
	private LocomotionArc LocomotionArc
	{
		[Token(Token = "0x600135F")]
		[Address(RVA = "0xD0FA10", Offset = "0xD0FA10", VA = "0xD0FA10")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170001FC")]
	public float LastTeleportTime
	{
		[Token(Token = "0x6001360")]
		[Address(RVA = "0xD0FA6C", Offset = "0xD0FA6C", VA = "0xD0FA6C")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x170001FD")]
	public float LastTeleportDistance
	{
		[Token(Token = "0x6001361")]
		[Address(RVA = "0xD0FA74", Offset = "0xD0FA74", VA = "0xD0FA74")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x170001FE")]
	public static PlayerTeleport instance
	{
		[Token(Token = "0x6001362")]
		[Address(RVA = "0xD0FA7C", Offset = "0xD0FA7C", VA = "0xD0FA7C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6001363")]
	[Address(RVA = "0xD0FB54", Offset = "0xD0FB54", VA = "0xD0FB54")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001364")]
	[Address(RVA = "0xD0FBE0", Offset = "0xD0FBE0", VA = "0xD0FBE0")]
	private void Start()
	{
	}

	[Token(Token = "0x6001365")]
	[Address(RVA = "0xD0FD64", Offset = "0xD0FD64", VA = "0xD0FD64")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6001366")]
	[Address(RVA = "0xD0FD68", Offset = "0xD0FD68", VA = "0xD0FD68")]
	public static LocomotionArc GetLocomotionArc()
	{
		return null;
	}

	[Token(Token = "0x6001367")]
	[Address(RVA = "0xD0FDFC", Offset = "0xD0FDFC", VA = "0xD0FDFC")]
	public static bool HasVisibleArcFromHand(bool isRightHand)
	{
		return default(bool);
	}

	[Token(Token = "0x6001368")]
	[Address(RVA = "0xD0FE50", Offset = "0xD0FE50", VA = "0xD0FE50")]
	public static bool HasVisibleArc()
	{
		return default(bool);
	}

	[Token(Token = "0x6001369")]
	[Address(RVA = "0xD0FE70", Offset = "0xD0FE70", VA = "0xD0FE70")]
	public void HideTeleportPointer()
	{
	}

	[Token(Token = "0x600136A")]
	[Address(RVA = "0xD0FEF8", Offset = "0xD0FEF8", VA = "0xD0FEF8")]
	public static PlayerHand GetPointerHand()
	{
		return null;
	}

	[Token(Token = "0x600136B")]
	[Address(RVA = "0xD0FF8C", Offset = "0xD0FF8C", VA = "0xD0FF8C")]
	public void CancelTeleport(PlayerHand hand)
	{
	}

	[Token(Token = "0x600136C")]
	[Address(RVA = "0xD1002C", Offset = "0xD1002C", VA = "0xD1002C")]
	public static void CancelNextTeleport()
	{
	}

	[Token(Token = "0x600136D")]
	[Address(RVA = "0xD10074", Offset = "0xD10074", VA = "0xD10074")]
	public void TeleportButtonReleased(PlayerHand hand)
	{
	}

	[Token(Token = "0x600136E")]
	[Address(RVA = "0xD10154", Offset = "0xD10154", VA = "0xD10154")]
	public void TeleportButtonPressed(PlayerHand hand, bool isRightHand)
	{
	}

	[Token(Token = "0x600136F")]
	[Address(RVA = "0xD101B4", Offset = "0xD101B4", VA = "0xD101B4")]
	public void TeleportButtonPressed(PlayerHand hand)
	{
	}

	[Token(Token = "0x6001370")]
	[Address(RVA = "0xD10434", Offset = "0xD10434", VA = "0xD10434")]
	private void Update()
	{
	}

	[Token(Token = "0x6001371")]
	[Address(RVA = "0xD0FBE4", Offset = "0xD0FBE4", VA = "0xD0FBE4")]
	private void HidePointer()
	{
	}

	[Token(Token = "0x6001372")]
	[Address(RVA = "0xD102F8", Offset = "0xD102F8", VA = "0xD102F8")]
	private void ShowPointer(PlayerHand newPointerHand, PlayerHand oldPointerHand)
	{
	}

	[Token(Token = "0x6001373")]
	[Address(RVA = "0xD10134", Offset = "0xD10134", VA = "0xD10134")]
	private void TryTeleportPlayer()
	{
	}

	[Token(Token = "0x6001374")]
	[Address(RVA = "0xD10708", Offset = "0xD10708", VA = "0xD10708")]
	private void InitiateTeleportFade()
	{
	}

	[Token(Token = "0x6001375")]
	[Address(RVA = "0xD10750", Offset = "0xD10750", VA = "0xD10750")]
	private void TeleportPlayer()
	{
	}

	[Token(Token = "0x6001376")]
	[Address(RVA = "0xD10968", Offset = "0xD10968", VA = "0xD10968")]
	public bool TeleportPlayerTo(Vector3 position)
	{
		return default(bool);
	}

	[Token(Token = "0x6001377")]
	[Address(RVA = "0xD10900", Offset = "0xD10900", VA = "0xD10900")]
	private void RaiseEvent(Vector3 origin, Vector3 destination)
	{
	}

	[Token(Token = "0x6001378")]
	[Address(RVA = "0xD10954", Offset = "0xD10954", VA = "0xD10954")]
	private bool IsTeleportValid()
	{
		return default(bool);
	}

	[Token(Token = "0x6001379")]
	[Address(RVA = "0xD10A98", Offset = "0xD10A98", VA = "0xD10A98")]
	private bool TryCancelTeleport()
	{
		return default(bool);
	}

	[Token(Token = "0x600137A")]
	[Address(RVA = "0xD10AA8", Offset = "0xD10AA8", VA = "0xD10AA8")]
	public PlayerTeleport()
	{
	}
}
[Token(Token = "0x200030B")]
public class SmoothLerper : MonoBehaviour
{
	[Token(Token = "0x200030C")]
	public enum EaseMode
	{
		[Token(Token = "0x400130C")]
		Linear,
		[Token(Token = "0x400130D")]
		EaseIn,
		[Token(Token = "0x400130E")]
		EaseInOut
	}

	[Token(Token = "0x200030D")]
	public enum LerpMode
	{
		[Token(Token = "0x4001310")]
		Off,
		[Token(Token = "0x4001311")]
		Smooth,
		[Token(Token = "0x4001312")]
		Fixed
	}

	[Token(Token = "0x200030E")]
	public enum LerpRotMode
	{
		[Token(Token = "0x4001314")]
		Off,
		[Token(Token = "0x4001315")]
		Smooth,
		[Token(Token = "0x4001316")]
		Fixed,
		[Token(Token = "0x4001317")]
		SmoothBasedOnPosition
	}

	[Token(Token = "0x4001301")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public EaseMode easeMode;

	[Token(Token = "0x4001302")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public LerpMode posMode;

	[Token(Token = "0x4001303")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public LerpRotMode rotMode;

	[Token(Token = "0x4001304")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public SmoothingConfig inner;

	[Token(Token = "0x4001305")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public SmoothingConfig outer;

	[Token(Token = "0x4001306")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Transform source;

	[Token(Token = "0x4001307")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Transform target;

	[Token(Token = "0x4001308")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private bool updateManuallyFromScript;

	[Token(Token = "0x4001309")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public float influence;

	[Token(Token = "0x400130A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public bool resetOnEnable;

	[Token(Token = "0x600137B")]
	[Address(RVA = "0xCC78DC", Offset = "0xCC78DC", VA = "0xCC78DC")]
	private void OnDrawGizmosSelected()
	{
	}

	[Token(Token = "0x600137C")]
	[Address(RVA = "0xCC7990", Offset = "0xCC7990", VA = "0xCC7990")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600137D")]
	[Address(RVA = "0xCC7FD8", Offset = "0xCC7FD8", VA = "0xCC7FD8")]
	private void Update()
	{
	}

	[Token(Token = "0x600137E")]
	[Address(RVA = "0xCC7A3C", Offset = "0xCC7A3C", VA = "0xCC7A3C")]
	public void UpdateSmoothing()
	{
	}

	[Token(Token = "0x600137F")]
	[Address(RVA = "0xCC7FE8", Offset = "0xCC7FE8", VA = "0xCC7FE8")]
	public float GetHarshness(float refDist, float distMin, float distMax, float valueMin, float valueMax, bool needsSquareRoot = false)
	{
		return default(float);
	}

	[Token(Token = "0x6001380")]
	[Address(RVA = "0xCC81A4", Offset = "0xCC81A4", VA = "0xCC81A4")]
	public SmoothLerper()
	{
	}
}
[Serializable]
[Token(Token = "0x200030F")]
public struct SmoothingConfig
{
	[Token(Token = "0x4001318")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float radius;

	[Token(Token = "0x4001319")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public float angle;

	[Token(Token = "0x400131A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float harshness;

	[Token(Token = "0x170001FF")]
	public float RadiusSq
	{
		[Token(Token = "0x6001381")]
		[Address(RVA = "0xA472F0", Offset = "0xA472F0", VA = "0xA472F0")]
		get
		{
			return default(float);
		}
	}
}
[Token(Token = "0x2000310")]
public class StashableTrigger : MonoBehaviour
{
	[Token(Token = "0x2000311")]
	public class StashableCollider
	{
		[Token(Token = "0x400131D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Stashable stashable;

		[Token(Token = "0x400131E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Collider col;

		[Token(Token = "0x6001393")]
		[Address(RVA = "0xDFE77C", Offset = "0xDFE77C", VA = "0xDFE77C")]
		public StashableCollider(Stashable stashable, Collider col)
		{
		}
	}

	[Token(Token = "0x400131B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private OptimizedCollection<Stashable> m_hoveringStashables;

	[Token(Token = "0x400131C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x97B144", Offset = "0x97B144")]
	private readonly List<StashableCollider> <HoveringColliders>k__BackingField;

	[Token(Token = "0x17000200")]
	protected List<StashableCollider> HoveringColliders
	{
		[Token(Token = "0x6001382")]
		[Address(RVA = "0xDFE3C4", Offset = "0xDFE3C4", VA = "0xDFE3C4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x98E160", Offset = "0x98E160")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000201")]
	public bool HasSomethingInside
	{
		[Token(Token = "0x6001383")]
		[Address(RVA = "0xDFE3CC", Offset = "0xDFE3CC", VA = "0xDFE3CC")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000202")]
	protected int CollidersInsideCount
	{
		[Token(Token = "0x6001384")]
		[Address(RVA = "0xDFE3E8", Offset = "0xDFE3E8", VA = "0xDFE3E8")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x6001385")]
	[Address(RVA = "0xDFE438", Offset = "0xDFE438", VA = "0xDFE438")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6001386")]
	[Address(RVA = "0xDFE53C", Offset = "0xDFE53C", VA = "0xDFE53C")]
	protected void OnColliderEnter(Collider collider)
	{
	}

	[Token(Token = "0x6001387")]
	[Address(RVA = "0xDFE8BC", Offset = "0xDFE8BC", VA = "0xDFE8BC")]
	protected void OnColliderExit(Collider collider)
	{
	}

	[Token(Token = "0x6001388")]
	[Address(RVA = "0xDFEC04", Offset = "0xDFEC04", VA = "0xDFEC04")]
	protected void OnStashableExit(Stashable stashable)
	{
	}

	[Token(Token = "0x6001389")]
	[Address(RVA = "0xDFEC30", Offset = "0xDFEC30", VA = "0xDFEC30")]
	private void RemoveStashableFromHovering(Stashable stashable)
	{
	}

	[Token(Token = "0x600138A")]
	[Address(RVA = "0xDFEDB0", Offset = "0xDFEDB0", VA = "0xDFEDB0")]
	private bool TryRemoveStashableCollider(StashableCollider col)
	{
		return default(bool);
	}

	[Token(Token = "0x600138B")]
	[Address(RVA = "0xDFED3C", Offset = "0xDFED3C", VA = "0xDFED3C")]
	private void RemoveHoveringStashable(Stashable stashable)
	{
	}

	[Token(Token = "0x600138C")]
	[Address(RVA = "0xDFEEC4", Offset = "0xDFEEC4", VA = "0xDFEEC4")]
	private void RemoveAllStashableFromHovering()
	{
	}

	[Token(Token = "0x600138D")]
	[Address(RVA = "0xDFEF90", Offset = "0xDFEF90", VA = "0xDFEF90", Slot = "4")]
	protected virtual void OnHoverStateChanged()
	{
	}

	[Token(Token = "0x600138E")]
	[Address(RVA = "0xDFEF94", Offset = "0xDFEF94", VA = "0xDFEF94")]
	protected Stashable TryGetDroppedItemInside()
	{
		return null;
	}

	[Token(Token = "0x600138F")]
	[Address(RVA = "0xDFE7CC", Offset = "0xDFE7CC", VA = "0xDFE7CC")]
	private void OnStartHover(StashableCollider col)
	{
	}

	[Token(Token = "0x6001390")]
	[Address(RVA = "0xDFEB2C", Offset = "0xDFEB2C", VA = "0xDFEB2C")]
	private void StopHover(StashableCollider col)
	{
	}

	[Token(Token = "0x6001391")]
	[Address(RVA = "0xDFE510", Offset = "0xDFE510", VA = "0xDFE510")]
	private void StopHoverAll()
	{
	}

	[Token(Token = "0x6001392")]
	[Address(RVA = "0xDFF104", Offset = "0xDFF104", VA = "0xDFF104")]
	public StashableTrigger()
	{
	}
}
[Token(Token = "0x2000312")]
public class Mesh2D
{
	[Token(Token = "0x400131F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Vector2[] vertices;

	[Token(Token = "0x4001320")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector2[] normals;

	[Token(Token = "0x4001321")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float[] uCoords;

	[Token(Token = "0x4001322")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int[] edges;

	[Token(Token = "0x6001394")]
	[Address(RVA = "0xC208A8", Offset = "0xC208A8", VA = "0xC208A8")]
	public Mesh2D()
	{
	}
}
[Serializable]
[Token(Token = "0x2000313")]
public struct OrientedPoint
{
	[Token(Token = "0x4001323")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector3 position;

	[Token(Token = "0x4001324")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Quaternion rotation;

	[Token(Token = "0x4001325")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Vector3 localScale;

	[Token(Token = "0x4001326")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Vector3 InvalidScale;

	[Token(Token = "0x17000203")]
	public Vector3 Right
	{
		[Token(Token = "0x6001395")]
		[Address(RVA = "0xA429A8", Offset = "0xA429A8", VA = "0xA429A8")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x17000204")]
	public Vector3 Up
	{
		[Token(Token = "0x6001396")]
		[Address(RVA = "0xA429B0", Offset = "0xA429B0", VA = "0xA429B0")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x17000205")]
	public Vector3 Forward
	{
		[Token(Token = "0x6001397")]
		[Address(RVA = "0xA429B8", Offset = "0xA429B8", VA = "0xA429B8")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x6001398")]
	[Address(RVA = "0xA429C0", Offset = "0xA429C0", VA = "0xA429C0")]
	public OrientedPoint([Optional] Vector3 position)
	{
	}

	[Token(Token = "0x6001399")]
	[Address(RVA = "0xA429C8", Offset = "0xA429C8", VA = "0xA429C8")]
	public void TransformToLocalSpaceOf(Transform transform)
	{
	}

	[Token(Token = "0x600139A")]
	[Address(RVA = "0xA429D0", Offset = "0xA429D0", VA = "0xA429D0")]
	public OrientedPoint(Vector3 position, Quaternion rotation)
	{
	}

	[Token(Token = "0x600139B")]
	[Address(RVA = "0xA429D8", Offset = "0xA429D8", VA = "0xA429D8")]
	public OrientedPoint(Vector3 position, Quaternion rotation, Vector3 localScale)
	{
	}

	[Token(Token = "0x600139C")]
	[Address(RVA = "0xA429FC", Offset = "0xA429FC", VA = "0xA429FC")]
	public OrientedPoint(Transform transform)
	{
	}

	[Token(Token = "0x600139D")]
	[Address(RVA = "0xA42A04", Offset = "0xA42A04", VA = "0xA42A04")]
	public void ApplyToLocal(Transform tf)
	{
	}

	[Token(Token = "0x600139E")]
	[Address(RVA = "0xA42A0C", Offset = "0xA42A0C", VA = "0xA42A0C")]
	public bool IsValid()
	{
		return default(bool);
	}

	[Token(Token = "0x600139F")]
	[Address(RVA = "0xA42A14", Offset = "0xA42A14", VA = "0xA42A14")]
	public bool IsNan()
	{
		return default(bool);
	}

	[Token(Token = "0x60013A0")]
	[Address(RVA = "0xA42A1C", Offset = "0xA42A1C", VA = "0xA42A1C")]
	public Vector3 TransformPoint(Vector3 localPos)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60013A1")]
	[Address(RVA = "0xA42A24", Offset = "0xA42A24", VA = "0xA42A24")]
	public Vector3 InverseTransformPoint(Vector3 worldPos)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60013A2")]
	[Address(RVA = "0xA42A2C", Offset = "0xA42A2C", VA = "0xA42A2C")]
	public Vector3 TransformVector(Vector3 localPos)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60013A3")]
	[Address(RVA = "0xA42A34", Offset = "0xA42A34", VA = "0xA42A34")]
	public Vector3 TransformVectorNoScale(Vector3 localPos)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60013A4")]
	[Address(RVA = "0xBB89DC", Offset = "0xBB89DC", VA = "0xBB89DC")]
	public static OrientedPoint Lerp(OrientedPoint a, OrientedPoint b, float t)
	{
		return default(OrientedPoint);
	}
}
[Token(Token = "0x2000314")]
public class WobblyArc
{
	[Serializable]
	[Token(Token = "0x2000315")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x972C7C", Offset = "0x972C7C")]
	private sealed class <>c
	{
		[Token(Token = "0x4001343")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4001344")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Func<Tweener, Tweener> <>9__26_0;

		[Token(Token = "0x60013BA")]
		[Address(RVA = "0xE70D24", Offset = "0xE70D24", VA = "0xE70D24")]
		public <>c()
		{
		}

		[Token(Token = "0x60013BB")]
		[Address(RVA = "0xE70D2C", Offset = "0xE70D2C", VA = "0xE70D2C")]
		internal Tweener <Show>b__26_0(Tweener tw)
		{
			return null;
		}
	}

	[Token(Token = "0x4001327")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private int arcMeshSegmentCount;

	[Token(Token = "0x4001328")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private int arcMeshVertexCount;

	[Token(Token = "0x4001329")]
	private const int ARC_MESH_ANGULAR_COUNT = 8;

	[Token(Token = "0x400132A")]
	private const int ARC_MESH_VERTS_PER_SEGMENT = 9;

	[Token(Token = "0x400132B")]
	private const float ARC_MESH_RADIUS_NEAR = 0.003f;

	[Token(Token = "0x400132C")]
	private const float ARC_MESH_RADIUS_CENTER = 0.003f;

	[Token(Token = "0x400132D")]
	private const float ARC_MESH_RADIUS_FAR = 0.004f;

	[Token(Token = "0x400132E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static float ARC_MESH_RADIUS_MAX;

	[Token(Token = "0x400132F")]
	private const float ARC_TRACE_TIME = 1f;

	[Token(Token = "0x4001330")]
	private const float ARC_TRACE_SPEED = 8f;

	[Token(Token = "0x4001331")]
	private const float ARC_SMOOTH_COEF_INVALID = 0.1f;

	[Token(Token = "0x4001332")]
	private const float ARC_APPEAR_UP_FORCE = 2000f;

	[Token(Token = "0x4001333")]
	private const float ARC_ANIM_APPEAR_TIME = 0.35f;

	[Token(Token = "0x4001334")]
	private const float ARC_ANIM_DISAPPEAR_TIME = 0.2f;

	[Token(Token = "0x4001335")]
	private const float ARC_ANIM_VALIDITY_COEF = 0.15f;

	[Token(Token = "0x4001336")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Mesh mesh;

	[Token(Token = "0x4001337")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Mesh2D mesh2D;

	[Token(Token = "0x4001338")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private OrientedPoint[] pointsCurrent;

	[Token(Token = "0x4001339")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private OrientedPoint[] pointsPrev;

	[Token(Token = "0x400133A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Vector3[] pointsVelocities;

	[Token(Token = "0x400133B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float validitySmooth;

	[Token(Token = "0x400133C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private TweenyFloat animExtend;

	[Token(Token = "0x400133D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float hitDistancePercentage;

	[Token(Token = "0x400133E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private bool initializedDataStreams;

	[Token(Token = "0x400133F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Vector3[] verts;

	[Token(Token = "0x4001340")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Vector3[] normals;

	[Token(Token = "0x4001341")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private List<Vector4> uvs;

	[Token(Token = "0x4001342")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private int[] triangles;

	[Token(Token = "0x17000206")]
	public float TimePerSegment
	{
		[Token(Token = "0x60013B1")]
		[Address(RVA = "0xE70478", Offset = "0xE70478", VA = "0xE70478")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x60013A6")]
	[Address(RVA = "0xE6F284", Offset = "0xE6F284", VA = "0xE6F284")]
	public void Init(int numMeshSegments)
	{
	}

	[Token(Token = "0x60013A7")]
	[Address(RVA = "0xE6F568", Offset = "0xE6F568", VA = "0xE6F568")]
	public Mesh GetMesh()
	{
		return null;
	}

	[Token(Token = "0x60013A8")]
	[Address(RVA = "0xE6F570", Offset = "0xE6F570", VA = "0xE6F570")]
	public void UpdatePathPhysics(float dt, OrientedPoint[] pointsTarget, bool hasValidDestination, float wobblyness, float smoothCoef)
	{
	}

	[Token(Token = "0x60013A9")]
	[Address(RVA = "0xE70090", Offset = "0xE70090", VA = "0xE70090")]
	public void Show(OrientedPoint[] pointsTarget)
	{
	}

	[Token(Token = "0x60013AA")]
	[Address(RVA = "0xE6F538", Offset = "0xE6F538", VA = "0xE6F538")]
	public void HideImmediately()
	{
	}

	[Token(Token = "0x60013AB")]
	[Address(RVA = "0xE6FFEC", Offset = "0xE6FFEC", VA = "0xE6FFEC")]
	private void UpdateValiditySmoothing(bool valid)
	{
	}

	[Token(Token = "0x60013AC")]
	[Address(RVA = "0xE6F73C", Offset = "0xE6F73C", VA = "0xE6F73C")]
	public void Stabilize(OrientedPoint[] pointsTarget)
	{
	}

	[Token(Token = "0x60013AD")]
	[Address(RVA = "0xE6F90C", Offset = "0xE6F90C", VA = "0xE6F90C")]
	private void UpdatePathPositionsAndVelocity(float dt, OrientedPoint[] pointsTarget, float wobblyness, float smoothCoef)
	{
	}

	[Token(Token = "0x60013AE")]
	[Address(RVA = "0xE701A0", Offset = "0xE701A0", VA = "0xE701A0")]
	private float GetInfluenceCurve(float t, float smoothCoef)
	{
		return default(float);
	}

	[Token(Token = "0x60013AF")]
	[Address(RVA = "0xE6FD7C", Offset = "0xE6FD7C", VA = "0xE6FD7C")]
	private void UpdatePathRotations(OrientedPoint[] pointsTarget)
	{
	}

	[Token(Token = "0x60013B0")]
	[Address(RVA = "0xE701F8", Offset = "0xE701F8", VA = "0xE701F8")]
	private void InitializeDataStreamsIfNeeded()
	{
	}

	[Token(Token = "0x60013B2")]
	[Address(RVA = "0xE7048C", Offset = "0xE7048C", VA = "0xE7048C")]
	public void UpdateArcMesh(OrientedPoint[] pointsTarget)
	{
	}

	[Token(Token = "0x60013B3")]
	[Address(RVA = "0xE709D8", Offset = "0xE709D8", VA = "0xE709D8")]
	private float GetMeshRadius(float t)
	{
		return default(float);
	}

	[Token(Token = "0x60013B4")]
	[Address(RVA = "0xE70A70", Offset = "0xE70A70", VA = "0xE70A70")]
	private float GetExpandedMeshRadius(float t)
	{
		return default(float);
	}

	[Token(Token = "0x60013B5")]
	[Address(RVA = "0xE70BB8", Offset = "0xE70BB8", VA = "0xE70BB8")]
	private float GetMirrorMask(float t)
	{
		return default(float);
	}

	[Token(Token = "0x60013B6")]
	[Address(RVA = "0xE70B20", Offset = "0xE70B20", VA = "0xE70B20")]
	private float GetExtentionAnimMultiplier(float t)
	{
		return default(float);
	}

	[Token(Token = "0x60013B7")]
	[Address(RVA = "0xE70BCC", Offset = "0xE70BCC", VA = "0xE70BCC")]
	public WobblyArc()
	{
	}
}
[Token(Token = "0x2000316")]
public class TeleportTutorialBridge : SaveableComponent, IInitializable
{
	[Token(Token = "0x2000317")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x972C8C", Offset = "0x972C8C")]
	private sealed class <CollapseEventRoutine>d__24 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001355")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001356")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001357")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportTutorialBridge <>4__this;

		[Token(Token = "0x4001358")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool <eventFinished>5__2;

		[Token(Token = "0x4001359")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		private bool <haveTriggeredSound>5__3;

		[Token(Token = "0x400135A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <remainingEventTime>5__4;

		[Token(Token = "0x17000207")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60013C9")]
			[Address(RVA = "0xE2C378", Offset = "0xE2C378", VA = "0xE2C378", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000208")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60013CB")]
			[Address(RVA = "0xE2C3E0", Offset = "0xE2C3E0", VA = "0xE2C3E0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60013C6")]
		[Address(RVA = "0xE2C170", Offset = "0xE2C170", VA = "0xE2C170")]
		[DebuggerHidden]
		public <CollapseEventRoutine>d__24(int <>1__state)
		{
		}

		[Token(Token = "0x60013C7")]
		[Address(RVA = "0xE2C1B4", Offset = "0xE2C1B4", VA = "0xE2C1B4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60013C8")]
		[Address(RVA = "0xE2C1B8", Offset = "0xE2C1B8", VA = "0xE2C1B8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60013CA")]
		[Address(RVA = "0xE2C380", Offset = "0xE2C380", VA = "0xE2C380", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4001345")]
	private const float CorrectDestinationRadius = 4f;

	[Token(Token = "0x4001346")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private SphereCollider TriggerOutsideSphere;

	[Token(Token = "0x4001347")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Transform m_correctTeleportDestination;

	[Token(Token = "0x4001348")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool HaveTriggeredCollapseEvent;

	[Token(Token = "0x4001349")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float CollapseEventDuration;

	[Token(Token = "0x400134A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Animator BridgeCollapseAnimator;

	[Token(Token = "0x400134B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject ParticleEffectObject;

	[Token(Token = "0x400134C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public NeatAudioPlayer BridgeAudioPlayer;

	[Token(Token = "0x400134D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public NeatAudioCue BridgeAudioCue;

	[Token(Token = "0x400134E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public AudioSource SplashAudio;

	[Token(Token = "0x400134F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public AudioSource ContinousAudio;

	[Token(Token = "0x4001350")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public AnimationCurve ContinousAudioVolumeCurve;

	[Token(Token = "0x4001351")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public float ContinousAudioMaxVolume;

	[Token(Token = "0x4001352")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public float SoundStartDelay;

	[Token(Token = "0x4001353")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private float SoundStartTimer;

	[Token(Token = "0x4001354")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private bool m_hasCrystalGem;

	[Token(Token = "0x60013BC")]
	[Address(RVA = "0xE2B834", Offset = "0xE2B834", VA = "0xE2B834", Slot = "5")]
	public void Initialize()
	{
	}

	[Token(Token = "0x60013BD")]
	[Address(RVA = "0xE2BA9C", Offset = "0xE2BA9C", VA = "0xE2BA9C")]
	public void OnDestroy()
	{
	}

	[Token(Token = "0x60013BE")]
	[Address(RVA = "0xE2BBA4", Offset = "0xE2BBA4", VA = "0xE2BBA4")]
	private void OnGemGrabbed(GemGrabbedEvent e)
	{
	}

	[Token(Token = "0x60013BF")]
	[Address(RVA = "0xE2BBCC", Offset = "0xE2BBCC", VA = "0xE2BBCC")]
	private void OnPlayerTeleportEvent(PlayerTeleportEvent e)
	{
	}

	[Token(Token = "0x60013C0")]
	[Address(RVA = "0xE2BD04", Offset = "0xE2BD04", VA = "0xE2BD04")]
	private bool IsOutsideSphere(Vector3 pos)
	{
		return default(bool);
	}

	[Token(Token = "0x60013C1")]
	[Address(RVA = "0xE2BE34", Offset = "0xE2BE34", VA = "0xE2BE34")]
	public void TriggerCollapseEvent()
	{
	}

	[Token(Token = "0x60013C2")]
	[Address(RVA = "0xE2B9D8", Offset = "0xE2B9D8", VA = "0xE2B9D8")]
	public void OnCollapseEventFinished()
	{
	}

	[Token(Token = "0x60013C3")]
	[Address(RVA = "0xE2C0D8", Offset = "0xE2C0D8", VA = "0xE2C0D8", Slot = "4")]
	public override ComponentState CreateState()
	{
		return null;
	}

	[Token(Token = "0x60013C4")]
	[Address(RVA = "0xE2C05C", Offset = "0xE2C05C", VA = "0xE2C05C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x98E170", Offset = "0x98E170")]
	private IEnumerator CollapseEventRoutine()
	{
		return null;
	}

	[Token(Token = "0x60013C5")]
	[Address(RVA = "0xE2C19C", Offset = "0xE2C19C", VA = "0xE2C19C")]
	public TeleportTutorialBridge()
	{
	}
}
[Serializable]
[Token(Token = "0x2000318")]
public class TeleportTutorialBridgeComponentState : ComponentState
{
	[Token(Token = "0x400135B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public bool HaveTriggeredCollapseEvent;

	[Token(Token = "0x60013CC")]
	[Address(RVA = "0xE2C140", Offset = "0xE2C140", VA = "0xE2C140")]
	public TeleportTutorialBridgeComponentState(bool inHaveTriggeredCollapseEvent)
	{
	}
}
[Token(Token = "0x2000319")]
public class TriggerCrystalHarmonization : MonoBehaviour
{
	[Token(Token = "0x200031A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x972C9C", Offset = "0x972C9C")]
	private sealed class <TriggerCrystalHarmonizationStaggered>d__2 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400135D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400135E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400135F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TriggerCrystalHarmonization <>4__this;

		[Token(Token = "0x4001360")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int <i>5__2;

		[Token(Token = "0x17000209")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60013D3")]
			[Address(RVA = "0xE6A260", Offset = "0xE6A260", VA = "0xE6A260", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700020A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60013D5")]
			[Address(RVA = "0xE6A2C8", Offset = "0xE6A2C8", VA = "0xE6A2C8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60013D0")]
		[Address(RVA = "0xE6A0CC", Offset = "0xE6A0CC", VA = "0xE6A0CC")]
		[DebuggerHidden]
		public <TriggerCrystalHarmonizationStaggered>d__2(int <>1__state)
		{
		}

		[Token(Token = "0x60013D1")]
		[Address(RVA = "0xE6A100", Offset = "0xE6A100", VA = "0xE6A100", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60013D2")]
		[Address(RVA = "0xE6A104", Offset = "0xE6A104", VA = "0xE6A104", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60013D4")]
		[Address(RVA = "0xE6A268", Offset = "0xE6A268", VA = "0xE6A268", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400135C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private InstrumentResonator[] crystals;

	[Token(Token = "0x60013CD")]
	[Address(RVA = "0xE6A018", Offset = "0xE6A018", VA = "0xE6A018")]
	public void OnTriggerCrystalHarmonization()
	{
	}

	[Token(Token = "0x60013CE")]
	[Address(RVA = "0xE6A050", Offset = "0xE6A050", VA = "0xE6A050")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x98E224", Offset = "0x98E224")]
	private IEnumerator TriggerCrystalHarmonizationStaggered()
	{
		return null;
	}

	[Token(Token = "0x60013CF")]
	[Address(RVA = "0xE6A0F8", Offset = "0xE6A0F8", VA = "0xE6A0F8")]
	public TriggerCrystalHarmonization()
	{
	}
}
[Token(Token = "0x200031B")]
public class TriggerSoilModifiers : MonoBehaviour
{
	[Token(Token = "0x200031C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x972CAC", Offset = "0x972CAC")]
	private sealed class <StaggerSoilModifierActivations>d__3 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001363")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001364")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001365")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TriggerSoilModifiers <>4__this;

		[Token(Token = "0x4001366")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int <i>5__2;

		[Token(Token = "0x1700020B")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60013DC")]
			[Address(RVA = "0xE6A508", Offset = "0xE6A508", VA = "0xE6A508", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700020C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60013DE")]
			[Address(RVA = "0xE6A570", Offset = "0xE6A570", VA = "0xE6A570", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60013D9")]
		[Address(RVA = "0xE6A384", Offset = "0xE6A384", VA = "0xE6A384")]
		[DebuggerHidden]
		public <StaggerSoilModifierActivations>d__3(int <>1__state)
		{
		}

		[Token(Token = "0x60013DA")]
		[Address(RVA = "0xE6A3C0", Offset = "0xE6A3C0", VA = "0xE6A3C0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60013DB")]
		[Address(RVA = "0xE6A3C4", Offset = "0xE6A3C4", VA = "0xE6A3C4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60013DD")]
		[Address(RVA = "0xE6A510", Offset = "0xE6A510", VA = "0xE6A510", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4001361")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private float modificationMultiplier;

	[Token(Token = "0x4001362")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private SoilModifierComponent[] soilModifiers;

	[Token(Token = "0x60013D6")]
	[Address(RVA = "0xE6A2D0", Offset = "0xE6A2D0", VA = "0xE6A2D0")]
	public void OnTriggerSoilModifiers()
	{
	}

	[Token(Token = "0x60013D7")]
	[Address(RVA = "0xE6A308", Offset = "0xE6A308", VA = "0xE6A308")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x98E2D8", Offset = "0x98E2D8")]
	private IEnumerator StaggerSoilModifierActivations()
	{
		return null;
	}

	[Token(Token = "0x60013D8")]
	[Address(RVA = "0xE6A3B0", Offset = "0xE6A3B0", VA = "0xE6A3B0")]
	public TriggerSoilModifiers()
	{
	}
}
[Token(Token = "0x200031D")]
public class ImportantItemState : ComponentState
{
	[Token(Token = "0x4001367")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public SaveID ImpostorSaveID;

	[Token(Token = "0x60013DF")]
	[Address(RVA = "0xBDECD4", Offset = "0xBDECD4", VA = "0xBDECD4")]
	public ImportantItemState(SaveID impostorId)
	{
	}
}
[Token(Token = "0x200031E")]
public enum MissionBeaconMapType
{
	[Token(Token = "0x4001369")]
	Homeland,
	[Token(Token = "0x400136A")]
	Biome1,
	[Token(Token = "0x400136B")]
	Biome2,
	[Token(Token = "0x400136C")]
	Biome3,
	[Token(Token = "0x400136D")]
	COUNT
}
[Token(Token = "0x200031F")]
public enum MissionBeaconMapState
{
	[Token(Token = "0x400136F")]
	Locked,
	[Token(Token = "0x4001370")]
	Unlocked,
	[Token(Token = "0x4001371")]
	Finished
}
[Token(Token = "0x2000320")]
public class MissionBeaconMapStateUpdateEvent : GameEvent
{
	[Token(Token = "0x60013E0")]
	[Address(RVA = "0xC21244", Offset = "0xC21244", VA = "0xC21244")]
	public MissionBeaconMapStateUpdateEvent()
	{
	}
}
[Token(Token = "0x2000321")]
public class TotemQuestBody : SaveableComponent, IInitializable
{
	[Token(Token = "0x2000322")]
	public struct HeadAttachPointData
	{
		[Token(Token = "0x4001383")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public GameObject AttachPointObject;

		[Token(Token = "0x4001384")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Collider AttachPointCollider;

		[Token(Token = "0x4001385")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public TotemQuestHead OccupyingObject;

		[Token(Token = "0x4001386")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float SlotRotation;
	}

	[Token(Token = "0x2000323")]
	private struct TotemHeadsRotationStep
	{
		[Token(Token = "0x4001387")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float[] TotemRotations;
	}

	[Token(Token = "0x2000324")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x972CBC", Offset = "0x972CBC")]
	private sealed class <RotateTotemHeads_Sequentially>d__31 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001388")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001389")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400138A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TotemQuestBody <>4__this;

		[Token(Token = "0x400138B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private TotemHeadsRotationStep[] <totemRotationSteps>5__2;

		[Token(Token = "0x400138C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float <currentRotationTime>5__3;

		[Token(Token = "0x400138D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private int <numRotationSteps>5__4;

		[Token(Token = "0x400138E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private int <previousRotationStep>5__5;

		[Token(Token = "0x1700020D")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60013FA")]
			[Address(RVA = "0xE66FB0", Offset = "0xE66FB0", VA = "0xE66FB0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700020E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60013FC")]
			[Address(RVA = "0xE67018", Offset = "0xE67018", VA = "0xE67018", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60013F7")]
		[Address(RVA = "0xE659D0", Offset = "0xE659D0", VA = "0xE659D0")]
		[DebuggerHidden]
		public <RotateTotemHeads_Sequentially>d__31(int <>1__state)
		{
		}

		[Token(Token = "0x60013F8")]
		[Address(RVA = "0xE66868", Offset = "0xE66868", VA = "0xE66868", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60013F9")]
		[Address(RVA = "0xE6686C", Offset = "0xE6686C", VA = "0xE6686C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60013FB")]
		[Address(RVA = "0xE66FB8", Offset = "0xE66FB8", VA = "0xE66FB8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000325")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x972CCC", Offset = "0x972CCC")]
	private sealed class <ResetTotemHeadRotations>d__35 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400138F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001390")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001391")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TotemQuestBody <>4__this;

		[Token(Token = "0x4001392")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int <numTotemHeads>5__2;

		[Token(Token = "0x4001393")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float[] <initialTotemRotations>5__3;

		[Token(Token = "0x4001394")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float <currentRotationTime>5__4;

		[Token(Token = "0x1700020F")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001400")]
			[Address(RVA = "0xE667F8", Offset = "0xE667F8", VA = "0xE667F8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000210")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001402")]
			[Address(RVA = "0xE66860", Offset = "0xE66860", VA = "0xE66860", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60013FD")]
		[Address(RVA = "0xE65D44", Offset = "0xE65D44", VA = "0xE65D44")]
		[DebuggerHidden]
		public <ResetTotemHeadRotations>d__35(int <>1__state)
		{
		}

		[Token(Token = "0x60013FE")]
		[Address(RVA = "0xE661EC", Offset = "0xE661EC", VA = "0xE661EC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60013FF")]
		[Address(RVA = "0xE661F0", Offset = "0xE661F0", VA = "0xE661F0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001401")]
		[Address(RVA = "0xE66800", Offset = "0xE66800", VA = "0xE66800", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4001372")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static TotemQuestBody Instance;

	[Token(Token = "0x4001373")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private GameObject[] TotemHeadAttachPoints;

	[Token(Token = "0x4001374")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private HeadAttachPointData[] TotemHeadAttachPointDatas;

	[Token(Token = "0x4001375")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Material TotemHeadPreviewMaterial;

	[Token(Token = "0x4001376")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float TotemHeadRotationDuration;

	[Token(Token = "0x4001377")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float TotemHeadResetDuration;

	[Token(Token = "0x4001378")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float[] InitialSlotRotations;

	[Token(Token = "0x4001379")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool IsRotating;

	[Token(Token = "0x400137A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float[] CurrentRotationTargets;

	[Token(Token = "0x400137B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private bool PuzzleFinished;

	[Token(Token = "0x400137C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x97B1B4", Offset = "0x97B1B4")]
	private NeatAudioPlayer TotemBodyAudioPlayer;

	[Token(Token = "0x400137D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private NeatAudioPlayer TotemBodyLoopAudioPlayer;

	[Token(Token = "0x400137E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private NeatAudioCue TotemHeadShowVisualizationCue;

	[Token(Token = "0x400137F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	private NeatAudioCue TotemHeadAttachedCue;

	[Token(Token = "0x4001380")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	private NeatAudioCue TotemHeadRotationCue;

	[Token(Token = "0x4001381")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[SerializeField]
	private NeatAudioCue TotemHeadRotationFinishedCue;

	[Token(Token = "0x4001382")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[SerializeField]
	private NeatAudioCue TotemPuzzleCompleteCue;

	[Token(Token = "0x60013E1")]
	[Address(RVA = "0xE64840", Offset = "0xE64840", VA = "0xE64840")]
	public TotemQuestBody()
	{
	}

	[Token(Token = "0x60013E2")]
	[Address(RVA = "0xE648F8", Offset = "0xE648F8", VA = "0xE648F8")]
	public void Awake()
	{
	}

	[Token(Token = "0x60013E3")]
	[Address(RVA = "0xE64950", Offset = "0xE64950", VA = "0xE64950")]
	public void OnDestroy()
	{
	}

	[Token(Token = "0x60013E4")]
	[Address(RVA = "0xE64A00", Offset = "0xE64A00", VA = "0xE64A00", Slot = "5")]
	public void Initialize()
	{
	}

	[Token(Token = "0x60013E5")]
	[Address(RVA = "0xE64B6C", Offset = "0xE64B6C", VA = "0xE64B6C")]
	public void InitializeAttachPointData()
	{
	}

	[Token(Token = "0x60013E6")]
	[Address(RVA = "0xE64DB0", Offset = "0xE64DB0", VA = "0xE64DB0")]
	public int GetOptimalHeadAttachPointIndex(PlayerHand holdingHand)
	{
		return default(int);
	}

	[Token(Token = "0x60013E7")]
	[Address(RVA = "0xE651E8", Offset = "0xE651E8", VA = "0xE651E8")]
	public bool AttachTotemHead(TotemQuestHead inHead, int inAttachPointIndex, bool canTriggerRotation = true)
	{
		return default(bool);
	}

	[Token(Token = "0x60013E8")]
	[Address(RVA = "0xE65604", Offset = "0xE65604", VA = "0xE65604")]
	public void DetachTotemHead(TotemQuestHead inHead, int inAttachPointIndex)
	{
	}

	[Token(Token = "0x60013E9")]
	[Address(RVA = "0xE65728", Offset = "0xE65728", VA = "0xE65728")]
	public void PreviewTotemHeadOnAttachPoint(int inAttachSlotID, Mesh inTotemHeadMesh, Vector3 meshScale)
	{
	}

	[Token(Token = "0x60013EA")]
	[Address(RVA = "0xE65930", Offset = "0xE65930", VA = "0xE65930")]
	public void PlayShowVisualizationAudio()
	{
	}

	[Token(Token = "0x60013EB")]
	[Address(RVA = "0xE6544C", Offset = "0xE6544C", VA = "0xE6544C")]
	public bool ShouldTriggerTotemHeadRotation()
	{
		return default(bool);
	}

	[Token(Token = "0x60013EC")]
	[Address(RVA = "0xE65538", Offset = "0xE65538", VA = "0xE65538")]
	public void TriggerTotemHeadRotation()
	{
	}

	[Token(Token = "0x60013ED")]
	[Address(RVA = "0xE65954", Offset = "0xE65954", VA = "0xE65954")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x98E38C", Offset = "0x98E38C")]
	public IEnumerator RotateTotemHeads_Sequentially()
	{
		return null;
	}

	[Token(Token = "0x60013EE")]
	[Address(RVA = "0xE659FC", Offset = "0xE659FC", VA = "0xE659FC")]
	private void PlayTotemHeadRotationFinishedSound()
	{
	}

	[Token(Token = "0x60013EF")]
	[Address(RVA = "0xE65A20", Offset = "0xE65A20", VA = "0xE65A20")]
	public void ValidateTotemHeadRotations()
	{
	}

	[Token(Token = "0x60013F0")]
	[Address(RVA = "0xE65AEC", Offset = "0xE65AEC", VA = "0xE65AEC")]
	public void OnPuzzleFinished()
	{
	}

	[Token(Token = "0x60013F1")]
	[Address(RVA = "0xE65B94", Offset = "0xE65B94", VA = "0xE65B94")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x98E3F0", Offset = "0x98E3F0")]
	public IEnumerator ResetTotemHeadRotations()
	{
		return null;
	}

	[Token(Token = "0x60013F2")]
	[Address(RVA = "0xE65D70", Offset = "0xE65D70", VA = "0xE65D70")]
	public float[] CalculateTargetRotations()
	{
		return null;
	}

	[Token(Token = "0x60013F3")]
	[Address(RVA = "0xE65EC4", Offset = "0xE65EC4", VA = "0xE65EC4")]
	private TotemHeadsRotationStep[] CalculateRotationSteps()
	{
		return null;
	}

	[Token(Token = "0x60013F4")]
	[Address(RVA = "0xE65C10", Offset = "0xE65C10", VA = "0xE65C10")]
	public void SetTotemHeadsGrabbable(bool newGrabbable)
	{
	}

	[Token(Token = "0x60013F5")]
	[Address(RVA = "0xE660E0", Offset = "0xE660E0", VA = "0xE660E0")]
	public bool HeadIndexHaveCorrectRotation(int inHeadIndex)
	{
		return default(bool);
	}

	[Token(Token = "0x60013F6")]
	[Address(RVA = "0xE66174", Offset = "0xE66174", VA = "0xE66174", Slot = "4")]
	public override ComponentState CreateState()
	{
		return null;
	}
}
[Token(Token = "0x2000326")]
public class TotemQuestBodyState : ComponentState
{
	[Token(Token = "0x4001395")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public bool PuzzleFinished;

	[Token(Token = "0x6001403")]
	[Address(RVA = "0xE661E4", Offset = "0xE661E4", VA = "0xE661E4")]
	public TotemQuestBodyState()
	{
	}
}
[Token(Token = "0x2000327")]
public class TotemQuestDoor : SaveableComponent, IInitializable
{
	[Token(Token = "0x2000328")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x972CDC", Offset = "0x972CDC")]
	private sealed class <OpenDoor>d__13 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40013A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40013A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40013A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TotemQuestDoor <>4__this;

		[Token(Token = "0x40013A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <currentTime>5__2;

		[Token(Token = "0x17000211")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600140F")]
			[Address(RVA = "0xE6773C", Offset = "0xE6773C", VA = "0xE6773C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000212")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001411")]
			[Address(RVA = "0xE677A4", Offset = "0xE677A4", VA = "0xE677A4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600140C")]
		[Address(RVA = "0xE673FC", Offset = "0xE673FC", VA = "0xE673FC")]
		[DebuggerHidden]
		public <OpenDoor>d__13(int <>1__state)
		{
		}

		[Token(Token = "0x600140D")]
		[Address(RVA = "0xE674F4", Offset = "0xE674F4", VA = "0xE674F4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600140E")]
		[Address(RVA = "0xE674F8", Offset = "0xE674F8", VA = "0xE674F8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001410")]
		[Address(RVA = "0xE67744", Offset = "0xE67744", VA = "0xE67744", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000329")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x972CEC", Offset = "0x972CEC")]
	private sealed class <PlayOpenDoorAudio>d__14 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40013A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40013A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40013A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TotemQuestDoor <>4__this;

		[Token(Token = "0x40013A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <openDoorSoundTimer>5__2;

		[Token(Token = "0x17000213")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001415")]
			[Address(RVA = "0xE67864", Offset = "0xE67864", VA = "0xE67864", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000214")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001417")]
			[Address(RVA = "0xE678CC", Offset = "0xE678CC", VA = "0xE678CC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001412")]
		[Address(RVA = "0xE67428", Offset = "0xE67428", VA = "0xE67428")]
		[DebuggerHidden]
		public <PlayOpenDoorAudio>d__14(int <>1__state)
		{
		}

		[Token(Token = "0x6001413")]
		[Address(RVA = "0xE677AC", Offset = "0xE677AC", VA = "0xE677AC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001414")]
		[Address(RVA = "0xE677B0", Offset = "0xE677B0", VA = "0xE677B0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001416")]
		[Address(RVA = "0xE6786C", Offset = "0xE6786C", VA = "0xE6786C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4001396")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private float DoorOpenDuration;

	[Token(Token = "0x4001397")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private AnimationCurve DoorOpenCurve;

	[Token(Token = "0x4001398")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private float DoorOpenTargetY;

	[Token(Token = "0x4001399")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private GameObject DoorObject;

	[Token(Token = "0x400139A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private GameObject DoorBlockingVolume;

	[Token(Token = "0x400139B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x97B2B0", Offset = "0x97B2B0")]
	private NeatAudioPlayer DoorAudioPlayer;

	[Token(Token = "0x400139C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private NeatAudioCue DoorOpenCue;

	[Token(Token = "0x400139D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private float DoorOpenSoundDelay;

	[Token(Token = "0x400139E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private float InitialDoorYPosition;

	[Token(Token = "0x400139F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private bool DoorIsOpen;

	[Token(Token = "0x6001404")]
	[Address(RVA = "0xE67020", Offset = "0xE67020", VA = "0xE67020", Slot = "5")]
	public void Initialize()
	{
	}

	[Token(Token = "0x6001405")]
	[Address(RVA = "0xE67218", Offset = "0xE67218", VA = "0xE67218")]
	public void OnDestroy()
	{
	}

	[Token(Token = "0x6001406")]
	[Address(RVA = "0xE672C0", Offset = "0xE672C0", VA = "0xE672C0")]
	public void OnOpenDoorEvent(TotemQuestDoorOpenEvent e)
	{
	}

	[Token(Token = "0x6001407")]
	[Address(RVA = "0xE67304", Offset = "0xE67304", VA = "0xE67304")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x98E4F4", Offset = "0x98E4F4")]
	public IEnumerator OpenDoor()
	{
		return null;
	}

	[Token(Token = "0x6001408")]
	[Address(RVA = "0xE67380", Offset = "0xE67380", VA = "0xE67380")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x98E558", Offset = "0x98E558")]
	public IEnumerator PlayOpenDoorAudio()
	{
		return null;
	}

	[Token(Token = "0x6001409")]
	[Address(RVA = "0xE6717C", Offset = "0xE6717C", VA = "0xE6717C")]
	public void ForceOpenDoor()
	{
	}

	[Token(Token = "0x600140A")]
	[Address(RVA = "0xE67454", Offset = "0xE67454", VA = "0xE67454", Slot = "4")]
	public override ComponentState CreateState()
	{
		return null;
	}

	[Token(Token = "0x600140B")]
	[Address(RVA = "0xE674EC", Offset = "0xE674EC", VA = "0xE674EC")]
	public TotemQuestDoor()
	{
	}
}
[Token(Token = "0x200032A")]
public class TotemQuestDoorState : ComponentState
{
	[Token(Token = "0x40013A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public bool DoorIsOpen;

	[Token(Token = "0x6001418")]
	[Address(RVA = "0xE674BC", Offset = "0xE674BC", VA = "0xE674BC")]
	public TotemQuestDoorState(bool inDoorIsOpen)
	{
	}
}
[Token(Token = "0x200032B")]
public class TotemQuestDoorOpenEvent : GameEvent
{
	[Token(Token = "0x6001419")]
	[Address(RVA = "0xE65D3C", Offset = "0xE65D3C", VA = "0xE65D3C")]
	public TotemQuestDoorOpenEvent()
	{
	}
}
[Token(Token = "0x200032C")]
public class TotemQuestHead : SaveableComponent, IInitializable
{
	[Token(Token = "0x200032D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x972CFC", Offset = "0x972CFC")]
	private sealed class <Illuminate>d__20 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40013B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40013B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40013B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TotemQuestHead <>4__this;

		[Token(Token = "0x40013B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float TargetIllumination;

		[Token(Token = "0x40013BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <currentIlluminationFadeTime>5__2;

		[Token(Token = "0x17000215")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001429")]
			[Address(RVA = "0xE68498", Offset = "0xE68498", VA = "0xE68498", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000216")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600142B")]
			[Address(RVA = "0xE68500", Offset = "0xE68500", VA = "0xE68500", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001426")]
		[Address(RVA = "0xE68194", Offset = "0xE68194", VA = "0xE68194")]
		[DebuggerHidden]
		public <Illuminate>d__20(int <>1__state)
		{
		}

		[Token(Token = "0x6001427")]
		[Address(RVA = "0xE682E4", Offset = "0xE682E4", VA = "0xE682E4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001428")]
		[Address(RVA = "0xE682E8", Offset = "0xE682E8", VA = "0xE682E8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600142A")]
		[Address(RVA = "0xE684A0", Offset = "0xE684A0", VA = "0xE684A0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40013A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Grabbable TotemHeadGrabbable;

	[Token(Token = "0x40013AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool IsBeingGrabbed;

	[Token(Token = "0x40013AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private PlayerHand GrabbingHand;

	[Token(Token = "0x40013AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private int TargetedTotemBodyAttachPoint;

	[Token(Token = "0x40013AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private int OccupiedTotemBodyAttachPoint;

	[Token(Token = "0x40013AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private int PreviouslyTargetedTotemBodyAttachPoint;

	[Token(Token = "0x40013AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private Mesh TotemHeadPreviewMesh;

	[Token(Token = "0x40013B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private Vector3 TotemHeadPreviewMeshScale;

	[Token(Token = "0x40013B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public float HeadRotationAmount;

	[Token(Token = "0x40013B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private MeshRenderer[] HeadMeshRenderers;

	[Token(Token = "0x40013B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private MaterialPropertyBlock HeadMeshPropertyBlock;

	[Token(Token = "0x40013B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private float CurrentIllumination;

	[Token(Token = "0x40013B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private float IlluminationFadeDuration;

	[Token(Token = "0x600141A")]
	[Address(RVA = "0xE678D4", Offset = "0xE678D4", VA = "0xE678D4", Slot = "5")]
	public void Initialize()
	{
	}

	[Token(Token = "0x600141B")]
	[Address(RVA = "0xE67CC4", Offset = "0xE67CC4", VA = "0xE67CC4")]
	public void OnDestroy()
	{
	}

	[Token(Token = "0x600141C")]
	[Address(RVA = "0xE67E44", Offset = "0xE67E44", VA = "0xE67E44")]
	public void Update()
	{
	}

	[Token(Token = "0x600141D")]
	[Address(RVA = "0xE67F64", Offset = "0xE67F64", VA = "0xE67F64")]
	public void OnGrabbed(Grabbable inGrabbable)
	{
	}

	[Token(Token = "0x600141E")]
	[Address(RVA = "0xE6803C", Offset = "0xE6803C", VA = "0xE6803C")]
	public void OnDropped(Grabbable inGrabbable)
	{
	}

	[Token(Token = "0x600141F")]
	[Address(RVA = "0xE66F80", Offset = "0xE66F80", VA = "0xE66F80")]
	public void ShowIllumination()
	{
	}

	[Token(Token = "0x6001420")]
	[Address(RVA = "0xE667C8", Offset = "0xE667C8", VA = "0xE667C8")]
	public void HideIllumination()
	{
	}

	[Token(Token = "0x6001421")]
	[Address(RVA = "0xE68108", Offset = "0xE68108", VA = "0xE68108")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x98E65C", Offset = "0x98E65C")]
	public IEnumerator Illuminate(float TargetIllumination)
	{
		return null;
	}

	[Token(Token = "0x6001422")]
	[Address(RVA = "0xE65570", Offset = "0xE65570", VA = "0xE65570")]
	public void ForceIllumination(float inIllumination)
	{
	}

	[Token(Token = "0x6001423")]
	[Address(RVA = "0xE681C0", Offset = "0xE681C0", VA = "0xE681C0")]
	private void UpdatePropertyBlocks()
	{
	}

	[Token(Token = "0x6001424")]
	[Address(RVA = "0xE6824C", Offset = "0xE6824C", VA = "0xE6824C", Slot = "4")]
	public override ComponentState CreateState()
	{
		return null;
	}

	[Token(Token = "0x6001425")]
	[Address(RVA = "0xE682C4", Offset = "0xE682C4", VA = "0xE682C4")]
	public TotemQuestHead()
	{
	}
}
[Token(Token = "0x200032E")]
public class TotemQuestHeadState : ComponentState
{
	[Token(Token = "0x40013BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int OccupiedTotemBodySlot;

	[Token(Token = "0x600142C")]
	[Address(RVA = "0xE682BC", Offset = "0xE682BC", VA = "0xE682BC")]
	public TotemQuestHeadState()
	{
	}
}
[Token(Token = "0x200032F")]
public class GodHandsAttachSocket : MonoBehaviour
{
	[Token(Token = "0x40013BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private AttachSlot m_crystalAttashSlot;

	[Token(Token = "0x600142D")]
	[Address(RVA = "0xE80B78", Offset = "0xE80B78", VA = "0xE80B78")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600142E")]
	[Address(RVA = "0xE80C20", Offset = "0xE80C20", VA = "0xE80C20")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600142F")]
	[Address(RVA = "0xE80CC8", Offset = "0xE80CC8", VA = "0xE80CC8")]
	private void OnGodStatueStartSpinning(GodStatueStartSpinningEvent e)
	{
	}

	[Token(Token = "0x6001430")]
	[Address(RVA = "0xE80CCC", Offset = "0xE80CCC", VA = "0xE80CCC")]
	private void DettachGem()
	{
	}

	[Token(Token = "0x6001431")]
	[Address(RVA = "0xE80EB4", Offset = "0xE80EB4", VA = "0xE80EB4")]
	public GodHandsAttachSocket()
	{
	}
}
[Token(Token = "0x2000330")]
public class RandomAnimationBehavior : StateMachineBehaviour
{
	[Token(Token = "0x40013BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x97B34C", Offset = "0x97B34C")]
	public string parameterName;

	[Token(Token = "0x40013BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x97B384", Offset = "0x97B384")]
	public int numAnimsToChooseBetween;

	[Token(Token = "0x40013BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x97B3BC", Offset = "0x97B3BC")]
	public float chance;

	[Token(Token = "0x40013C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x97B3F4", Offset = "0x97B3F4")]
	public float delay;

	[Token(Token = "0x40013C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float timeSinceStateWasEntered;

	[Token(Token = "0x40013C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool animHasBeenTriggered;

	[Token(Token = "0x40013C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	private bool hasRandomized;

	[Token(Token = "0x40013C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float currentStateTime;

	[Token(Token = "0x6001432")]
	[Address(RVA = "0xD18024", Offset = "0xD18024", VA = "0xD18024", Slot = "4")]
	public override void OnStateEnter(Animator animator, AnimatorStateInfo stateInfo, int layerIndex)
	{
	}

	[Token(Token = "0x6001433")]
	[Address(RVA = "0xD18030", Offset = "0xD18030", VA = "0xD18030", Slot = "5")]
	public override void OnStateUpdate(Animator animator, AnimatorStateInfo stateInfo, int layerIndex)
	{
	}

	[Token(Token = "0x6001434")]
	[Address(RVA = "0xD18180", Offset = "0xD18180", VA = "0xD18180", Slot = "6")]
	public override void OnStateExit(Animator animator, AnimatorStateInfo stateInfo, int layerIndex)
	{
	}

	[Token(Token = "0x6001435")]
	[Address(RVA = "0xD18200", Offset = "0xD18200", VA = "0xD18200")]
	public RandomAnimationBehavior()
	{
	}
}
[Token(Token = "0x2000331")]
public class RecordingCamera : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x2000332")]
	public struct SmoothingConfig
	{
		[Token(Token = "0x40013CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float radius;

		[Token(Token = "0x40013CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float angle;

		[Token(Token = "0x40013CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float harshness;

		[Token(Token = "0x17000217")]
		public float RadiusSq
		{
			[Token(Token = "0x600143D")]
			[Address(RVA = "0xA44C8C", Offset = "0xA44C8C", VA = "0xA44C8C")]
			get
			{
				return default(float);
			}
		}
	}

	[Token(Token = "0x2000333")]
	public enum LerpRotMode
	{
		[Token(Token = "0x40013CE")]
		Smooth,
		[Token(Token = "0x40013CF")]
		SmoothBasedOnPosition
	}

	[Token(Token = "0x40013C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Camera cam;

	[Token(Token = "0x40013C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform targetCamera;

	[Token(Token = "0x40013C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public SmoothingConfig inner;

	[Token(Token = "0x40013C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public SmoothingConfig outer;

	[Token(Token = "0x40013C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public LerpRotMode rotMode;

	[Token(Token = "0x6001436")]
	[Address(RVA = "0xD1E394", Offset = "0xD1E394", VA = "0xD1E394")]
	private void OnDrawGizmosSelected()
	{
	}

	[Token(Token = "0x6001437")]
	[Address(RVA = "0xD1E448", Offset = "0xD1E448", VA = "0xD1E448")]
	private void OnValidate()
	{
	}

	[Token(Token = "0x6001438")]
	[Address(RVA = "0xD1E460", Offset = "0xD1E460", VA = "0xD1E460")]
	private void Update()
	{
	}

	[Token(Token = "0x6001439")]
	[Address(RVA = "0xD1E464", Offset = "0xD1E464", VA = "0xD1E464")]
	public void UpdateSmoothing()
	{
	}

	[Token(Token = "0x600143A")]
	[Address(RVA = "0xD1E7A4", Offset = "0xD1E7A4", VA = "0xD1E7A4")]
	public float GetSmoothingHarshness(float refDist, float distMin, float distMax, float valueMin, float valueMax, bool needsSquareRoot = false)
	{
		return default(float);
	}

	[Token(Token = "0x600143B")]
	[Address(RVA = "0xD1E910", Offset = "0xD1E910", VA = "0xD1E910")]
	public void Enable(bool enable)
	{
	}

	[Token(Token = "0x600143C")]
	[Address(RVA = "0xD1EA94", Offset = "0xD1EA94", VA = "0xD1EA94")]
	public RecordingCamera()
	{
	}
}
[Token(Token = "0x2000334")]
public enum SoilDataType
{
	[Token(Token = "0x40013D1")]
	Validity,
	[Token(Token = "0x40013D2")]
	Tillability,
	[Token(Token = "0x40013D3")]
	Soilness,
	[Token(Token = "0x40013D4")]
	Waterness,
	[Token(Token = "0x40013D5")]
	Fertility,
	[Token(Token = "0x40013D6")]
	NumTypes
}
[Token(Token = "0x2000335")]
public class SoilManager : MonoBehaviour
{
	[Token(Token = "0x40013D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static SoilManager instance;

	[Token(Token = "0x40013D8")]
	public const string TillableMaterialPath = "Assets/Data/Soil Data Presets/TillableMaterials.asset";

	[Token(Token = "0x40013D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static TillableMaterials tillableMaterials;

	[Token(Token = "0x40013DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private TillableMaterials m_tillableMaterials;

	[Token(Token = "0x600143E")]
	[Address(RVA = "0xDF1048", Offset = "0xDF1048", VA = "0xDF1048")]
	public static SoilSurface TryGetSurface(Collider collider)
	{
		return null;
	}

	[Token(Token = "0x600143F")]
	[Address(RVA = "0xDF1128", Offset = "0xDF1128", VA = "0xDF1128")]
	public static SoilSurface TryGetSurface(Collision col)
	{
		return null;
	}

	[Token(Token = "0x6001440")]
	[Address(RVA = "0xDF11A8", Offset = "0xDF11A8", VA = "0xDF11A8")]
	public static SoilSurface TryGetSurface(RaycastHit hit)
	{
		return null;
	}

	[Token(Token = "0x6001441")]
	[Address(RVA = "0xDF1220", Offset = "0xDF1220", VA = "0xDF1220")]
	public static bool TryTill(Collision col, float radius)
	{
		return default(bool);
	}

	[Token(Token = "0x6001442")]
	[Address(RVA = "0xDF13F4", Offset = "0xDF13F4", VA = "0xDF13F4")]
	public static bool TryTill(RaycastHit hit, float radius)
	{
		return default(bool);
	}

	[Token(Token = "0x6001443")]
	[Address(RVA = "0xDF12FC", Offset = "0xDF12FC", VA = "0xDF12FC")]
	public static bool TryTill(Collider collider, Vector3 worldPos, float radius)
	{
		return default(bool);
	}

	[Token(Token = "0x6001444")]
	[Address(RVA = "0xDF14A4", Offset = "0xDF14A4", VA = "0xDF14A4")]
	public static bool TryUntill(Collision col, float radius)
	{
		return default(bool);
	}

	[Token(Token = "0x6001445")]
	[Address(RVA = "0xDF1678", Offset = "0xDF1678", VA = "0xDF1678")]
	public static bool TryUntill(RaycastHit hit, float radius)
	{
		return default(bool);
	}

	[Token(Token = "0x6001446")]
	[Address(RVA = "0xDF1580", Offset = "0xDF1580", VA = "0xDF1580")]
	public static bool TryUntill(Collider collider, Vector3 worldPos, float radius)
	{
		return default(bool);
	}

	[Token(Token = "0x6001447")]
	[Address(RVA = "0xDF1728", Offset = "0xDF1728", VA = "0xDF1728")]
	public static bool TryWater(Collision col, float radius, float waterDelta)
	{
		return default(bool);
	}

	[Token(Token = "0x6001448")]
	[Address(RVA = "0xDF1928", Offset = "0xDF1928", VA = "0xDF1928")]
	public static bool TryWater(RaycastHit hit, float radius, float waterDelta)
	{
		return default(bool);
	}

	[Token(Token = "0x6001449")]
	[Address(RVA = "0xDF1814", Offset = "0xDF1814", VA = "0xDF1814")]
	public static bool TryWater(Collider collider, Vector3 worldPos, float radius, float waterDelta)
	{
		return default(bool);
	}

	[Token(Token = "0x600144A")]
	[Address(RVA = "0xDF19E8", Offset = "0xDF19E8", VA = "0xDF19E8")]
	public static bool TryFertilize(Collision col, float radius)
	{
		return default(bool);
	}

	[Token(Token = "0x600144B")]
	[Address(RVA = "0xDF1BC4", Offset = "0xDF1BC4", VA = "0xDF1BC4")]
	public static bool TryFertilize(RaycastHit hit, float radius)
	{
		return default(bool);
	}

	[Token(Token = "0x600144C")]
	[Address(RVA = "0xDF1AC4", Offset = "0xDF1AC4", VA = "0xDF1AC4")]
	public static bool TryFertilize(Collider collider, Vector3 worldPos, float radius)
	{
		return default(bool);
	}

	[Token(Token = "0x600144D")]
	[Address(RVA = "0xDF1C74", Offset = "0xDF1C74", VA = "0xDF1C74")]
	public void Awake()
	{
	}

	[Token(Token = "0x600144E")]
	[Address(RVA = "0xDF1CE4", Offset = "0xDF1CE4", VA = "0xDF1CE4")]
	public static TillableMaterials GetTillableMaterials()
	{
		return null;
	}

	[Token(Token = "0x600144F")]
	[Address(RVA = "0xDF1D40", Offset = "0xDF1D40", VA = "0xDF1D40")]
	private static TillableMaterials GetInstancedTillableMaterials()
	{
		return null;
	}

	[Token(Token = "0x6001450")]
	[Address(RVA = "0xDF1EB0", Offset = "0xDF1EB0", VA = "0xDF1EB0")]
	public SoilManager()
	{
	}
}
[Token(Token = "0x2000336")]
public enum SoilSurfaceBiome
{
	[Token(Token = "0x40013DC")]
	Default,
	[Token(Token = "0x40013DD")]
	Biome1,
	[Token(Token = "0x40013DE")]
	Biome2,
	[Token(Token = "0x40013DF")]
	Biome3,
	[Token(Token = "0x40013E0")]
	Biome4,
	[Token(Token = "0x40013E1")]
	COUNT
}
[Token(Token = "0x2000337")]
public class SoilSurface : SaveableComponent, IInitializable
{
	[Token(Token = "0x40013E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static List<SoilSurface> surfaces;

	[Token(Token = "0x40013E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static Dictionary<Collider, SoilSurface> colliderToSurface;

	[Token(Token = "0x40013E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static Dictionary<SaveID, SoilSurface> saveIdToSurface;

	[Token(Token = "0x40013E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	protected bool initialized;

	[Token(Token = "0x40013E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[SerializeField]
	protected SaveID saveId;

	[Token(Token = "0x40013E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public int SurfaceID;

	[Token(Token = "0x6001452")]
	[Address(RVA = "0xDF10AC", Offset = "0xDF10AC", VA = "0xDF10AC")]
	public static SoilSurface TryGetSurface(Collider collider)
	{
		return null;
	}

	[Token(Token = "0x6001453")]
	[Address(RVA = "0xDF56B4", Offset = "0xDF56B4", VA = "0xDF56B4")]
	public static SoilSurface TryGetSurfaceFromId(SaveID id)
	{
		return null;
	}

	[Token(Token = "0x6001454")]
	[Address(RVA = "0xDF5798", Offset = "0xDF5798", VA = "0xDF5798")]
	public static void AddSurface(SoilSurface surface)
	{
	}

	[Token(Token = "0x6001455")]
	[Address(RVA = "0xDF5BB0", Offset = "0xDF5BB0", VA = "0xDF5BB0")]
	public static void RemoveSurface(SoilSurface surface)
	{
	}

	[Token(Token = "0x6001456")]
	[Address(RVA = "0xDF5D50", Offset = "0xDF5D50", VA = "0xDF5D50", Slot = "6")]
	protected virtual void OnDestroy()
	{
	}

	[Token(Token = "0x6001457")]
	[Address(RVA = "0xDF5DC8", Offset = "0xDF5DC8", VA = "0xDF5DC8", Slot = "7")]
	public virtual Collider[] GetColliders()
	{
		return null;
	}

	[Token(Token = "0x6001458")]
	[Address(RVA = "0xDF5DD0", Offset = "0xDF5DD0", VA = "0xDF5DD0", Slot = "8")]
	public virtual float Get(SoilDataType soilDataType, Vector3 worldPos)
	{
		return default(float);
	}

	[Token(Token = "0x6001459")]
	[Address(RVA = "0xDF5DD8", Offset = "0xDF5DD8", VA = "0xDF5DD8", Slot = "9")]
	public virtual bool TryTill(Vector3 worldPos, float radius)
	{
		return default(bool);
	}

	[Token(Token = "0x600145A")]
	[Address(RVA = "0xDF5DE0", Offset = "0xDF5DE0", VA = "0xDF5DE0", Slot = "10")]
	public virtual bool TryUntill(Vector3 worldPos, float radius)
	{
		return default(bool);
	}

	[Token(Token = "0x600145B")]
	[Address(RVA = "0xDF5DE8", Offset = "0xDF5DE8", VA = "0xDF5DE8", Slot = "11")]
	public virtual bool TryWater(Vector3 worldPos, float radius, float waterDelta)
	{
		return default(bool);
	}

	[Token(Token = "0x600145C")]
	[Address(RVA = "0xDF5DF0", Offset = "0xDF5DF0", VA = "0xDF5DF0", Slot = "12")]
	public virtual bool TryFertilize(Vector3 worldPos, float radius)
	{
		return default(bool);
	}

	[Token(Token = "0x600145D")]
	[Address(RVA = "0xDF5DF8", Offset = "0xDF5DF8", VA = "0xDF5DF8", Slot = "13")]
	public virtual bool IsUntillableSoilSurface()
	{
		return default(bool);
	}

	[Token(Token = "0x600145E")]
	[Address(RVA = "0xDF5E00", Offset = "0xDF5E00", VA = "0xDF5E00", Slot = "14")]
	public virtual SaveID GetSaveID()
	{
		return default(SaveID);
	}

	[Token(Token = "0x600145F")]
	[Address(RVA = "0xDF5EFC", Offset = "0xDF5EFC", VA = "0xDF5EFC", Slot = "15")]
	public virtual Vector2Int GetSoilSurfacePosition(Vector3 worldPos)
	{
		return default(Vector2Int);
	}

	[Token(Token = "0x6001460")]
	[Address(RVA = "0xDF5F30", Offset = "0xDF5F30", VA = "0xDF5F30", Slot = "16")]
	public virtual Vector2 GetSoilSurfacePositionFloat(Vector3 worldPos)
	{
		return default(Vector2);
	}

	[Token(Token = "0x6001461")]
	[Address(RVA = "0xDF5F64", Offset = "0xDF5F64", VA = "0xDF5F64", Slot = "4")]
	public override ComponentState CreateState()
	{
		return null;
	}

	[Token(Token = "0x6001462")]
	[Address(RVA = "0xDF5FC0", Offset = "0xDF5FC0", VA = "0xDF5FC0", Slot = "17")]
	public virtual void Initialize()
	{
	}

	[Token(Token = "0x6001463")]
	[Address(RVA = "0xDF6030", Offset = "0xDF6030", VA = "0xDF6030", Slot = "18")]
	public virtual void UpdateRenderData()
	{
	}

	[Token(Token = "0x6001464")]
	[Address(RVA = "0xDF6034", Offset = "0xDF6034", VA = "0xDF6034", Slot = "19")]
	public virtual void UpdateTillableMaterials()
	{
	}

	[Token(Token = "0x6001465")]
	[Address(RVA = "0xDF6038", Offset = "0xDF6038", VA = "0xDF6038")]
	public SoilSurface()
	{
	}
}
[Token(Token = "0x2000338")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x972D0C", Offset = "0x972D0C")]
public class SoilSurfaceDataPreset : ScriptableObject
{
	[Token(Token = "0x40013E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Material ProceduralGrassMaterial;

	[Token(Token = "0x40013E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Mesh ProceduralGrassMesh;

	[Token(Token = "0x40013EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Material ProceduralGrassInstancedMaterial;

	[Token(Token = "0x40013EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ComputeShader ProceduralGrassComputeShader;

	[Token(Token = "0x40013EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public SoilSurfaceBiome SurfaceBiome;

	[Token(Token = "0x6001467")]
	[Address(RVA = "0xDF6130", Offset = "0xDF6130", VA = "0xDF6130")]
	public SoilSurfaceDataPreset()
	{
	}
}
[Token(Token = "0x2000339")]
[ExecuteInEditMode]
public class SoilSurfaceGround : SoilSurface
{
	[Token(Token = "0x40013ED")]
	private const float TILL_RADIUS_WORLD = 1f;

	[Token(Token = "0x40013EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public SurfaceData surfaceData;

	[Token(Token = "0x40013EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Material matGrass;

	[Token(Token = "0x40013F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public SoilSurfaceDataPreset DataPreset;

	[Token(Token = "0x40013F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public SoilSurfaceBiome SurfaceBiomeType;

	[Token(Token = "0x40013F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public SurfaceGrass grass;

	[Token(Token = "0x40013F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Material matBlitData;

	[Token(Token = "0x40013F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static Material matBlitInit;

	[Token(Token = "0x40013F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public bool HaveUntillableAreas;

	[Token(Token = "0x40013F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x69")]
	public bool HaveSurfaceGrass;

	[Token(Token = "0x40013F7")]
	public const float HEIGHT_DISCREPANCY_THRESHOLD = 0.05f;

	[Token(Token = "0x6001468")]
	[Address(RVA = "0xDF6138", Offset = "0xDF6138", VA = "0xDF6138", Slot = "13")]
	public override bool IsUntillableSoilSurface()
	{
		return default(bool);
	}

	[Token(Token = "0x6001469")]
	[Address(RVA = "0xDF6140", Offset = "0xDF6140", VA = "0xDF6140", Slot = "17")]
	public override void Initialize()
	{
	}

	[Token(Token = "0x600146A")]
	[Address(RVA = "0xDF6844", Offset = "0xDF6844", VA = "0xDF6844", Slot = "6")]
	protected override void OnDestroy()
	{
	}

	[Token(Token = "0x600146B")]
	[Address(RVA = "0xDF6984", Offset = "0xDF6984", VA = "0xDF6984", Slot = "15")]
	public override Vector2Int GetSoilSurfacePosition(Vector3 worldPos)
	{
		return default(Vector2Int);
	}

	[Token(Token = "0x600146C")]
	[Address(RVA = "0xDF6A88", Offset = "0xDF6A88", VA = "0xDF6A88", Slot = "16")]
	public override Vector2 GetSoilSurfacePositionFloat(Vector3 worldPos)
	{
		return default(Vector2);
	}

	[Token(Token = "0x600146D")]
	[Address(RVA = "0xDF6B90", Offset = "0xDF6B90", VA = "0xDF6B90", Slot = "8")]
	public override float Get(SoilDataType soilDataType, Vector3 worldPos)
	{
		return default(float);
	}

	[Token(Token = "0x600146E")]
	[Address(RVA = "0xDF7054", Offset = "0xDF7054", VA = "0xDF7054", Slot = "7")]
	public override Collider[] GetColliders()
	{
		return null;
	}

	[Token(Token = "0x600146F")]
	[Address(RVA = "0xDF7070", Offset = "0xDF7070", VA = "0xDF7070", Slot = "9")]
	public override bool TryTill(Vector3 worldPos, float radius)
	{
		return default(bool);
	}

	[Token(Token = "0x6001470")]
	[Address(RVA = "0xDF70C4", Offset = "0xDF70C4", VA = "0xDF70C4", Slot = "10")]
	public override bool TryUntill(Vector3 worldPos, float radius)
	{
		return default(bool);
	}

	[Token(Token = "0x6001471")]
	[Address(RVA = "0xDF70F4", Offset = "0xDF70F4", VA = "0xDF70F4", Slot = "11")]
	public override bool TryWater(Vector3 worldPos, float radius, float waterDelta)
	{
		return default(bool);
	}

	[Token(Token = "0x6001472")]
	[Address(RVA = "0xDF7128", Offset = "0xDF7128", VA = "0xDF7128", Slot = "12")]
	public override bool TryFertilize(Vector3 worldPos, float radius)
	{
		return default(bool);
	}

	[Token(Token = "0x6001473")]
	[Address(RVA = "0xDF70A0", Offset = "0xDF70A0", VA = "0xDF70A0")]
	private bool ModifySurface(Vector3 worldPos, float delta, float radius, SoilDataType soilDataType)
	{
		return default(bool);
	}

	[Token(Token = "0x6001474")]
	[Address(RVA = "0xDF4E24", Offset = "0xDF4E24", VA = "0xDF4E24")]
	public bool ModifyNativeSurfaceData(Vector3 worldPos, float delta, float radius, SoilDataType soilDataType, bool inUseFalloff = true, bool inValueChanged = true, float inDuration = 0f)
	{
		return default(bool);
	}

	[Token(Token = "0x6001475")]
	[Address(RVA = "0xDF7158", Offset = "0xDF7158", VA = "0xDF7158", Slot = "19")]
	public override void UpdateTillableMaterials()
	{
	}

	[Token(Token = "0x6001476")]
	[Address(RVA = "0xDF71BC", Offset = "0xDF71BC", VA = "0xDF71BC", Slot = "18")]
	public override void UpdateRenderData()
	{
	}

	[Token(Token = "0x6001477")]
	[Address(RVA = "0xDF71FC", Offset = "0xDF71FC", VA = "0xDF71FC")]
	public void SetNeedsGrassRenderUpdate(bool newNeedsGrassRenderUpdate)
	{
	}

	[Token(Token = "0x6001478")]
	[Address(RVA = "0xDF721C", Offset = "0xDF721C", VA = "0xDF721C", Slot = "4")]
	public override ComponentState CreateState()
	{
		return null;
	}

	[Token(Token = "0x6001479")]
	[Address(RVA = "0xDF738C", Offset = "0xDF738C", VA = "0xDF738C")]
	public SoilSurfaceGround()
	{
	}
}
[Serializable]
[Token(Token = "0x200033A")]
public class SoilSurfaceGroundState : ComponentStateWithBinaryData
{
	[Token(Token = "0x40013F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool HaveUntillableAreas;

	[Token(Token = "0x600147A")]
	[Address(RVA = "0xDF7404", Offset = "0xDF7404", VA = "0xDF7404", Slot = "4")]
	public override string GetFilenameExtension()
	{
		return null;
	}

	[Token(Token = "0x600147B")]
	[Address(RVA = "0xDF7384", Offset = "0xDF7384", VA = "0xDF7384")]
	public SoilSurfaceGroundState()
	{
	}
}
[Token(Token = "0x200033B")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x972D84", Offset = "0x972D84")]
public class SoilSurfaceSimple : SoilSurface
{
	[Token(Token = "0x40013F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public MeshRenderer soilMeshRenderer;

	[Token(Token = "0x40013FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private Collider[] colliders;

	[Token(Token = "0x40013FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private ObjectContainer objectContainer;

	[Token(Token = "0x40013FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private Grabbable parentGrabbable;

	[Token(Token = "0x40013FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private MaterialPropertyBlock mpb;

	[Token(Token = "0x40013FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private float waternessAtStart;

	[Token(Token = "0x40013FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly int sPropWaterness;

	[Token(Token = "0x17000218")]
	public float Waterness
	{
		[Token(Token = "0x600147C")]
		[Address(RVA = "0xDF744C", Offset = "0xDF744C", VA = "0xDF744C")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x600147D")]
		[Address(RVA = "0xDF74D8", Offset = "0xDF74D8", VA = "0xDF74D8")]
		set
		{
		}
	}

	[Token(Token = "0x600147E")]
	[Address(RVA = "0xDF75B4", Offset = "0xDF75B4", VA = "0xDF75B4", Slot = "8")]
	public override float Get(SoilDataType soilDataType, Vector3 worldPos)
	{
		return default(float);
	}

	[Token(Token = "0x600147F")]
	[Address(RVA = "0xDF75C8", Offset = "0xDF75C8", VA = "0xDF75C8", Slot = "14")]
	public override SaveID GetSaveID()
	{
		return default(SaveID);
	}

	[Token(Token = "0x6001480")]
	[Address(RVA = "0xDF7748", Offset = "0xDF7748", VA = "0xDF7748", Slot = "7")]
	public override Collider[] GetColliders()
	{
		return null;
	}

	[Token(Token = "0x6001481")]
	[Address(RVA = "0xDF7750", Offset = "0xDF7750", VA = "0xDF7750", Slot = "11")]
	public override bool TryWater(Vector3 worldPos, float radius, float waterDelta)
	{
		return default(bool);
	}

	[Token(Token = "0x6001482")]
	[Address(RVA = "0xDF778C", Offset = "0xDF778C", VA = "0xDF778C", Slot = "17")]
	public override void Initialize()
	{
	}

	[Token(Token = "0x6001483")]
	[Address(RVA = "0xDF7A8C", Offset = "0xDF7A8C", VA = "0xDF7A8C", Slot = "4")]
	public override ComponentState CreateState()
	{
		return null;
	}

	[Token(Token = "0x6001484")]
	[Address(RVA = "0xDF7B08", Offset = "0xDF7B08", VA = "0xDF7B08")]
	public void AddPlant(PlantPositionProxy plant)
	{
	}

	[Token(Token = "0x6001485")]
	[Address(RVA = "0xDF7D3C", Offset = "0xDF7D3C", VA = "0xDF7D3C")]
	public void ParentGrabbed(Grabbable grabbable)
	{
	}

	[Token(Token = "0x6001486")]
	[Address(RVA = "0xDF7E4C", Offset = "0xDF7E4C", VA = "0xDF7E4C")]
	public void ParentDropped(Grabbable grabbable)
	{
	}

	[Token(Token = "0x6001487")]
	[Address(RVA = "0xDF7F5C", Offset = "0xDF7F5C", VA = "0xDF7F5C")]
	public void ParentStashed()
	{
	}

	[Token(Token = "0x6001488")]
	[Address(RVA = "0xDF7F64", Offset = "0xDF7F64", VA = "0xDF7F64")]
	public void DetachItem(Grabbable grabbable)
	{
	}

	[Token(Token = "0x6001489")]
	[Address(RVA = "0xDF7BEC", Offset = "0xDF7BEC", VA = "0xDF7BEC")]
	public void AddStashable(Stashable stashable)
	{
	}

	[Token(Token = "0x600148A")]
	[Address(RVA = "0xDF8034", Offset = "0xDF8034", VA = "0xDF8034")]
	public SoilSurfaceSimple()
	{
	}
}
[Serializable]
[Token(Token = "0x200033C")]
public class SoilSurfaceSimpleState : ComponentState
{
	[Token(Token = "0x4001400")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float water;

	[Token(Token = "0x600148C")]
	[Address(RVA = "0xDF7B00", Offset = "0xDF7B00", VA = "0xDF7B00")]
	public SoilSurfaceSimpleState()
	{
	}
}
[Token(Token = "0x200033D")]
public class SoilTillingDebugger : MonoBehaviour
{
	[Token(Token = "0x4001401")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool tillMode;

	[Token(Token = "0x4001402")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool waterMode;

	[Token(Token = "0x4001403")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	public bool gridMode;

	[Token(Token = "0x4001404")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float gridSize;

	[Token(Token = "0x4001405")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x97B47C", Offset = "0x97B47C")]
	public int gridDimension;

	[Token(Token = "0x4001406")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public bool thresholdSoilness;

	[Token(Token = "0x4001407")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x97B494", Offset = "0x97B494")]
	public float waterDelta;

	[Token(Token = "0x4001408")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x97B4AC", Offset = "0x97B4AC")]
	public float radius;

	[Token(Token = "0x4001409")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x97B4C4", Offset = "0x97B4C4")]
	public float soilVisualizationThreshold;

	[Token(Token = "0x600148D")]
	[Address(RVA = "0xDF8108", Offset = "0xDF8108", VA = "0xDF8108")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x600148E")]
	[Address(RVA = "0xDF825C", Offset = "0xDF825C", VA = "0xDF825C")]
	public void RayGizmo(Vector3 origin, float gizmoSize = 0.1f)
	{
	}

	[Token(Token = "0x600148F")]
	[Address(RVA = "0xDF830C", Offset = "0xDF830C", VA = "0xDF830C")]
	private void Update()
	{
	}

	[Token(Token = "0x6001490")]
	[Address(RVA = "0xDF828C", Offset = "0xDF828C", VA = "0xDF828C")]
	private bool SurfaceRay(Vector3 origin, out RaycastHit hit)
	{
		return default(bool);
	}

	[Token(Token = "0x6001491")]
	[Address(RVA = "0xDF8350", Offset = "0xDF8350", VA = "0xDF8350")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0x98E710", Offset = "0x98E710")]
	public void Till()
	{
	}

	[Token(Token = "0x6001492")]
	[Address(RVA = "0xDF842C", Offset = "0xDF842C", VA = "0xDF842C")]
	public void Water()
	{
	}

	[Token(Token = "0x6001493")]
	[Address(RVA = "0xDF8530", Offset = "0xDF8530", VA = "0xDF8530")]
	public SoilTillingDebugger()
	{
	}
}
[Serializable]
[Token(Token = "0x200033E")]
public class SurfaceData
{
	[Token(Token = "0x200033F")]
	public struct TexelData
	{
		[Token(Token = "0x400142B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float Validity;

		[Token(Token = "0x400142C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float Tillability;

		[Token(Token = "0x400142D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float Soilness;

		[Token(Token = "0x400142E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float Waterness;

		[Token(Token = "0x400142F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float Fertility;

		[Token(Token = "0x60014AC")]
		[Address(RVA = "0xE24BAC", Offset = "0xE24BAC", VA = "0xE24BAC")]
		public static TexelData Lerp(in TexelData data1, in TexelData data2, in float lerpVal)
		{
			return default(TexelData);
		}

		[Token(Token = "0x60014AD")]
		[Address(RVA = "0xE24BFC", Offset = "0xE24BFC", VA = "0xE24BFC")]
		public static void Lerp(out TexelData outData, in TexelData data1, in TexelData data2, in float lerpVal)
		{
		}

		[Token(Token = "0x60014AE")]
		[Address(RVA = "0xE24C84", Offset = "0xE24C84", VA = "0xE24C84")]
		public unsafe static TexelData BilinearSampleData(in TexelData* inBufferPtr, in Vector2 inSampleLocation, in Vector2Int inBufferExtents)
		{
			return default(TexelData);
		}
	}

	[Serializable]
	[Token(Token = "0x2000340")]
	private struct TillableMaterialInfo
	{
		[Token(Token = "0x4001430")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Renderer Renderer;

		[Token(Token = "0x4001431")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public int MaterialIndex;

		[Token(Token = "0x4001432")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public bool Initialized;

		[Token(Token = "0x60014AF")]
		[Address(RVA = "0xA47608", Offset = "0xA47608", VA = "0xA47608")]
		public TillableMaterialInfo(Renderer renderer, int materialIndex)
		{
		}
	}

	[Token(Token = "0x400140A")]
	private const int AMBIENT_LIGHTNESS_RAY_COUNT_NORMAL = 256;

	[Token(Token = "0x400140B")]
	private const int AMBIENT_LIGHTNESS_RAY_COUNT_FINAL = 1024;

	[Token(Token = "0x400140C")]
	public const int TEXELS_PER_METER = 4;

	[Token(Token = "0x400140D")]
	public const float METERS_PER_TEXEL = 0.25f;

	[Token(Token = "0x400140E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Texture2D textureBaked;

	[Token(Token = "0x400140F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Rect worldBounds;

	[Token(Token = "0x4001410")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Rect gridRegionTexture;

	[Token(Token = "0x4001411")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Collider[] colliders;

	[Token(Token = "0x4001412")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Renderer[] renderers;

	[Token(Token = "0x4001413")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float surfacePosY;

	[Token(Token = "0x4001414")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float areaM2;

	[Token(Token = "0x4001415")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private Vector2Int validMin;

	[Token(Token = "0x4001416")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private Vector2Int validRes;

	[Token(Token = "0x4001417")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private Vector2Int validMax;

	[Token(Token = "0x4001418")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[HideInInspector]
	public byte[] SavedBinaryData;

	[Token(Token = "0x4001419")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[HideInInspector]
	public NativeArray<TexelData> NativeTexelData;

	[Token(Token = "0x400141A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public ComputeBuffer DataBuffer;

	[Token(Token = "0x400141B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public bool HaveUntillableAreas;

	[Token(Token = "0x400141C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x89")]
	[HideInInspector]
	public bool NeedGrassRenderUpdate;

	[Token(Token = "0x400141D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static bool hasInitializedPropertyBlock;

	[Token(Token = "0x400141E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static MaterialPropertyBlock RenderPropertyBlock;

	[Token(Token = "0x400141F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static readonly int soilDataBufferProperty;

	[Token(Token = "0x4001420")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private static readonly int maskWorldMinMaxProperty;

	[Token(Token = "0x4001421")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static readonly int soilDataDimensionsProperty;

	[Token(Token = "0x4001422")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private static readonly int disableSoilProperty;

	[Token(Token = "0x4001423")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private Vector4 m_worldMinMax;

	[Token(Token = "0x4001424")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	private Vector4 m_soilDimension;

	[Token(Token = "0x4001425")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	[SerializeField]
	private bool hasTillableMaterial;

	[Token(Token = "0x4001426")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[SerializeField]
	private TillableMaterialInfo[] tillableMaterialInfo;

	[Token(Token = "0x4001427")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public SoilSurfaceDataPreset DataPreset;

	[Token(Token = "0x4001428")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public Mesh meshPreview;

	[Token(Token = "0x4001429")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public Material matPreview;

	[Token(Token = "0x400142A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private static Vector2Int[] directions;

	[Token(Token = "0x6001494")]
	[Address(RVA = "0xDF64CC", Offset = "0xDF64CC", VA = "0xDF64CC")]
	public static int TexelDataSize()
	{
		return default(int);
	}

	[Token(Token = "0x6001495")]
	[Address(RVA = "0xE02898", Offset = "0xE02898", VA = "0xE02898")]
	public Vector2Int GetValidRes()
	{
		return default(Vector2Int);
	}

	[Token(Token = "0x6001496")]
	[Address(RVA = "0xE028A0", Offset = "0xE028A0", VA = "0xE028A0")]
	private bool UpdateDataBuffer()
	{
		return default(bool);
	}

	[Token(Token = "0x6001497")]
	[Address(RVA = "0xE029A0", Offset = "0xE029A0", VA = "0xE029A0")]
	private void InitializeRendererPropertyBlock()
	{
	}

	[Token(Token = "0x6001498")]
	[Address(RVA = "0xDF6570", Offset = "0xDF6570", VA = "0xDF6570")]
	public void UpdateRendererMaterialDefines(bool inHaveUntillableAreas)
	{
	}

	[Token(Token = "0x6001499")]
	[Address(RVA = "0xDF7190", Offset = "0xDF7190", VA = "0xDF7190")]
	public void UpdateTillableMaterialInfo()
	{
	}

	[Token(Token = "0x600149A")]
	[Address(RVA = "0xDF66D0", Offset = "0xDF66D0", VA = "0xDF66D0")]
	public bool UpdateRendererPropertyBlocks(bool forceInitialize = false)
	{
		return default(bool);
	}

	[Token(Token = "0x600149B")]
	[Address(RVA = "0xE02BBC", Offset = "0xE02BBC", VA = "0xE02BBC")]
	private void SetPropertyBlockData()
	{
	}

	[Token(Token = "0x600149C")]
	[Address(RVA = "0xE02FD0", Offset = "0xE02FD0", VA = "0xE02FD0")]
	public void SetNeedsGrassRenderUpdate(bool newNeedGrassRenderUpdate)
	{
	}

	[Token(Token = "0x600149D")]
	[Address(RVA = "0xE02CA4", Offset = "0xE02CA4", VA = "0xE02CA4")]
	private bool TryGetTillableMaterials(out TillableMaterialInfo[] tillables)
	{
		return default(bool);
	}

	[Token(Token = "0x600149E")]
	[Address(RVA = "0xE02FDC", Offset = "0xE02FDC", VA = "0xE02FDC", Slot = "1")]
	~SurfaceData()
	{
	}

	[Token(Token = "0x600149F")]
	[Address(RVA = "0xDF64D4", Offset = "0xDF64D4", VA = "0xDF64D4")]
	public void CleanupData()
	{
	}

	[Token(Token = "0x60014A0")]
	[Address(RVA = "0xDF6574", Offset = "0xDF6574", VA = "0xDF6574")]
	public void GenerateNativeDataFromBinaryArray()
	{
	}

	[Token(Token = "0x60014A1")]
	[Address(RVA = "0xE03044", Offset = "0xE03044", VA = "0xE03044")]
	public Vector2Int WorldToGrid(Vector3 worldPos)
	{
		return default(Vector2Int);
	}

	[Token(Token = "0x60014A2")]
	[Address(RVA = "0xE03064", Offset = "0xE03064", VA = "0xE03064")]
	public Vector2 WorldToGridFloat(Vector3 worldPos)
	{
		return default(Vector2);
	}

	[Token(Token = "0x60014A3")]
	[Address(RVA = "0xE02B30", Offset = "0xE02B30", VA = "0xE02B30")]
	public Vector3 GridToWorld(Vector2Int gridPos, float yWorld)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60014A4")]
	[Address(RVA = "0xE03164", Offset = "0xE03164", VA = "0xE03164")]
	public Vector3 GridToWorld(Vector2 gridPos, float yWorld)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60014A5")]
	[Address(RVA = "0xDF69CC", Offset = "0xDF69CC", VA = "0xDF69CC")]
	public Vector2Int WorldToTexturePixel(Vector3 worldPos)
	{
		return default(Vector2Int);
	}

	[Token(Token = "0x60014A6")]
	[Address(RVA = "0xDF6AD0", Offset = "0xDF6AD0", VA = "0xDF6AD0")]
	public Vector2 WorldToTexturePixelFloat(Vector3 worldPos)
	{
		return default(Vector2);
	}

	[Token(Token = "0x60014A7")]
	[Address(RVA = "0xE03254", Offset = "0xE03254", VA = "0xE03254")]
	public bool GetGrassValidity(Vector3 worldPos)
	{
		return default(bool);
	}

	[Token(Token = "0x60014A8")]
	[Address(RVA = "0xDF6C84", Offset = "0xDF6C84", VA = "0xDF6C84")]
	public TexelData GetBakedDataBilinear(Vector3 worldPos)
	{
		return default(TexelData);
	}

	[Token(Token = "0x60014A9")]
	[Address(RVA = "0xE033B4", Offset = "0xE033B4", VA = "0xE033B4")]
	public TexelData Blerp(TexelData c00, TexelData c01, TexelData c10, TexelData c11, Vector2 t)
	{
		return default(TexelData);
	}

	[Token(Token = "0x60014AA")]
	[Address(RVA = "0xE0346C", Offset = "0xE0346C", VA = "0xE0346C")]
	public SurfaceData()
	{
	}
}
[Token(Token = "0x2000341")]
[ExecuteInEditMode]
public class SurfaceGrass : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x2000342")]
	public struct GrassInstanceRenderData
	{
		[Token(Token = "0x4001444")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Matrix4x4 RenderMatrix;

		[Token(Token = "0x4001445")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Vector2 TexCoord;
	}

	[Serializable]
	[Token(Token = "0x2000343")]
	public struct GrassSprite
	{
		[Token(Token = "0x4001446")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Vector3 pos;

		[Token(Token = "0x4001447")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public Vector2 texCoord;
	}

	[Token(Token = "0x4001433")]
	private const float SPRITES_PER_SQUARE_METER = 2f;

	[Token(Token = "0x4001434")]
	private const float SPRITES_PER_SQUARE_METER_HIGH_END = 25f;

	[Token(Token = "0x4001435")]
	private const float PATCH_TARGET_SIZE = 18f;

	[Token(Token = "0x4001436")]
	private const int MIN_SPRITES_PER_PATCH = 4;

	[Token(Token = "0x4001437")]
	private const int MAX_SPRITES_PER_SURFACE = 40000;

	[Token(Token = "0x4001438")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private SoilSurfaceGround surface;

	[Token(Token = "0x4001439")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private SurfaceGrassPatch[] childPatches;

	[Token(Token = "0x400143A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private GrassSprite[] CachedSpriteArray;

	[Token(Token = "0x400143B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private GrassInstanceRenderData[] CachedRenderArray;

	[Token(Token = "0x400143C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private NativeArray<GrassInstanceRenderData> NativePatchRenderers;

	[Token(Token = "0x400143D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private int NativePatchCount;

	[Token(Token = "0x400143E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private Mesh GrassMesh;

	[Token(Token = "0x400143F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private Material GrassMaterial;

	[Token(Token = "0x4001440")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private ComputeShader GrassComputeShader;

	[Token(Token = "0x4001441")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public bool MeshGrassRenderingEnabled;

	[Token(Token = "0x4001442")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private ComputeBuffer TempGrassRenderBuffer;

	[Token(Token = "0x4001443")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private ComputeBuffer TempGrassRenderBufferTarget;

	[Token(Token = "0x60014B0")]
	[Address(RVA = "0xE24E74", Offset = "0xE24E74", VA = "0xE24E74")]
	private SurfaceGrass()
	{
	}

	[Token(Token = "0x60014B1")]
	[Address(RVA = "0xE24E84", Offset = "0xE24E84", VA = "0xE24E84", Slot = "1")]
	~SurfaceGrass()
	{
	}

	[Token(Token = "0x60014B2")]
	[Address(RVA = "0xE24E8C", Offset = "0xE24E8C", VA = "0xE24E8C")]
	public GrassInstanceRenderData[] GetCachedRenderArray()
	{
		return null;
	}

	[Token(Token = "0x60014B3")]
	[Address(RVA = "0xE24E94", Offset = "0xE24E94", VA = "0xE24E94")]
	public NativeArray<GrassInstanceRenderData> GetNativeRenderArray(out int count)
	{
		return default(NativeArray<GrassInstanceRenderData>);
	}

	[Token(Token = "0x60014B4")]
	[Address(RVA = "0xE24EA8", Offset = "0xE24EA8", VA = "0xE24EA8")]
	public void GenerateGrassPatchesRuntime(SurfaceData surfData)
	{
	}

	[Token(Token = "0x60014B5")]
	[Address(RVA = "0xE253E0", Offset = "0xE253E0", VA = "0xE253E0")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60014B6")]
	[Address(RVA = "0xE25360", Offset = "0xE25360", VA = "0xE25360")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x98E748", Offset = "0x98E748")]
	internal static int <GenerateGrassPatchesRuntime>g__RoundToPositiveInt|23_0(float value)
	{
		return default(int);
	}

	[Token(Token = "0x60014B7")]
	[Address(RVA = "0xE25354", Offset = "0xE25354", VA = "0xE25354")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x98E758", Offset = "0x98E758")]
	internal static int <GenerateGrassPatchesRuntime>g__GetPatchCount|23_1(float length)
	{
		return default(int);
	}
}
[Token(Token = "0x2000344")]
public class SurfaceGrassManager : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x2000345")]
	public struct WorldZoneGrassData
	{
		[Token(Token = "0x4001462")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Mesh GrassMesh;

		[Token(Token = "0x4001463")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Material GrassMaterial;

		[Token(Token = "0x4001464")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vector4 GrassWindFrequency;

		[Token(Token = "0x4001465")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float GrassWindSpeed;

		[Token(Token = "0x4001466")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float GrassWindScale;

		[Token(Token = "0x4001467")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Vector2 GrassWindStrength;
	}

	[Token(Token = "0x2000346")]
	private struct ComputeShaderThreadInfo
	{
		[Token(Token = "0x4001468")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int ThreadSoilDataOffset;

		[Token(Token = "0x4001469")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public int ThreadSoilDataCount;

		[Token(Token = "0x400146A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public int ThreadSoilDataDimensionsX;

		[Token(Token = "0x400146B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public int ThreadSoilDataDimensionsY;

		[Token(Token = "0x400146C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int ThreadGrassDataOffset;

		[Token(Token = "0x400146D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int ThreadGrassDataCount;
	}

	[Token(Token = "0x2000347")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x972DF8", Offset = "0x972DF8")]
	private sealed class <>c__DisplayClass39_0
	{
		[Token(Token = "0x400146E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public SoilSurfaceGround inSurface;

		[Token(Token = "0x60014C9")]
		[Address(RVA = "0xE2701C", Offset = "0xE2701C", VA = "0xE2701C")]
		public <>c__DisplayClass39_0()
		{
		}

		[Token(Token = "0x60014CA")]
		[Address(RVA = "0xE27434", Offset = "0xE27434", VA = "0xE27434")]
		internal bool <RegisterSoilSurface>b__0(SurfaceGrass element)
		{
			return default(bool);
		}

		[Token(Token = "0x60014CB")]
		[Address(RVA = "0xE274BC", Offset = "0xE274BC", VA = "0xE274BC")]
		internal bool <RegisterSoilSurface>b__1(SurfaceGrass element)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x2000348")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x972E08", Offset = "0x972E08")]
	private sealed class <>c__DisplayClass40_0
	{
		[Token(Token = "0x400146F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public SoilSurfaceGround inSurface;

		[Token(Token = "0x60014CC")]
		[Address(RVA = "0xE271E8", Offset = "0xE271E8", VA = "0xE271E8")]
		public <>c__DisplayClass40_0()
		{
		}

		[Token(Token = "0x60014CD")]
		[Address(RVA = "0xE27544", Offset = "0xE27544", VA = "0xE27544")]
		internal bool <DeregisterSoilSurface>b__0(SurfaceGrass element)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x4001448")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private List<Bounds> RegisteredGrassBounds;

	[Token(Token = "0x4001449")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private List<SurfaceGrass> RegisteredGrass;

	[Token(Token = "0x400144A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private List<SurfaceData> RegisteredSurfaceData;

	[Token(Token = "0x400144B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ComputeShader GrassComputeShader;

	[Token(Token = "0x400144C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Mesh GrassMesh;

	[Token(Token = "0x400144D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Material GrassMaterial;

	[Token(Token = "0x400144E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Vector4 GrassWindFrequency;

	[Token(Token = "0x400144F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Vector4 GrassWindSettings;

	[Token(Token = "0x4001450")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public int CurrentNumGrassInstances;

	[Token(Token = "0x4001451")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Bounds[] CachedGrassBoundsArray;

	[Token(Token = "0x4001452")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private bool BoundsArrayNeedUpdate;

	[Token(Token = "0x4001453")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private int[] LastFrameIndices;

	[Token(Token = "0x4001454")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private bool GrassRenderingState;

	[Token(Token = "0x4001455")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public WorldZoneGrassData[] ZoneGrassDatas;

	[Token(Token = "0x4001456")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private ComputeShaderThreadInfo[] ThreadInfoArray;

	[Token(Token = "0x4001457")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private ComputeBuffer SoilDataBuffer;

	[Token(Token = "0x4001458")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private ComputeBuffer GrassDataBuffer;

	[Token(Token = "0x4001459")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private ComputeBuffer ThreadInfoBuffer;

	[Token(Token = "0x400145A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private ComputeBuffer GrassRenderDataBuffer;

	[Token(Token = "0x400145B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private int CurrentFrameYThreads;

	[Token(Token = "0x400145C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	private int CurrentFrameXThreads;

	[Token(Token = "0x400145D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private int numTotal;

	[Token(Token = "0x400145E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	private int numRendered;

	[Token(Token = "0x400145F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private int numCulledHeight;

	[Token(Token = "0x4001460")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	private int numCulledBehind;

	[Token(Token = "0x4001461")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private int numCulledDist;

	[Token(Token = "0x60014B8")]
	[Address(RVA = "0xE25458", Offset = "0xE25458", VA = "0xE25458")]
	public void Awake()
	{
	}

	[Token(Token = "0x60014B9")]
	[Address(RVA = "0xE256A0", Offset = "0xE256A0", VA = "0xE256A0")]
	public void OnDestroy()
	{
	}

	[Token(Token = "0x60014BA")]
	[Address(RVA = "0xE25814", Offset = "0xE25814", VA = "0xE25814")]
	public void Cleanup()
	{
	}

	[Token(Token = "0x60014BB")]
	[Address(RVA = "0xE25904", Offset = "0xE25904", VA = "0xE25904")]
	public void CleanupBuffers()
	{
	}

	[Token(Token = "0x60014BC")]
	[Address(RVA = "0xE259B4", Offset = "0xE259B4", VA = "0xE259B4")]
	private bool ArraysAreEqual(in int[] first, in int[] second)
	{
		return default(bool);
	}

	[Token(Token = "0x60014BD")]
	[Address(RVA = "0xE25A3C", Offset = "0xE25A3C", VA = "0xE25A3C")]
	private bool GrassDataIsUpdated(in int[] indicesToRender, out bool[] outDataNeedUpdate)
	{
		return default(bool);
	}

	[Token(Token = "0x60014BE")]
	[Address(RVA = "0xE25B94", Offset = "0xE25B94", VA = "0xE25B94")]
	public void RenderGrass(Camera c)
	{
	}

	[Token(Token = "0x60014BF")]
	[Address(RVA = "0xE26008", Offset = "0xE26008", VA = "0xE26008")]
	private void UpdateBoundsArray()
	{
	}

	[Token(Token = "0x60014C0")]
	[Address(RVA = "0xE26080", Offset = "0xE26080", VA = "0xE26080")]
	private int[] CalculateGrassIndicesToRender(Camera c)
	{
		return null;
	}

	[Token(Token = "0x60014C1")]
	[Address(RVA = "0xE264C4", Offset = "0xE264C4", VA = "0xE264C4")]
	private void CreateComputeBuffers(in int[] inIndicesToRender)
	{
	}

	[Token(Token = "0x60014C2")]
	[Address(RVA = "0xE26AB0", Offset = "0xE26AB0", VA = "0xE26AB0")]
	public void UpdateGrassSoilDataBuffers(in int[] inIndicesToRender, in bool[] inDataNeedUpdate)
	{
	}

	[Token(Token = "0x60014C3")]
	[Address(RVA = "0xE26C5C", Offset = "0xE26C5C", VA = "0xE26C5C")]
	public void RegisterSoilSurface(SoilSurfaceGround inSurface)
	{
	}

	[Token(Token = "0x60014C4")]
	[Address(RVA = "0xE27024", Offset = "0xE27024", VA = "0xE27024")]
	public void DeregisterSoilSurface(SoilSurfaceGround inSurface)
	{
	}

	[Token(Token = "0x60014C5")]
	[Address(RVA = "0xE271F0", Offset = "0xE271F0", VA = "0xE271F0")]
	public void OnWorldZoneChanged(WorldZone newWorldZone)
	{
	}

	[Token(Token = "0x60014C6")]
	[Address(RVA = "0xE255E0", Offset = "0xE255E0", VA = "0xE255E0")]
	public void SetCurrentGrassData(int newDataID)
	{
	}

	[Token(Token = "0x60014C7")]
	[Address(RVA = "0xE27294", Offset = "0xE27294", VA = "0xE27294")]
	public static void ToggleGrassRenderingState()
	{
	}

	[Token(Token = "0x60014C8")]
	[Address(RVA = "0xE27324", Offset = "0xE27324", VA = "0xE27324")]
	public SurfaceGrassManager()
	{
	}
}
[Token(Token = "0x2000349")]
public class SurfaceGrassPatch : MonoBehaviour
{
	[Token(Token = "0x4001470")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Material grassMaterial;

	[Token(Token = "0x4001471")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public MeshFilter mf;

	[Token(Token = "0x4001472")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public MeshRenderer rnd;

	[Token(Token = "0x60014CE")]
	[Address(RVA = "0xE275CC", Offset = "0xE275CC", VA = "0xE275CC")]
	public void SetPropertyBlock(MaterialPropertyBlock mpb)
	{
	}

	[Token(Token = "0x60014CF")]
	[Address(RVA = "0xE275E8", Offset = "0xE275E8", VA = "0xE275E8")]
	public SurfaceGrassPatch()
	{
	}
}
[Token(Token = "0x200034A")]
[DisallowMultipleComponent]
public class SteamManager : MonoBehaviour
{
	[Token(Token = "0x60014D0")]
	[Address(RVA = "0xDFF480", Offset = "0xDFF480", VA = "0xDFF480")]
	public SteamManager()
	{
	}
}
[Serializable]
[Token(Token = "0x200034B")]
public struct TimeOfDayPresetData
{
	[Token(Token = "0x4001473")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float StartTime;

	[Token(Token = "0x4001474")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public float EndTime;

	[Token(Token = "0x4001475")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float Duration;

	[Token(Token = "0x4001476")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public EnvironmentPreset Preset;
}
[Token(Token = "0x200034C")]
[ExecuteInEditMode]
public class EnvironmentManager : SaveableComponent, IInitializable
{
	[Token(Token = "0x200034D")]
	private enum EnvironmentLerpState
	{
		[Token(Token = "0x40014A7")]
		LerpToOverride,
		[Token(Token = "0x40014A8")]
		UseOverridePreset,
		[Token(Token = "0x40014A9")]
		LerpFromOverride,
		[Token(Token = "0x40014AA")]
		UseTimeOfDay
	}

	[Token(Token = "0x4001477")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static AnimationCurve InterpolationCurve;

	[Token(Token = "0x4001478")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Light DirectionalLight;

	[Token(Token = "0x4001479")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Material SkyboxMaterial;

	[Token(Token = "0x400147A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Material OceanMaterial;

	[Token(Token = "0x400147B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Material GleamEffectMaterial;

	[Token(Token = "0x400147C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public SkySphere SkySphereReference;

	[Token(Token = "0x400147D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Ocean OceanReference;

	[Token(Token = "0x400147E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public SurfaceGrassManager SurfaceGrassManagerReference;

	[Token(Token = "0x400147F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public WaterGleamEffect GleamEffect;

	[Token(Token = "0x4001480")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[HideInInspector]
	public SkyBoxData PresetSkyBoxData;

	[Token(Token = "0x4001481")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	[HideInInspector]
	public SkyLightData PresetSkyLightData;

	[Token(Token = "0x4001482")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	[HideInInspector]
	public ShadowData PresetShadowData;

	[Token(Token = "0x4001483")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
	[HideInInspector]
	public OceanData PresetOceanData;

	[Token(Token = "0x4001484")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	[HideInInspector]
	public FogData PresetFogData;

	[Token(Token = "0x4001485")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
	[HideInInspector]
	public GlobalFogData PresetGlobalFogData;

	[Token(Token = "0x4001486")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x204")]
	private bool m_startInOverrideVolume;

	[Token(Token = "0x4001487")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x97B62C", Offset = "0x97B62C")]
	private EnvironmentPreset <OverrideEnvironmentPreset>k__BackingField;

	[Token(Token = "0x4001488")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
	private EnvironmentLerpState LerpState;

	[Token(Token = "0x4001489")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x214")]
	private float OverrideLerpAmount;

	[Token(Token = "0x400148A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
	private float OverrideLerpDuration;

	[Token(Token = "0x400148B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x97B63C", Offset = "0x97B63C")]
	public float DirectionalLightIntensity;

	[Token(Token = "0x400148C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x220")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x97B654", Offset = "0x97B654")]
	public float DiffuseShadowIntensity;

	[Token(Token = "0x400148D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x224")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x97B66C", Offset = "0x97B66C")]
	public float DiffuseShadowExponent;

	[Token(Token = "0x400148E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x228")]
	public Color DirectionalLightColor;

	[Token(Token = "0x400148F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x238")]
	public Color ShadowColor;

	[Token(Token = "0x4001490")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x248")]
	public Vector3 SunRotationAxis;

	[Token(Token = "0x4001491")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x254")]
	public Vector3 SunRiseDirection;

	[Token(Token = "0x4001492")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x260")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x97B684", Offset = "0x97B684")]
	public float ShadowAttenuationStrength;

	[Token(Token = "0x4001493")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x264")]
	public bool UseDebugPresets;

	[Token(Token = "0x4001494")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x265")]
	public bool UsePresetValues;

	[Token(Token = "0x4001495")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x268")]
	public EnvironmentPreset CurrentEnvironmentPreset;

	[Token(Token = "0x4001496")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x270")]
	public EnvironmentPreset TargetEnvironmentPreset;

	[Token(Token = "0x4001497")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x278")]
	public float EnvironmentPresetStateProgress;

	[Token(Token = "0x4001498")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x280")]
	private EnvironmentPreset LerpedTimeOfDayPreset;

	[Token(Token = "0x4001499")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x288")]
	private EnvironmentPreset LerpedOverridePreset;

	[Token(Token = "0x400149A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x290")]
	private bool HavePendingTimeOfDayUpdate;

	[Token(Token = "0x400149B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x298")]
	[HideInInspector]
	public float[] EnvironmentPresetTimings;

	[Token(Token = "0x400149C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A0")]
	[HideInInspector]
	public TimeOfDayPresetData[] TimeOfDayPresets;

	[Token(Token = "0x400149D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A8")]
	private MaterialPropertyBlock SkyPropertyBlock;

	[Token(Token = "0x400149E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2B0")]
	private MaterialPropertyBlock GleamPropertyBlock;

	[Token(Token = "0x400149F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2B8")]
	[SerializeField]
	private List<EnvironmentOverrideVolume> OverrideVolumeList;

	[Token(Token = "0x40014A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C0")]
	private EnvironmentOverrideVolume CurrentOverrideVolume;

	[Token(Token = "0x40014A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C8")]
	private bool EnvironmentManagerRenderingEnabled;

	[Token(Token = "0x40014A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C9")]
	private bool m_hasChangedPreset;

	[Token(Token = "0x40014A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2CA")]
	private bool m_hasInitialezed;

	[Token(Token = "0x40014A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static EnvironmentManager m_instance;

	[Token(Token = "0x40014A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D0")]
	private double timestamp;

	[Token(Token = "0x17000219")]
	public EnvironmentPreset OverrideEnvironmentPreset
	{
		[Token(Token = "0x60014D1")]
		[Address(RVA = "0xBF9A6C", Offset = "0xBF9A6C", VA = "0xBF9A6C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x98E768", Offset = "0x98E768")]
		get
		{
			return null;
		}
		[Token(Token = "0x60014D2")]
		[Address(RVA = "0xBF9A74", Offset = "0xBF9A74", VA = "0xBF9A74")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x98E778", Offset = "0x98E778")]
		private set
		{
		}
	}

	[Token(Token = "0x60014D3")]
	[Address(RVA = "0xBF9A84", Offset = "0xBF9A84", VA = "0xBF9A84")]
	public EnvironmentManager()
	{
	}

	[Token(Token = "0x60014D4")]
	[Address(RVA = "0xBF9C7C", Offset = "0xBF9C7C", VA = "0xBF9C7C", Slot = "1")]
	~EnvironmentManager()
	{
	}

	[Token(Token = "0x60014D5")]
	[Address(RVA = "0xBF9DA4", Offset = "0xBF9DA4", VA = "0xBF9DA4")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60014D6")]
	[Address(RVA = "0xBF9ED4", Offset = "0xBF9ED4", VA = "0xBF9ED4", Slot = "5")]
	public void Initialize()
	{
	}

	[Token(Token = "0x60014D7")]
	[Address(RVA = "0xBFA14C", Offset = "0xBFA14C", VA = "0xBFA14C")]
	public void Update()
	{
	}

	[Token(Token = "0x60014D8")]
	[Address(RVA = "0xBF9F7C", Offset = "0xBF9F7C", VA = "0xBF9F7C")]
	public void UpdatePresets()
	{
	}

	[Token(Token = "0x60014D9")]
	[Address(RVA = "0xBFA208", Offset = "0xBFA208", VA = "0xBFA208")]
	public void UpdatePresetVolumes()
	{
	}

	[Token(Token = "0x60014DA")]
	[Address(RVA = "0xBFA750", Offset = "0xBFA750", VA = "0xBFA750")]
	private void UpdateVolumeOverrides(Camera currentCamera)
	{
	}

	[Token(Token = "0x60014DB")]
	[Address(RVA = "0xBFABF4", Offset = "0xBFABF4", VA = "0xBFABF4")]
	public void SetRenderingEnabled(bool newRenderingEnabled)
	{
	}

	[Token(Token = "0x60014DC")]
	[Address(RVA = "0xBFAC00", Offset = "0xBFAC00", VA = "0xBFAC00")]
	public void SetTimeOfDay(float inTimeOfDay)
	{
	}

	[Token(Token = "0x60014DD")]
	[Address(RVA = "0xBFA2C0", Offset = "0xBFA2C0", VA = "0xBFA2C0")]
	public bool HaveValidTimeOfDaySettings()
	{
		return default(bool);
	}

	[Token(Token = "0x60014DE")]
	[Address(RVA = "0xBFA354", Offset = "0xBFA354", VA = "0xBFA354")]
	public void UpdateTimeOfDayPreset()
	{
	}

	[Token(Token = "0x60014DF")]
	[Address(RVA = "0xBFAB0C", Offset = "0xBFAB0C", VA = "0xBFAB0C")]
	public void SetOverrideEnvironmentPreset(EnvironmentPreset inOverridePreset, bool shouldUseLerp = false, float lerpDuration = 0f)
	{
	}

	[Token(Token = "0x60014E0")]
	[Address(RVA = "0xBFADD0", Offset = "0xBFADD0", VA = "0xBFADD0")]
	public static void SetOverrdePreset(EnvironmentPreset inOverridePreset, bool shouldUseLerp = false, float lerpDuration = 0f)
	{
	}

	[Token(Token = "0x60014E1")]
	[Address(RVA = "0xBFAA64", Offset = "0xBFAA64", VA = "0xBFAA64")]
	public void ResetOverrideEnvironmentPreset(bool shouldUseLerp = false, float lerpDuration = 0f)
	{
	}

	[Token(Token = "0x60014E2")]
	[Address(RVA = "0xBFAE68", Offset = "0xBFAE68", VA = "0xBFAE68")]
	public static void ResetOverridePreset(bool shouldUseLerp = false, float lerpDuration = 0f)
	{
	}

	[Token(Token = "0x60014E3")]
	[Address(RVA = "0xBFA5D4", Offset = "0xBFA5D4", VA = "0xBFA5D4")]
	public void SetValuesFromPreset([Optional] EnvironmentPreset overridePreset)
	{
	}

	[Token(Token = "0x60014E4")]
	[Address(RVA = "0xBFAEF0", Offset = "0xBFAEF0", VA = "0xBFAEF0")]
	public void UpdateGlobalShaderValues()
	{
	}

	[Token(Token = "0x60014E5")]
	[Address(RVA = "0xBFB24C", Offset = "0xBFB24C", VA = "0xBFB24C")]
	public void UpdateDirectionalLightValues()
	{
	}

	[Token(Token = "0x60014E6")]
	[Address(RVA = "0xBFB660", Offset = "0xBFB660", VA = "0xBFB660")]
	public void UpdateSkyboxValues()
	{
	}

	[Token(Token = "0x60014E7")]
	[Address(RVA = "0xBFBA14", Offset = "0xBFBA14", VA = "0xBFBA14")]
	public void UpdateGleamEffectValues()
	{
	}

	[Token(Token = "0x60014E8")]
	[Address(RVA = "0xBFBC74", Offset = "0xBFBC74", VA = "0xBFBC74")]
	public void DrawManagerVisuals(Camera c)
	{
	}

	[Token(Token = "0x60014E9")]
	[Address(RVA = "0xBFC2BC", Offset = "0xBFC2BC", VA = "0xBFC2BC", Slot = "4")]
	public override ComponentState CreateState()
	{
		return null;
	}

	[Token(Token = "0x60014EA")]
	[Address(RVA = "0xBFC354", Offset = "0xBFC354", VA = "0xBFC354")]
	public void RegisterOverrideVolume(EnvironmentOverrideVolume inOverrideVolume)
	{
	}
}
[Serializable]
[Token(Token = "0x200034E")]
public class EnvironmentManagerComponentState : ComponentState
{
	[Token(Token = "0x40014AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public bool StartInOverrideVolume;

	[Token(Token = "0x60014EC")]
	[Address(RVA = "0xBFC324", Offset = "0xBFC324", VA = "0xBFC324")]
	public EnvironmentManagerComponentState(bool startInOverrideVolume)
	{
	}
}
[Token(Token = "0x200034F")]
[ExecuteInEditMode]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x972E38", Offset = "0x972E38")]
public class EnvironmentOverrideVolume : MonoBehaviour
{
	[Token(Token = "0x2000350")]
	private enum ColliderType
	{
		[Token(Token = "0x40014B3")]
		Sphere,
		[Token(Token = "0x40014B4")]
		Box
	}

	[Token(Token = "0x40014AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public EnvironmentPreset OverridePreset;

	[Token(Token = "0x40014AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool ShouldUseLerp;

	[Token(Token = "0x40014AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float LerpDuration;

	[Token(Token = "0x40014AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Collider ColliderReference;

	[Token(Token = "0x40014B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private ColliderType ColliderReferenceType;

	[Token(Token = "0x40014B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private EnvironmentManager EnvironmentManagerReference;

	[Token(Token = "0x60014ED")]
	[Address(RVA = "0xBFC45C", Offset = "0xBFC45C", VA = "0xBFC45C")]
	private void OnValidate()
	{
	}

	[Token(Token = "0x60014EE")]
	[Address(RVA = "0xBFA9C4", Offset = "0xBFA9C4", VA = "0xBFA9C4")]
	public float DistanceToVolume(Vector3 inPosition)
	{
		return default(float);
	}

	[Token(Token = "0x60014EF")]
	[Address(RVA = "0xBFC658", Offset = "0xBFC658", VA = "0xBFC658")]
	private float DistanceAsSphere(in Vector3 inPosition)
	{
		return default(float);
	}

	[Token(Token = "0x60014F0")]
	[Address(RVA = "0xBFC818", Offset = "0xBFC818", VA = "0xBFC818")]
	public EnvironmentOverrideVolume()
	{
	}
}
[Serializable]
[Token(Token = "0x2000351")]
public struct SkyBoxData
{
	[Token(Token = "0x40014B5")]
	private const float MaxSkyLightDotSize = 8E-05f;

	[Token(Token = "0x40014B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x97B6DC", Offset = "0x97B6DC")]
	public float SkyLightDotSize;

	[Token(Token = "0x40014B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public Color SkyLightDotColor;

	[Token(Token = "0x40014B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public Color NearLightColor;

	[Token(Token = "0x40014B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Color FarLightColor;

	[Token(Token = "0x40014BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float LightGradientExponent;

	[Token(Token = "0x40014BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x97B6F4", Offset = "0x97B6F4")]
	public float LightFlattenExponent;

	[Token(Token = "0x40014BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public FogData SkyBoxFogData;

	[Token(Token = "0x40014BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public bool ShouldSnapDotSize;

	[Token(Token = "0x60014F1")]
	[Address(RVA = "0xCC7304", Offset = "0xCC7304", VA = "0xCC7304")]
	public static SkyBoxData CreateLerpedStruct(in SkyBoxData struct1, in SkyBoxData struct2, float inLerpVal, bool canSnap)
	{
		return default(SkyBoxData);
	}
}
[Serializable]
[Token(Token = "0x2000352")]
public struct SkyLightData
{
	[Token(Token = "0x40014BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public bool ShouldImpactRotation;

	[Token(Token = "0x40014BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
	public bool ShouldSnapToPosition;

	[Token(Token = "0x40014C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x97B70C", Offset = "0x97B70C")]
	public float SkyLightRotationOffset;

	[Token(Token = "0x40014C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x97B728", Offset = "0x97B728")]
	public float SkyLightRotationHeight;

	[Token(Token = "0x40014C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Color LightColor;

	[Token(Token = "0x40014C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x97B744", Offset = "0x97B744")]
	public float LightIntensity;

	[Token(Token = "0x60014F2")]
	[Address(RVA = "0xCC7534", Offset = "0xCC7534", VA = "0xCC7534")]
	public static SkyLightData CreateLerpedStruct(in SkyLightData struct1, in SkyLightData struct2, float inLerpVal, bool canSnap)
	{
		return default(SkyLightData);
	}
}
[Serializable]
[Token(Token = "0x2000353")]
public struct ShadowData
{
	[Token(Token = "0x40014C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Color ShadowColor;

	[Token(Token = "0x40014C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x97B75C", Offset = "0x97B75C")]
	public float ShadowAttenuationStrength;

	[Token(Token = "0x40014C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x97B774", Offset = "0x97B774")]
	public float DiffuseShadowIntensity;

	[Token(Token = "0x40014C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x97B78C", Offset = "0x97B78C")]
	public float DiffuseShadowExponent;

	[Token(Token = "0x60014F3")]
	[Address(RVA = "0xCC5B04", Offset = "0xCC5B04", VA = "0xCC5B04")]
	public static ShadowData CreateLerpedStruct(in ShadowData struct1, in ShadowData struct2, float inLerpVal)
	{
		return default(ShadowData);
	}
}
[Serializable]
[Token(Token = "0x2000354")]
public struct OceanData
{
	[Token(Token = "0x40014C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Color FoamColor;

	[Token(Token = "0x40014C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float FoamDepth;

	[Token(Token = "0x40014CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float OceanFadeDepth;

	[Token(Token = "0x40014CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Color OceanBottomColor;

	[Token(Token = "0x40014CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float OceanBottomDepth;

	[Token(Token = "0x40014CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public Color OceanSurfaceColor;

	[Token(Token = "0x40014CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float OceanSurfaceDepth;

	[Token(Token = "0x40014CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Color OceanHorizonColor;

	[Token(Token = "0x40014D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float OceanHorizonExponent;

	[Token(Token = "0x40014D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public Color OceanDistantColor;

	[Token(Token = "0x40014D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public float OceanDistanceStart;

	[Token(Token = "0x40014D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public float OceanDistanceEnd;

	[Token(Token = "0x40014D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x97B7A4", Offset = "0x97B7A4")]
	public float OceanHorizonSunDirectionBias;

	[Token(Token = "0x40014D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[AttributeAttribute(Name = "MinAttribute", RVA = "0x97B7BC", Offset = "0x97B7BC")]
	public float OceanHorizonSunDirectionBiasExponent;

	[Token(Token = "0x40014D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x97B7D0", Offset = "0x97B7D0")]
	public float OceanHorizonSunDirectionBiasStart;

	[Token(Token = "0x40014D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public float OceanHorizonSunDirectionBiasStrength;

	[Token(Token = "0x40014D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x97B7EC", Offset = "0x97B7EC")]
	public float SkyLightInfluence;

	[Token(Token = "0x40014D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x97B804", Offset = "0x97B804")]
	public float DistanceFogIntensity;

	[Token(Token = "0x40014DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x97B81C", Offset = "0x97B81C")]
	public float DistanceFogMaxValue;

	[Token(Token = "0x40014DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x97B834", Offset = "0x97B834")]
	public float DistanceFogHeight;

	[Token(Token = "0x40014DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x97B84C", Offset = "0x97B84C")]
	public float DistanceFogHeightExponent;

	[Token(Token = "0x40014DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public float DistanceFogMaxDistance;

	[Token(Token = "0x40014DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	public FogData OceanFogData;

	[Token(Token = "0x60014F4")]
	[Address(RVA = "0xD73404", Offset = "0xD73404", VA = "0xD73404")]
	public static OceanData CreateLerpedStruct(in OceanData struct1, in OceanData struct2, float inLerpVal)
	{
		return default(OceanData);
	}
}
[Serializable]
[Token(Token = "0x2000355")]
public struct FogData
{
	[Token(Token = "0x40014DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x97B864", Offset = "0x97B864")]
	public float DistanceFogIntensity;

	[Token(Token = "0x40014E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x97B87C", Offset = "0x97B87C")]
	public float DistanceFogHeight;

	[Token(Token = "0x40014E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x97B894", Offset = "0x97B894")]
	public float DistanceFogHeightExponent;

	[Token(Token = "0x40014E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public float DistanceFogMaxDistance;

	[Token(Token = "0x40014E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Color DistanceFogColor;

	[Token(Token = "0x60014F5")]
	[Address(RVA = "0xCA5594", Offset = "0xCA5594", VA = "0xCA5594")]
	public static FogData CreateLerpedStruct(in FogData struct1, in FogData struct2, float inLerpVal)
	{
		return default(FogData);
	}
}
[Serializable]
[Token(Token = "0x2000356")]
public struct GlobalFogData
{
	[Token(Token = "0x40014E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float GlobalHorizontalFogStartDistance;

	[Token(Token = "0x40014E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public float GlobalHorizontalFogMaxDensityDistance;

	[Token(Token = "0x40014E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x97B8AC", Offset = "0x97B8AC")]
	public float GlobalHorizontalFogMaxDensity;

	[Token(Token = "0x40014E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public float GlobalHeightFogStartDistance;

	[Token(Token = "0x40014E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float GlobalHeightFogMaxDensityDistance;

	[Token(Token = "0x40014E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x97B8C4", Offset = "0x97B8C4")]
	public float GlobalHeightFogMaxDensity;

	[Token(Token = "0x40014EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float GlobalHeightFogExponent;

	[Token(Token = "0x40014EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Color GlobalFogColor;

	[Token(Token = "0x60014F6")]
	[Address(RVA = "0xE808A0", Offset = "0xE808A0", VA = "0xE808A0")]
	public static GlobalFogData CreateLerpedStruct(in GlobalFogData struct1, in GlobalFogData struct2, float inLerpVal)
	{
		return default(GlobalFogData);
	}
}
[Token(Token = "0x2000357")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x972EAC", Offset = "0x972EAC")]
public class EnvironmentPreset : ScriptableObject
{
	[Token(Token = "0x40014EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public SkyBoxData PresetSkyBoxData;

	[Token(Token = "0x40014ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public SkyLightData PresetSkyLightData;

	[Token(Token = "0x40014EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public ShadowData PresetShadowData;

	[Token(Token = "0x40014EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	public OceanData PresetOceanData;

	[Token(Token = "0x40014F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	public FogData PresetFogData;

	[Token(Token = "0x40014F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	public GlobalFogData PresetGlobalFogData;

	[Token(Token = "0x60014F7")]
	[Address(RVA = "0xBFA400", Offset = "0xBFA400", VA = "0xBFA400")]
	public static void SetLerpedValues(EnvironmentPreset lerpTarget, EnvironmentPreset preset1, EnvironmentPreset preset2, float lerpValue, bool hasChangedPreset)
	{
	}

	[Token(Token = "0x60014F8")]
	[Address(RVA = "0xBFC820", Offset = "0xBFC820", VA = "0xBFC820")]
	public EnvironmentPreset()
	{
	}
}
[Token(Token = "0x2000358")]
public enum TimeOfDayState
{
	[Token(Token = "0x40014F3")]
	Dawn,
	[Token(Token = "0x40014F4")]
	Day,
	[Token(Token = "0x40014F5")]
	Dusk,
	[Token(Token = "0x40014F6")]
	Night,
	[Token(Token = "0x40014F7")]
	Count
}
[Serializable]
[Token(Token = "0x2000359")]
public struct TimeOfDayStateData
{
	[Token(Token = "0x40014F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public TimeOfDayState State;

	[Token(Token = "0x40014F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public int StartHour;

	[Token(Token = "0x40014FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public int StartMinute;

	[Token(Token = "0x40014FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	[HideInInspector]
	public float StartTimeFraction;
}
[Token(Token = "0x200035A")]
public delegate void TimeOfDayCallbackDelegate();
[Serializable]
[Token(Token = "0x200035B")]
public struct TimeOfDayCallbackData
{
	[Token(Token = "0x40014FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[HideInInspector]
	public bool IsSaveable;

	[Token(Token = "0x40014FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	[HideInInspector]
	public SaveID ContextObjectSaveID;

	[Token(Token = "0x40014FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TimeOfDayCallbackDelegate CallbackFunction;

	[Token(Token = "0x40014FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float CallbackTime;

	[Token(Token = "0x60014FD")]
	[Address(RVA = "0xA47800", Offset = "0xA47800", VA = "0xA47800")]
	public void RemoveDelegate(TimeOfDayCallbackDelegate del)
	{
	}
}
[Serializable]
[Token(Token = "0x200035C")]
public struct TimeOfDayCallbackDataSaveable
{
	[Token(Token = "0x4001500")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public SaveID ContextObjectSaveID;

	[Token(Token = "0x4001501")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string CallbackObjectTypeName;

	[Token(Token = "0x4001502")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string CallbackFunctionMethodName;

	[Token(Token = "0x4001503")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float CallbackTime;
}
[Token(Token = "0x200035D")]
[ExecuteInEditMode]
public class TimeOfDayManager : SaveableComponent, IInitializable
{
	[Token(Token = "0x200035E")]
	public delegate void UpdateGameTimeCallback(float timeOfDayDelta);

	[Token(Token = "0x200035F")]
	public delegate void NewDayCallback(int dayCount);

	[Token(Token = "0x2000360")]
	public delegate void NewTimeOfDayStateCallback(TimeOfDayState timeOfDay);

	[Token(Token = "0x2000361")]
	public delegate void NewHourOfDayCallback(int hour);

	[Token(Token = "0x4001504")]
	public const int NightStartsAtHour = 22;

	[Token(Token = "0x4001505")]
	public const int NightEndsAtHour = 4;

	[Token(Token = "0x4001506")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static TimeOfDayManager Instance;

	[Token(Token = "0x4001507")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public EnvironmentManager EnvironmentManagerReference;

	[Token(Token = "0x4001508")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float SecondsPerDay;

	[Token(Token = "0x4001509")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float CurrentTimeOfDay;

	[Token(Token = "0x400150A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public int NumberOfDays;

	[Token(Token = "0x400150B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float TimeOfDayRateScale;

	[Token(Token = "0x400150C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool UseDebugTimeOfDay;

	[Token(Token = "0x400150D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x97B90C", Offset = "0x97B90C")]
	public float DebugTimeOfDay;

	[Token(Token = "0x400150E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x97B924", Offset = "0x97B924")]
	private int <CurrentHour>k__BackingField;

	[Token(Token = "0x400150F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x97B934", Offset = "0x97B934")]
	private int <CurrentMinute>k__BackingField;

	[Token(Token = "0x4001510")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float CurrentDayProgress;

	[Token(Token = "0x4001511")]
	public const float PerHourFraction = 1f / 24f;

	[Token(Token = "0x4001512")]
	public const float PerMinuteFraction = 0.00069444446f;

	[Token(Token = "0x4001513")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public TimeOfDayState CurrentTimeOfDayState;

	[Token(Token = "0x4001514")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public TimeOfDayStateData[] TimeOfDayStateDatas;

	[Token(Token = "0x4001515")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public UpdateGameTimeCallback OnUpdateGameTime;

	[Token(Token = "0x4001516")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public NewDayCallback OnNewDay;

	[Token(Token = "0x4001517")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public NewTimeOfDayStateCallback OnNewTimeOfDayState;

	[Token(Token = "0x4001518")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public NewHourOfDayCallback OnNewHourOfDay;

	[Token(Token = "0x4001519")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private List<TimeOfDayCallbackData> CallbackDataList;

	[Token(Token = "0x400151A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private bool TimeOfDayActive;

	[Token(Token = "0x1700021A")]
	public int CurrentHour
	{
		[Token(Token = "0x60014FF")]
		[Address(RVA = "0xE2DE58", Offset = "0xE2DE58", VA = "0xE2DE58")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x98E788", Offset = "0x98E788")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6001500")]
		[Address(RVA = "0xE2DE60", Offset = "0xE2DE60", VA = "0xE2DE60")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x98E798", Offset = "0x98E798")]
		private set
		{
		}
	}

	[Token(Token = "0x1700021B")]
	public int CurrentMinute
	{
		[Token(Token = "0x6001501")]
		[Address(RVA = "0xE2DE68", Offset = "0xE2DE68", VA = "0xE2DE68")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x98E7A8", Offset = "0x98E7A8")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6001502")]
		[Address(RVA = "0xE2DE70", Offset = "0xE2DE70", VA = "0xE2DE70")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x98E7B8", Offset = "0x98E7B8")]
		private set
		{
		}
	}

	[Token(Token = "0x60014FE")]
	[Address(RVA = "0xE2DCD8", Offset = "0xE2DCD8", VA = "0xE2DCD8")]
	private void OnValidate()
	{
	}

	[Token(Token = "0x6001503")]
	[Address(RVA = "0xE2DE78", Offset = "0xE2DE78", VA = "0xE2DE78")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001504")]
	[Address(RVA = "0xE2DF98", Offset = "0xE2DF98", VA = "0xE2DF98", Slot = "5")]
	public void Initialize()
	{
	}

	[Token(Token = "0x6001505")]
	[Address(RVA = "0xE2E2C4", Offset = "0xE2E2C4", VA = "0xE2E2C4")]
	private void ClearDelegates()
	{
	}

	[Token(Token = "0x6001506")]
	[Address(RVA = "0xE2E5C0", Offset = "0xE2E5C0", VA = "0xE2E5C0")]
	private void Update()
	{
	}

	[Token(Token = "0x6001507")]
	[Address(RVA = "0xE2E654", Offset = "0xE2E654", VA = "0xE2E654")]
	private void UpdateTimeOfDay()
	{
	}

	[Token(Token = "0x6001508")]
	[Address(RVA = "0xE2E79C", Offset = "0xE2E79C", VA = "0xE2E79C")]
	private void ProcessPendingCallbacks()
	{
	}

	[Token(Token = "0x6001509")]
	[Address(RVA = "0xE2E41C", Offset = "0xE2E41C", VA = "0xE2E41C")]
	private void EvaluateTimeOfDayState(bool broadcastOnChange = true)
	{
	}

	[Token(Token = "0x600150A")]
	[Address(RVA = "0xE2DEF8", Offset = "0xE2DEF8", VA = "0xE2DEF8")]
	public void SetTimeOfDayActive(bool newActive, bool setEnvironmentManagerRendering)
	{
	}

	[Token(Token = "0x600150B")]
	[Address(RVA = "0xE2F298", Offset = "0xE2F298", VA = "0xE2F298")]
	public static bool IsInstantiated()
	{
		return default(bool);
	}

	[Token(Token = "0x600150C")]
	[Address(RVA = "0xE2F35C", Offset = "0xE2F35C", VA = "0xE2F35C")]
	public static int GetInGameMinutesTimestamp()
	{
		return default(int);
	}

	[Token(Token = "0x600150D")]
	[Address(RVA = "0xE2F410", Offset = "0xE2F410", VA = "0xE2F410")]
	public static void GetDurationAsDaysHoursMinutes(float durationInMinutes, out int days, out int hours, out int minutes)
	{
	}

	[Token(Token = "0x600150E")]
	[Address(RVA = "0xE2F500", Offset = "0xE2F500", VA = "0xE2F500")]
	public void QueueCallbackAtHour(TimeOfDayCallbackDelegate inCallbackFunction, float inHours)
	{
	}

	[Token(Token = "0x600150F")]
	[Address(RVA = "0xE2F6F4", Offset = "0xE2F6F4", VA = "0xE2F6F4")]
	public void QueueCallbackForTime(TimeOfDayCallbackDelegate inCallbackFunction, int inDays, int inHours, int inMinutes)
	{
	}

	[Token(Token = "0x6001510")]
	[Address(RVA = "0xE2F828", Offset = "0xE2F828", VA = "0xE2F828")]
	public void RemoveCallback(TimeOfDayCallbackDelegate inCallbackFunction)
	{
	}

	[Token(Token = "0x6001511")]
	[Address(RVA = "0xE2F96C", Offset = "0xE2F96C", VA = "0xE2F96C")]
	public void QueueCallbackForTime_Saveable(SaveObjectBase inContextObject, TimeOfDayCallbackDelegate inCallbackFunction, int inDays, int inHours, int inMinutes)
	{
	}

	[Token(Token = "0x6001512")]
	[Address(RVA = "0xE2F5AC", Offset = "0xE2F5AC", VA = "0xE2F5AC")]
	private void AddCallbackDataToQueue(TimeOfDayCallbackData inCallbackData, float callbackTime)
	{
	}

	[Token(Token = "0x6001513")]
	[Address(RVA = "0xE2F7BC", Offset = "0xE2F7BC", VA = "0xE2F7BC")]
	private void AddCallbackDataToQueue(TimeOfDayCallbackData inCallbackData, int inDays, int inHours, int inMinutes)
	{
	}

	[Token(Token = "0x6001514")]
	[Address(RVA = "0xE2FC0C", Offset = "0xE2FC0C", VA = "0xE2FC0C")]
	public void SetTimeOfDay(int inHours, int inMinutes, bool triggerUpdates = true)
	{
	}

	[Token(Token = "0x6001515")]
	[Address(RVA = "0xE2FD84", Offset = "0xE2FD84", VA = "0xE2FD84")]
	public void IncrementTimeOfDayBy(int inHours, int inMinutes, bool triggerUpdates = true)
	{
	}

	[Token(Token = "0x6001516")]
	[Address(RVA = "0xE2FCC4", Offset = "0xE2FCC4", VA = "0xE2FCC4")]
	public static float ConvertTimeToFraction(int inHours, int inMinutes)
	{
		return default(float);
	}

	[Token(Token = "0x6001517")]
	[Address(RVA = "0xE2E504", Offset = "0xE2E504", VA = "0xE2E504")]
	public static void ConvertFractionToTime(float inFraction, out int outHours, out int outMinutes)
	{
	}

	[Token(Token = "0x6001518")]
	[Address(RVA = "0xE2FE40", Offset = "0xE2FE40", VA = "0xE2FE40", Slot = "4")]
	public override ComponentState CreateState()
	{
		return null;
	}

	[Token(Token = "0x6001519")]
	[Address(RVA = "0xE300D4", Offset = "0xE300D4", VA = "0xE300D4")]
	public TimeOfDayManager()
	{
	}
}
[Serializable]
[Token(Token = "0x2000362")]
public class TimeOfDayManagerComponentState : ComponentState
{
	[Token(Token = "0x400151B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int NumberOfDays;

	[Token(Token = "0x400151C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float CurrentTimeOfDay;

	[Token(Token = "0x400151D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TimeOfDayCallbackDataSaveable[] CallbackDataArray;

	[Token(Token = "0x600152B")]
	[Address(RVA = "0xE2FEC4", Offset = "0xE2FEC4", VA = "0xE2FEC4")]
	public TimeOfDayManagerComponentState(int inNumberOfDays, float inCurrentTimeOFDay, in List<TimeOfDayCallbackData> inCallbackDataList)
	{
	}

	[Token(Token = "0x600152C")]
	[Address(RVA = "0xE30424", Offset = "0xE30424", VA = "0xE30424")]
	private TimeOfDayCallbackDataSaveable CreateStructForCallback(in TimeOfDayCallbackData inData)
	{
		return default(TimeOfDayCallbackDataSaveable);
	}
}
[Token(Token = "0x2000363")]
public static class Bezier
{
	[Token(Token = "0x600152D")]
	[Address(RVA = "0xF63454", Offset = "0xF63454", VA = "0xF63454")]
	public static Vector3 GetPoint(Vector3 p0, Vector3 p1, Vector3 p2, Vector3 p3, float t)
	{
		return default(Vector3);
	}

	[Token(Token = "0x600152E")]
	[Address(RVA = "0xF6364C", Offset = "0xF6364C", VA = "0xF6364C")]
	public static Vector3 GetFirstDerivative(Vector3 p0, Vector3 p1, Vector3 p2, Vector3 p3, float t)
	{
		return default(Vector3);
	}
}
[Token(Token = "0x2000364")]
public enum BezierControlPointMode
{
	[Token(Token = "0x400151F")]
	Free,
	[Token(Token = "0x4001520")]
	Aligned,
	[Token(Token = "0x4001521")]
	Mirrored
}
[Token(Token = "0x2000365")]
public class BezierCurve : MonoBehaviour
{
	[Token(Token = "0x4001522")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3[] points;

	[Token(Token = "0x600152F")]
	[Address(RVA = "0xF63888", Offset = "0xF63888", VA = "0xF63888")]
	public Vector3 GetPoint(float t)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6001530")]
	[Address(RVA = "0xF6393C", Offset = "0xF6393C", VA = "0xF6393C")]
	public Vector3 GetVelocity(float t)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6001531")]
	[Address(RVA = "0xF63A98", Offset = "0xF63A98", VA = "0xF63A98")]
	public Vector3 GetDirection(float t)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6001532")]
	[Address(RVA = "0xF63AC8", Offset = "0xF63AC8", VA = "0xF63AC8")]
	public void Reset()
	{
	}

	[Token(Token = "0x6001533")]
	[Address(RVA = "0xF63C38", Offset = "0xF63C38", VA = "0xF63C38")]
	public BezierCurve()
	{
	}
}
[Token(Token = "0x2000366")]
public class BezierData
{
	[Token(Token = "0x4001523")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Vector3[] points;

	[Token(Token = "0x6001534")]
	[Address(RVA = "0xF63C40", Offset = "0xF63C40", VA = "0xF63C40")]
	public Vector3 GetPoint(float t)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6001535")]
	[Address(RVA = "0xF63CC8", Offset = "0xF63CC8", VA = "0xF63CC8")]
	public BezierData()
	{
	}
}
[Token(Token = "0x2000367")]
public class BezierSpline : MonoBehaviour
{
	[Token(Token = "0x4001524")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Vector3[] points;

	[Token(Token = "0x4001525")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private BezierControlPointMode[] modes;

	[Token(Token = "0x4001526")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private bool loop;

	[Token(Token = "0x1700021C")]
	public bool Loop
	{
		[Token(Token = "0x6001536")]
		[Address(RVA = "0xF63CD0", Offset = "0xF63CD0", VA = "0xF63CD0")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6001537")]
		[Address(RVA = "0xF63CD8", Offset = "0xF63CD8", VA = "0xF63CD8")]
		set
		{
		}
	}

	[Token(Token = "0x1700021D")]
	public int ControlPointCount
	{
		[Token(Token = "0x6001538")]
		[Address(RVA = "0xF64208", Offset = "0xF64208", VA = "0xF64208")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x1700021E")]
	public int CurveCount
	{
		[Token(Token = "0x600153E")]
		[Address(RVA = "0xF64660", Offset = "0xF64660", VA = "0xF64660")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x6001539")]
	[Address(RVA = "0xF64224", Offset = "0xF64224", VA = "0xF64224")]
	public Vector3 GetControlPoint(int index)
	{
		return default(Vector3);
	}

	[Token(Token = "0x600153A")]
	[Address(RVA = "0xF63D4C", Offset = "0xF63D4C", VA = "0xF63D4C")]
	public void SetControlPoint(int index, Vector3 point)
	{
	}

	[Token(Token = "0x600153B")]
	[Address(RVA = "0xF64560", Offset = "0xF64560", VA = "0xF64560")]
	public BezierControlPointMode GetControlPointMode(int index)
	{
		return default(BezierControlPointMode);
	}

	[Token(Token = "0x600153C")]
	[Address(RVA = "0xF645B8", Offset = "0xF645B8", VA = "0xF645B8")]
	public void SetControlPointMode(int index, BezierControlPointMode mode)
	{
	}

	[Token(Token = "0x600153D")]
	[Address(RVA = "0xF6426C", Offset = "0xF6426C", VA = "0xF6426C")]
	private void EnforceMode(int index)
	{
	}

	[Token(Token = "0x600153F")]
	[Address(RVA = "0xF64698", Offset = "0xF64698", VA = "0xF64698")]
	public Vector3 GetPoint(float t)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6001540")]
	[Address(RVA = "0xF64844", Offset = "0xF64844", VA = "0xF64844")]
	public Vector3 GetVelocity(float t)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6001541")]
	[Address(RVA = "0xF64A78", Offset = "0xF64A78", VA = "0xF64A78")]
	public Vector3 GetDirection(float t)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6001542")]
	[Address(RVA = "0xF64AA8", Offset = "0xF64AA8", VA = "0xF64AA8")]
	public void AddCurve()
	{
	}

	[Token(Token = "0x6001543")]
	[Address(RVA = "0xF64CE4", Offset = "0xF64CE4", VA = "0xF64CE4")]
	public void Reset()
	{
	}

	[Token(Token = "0x6001544")]
	[Address(RVA = "0xF64E78", Offset = "0xF64E78", VA = "0xF64E78")]
	public BezierSpline()
	{
	}
}
[Token(Token = "0x2000368")]
public class Line : MonoBehaviour
{
	[Token(Token = "0x4001527")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 p0;

	[Token(Token = "0x4001528")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Vector3 p1;

	[Token(Token = "0x6001545")]
	[Address(RVA = "0xBE5C6C", Offset = "0xBE5C6C", VA = "0xBE5C6C")]
	public Line()
	{
	}
}
[Token(Token = "0x2000369")]
[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0x972F24", Offset = "0x972F24")]
public class CacheReferenceAttribute : PropertyAttribute
{
	[Token(Token = "0x4001529")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public bool IncludeChildren;

	[Token(Token = "0x400152A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Type[] AllowedTypes;

	[Token(Token = "0x6001546")]
	[Address(RVA = "0xC4319C", Offset = "0xC4319C", VA = "0xC4319C")]
	public CacheReferenceAttribute(bool includeChildren = true, [Optional] Type[] allowedTypes)
	{
	}
}
[Token(Token = "0x200036A")]
[AttributeAttribute(Name = "DebuggerTypeProxyAttribute", RVA = "0x972F5C", Offset = "0x972F5C")]
public class DynamicNativeArray<Type> where Type : struct
{
	[Token(Token = "0x400152B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private bool UseUnityAlloc;

	[Token(Token = "0x400152C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private Allocator UnityAllocatorType;

	[Token(Token = "0x400152D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private unsafe Type* InternalBufferPtr;

	[Token(Token = "0x400152E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public int CurrentCapacity;

	[Token(Token = "0x400152F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public int HighestIndex;

	[Token(Token = "0x4001530")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private int ArrayChunkSize;

	[Token(Token = "0x4001531")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private int ArrayOccupancyCount;

	[Token(Token = "0x4001532")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private int[] ArrayOccupancy;

	[Token(Token = "0x4001533")]
	private const int BITS_PER_INT = 32;

	[Token(Token = "0x4001534")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private byte ClearValue;

	[Token(Token = "0x6001547")]
	public DynamicNativeArray(int inInitialSize, bool inUseUnityAlloc = false, Allocator inUnityAllocatorType = Allocator.Persistent)
	{
	}

	[Token(Token = "0x6001548")]
	public DynamicNativeArray(int inInitialSize, int inChunkSize, bool inUseUnityAlloc = false, Allocator inUnityAllocatorType = Allocator.Persistent)
	{
	}

	[Token(Token = "0x6001549")]
	public void Cleanup()
	{
	}

	[Token(Token = "0x600154A")]
	~DynamicNativeArray()
	{
	}

	[Token(Token = "0x600154B")]
	private void Init(int inInitialSize, bool inUseUnityAlloc, Allocator inUnityAllocatorType)
	{
	}

	[Token(Token = "0x600154C")]
	private unsafe Type* Internal_Alloc(int inAllocSize)
	{
		//IL_0002: Expected I, but got O
		return (Type*)unchecked((nint)null);
	}

	[Token(Token = "0x600154D")]
	private unsafe void Internal_Free(Type* memoryToFree)
	{
	}

	[Token(Token = "0x600154E")]
	private void Reallocate(int inNewSize)
	{
	}

	[Token(Token = "0x600154F")]
	private void Deallocate()
	{
	}

	[Token(Token = "0x6001550")]
	private void ReallocArrayOccupancy(int inNewSize)
	{
	}

	[Token(Token = "0x6001551")]
	public unsafe void* GetUnsafePointer()
	{
		//IL_0002: Expected I, but got O
		return (void*)unchecked((nint)null);
	}

	[Token(Token = "0x6001552")]
	public int Add(in Type inEntryToAdd)
	{
		return default(int);
	}

	[Token(Token = "0x6001553")]
	public bool AddAtIndex(in Type inEntryToAdd, int inIndexToAdd)
	{
		return default(bool);
	}

	[Token(Token = "0x6001554")]
	public void Remove(int indexToRemove)
	{
	}

	[Token(Token = "0x6001555")]
	public unsafe ref Type GetRef(int inIndex)
	{
		return ref *(Type*)null;
	}

	[Token(Token = "0x6001556")]
	public unsafe Type* GetPtr(int inIndex)
	{
		//IL_0002: Expected I, but got O
		return (Type*)unchecked((nint)null);
	}

	[Token(Token = "0x6001557")]
	public void Set(int inIndex, in Type inValue)
	{
	}

	[Token(Token = "0x6001558")]
	public NativeArray<Type> GetAsNoAllocNativeArray()
	{
		return default(NativeArray<Type>);
	}

	[Token(Token = "0x6001559")]
	public bool IsEmpty()
	{
		return default(bool);
	}

	[Token(Token = "0x600155A")]
	public static int GetRightMostUnsetBitIndex(int inValueToTest)
	{
		return default(int);
	}
}
[Token(Token = "0x200036B")]
internal sealed class DynamicNativeArrayDebugView<T> where T : struct
{
}
[Token(Token = "0x200036C")]
public class CombinedSpriteRenderer : MonoBehaviour, IInitializable, IValidateCustom, IValidate
{
	[Token(Token = "0x4001535")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Sprite CombinedSpriteAsset;

	[Token(Token = "0x4001536")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private SpriteRenderer BackgroundSprite;

	[Token(Token = "0x4001537")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool UsingCombinedSprite;

	[Token(Token = "0x4001538")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private MeshRenderer combinedTextureRenderer;

	[Token(Token = "0x4001539")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private SpriteRenderer[] spriteRenderers;

	[Token(Token = "0x400153A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int MainTexId;

	[Token(Token = "0x400153B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static MaterialPropertyBlock mpb;

	[Token(Token = "0x1700021F")]
	public Sprite SpriteAsset
	{
		[Token(Token = "0x600155B")]
		[Address(RVA = "0xC483B4", Offset = "0xC483B4", VA = "0xC483B4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600155C")]
	[Address(RVA = "0xC483BC", Offset = "0xC483BC", VA = "0xC483BC")]
	public MeshRenderer GetCombinedTextureRenderer()
	{
		return null;
	}

	[Token(Token = "0x600155D")]
	[Address(RVA = "0xC483C4", Offset = "0xC483C4", VA = "0xC483C4", Slot = "4")]
	public void Initialize()
	{
	}

	[Token(Token = "0x600155E")]
	[Address(RVA = "0xC48694", Offset = "0xC48694", VA = "0xC48694")]
	public void ToggleCombinedSprite()
	{
	}

	[Token(Token = "0x600155F")]
	[Address(RVA = "0xC483CC", Offset = "0xC483CC", VA = "0xC483CC")]
	public void SetIsUsingCombinedSprite(bool newUsingCombinedSprite)
	{
	}

	[Token(Token = "0x6001560")]
	[Address(RVA = "0xC486AC", Offset = "0xC486AC", VA = "0xC486AC")]
	public void OverrideCombinedSpriteAsset(Sprite overrideAsset)
	{
	}

	[Token(Token = "0x6001561")]
	[Address(RVA = "0xC48748", Offset = "0xC48748", VA = "0xC48748")]
	public CombinedSpriteRenderer()
	{
	}
}
[Token(Token = "0x200036D")]
public abstract class Container : SaveableComponent, IInitializable
{
	[Token(Token = "0x400153C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x97B9B4", Offset = "0x97B9B4")]
	private readonly bool <Initialized>k__BackingField;

	[Token(Token = "0x17000220")]
	public abstract float FillPercent
	{
		[Token(Token = "0x6001564")]
		get;
	}

	[Token(Token = "0x17000221")]
	public virtual bool Initialized
	{
		[Token(Token = "0x6001565")]
		[Address(RVA = "0xC489AC", Offset = "0xC489AC", VA = "0xC489AC", Slot = "8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x98E7C8", Offset = "0x98E7C8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6001563")]
	public abstract void Initialize();

	[Token(Token = "0x6001566")]
	[Address(RVA = "0xC489B4", Offset = "0xC489B4", VA = "0xC489B4")]
	protected Container()
	{
	}
}
[Token(Token = "0x200036E")]
public class FloatValueContainer : Container
{
	[Token(Token = "0x400153D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[SerializeField]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x97B9C4", Offset = "0x97B9C4")]
	private float maxValue;

	[Token(Token = "0x400153E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private float initialValue;

	[Token(Token = "0x17000222")]
	public float MaxValue
	{
		[Token(Token = "0x6001567")]
		[Address(RVA = "0xCA4E68", Offset = "0xCA4E68", VA = "0xCA4E68")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000223")]
	public float CurrentValue
	{
		[Token(Token = "0x6001568")]
		[Address(RVA = "0xCA4E70", Offset = "0xCA4E70", VA = "0xCA4E70")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000224")]
	public override float FillPercent
	{
		[Token(Token = "0x6001569")]
		[Address(RVA = "0xCA4EF4", Offset = "0xCA4EF4", VA = "0xCA4EF4", Slot = "7")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x600156A")]
	[Address(RVA = "0xCA4F80", Offset = "0xCA4F80", VA = "0xCA4F80", Slot = "6")]
	public override void Initialize()
	{
	}

	[Token(Token = "0x600156B")]
	[Address(RVA = "0xCA4F84", Offset = "0xCA4F84", VA = "0xCA4F84", Slot = "4")]
	public override ComponentState CreateState()
	{
		return null;
	}

	[Token(Token = "0x600156C")]
	[Address(RVA = "0xCA4EF8", Offset = "0xCA4EF8", VA = "0xCA4EF8")]
	private float CalculateFillPercent()
	{
		return default(float);
	}

	[Token(Token = "0x600156D")]
	[Address(RVA = "0xCA5064", Offset = "0xCA5064", VA = "0xCA5064")]
	public float TryAddValue(float value)
	{
		return default(float);
	}

	[Token(Token = "0x600156E")]
	[Address(RVA = "0xCA511C", Offset = "0xCA511C", VA = "0xCA511C")]
	public float TryRemoveValue(float valueRequested)
	{
		return default(float);
	}

	[Token(Token = "0x600156F")]
	[Address(RVA = "0xCA51D0", Offset = "0xCA51D0", VA = "0xCA51D0")]
	public void Fill()
	{
	}

	[Token(Token = "0x6001570")]
	[Address(RVA = "0xCA5258", Offset = "0xCA5258", VA = "0xCA5258")]
	public void SetMaxValue(int newMax)
	{
	}

	[Token(Token = "0x6001571")]
	[Address(RVA = "0xCA52F0", Offset = "0xCA52F0", VA = "0xCA52F0")]
	public FloatValueContainer()
	{
	}
}
[Token(Token = "0x200036F")]
public class IntValueContainer : Container
{
	[Token(Token = "0x400153F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[SerializeField]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x97BA20", Offset = "0x97BA20")]
	private int maxValue;

	[Token(Token = "0x4001540")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private int initialValue;

	[Token(Token = "0x4001541")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private bool initialized;

	[Token(Token = "0x17000225")]
	public override bool Initialized
	{
		[Token(Token = "0x6001572")]
		[Address(RVA = "0xBDFD40", Offset = "0xBDFD40", VA = "0xBDFD40", Slot = "8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000226")]
	public override float FillPercent
	{
		[Token(Token = "0x6001573")]
		[Address(RVA = "0xBDFD48", Offset = "0xBDFD48", VA = "0xBDFD48", Slot = "7")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000227")]
	public int CurrentValue
	{
		[Token(Token = "0x6001574")]
		[Address(RVA = "0xBDFDDC", Offset = "0xBDFDDC", VA = "0xBDFDDC")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x6001575")]
	[Address(RVA = "0xBDFE64", Offset = "0xBDFE64", VA = "0xBDFE64", Slot = "6")]
	public override void Initialize()
	{
	}

	[Token(Token = "0x6001576")]
	[Address(RVA = "0xBDFD4C", Offset = "0xBDFD4C", VA = "0xBDFD4C")]
	private float CalculateFillPercent()
	{
		return default(float);
	}

	[Token(Token = "0x6001577")]
	[Address(RVA = "0xBDFE70", Offset = "0xBDFE70", VA = "0xBDFE70", Slot = "4")]
	public override ComponentState CreateState()
	{
		return null;
	}

	[Token(Token = "0x6001578")]
	[Address(RVA = "0xBDFDE0", Offset = "0xBDFDE0", VA = "0xBDFDE0")]
	private int GetStateValue()
	{
		return default(int);
	}

	[Token(Token = "0x6001579")]
	[Address(RVA = "0xBDFF28", Offset = "0xBDFF28", VA = "0xBDFF28")]
	public int TryAddValue(int value)
	{
		return default(int);
	}

	[Token(Token = "0x600157A")]
	[Address(RVA = "0xBDFFD8", Offset = "0xBDFFD8", VA = "0xBDFFD8")]
	public int TryRemoveValue(int valueRequested)
	{
		return default(int);
	}

	[Token(Token = "0x600157B")]
	[Address(RVA = "0xBE008C", Offset = "0xBE008C", VA = "0xBE008C")]
	public IntValueContainer()
	{
	}
}
[Token(Token = "0x2000370")]
public class ObjectContainer : Container
{
	[Token(Token = "0x4001542")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x97BA7C", Offset = "0x97BA7C")]
	[SerializeField]
	private int maxNumberOfObjects;

	[Token(Token = "0x4001543")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private bool typeContainer;

	[Token(Token = "0x4001544")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private Stashable presetObjectTypeRef;

	[Token(Token = "0x4001545")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private bool updateObjectPositions;

	[Token(Token = "0x4001546")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private int objectType;

	[Token(Token = "0x4001547")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public List<Stashable> objects;

	[Token(Token = "0x4001548")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private List<OrientedPoint> localObjOffsets;

	[Token(Token = "0x4001549")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool initialized;

	[Token(Token = "0x17000228")]
	public override bool Initialized
	{
		[Token(Token = "0x600157C")]
		[Address(RVA = "0xD70F78", Offset = "0xD70F78", VA = "0xD70F78", Slot = "8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000229")]
	public override float FillPercent
	{
		[Token(Token = "0x600157D")]
		[Address(RVA = "0xD70F80", Offset = "0xD70F80", VA = "0xD70F80", Slot = "7")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x1700022A")]
	private bool hasRoomForMore
	{
		[Token(Token = "0x600157E")]
		[Address(RVA = "0xD70FE4", Offset = "0xD70FE4", VA = "0xD70FE4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x600157F")]
	[Address(RVA = "0xD70F84", Offset = "0xD70F84", VA = "0xD70F84")]
	private float CalculateFillPercent()
	{
		return default(float);
	}

	[Token(Token = "0x6001580")]
	[Address(RVA = "0xD7108C", Offset = "0xD7108C", VA = "0xD7108C", Slot = "6")]
	public override void Initialize()
	{
	}

	[Token(Token = "0x6001581")]
	[Address(RVA = "0xD71638", Offset = "0xD71638", VA = "0xD71638")]
	public bool TryAddObject(Stashable stashable)
	{
		return default(bool);
	}

	[Token(Token = "0x6001582")]
	[Address(RVA = "0xD717F0", Offset = "0xD717F0", VA = "0xD717F0")]
	public bool TryRemoveObject(Stashable obj)
	{
		return default(bool);
	}

	[Token(Token = "0x6001583")]
	[Address(RVA = "0xD718E0", Offset = "0xD718E0", VA = "0xD718E0")]
	public bool HasObject(Stashable obj)
	{
		return default(bool);
	}

	[Token(Token = "0x6001584")]
	[Address(RVA = "0xD71948", Offset = "0xD71948", VA = "0xD71948", Slot = "4")]
	public override ComponentState CreateState()
	{
		return null;
	}

	[Token(Token = "0x6001585")]
	[Address(RVA = "0xD71BF0", Offset = "0xD71BF0", VA = "0xD71BF0")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6001586")]
	[Address(RVA = "0xD72000", Offset = "0xD72000", VA = "0xD72000")]
	public ObjectContainer()
	{
	}
}
[Token(Token = "0x2000371")]
public class FollowJoint : MonoBehaviour
{
	[Token(Token = "0x400154A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Transform jointToFollow;

	[Token(Token = "0x400154B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Transform follower;

	[Token(Token = "0x400154C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool hasFollower;

	[Token(Token = "0x6001587")]
	[Address(RVA = "0xCA56D8", Offset = "0xCA56D8", VA = "0xCA56D8")]
	public void SetFollower(Transform t)
	{
	}

	[Token(Token = "0x6001588")]
	[Address(RVA = "0xCA577C", Offset = "0xCA577C", VA = "0xCA577C")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6001589")]
	[Address(RVA = "0xCA5848", Offset = "0xCA5848", VA = "0xCA5848")]
	public FollowJoint()
	{
	}
}
[Token(Token = "0x2000372")]
public class AliveArpEvent : GameEvent
{
	[Token(Token = "0x400154D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float min;

	[Token(Token = "0x400154E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float max;

	[Token(Token = "0x400154F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float xmin;

	[Token(Token = "0x4001550")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float xmax;

	[Token(Token = "0x4001551")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float z;

	[Token(Token = "0x4001552")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public bool random;

	[Token(Token = "0x4001553")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
	public bool directionUp;

	[Token(Token = "0x600158A")]
	[Address(RVA = "0xF577F0", Offset = "0xF577F0", VA = "0xF577F0")]
	public AliveArpEvent()
	{
	}
}
[Token(Token = "0x2000373")]
public class AliveTempoEvent : GameEvent
{
	[Token(Token = "0x4001554")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int tempo;

	[Token(Token = "0x4001555")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public bool setY;

	[Token(Token = "0x4001556")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int cursorY;

	[Token(Token = "0x600158B")]
	[Address(RVA = "0xF5780C", Offset = "0xF5780C", VA = "0xF5780C")]
	public AliveTempoEvent()
	{
	}
}
[Token(Token = "0x2000374")]
public class BoatCollisionEvent : GameEvent
{
	[Token(Token = "0x4001557")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float force;

	[Token(Token = "0x600158C")]
	[Address(RVA = "0xF6A8DC", Offset = "0xF6A8DC", VA = "0xF6A8DC")]
	public BoatCollisionEvent()
	{
	}
}
[Token(Token = "0x2000375")]
public class BoatingEvent : GameEvent
{
	[Token(Token = "0x4001558")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public bool onBoat;

	[Token(Token = "0x600158D")]
	[Address(RVA = "0xF68C14", Offset = "0xF68C14", VA = "0xF68C14")]
	public BoatingEvent()
	{
	}
}
[Token(Token = "0x2000376")]
public class ChopEvent : GameEvent
{
	[Token(Token = "0x4001559")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public PlayerHand hand;

	[Token(Token = "0x400155A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float force;

	[Token(Token = "0x600158E")]
	[Address(RVA = "0xC455A4", Offset = "0xC455A4", VA = "0xC455A4")]
	public ChopEvent()
	{
	}
}
[Token(Token = "0x2000377")]
public class ChoppedEvent : GameEvent
{
	[Token(Token = "0x600158F")]
	[Address(RVA = "0xC46BA4", Offset = "0xC46BA4", VA = "0xC46BA4")]
	public ChoppedEvent()
	{
	}
}
[Token(Token = "0x2000378")]
public class CreatureFedEvent : GameEvent
{
	[Token(Token = "0x400155B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public PlayerHand hand;

	[Token(Token = "0x400155C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string creature;

	[Token(Token = "0x6001590")]
	[Address(RVA = "0xC4FE5C", Offset = "0xC4FE5C", VA = "0xC4FE5C")]
	public CreatureFedEvent()
	{
	}
}
[Token(Token = "0x2000379")]
public class CreatureHappyEvent : GameEvent
{
	[Token(Token = "0x6001591")]
	[Address(RVA = "0xC53964", Offset = "0xC53964", VA = "0xC53964")]
	public CreatureHappyEvent()
	{
	}
}
[Token(Token = "0x200037A")]
public class CreatureInteractionEvent : GameEvent
{
	[Token(Token = "0x400155D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string creature;

	[Token(Token = "0x400155E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string interactionType;

	[Token(Token = "0x6001592")]
	[Address(RVA = "0xC4FE54", Offset = "0xC4FE54", VA = "0xC4FE54")]
	public CreatureInteractionEvent()
	{
	}
}
[Token(Token = "0x200037B")]
public class CreaturePettingEvent : GameEvent
{
	[Token(Token = "0x400155F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public PlayerHand hand;

	[Token(Token = "0x6001593")]
	[Address(RVA = "0xC553CC", Offset = "0xC553CC", VA = "0xC553CC")]
	public CreaturePettingEvent()
	{
	}
}
[Token(Token = "0x200037C")]
public class Delayer : MonoBehaviour
{
	[Token(Token = "0x200037D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x972FC0", Offset = "0x972FC0")]
	private sealed class <DelayCoroutine>d__9 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001567")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001568")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001569")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Delayer <>4__this;

		[Token(Token = "0x1700022B")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600159B")]
			[Address(RVA = "0xBF7078", Offset = "0xBF7078", VA = "0xBF7078", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700022C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600159D")]
			[Address(RVA = "0xBF70E0", Offset = "0xBF70E0", VA = "0xBF70E0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001598")]
		[Address(RVA = "0xBF6F64", Offset = "0xBF6F64", VA = "0xBF6F64")]
		[DebuggerHidden]
		public <DelayCoroutine>d__9(int <>1__state)
		{
		}

		[Token(Token = "0x6001599")]
		[Address(RVA = "0xBF6FA0", Offset = "0xBF6FA0", VA = "0xBF6FA0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600159A")]
		[Address(RVA = "0xBF6FA4", Offset = "0xBF6FA4", VA = "0xBF6FA4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600159C")]
		[Address(RVA = "0xBF7080", Offset = "0xBF7080", VA = "0xBF7080", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4001560")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool triggerOnce;

	[Token(Token = "0x4001561")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	private bool hasTriggered;

	[Token(Token = "0x4001562")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float delayInSeconds;

	[Token(Token = "0x4001563")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool allowMultipleDelays;

	[Token(Token = "0x4001564")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	public bool triggerSelfOnStart;

	[Token(Token = "0x4001565")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public UnityEvent OnDelayStart;

	[Token(Token = "0x4001566")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public UnityEvent OnDelayFinished;

	[Token(Token = "0x6001594")]
	[Address(RVA = "0xBF6E48", Offset = "0xBF6E48", VA = "0xBF6E48")]
	private void Update()
	{
	}

	[Token(Token = "0x6001595")]
	[Address(RVA = "0xBF6E74", Offset = "0xBF6E74", VA = "0xBF6E74")]
	public void StartWaiting()
	{
	}

	[Token(Token = "0x6001596")]
	[Address(RVA = "0xBF6EE8", Offset = "0xBF6EE8", VA = "0xBF6EE8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x98E7D8", Offset = "0x98E7D8")]
	private IEnumerator DelayCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6001597")]
	[Address(RVA = "0xBF6F90", Offset = "0xBF6F90", VA = "0xBF6F90")]
	public Delayer()
	{
	}
}
[Token(Token = "0x200037E")]
public class DestroyGameobject : MonoBehaviour
{
	[Token(Token = "0x600159E")]
	[Address(RVA = "0xBF70E8", Offset = "0xBF70E8", VA = "0xBF70E8")]
	public void DestroyThisGameobject()
	{
	}

	[Token(Token = "0x600159F")]
	[Address(RVA = "0xBF7164", Offset = "0xBF7164", VA = "0xBF7164")]
	public DestroyGameobject()
	{
	}
}
[Token(Token = "0x200037F")]
public enum GameEventType
{
	[Token(Token = "0x400156B")]
	SeedPlanted,
	[Token(Token = "0x400156C")]
	PlantSprouted,
	[Token(Token = "0x400156D")]
	PlantFullyGrown,
	[Token(Token = "0x400156E")]
	ItemCrafted,
	[Token(Token = "0x400156F")]
	CraftingSuccessful,
	[Token(Token = "0x4001570")]
	NumTypes
}
[Token(Token = "0x2000380")]
public class GameProgressEvent : GameEvent
{
	[Token(Token = "0x4001571")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public GameEventType eventType;

	[Token(Token = "0x60015A0")]
	[Address(RVA = "0xE73214", Offset = "0xE73214", VA = "0xE73214")]
	public GameProgressEvent(GameEventType eventType)
	{
	}
}
[Token(Token = "0x2000381")]
public class PlantSproutedEvent : GameProgressEvent
{
}
[Token(Token = "0x2000382")]
public class ItemCraftedEvent : GameProgressEvent
{
	[Token(Token = "0x4001572")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public CraftingSystem.ResourceType itemType;

	[Token(Token = "0x60015A1")]
	[Address(RVA = "0xBE3C2C", Offset = "0xBE3C2C", VA = "0xBE3C2C")]
	public ItemCraftedEvent(CraftingSystem.ResourceType itemType, GameEventType eventType)
	{
	}
}
[Token(Token = "0x2000383")]
public class CraftingSuccessfulEvent : GameProgressEvent
{
	[Token(Token = "0x60015A2")]
	[Address(RVA = "0xC4DA28", Offset = "0xC4DA28", VA = "0xC4DA28")]
	public CraftingSuccessfulEvent(GameEventType eventType)
	{
	}
}
[Token(Token = "0x2000384")]
public class IndoorOutdoorEvent : GameEvent
{
	[Token(Token = "0x4001573")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public bool indoors;

	[Token(Token = "0x60015A3")]
	[Address(RVA = "0xBDED0C", Offset = "0xBDED0C", VA = "0xBDED0C")]
	public IndoorOutdoorEvent()
	{
	}
}
[Token(Token = "0x2000385")]
public class MenuButtonPushedEvent : GameEvent
{
	[Token(Token = "0x4001574")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public MenuButton button;

	[Token(Token = "0x60015A4")]
	[Address(RVA = "0xC15A14", Offset = "0xC15A14", VA = "0xC15A14")]
	public MenuButtonPushedEvent()
	{
	}
}
[Token(Token = "0x2000386")]
public class PlantUprootedEvent : GameEvent
{
	[Token(Token = "0x4001575")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public PlayerHand hand;

	[Token(Token = "0x4001576")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform plantPosition;

	[Token(Token = "0x60015A5")]
	[Address(RVA = "0xD87F5C", Offset = "0xD87F5C", VA = "0xD87F5C")]
	public PlantUprootedEvent()
	{
	}
}
[Token(Token = "0x2000387")]
public class PlayerTeleportEvent : GameEvent
{
	[Token(Token = "0x4001577")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Vector3 origin;

	[Token(Token = "0x4001578")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Vector3 destination;

	[Token(Token = "0x60015A6")]
	[Address(RVA = "0xD0FBD8", Offset = "0xD0FBD8", VA = "0xD0FBD8")]
	public PlayerTeleportEvent()
	{
	}
}
[Token(Token = "0x2000388")]
public class ReplantEvent : GameEvent
{
	[Token(Token = "0x4001579")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Transform plantPosition;

	[Token(Token = "0x60015A7")]
	[Address(RVA = "0xD1F394", Offset = "0xD1F394", VA = "0xD1F394")]
	public ReplantEvent()
	{
	}
}
[Token(Token = "0x2000389")]
public class SeedbagReleaseSeedEvent : GameEvent
{
	[Token(Token = "0x60015A8")]
	[Address(RVA = "0xCC475C", Offset = "0xCC475C", VA = "0xCC475C")]
	public SeedbagReleaseSeedEvent()
	{
	}
}
[Token(Token = "0x200038A")]
public class SeedbagShakeEvent : GameEvent
{
	[Token(Token = "0x400157A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public PlayerHand hand;

	[Token(Token = "0x400157B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float fillPercent;

	[Token(Token = "0x400157C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Vector3 position;

	[Token(Token = "0x60015A9")]
	[Address(RVA = "0xCC4764", Offset = "0xCC4764", VA = "0xCC4764")]
	public SeedbagShakeEvent()
	{
	}
}
[Token(Token = "0x200038B")]
public class TillEvent : GameEvent
{
	[Token(Token = "0x400157D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public PlayerHand hand;

	[Token(Token = "0x60015AA")]
	[Address(RVA = "0xE2D480", Offset = "0xE2D480", VA = "0xE2D480")]
	public TillEvent()
	{
	}
}
[Token(Token = "0x200038C")]
public class WateringCanDroppedEvent : GameEvent
{
	[Token(Token = "0x400157E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float waterPoured;

	[Token(Token = "0x60015AB")]
	[Address(RVA = "0xE6EE08", Offset = "0xE6EE08", VA = "0xE6EE08")]
	public WateringCanDroppedEvent()
	{
	}
}
[Token(Token = "0x200038D")]
internal class GenerateSphereMesh
{
	[Token(Token = "0x60015AC")]
	[Address(RVA = "0xE75F98", Offset = "0xE75F98", VA = "0xE75F98")]
	public static bool GenerateHalfSphereFromParams(out Mesh outGeneratedMesh, float inRadius, int inSegmentResolution, int inSphereSegments, bool clockwise = true)
	{
		return default(bool);
	}
}
[Token(Token = "0x200038E")]
public class GizmoDrawer : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x200038F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x972FD0", Offset = "0x972FD0")]
	private sealed class <>c
	{
		[Token(Token = "0x4001580")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x60015B3")]
		[Address(RVA = "0xE80894", Offset = "0xE80894", VA = "0xE80894")]
		public <>c()
		{
		}

		[Token(Token = "0x60015B4")]
		[Address(RVA = "0xE8089C", Offset = "0xE8089C", VA = "0xE8089C")]
		internal void <.cctor>b__5_0()
		{
		}
	}

	[Token(Token = "0x1400002A")]
	public static event Action OnDrawGizmosEvent
	{
		[Token(Token = "0x60015AD")]
		[Address(RVA = "0xE8052C", Offset = "0xE8052C", VA = "0xE8052C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x98E88C", Offset = "0x98E88C")]
		add
		{
		}
		[Token(Token = "0x60015AE")]
		[Address(RVA = "0xE80618", Offset = "0xE80618", VA = "0xE80618")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x98E89C", Offset = "0x98E89C")]
		remove
		{
		}
	}

	[Token(Token = "0x60015AF")]
	[Address(RVA = "0xE80704", Offset = "0xE80704", VA = "0xE80704")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x60015B0")]
	[Address(RVA = "0xE80778", Offset = "0xE80778", VA = "0xE80778")]
	public GizmoDrawer()
	{
	}
}
[Token(Token = "0x2000390")]
public static class GlobalShaderVars
{
	[Token(Token = "0x4001581")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly int _PlayerOriginPos;

	[Token(Token = "0x60015B5")]
	[Address(RVA = "0xE80A48", Offset = "0xE80A48", VA = "0xE80A48")]
	public static void SetPlayerOriginPosition(Vector3 pos)
	{
	}

	[Token(Token = "0x60015B6")]
	[Address(RVA = "0xE80B0C", Offset = "0xE80B0C", VA = "0xE80B0C")]
	private static int GetNameID([CallerMemberName] string propertyName = "")
	{
		return default(int);
	}
}
[Token(Token = "0x2000391")]
public interface IDebugInfo
{
}
[Token(Token = "0x2000392")]
public static class Layer
{
	[Token(Token = "0x60015B8")]
	[Address(RVA = "0xBE50F0", Offset = "0xBE50F0", VA = "0xBE50F0")]
	public static LayerData[] SetLayer(ref GameObject go, int layer, int layermask)
	{
		return null;
	}

	[Token(Token = "0x60015B9")]
	[Address(RVA = "0xBE533C", Offset = "0xBE533C", VA = "0xBE533C")]
	public static void ResetLayers(LayerData[] originalObjectLayers)
	{
	}

	[Token(Token = "0x60015BA")]
	[Address(RVA = "0xBDAA08", Offset = "0xBDAA08", VA = "0xBDAA08")]
	public static bool LayerMatchesMask(int layer, int mask)
	{
		return default(bool);
	}
}
[Token(Token = "0x2000393")]
public class LocationTracker : MonoBehaviour
{
	[Token(Token = "0x4001582")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static LocationTracker Instance;

	[Token(Token = "0x4001583")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Vector3[] locNodes;

	[Token(Token = "0x4001584")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private float[] timeLog;

	[Token(Token = "0x4001585")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private int currentNode;

	[Token(Token = "0x4001586")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[SerializeField]
	private float timeStamp;

	[Token(Token = "0x60015BB")]
	[Address(RVA = "0xBE760C", Offset = "0xBE760C", VA = "0xBE760C")]
	private void Awake()
	{
	}

	[Token(Token = "0x60015BC")]
	[Address(RVA = "0xBE7A78", Offset = "0xBE7A78", VA = "0xBE7A78")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60015BD")]
	[Address(RVA = "0xBE7B20", Offset = "0xBE7B20", VA = "0xBE7B20")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60015BE")]
	[Address(RVA = "0xBE7BC8", Offset = "0xBE7BC8", VA = "0xBE7BC8")]
	private void OnTeleport(PlayerTeleportEvent e)
	{
	}

	[Token(Token = "0x60015BF")]
	[Address(RVA = "0xBE7CA4", Offset = "0xBE7CA4", VA = "0xBE7CA4")]
	private int GetClosestNode(Vector3 position)
	{
		return default(int);
	}

	[Token(Token = "0x60015C0")]
	[Address(RVA = "0xBE7DCC", Offset = "0xBE7DCC", VA = "0xBE7DCC")]
	public Dictionary<string, object> GetAnalyticsData()
	{
		return null;
	}

	[Token(Token = "0x60015C1")]
	[Address(RVA = "0xBE7EF4", Offset = "0xBE7EF4", VA = "0xBE7EF4")]
	public LocationTracker()
	{
	}
}
[Token(Token = "0x2000394")]
public static class Mathfs
{
	[Token(Token = "0x60015C2")]
	[Address(RVA = "0xC13AF8", Offset = "0xC13AF8", VA = "0xC13AF8")]
	public static Vector2 GetDirectionRadians(float angleRadians)
	{
		return default(Vector2);
	}

	[Token(Token = "0x60015C3")]
	[Address(RVA = "0xC13B90", Offset = "0xC13B90", VA = "0xC13B90")]
	public static float SignedAngleBetween(Vector3 a, Vector3 b, Vector3 up)
	{
		return default(float);
	}

	[Token(Token = "0x60015C4")]
	[Address(RVA = "0xC13D30", Offset = "0xC13D30", VA = "0xC13D30")]
	public static float AbsoluteAngleDifference(float angleInDegrees1, float angleInDegrees2)
	{
		return default(float);
	}

	[Token(Token = "0x60015C5")]
	[Address(RVA = "0xC13DC4", Offset = "0xC13DC4", VA = "0xC13DC4")]
	public static Vector2 Lerp(Vector2 a, Vector2 b, Vector2 t)
	{
		return default(Vector2);
	}

	[Token(Token = "0x60015C6")]
	[Address(RVA = "0xC13E98", Offset = "0xC13E98", VA = "0xC13E98")]
	public static Vector3 Multiply(Vector3 a, Vector3 b)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60015C7")]
	[Address(RVA = "0xC13ED8", Offset = "0xC13ED8", VA = "0xC13ED8")]
	public static Vector3 GetVelocityAtPoint(Vector3 worldPos, Vector3 origin, Vector3 velocity, Vector3 angularVelocity)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60015C8")]
	[Address(RVA = "0xC13FF0", Offset = "0xC13FF0", VA = "0xC13FF0")]
	public static float GetTriangleAngleGivenSides(float adjacent, float opposite)
	{
		return default(float);
	}

	[Token(Token = "0x60015C9")]
	[Address(RVA = "0xC14070", Offset = "0xC14070", VA = "0xC14070")]
	public static float Eerp(float a, float b, float t)
	{
		return default(float);
	}

	[Token(Token = "0x60015CA")]
	[Address(RVA = "0xC140F8", Offset = "0xC140F8", VA = "0xC140F8")]
	public static Vector3 Eerp(Vector3 a, Vector3 b, float t)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60015CB")]
	[Address(RVA = "0xC14198", Offset = "0xC14198", VA = "0xC14198")]
	public static double Mean(ref float[] data)
	{
		return default(double);
	}

	[Token(Token = "0x60015CC")]
	[Address(RVA = "0xC14210", Offset = "0xC14210", VA = "0xC14210")]
	public static void SimpleLinearRegression(ref float[] x, ref float[] y, out double b0, out double b1)
	{
	}

	[Token(Token = "0x60015CD")]
	[Address(RVA = "0xC14354", Offset = "0xC14354", VA = "0xC14354")]
	public static float ScaleFloat(float value, float minValue, float maxValue, float resultMin = 0f, float resultMax = 1f)
	{
		return default(float);
	}
}
[Token(Token = "0x2000395")]
public struct OrientedPointSmooth
{
	[Token(Token = "0x4001587")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public OrientedPoint current;

	[Token(Token = "0x4001588")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OrientedPoint target;

	[Token(Token = "0x60015CE")]
	[Address(RVA = "0xA42A3C", Offset = "0xA42A3C", VA = "0xA42A3C")]
	public OrientedPointSmooth(OrientedPoint startValue)
	{
	}

	[Token(Token = "0x60015CF")]
	[Address(RVA = "0xA42A78", Offset = "0xA42A78", VA = "0xA42A78")]
	public void Smooth(float smoothParam)
	{
	}
}
[Token(Token = "0x2000396")]
public class PoseRecorder : MonoBehaviour
{
	[Token(Token = "0x4001589")]
	private const int POSE_CAPACITY = 259200;

	[Token(Token = "0x400158A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool autosave;

	[Token(Token = "0x400158B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string filename;

	[Token(Token = "0x400158C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string filepath;

	[Token(Token = "0x400158D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool playback;

	[Token(Token = "0x400158E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	public bool save;

	[Token(Token = "0x400158F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private string path;

	[Token(Token = "0x4001590")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static int psize;

	[Token(Token = "0x4001591")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private RigidTransform[] poses;

	[Token(Token = "0x4001592")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private byte[] bytes;

	[Token(Token = "0x4001593")]
	private const int SAVE_INTERVAL = 720;

	[Token(Token = "0x4001594")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private int saveFrame;

	[Token(Token = "0x4001595")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private int i;

	[Token(Token = "0x4001596")]
	private const float FRAMES_INVERSE = 1f / 72f;

	[Token(Token = "0x60015D0")]
	[Address(RVA = "0xD12124", Offset = "0xD12124", VA = "0xD12124")]
	private void Start()
	{
	}

	[Token(Token = "0x60015D1")]
	[Address(RVA = "0xD12134", Offset = "0xD12134", VA = "0xD12134")]
	private void PlayBack()
	{
	}

	[Token(Token = "0x60015D2")]
	[Address(RVA = "0xD12218", Offset = "0xD12218", VA = "0xD12218")]
	private void Record()
	{
	}

	[Token(Token = "0x60015D3")]
	[Address(RVA = "0xD12384", Offset = "0xD12384", VA = "0xD12384")]
	public void SaveRecording()
	{
	}

	[Token(Token = "0x60015D4")]
	[Address(RVA = "0xD12578", Offset = "0xD12578", VA = "0xD12578")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x60015D5")]
	[Address(RVA = "0xD126FC", Offset = "0xD126FC", VA = "0xD126FC")]
	private void Update()
	{
	}

	[Token(Token = "0x60015D6")]
	[Address(RVA = "0xD129E0", Offset = "0xD129E0", VA = "0xD129E0")]
	public PoseRecorder()
	{
	}
}
[Token(Token = "0x2000397")]
public class ScreenShooter : MonoBehaviour
{
	[Token(Token = "0x4001597")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static ScreenShooter Instance;

	[Token(Token = "0x4001598")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static bool Initialized;

	[Token(Token = "0x4001599")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9")]
	public static bool Active;

	[Token(Token = "0x400159A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x97BB58", Offset = "0x97BB58")]
	public Vector2Int customResolution;

	[Token(Token = "0x400159B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float fov;

	[Token(Token = "0x400159C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x97BB90", Offset = "0x97BB90")]
	public int supersample;

	[Token(Token = "0x400159D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x97BBA8", Offset = "0x97BBA8")]
	public Material blitGammaCorrect;

	[Token(Token = "0x400159E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public NeatAudioPlayer audioPlayer;

	[Token(Token = "0x400159F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private NeatVR_Controller left;

	[Token(Token = "0x40015A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private NeatVR_Controller right;

	[Token(Token = "0x40015A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float timeLeft;

	[Token(Token = "0x60015D8")]
	[Address(RVA = "0xCC1AB0", Offset = "0xCC1AB0", VA = "0xCC1AB0")]
	private void Awake()
	{
	}

	[Token(Token = "0x60015D9")]
	[Address(RVA = "0xCC1B30", Offset = "0xCC1B30", VA = "0xCC1B30")]
	private void Update()
	{
	}

	[Token(Token = "0x60015DA")]
	[Address(RVA = "0xCC1DA0", Offset = "0xCC1DA0", VA = "0xCC1DA0")]
	private bool DidPressCorrectButton()
	{
		return default(bool);
	}

	[Token(Token = "0x60015DB")]
	[Address(RVA = "0xCC21E0", Offset = "0xCC21E0", VA = "0xCC21E0")]
	public void Activate()
	{
	}

	[Token(Token = "0x60015DC")]
	[Address(RVA = "0xCC2248", Offset = "0xCC2248", VA = "0xCC2248")]
	public Vector2Int GetRenderResolution()
	{
		return default(Vector2Int);
	}

	[Token(Token = "0x60015DD")]
	[Address(RVA = "0xCC1E4C", Offset = "0xCC1E4C", VA = "0xCC1E4C")]
	public void TakeScreenshot()
	{
	}

	[Token(Token = "0x60015DE")]
	[Address(RVA = "0xCC22BC", Offset = "0xCC22BC", VA = "0xCC22BC")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x60015DF")]
	[Address(RVA = "0xCC2380", Offset = "0xCC2380", VA = "0xCC2380")]
	public ScreenShooter()
	{
	}
}
[Token(Token = "0x2000398")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x972FE0", Offset = "0x972FE0")]
public class FloatVariable : ScriptableObject
{
	[Token(Token = "0x40015A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected float currentValue;

	[Token(Token = "0x1700022D")]
	public float Value
	{
		[Token(Token = "0x60015E0")]
		[Address(RVA = "0xCA52F8", Offset = "0xCA52F8", VA = "0xCA52F8")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60015E1")]
		[Address(RVA = "0xCA5300", Offset = "0xCA5300", VA = "0xCA5300")]
		set
		{
		}
	}

	[Token(Token = "0x60015E2")]
	[Address(RVA = "0xCA5308", Offset = "0xCA5308", VA = "0xCA5308")]
	public void Add(float number = 1f)
	{
	}

	[Token(Token = "0x60015E3")]
	[Address(RVA = "0xCA5318", Offset = "0xCA5318", VA = "0xCA5318")]
	public void Remove(float number = 1f)
	{
	}

	[Token(Token = "0x60015E4")]
	[Address(RVA = "0xCA5328", Offset = "0xCA5328", VA = "0xCA5328")]
	public FloatVariable()
	{
	}
}
[Token(Token = "0x2000399")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x97304C", Offset = "0x97304C")]
public class FloatVariable_Ranged : FloatVariable
{
	[Token(Token = "0x40015A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private float maxValue;

	[Token(Token = "0x40015A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private float minValue;

	[Token(Token = "0x1700022E")]
	public new float Value
	{
		[Token(Token = "0x60015E7")]
		[Address(RVA = "0xCA53C8", Offset = "0xCA53C8", VA = "0xCA53C8")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60015E6")]
		[Address(RVA = "0xCA5338", Offset = "0xCA5338", VA = "0xCA5338")]
		set
		{
		}
	}

	[Token(Token = "0x1700022F")]
	public float NormalizedValue
	{
		[Token(Token = "0x60015E8")]
		[Address(RVA = "0xCA53D0", Offset = "0xCA53D0", VA = "0xCA53D0")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x60015E5")]
	[Address(RVA = "0xCA5330", Offset = "0xCA5330", VA = "0xCA5330")]
	public void Init(float min, float max)
	{
	}

	[Token(Token = "0x60015E9")]
	[Address(RVA = "0xCA5458", Offset = "0xCA5458", VA = "0xCA5458")]
	public new void Add(float number = 1f)
	{
	}

	[Token(Token = "0x60015EA")]
	[Address(RVA = "0xCA54E8", Offset = "0xCA54E8", VA = "0xCA54E8")]
	public new void Remove(float number = 1f)
	{
	}

	[Token(Token = "0x60015EB")]
	[Address(RVA = "0xCA557C", Offset = "0xCA557C", VA = "0xCA557C")]
	public FloatVariable_Ranged()
	{
	}
}
[Token(Token = "0x200039A")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x9730B8", Offset = "0x9730B8")]
public class IntVariable : ScriptableObject
{
	[Token(Token = "0x40015A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected int currentValue;

	[Token(Token = "0x17000230")]
	public int Value
	{
		[Token(Token = "0x60015EC")]
		[Address(RVA = "0xBE0094", Offset = "0xBE0094", VA = "0xBE0094")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60015ED")]
		[Address(RVA = "0xBE009C", Offset = "0xBE009C", VA = "0xBE009C")]
		set
		{
		}
	}

	[Token(Token = "0x60015EE")]
	[Address(RVA = "0xBE00A4", Offset = "0xBE00A4", VA = "0xBE00A4")]
	public void Add(int number = 1)
	{
	}

	[Token(Token = "0x60015EF")]
	[Address(RVA = "0xBE00B4", Offset = "0xBE00B4", VA = "0xBE00B4")]
	public void Remove(int number = 1)
	{
	}

	[Token(Token = "0x60015F0")]
	[Address(RVA = "0xBE00C4", Offset = "0xBE00C4", VA = "0xBE00C4")]
	public IntVariable()
	{
	}
}
[Token(Token = "0x200039B")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x973124", Offset = "0x973124")]
public class IntVariable_Ranged : IntVariable
{
	[Token(Token = "0x40015A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private int maxValue;

	[Token(Token = "0x40015A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private int minValue;

	[Token(Token = "0x17000231")]
	public new int Value
	{
		[Token(Token = "0x60015F3")]
		[Address(RVA = "0xBE018C", Offset = "0xBE018C", VA = "0xBE018C")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60015F2")]
		[Address(RVA = "0xBE0104", Offset = "0xBE0104", VA = "0xBE0104")]
		set
		{
		}
	}

	[Token(Token = "0x60015F1")]
	[Address(RVA = "0xBE00CC", Offset = "0xBE00CC", VA = "0xBE00CC")]
	public IntVariable_Ranged(int min, int max)
	{
	}

	[Token(Token = "0x60015F4")]
	[Address(RVA = "0xBE0194", Offset = "0xBE0194", VA = "0xBE0194")]
	public new void Add(int number = 1)
	{
	}

	[Token(Token = "0x60015F5")]
	[Address(RVA = "0xBE021C", Offset = "0xBE021C", VA = "0xBE021C")]
	public new void Remove(int number = 1)
	{
	}
}
[Token(Token = "0x200039C")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x973190", Offset = "0x973190")]
public class VertexArray : ScriptableObject
{
	[Token(Token = "0x40015A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3[] vertices;

	[Token(Token = "0x60015F6")]
	[Address(RVA = "0xE6C2EC", Offset = "0xE6C2EC", VA = "0xE6C2EC")]
	public VertexArray()
	{
	}
}
[Serializable]
[Token(Token = "0x200039D")]
public class SerializableEnum<T> where T : struct, IConvertible
{
	[Token(Token = "0x40015A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[SerializeField]
	private string m_EnumValueAsString;

	[Token(Token = "0x40015AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[SerializeField]
	private T m_EnumValue;

	[Token(Token = "0x17000232")]
	public T Value
	{
		[Token(Token = "0x60015F7")]
		get
		{
			return (T)null;
		}
	}

	[Token(Token = "0x60015F8")]
	public void SetValue(T enumValue)
	{
	}

	[Token(Token = "0x60015F9")]
	public SerializableEnum()
	{
	}
}
[Token(Token = "0x200039E")]
public class Singleton<T> : MonoBehaviour where T : Component
{
	[Token(Token = "0x40015AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static bool applicationQuitting;

	[Token(Token = "0x40015AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static bool hasInst;

	[Token(Token = "0x40015AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static T _inst;

	[Token(Token = "0x17000233")]
	public static bool HasInstance
	{
		[Token(Token = "0x60015FA")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000234")]
	public static T inst
	{
		[Token(Token = "0x60015FE")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60015FB")]
	public virtual bool DoMultiAwakeRegisterErrorReport()
	{
		return default(bool);
	}

	[Token(Token = "0x60015FC")]
	public void RegisterInAwake(T component)
	{
	}

	[Token(Token = "0x60015FD")]
	private static bool ApplicationQuitting()
	{
		return default(bool);
	}

	[Token(Token = "0x60015FF")]
	public static T TryGetInstance()
	{
		return null;
	}

	[Token(Token = "0x6001600")]
	public static T TryGetInstanceEditor()
	{
		return null;
	}

	[Token(Token = "0x6001601")]
	protected virtual void OnDisable()
	{
	}

	[Token(Token = "0x6001602")]
	protected virtual void OnApplicationQuit()
	{
	}

	[Token(Token = "0x6001603")]
	public Singleton()
	{
	}
}
[Token(Token = "0x200039F")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x9731FC", Offset = "0x9731FC")]
public class TriggerUnityEvent : MonoBehaviour
{
	[Token(Token = "0x40015AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string instigatorTag;

	[Token(Token = "0x40015AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int completeOnCount;

	[Token(Token = "0x40015B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public UnityEvent OnEnterEach;

	[Token(Token = "0x40015B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public UnityEvent OnEnterComplete;

	[Token(Token = "0x40015B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public UnityEvent OnExitEach;

	[Token(Token = "0x40015B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private int triggerEnterCount;

	[Token(Token = "0x40015B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private bool hasCompleted;

	[Token(Token = "0x40015B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private BoxCollider boxCollider;

	[Token(Token = "0x6001604")]
	[Address(RVA = "0xE6A578", Offset = "0xE6A578", VA = "0xE6A578")]
	public void OnDrawGizmos()
	{
	}

	[Token(Token = "0x6001605")]
	[Address(RVA = "0xE6A7D0", Offset = "0xE6A7D0", VA = "0xE6A7D0")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6001606")]
	[Address(RVA = "0xE6A904", Offset = "0xE6A904", VA = "0xE6A904")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x6001607")]
	[Address(RVA = "0xE6A8C8", Offset = "0xE6A8C8", VA = "0xE6A8C8")]
	public bool IsInstigator(Collider other)
	{
		return default(bool);
	}

	[Token(Token = "0x6001608")]
	[Address(RVA = "0xE6A94C", Offset = "0xE6A94C", VA = "0xE6A94C")]
	public TriggerUnityEvent()
	{
	}
}
[Token(Token = "0x20003A0")]
public class TweenyFloat
{
	[Token(Token = "0x40015B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float value;

	[Token(Token = "0x40015B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Tweener tweener;

	[Token(Token = "0x40015B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float targetValue;

	[Token(Token = "0x6001609")]
	[Address(RVA = "0xE6B3A4", Offset = "0xE6B3A4", VA = "0xE6B3A4")]
	public TweenyFloat(float value)
	{
	}

	[Token(Token = "0x600160A")]
	[Address(RVA = "0xE6B3D8", Offset = "0xE6B3D8", VA = "0xE6B3D8")]
	public static implicit operator float(TweenyFloat twf)
	{
		return default(float);
	}

	[Token(Token = "0x600160B")]
	[Address(RVA = "0xE6B3F0", Offset = "0xE6B3F0", VA = "0xE6B3F0")]
	public static implicit operator TweenyFloat(float value)
	{
		return null;
	}

	[Token(Token = "0x600160C")]
	[Address(RVA = "0xE6B45C", Offset = "0xE6B45C", VA = "0xE6B45C")]
	public void AnimateTo(float targetValue, float time, Func<Tweener, Tweener> tweenerActions)
	{
	}

	[Token(Token = "0x600160D")]
	[Address(RVA = "0xE6B5B4", Offset = "0xE6B5B4", VA = "0xE6B5B4")]
	private void Interrupt()
	{
	}

	[Token(Token = "0x600160E")]
	[Address(RVA = "0xE6B5D4", Offset = "0xE6B5D4", VA = "0xE6B5D4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x98E8AC", Offset = "0x98E8AC")]
	private float <AnimateTo>b__11_0()
	{
		return default(float);
	}

	[Token(Token = "0x600160F")]
	[Address(RVA = "0xE6B5DC", Offset = "0xE6B5DC", VA = "0xE6B5DC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x98E8BC", Offset = "0x98E8BC")]
	private void <AnimateTo>b__11_1(float x)
	{
	}
}
[Token(Token = "0x20003A1")]
public class WalletParticleCollisionEventHandler : MonoBehaviour
{
	[Token(Token = "0x40015B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Tool_Wallet WalletOwner;

	[Token(Token = "0x6001610")]
	[Address(RVA = "0xE6CB7C", Offset = "0xE6CB7C", VA = "0xE6CB7C")]
	private void OnParticleCollision(GameObject other)
	{
	}

	[Token(Token = "0x6001611")]
	[Address(RVA = "0xE6CC1C", Offset = "0xE6CC1C", VA = "0xE6CC1C")]
	private void OnParticleSystemStopped()
	{
	}

	[Token(Token = "0x6001612")]
	[Address(RVA = "0xE6CCB0", Offset = "0xE6CCB0", VA = "0xE6CCB0")]
	public WalletParticleCollisionEventHandler()
	{
	}
}
[Token(Token = "0x20003A2")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x973260", Offset = "0x973260")]
public class FPSWalkerEnhanced : MonoBehaviour
{
	[Token(Token = "0x40015BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float walkSpeed;

	[Token(Token = "0x40015BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float runSpeed;

	[Token(Token = "0x40015BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool limitDiagonalSpeed;

	[Token(Token = "0x40015BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	public bool toggleRun;

	[Token(Token = "0x40015BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float jumpSpeed;

	[Token(Token = "0x40015BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float gravity;

	[Token(Token = "0x40015C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float fallingDamageThreshold;

	[Token(Token = "0x40015C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool slideWhenOverSlopeLimit;

	[Token(Token = "0x40015C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	public bool slideOnTaggedObjects;

	[Token(Token = "0x40015C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float slideSpeed;

	[Token(Token = "0x40015C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool airControl;

	[Token(Token = "0x40015C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float antiBumpFactor;

	[Token(Token = "0x40015C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public int antiBunnyHopFactor;

	[Token(Token = "0x40015C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private Vector3 moveDirection;

	[Token(Token = "0x40015C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool grounded;

	[Token(Token = "0x40015C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private CharacterController controller;

	[Token(Token = "0x40015CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Transform myTransform;

	[Token(Token = "0x40015CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private float speed;

	[Token(Token = "0x40015CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private RaycastHit hit;

	[Token(Token = "0x40015CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private float fallStartLevel;

	[Token(Token = "0x40015CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	private bool falling;

	[Token(Token = "0x40015CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private float slideLimit;

	[Token(Token = "0x40015D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	private float rayDistance;

	[Token(Token = "0x40015D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private Vector3 contactPoint;

	[Token(Token = "0x40015D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	private bool playerControl;

	[Token(Token = "0x40015D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private int jumpTimer;

	[Token(Token = "0x6001613")]
	[Address(RVA = "0xC9A674", Offset = "0xC9A674", VA = "0xC9A674")]
	private void Start()
	{
	}

	[Token(Token = "0x6001614")]
	[Address(RVA = "0xC9A768", Offset = "0xC9A768", VA = "0xC9A768")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6001615")]
	[Address(RVA = "0xC9AD84", Offset = "0xC9AD84", VA = "0xC9AD84")]
	private void Update()
	{
	}

	[Token(Token = "0x6001616")]
	[Address(RVA = "0xC9AE04", Offset = "0xC9AE04", VA = "0xC9AE04")]
	private void OnControllerColliderHit(ControllerColliderHit hit)
	{
	}

	[Token(Token = "0x6001617")]
	[Address(RVA = "0xC9ACEC", Offset = "0xC9ACEC", VA = "0xC9ACEC")]
	private void FallingDamageAlert(float fallDistance)
	{
	}

	[Token(Token = "0x6001618")]
	[Address(RVA = "0xC9AE3C", Offset = "0xC9AE3C", VA = "0xC9AE3C")]
	public FPSWalkerEnhanced()
	{
	}
}
[Token(Token = "0x20003A3")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x9732C4", Offset = "0x9732C4")]
public class SmoothMouseLook : MonoBehaviour
{
	[Token(Token = "0x20003A4")]
	public enum RotationAxes
	{
		[Token(Token = "0x40015E5")]
		MouseXAndY,
		[Token(Token = "0x40015E6")]
		MouseX,
		[Token(Token = "0x40015E7")]
		MouseY
	}

	[Token(Token = "0x40015D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public RotationAxes axes;

	[Token(Token = "0x40015D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float sensitivityX;

	[Token(Token = "0x40015D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float sensitivityY;

	[Token(Token = "0x40015D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float minimumX;

	[Token(Token = "0x40015D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float maximumX;

	[Token(Token = "0x40015D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float minimumY;

	[Token(Token = "0x40015DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float maximumY;

	[Token(Token = "0x40015DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float rotationX;

	[Token(Token = "0x40015DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float rotationY;

	[Token(Token = "0x40015DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private List<float> rotArrayX;

	[Token(Token = "0x40015DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float rotAverageX;

	[Token(Token = "0x40015DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private List<float> rotArrayY;

	[Token(Token = "0x40015E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float rotAverageY;

	[Token(Token = "0x40015E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public float frameCounter;

	[Token(Token = "0x40015E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Quaternion originalRotation;

	[Token(Token = "0x40015E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Quaternion parentOriginalRotation;

	[Token(Token = "0x6001619")]
	[Address(RVA = "0xCC81CC", Offset = "0xCC81CC", VA = "0xCC81CC")]
	private void Update()
	{
	}

	[Token(Token = "0x600161A")]
	[Address(RVA = "0xCC897C", Offset = "0xCC897C", VA = "0xCC897C")]
	private void Start()
	{
	}

	[Token(Token = "0x600161B")]
	[Address(RVA = "0xCC88AC", Offset = "0xCC88AC", VA = "0xCC88AC")]
	public static float ClampAngle(float angle, float min, float max)
	{
		return default(float);
	}

	[Token(Token = "0x600161C")]
	[Address(RVA = "0xCC8A6C", Offset = "0xCC8A6C", VA = "0xCC8A6C")]
	public SmoothMouseLook()
	{
	}
}
[Token(Token = "0x20003A5")]
public class SkyboxChanger : MonoBehaviour
{
	[Token(Token = "0x40015E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Material[] Skyboxes;

	[Token(Token = "0x40015E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Dropdown _dropdown;

	[Token(Token = "0x600161D")]
	[Address(RVA = "0xCC7728", Offset = "0xCC7728", VA = "0xCC7728")]
	public void Awake()
	{
	}

	[Token(Token = "0x600161E")]
	[Address(RVA = "0xCC7788", Offset = "0xCC7788", VA = "0xCC7788")]
	public void ChangeSkybox()
	{
	}

	[Token(Token = "0x600161F")]
	[Address(RVA = "0xCC7828", Offset = "0xCC7828", VA = "0xCC7828")]
	public SkyboxChanger()
	{
	}
}
[Token(Token = "0x20003A6")]
public class SkyboxRotator : MonoBehaviour
{
	[Token(Token = "0x40015EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float RotationPerSecond;

	[Token(Token = "0x40015EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private bool _rotate;

	[Token(Token = "0x6001620")]
	[Address(RVA = "0xCC7830", Offset = "0xCC7830", VA = "0xCC7830")]
	protected void Update()
	{
	}

	[Token(Token = "0x6001621")]
	[Address(RVA = "0xCC78BC", Offset = "0xCC78BC", VA = "0xCC78BC")]
	public void ToggleSkyboxRotation()
	{
	}

	[Token(Token = "0x6001622")]
	[Address(RVA = "0xCC78CC", Offset = "0xCC78CC", VA = "0xCC78CC")]
	public SkyboxRotator()
	{
	}
}
[Token(Token = "0x20003A7")]
public class TimeOfDaySounds : MonoBehaviour
{
	[Token(Token = "0x20003A8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9732FC", Offset = "0x9732FC")]
	private sealed class <CheckTime>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40015F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40015F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40015F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TimeOfDaySounds <>4__this;

		[Token(Token = "0x17000235")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001629")]
			[Address(RVA = "0xE30860", Offset = "0xE30860", VA = "0xE30860", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000236")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600162B")]
			[Address(RVA = "0xE308C8", Offset = "0xE308C8", VA = "0xE308C8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001626")]
		[Address(RVA = "0xE305FC", Offset = "0xE305FC", VA = "0xE305FC")]
		[DebuggerHidden]
		public <CheckTime>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x6001627")]
		[Address(RVA = "0xE30630", Offset = "0xE30630", VA = "0xE30630", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001628")]
		[Address(RVA = "0xE30634", Offset = "0xE30634", VA = "0xE30634", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600162A")]
		[Address(RVA = "0xE30868", Offset = "0xE30868", VA = "0xE30868", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40015EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private EnvironmentManager environmentManager;

	[Token(Token = "0x40015ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject m_dawnSounds;

	[Token(Token = "0x40015EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private GameObject m_daySounds;

	[Token(Token = "0x40015EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private GameObject m_duskSounds;

	[Token(Token = "0x40015F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private GameObject m_nightSounds;

	[Token(Token = "0x6001623")]
	[Address(RVA = "0xE304EC", Offset = "0xE304EC", VA = "0xE304EC")]
	private void Start()
	{
	}

	[Token(Token = "0x6001624")]
	[Address(RVA = "0xE30580", Offset = "0xE30580", VA = "0xE30580")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x98E8CC", Offset = "0x98E8CC")]
	private IEnumerator CheckTime()
	{
		return null;
	}

	[Token(Token = "0x6001625")]
	[Address(RVA = "0xE30628", Offset = "0xE30628", VA = "0xE30628")]
	public TimeOfDaySounds()
	{
	}
}
namespace Neat.Utilities.Collections
{
	[Token(Token = "0x20003A9")]
	public struct OptimizedCollection<T>
	{
		[Token(Token = "0x40015F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x97BC80", Offset = "0x97BC80")]
		private T[] <Content>k__BackingField;

		[Token(Token = "0x40015F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x97BC90", Offset = "0x97BC90")]
		private int <Count>k__BackingField;

		[Token(Token = "0x17000237")]
		public T[] Content
		{
			[Token(Token = "0x600162C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x98E980", Offset = "0x98E980")]
			get
			{
				return null;
			}
			[Token(Token = "0x600162D")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x98E990", Offset = "0x98E990")]
			private set
			{
			}
		}

		[Token(Token = "0x17000238")]
		public int Count
		{
			[Token(Token = "0x600162E")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x98E9A0", Offset = "0x98E9A0")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x600162F")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x98E9B0", Offset = "0x98E9B0")]
			private set
			{
			}
		}

		[Token(Token = "0x6001630")]
		public OptimizedCollection(int size)
		{
		}

		[Token(Token = "0x6001631")]
		public OptimizedCollection(T[] content)
		{
		}

		[Token(Token = "0x6001632")]
		public void IncreaseCount()
		{
		}

		[Token(Token = "0x6001633")]
		public void Add(T element)
		{
		}

		[Token(Token = "0x6001634")]
		public bool TryAdd(T element)
		{
			return default(bool);
		}

		[Token(Token = "0x6001635")]
		public void AddUnique(T element)
		{
		}

		[Token(Token = "0x6001636")]
		public bool TryAddUnique(T element)
		{
			return default(bool);
		}

		[Token(Token = "0x6001637")]
		public void Remove(T element)
		{
		}

		[Token(Token = "0x6001638")]
		public bool TryRemove(T element)
		{
			return default(bool);
		}

		[Token(Token = "0x6001639")]
		public void RemoveAt(int index)
		{
		}

		[Token(Token = "0x600163A")]
		public bool Contains(T element)
		{
			return default(bool);
		}

		[Token(Token = "0x600163B")]
		public void Clear(bool shouldClearContents = false)
		{
		}

		[Token(Token = "0x600163C")]
		public T[] ToArray()
		{
			return null;
		}
	}
}
namespace Neat.NeatCode.Controller
{
	[Token(Token = "0x20003AA")]
	public class NeatVR_KnucklesController : NeatVR_Controller
	{
		[Token(Token = "0x40015F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private GameSettings m_gameSettings;

		[Token(Token = "0x600163D")]
		[Address(RVA = "0xC25088", Offset = "0xC25088", VA = "0xC25088")]
		public NeatVR_KnucklesController(InputDevice device, bool isRightHand)
		{
		}

		[Token(Token = "0x600163E")]
		[Address(RVA = "0xC25130", Offset = "0xC25130", VA = "0xC25130", Slot = "13")]
		public override bool GetIsPressed(InputAction action)
		{
			return default(bool);
		}

		[Token(Token = "0x600163F")]
		[Address(RVA = "0xC25138", Offset = "0xC25138", VA = "0xC25138", Slot = "11")]
		public override bool GetOnPress(InputAction action)
		{
			return default(bool);
		}

		[Token(Token = "0x6001640")]
		[Address(RVA = "0xC25140", Offset = "0xC25140", VA = "0xC25140", Slot = "12")]
		public override bool GetOnRelease(InputAction action)
		{
			return default(bool);
		}

		[Token(Token = "0x6001641")]
		[Address(RVA = "0xC25148", Offset = "0xC25148", VA = "0xC25148", Slot = "10")]
		public override Vector2 GetStickInput(bool isRightHand)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6001642")]
		[Address(RVA = "0xC25154", Offset = "0xC25154", VA = "0xC25154", Slot = "5")]
		protected override void CreateButtons()
		{
		}

		[Token(Token = "0x6001643")]
		[Address(RVA = "0xC25454", Offset = "0xC25454", VA = "0xC25454", Slot = "9")]
		protected override void UpdatePlatformSpecificInputDelta(bool rightHand)
		{
		}
	}
	[Token(Token = "0x20003AB")]
	public class NeatVR_WMRController : NeatVR_Controller
	{
		[Token(Token = "0x40015F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private NeatVR_Input.HardwareInput[] hardwareButtons;

		[Token(Token = "0x6001644")]
		[Address(RVA = "0xC264A4", Offset = "0xC264A4", VA = "0xC264A4")]
		public NeatVR_WMRController(InputDevice device, bool isRightHand)
		{
		}

		[Token(Token = "0x6001645")]
		[Address(RVA = "0xC264B0", Offset = "0xC264B0", VA = "0xC264B0", Slot = "5")]
		protected override void CreateButtons()
		{
		}

		[Token(Token = "0x6001646")]
		[Address(RVA = "0xC26B14", Offset = "0xC26B14", VA = "0xC26B14", Slot = "8")]
		public override void UpdateInputDelta()
		{
		}

		[Token(Token = "0x6001647")]
		[Address(RVA = "0xC26B78", Offset = "0xC26B78", VA = "0xC26B78", Slot = "9")]
		protected override void UpdatePlatformSpecificInputDelta(bool rightHand)
		{
		}

		[Token(Token = "0x6001648")]
		[Address(RVA = "0xC26CBC", Offset = "0xC26CBC", VA = "0xC26CBC")]
		private void UpdateButton(InputAction action, bool rightHand)
		{
		}
	}
	[Token(Token = "0x20003AC")]
	public class NeatVR_ViveController : NeatVR_Controller
	{
		[Token(Token = "0x40015F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private float inputscale;

		[Token(Token = "0x6001649")]
		[Address(RVA = "0xC25534", Offset = "0xC25534", VA = "0xC25534")]
		public NeatVR_ViveController(InputDevice device, bool isRightHand)
		{
		}

		[Token(Token = "0x600164A")]
		[Address(RVA = "0xC256D0", Offset = "0xC256D0", VA = "0xC256D0", Slot = "13")]
		public override bool GetIsPressed(InputAction action)
		{
			return default(bool);
		}

		[Token(Token = "0x600164B")]
		[Address(RVA = "0xC25A4C", Offset = "0xC25A4C", VA = "0xC25A4C", Slot = "11")]
		public override bool GetOnPress(InputAction action)
		{
			return default(bool);
		}

		[Token(Token = "0x600164C")]
		[Address(RVA = "0xC25DC8", Offset = "0xC25DC8", VA = "0xC25DC8", Slot = "12")]
		public override bool GetOnRelease(InputAction action)
		{
			return default(bool);
		}

		[Token(Token = "0x600164D")]
		[Address(RVA = "0xC26144", Offset = "0xC26144", VA = "0xC26144", Slot = "10")]
		public override Vector2 GetStickInput(bool isRightHand)
		{
			return default(Vector2);
		}

		[Token(Token = "0x600164E")]
		[Address(RVA = "0xC26150", Offset = "0xC26150", VA = "0xC26150", Slot = "5")]
		protected override void CreateButtons()
		{
		}

		[Token(Token = "0x600164F")]
		[Address(RVA = "0xC26460", Offset = "0xC26460", VA = "0xC26460", Slot = "14")]
		protected override void OnDominantHandChanged(bool useLeftHand)
		{
		}

		[Token(Token = "0x6001650")]
		[Address(RVA = "0xC2647C", Offset = "0xC2647C", VA = "0xC2647C", Slot = "15")]
		protected override void OnSmoothLocomotionSettingChanged(bool enabled)
		{
		}

		[Token(Token = "0x6001651")]
		[Address(RVA = "0xC25550", Offset = "0xC25550", VA = "0xC25550")]
		private void UpdateInputSettings()
		{
		}

		[Token(Token = "0x6001652")]
		[Address(RVA = "0xC26498", Offset = "0xC26498", VA = "0xC26498", Slot = "9")]
		protected override void UpdatePlatformSpecificInputDelta(bool rightHand)
		{
		}
	}
}
namespace NeatCode.Extensions.ColorExtensions
{
	[Token(Token = "0x20003AD")]
	public static class ColorExtensions
	{
		[Token(Token = "0x6001653")]
		[Address(RVA = "0x103F860", Offset = "0x103F860", VA = "0x103F860")]
		public static Color WithA(this Color color, float value)
		{
			return default(Color);
		}
	}
}
namespace Unity.IL2CPP.CompilerServices
{
	[Token(Token = "0x20003AE")]
	public enum Option
	{
		[Token(Token = "0x40015FA")]
		NullChecks = 1,
		[Token(Token = "0x40015FB")]
		ArrayBoundsChecks,
		[Token(Token = "0x40015FC")]
		DivideByZeroChecks
	}
	[Token(Token = "0x20003AF")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0x97331C", Offset = "0x97331C")]
	public class Il2CppSetOptionAttribute : Attribute
	{
		[Token(Token = "0x40015FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x97BCA0", Offset = "0x97BCA0")]
		private Option <Option>k__BackingField;

		[Token(Token = "0x40015FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x97BCB0", Offset = "0x97BCB0")]
		private object <Value>k__BackingField;

		[Token(Token = "0x17000239")]
		private Option Option
		{
			[Token(Token = "0x6001654")]
			[Address(RVA = "0xE6BA68", Offset = "0xE6BA68", VA = "0xE6BA68")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x98E9D0", Offset = "0x98E9D0")]
			set
			{
			}
		}

		[Token(Token = "0x1700023A")]
		private object Value
		{
			[Token(Token = "0x6001655")]
			[Address(RVA = "0xE6BA70", Offset = "0xE6BA70", VA = "0xE6BA70")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x98E9E0", Offset = "0x98E9E0")]
			set
			{
			}
		}

		[Token(Token = "0x6001656")]
		[Address(RVA = "0xE6BA78", Offset = "0xE6BA78", VA = "0xE6BA78")]
		public Il2CppSetOptionAttribute(Option option, object value)
		{
		}
	}
}
namespace NeatCorp
{
	[Token(Token = "0x20003B0")]
	public class GotsAudioMixers : MonoBehaviour
	{
		[Token(Token = "0x40015FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private AudioMixer m_outputMixer;

		[Token(Token = "0x4001600")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private AudioMixer m_musicMixer;

		[Token(Token = "0x4001601")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private AudioMixer m_soundsMixer;

		[Token(Token = "0x4001602")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static GotsAudioMixers Instance;

		[Token(Token = "0x6001657")]
		[Address(RVA = "0xD48C9C", Offset = "0xD48C9C", VA = "0xD48C9C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001658")]
		[Address(RVA = "0xD48D0C", Offset = "0xD48D0C", VA = "0xD48D0C")]
		public static AudioMixer GetOutputMixer()
		{
			return null;
		}

		[Token(Token = "0x6001659")]
		[Address(RVA = "0xD48DE4", Offset = "0xD48DE4", VA = "0xD48DE4")]
		public static AudioMixer GetMusicMixer()
		{
			return null;
		}

		[Token(Token = "0x600165A")]
		[Address(RVA = "0xD48EBC", Offset = "0xD48EBC", VA = "0xD48EBC")]
		public static AudioMixer GetSoundsMixer()
		{
			return null;
		}

		[Token(Token = "0x600165B")]
		[Address(RVA = "0xD48F94", Offset = "0xD48F94", VA = "0xD48F94")]
		public GotsAudioMixers()
		{
		}
	}
	[Token(Token = "0x20003B1")]
	public class TriggerSoundFromAnimationEvent : MonoBehaviour
	{
		[Token(Token = "0x4001603")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private NeatAudioPlayer m_audioPlayer;

		[Token(Token = "0x4001604")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private NeatAudioPlayer m_audioPlayerSecondary;

		[Token(Token = "0x4001605")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private NeatAudioCue[] m_audioCues;

		[Token(Token = "0x4001606")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int m_currentCue;

		[Token(Token = "0x600165D")]
		[Address(RVA = "0xD569F8", Offset = "0xD569F8", VA = "0xD569F8")]
		public void TriggerSoundFromEvent(int audioCueIndex)
		{
		}

		[Token(Token = "0x600165E")]
		[Address(RVA = "0xD56B28", Offset = "0xD56B28", VA = "0xD56B28")]
		public void TriggerSoundFromEventSecondary(int audioCueIndex)
		{
		}

		[Token(Token = "0x600165F")]
		[Address(RVA = "0xD56C58", Offset = "0xD56C58", VA = "0xD56C58")]
		public TriggerSoundFromAnimationEvent()
		{
		}
	}
	[Token(Token = "0x20003B2")]
	public class SendMilestoneEvent : MonoBehaviour
	{
		[Token(Token = "0x4001607")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Milestone.MilestoneType milestone;

		[Token(Token = "0x4001608")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public bool onlySendOnce;

		[Token(Token = "0x4001609")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
		private bool didSend;

		[Token(Token = "0x6001660")]
		[Address(RVA = "0xD542A8", Offset = "0xD542A8", VA = "0xD542A8")]
		public void SendEvent()
		{
		}

		[Token(Token = "0x6001661")]
		[Address(RVA = "0xD54364", Offset = "0xD54364", VA = "0xD54364")]
		public SendMilestoneEvent()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20003B3")]
	public class SerializableBuildVersion
	{
		[Token(Token = "0x400160A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string applicationVersion;

		[Token(Token = "0x400160B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string buildVersion;

		[Token(Token = "0x6001662")]
		[Address(RVA = "0xD5436C", Offset = "0xD5436C", VA = "0xD5436C")]
		public SerializableBuildVersion(string appVersion, string buildVersion)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20003B4")]
	public class GotsBuildVersion
	{
		[Token(Token = "0x400160C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static string BUILD_VERSION_ASSET_PATH;

		[Token(Token = "0x400160D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static int SubPartLength;

		[Token(Token = "0x400160E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		private string gitCommitHash;

		[Token(Token = "0x400160F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private string uniqueRandomizedCode;

		[Token(Token = "0x6001663")]
		[Address(RVA = "0xD48FA0", Offset = "0xD48FA0", VA = "0xD48FA0")]
		public string GetBuildVersion()
		{
			return null;
		}

		[Token(Token = "0x6001664")]
		[Address(RVA = "0xD48FF4", Offset = "0xD48FF4", VA = "0xD48FF4")]
		public static string GetApplicationVersion()
		{
			return null;
		}

		[Token(Token = "0x6001665")]
		[Address(RVA = "0xD48FFC", Offset = "0xD48FFC", VA = "0xD48FFC")]
		public SerializableBuildVersion GetSerializableVersion()
		{
			return null;
		}

		[Token(Token = "0x6001666")]
		[Address(RVA = "0xD490A8", Offset = "0xD490A8", VA = "0xD490A8")]
		private static bool ParseAppVersionStringIntoParts(string version, out int first, out int second, out int third)
		{
			return default(bool);
		}

		[Token(Token = "0x6001667")]
		[Address(RVA = "0xD49488", Offset = "0xD49488", VA = "0xD49488")]
		private static bool VersionIsValid(string v)
		{
			return default(bool);
		}

		[Token(Token = "0x6001668")]
		[Address(RVA = "0xD4949C", Offset = "0xD4949C", VA = "0xD4949C")]
		public static bool VersionIsFromEarlyAccess(string appVersion)
		{
			return default(bool);
		}

		[Token(Token = "0x6001669")]
		[Address(RVA = "0xD49598", Offset = "0xD49598", VA = "0xD49598")]
		public GotsBuildVersion()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20003B5")]
	public struct Color32Serializable
	{
		[Token(Token = "0x4001610")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public byte r;

		[Token(Token = "0x4001611")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
		public byte g;

		[Token(Token = "0x4001612")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2")]
		public byte b;

		[Token(Token = "0x4001613")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3")]
		public byte a;

		[Token(Token = "0x600166B")]
		[Address(RVA = "0xA4E2B0", Offset = "0xA4E2B0", VA = "0xA4E2B0")]
		public Color32Serializable(Color32 color)
		{
		}

		[Token(Token = "0x600166C")]
		[Address(RVA = "0xA4E2D0", Offset = "0xA4E2D0", VA = "0xA4E2D0")]
		public Color32 ToColor32()
		{
			return default(Color32);
		}
	}
	[Serializable]
	[Token(Token = "0x20003B6")]
	public struct Vector3Serializable
	{
		[Token(Token = "0x4001614")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float x;

		[Token(Token = "0x4001615")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float y;

		[Token(Token = "0x4001616")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float z;

		[Token(Token = "0x600166D")]
		[Address(RVA = "0xA4608C", Offset = "0xA4608C", VA = "0xA4608C")]
		public Vector3Serializable(Vector3 vec)
		{
		}

		[Token(Token = "0x600166E")]
		[Address(RVA = "0xA46098", Offset = "0xA46098", VA = "0xA46098")]
		public Vector3 ToVector3()
		{
			return default(Vector3);
		}
	}
	[Serializable]
	[Token(Token = "0x20003B7")]
	public struct Vector4Serializable
	{
		[Token(Token = "0x4001617")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float x;

		[Token(Token = "0x4001618")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float y;

		[Token(Token = "0x4001619")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float z;

		[Token(Token = "0x400161A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float w;

		[Token(Token = "0x600166F")]
		[Address(RVA = "0xA460D4", Offset = "0xA460D4", VA = "0xA460D4")]
		public Vector4Serializable(Quaternion quaternion)
		{
		}

		[Token(Token = "0x6001670")]
		[Address(RVA = "0xA460E0", Offset = "0xA460E0", VA = "0xA460E0")]
		public Quaternion ToQuaternion()
		{
			return default(Quaternion);
		}
	}
	[Serializable]
	[Token(Token = "0x20003B8")]
	public struct AssetReferenceSerializable
	{
		[Token(Token = "0x400161B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string assetGuid;

		[Token(Token = "0x6001671")]
		[Address(RVA = "0xA4E280", Offset = "0xA4E280", VA = "0xA4E280")]
		public AssetReferenceSerializable(AssetReference assetRef)
		{
		}

		[Token(Token = "0x6001672")]
		[Address(RVA = "0xA4E288", Offset = "0xA4E288", VA = "0xA4E288")]
		public AssetReference ToAssetReference()
		{
			return null;
		}

		[Token(Token = "0x6001673")]
		[Address(RVA = "0xA4E290", Offset = "0xA4E290", VA = "0xA4E290")]
		public bool IsValid()
		{
			return default(bool);
		}
	}
	[Serializable]
	[Token(Token = "0x20003B9")]
	public struct OrientedPointSerializable
	{
		[Token(Token = "0x400161C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Vector4Serializable rotation;

		[Token(Token = "0x400161D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vector3Serializable position;

		[Token(Token = "0x400161E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Vector3Serializable localScale;

		[Token(Token = "0x6001674")]
		[Address(RVA = "0xA46AE8", Offset = "0xA46AE8", VA = "0xA46AE8")]
		public OrientedPointSerializable(OrientedPoint point)
		{
		}

		[Token(Token = "0x6001675")]
		[Address(RVA = "0xA46B1C", Offset = "0xA46B1C", VA = "0xA46B1C")]
		public OrientedPoint ToOrientedPoint()
		{
			return default(OrientedPoint);
		}
	}
	[Token(Token = "0x20003BA")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x973354", Offset = "0x973354")]
	public class CraftingSystemData : ScriptableObject
	{
		[Token(Token = "0x400161F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private CraftingSystem.CraftingRecipeCollection[] collections;

		[Token(Token = "0x1700023B")]
		public CraftingSystem.CraftingRecipeCollection[] Collections
		{
			[Token(Token = "0x6001676")]
			[Address(RVA = "0x1045698", Offset = "0x1045698", VA = "0x1045698")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001677")]
		[Address(RVA = "0x10456A0", Offset = "0x10456A0", VA = "0x10456A0")]
		public CraftingSystemData()
		{
		}
	}
	[Token(Token = "0x20003BB")]
	public struct CreditSection
	{
		[Token(Token = "0x4001620")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string title;

		[Token(Token = "0x4001621")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public string[] names;

		[Token(Token = "0x6001678")]
		[Address(RVA = "0xA43E38", Offset = "0xA43E38", VA = "0xA43E38")]
		public CreditSection(string title, string[] names)
		{
		}
	}
	[Token(Token = "0x20003BC")]
	public struct CreditPage
	{
		[Token(Token = "0x4001622")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float duration;

		[Token(Token = "0x4001623")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public CreditSection[] sections;

		[Token(Token = "0x6001679")]
		[Address(RVA = "0xA43DBC", Offset = "0xA43DBC", VA = "0xA43DBC")]
		public CreditPage(CreditSection[] sections, float duration = 3f)
		{
		}

		[Token(Token = "0x600167A")]
		[Address(RVA = "0xA43DF4", Offset = "0xA43DF4", VA = "0xA43DF4")]
		public string GetText()
		{
			return null;
		}
	}
	[Token(Token = "0x20003BD")]
	public class Credits : MonoBehaviour
	{
		[Token(Token = "0x20003BE")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9733C0", Offset = "0x9733C0")]
		private sealed class <ScrollCredits>d__32 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001642")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001643")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001644")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Credits <>4__this;

			[Token(Token = "0x4001645")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private Vector2 <size>5__2;

			[Token(Token = "0x4001646")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <targetY>5__3;

			[Token(Token = "0x4001647")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private float <duration>5__4;

			[Token(Token = "0x4001648")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private float <timeElapsed>5__5;

			[Token(Token = "0x1700023C")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001684")]
				[Address(RVA = "0xC8B540", Offset = "0xC8B540", VA = "0xC8B540", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700023D")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001686")]
				[Address(RVA = "0xC8B5A8", Offset = "0xC8B5A8", VA = "0xC8B5A8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001681")]
			[Address(RVA = "0xC89BC8", Offset = "0xC89BC8", VA = "0xC89BC8")]
			[DebuggerHidden]
			public <ScrollCredits>d__32(int <>1__state)
			{
			}

			[Token(Token = "0x6001682")]
			[Address(RVA = "0xC8B0A8", Offset = "0xC8B0A8", VA = "0xC8B0A8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001683")]
			[Address(RVA = "0xC8B0AC", Offset = "0xC8B0AC", VA = "0xC8B0AC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001685")]
			[Address(RVA = "0xC8B548", Offset = "0xC8B548", VA = "0xC8B548", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20003BF")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9733D0", Offset = "0x9733D0")]
		private sealed class <AnimateCredits>d__33 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001649")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400164A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400164B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Credits <>4__this;

			[Token(Token = "0x400164C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private int <currentIndex>5__2;

			[Token(Token = "0x400164D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float <duration>5__3;

			[Token(Token = "0x400164E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <timeElapsed>5__4;

			[Token(Token = "0x1700023E")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600168A")]
				[Address(RVA = "0xC8B038", Offset = "0xC8B038", VA = "0xC8B038", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700023F")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600168C")]
				[Address(RVA = "0xC8B0A0", Offset = "0xC8B0A0", VA = "0xC8B0A0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001687")]
			[Address(RVA = "0xC89C70", Offset = "0xC89C70", VA = "0xC89C70")]
			[DebuggerHidden]
			public <AnimateCredits>d__33(int <>1__state)
			{
			}

			[Token(Token = "0x6001688")]
			[Address(RVA = "0xC8AC48", Offset = "0xC8AC48", VA = "0xC8AC48", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001689")]
			[Address(RVA = "0xC8AC4C", Offset = "0xC8AC4C", VA = "0xC8AC4C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600168B")]
			[Address(RVA = "0xC8B040", Offset = "0xC8B040", VA = "0xC8B040", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20003C0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9733E0", Offset = "0x9733E0")]
		private sealed class <>c
		{
			[Token(Token = "0x400164F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4001650")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Action <>9__34_0;

			[Token(Token = "0x600168E")]
			[Address(RVA = "0xC8AC3C", Offset = "0xC8AC3C", VA = "0xC8AC3C")]
			public <>c()
			{
			}

			[Token(Token = "0x600168F")]
			[Address(RVA = "0xC8AC44", Offset = "0xC8AC44", VA = "0xC8AC44")]
			internal void <.ctor>b__34_0()
			{
			}
		}

		[Token(Token = "0x4001624")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Action OnComplete;

		[Token(Token = "0x4001625")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private TextMeshPro creditsText;

		[Token(Token = "0x4001626")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool initialized;

		[Token(Token = "0x4001627")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		private bool isAnimating;

		[Token(Token = "0x4001628")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private List<CreditPage> pages;

		[Token(Token = "0x4001629")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static string[] ceo;

		[Token(Token = "0x400162A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static string[] art;

		[Token(Token = "0x400162B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static string[] design;

		[Token(Token = "0x400162C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static string[] design2;

		[Token(Token = "0x400162D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static string[] code;

		[Token(Token = "0x400162E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static string[] code2;

		[Token(Token = "0x400162F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private static string[] techArt;

		[Token(Token = "0x4001630")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private static string[] sound;

		[Token(Token = "0x4001631")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private static string[] pr;

		[Token(Token = "0x4001632")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private static string[] qa;

		[Token(Token = "0x4001633")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private static string[] petsAndBabies;

		[Token(Token = "0x4001634")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private static string[] specialThanks;

		[Token(Token = "0x4001635")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private CreditSection firstPage;

		[Token(Token = "0x4001636")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private CreditSection ceoSection;

		[Token(Token = "0x4001637")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private CreditSection artSection;

		[Token(Token = "0x4001638")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private CreditSection designSection;

		[Token(Token = "0x4001639")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private CreditSection design2Section;

		[Token(Token = "0x400163A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private CreditSection codeSection;

		[Token(Token = "0x400163B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private CreditSection code2Section;

		[Token(Token = "0x400163C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private CreditSection techArtSection;

		[Token(Token = "0x400163D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private CreditSection soundSection;

		[Token(Token = "0x400163E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private CreditSection prSection;

		[Token(Token = "0x400163F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private CreditSection qaSection;

		[Token(Token = "0x4001640")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private CreditSection petsSection;

		[Token(Token = "0x4001641")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private CreditSection thanksSection;

		[Token(Token = "0x600167B")]
		[Address(RVA = "0xC895FC", Offset = "0xC895FC", VA = "0xC895FC")]
		private void Init()
		{
		}

		[Token(Token = "0x600167C")]
		[Address(RVA = "0xC89A90", Offset = "0xC89A90", VA = "0xC89A90")]
		public void ShowCredits()
		{
		}

		[Token(Token = "0x600167D")]
		[Address(RVA = "0xC89B4C", Offset = "0xC89B4C", VA = "0xC89B4C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x98E9F0", Offset = "0x98E9F0")]
		private IEnumerator ScrollCredits()
		{
			return null;
		}

		[Token(Token = "0x600167E")]
		[Address(RVA = "0xC89BF4", Offset = "0xC89BF4", VA = "0xC89BF4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x98EA54", Offset = "0x98EA54")]
		private IEnumerator AnimateCredits()
		{
			return null;
		}

		[Token(Token = "0x600167F")]
		[Address(RVA = "0xC89C9C", Offset = "0xC89C9C", VA = "0xC89C9C")]
		public Credits()
		{
		}
	}
	[Token(Token = "0x20003C1")]
	public class HorizonClouds : MonoBehaviour
	{
		[Token(Token = "0x6001690")]
		[Address(RVA = "0xC31A58", Offset = "0xC31A58", VA = "0xC31A58")]
		private void Update()
		{
		}

		[Token(Token = "0x6001691")]
		[Address(RVA = "0xC31BDC", Offset = "0xC31BDC", VA = "0xC31BDC")]
		public HorizonClouds()
		{
		}
	}
	[Token(Token = "0x20003C2")]
	public class NightSkyEffects : MonoBehaviour
	{
		[Token(Token = "0x4001651")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Light directionalLight;

		[Token(Token = "0x4001652")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float toggleAtDarkness;

		[Token(Token = "0x4001653")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private GameObject objectToToggle;

		[Token(Token = "0x6001692")]
		[Address(RVA = "0xD9B2B4", Offset = "0xD9B2B4", VA = "0xD9B2B4")]
		private void Update()
		{
		}

		[Token(Token = "0x6001693")]
		[Address(RVA = "0xD9B538", Offset = "0xD9B538", VA = "0xD9B538")]
		public NightSkyEffects()
		{
		}
	}
	[Token(Token = "0x20003C3")]
	public enum PaintSplashColor
	{
		[Token(Token = "0x4001655")]
		Blue,
		[Token(Token = "0x4001656")]
		Clear,
		[Token(Token = "0x4001657")]
		Green,
		[Token(Token = "0x4001658")]
		Orange,
		[Token(Token = "0x4001659")]
		Pink,
		[Token(Token = "0x400165A")]
		Purple,
		[Token(Token = "0x400165B")]
		PurplePink,
		[Token(Token = "0x400165C")]
		Red,
		[Token(Token = "0x400165D")]
		White,
		[Token(Token = "0x400165E")]
		Yellow
	}
	[Token(Token = "0x20003C4")]
	public class ParticleEffectPoolSystem : MonoBehaviour
	{
		[Token(Token = "0x400165F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ParticleEffectPoolSystem Instance;

		[Token(Token = "0x4001660")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x97BD90", Offset = "0x97BD90")]
		private ParticleSystem[] waterSplashEffects;

		[Token(Token = "0x4001661")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x97BDDC", Offset = "0x97BDDC")]
		private NeatAudioPlayer waterSplashAudioPlayer;

		[Token(Token = "0x4001662")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x97BE28", Offset = "0x97BE28")]
		[SerializeField]
		private ParticleSystem[] poofEffects;

		[Token(Token = "0x4001663")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x97BE74", Offset = "0x97BE74")]
		[SerializeField]
		private NeatAudioPlayer poofAudioPlayer;

		[Token(Token = "0x4001664")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x97BEC0", Offset = "0x97BEC0")]
		private ParticleSystem[] paintSplashEffects;

		[Token(Token = "0x4001665")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private NeatAudioPlayer paintSplashAudioPlayer;

		[Token(Token = "0x4001666")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x97BF1C", Offset = "0x97BF1C")]
		private ParticleSystem[] glitterEffects;

		[Token(Token = "0x4001667")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private NeatAudioPlayer glitterAudioPlayer;

		[Token(Token = "0x4001668")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x97BF78", Offset = "0x97BF78")]
		private ParticleSystem[] dirtEffects;

		[Token(Token = "0x4001669")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private NeatAudioPlayer dirtAudioPlayer;

		[Token(Token = "0x400166A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x97BFD4", Offset = "0x97BFD4")]
		private NeatAudioPlayer[] pooledAudioPlayers;

		[Token(Token = "0x400166B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private int currentWaterSplashIndex;

		[Token(Token = "0x400166C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private int currentPoofIndex;

		[Token(Token = "0x400166D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private int currentPaintSplashIndex;

		[Token(Token = "0x400166E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private int currentGlitterIndex;

		[Token(Token = "0x400166F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private int currentDirtIndex;

		[Token(Token = "0x4001670")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private int audioPlayerIndex;

		[Token(Token = "0x4001671")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private readonly int SPEED;

		[Token(Token = "0x6001694")]
		[Address(RVA = "0xD9B6A4", Offset = "0xD9B6A4", VA = "0xD9B6A4")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001695")]
		[Address(RVA = "0xD9B714", Offset = "0xD9B714", VA = "0xD9B714")]
		public static void PlayWaterSplash(Vector3 pos)
		{
		}

		[Token(Token = "0x6001696")]
		[Address(RVA = "0xD9BA80", Offset = "0xD9BA80", VA = "0xD9BA80")]
		public static void PlayPoofEffect(Vector3 pos)
		{
		}

		[Token(Token = "0x6001697")]
		[Address(RVA = "0xD9BB84", Offset = "0xD9BB84", VA = "0xD9BB84")]
		public static void PlayPaintSplashEffect(Vector3 pos, PaintSplashColor color, float speed)
		{
		}

		[Token(Token = "0x6001698")]
		[Address(RVA = "0xD9BF44", Offset = "0xD9BF44", VA = "0xD9BF44")]
		public static void PlayGlitterEffect(Vector3 pos)
		{
		}

		[Token(Token = "0x6001699")]
		[Address(RVA = "0xD9C048", Offset = "0xD9C048", VA = "0xD9C048")]
		public static void PlayDirtEffect(Vector3 pos)
		{
		}

		[Token(Token = "0x600169A")]
		[Address(RVA = "0xD9C14C", Offset = "0xD9C14C", VA = "0xD9C14C")]
		public static void PlaySound(Vector3 pos, NeatAudioCue cue)
		{
		}

		[Token(Token = "0x600169B")]
		[Address(RVA = "0xD9C1FC", Offset = "0xD9C1FC", VA = "0xD9C1FC")]
		private int PlaySound(Vector3 pos, NeatAudioCue cue, NeatAudioPlayer[] audioPlayers, int index)
		{
			return default(int);
		}

		[Token(Token = "0x600169C")]
		[Address(RVA = "0xD9B818", Offset = "0xD9B818", VA = "0xD9B818")]
		private int PlayEffect(Vector3 pos, ParticleSystem[] effects, int index, [Optional] NeatAudioPlayer audioPlayer)
		{
			return default(int);
		}

		[Token(Token = "0x600169D")]
		[Address(RVA = "0xD9BCA4", Offset = "0xD9BCA4", VA = "0xD9BCA4")]
		private int PlayPaintSplashEffect(Vector3 pos, ParticleSystem[] effects, int colorIndex, float speed, int currentVariation, [Optional] NeatAudioPlayer audioPlayer)
		{
			return default(int);
		}

		[Token(Token = "0x600169E")]
		[Address(RVA = "0xD9C478", Offset = "0xD9C478", VA = "0xD9C478")]
		public ParticleEffectPoolSystem()
		{
		}
	}
	[Token(Token = "0x20003C5")]
	public class ToggleAtTime : MonoBehaviour, IInitializable
	{
		[Token(Token = "0x4001672")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private int toggleOnAtHour;

		[Token(Token = "0x4001673")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private int toggleOffAtHour;

		[Token(Token = "0x60016A0")]
		[Address(RVA = "0xD56458", Offset = "0xD56458", VA = "0xD56458", Slot = "4")]
		public void Initialize()
		{
		}

		[Token(Token = "0x60016A1")]
		[Address(RVA = "0xD56620", Offset = "0xD56620", VA = "0xD56620")]
		public void ToggleOn()
		{
		}

		[Token(Token = "0x60016A2")]
		[Address(RVA = "0xD5677C", Offset = "0xD5677C", VA = "0xD5677C")]
		public void ToggleOff()
		{
		}

		[Token(Token = "0x60016A3")]
		[Address(RVA = "0xD568D8", Offset = "0xD568D8", VA = "0xD568D8")]
		public ToggleAtTime()
		{
		}
	}
	[Token(Token = "0x20003C6")]
	public abstract class GrabbableImpostor : MonoBehaviour, IGrabbable, IInitializable, IValidateCustom, IValidate
	{
		[Token(Token = "0x4001674")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GrabbableOutline outline;

		[Token(Token = "0x4001675")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Collider[] colliders;

		[Token(Token = "0x4001676")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private PlayerHand hand;

		[Token(Token = "0x60016A4")]
		public abstract Grabbable GetRealGrabbable();

		[Token(Token = "0x60016A5")]
		[Address(RVA = "0xD49678", Offset = "0xD49678", VA = "0xD49678", Slot = "17")]
		public virtual void Initialize()
		{
		}

		[Token(Token = "0x60016A6")]
		[Address(RVA = "0xD4967C", Offset = "0xD4967C", VA = "0xD4967C", Slot = "18")]
		public virtual int GetCurrentPriority()
		{
			return default(int);
		}

		[Token(Token = "0x60016A7")]
		[Address(RVA = "0xD49684", Offset = "0xD49684", VA = "0xD49684", Slot = "19")]
		public PlayerHand GetHeldByHand()
		{
			return null;
		}

		[Token(Token = "0x60016A8")]
		[Address(RVA = "0xD4968C", Offset = "0xD4968C", VA = "0xD4968C", Slot = "20")]
		public virtual bool IsEnabled()
		{
			return default(bool);
		}

		[Token(Token = "0x60016A9")]
		[Address(RVA = "0xD49694", Offset = "0xD49694", VA = "0xD49694", Slot = "21")]
		public bool HaveChildGrabbables()
		{
			return default(bool);
		}

		[Token(Token = "0x60016AA")]
		[Address(RVA = "0xD4969C", Offset = "0xD4969C", VA = "0xD4969C", Slot = "11")]
		public bool ShouldConsumeGrab(Collider collider)
		{
			return default(bool);
		}

		[Token(Token = "0x60016AB")]
		[Address(RVA = "0xD496A4", Offset = "0xD496A4", VA = "0xD496A4", Slot = "12")]
		public void Touch()
		{
		}

		[Token(Token = "0x60016AC")]
		[Address(RVA = "0xD496A8", Offset = "0xD496A8", VA = "0xD496A8", Slot = "7")]
		public void StartGrabbing(PlayerHand hand, Vector3 grabPositionOnItem, OrientedPoint handAttachPoint)
		{
		}

		[Token(Token = "0x60016AD")]
		[Address(RVA = "0xD496B0", Offset = "0xD496B0", VA = "0xD496B0", Slot = "8")]
		public void StopGrabbing(PlayerHand hand, Vector3 grabPositionOnItem, OrientedPoint attachPoint)
		{
		}

		[Token(Token = "0x60016AE")]
		[Address(RVA = "0xD496BC", Offset = "0xD496BC", VA = "0xD496BC", Slot = "9")]
		public void UpdateGrabbing(PlayerHand hand, Vector3 grabPositionOnItem, OrientedPoint attachPoint)
		{
		}

		[Token(Token = "0x60016AF")]
		[Address(RVA = "0xD496C0", Offset = "0xD496C0", VA = "0xD496C0", Slot = "5")]
		public bool IsExtraSticky()
		{
			return default(bool);
		}

		[Token(Token = "0x60016B0")]
		[Address(RVA = "0xD496C8", Offset = "0xD496C8", VA = "0xD496C8", Slot = "6")]
		public GrabbableOutline GetOutline()
		{
			return null;
		}

		[Token(Token = "0x60016B1")]
		[Address(RVA = "0xD496D0", Offset = "0xD496D0", VA = "0xD496D0", Slot = "13")]
		public float GetDelayBeforeGrab()
		{
			return default(float);
		}

		[Token(Token = "0x60016B2")]
		[Address(RVA = "0xD496D8", Offset = "0xD496D8", VA = "0xD496D8", Slot = "14")]
		public Collider[] GetColliders()
		{
			return null;
		}

		[Token(Token = "0x60016B3")]
		[Address(RVA = "0xD496E0", Offset = "0xD496E0", VA = "0xD496E0")]
		protected GrabbableImpostor()
		{
		}
	}
	[Token(Token = "0x20003C7")]
	public class PettableCollider : MonoBehaviour
	{
		[Token(Token = "0x4001677")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Pettable m_parentPettable;

		[Token(Token = "0x4001678")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private bool m_favoritePettingSpot;

		[Token(Token = "0x17000240")]
		public Pettable Pettable
		{
			[Token(Token = "0x60016B4")]
			[Address(RVA = "0xD9C4DC", Offset = "0xD9C4DC", VA = "0xD9C4DC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60016B5")]
		[Address(RVA = "0xD9C4E4", Offset = "0xD9C4E4", VA = "0xD9C4E4")]
		public PettableCollider()
		{
		}
	}
	[Token(Token = "0x20003C8")]
	public class SaveRotation : SaveableComponent, IInitializable
	{
		[Token(Token = "0x60016B6")]
		[Address(RVA = "0xD53590", Offset = "0xD53590", VA = "0xD53590", Slot = "4")]
		public override ComponentState CreateState()
		{
			return null;
		}

		[Token(Token = "0x60016B7")]
		[Address(RVA = "0xD536DC", Offset = "0xD536DC", VA = "0xD536DC", Slot = "5")]
		public void Initialize()
		{
		}

		[Token(Token = "0x60016B8")]
		[Address(RVA = "0xD5378C", Offset = "0xD5378C", VA = "0xD5378C")]
		public SaveRotation()
		{
		}
	}
	[Token(Token = "0x20003C9")]
	public class SaveRotationState : ComponentState
	{
		[Token(Token = "0x4001679")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Quaternion localRotation;

		[Token(Token = "0x60016B9")]
		[Address(RVA = "0xD53638", Offset = "0xD53638", VA = "0xD53638")]
		public SaveRotationState(Quaternion rot)
		{
		}
	}
	[Token(Token = "0x20003CA")]
	public class ToggleableObject : MonoBehaviour
	{
		[Token(Token = "0x400167A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject[] objects;

		[Token(Token = "0x60016BA")]
		[Address(RVA = "0xD568E0", Offset = "0xD568E0", VA = "0xD568E0")]
		public void ToggleObject(int index)
		{
		}

		[Token(Token = "0x60016BB")]
		[Address(RVA = "0xD56960", Offset = "0xD56960", VA = "0xD56960")]
		public ToggleableObject()
		{
		}
	}
	[Token(Token = "0x20003CB")]
	public class PlayerBracelet : MonoBehaviour, IValidate, IInitializable
	{
		[Token(Token = "0x20003CC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9733F0", Offset = "0x9733F0")]
		private sealed class <AttachToWrist>d__7 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001680")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001681")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001682")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public PlayerBracelet <>4__this;

			[Token(Token = "0x4001683")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Transform attachmentTransform;

			[Token(Token = "0x4001684")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public PlayerHand hand;

			[Token(Token = "0x4001685")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private Rigidbody <rigidbody>5__2;

			[Token(Token = "0x4001686")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private float <timeElapsed>5__3;

			[Token(Token = "0x4001687")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			private float <duration>5__4;

			[Token(Token = "0x17000241")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60016C3")]
				[Address(RVA = "0xDA2D48", Offset = "0xDA2D48", VA = "0xDA2D48", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000242")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60016C5")]
				[Address(RVA = "0xDA2DB0", Offset = "0xDA2DB0", VA = "0xDA2DB0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60016C0")]
			[Address(RVA = "0xDA27C8", Offset = "0xDA27C8", VA = "0xDA27C8")]
			[DebuggerHidden]
			public <AttachToWrist>d__7(int <>1__state)
			{
			}

			[Token(Token = "0x60016C1")]
			[Address(RVA = "0xDA2804", Offset = "0xDA2804", VA = "0xDA2804", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60016C2")]
			[Address(RVA = "0xDA2808", Offset = "0xDA2808", VA = "0xDA2808", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60016C4")]
			[Address(RVA = "0xDA2D50", Offset = "0xDA2D50", VA = "0xDA2D50", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400167B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private float attachToWristDuration;

		[Token(Token = "0x400167C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private AnimationCurve moveIntoPlaceCurve;

		[Token(Token = "0x400167D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private AnimationCurve scaleDownCurve;

		[Token(Token = "0x400167E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		[AttributeAttribute(Name = "CacheReferenceAttribute", RVA = "0x97C0C0", Offset = "0x97C0C0")]
		private Grabbable grabbable;

		[Token(Token = "0x400167F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool isAnimating;

		[Token(Token = "0x60016BC")]
		[Address(RVA = "0xDA2430", Offset = "0xDA2430", VA = "0xDA2430", Slot = "4")]
		public void Initialize()
		{
		}

		[Token(Token = "0x60016BD")]
		[Address(RVA = "0xDA2500", Offset = "0xDA2500", VA = "0xDA2500")]
		public void BraceletGrabbed(Grabbable g)
		{
		}

		[Token(Token = "0x60016BE")]
		[Address(RVA = "0xDA271C", Offset = "0xDA271C", VA = "0xDA271C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x98EB58", Offset = "0x98EB58")]
		private IEnumerator AttachToWrist(Transform attachmentTransform, PlayerHand hand)
		{
			return null;
		}

		[Token(Token = "0x60016BF")]
		[Address(RVA = "0xDA27F4", Offset = "0xDA27F4", VA = "0xDA27F4")]
		public PlayerBracelet()
		{
		}
	}
	[Token(Token = "0x20003CD")]
	public struct PotentialGrabbable
	{
		[Token(Token = "0x4001688")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public IGrabbable grabbable;

		[Token(Token = "0x4001689")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private OptimizedCollection<Collider> colliders;

		[Token(Token = "0x400168A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static int MAX_NUM_COLLIDERS;

		[Token(Token = "0x60016C6")]
		[Address(RVA = "0xA47D14", Offset = "0xA47D14", VA = "0xA47D14")]
		public PotentialGrabbable(IGrabbable grabbable, Collider collider)
		{
		}

		[Token(Token = "0x60016C7")]
		[Address(RVA = "0xA47D1C", Offset = "0xA47D1C", VA = "0xA47D1C")]
		public void AddCollider(Collider newCollider)
		{
		}

		[Token(Token = "0x60016C8")]
		[Address(RVA = "0xA47D24", Offset = "0xA47D24", VA = "0xA47D24")]
		public bool HasCollider(Collider collider)
		{
			return default(bool);
		}

		[Token(Token = "0x60016C9")]
		[Address(RVA = "0xA47D2C", Offset = "0xA47D2C", VA = "0xA47D2C")]
		public void SetValues(IGrabbable grabbable, Collider collider)
		{
		}

		[Token(Token = "0x60016CA")]
		[Address(RVA = "0xA47D34", Offset = "0xA47D34", VA = "0xA47D34")]
		public Vector3 GetClosestPointToLine(Vector3 origin, Vector3 direction, bool drawGizmos = false)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60016CB")]
		[Address(RVA = "0xA47D40", Offset = "0xA47D40", VA = "0xA47D40")]
		public Vector3 GetClosestPoint(Vector3 origin, bool fast = false)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60016CC")]
		[Address(RVA = "0xA47D4C", Offset = "0xA47D4C", VA = "0xA47D4C")]
		public int GetLayer()
		{
			return default(int);
		}
	}
	[Token(Token = "0x20003CE")]
	public class GrabbableTracker : MonoBehaviour
	{
		[Token(Token = "0x400168B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private OptimizedCollection<PotentialGrabbable> grabbablesInRange;

		[Token(Token = "0x400168C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool hasCalculatedInitialValues;

		[Token(Token = "0x400168D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private Vector3 relativeOriginPos;

		[Token(Token = "0x400168E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Collider[] sphereCastResults;

		[Token(Token = "0x400168F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Dictionary<int, IGrabbable> GrabbableLookUpTable;

		[Token(Token = "0x4001690")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static List<IGrabbable> grabbableList;

		[Token(Token = "0x60016CE")]
		[Address(RVA = "0xD496E8", Offset = "0xD496E8", VA = "0xD496E8")]
		public static void Reset()
		{
		}

		[Token(Token = "0x60016CF")]
		[Address(RVA = "0xD49784", Offset = "0xD49784", VA = "0xD49784")]
		public static void AddGrabbable(IGrabbable grabbable)
		{
		}

		[Token(Token = "0x60016D0")]
		[Address(RVA = "0xD49B40", Offset = "0xD49B40", VA = "0xD49B40")]
		public int GetGrabbablesInRange(Vector3 startPos, Transform handPointDirection, ref OptimizedCollection<PotentialGrabbable> grabbablesOut, bool drawGizmos = false)
		{
			return default(int);
		}

		[Token(Token = "0x60016D1")]
		[Address(RVA = "0xD4A044", Offset = "0xD4A044", VA = "0xD4A044")]
		public int CalculateScoreForPotentialGrabbable(PotentialGrabbable obj, Vector3 handPosition, Vector3 pointDirection, bool drawGizmos = false)
		{
			return default(int);
		}

		[Token(Token = "0x60016D2")]
		[Address(RVA = "0xD49EDC", Offset = "0xD49EDC", VA = "0xD49EDC")]
		private void FindGrabbablesInCapsule(Vector3 pos1, Vector3 pos2, float radius, ref OptimizedCollection<PotentialGrabbable> grabbablesOut)
		{
		}

		[Token(Token = "0x60016D3")]
		[Address(RVA = "0xD4A6A8", Offset = "0xD4A6A8", VA = "0xD4A6A8")]
		private void AddGrabbableIfNeeded(IGrabbable grabbable, Collider collider, ref OptimizedCollection<PotentialGrabbable> grabbablesOut)
		{
		}

		[Token(Token = "0x60016D4")]
		[Address(RVA = "0xD4A44C", Offset = "0xD4A44C", VA = "0xD4A44C")]
		private static IGrabbable GetGrabbableForCollider(Collider c)
		{
			return null;
		}

		[Token(Token = "0x60016D5")]
		[Address(RVA = "0xD4A798", Offset = "0xD4A798", VA = "0xD4A798")]
		public GrabbableTracker()
		{
		}
	}
	[Token(Token = "0x20003CF")]
	public class EndGameSequence : SaveableComponent, IInitializable
	{
		[Token(Token = "0x20003D0")]
		public enum EndGameState
		{
			[Token(Token = "0x40016A7")]
			None,
			[Token(Token = "0x40016A8")]
			TriggeredFirstAnimation,
			[Token(Token = "0x40016A9")]
			SpawnedFlower,
			[Token(Token = "0x40016AA")]
			PlayerGrabbedBracelet,
			[Token(Token = "0x40016AB")]
			ShowedCredits
		}

		[Token(Token = "0x20003D1")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x973400", Offset = "0x973400")]
		private sealed class <ActivateLaserAfterDelay>d__28 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40016AC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40016AD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40016AE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float delay;

			[Token(Token = "0x40016AF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public EndGameSequence <>4__this;

			[Token(Token = "0x17000243")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60016E7")]
				[Address(RVA = "0xC8C9C0", Offset = "0xC8C9C0", VA = "0xC8C9C0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000244")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60016E9")]
				[Address(RVA = "0xC8CA28", Offset = "0xC8CA28", VA = "0xC8CA28", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60016E4")]
			[Address(RVA = "0xC8C0C4", Offset = "0xC8C0C4", VA = "0xC8C0C4")]
			[DebuggerHidden]
			public <ActivateLaserAfterDelay>d__28(int <>1__state)
			{
			}

			[Token(Token = "0x60016E5")]
			[Address(RVA = "0xC8C8B8", Offset = "0xC8C8B8", VA = "0xC8C8B8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60016E6")]
			[Address(RVA = "0xC8C8BC", Offset = "0xC8C8BC", VA = "0xC8C8BC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60016E8")]
			[Address(RVA = "0xC8C9C8", Offset = "0xC8C9C8", VA = "0xC8C9C8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001691")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Animator godsAnimator;

		[Token(Token = "0x4001692")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Animator ringsAnimator;

		[Token(Token = "0x4001693")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private GameObject coffin;

		[Token(Token = "0x4001694")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private GodFlower godFlowerStatic;

		[Token(Token = "0x4001695")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private GameObject playerBeacon;

		[Token(Token = "0x4001696")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private GameObject biome1Beacon;

		[Token(Token = "0x4001697")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private GameObject biome2Beacon;

		[Token(Token = "0x4001698")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private GameObject biome3Beacon;

		[Token(Token = "0x4001699")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private GameObject laserBeam;

		[Token(Token = "0x400169A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private float delayBeforeTriggeringLaser;

		[Token(Token = "0x400169B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private CreditsHandler credits;

		[Token(Token = "0x400169C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private EnvironmentPreset m_endGameOverridePreset;

		[Token(Token = "0x400169D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private EndGameState currentState;

		[Token(Token = "0x400169E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private bool canCompleteGame;

		[Token(Token = "0x400169F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8D")]
		private bool didAddListener;

		[Token(Token = "0x40016A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private int IntroStateHash;

		[Token(Token = "0x40016A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		private int OutroStateHash;

		[Token(Token = "0x40016A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private int ActivatedSpotHash;

		[Token(Token = "0x40016A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		private int GrabbedBraceletHash;

		[Token(Token = "0x40016A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private int GoDirectlyToLoopHash;

		[Token(Token = "0x40016A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		private int HideDoorHash;

		[Token(Token = "0x60016D7")]
		[Address(RVA = "0xC8B8FC", Offset = "0xC8B8FC", VA = "0xC8B8FC", Slot = "4")]
		public override ComponentState CreateState()
		{
			return null;
		}

		[Token(Token = "0x60016D8")]
		[Address(RVA = "0xC8B964", Offset = "0xC8B964", VA = "0xC8B964", Slot = "5")]
		public void Initialize()
		{
		}

		[Token(Token = "0x60016D9")]
		[Address(RVA = "0xC8BB38", Offset = "0xC8BB38", VA = "0xC8BB38")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60016DA")]
		[Address(RVA = "0xC8BC04", Offset = "0xC8BC04", VA = "0xC8BC04")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x60016DB")]
		[Address(RVA = "0xC8BE20", Offset = "0xC8BE20", VA = "0xC8BE20")]
		private void SetEnvironmentPreset()
		{
		}

		[Token(Token = "0x60016DC")]
		[Address(RVA = "0xC8C05C", Offset = "0xC8C05C", VA = "0xC8C05C")]
		private void ResetEnvironmentPreset()
		{
		}

		[Token(Token = "0x60016DD")]
		[Address(RVA = "0xC8BE94", Offset = "0xC8BE94", VA = "0xC8BE94")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x98EC0C", Offset = "0x98EC0C")]
		private IEnumerator ActivateLaserAfterDelay(float delay)
		{
			return null;
		}

		[Token(Token = "0x60016DE")]
		[Address(RVA = "0xC8C0F0", Offset = "0xC8C0F0", VA = "0xC8C0F0")]
		private void OnTriggerExit(Collider other)
		{
		}

		[Token(Token = "0x60016DF")]
		[Address(RVA = "0xC8C1E8", Offset = "0xC8C1E8", VA = "0xC8C1E8")]
		private void OnAnimationStateExit(OnAnimationStateExitEvent e)
		{
		}

		[Token(Token = "0x60016E0")]
		[Address(RVA = "0xC8BF20", Offset = "0xC8BF20", VA = "0xC8BF20")]
		public void TriggerSecondPartOfAnimation()
		{
		}

		[Token(Token = "0x60016E1")]
		[Address(RVA = "0xC8C47C", Offset = "0xC8C47C", VA = "0xC8C47C")]
		public void TriggerDoorOutroAnimation()
		{
		}

		[Token(Token = "0x60016E2")]
		[Address(RVA = "0xC8C4AC", Offset = "0xC8C4AC", VA = "0xC8C4AC")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x60016E3")]
		[Address(RVA = "0xC8C7D8", Offset = "0xC8C7D8", VA = "0xC8C7D8")]
		public EndGameSequence()
		{
		}
	}
	[Token(Token = "0x20003D2")]
	public class TriggerEndGameAnimationState : ComponentState
	{
		[Token(Token = "0x40016B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int endGameState;

		[Token(Token = "0x60016EA")]
		[Address(RVA = "0xD569CC", Offset = "0xD569CC", VA = "0xD569CC")]
		public TriggerEndGameAnimationState(EndGameSequence.EndGameState endGameState)
		{
		}
	}
	[Token(Token = "0x20003D3")]
	public class GodIslandLowRes : MonoBehaviour
	{
		[Token(Token = "0x20003D4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x973410", Offset = "0x973410")]
		private sealed class <AnimateReveal>d__23 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40016BF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40016C0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40016C1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public GodIslandLowRes <>4__this;

			[Token(Token = "0x40016C2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <timeElapsed>5__2;

			[Token(Token = "0x40016C3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private Vector3 <startPos>5__3;

			[Token(Token = "0x40016C4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private Vector3 <distanceToMove>5__4;

			[Token(Token = "0x40016C5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			private bool <didTriggerHaptics>5__5;

			[Token(Token = "0x17000245")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60016FA")]
				[Address(RVA = "0xD48C2C", Offset = "0xD48C2C", VA = "0xD48C2C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000246")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60016FC")]
				[Address(RVA = "0xD48C94", Offset = "0xD48C94", VA = "0xD48C94", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60016F7")]
			[Address(RVA = "0xD48794", Offset = "0xD48794", VA = "0xD48794")]
			[DebuggerHidden]
			public <AnimateReveal>d__23(int <>1__state)
			{
			}

			[Token(Token = "0x60016F8")]
			[Address(RVA = "0xD4883C", Offset = "0xD4883C", VA = "0xD4883C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60016F9")]
			[Address(RVA = "0xD48840", Offset = "0xD48840", VA = "0xD48840", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60016FB")]
			[Address(RVA = "0xD48C34", Offset = "0xD48C34", VA = "0xD48C34", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40016B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private WorldZone worldZone;

		[Token(Token = "0x40016B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GameObject rings;

		[Token(Token = "0x40016B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private GameObject door;

		[Token(Token = "0x40016B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private GameObject biome1Beacon;

		[Token(Token = "0x40016B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private GameObject biome2Beacon;

		[Token(Token = "0x40016B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private GameObject biome3Beacon;

		[Token(Token = "0x40016B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x97C220", Offset = "0x97C220")]
		[SerializeField]
		private AnimationCurve revealAnimationX;

		[Token(Token = "0x40016B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private AnimationCurve revealAnimationY;

		[Token(Token = "0x40016B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private AnimationCurve revealAnimationZ;

		[Token(Token = "0x40016BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private float delayBeforeReveal;

		[Token(Token = "0x40016BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		[SerializeField]
		private float revealAnimationDuration;

		[Token(Token = "0x40016BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private float delayBeforeRevealHaptics;

		[Token(Token = "0x40016BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private float defaultYPosition;

		[Token(Token = "0x40016BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static string skipTutorialEvent;

		[Token(Token = "0x60016EB")]
		[Address(RVA = "0xD47D7C", Offset = "0xD47D7C", VA = "0xD47D7C")]
		private void Start()
		{
		}

		[Token(Token = "0x60016EC")]
		[Address(RVA = "0xD48154", Offset = "0xD48154", VA = "0xD48154")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60016ED")]
		[Address(RVA = "0xD4825C", Offset = "0xD4825C", VA = "0xD4825C")]
		public void OnLowResVersionToggled(bool lodVisible)
		{
		}

		[Token(Token = "0x60016EE")]
		[Address(RVA = "0xD48020", Offset = "0xD48020", VA = "0xD48020")]
		private void UpdateBeaconVisibility()
		{
		}

		[Token(Token = "0x60016EF")]
		[Address(RVA = "0xD4843C", Offset = "0xD4843C", VA = "0xD4843C")]
		public void OnTutorialSkipped(QuestEvent e)
		{
		}

		[Token(Token = "0x60016F0")]
		[Address(RVA = "0xD485E8", Offset = "0xD485E8", VA = "0xD485E8")]
		public void OnMilestoneCompleted(MilestoneEvent e)
		{
		}

		[Token(Token = "0x60016F1")]
		[Address(RVA = "0xD47F74", Offset = "0xD47F74", VA = "0xD47F74")]
		private void HideUnderWater()
		{
		}

		[Token(Token = "0x60016F2")]
		[Address(RVA = "0xD48394", Offset = "0xD48394", VA = "0xD48394")]
		private void RevealImmediately()
		{
		}

		[Token(Token = "0x60016F3")]
		[Address(RVA = "0xD486EC", Offset = "0xD486EC", VA = "0xD486EC")]
		public void AnimateGodIslandReveal()
		{
		}

		[Token(Token = "0x60016F4")]
		[Address(RVA = "0xD48718", Offset = "0xD48718", VA = "0xD48718")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x98ECC0", Offset = "0x98ECC0")]
		private IEnumerator AnimateReveal()
		{
			return null;
		}

		[Token(Token = "0x60016F5")]
		[Address(RVA = "0xD487C0", Offset = "0xD487C0", VA = "0xD487C0")]
		public GodIslandLowRes()
		{
		}
	}
	[Token(Token = "0x20003D5")]
	public class CoralGemImpostor : ImportantItemImpostor
	{
		[Token(Token = "0x40016C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[SerializeField]
		private int m_ghostIndex;

		[Token(Token = "0x40016C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private bool m_didAddListener;

		[Token(Token = "0x60016FD")]
		[Address(RVA = "0x1044618", Offset = "0x1044618", VA = "0x1044618", Slot = "22")]
		protected override void FindImportantItem()
		{
		}

		[Token(Token = "0x60016FE")]
		[Address(RVA = "0x1044970", Offset = "0x1044970", VA = "0x1044970", Slot = "24")]
		public override void AssignConnectedItem(ImportantItem newItem)
		{
		}

		[Token(Token = "0x60016FF")]
		[Address(RVA = "0x1044A6C", Offset = "0x1044A6C", VA = "0x1044A6C")]
		private void OnPlaformFinished(PlatformFinishedEvent e)
		{
		}

		[Token(Token = "0x6001700")]
		[Address(RVA = "0x1044B80", Offset = "0x1044B80", VA = "0x1044B80", Slot = "23")]
		protected override void RemoveEventListeners()
		{
		}

		[Token(Token = "0x6001701")]
		[Address(RVA = "0x1044C4C", Offset = "0x1044C4C", VA = "0x1044C4C")]
		public CoralGemImpostor()
		{
		}
	}
	[Token(Token = "0x20003D6")]
	public class ImportantItem : SaveableComponent, IInitializable
	{
		[Token(Token = "0x20003D7")]
		public enum ItemType
		{
			[Token(Token = "0x40016CE")]
			None,
			[Token(Token = "0x40016CF")]
			Biome2Gem,
			[Token(Token = "0x40016D0")]
			Biome3Gem,
			[Token(Token = "0x40016D1")]
			BeaconMap,
			[Token(Token = "0x40016D2")]
			NUM_TYPES
		}

		[Token(Token = "0x40016C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		protected ItemType m_itemType;

		[Token(Token = "0x40016C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		protected Grabbable m_grabbable;

		[Token(Token = "0x40016CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		protected Rigidbody m_rigidbody;

		[Token(Token = "0x40016CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		protected ImportantItemImpostor m_currentImpostor;

		[Token(Token = "0x40016CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		protected SaveID m_impostorSaveID;

		[Token(Token = "0x17000247")]
		public Grabbable Grabbable
		{
			[Token(Token = "0x6001702")]
			[Address(RVA = "0xC31BE4", Offset = "0xC31BE4", VA = "0xC31BE4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000248")]
		public Rigidbody RB
		{
			[Token(Token = "0x6001703")]
			[Address(RVA = "0xC31BEC", Offset = "0xC31BEC", VA = "0xC31BEC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000249")]
		public ItemType Type
		{
			[Token(Token = "0x6001704")]
			[Address(RVA = "0xC31BF4", Offset = "0xC31BF4", VA = "0xC31BF4")]
			get
			{
				return default(ItemType);
			}
		}

		[Token(Token = "0x6001705")]
		[Address(RVA = "0xC31BFC", Offset = "0xC31BFC", VA = "0xC31BFC", Slot = "4")]
		public override ComponentState CreateState()
		{
			return null;
		}

		[Token(Token = "0x6001706")]
		[Address(RVA = "0xC31D14", Offset = "0xC31D14", VA = "0xC31D14")]
		public void AssignNewImpostor(ImportantItemImpostor newImpostor)
		{
		}

		[Token(Token = "0x6001707")]
		[Address(RVA = "0xC31E04", Offset = "0xC31E04", VA = "0xC31E04")]
		public bool IsAssignedToImpostor(ImportantItemImpostor impostor)
		{
			return default(bool);
		}

		[Token(Token = "0x6001708")]
		[Address(RVA = "0xC31F50", Offset = "0xC31F50", VA = "0xC31F50", Slot = "6")]
		public virtual void Initialize()
		{
		}

		[Token(Token = "0x6001709")]
		[Address(RVA = "0xC32484", Offset = "0xC32484", VA = "0xC32484")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x600170A")]
		[Address(RVA = "0xC32768", Offset = "0xC32768", VA = "0xC32768")]
		public ImportantItem()
		{
		}
	}
	[Token(Token = "0x20003D8")]
	public class ImportantItemCoralGem : ImportantItem
	{
		[Token(Token = "0x40016D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private int m_ghostIndex;

		[Token(Token = "0x1700024A")]
		public int GhostIndex
		{
			[Token(Token = "0x600170B")]
			[Address(RVA = "0xC32770", Offset = "0xC32770", VA = "0xC32770")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x600170C")]
		[Address(RVA = "0xC32778", Offset = "0xC32778", VA = "0xC32778")]
		public void SetGhostIndex(int index)
		{
		}

		[Token(Token = "0x600170D")]
		[Address(RVA = "0xC32780", Offset = "0xC32780", VA = "0xC32780")]
		public ImportantItemCoralGem()
		{
		}
	}
	[Token(Token = "0x20003D9")]
	public class ImportantItemImpostor : GrabbableImpostor
	{
		[Token(Token = "0x40016D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		protected ImportantItem.ItemType m_itemType;

		[Token(Token = "0x40016D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private AssetReference m_prefab;

		[Token(Token = "0x40016D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		protected GameObject m_imposterMesh;

		[Token(Token = "0x40016D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private SaveObjectBase m_saveObject;

		[Token(Token = "0x40016D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		protected ImportantItem m_connectedItem;

		[Token(Token = "0x40016D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private bool m_isSnapped;

		[Token(Token = "0x1700024B")]
		public SaveObjectBase SaveObj
		{
			[Token(Token = "0x600170E")]
			[Address(RVA = "0xC32790", Offset = "0xC32790", VA = "0xC32790")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700024C")]
		public ImportantItem ConnectedItem
		{
			[Token(Token = "0x600170F")]
			[Address(RVA = "0xC32798", Offset = "0xC32798", VA = "0xC32798")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001710")]
		[Address(RVA = "0xC327A0", Offset = "0xC327A0", VA = "0xC327A0", Slot = "16")]
		public override Grabbable GetRealGrabbable()
		{
			return null;
		}

		[Token(Token = "0x6001711")]
		[Address(RVA = "0xC328CC", Offset = "0xC328CC", VA = "0xC328CC", Slot = "17")]
		public override void Initialize()
		{
		}

		[Token(Token = "0x6001712")]
		[Address(RVA = "0xC32B6C", Offset = "0xC32B6C", VA = "0xC32B6C", Slot = "22")]
		protected virtual void FindImportantItem()
		{
		}

		[Token(Token = "0x6001713")]
		[Address(RVA = "0xC33030", Offset = "0xC33030", VA = "0xC33030")]
		private void OnItemUsed(ImportantItemUsedEvent e)
		{
		}

		[Token(Token = "0x6001714")]
		[Address(RVA = "0xC33224", Offset = "0xC33224", VA = "0xC33224")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x6001715")]
		[Address(RVA = "0xC33368", Offset = "0xC33368", VA = "0xC33368")]
		private void SnapToPosition()
		{
		}

		[Token(Token = "0x6001716")]
		[Address(RVA = "0xC3355C", Offset = "0xC3355C", VA = "0xC3355C", Slot = "20")]
		public override bool IsEnabled()
		{
			return default(bool);
		}

		[Token(Token = "0x6001717")]
		[Address(RVA = "0xC33598", Offset = "0xC33598", VA = "0xC33598")]
		private bool RealObjectCanBeGrabbed()
		{
			return default(bool);
		}

		[Token(Token = "0x6001718")]
		[Address(RVA = "0xC329B4", Offset = "0xC329B4", VA = "0xC329B4")]
		public void SpawnItem()
		{
		}

		[Token(Token = "0x6001719")]
		[Address(RVA = "0xC33654", Offset = "0xC33654", VA = "0xC33654")]
		public void OnGrabbableSpawned(SpawnOperationCallbackData data)
		{
		}

		[Token(Token = "0x600171A")]
		[Address(RVA = "0xC337C0", Offset = "0xC337C0", VA = "0xC337C0")]
		public void OnGrabbablePickedUp(Grabbable grabbable)
		{
		}

		[Token(Token = "0x600171B")]
		[Address(RVA = "0xC33938", Offset = "0xC33938", VA = "0xC33938")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x600171C")]
		[Address(RVA = "0xC33B1C", Offset = "0xC33B1C", VA = "0xC33B1C")]
		public void Deactivate()
		{
		}

		[Token(Token = "0x600171D")]
		[Address(RVA = "0xC33C28", Offset = "0xC33C28", VA = "0xC33C28", Slot = "23")]
		protected virtual void RemoveEventListeners()
		{
		}

		[Token(Token = "0x600171E")]
		[Address(RVA = "0xC32294", Offset = "0xC32294", VA = "0xC32294")]
		public bool HasConnectedItem()
		{
			return default(bool);
		}

		[Token(Token = "0x600171F")]
		[Address(RVA = "0xC33CD0", Offset = "0xC33CD0", VA = "0xC33CD0", Slot = "24")]
		public virtual void AssignConnectedItem(ImportantItem newItem)
		{
		}

		[Token(Token = "0x6001720")]
		[Address(RVA = "0xC33E88", Offset = "0xC33E88", VA = "0xC33E88", Slot = "18")]
		public override int GetCurrentPriority()
		{
			return default(int);
		}

		[Token(Token = "0x6001721")]
		[Address(RVA = "0xC33E90", Offset = "0xC33E90", VA = "0xC33E90")]
		public ImportantItemImpostor()
		{
		}
	}
	[Token(Token = "0x20003DA")]
	public class ImportantItemsManager : MonoBehaviour
	{
		[Token(Token = "0x40016DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ImportantItemsManager Instance;

		[Token(Token = "0x40016DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private List<ImportantItem> m_items;

		[Token(Token = "0x1700024D")]
		public static List<ImportantItem> Items
		{
			[Token(Token = "0x6001722")]
			[Address(RVA = "0xC32F34", Offset = "0xC32F34", VA = "0xC32F34")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001723")]
		[Address(RVA = "0xC33E98", Offset = "0xC33E98", VA = "0xC33E98")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001724")]
		[Address(RVA = "0xC32304", Offset = "0xC32304", VA = "0xC32304")]
		public static void RegisterItem(ImportantItem item)
		{
		}

		[Token(Token = "0x6001725")]
		[Address(RVA = "0xC32620", Offset = "0xC32620", VA = "0xC32620")]
		public static void DeregisterItem(ImportantItem item)
		{
		}

		[Token(Token = "0x6001726")]
		[Address(RVA = "0xC33F08", Offset = "0xC33F08", VA = "0xC33F08")]
		public ImportantItemsManager()
		{
		}
	}
	[Token(Token = "0x20003DB")]
	public class AnimationUtils : MonoBehaviour
	{
		[Token(Token = "0x20003DC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x973420", Offset = "0x973420")]
		private sealed class <MoveGrabbableAlongBezierCurve>d__5 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40016DD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40016DE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40016DF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Grabbable grabbable;

			[Token(Token = "0x40016E0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float delay;

			[Token(Token = "0x40016E1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public float duration;

			[Token(Token = "0x40016E2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public BezierCurve bezier;

			[Token(Token = "0x40016E3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private Rigidbody <rb>5__2;

			[Token(Token = "0x40016E4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private float <timeElapsed>5__3;

			[Token(Token = "0x40016E5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			private float <progress>5__4;

			[Token(Token = "0x40016E6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private float <done>5__5;

			[Token(Token = "0x1700024E")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001735")]
				[Address(RVA = "0x1043F9C", Offset = "0x1043F9C", VA = "0x1043F9C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700024F")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001737")]
				[Address(RVA = "0x1044004", Offset = "0x1044004", VA = "0x1044004", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001732")]
			[Address(RVA = "0x104390C", Offset = "0x104390C", VA = "0x104390C")]
			[DebuggerHidden]
			public <MoveGrabbableAlongBezierCurve>d__5(int <>1__state)
			{
			}

			[Token(Token = "0x6001733")]
			[Address(RVA = "0x1043CAC", Offset = "0x1043CAC", VA = "0x1043CAC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001734")]
			[Address(RVA = "0x1043CB0", Offset = "0x1043CB0", VA = "0x1043CB0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001736")]
			[Address(RVA = "0x1043FA4", Offset = "0x1043FA4", VA = "0x1043FA4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20003DD")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x973430", Offset = "0x973430")]
		private sealed class <RotateBackAndForth>d__8 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40016E7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40016E8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40016E9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Grabbable grabbable;

			[Token(Token = "0x40016EA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float degrees;

			[Token(Token = "0x40016EB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Transform obj;

			[Token(Token = "0x40016EC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public float duration;

			[Token(Token = "0x40016ED")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			public float maxSpeed;

			[Token(Token = "0x40016EE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public float speed;

			[Token(Token = "0x40016EF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			private float <timeElapsed>5__2;

			[Token(Token = "0x40016F0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private Vector3 <currentAngle>5__3;

			[Token(Token = "0x40016F1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
			private float <dir>5__4;

			[Token(Token = "0x17000250")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600173B")]
				[Address(RVA = "0x104438C", Offset = "0x104438C", VA = "0x104438C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000251")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600173D")]
				[Address(RVA = "0x10443F4", Offset = "0x10443F4", VA = "0x10443F4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001738")]
			[Address(RVA = "0x1043C74", Offset = "0x1043C74", VA = "0x1043C74")]
			[DebuggerHidden]
			public <RotateBackAndForth>d__8(int <>1__state)
			{
			}

			[Token(Token = "0x6001739")]
			[Address(RVA = "0x104400C", Offset = "0x104400C", VA = "0x104400C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600173A")]
			[Address(RVA = "0x1044010", Offset = "0x1044010", VA = "0x1044010", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600173C")]
			[Address(RVA = "0x1044394", Offset = "0x1044394", VA = "0x1044394", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40016DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static AnimationUtils Instance;

		[Token(Token = "0x6001728")]
		[Address(RVA = "0x10436C0", Offset = "0x10436C0", VA = "0x10436C0")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001729")]
		[Address(RVA = "0x1043730", Offset = "0x1043730", VA = "0x1043730")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x600172A")]
		[Address(RVA = "0x1043738", Offset = "0x1043738", VA = "0x1043738")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x600172B")]
		[Address(RVA = "0x1043740", Offset = "0x1043740", VA = "0x1043740")]
		public static void MoveGrabbableAlongCurve(Grabbable grabbable, BezierCurve bezier, float delay, float duration)
		{
		}

		[Token(Token = "0x600172C")]
		[Address(RVA = "0x1043860", Offset = "0x1043860", VA = "0x1043860")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x98ED74", Offset = "0x98ED74")]
		private IEnumerator MoveGrabbableAlongBezierCurve(Grabbable grabbable, BezierCurve bezier, float delay, float duration)
		{
			return null;
		}

		[Token(Token = "0x600172D")]
		[Address(RVA = "0x1043938", Offset = "0x1043938", VA = "0x1043938")]
		public static Coroutine RotateGrabbableBackAndForthAroundZ(Grabbable grabbable, float degrees, float duration, float speed)
		{
			return null;
		}

		[Token(Token = "0x600172E")]
		[Address(RVA = "0x1043B38", Offset = "0x1043B38", VA = "0x1043B38")]
		public static Coroutine RotateBackAndForthAroundZ(Transform obj, float degrees, float duration, float speed, float maxSpeed)
		{
			return null;
		}

		[Token(Token = "0x600172F")]
		[Address(RVA = "0x1043A74", Offset = "0x1043A74", VA = "0x1043A74")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x98EDD8", Offset = "0x98EDD8")]
		private IEnumerator RotateBackAndForth(Transform obj, float degrees, float duration, float speed, float maxSpeed, [Optional] Grabbable grabbable)
		{
			return null;
		}

		[Token(Token = "0x6001730")]
		[Address(RVA = "0x1043CA0", Offset = "0x1043CA0", VA = "0x1043CA0")]
		public AnimationUtils()
		{
		}
	}
	[Token(Token = "0x20003DE")]
	public class ConsoleCommand
	{
		[Token(Token = "0x40016F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string command;

		[Token(Token = "0x40016F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string description;
	}
	[Token(Token = "0x20003DF")]
	public class DebugConsole : MonoBehaviour
	{
		[Token(Token = "0x40016F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static DebugConsole Instance;

		[Token(Token = "0x17000252")]
		public static bool ConsoleEnabled
		{
			[Token(Token = "0x600173E")]
			[Address(RVA = "0xC8B5B0", Offset = "0xC8B5B0", VA = "0xC8B5B0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x600173F")]
		[Address(RVA = "0xC8B5B8", Offset = "0xC8B5B8", VA = "0xC8B5B8")]
		public static void PrintMessage(string msg)
		{
		}

		[Token(Token = "0x6001740")]
		[Address(RVA = "0xC8B5BC", Offset = "0xC8B5BC", VA = "0xC8B5BC")]
		public DebugConsole()
		{
		}
	}
	[Token(Token = "0x20003E0")]
	public class DebugInput
	{
		[Token(Token = "0x6001742")]
		[Address(RVA = "0xC8B5C8", Offset = "0xC8B5C8", VA = "0xC8B5C8")]
		public static bool GetKey(KeyCode key)
		{
			return default(bool);
		}

		[Token(Token = "0x6001743")]
		[Address(RVA = "0xC8B630", Offset = "0xC8B630", VA = "0xC8B630")]
		public static bool GetKeyDown(KeyCode key)
		{
			return default(bool);
		}

		[Token(Token = "0x6001744")]
		[Address(RVA = "0xC8B698", Offset = "0xC8B698", VA = "0xC8B698")]
		public static bool GetLeftMouseButton()
		{
			return default(bool);
		}

		[Token(Token = "0x6001745")]
		[Address(RVA = "0xC8B6A4", Offset = "0xC8B6A4", VA = "0xC8B6A4")]
		public static float GetMouseScrollDelta()
		{
			return default(float);
		}
	}
	[Token(Token = "0x20003E1")]
	public class DisableInLimitedBuild : MonoBehaviour
	{
		[Token(Token = "0x6001746")]
		[Address(RVA = "0xC8B6C0", Offset = "0xC8B6C0", VA = "0xC8B6C0")]
		public DisableInLimitedBuild()
		{
		}
	}
	[Token(Token = "0x20003E2")]
	public static class EasingUtils
	{
		[Token(Token = "0x40016F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static float HALF_PI;

		[Token(Token = "0x6001747")]
		[Address(RVA = "0xC8B6C8", Offset = "0xC8B6C8", VA = "0xC8B6C8")]
		public static float EaseInOutSine(float t)
		{
			return default(float);
		}

		[Token(Token = "0x6001748")]
		[Address(RVA = "0xC8B758", Offset = "0xC8B758", VA = "0xC8B758")]
		public static float EaseInSine(float t)
		{
			return default(float);
		}

		[Token(Token = "0x6001749")]
		[Address(RVA = "0xC8B808", Offset = "0xC8B808", VA = "0xC8B808")]
		public static float EaseOutSine(float t)
		{
			return default(float);
		}
	}
	[Token(Token = "0x20003E3")]
	public interface IValidate
	{
	}
	[Token(Token = "0x20003E4")]
	public interface IValidateCustom : IValidate
	{
	}
	[Token(Token = "0x20003E5")]
	public class SetScaleOnInitialize : MonoBehaviour, IInitializable
	{
		[Token(Token = "0x40016F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Stashable m_stashable;

		[Token(Token = "0x40016F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Vector3 m_scale;

		[Token(Token = "0x600174B")]
		[Address(RVA = "0xD5441C", Offset = "0xD5441C", VA = "0xD5441C", Slot = "4")]
		public void Initialize()
		{
		}

		[Token(Token = "0x600174C")]
		[Address(RVA = "0xD544B8", Offset = "0xD544B8", VA = "0xD544B8")]
		public SetScaleOnInitialize()
		{
		}
	}
	[Token(Token = "0x20003E6")]
	public class SpawnPrefab : MonoBehaviour, IInitializable
	{
		[Token(Token = "0x40016F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private AssetReference m_prefabToSpawn;

		[Token(Token = "0x40016F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private bool m_onlySpawnOnce;

		[Token(Token = "0x600174D")]
		[Address(RVA = "0xD55300", Offset = "0xD55300", VA = "0xD55300", Slot = "4")]
		public void Initialize()
		{
		}

		[Token(Token = "0x600174E")]
		[Address(RVA = "0xD55414", Offset = "0xD55414", VA = "0xD55414")]
		public SpawnPrefab()
		{
		}
	}
	[Token(Token = "0x20003E7")]
	public class AnimateMaterialEmissiveness : MonoBehaviour
	{
		[Token(Token = "0x20003E8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x973440", Offset = "0x973440")]
		private sealed class <AnimateMaterial>d__16 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001708")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001709")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400170A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public AnimateMaterialEmissiveness <>4__this;

			[Token(Token = "0x400170B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <timeElapsed>5__2;

			[Token(Token = "0x400170C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float <progress>5__3;

			[Token(Token = "0x400170D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <curveDuration>5__4;

			[Token(Token = "0x17000253")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001759")]
				[Address(RVA = "0x1041858", Offset = "0x1041858", VA = "0x1041858", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000254")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600175B")]
				[Address(RVA = "0x10418C0", Offset = "0x10418C0", VA = "0x10418C0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001756")]
			[Address(RVA = "0x10412D0", Offset = "0x10412D0", VA = "0x10412D0")]
			[DebuggerHidden]
			public <AnimateMaterial>d__16(int <>1__state)
			{
			}

			[Token(Token = "0x6001757")]
			[Address(RVA = "0x1041554", Offset = "0x1041554", VA = "0x1041554", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001758")]
			[Address(RVA = "0x1041558", Offset = "0x1041558", VA = "0x1041558", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600175A")]
			[Address(RVA = "0x1041860", Offset = "0x1041860", VA = "0x1041860", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40016FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private bool playOnEnable;

		[Token(Token = "0x40016FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x97C39C", Offset = "0x97C39C")]
		private Renderer rendererToAnimate;

		[Token(Token = "0x40016FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x97C3E8", Offset = "0x97C3E8")]
		[SerializeField]
		private int materialIndex;

		[Token(Token = "0x40016FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x97C434", Offset = "0x97C434")]
		[SerializeField]
		private bool useEmissiveColor;

		[Token(Token = "0x40016FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Color emissiveColor;

		[Token(Token = "0x40016FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private AnimationCurve animationCurve;

		[Token(Token = "0x4001700")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private float duration;

		[Token(Token = "0x4001701")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[SerializeField]
		private bool resetWhenDone;

		[Token(Token = "0x4001702")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private MaterialPropertyBlock mpb;

		[Token(Token = "0x4001703")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private MaterialPropertyBlock[] originalMpbs;

		[Token(Token = "0x4001704")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly int DiffuseReductionId;

		[Token(Token = "0x4001705")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private static readonly int ShadowReductionId;

		[Token(Token = "0x4001706")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static readonly int EmissiveColorId;

		[Token(Token = "0x4001707")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private static readonly int EmissiveId;

		[Token(Token = "0x600174F")]
		[Address(RVA = "0x1041028", Offset = "0x1041028", VA = "0x1041028")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001750")]
		[Address(RVA = "0x1041038", Offset = "0x1041038", VA = "0x1041038")]
		public void StartAnimation()
		{
		}

		[Token(Token = "0x6001751")]
		[Address(RVA = "0x1041254", Offset = "0x1041254", VA = "0x1041254")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x98EEDC", Offset = "0x98EEDC")]
		private IEnumerator AnimateMaterial()
		{
			return null;
		}

		[Token(Token = "0x6001752")]
		[Address(RVA = "0x10412FC", Offset = "0x10412FC", VA = "0x10412FC")]
		private void ApplyPropertyBlock(ref MaterialPropertyBlock propBlock)
		{
		}

		[Token(Token = "0x6001753")]
		[Address(RVA = "0x1041394", Offset = "0x1041394", VA = "0x1041394")]
		private void ResetAllPropertyBlocks()
		{
		}

		[Token(Token = "0x6001754")]
		[Address(RVA = "0x1041420", Offset = "0x1041420", VA = "0x1041420")]
		public AnimateMaterialEmissiveness()
		{
		}
	}
	[Token(Token = "0x20003E9")]
	public class AnimateScale : MonoBehaviour
	{
		[Token(Token = "0x20003EA")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x973450", Offset = "0x973450")]
		private sealed class <Animate>d__9 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001715")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001716")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001717")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public AnimateScale <>4__this;

			[Token(Token = "0x4001718")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <timeElapsed>5__2;

			[Token(Token = "0x4001719")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float <progress>5__3;

			[Token(Token = "0x17000255")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001763")]
				[Address(RVA = "0x1041CC4", Offset = "0x1041CC4", VA = "0x1041CC4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000256")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001765")]
				[Address(RVA = "0x1041D2C", Offset = "0x1041D2C", VA = "0x1041D2C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001760")]
			[Address(RVA = "0x10419E8", Offset = "0x10419E8", VA = "0x10419E8")]
			[DebuggerHidden]
			public <Animate>d__9(int <>1__state)
			{
			}

			[Token(Token = "0x6001761")]
			[Address(RVA = "0x1041AA4", Offset = "0x1041AA4", VA = "0x1041AA4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001762")]
			[Address(RVA = "0x1041AA8", Offset = "0x1041AA8", VA = "0x1041AA8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001764")]
			[Address(RVA = "0x1041CCC", Offset = "0x1041CCC", VA = "0x1041CCC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400170E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private AnimationCurve scaleCurveX;

		[Token(Token = "0x400170F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private AnimationCurve scaleCurveY;

		[Token(Token = "0x4001710")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private AnimationCurve scaleCurveZ;

		[Token(Token = "0x4001711")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private float duration;

		[Token(Token = "0x4001712")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[SerializeField]
		private Vector3 startScale;

		[Token(Token = "0x4001713")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Vector3 targetScale;

		[Token(Token = "0x4001714")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private bool isAnimating;

		[Token(Token = "0x600175C")]
		[Address(RVA = "0x10418C8", Offset = "0x10418C8", VA = "0x10418C8")]
		public void SetInitialScale()
		{
		}

		[Token(Token = "0x600175D")]
		[Address(RVA = "0x1041900", Offset = "0x1041900", VA = "0x1041900")]
		public void TriggerAnimation()
		{
		}

		[Token(Token = "0x600175E")]
		[Address(RVA = "0x104196C", Offset = "0x104196C", VA = "0x104196C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x98EF90", Offset = "0x98EF90")]
		private IEnumerator Animate()
		{
			return null;
		}

		[Token(Token = "0x600175F")]
		[Address(RVA = "0x1041A14", Offset = "0x1041A14", VA = "0x1041A14")]
		public AnimateScale()
		{
		}
	}
	[Token(Token = "0x20003EB")]
	public class PlatformGlow : MonoBehaviour
	{
		[Token(Token = "0x400171A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Renderer platformGlowRenderer;

		[Token(Token = "0x400171B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private int materialIndex;

		[Token(Token = "0x400171C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static MaterialPropertyBlock mpb;

		[Token(Token = "0x400171D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static bool HasPropertyBlock;

		[Token(Token = "0x400171E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private static readonly int minId;

		[Token(Token = "0x400171F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static readonly int maxId;

		[Token(Token = "0x6001766")]
		[Address(RVA = "0xD9C4EC", Offset = "0xD9C4EC", VA = "0xD9C4EC")]
		public void SetEmissive(bool emissive)
		{
		}

		[Token(Token = "0x6001767")]
		[Address(RVA = "0xD9C500", Offset = "0xD9C500", VA = "0xD9C500")]
		public void SetEmissiveness(float amount)
		{
		}

		[Token(Token = "0x6001768")]
		[Address(RVA = "0xD9C690", Offset = "0xD9C690", VA = "0xD9C690")]
		public PlatformGlow()
		{
		}
	}
}
namespace NeatCorp.LOD
{
	[Token(Token = "0x20003EC")]
	[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0x973460", Offset = "0x973460")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x973460", Offset = "0x973460")]
	public class LODData : ScriptableObject
	{
		[Token(Token = "0x4001720")]
		public const int MaxLOD = 7;

		[Token(Token = "0x4001721")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Renderer[] lod0;

		[Token(Token = "0x4001722")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Renderer[] lod1;

		[Token(Token = "0x4001723")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Renderer[] lod2;

		[Token(Token = "0x4001724")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Renderer[] lod3;

		[Token(Token = "0x4001725")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Renderer[] lod4;

		[Token(Token = "0x4001726")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Renderer[] lod5;

		[Token(Token = "0x4001727")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Renderer[] lod6;

		[Token(Token = "0x4001728")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Renderer[] lod7;

		[Token(Token = "0x17000257")]
		public Renderer[] Item
		{
			[Token(Token = "0x600176A")]
			[Address(RVA = "0xC3DBE0", Offset = "0xC3DBE0", VA = "0xC3DBE0")]
			get
			{
				return null;
			}
			[Token(Token = "0x600176B")]
			[Address(RVA = "0xC3DC44", Offset = "0xC3DC44", VA = "0xC3DC44")]
			set
			{
			}
		}

		[Token(Token = "0x600176C")]
		[Address(RVA = "0xC3DCC4", Offset = "0xC3DCC4", VA = "0xC3DCC4")]
		public LODData()
		{
		}
	}
}
namespace NeatCorp.Attributes
{
	[Token(Token = "0x20003ED")]
	public class ReadOnlyAttribute : PropertyAttribute
	{
		[Token(Token = "0x600176D")]
		[Address(RVA = "0x10444F4", Offset = "0x10444F4", VA = "0x10444F4")]
		public ReadOnlyAttribute()
		{
		}
	}
	[Token(Token = "0x20003EE")]
	public class BeginReadOnlyGroupAttribute : PropertyAttribute
	{
		[Token(Token = "0x600176E")]
		[Address(RVA = "0x10444E4", Offset = "0x10444E4", VA = "0x10444E4")]
		public BeginReadOnlyGroupAttribute()
		{
		}
	}
	[Token(Token = "0x20003EF")]
	public class EndReadOnlyGroupAttribute : PropertyAttribute
	{
		[Token(Token = "0x600176F")]
		[Address(RVA = "0x10444EC", Offset = "0x10444EC", VA = "0x10444EC")]
		public EndReadOnlyGroupAttribute()
		{
		}
	}
}
namespace NeatCorp.Settings
{
	[Token(Token = "0x20003F0")]
	public class GameSettings
	{
		[Token(Token = "0x4001729")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		private bool useLeftHandedButtonMapping;

		[Token(Token = "0x400172A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		[SerializeField]
		private bool useSmoothLocomotion;

		[Token(Token = "0x400172B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[SerializeField]
		private int movementSpeed;

		[Token(Token = "0x400172C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private bool acceleration;

		[Token(Token = "0x400172D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private int turningSpeed;

		[Token(Token = "0x400172E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private int language;

		[Token(Token = "0x400172F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private int indexControllerGrabMode;

		[Token(Token = "0x4001730")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private int height;

		[Token(Token = "0x4001731")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static int DEFAULT_TURNING_SPEED_INDEX;

		[Token(Token = "0x4001732")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private static int DEFAULT_MOVEMENT_SPEED_INDEX;

		[Token(Token = "0x4001733")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static float ACCELERATION;

		[Token(Token = "0x4001734")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private static float SNAPTURN;

		[Token(Token = "0x4001735")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static float[] RotationSpeedIntervals;

		[Token(Token = "0x4001736")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static float[] MovementSpeedIntervals;

		[Token(Token = "0x4001737")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Dictionary<GameSettingId, GameSettingEntry> settings;

		[Token(Token = "0x17000258")]
		public bool UseLeftHandedButtonMapping
		{
			[Token(Token = "0x6001770")]
			[Address(RVA = "0xD54580", Offset = "0xD54580", VA = "0xD54580")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000259")]
		public bool UseFreeLocomotion
		{
			[Token(Token = "0x6001771")]
			[Address(RVA = "0xD545E8", Offset = "0xD545E8", VA = "0xD545E8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700025A")]
		public bool UseSnapTurning
		{
			[Token(Token = "0x6001772")]
			[Address(RVA = "0xD54650", Offset = "0xD54650", VA = "0xD54650")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700025B")]
		public float Acceleration
		{
			[Token(Token = "0x6001773")]
			[Address(RVA = "0xD54710", Offset = "0xD54710", VA = "0xD54710")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6001774")]
		[Address(RVA = "0xD547B0", Offset = "0xD547B0", VA = "0xD547B0")]
		public float GetRotationSpeed()
		{
			return default(float);
		}

		[Token(Token = "0x6001775")]
		[Address(RVA = "0xD5498C", Offset = "0xD5498C", VA = "0xD5498C")]
		public float GetMovementSpeed()
		{
			return default(float);
		}

		[Token(Token = "0x6001776")]
		[Address(RVA = "0xD54AF0", Offset = "0xD54AF0", VA = "0xD54AF0")]
		public void InitSettings()
		{
		}

		[Token(Token = "0x6001777")]
		[Address(RVA = "0xD54DDC", Offset = "0xD54DDC", VA = "0xD54DDC")]
		public void SaveSettings()
		{
		}

		[Token(Token = "0x6001778")]
		[Address(RVA = "0xD54F28", Offset = "0xD54F28", VA = "0xD54F28")]
		public bool GetOnOffSetting(GameSettingId id)
		{
			return default(bool);
		}

		[Token(Token = "0x6001779")]
		[Address(RVA = "0xD54F9C", Offset = "0xD54F9C", VA = "0xD54F9C")]
		public void ChangeOnOffSetting(GameSettingId id, bool value)
		{
		}

		[Token(Token = "0x600177A")]
		[Address(RVA = "0xD5505C", Offset = "0xD5505C", VA = "0xD5505C")]
		public int GetIntervalSetting(GameSettingId id)
		{
			return default(int);
		}

		[Token(Token = "0x600177B")]
		[Address(RVA = "0xD550D0", Offset = "0xD550D0", VA = "0xD550D0")]
		public void ChangeIntervalSetting(GameSettingId id, int value)
		{
		}

		[Token(Token = "0x600177C")]
		[Address(RVA = "0xD55148", Offset = "0xD55148", VA = "0xD55148")]
		public GameSettings()
		{
		}
	}
	[Token(Token = "0x20003F1")]
	public class GameSettingEntry
	{
		[Token(Token = "0x4001738")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public GameSettingId id;

		[Token(Token = "0x4001739")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public bool boolValue;

		[Token(Token = "0x400173A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int intValue;

		[Token(Token = "0x600177E")]
		[Address(RVA = "0xD54530", Offset = "0xD54530", VA = "0xD54530")]
		public GameSettingEntry(GameSettingId id, bool boolValue = false, int intValue = 0)
		{
		}
	}
	[Token(Token = "0x20003F2")]
	public enum GameSettingId
	{
		[Token(Token = "0x400173C")]
		LeftHandMode,
		[Token(Token = "0x400173D")]
		SmoothLocomotion,
		[Token(Token = "0x400173E")]
		Acceleration,
		[Token(Token = "0x400173F")]
		MovementSpeed,
		[Token(Token = "0x4001740")]
		TurningSpeed,
		[Token(Token = "0x4001741")]
		Language,
		[Token(Token = "0x4001742")]
		IndexControllerGrabMode,
		[Token(Token = "0x4001743")]
		HeightAdjustment,
		[Token(Token = "0x4001744")]
		Undefined
	}
}
namespace NeatCorp.Quest.Boat
{
	[Token(Token = "0x20003F3")]
	public class DispatchBoatQuestEvent : MonoBehaviour
	{
		[Token(Token = "0x4001745")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private BoatQuestEventType m_type;

		[Token(Token = "0x600177F")]
		[Address(RVA = "0xE9AC54", Offset = "0xE9AC54", VA = "0xE9AC54")]
		public void Dispatch()
		{
		}

		[Token(Token = "0x6001780")]
		[Address(RVA = "0xE9AD2C", Offset = "0xE9AD2C", VA = "0xE9AD2C")]
		public DispatchBoatQuestEvent()
		{
		}
	}
}
namespace NeatCorp.Puzzles
{
	[Serializable]
	[Token(Token = "0x20003F4")]
	public class GemAltartSlotState : ComponentState
	{
		[Token(Token = "0x4001746")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool hasShard;

		[Token(Token = "0x6001781")]
		[Address(RVA = "0xE923EC", Offset = "0xE923EC", VA = "0xE923EC")]
		public GemAltartSlotState(bool hasShard)
		{
		}
	}
	[Token(Token = "0x20003F5")]
	public class GemAltarSlot : SaveableComponent, IInitializable
	{
		[Token(Token = "0x4001747")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private GemType m_gemType;

		[Token(Token = "0x4001748")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		private int m_slotIndex;

		[Token(Token = "0x4001749")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private GameObject m_shardObject;

		[Token(Token = "0x400174A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private GameObject m_shardPreVis;

		[Token(Token = "0x400174B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool m_hasShard;

		[Token(Token = "0x400174C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Transform m_shardTransform;

		[Token(Token = "0x400174D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private GloveGem m_gemShard;

		[Token(Token = "0x400174E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Action<int, bool> m_onSlotInitialized;

		[Token(Token = "0x400174F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Action<int> m_onStartCrystalPlacement;

		[Token(Token = "0x4001750")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Action<int> m_onFinishedCrystalPlacement;

		[Token(Token = "0x4001751")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private bool m_hasPlacedShard;

		[Token(Token = "0x6001782")]
		[Address(RVA = "0xE92050", Offset = "0xE92050", VA = "0xE92050")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001783")]
		[Address(RVA = "0xE92158", Offset = "0xE92158", VA = "0xE92158")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001784")]
		[Address(RVA = "0xE92260", Offset = "0xE92260", VA = "0xE92260", Slot = "5")]
		public void Initialize()
		{
		}

		[Token(Token = "0x6001785")]
		[Address(RVA = "0xE92384", Offset = "0xE92384", VA = "0xE92384", Slot = "4")]
		public override ComponentState CreateState()
		{
			return null;
		}

		[Token(Token = "0x6001786")]
		[Address(RVA = "0xE8B818", Offset = "0xE8B818", VA = "0xE8B818")]
		public void RegisterCallbacks(Action<int, bool> onSlotInitialized, Action<int> onStartCrystalPlacement, Action<int> onFinishedCrystalPlacement)
		{
		}

		[Token(Token = "0x6001787")]
		[Address(RVA = "0xE9241C", Offset = "0xE9241C", VA = "0xE9241C")]
		private void OnTriggerStay(Collider other)
		{
		}

		[Token(Token = "0x6001788")]
		[Address(RVA = "0xE92594", Offset = "0xE92594", VA = "0xE92594")]
		private void OnGemGrabbed(GemGrabbedEvent e)
		{
		}

		[Token(Token = "0x6001789")]
		[Address(RVA = "0xE925DC", Offset = "0xE925DC", VA = "0xE925DC")]
		private void OnGemDropped(GemDroppedEvent e)
		{
		}

		[Token(Token = "0x600178A")]
		[Address(RVA = "0xE9242C", Offset = "0xE9242C", VA = "0xE9242C")]
		private void TryAddShard(Collider other)
		{
		}

		[Token(Token = "0x600178B")]
		[Address(RVA = "0xE92780", Offset = "0xE92780", VA = "0xE92780")]
		private void OnInfusionCompleted(GemType gemType)
		{
		}

		[Token(Token = "0x600178C")]
		[Address(RVA = "0xE92324", Offset = "0xE92324", VA = "0xE92324")]
		private void SetShardActive(bool shouldBeActive)
		{
		}

		[Token(Token = "0x600178D")]
		[Address(RVA = "0xE92938", Offset = "0xE92938", VA = "0xE92938")]
		public GemAltarSlot()
		{
		}
	}
	[Token(Token = "0x20003F6")]
	public class CraftingMachineBeacon : SaveableComponent, IInitializable
	{
		[Token(Token = "0x20003F7")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9734F4", Offset = "0x9734F4")]
		private sealed class <AnimateDeactivation>d__8 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001757")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001758")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001759")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public CraftingMachineBeacon <>4__this;

			[Token(Token = "0x400175A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <originalYScale>5__2;

			[Token(Token = "0x400175B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float <timeElapsed>5__3;

			[Token(Token = "0x1700025C")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001797")]
				[Address(RVA = "0xE91D98", Offset = "0xE91D98", VA = "0xE91D98", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700025D")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001799")]
				[Address(RVA = "0xE91E00", Offset = "0xE91E00", VA = "0xE91E00", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001794")]
			[Address(RVA = "0xE91A94", Offset = "0xE91A94", VA = "0xE91A94")]
			[DebuggerHidden]
			public <AnimateDeactivation>d__8(int <>1__state)
			{
			}

			[Token(Token = "0x6001795")]
			[Address(RVA = "0xE91AF4", Offset = "0xE91AF4", VA = "0xE91AF4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001796")]
			[Address(RVA = "0xE91AF8", Offset = "0xE91AF8", VA = "0xE91AF8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001798")]
			[Address(RVA = "0xE91DA0", Offset = "0xE91DA0", VA = "0xE91DA0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20003F8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x973504", Offset = "0x973504")]
		private sealed class <RemoveAfterDelay>d__9 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400175C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400175D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400175E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public CraftingMachineBeacon <>4__this;

			[Token(Token = "0x400175F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float delay;

			[Token(Token = "0x1700025E")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600179D")]
				[Address(RVA = "0xE91FE0", Offset = "0xE91FE0", VA = "0xE91FE0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700025F")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600179F")]
				[Address(RVA = "0xE92048", Offset = "0xE92048", VA = "0xE92048", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600179A")]
			[Address(RVA = "0xE91AC0", Offset = "0xE91AC0", VA = "0xE91AC0")]
			[DebuggerHidden]
			public <RemoveAfterDelay>d__9(int <>1__state)
			{
			}

			[Token(Token = "0x600179B")]
			[Address(RVA = "0xE91E08", Offset = "0xE91E08", VA = "0xE91E08", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600179C")]
			[Address(RVA = "0xE91E0C", Offset = "0xE91E0C", VA = "0xE91E0C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600179E")]
			[Address(RVA = "0xE91FE8", Offset = "0xE91FE8", VA = "0xE91FE8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001752")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private ParticleSystem m_beaconEffect;

		[Token(Token = "0x4001753")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private ParticleSystem m_deactivationEffect;

		[Token(Token = "0x4001754")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool m_initialized;

		[Token(Token = "0x4001755")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
		private bool m_deactivated;

		[Token(Token = "0x4001756")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3A")]
		private bool m_didSendEvent;

		[Token(Token = "0x600178E")]
		[Address(RVA = "0xE91434", Offset = "0xE91434", VA = "0xE91434", Slot = "4")]
		public override ComponentState CreateState()
		{
			return null;
		}

		[Token(Token = "0x600178F")]
		[Address(RVA = "0xE9151C", Offset = "0xE9151C", VA = "0xE9151C", Slot = "5")]
		public void Initialize()
		{
		}

		[Token(Token = "0x6001790")]
		[Address(RVA = "0xE91698", Offset = "0xE91698", VA = "0xE91698")]
		public void Update()
		{
		}

		[Token(Token = "0x6001791")]
		[Address(RVA = "0xE91A18", Offset = "0xE91A18", VA = "0xE91A18")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x98F044", Offset = "0x98F044")]
		private IEnumerator AnimateDeactivation()
		{
			return null;
		}

		[Token(Token = "0x6001792")]
		[Address(RVA = "0xE9160C", Offset = "0xE9160C", VA = "0xE9160C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x98F0A8", Offset = "0x98F0A8")]
		private IEnumerator RemoveAfterDelay(float delay)
		{
			return null;
		}

		[Token(Token = "0x6001793")]
		[Address(RVA = "0xE91AEC", Offset = "0xE91AEC", VA = "0xE91AEC")]
		public CraftingMachineBeacon()
		{
		}
	}
	[Token(Token = "0x20003F9")]
	public class CraftingMachineBeaconState : ComponentState
	{
		[Token(Token = "0x4001760")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool m_shouldBeActive;

		[Token(Token = "0x4001761")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		public bool m_shouldBeRemoved;

		[Token(Token = "0x60017A0")]
		[Address(RVA = "0xE914D8", Offset = "0xE914D8", VA = "0xE914D8")]
		public CraftingMachineBeaconState(bool active, bool toBeRemoved)
		{
		}
	}
	[Token(Token = "0x20003FA")]
	public class HomelandAltar : MonoBehaviour
	{
		[Token(Token = "0x20003FB")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x973514", Offset = "0x973514")]
		private sealed class <SendEventAfterDelay>d__18 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400176E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400176F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001770")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public HomelandAltar <>4__this;

			[Token(Token = "0x17000260")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60017AF")]
				[Address(RVA = "0xE93958", Offset = "0xE93958", VA = "0xE93958", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000261")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60017B1")]
				[Address(RVA = "0xE939C0", Offset = "0xE939C0", VA = "0xE939C0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60017AC")]
			[Address(RVA = "0xE92FA0", Offset = "0xE92FA0", VA = "0xE92FA0")]
			[DebuggerHidden]
			public <SendEventAfterDelay>d__18(int <>1__state)
			{
			}

			[Token(Token = "0x60017AD")]
			[Address(RVA = "0xE93850", Offset = "0xE93850", VA = "0xE93850", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60017AE")]
			[Address(RVA = "0xE93854", Offset = "0xE93854", VA = "0xE93854", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60017B0")]
			[Address(RVA = "0xE93960", Offset = "0xE93960", VA = "0xE93960", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20003FC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x973524", Offset = "0x973524")]
		private sealed class <AnimateCrystal>d__19 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001771")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001772")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001773")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public HomelandAltar <>4__this;

			[Token(Token = "0x4001774")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <duration>5__2;

			[Token(Token = "0x4001775")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float <timeElapsed>5__3;

			[Token(Token = "0x4001776")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <startRotY>5__4;

			[Token(Token = "0x4001777")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private Vector3 <startPos>5__5;

			[Token(Token = "0x4001778")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private float <distanceY>5__6;

			[Token(Token = "0x17000262")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60017B5")]
				[Address(RVA = "0xE937E0", Offset = "0xE937E0", VA = "0xE937E0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000263")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60017B7")]
				[Address(RVA = "0xE93848", Offset = "0xE93848", VA = "0xE93848", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60017B2")]
			[Address(RVA = "0xE92FCC", Offset = "0xE92FCC", VA = "0xE92FCC")]
			[DebuggerHidden]
			public <AnimateCrystal>d__19(int <>1__state)
			{
			}

			[Token(Token = "0x60017B3")]
			[Address(RVA = "0xE93504", Offset = "0xE93504", VA = "0xE93504", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60017B4")]
			[Address(RVA = "0xE93508", Offset = "0xE93508", VA = "0xE93508", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60017B6")]
			[Address(RVA = "0xE937E8", Offset = "0xE937E8", VA = "0xE937E8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20003FD")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x973534", Offset = "0x973534")]
		private sealed class <AnimateAltarGlow>d__21 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001779")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400177A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400177B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public HomelandAltar <>4__this;

			[Token(Token = "0x400177C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <timeElapsed>5__2;

			[Token(Token = "0x400177D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float <dir>5__3;

			[Token(Token = "0x17000264")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60017BB")]
				[Address(RVA = "0xE93494", Offset = "0xE93494", VA = "0xE93494", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000265")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60017BD")]
				[Address(RVA = "0xE934FC", Offset = "0xE934FC", VA = "0xE934FC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60017B8")]
			[Address(RVA = "0xE930CC", Offset = "0xE930CC", VA = "0xE930CC")]
			[DebuggerHidden]
			public <AnimateAltarGlow>d__21(int <>1__state)
			{
			}

			[Token(Token = "0x60017B9")]
			[Address(RVA = "0xE931BC", Offset = "0xE931BC", VA = "0xE931BC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60017BA")]
			[Address(RVA = "0xE931C0", Offset = "0xE931C0", VA = "0xE931C0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60017BC")]
			[Address(RVA = "0xE9349C", Offset = "0xE9349C", VA = "0xE9349C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001762")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GemAltarSlot[] m_gemSlots;

		[Token(Token = "0x4001763")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private PlatformGlow[] m_altarGlowSlots;

		[Token(Token = "0x4001764")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Transform m_gemToAnimate;

		[Token(Token = "0x4001765")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private SendQuestEvent m_sendOnCompletion;

		[Token(Token = "0x4001766")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private float m_delayBeforeSecondLaser;

		[Token(Token = "0x4001767")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private SendQuestEvent m_sendAfterDelay;

		[Token(Token = "0x4001768")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private GameObject[] m_fires;

		[Token(Token = "0x4001769")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private float m_altarGlowPulseDuration;

		[Token(Token = "0x400176A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private ParticleSystem m_altarGlowParticles;

		[Token(Token = "0x400176B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private NeatAudioPlayer m_audioPlayer;

		[Token(Token = "0x400176C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private int m_crystalsPlaced;

		[Token(Token = "0x400176D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Coroutine m_altarGlowRoutine;

		[Token(Token = "0x60017A1")]
		[Address(RVA = "0xE92940", Offset = "0xE92940", VA = "0xE92940")]
		private void Awake()
		{
		}

		[Token(Token = "0x60017A2")]
		[Address(RVA = "0xE92AE8", Offset = "0xE92AE8", VA = "0xE92AE8")]
		private void OnSlotInitialized(int slotIndex, bool hasCrystal)
		{
		}

		[Token(Token = "0x60017A3")]
		[Address(RVA = "0xE92E70", Offset = "0xE92E70", VA = "0xE92E70")]
		private void OnStartCrystalPlacement(int slotIndex)
		{
		}

		[Token(Token = "0x60017A4")]
		[Address(RVA = "0xE92E74", Offset = "0xE92E74", VA = "0xE92E74")]
		private void OnFinishedCrystalPlacement(int slotIndex)
		{
		}

		[Token(Token = "0x60017A5")]
		[Address(RVA = "0xE92B24", Offset = "0xE92B24", VA = "0xE92B24")]
		private void LightUpAltarSlot(int index)
		{
		}

		[Token(Token = "0x60017A6")]
		[Address(RVA = "0xE92C6C", Offset = "0xE92C6C", VA = "0xE92C6C")]
		private void CheckPuzzleCompletion(bool checkFromSaveState = false)
		{
		}

		[Token(Token = "0x60017A7")]
		[Address(RVA = "0xE92F24", Offset = "0xE92F24", VA = "0xE92F24")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x98F1AC", Offset = "0x98F1AC")]
		private IEnumerator SendEventAfterDelay()
		{
			return null;
		}

		[Token(Token = "0x60017A8")]
		[Address(RVA = "0xE92EA8", Offset = "0xE92EA8", VA = "0xE92EA8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x98F210", Offset = "0x98F210")]
		private IEnumerator AnimateCrystal()
		{
			return null;
		}

		[Token(Token = "0x60017A9")]
		[Address(RVA = "0xE92FF8", Offset = "0xE92FF8", VA = "0xE92FF8")]
		public void StartAltarGlow()
		{
		}

		[Token(Token = "0x60017AA")]
		[Address(RVA = "0xE93050", Offset = "0xE93050", VA = "0xE93050")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x98F274", Offset = "0x98F274")]
		private IEnumerator AnimateAltarGlow()
		{
			return null;
		}

		[Token(Token = "0x60017AB")]
		[Address(RVA = "0xE930F8", Offset = "0xE930F8", VA = "0xE930F8")]
		public HomelandAltar()
		{
		}
	}
}
namespace NeatCorp.Puzzles.Resonation
{
	[Token(Token = "0x20003FE")]
	public struct EmissiveResonationMaterialData
	{
		[Token(Token = "0x400177E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x97C6D0", Offset = "0x97C6D0")]
		private Coroutine <PlatformMaterialAnimationRoutine>k__BackingField;

		[Token(Token = "0x400177F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x97C6E0", Offset = "0x97C6E0")]
		private float <CurrentMinVal>k__BackingField;

		[Token(Token = "0x4001780")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x97C6F0", Offset = "0x97C6F0")]
		private float <CurrentMaxVal>k__BackingField;

		[Token(Token = "0x4001781")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x97C700", Offset = "0x97C700")]
		private EmissiveResonationMaterialState <State>k__BackingField;

		[Token(Token = "0x17000266")]
		public Coroutine PlatformMaterialAnimationRoutine
		{
			[Token(Token = "0x60017BE")]
			[Address(RVA = "0xA47D54", Offset = "0xA47D54", VA = "0xA47D54")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x98F3C8", Offset = "0x98F3C8")]
			get
			{
				return null;
			}
			[Token(Token = "0x60017BF")]
			[Address(RVA = "0xA47D5C", Offset = "0xA47D5C", VA = "0xA47D5C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x98F3D8", Offset = "0x98F3D8")]
			set
			{
			}
		}

		[Token(Token = "0x17000267")]
		public float CurrentMinVal
		{
			[Token(Token = "0x60017C0")]
			[Address(RVA = "0xA47D64", Offset = "0xA47D64", VA = "0xA47D64")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x98F3E8", Offset = "0x98F3E8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60017C1")]
			[Address(RVA = "0xA47D6C", Offset = "0xA47D6C", VA = "0xA47D6C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x98F3F8", Offset = "0x98F3F8")]
			set
			{
			}
		}

		[Token(Token = "0x17000268")]
		public float CurrentMaxVal
		{
			[Token(Token = "0x60017C2")]
			[Address(RVA = "0xA47D74", Offset = "0xA47D74", VA = "0xA47D74")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x98F408", Offset = "0x98F408")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60017C3")]
			[Address(RVA = "0xA47D7C", Offset = "0xA47D7C", VA = "0xA47D7C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x98F418", Offset = "0x98F418")]
			set
			{
			}
		}

		[Token(Token = "0x17000269")]
		public EmissiveResonationMaterialState State
		{
			[Token(Token = "0x60017C4")]
			[Address(RVA = "0xA47D84", Offset = "0xA47D84", VA = "0xA47D84")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x98F428", Offset = "0x98F428")]
			get
			{
				return default(EmissiveResonationMaterialState);
			}
			[Token(Token = "0x60017C5")]
			[Address(RVA = "0xA47D8C", Offset = "0xA47D8C", VA = "0xA47D8C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x98F438", Offset = "0x98F438")]
			set
			{
			}
		}
	}
	[Token(Token = "0x20003FF")]
	public enum EmissiveResonationMaterialState
	{
		[Token(Token = "0x4001783")]
		Unlit,
		[Token(Token = "0x4001784")]
		LightingUp,
		[Token(Token = "0x4001785")]
		Lit,
		[Token(Token = "0x4001786")]
		ShuttingDown
	}
	[Token(Token = "0x2000400")]
	public class GodAnimation : MonoBehaviour
	{
		[Token(Token = "0x4001787")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private ResonationPuzzle m_resonationPuzzle;

		[Token(Token = "0x4001788")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private SphereCollider m_godReactionToPlayerCollider;

		[Token(Token = "0x4001789")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private NeatAudioPlayer audioPlayer;

		[Token(Token = "0x400178A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private NeatAudioCue reactToPlayerCue;

		[Token(Token = "0x400178B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private NeatAudioCue waveCue;

		[Token(Token = "0x400178C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private NeatAudioCue summonFlowerCue;

		[Token(Token = "0x60017C6")]
		[Address(RVA = "0xE93A08", Offset = "0xE93A08", VA = "0xE93A08")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x60017C7")]
		[Address(RVA = "0xE93B38", Offset = "0xE93B38", VA = "0xE93B38")]
		public void EnablePlayerInteraction()
		{
		}

		[Token(Token = "0x60017C8")]
		[Address(RVA = "0xE93B58", Offset = "0xE93B58", VA = "0xE93B58")]
		public void SummonFlower()
		{
		}

		[Token(Token = "0x60017C9")]
		[Address(RVA = "0xE93B90", Offset = "0xE93B90", VA = "0xE93B90")]
		public void RaiseArms()
		{
		}

		[Token(Token = "0x60017CA")]
		[Address(RVA = "0xE93C64", Offset = "0xE93C64", VA = "0xE93C64")]
		public void Wave()
		{
		}

		[Token(Token = "0x60017CB")]
		[Address(RVA = "0xE93D38", Offset = "0xE93D38", VA = "0xE93D38")]
		public void ReactToPlayer()
		{
		}

		[Token(Token = "0x60017CC")]
		[Address(RVA = "0xE93E0C", Offset = "0xE93E0C", VA = "0xE93E0C")]
		public void TriggerSoilModifiers()
		{
		}

		[Token(Token = "0x60017CD")]
		[Address(RVA = "0xE93E94", Offset = "0xE93E94", VA = "0xE93E94")]
		public void SpawnGrabbableCrystal()
		{
		}

		[Token(Token = "0x60017CE")]
		[Address(RVA = "0xE93F1C", Offset = "0xE93F1C", VA = "0xE93F1C")]
		public void DisableGod()
		{
		}

		[Token(Token = "0x60017CF")]
		[Address(RVA = "0xE93F44", Offset = "0xE93F44", VA = "0xE93F44")]
		public GodAnimation()
		{
		}
	}
	[Token(Token = "0x2000401")]
	public class LaserSocket : MonoBehaviour
	{
		[Token(Token = "0x400178D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject m_emissiveCrystal;

		[Token(Token = "0x400178E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GameObject m_beamConnectedParticle;

		[Token(Token = "0x60017D0")]
		[Address(RVA = "0xE93F4C", Offset = "0xE93F4C", VA = "0xE93F4C")]
		public void SetSolved(bool shouldBeSolved, bool showParticle)
		{
		}

		[Token(Token = "0x60017D1")]
		[Address(RVA = "0xE93F94", Offset = "0xE93F94", VA = "0xE93F94")]
		public void StopEffect()
		{
		}

		[Token(Token = "0x60017D2")]
		[Address(RVA = "0xE94004", Offset = "0xE94004", VA = "0xE94004")]
		public LaserSocket()
		{
		}
	}
	[Token(Token = "0x2000402")]
	public class ResonanceSystem : MonoBehaviour
	{
		[Token(Token = "0x400178F")]
		private const int PentatonicNotesNum = 5;

		[Token(Token = "0x4001790")]
		private const int MaxVerticalResolution = 10;

		[Token(Token = "0x4001791")]
		private const int MaxHorizontalResolution = 5;

		[Token(Token = "0x4001792")]
		private const float SnapDistance = 0.25f;

		[Token(Token = "0x4001793")]
		private const float PentatonicNotePitchStep = 0.0016666667f;

		[Token(Token = "0x4001794")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x97C790", Offset = "0x97C790")]
		[SerializeField]
		private float m_radius;

		[Token(Token = "0x4001795")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x97C7D0", Offset = "0x97C7D0")]
		[SerializeField]
		private int m_verticalResolution;

		[Token(Token = "0x4001796")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x97C810", Offset = "0x97C810")]
		[SerializeField]
		private int m_horizontalResolution;

		[Token(Token = "0x4001797")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private float m_verticalThreshold;

		[Token(Token = "0x4001798")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Vector2 m_current2DResonation;

		[Token(Token = "0x4001799")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private float m_crystalHeight;

		[Token(Token = "0x400179A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[SerializeField]
		private float m_updateInterval;

		[Token(Token = "0x400179B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Transform[] m_pedestalSockets;

		[Token(Token = "0x400179C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Transform m_facingTarget;

		[Token(Token = "0x400179D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float m_updateDuration;

		[Token(Token = "0x400179E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private bool m_isHoldingPedestal;

		[Token(Token = "0x400179F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private OptimizedCollection<CrystalPedestal> m_heldPedestals;

		[Token(Token = "0x40017A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private int m_callbackIndex;

		[Token(Token = "0x40017A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Action<int, Vector3, TwoDimensionalResonance> m_pitchChangeCallback;

		[Token(Token = "0x40017A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Action<int> m_resonanceSystemEmptyCallback;

		[Token(Token = "0x40017A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private List<ResonatorSystemPosition> m_harmonizedResonatorPositions;

		[Token(Token = "0x40017A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private float m_sqrRadius;

		[Token(Token = "0x40017A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x97C8B0", Offset = "0x97C8B0")]
		private Vector3 <FacingDirection>k__BackingField;

		[Token(Token = "0x1700026A")]
		public float Radius
		{
			[Token(Token = "0x60017D3")]
			[Address(RVA = "0xE9400C", Offset = "0xE9400C", VA = "0xE9400C")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700026B")]
		public Vector3 CrystalPosition
		{
			[Token(Token = "0x60017D4")]
			[Address(RVA = "0xE94014", Offset = "0xE94014", VA = "0xE94014")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x1700026C")]
		private Vector3 FacingDirection
		{
			[Token(Token = "0x60017D5")]
			[Address(RVA = "0xE940C0", Offset = "0xE940C0", VA = "0xE940C0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x98F448", Offset = "0x98F448")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x60017D6")]
			[Address(RVA = "0xE940CC", Offset = "0xE940CC", VA = "0xE940CC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x98F458", Offset = "0x98F458")]
			set
			{
			}
		}

		[Token(Token = "0x60017D7")]
		[Address(RVA = "0xE940D8", Offset = "0xE940D8", VA = "0xE940D8")]
		private void Awake()
		{
		}

		[Token(Token = "0x60017D8")]
		[Address(RVA = "0xE94214", Offset = "0xE94214", VA = "0xE94214")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60017D9")]
		[Address(RVA = "0xE9443C", Offset = "0xE9443C", VA = "0xE9443C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60017DA")]
		[Address(RVA = "0xE94664", Offset = "0xE94664", VA = "0xE94664")]
		private void Update()
		{
		}

		[Token(Token = "0x60017DB")]
		[Address(RVA = "0xE946B4", Offset = "0xE946B4", VA = "0xE946B4")]
		private void UpdateSnapping()
		{
		}

		[Token(Token = "0x60017DC")]
		[Address(RVA = "0xE94B1C", Offset = "0xE94B1C", VA = "0xE94B1C")]
		private void UpdateSystemPositions()
		{
		}

		[Token(Token = "0x60017DD")]
		[Address(RVA = "0xE95128", Offset = "0xE95128", VA = "0xE95128")]
		public void RegisterPitchChangeCallback(int callbackIndex, Action<int, Vector3, TwoDimensionalResonance> pollAction, Action<int> stopAction)
		{
		}

		[Token(Token = "0x60017DE")]
		[Address(RVA = "0xE95164", Offset = "0xE95164", VA = "0xE95164")]
		private void UpdateResonation(InstrumentResonator resonator)
		{
		}

		[Token(Token = "0x60017DF")]
		[Address(RVA = "0xE95380", Offset = "0xE95380", VA = "0xE95380")]
		private void TryRemoveResonator(InstrumentResonator resonator)
		{
		}

		[Token(Token = "0x60017E0")]
		[Address(RVA = "0xE94754", Offset = "0xE94754", VA = "0xE94754")]
		private void TrySnapToSocket(CrystalPedestal pedestal)
		{
		}

		[Token(Token = "0x60017E1")]
		[Address(RVA = "0xE95638", Offset = "0xE95638", VA = "0xE95638")]
		private void OnPedestalDropped(PedestalDroppedEvent e)
		{
		}

		[Token(Token = "0x60017E2")]
		[Address(RVA = "0xE957AC", Offset = "0xE957AC", VA = "0xE957AC")]
		private void OnPedestalGrabbed(PedestalGrabbedEvent e)
		{
		}

		[Token(Token = "0x60017E3")]
		[Address(RVA = "0xE95918", Offset = "0xE95918", VA = "0xE95918")]
		private void AddHeldPedestal(CrystalPedestal pedestal)
		{
		}

		[Token(Token = "0x60017E4")]
		[Address(RVA = "0xE95738", Offset = "0xE95738", VA = "0xE95738")]
		private void RemoveHeldPedestal(CrystalPedestal pedestal)
		{
		}

		[Token(Token = "0x60017E5")]
		[Address(RVA = "0xE95990", Offset = "0xE95990", VA = "0xE95990")]
		private void OnPedestalStashed(PedestalStashedEvent e)
		{
		}

		[Token(Token = "0x60017E6")]
		[Address(RVA = "0xE95AE8", Offset = "0xE95AE8", VA = "0xE95AE8")]
		private void OnPedestalResonated(ResonatedEvent e)
		{
		}

		[Token(Token = "0x60017E7")]
		[Address(RVA = "0xE95BD4", Offset = "0xE95BD4", VA = "0xE95BD4")]
		private void OnPedestalDeresonated(DeresonatedEvent e)
		{
		}

		[Token(Token = "0x60017E8")]
		[Address(RVA = "0xE95460", Offset = "0xE95460", VA = "0xE95460")]
		private bool TryGetSystemPositionFromResonator(InstrumentResonator resonator, out ResonatorSystemPosition systemPosition)
		{
			return default(bool);
		}

		[Token(Token = "0x60017E9")]
		[Address(RVA = "0xE94C98", Offset = "0xE94C98", VA = "0xE94C98")]
		private bool UpdateResonatorPosition(ResonatorSystemPosition systemPosition)
		{
			return default(bool);
		}

		[Token(Token = "0x60017EA")]
		[Address(RVA = "0xE94E84", Offset = "0xE94E84", VA = "0xE94E84")]
		private void InvokeSystemCallback(ResonatorSystemPosition systemPosition, bool doProximityCheck)
		{
		}

		[Token(Token = "0x60017EB")]
		[Address(RVA = "0xE95F5C", Offset = "0xE95F5C", VA = "0xE95F5C")]
		public void SetNearestResonatorPitch(float pitch)
		{
		}

		[Token(Token = "0x60017EC")]
		[Address(RVA = "0xE955D4", Offset = "0xE955D4", VA = "0xE955D4")]
		private void InvokeResonanceSystemEmpty()
		{
		}

		[Token(Token = "0x60017ED")]
		[Address(RVA = "0xE94CA0", Offset = "0xE94CA0", VA = "0xE94CA0")]
		private bool TryGetClosestPositionInCollection(ResonatorSystemPosition[] positions, out ResonatorSystemPosition closestPosition)
		{
			return default(bool);
		}

		[Token(Token = "0x60017EE")]
		[Address(RVA = "0xE95FAC", Offset = "0xE95FAC", VA = "0xE95FAC")]
		private bool TryGetClosestHarmonizedResonatorPosition(out ResonatorSystemPosition closestPosition)
		{
			return default(bool);
		}

		[Token(Token = "0x60017EF")]
		[Address(RVA = "0xE95DA4", Offset = "0xE95DA4", VA = "0xE95DA4")]
		private bool IsClosest(ResonatorSystemPosition resonatorSystemPosition)
		{
			return default(bool);
		}

		[Token(Token = "0x60017F0")]
		[Address(RVA = "0xE96020", Offset = "0xE96020", VA = "0xE96020")]
		private float GetPitchOffsetFromPlacement(Vector3 position)
		{
			return default(float);
		}

		[Token(Token = "0x60017F1")]
		[Address(RVA = "0xE962BC", Offset = "0xE962BC", VA = "0xE962BC")]
		public ResonanceSystem()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000403")]
	public struct ResonanceSystemData
	{
		[Token(Token = "0x40017A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ResonanceSystem ResonanceSystem;

		[Token(Token = "0x40017A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public TwoDimensionalResonance Resonance2d;

		[Token(Token = "0x40017A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x97C8C0", Offset = "0x97C8C0")]
		private float <DistanceToCrystal>k__BackingField;
	}
	[Token(Token = "0x2000404")]
	public class ResonationPuzzle : SaveableComponent, IInitializable
	{
		[Token(Token = "0x2000405")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x973544", Offset = "0x973544")]
		private sealed class <MaterialPropertyAnimation>d__75 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40017D5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40017D6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40017D7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ResonationPuzzle <>4__this;

			[Token(Token = "0x40017D8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float startMinProperty;

			[Token(Token = "0x40017D9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public float startMaxProperty;

			[Token(Token = "0x40017DA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public float target;

			[Token(Token = "0x40017DB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			public int rendererIndex;

			[Token(Token = "0x40017DC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public bool updateEmissiveResonationMaterialData;

			[Token(Token = "0x40017DD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private float <firstProperty>5__2;

			[Token(Token = "0x40017DE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private float <secondProperty>5__3;

			[Token(Token = "0x40017DF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			private int <firstPropertyId>5__4;

			[Token(Token = "0x40017E0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private int <secondPropertyId>5__5;

			[Token(Token = "0x40017E1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
			private float <change>5__6;

			[Token(Token = "0x40017E2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private int <i>5__7;

			[Token(Token = "0x1700026D")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001824")]
				[Address(RVA = "0xE99434", Offset = "0xE99434", VA = "0xE99434", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700026E")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001826")]
				[Address(RVA = "0xE9949C", Offset = "0xE9949C", VA = "0xE9949C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001821")]
			[Address(RVA = "0xE98950", Offset = "0xE98950", VA = "0xE98950")]
			[DebuggerHidden]
			public <MaterialPropertyAnimation>d__75(int <>1__state)
			{
			}

			[Token(Token = "0x6001822")]
			[Address(RVA = "0xE9907C", Offset = "0xE9907C", VA = "0xE9907C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001823")]
			[Address(RVA = "0xE99080", Offset = "0xE99080", VA = "0xE99080", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001825")]
			[Address(RVA = "0xE9943C", Offset = "0xE9943C", VA = "0xE9943C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000406")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x973554", Offset = "0x973554")]
		private sealed class <MaterialPropertyAnimation>d__76 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40017E3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40017E4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40017E5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ResonationPuzzle <>4__this;

			[Token(Token = "0x40017E6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public int rendererIndex;

			[Token(Token = "0x40017E7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public float target;

			[Token(Token = "0x1700026F")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600182A")]
				[Address(RVA = "0xE9954C", Offset = "0xE9954C", VA = "0xE9954C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000270")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600182C")]
				[Address(RVA = "0xE995B4", Offset = "0xE995B4", VA = "0xE995B4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001827")]
			[Address(RVA = "0xE9897C", Offset = "0xE9897C", VA = "0xE9897C")]
			[DebuggerHidden]
			public <MaterialPropertyAnimation>d__76(int <>1__state)
			{
			}

			[Token(Token = "0x6001828")]
			[Address(RVA = "0xE994A4", Offset = "0xE994A4", VA = "0xE994A4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001829")]
			[Address(RVA = "0xE994A8", Offset = "0xE994A8", VA = "0xE994A8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600182B")]
			[Address(RVA = "0xE99554", Offset = "0xE99554", VA = "0xE99554", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000407")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x973564", Offset = "0x973564")]
		private sealed class <StatueAnimationRoutine>d__77 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40017E8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40017E9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40017EA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ResonationPuzzle <>4__this;

			[Token(Token = "0x17000271")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001830")]
				[Address(RVA = "0xE997CC", Offset = "0xE997CC", VA = "0xE997CC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000272")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001832")]
				[Address(RVA = "0xE99834", Offset = "0xE99834", VA = "0xE99834", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600182D")]
			[Address(RVA = "0xE989A8", Offset = "0xE989A8", VA = "0xE989A8")]
			[DebuggerHidden]
			public <StatueAnimationRoutine>d__77(int <>1__state)
			{
			}

			[Token(Token = "0x600182E")]
			[Address(RVA = "0xE995BC", Offset = "0xE995BC", VA = "0xE995BC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600182F")]
			[Address(RVA = "0xE995C0", Offset = "0xE995C0", VA = "0xE995C0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001831")]
			[Address(RVA = "0xE997D4", Offset = "0xE997D4", VA = "0xE997D4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000408")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x973574", Offset = "0x973574")]
		private sealed class <FadeByDistance>d__86 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40017EB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40017EC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40017ED")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ResonationPuzzle <>4__this;

			[Token(Token = "0x40017EE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <startVol>5__2;

			[Token(Token = "0x17000273")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001836")]
				[Address(RVA = "0xE9900C", Offset = "0xE9900C", VA = "0xE9900C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000274")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001838")]
				[Address(RVA = "0xE99074", Offset = "0xE99074", VA = "0xE99074", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001833")]
			[Address(RVA = "0xE98A8C", Offset = "0xE98A8C", VA = "0xE98A8C")]
			[DebuggerHidden]
			public <FadeByDistance>d__86(int <>1__state)
			{
			}

			[Token(Token = "0x6001834")]
			[Address(RVA = "0xE98D98", Offset = "0xE98D98", VA = "0xE98D98", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001835")]
			[Address(RVA = "0xE98D9C", Offset = "0xE98D9C", VA = "0xE98D9C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001837")]
			[Address(RVA = "0xE99014", Offset = "0xE99014", VA = "0xE99014", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40017A9")]
		private const int DefaultSystemsNum = 3;

		[Token(Token = "0x40017AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly int rayLengthId;

		[Token(Token = "0x40017AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private static readonly int correctnessId;

		[Token(Token = "0x40017AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static readonly int minId;

		[Token(Token = "0x40017AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private static readonly int maxId;

		[Token(Token = "0x40017AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static readonly int LookingAroundLoopId;

		[Token(Token = "0x40017AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private ResonanceSystemData[] m_resonanceSystemData;

		[Token(Token = "0x40017B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x97C8E0", Offset = "0x97C8E0")]
		[SerializeField]
		private int m_tempoResolution;

		[Token(Token = "0x40017B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private LaserSocket[] m_laserSockets;

		[Token(Token = "0x40017B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x97C930", Offset = "0x97C930")]
		[SerializeField]
		private AnimationCurve m_rayLengthCurve;

		[Token(Token = "0x40017B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private GameObject m_rayCylinderPrefab;

		[Token(Token = "0x40017B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private ParticleSystem m_statueTransformationParticles;

		[Token(Token = "0x40017B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x97C99C", Offset = "0x97C99C")]
		[SerializeField]
		private AudioSource godTransformSound;

		[Token(Token = "0x40017B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private AudioMusicalPitch[] m_godSounds;

		[Token(Token = "0x40017B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private AudioMusicalPitch[] m_platformSounds;

		[Token(Token = "0x40017B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private NeatAudioPlayer[] m_solveSounds;

		[Token(Token = "0x40017B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private AudioSource finishedMusicPlayer;

		[Token(Token = "0x40017BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private NeatAudioPlayer finishedChoirHarp;

		[Token(Token = "0x40017BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private NeatAudioPlayer solveSound;

		[Token(Token = "0x40017BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private AudioSource m_poolSound;

		[Token(Token = "0x40017BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x97CA58", Offset = "0x97CA58")]
		[SerializeField]
		private GameObject m_godStatueObject;

		[Token(Token = "0x40017BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		private GameObject m_godObject;

		[Token(Token = "0x40017BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[SerializeField]
		private Animator m_godAnimator;

		[Token(Token = "0x40017C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[SerializeField]
		private Animator m_statueAnimator;

		[Token(Token = "0x40017C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[SerializeField]
		private GameObject m_flowerObject;

		[Token(Token = "0x40017C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[SerializeField]
		private GodFlower m_godFlower;

		[Token(Token = "0x40017C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[SerializeField]
		private Renderer[] m_platformRenderers;

		[Token(Token = "0x40017C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private Transform[] m_beamCylinders;

		[Token(Token = "0x40017C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private OptimizedCollection<int> m_correctSystems;

		[Token(Token = "0x40017C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private int[] m_godPitches;

		[Token(Token = "0x40017C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private int[] m_systemPitches;

		[Token(Token = "0x40017C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private float[] m_systemTempos;

		[Token(Token = "0x40017C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		private float m_horizontalStep;

		[Token(Token = "0x40017CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
		private bool m_isRegistered;

		[Token(Token = "0x40017CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x105")]
		private bool m_isSolved;

		[Token(Token = "0x40017CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x106")]
		private bool m_firstSolveSound;

		[Token(Token = "0x40017CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		private MaterialPropertyBlock[] m_beamMaterialPropertyBlocks;

		[Token(Token = "0x40017CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		private Renderer[] m_beamRenderers;

		[Token(Token = "0x40017CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		private MaterialPropertyBlock m_currentEmissiveMaterialPropertyBlock;

		[Token(Token = "0x40017D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		private bool m_initialized;

		[Token(Token = "0x40017D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		private ResonationPuzzleState m_currentState;

		[Token(Token = "0x40017D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		private YieldInstruction m_waitForOneThenth;

		[Token(Token = "0x40017D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		private Coroutine m_statueAnimationRoutine;

		[Token(Token = "0x40017D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		private EmissiveResonationMaterialData[] m_emissiveResonationMaterialData;

		[Token(Token = "0x60017F2")]
		[Address(RVA = "0xE963EC", Offset = "0xE963EC", VA = "0xE963EC")]
		private void Awake()
		{
		}

		[Token(Token = "0x60017F3")]
		[Address(RVA = "0xE96A04", Offset = "0xE96A04", VA = "0xE96A04")]
		private void Start()
		{
		}

		[Token(Token = "0x60017F4")]
		[Address(RVA = "0xE96AAC", Offset = "0xE96AAC", VA = "0xE96AAC")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60017F5")]
		[Address(RVA = "0xE96BAC", Offset = "0xE96BAC", VA = "0xE96BAC")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60017F6")]
		[Address(RVA = "0xE96E70", Offset = "0xE96E70", VA = "0xE96E70")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60017F7")]
		[Address(RVA = "0xE96E78", Offset = "0xE96E78", VA = "0xE96E78")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x60017F8")]
		[Address(RVA = "0xE96F44", Offset = "0xE96F44", VA = "0xE96F44")]
		private void OnTriggerExit(Collider other)
		{
		}

		[Token(Token = "0x60017F9")]
		[Address(RVA = "0xE96FD0", Offset = "0xE96FD0", VA = "0xE96FD0", Slot = "4")]
		public override ComponentState CreateState()
		{
			return null;
		}

		[Token(Token = "0x60017FA")]
		[Address(RVA = "0xE970FC", Offset = "0xE970FC", VA = "0xE970FC", Slot = "5")]
		public void Initialize()
		{
		}

		[Token(Token = "0x60017FB")]
		[Address(RVA = "0xE96AB4", Offset = "0xE96AB4", VA = "0xE96AB4")]
		private void SetEmmissivePlatformMaterial(float val)
		{
		}

		[Token(Token = "0x60017FC")]
		[Address(RVA = "0xE973E4", Offset = "0xE973E4", VA = "0xE973E4")]
		private void SetPropertyBlockForAll()
		{
		}

		[Token(Token = "0x60017FD")]
		[Address(RVA = "0xE9746C", Offset = "0xE9746C", VA = "0xE9746C")]
		private void SetPropertyBlockForRenderer(int rendererIndex)
		{
		}

		[Token(Token = "0x60017FE")]
		[Address(RVA = "0xE9721C", Offset = "0xE9721C", VA = "0xE9721C")]
		private void TryActivateFlower()
		{
		}

		[Token(Token = "0x60017FF")]
		[Address(RVA = "0xE972D0", Offset = "0xE972D0", VA = "0xE972D0")]
		private void ResolveSystemFromState()
		{
		}

		[Token(Token = "0x6001800")]
		[Address(RVA = "0xE96484", Offset = "0xE96484", VA = "0xE96484")]
		private void RoundSystemResonations()
		{
		}

		[Token(Token = "0x6001801")]
		[Address(RVA = "0xE96BC0", Offset = "0xE96BC0", VA = "0xE96BC0")]
		private void SetAudioActive(bool shouldBeActive)
		{
		}

		[Token(Token = "0x6001802")]
		[Address(RVA = "0xE9659C", Offset = "0xE9659C", VA = "0xE9659C")]
		private void RegisterWithResonationSystems()
		{
		}

		[Token(Token = "0x6001803")]
		[Address(RVA = "0xE966F4", Offset = "0xE966F4", VA = "0xE966F4")]
		private void CreateRayCylinders()
		{
		}

		[Token(Token = "0x6001804")]
		[Address(RVA = "0xE974BC", Offset = "0xE974BC", VA = "0xE974BC")]
		private float GetPitchOffset(int index, Vector3 pos, TwoDimensionalResonance resonance)
		{
			return default(float);
		}

		[Token(Token = "0x6001805")]
		[Address(RVA = "0xE97CA4", Offset = "0xE97CA4", VA = "0xE97CA4")]
		public void SetRayOrigin(int index, Vector3 origin)
		{
		}

		[Token(Token = "0x6001806")]
		[Address(RVA = "0xE97CE8", Offset = "0xE97CE8", VA = "0xE97CE8")]
		private void StopResonanceSystem(int index)
		{
		}

		[Token(Token = "0x6001807")]
		[Address(RVA = "0xE97730", Offset = "0xE97730", VA = "0xE97730")]
		private void SetRayCylinderProperties(int index, Vector3 pos, float correctness)
		{
		}

		[Token(Token = "0x6001808")]
		[Address(RVA = "0xE97DC4", Offset = "0xE97DC4", VA = "0xE97DC4")]
		private void CheckPuzzleCombinationFromAudioEvent(int index, bool setInactive = false)
		{
		}

		[Token(Token = "0x6001809")]
		[Address(RVA = "0xE97A94", Offset = "0xE97A94", VA = "0xE97A94")]
		private void CheckPuzzleCombination(int index, float correctness, bool setInactive = false)
		{
		}

		[Token(Token = "0x600180A")]
		[Address(RVA = "0xE98060", Offset = "0xE98060", VA = "0xE98060")]
		private void StartPlatformMaterialAnimationRoutine(int index, float target)
		{
		}

		[Token(Token = "0x600180B")]
		[Address(RVA = "0xE98550", Offset = "0xE98550", VA = "0xE98550")]
		public void RouteNoteOn(ReactionalTimeline timeline, double beat, int sink, int output, int instrument, int voice, float pitch, float velocity)
		{
		}

		[Token(Token = "0x600180C")]
		[Address(RVA = "0xE982BC", Offset = "0xE982BC", VA = "0xE982BC")]
		public void PlaySolveSound()
		{
		}

		[Token(Token = "0x600180D")]
		[Address(RVA = "0xE9811C", Offset = "0xE9811C", VA = "0xE9811C")]
		public void PartSolveSound(int index)
		{
		}

		[Token(Token = "0x600180E")]
		[Address(RVA = "0xE979E4", Offset = "0xE979E4", VA = "0xE979E4")]
		public void UpdatePlatformSound(int platform, float x, float y, bool active)
		{
		}

		[Token(Token = "0x600180F")]
		[Address(RVA = "0xE97D68", Offset = "0xE97D68", VA = "0xE97D68")]
		public void StopPlatformSound(int platform)
		{
		}

		[Token(Token = "0x6001810")]
		[Address(RVA = "0xE98264", Offset = "0xE98264", VA = "0xE98264")]
		private void ShowSolvedAnimation()
		{
		}

		[Token(Token = "0x6001811")]
		[Address(RVA = "0xE98894", Offset = "0xE98894", VA = "0xE98894")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x98F468", Offset = "0x98F468")]
		private IEnumerator MaterialPropertyAnimation(float startMinProperty, float startMaxProperty, int rendererIndex, float target, bool updateEmissiveResonationMaterialData)
		{
			return null;
		}

		[Token(Token = "0x6001812")]
		[Address(RVA = "0xE984B4", Offset = "0xE984B4", VA = "0xE984B4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x98F4CC", Offset = "0x98F4CC")]
		private IEnumerator MaterialPropertyAnimation(int rendererIndex, float target)
		{
			return null;
		}

		[Token(Token = "0x6001813")]
		[Address(RVA = "0xE98818", Offset = "0xE98818", VA = "0xE98818")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x98F530", Offset = "0x98F530")]
		private IEnumerator StatueAnimationRoutine()
		{
			return null;
		}

		[Token(Token = "0x6001814")]
		[Address(RVA = "0xE989D4", Offset = "0xE989D4", VA = "0xE989D4")]
		private bool IsAllPlatformsLit()
		{
			return default(bool);
		}

		[Token(Token = "0x6001815")]
		[Address(RVA = "0xE98014", Offset = "0xE98014", VA = "0xE98014")]
		private bool HasPlatformStartedLightingUp(int index)
		{
			return default(bool);
		}

		[Token(Token = "0x6001816")]
		[Address(RVA = "0xE98210", Offset = "0xE98210", VA = "0xE98210")]
		private bool HasPlatformStartedShuttingDown(int index)
		{
			return default(bool);
		}

		[Token(Token = "0x6001817")]
		[Address(RVA = "0xE98A24", Offset = "0xE98A24", VA = "0xE98A24")]
		private bool IsPlatformFullyLit(int index)
		{
			return default(bool);
		}

		[Token(Token = "0x6001818")]
		[Address(RVA = "0xE98A6C", Offset = "0xE98A6C", VA = "0xE98A6C")]
		public void ShowGod()
		{
		}

		[Token(Token = "0x6001819")]
		[Address(RVA = "0xE971E0", Offset = "0xE971E0", VA = "0xE971E0")]
		public void HideStatue()
		{
		}

		[Token(Token = "0x600181A")]
		[Address(RVA = "0xE93A20", Offset = "0xE93A20", VA = "0xE93A20")]
		public void GodReactsToPlayer()
		{
		}

		[Token(Token = "0x600181B")]
		[Address(RVA = "0xE93B70", Offset = "0xE93B70", VA = "0xE93B70")]
		public void ShowFlower()
		{
		}

		[Token(Token = "0x600181C")]
		[Address(RVA = "0xE96A30", Offset = "0xE96A30", VA = "0xE96A30")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x98F594", Offset = "0x98F594")]
		private IEnumerator FadeByDistance()
		{
			return null;
		}

		[Token(Token = "0x600181D")]
		[Address(RVA = "0xE98AB8", Offset = "0xE98AB8", VA = "0xE98AB8")]
		public ResonationPuzzle()
		{
		}

		[Token(Token = "0x600181F")]
		[Address(RVA = "0xE98D90", Offset = "0xE98D90", VA = "0xE98D90")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x98F5F8", Offset = "0x98F5F8")]
		private void <RegisterWithResonationSystems>b__60_0(int index, Vector3 pos, TwoDimensionalResonance resonance)
		{
		}

		[Token(Token = "0x6001820")]
		[Address(RVA = "0xE98D94", Offset = "0xE98D94", VA = "0xE98D94")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x98F608", Offset = "0x98F608")]
		private void <RegisterWithResonationSystems>b__60_1(int index)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000409")]
	public class ResonationPuzzleState : ComponentState
	{
		[Token(Token = "0x40017EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int[] SolvedPlatformIndexes;

		[Token(Token = "0x17000275")]
		public bool IsSolved
		{
			[Token(Token = "0x6001839")]
			[Address(RVA = "0xE96F20", Offset = "0xE96F20", VA = "0xE96F20")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x600183A")]
		[Address(RVA = "0xE9704C", Offset = "0xE9704C", VA = "0xE9704C")]
		public ResonationPuzzleState(int[] solvedPlatformIndexes)
		{
		}
	}
	[Token(Token = "0x200040A")]
	public class ResonationTempleDoor : SaveableComponent, IInitializable
	{
		[Token(Token = "0x200040B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x973584", Offset = "0x973584")]
		private sealed class <OpeningRoutine>d__51 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400180F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001810")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001811")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ResonationTempleDoor <>4__this;

			[Token(Token = "0x4001812")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <min>5__2;

			[Token(Token = "0x4001813")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float <max>5__3;

			[Token(Token = "0x4001814")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private int <i>5__4;

			[Token(Token = "0x17000276")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001859")]
				[Address(RVA = "0xE9AB84", Offset = "0xE9AB84", VA = "0xE9AB84", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000277")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600185B")]
				[Address(RVA = "0xE9ABEC", Offset = "0xE9ABEC", VA = "0xE9ABEC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001856")]
			[Address(RVA = "0xE9A77C", Offset = "0xE9A77C", VA = "0xE9A77C")]
			[DebuggerHidden]
			public <OpeningRoutine>d__51(int <>1__state)
			{
			}

			[Token(Token = "0x6001857")]
			[Address(RVA = "0xE9A960", Offset = "0xE9A960", VA = "0xE9A960", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001858")]
			[Address(RVA = "0xE9A964", Offset = "0xE9A964", VA = "0xE9A964", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600185A")]
			[Address(RVA = "0xE9AB8C", Offset = "0xE9AB8C", VA = "0xE9AB8C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40017F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static float SlideDuration;

		[Token(Token = "0x40017F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private static readonly int rayLengthId;

		[Token(Token = "0x40017F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static readonly int correctnessId;

		[Token(Token = "0x40017F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private static readonly int minId;

		[Token(Token = "0x40017F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static readonly int maxId;

		[Token(Token = "0x40017F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x97CB04", Offset = "0x97CB04")]
		private ResonanceSystemData m_resonanceSystemData;

		[Token(Token = "0x40017F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x97CB50", Offset = "0x97CB50")]
		private LaserSocket m_laserSocket;

		[Token(Token = "0x40017F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private GameObject m_rayCylinderPrefab;

		[Token(Token = "0x40017F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private AnimationCurve m_rayLengthCurve;

		[Token(Token = "0x40017F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x97CBBC", Offset = "0x97CBBC")]
		private Transform m_leftDoorTransform;

		[Token(Token = "0x40017FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private Transform m_rightDoorTransform;

		[Token(Token = "0x40017FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private float m_doorSlideDistance;

		[Token(Token = "0x40017FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private GameObject m_blockingVolume;

		[Token(Token = "0x40017FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private Renderer[] m_platformRenderers;

		[Token(Token = "0x40017FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private NeatAudioPlayer audioPlayer;

		[Token(Token = "0x40017FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private NeatAudioPlayer socketAudioPlayer;

		[Token(Token = "0x4001800")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private NeatAudioCue doorsOpeningSound;

		[Token(Token = "0x4001801")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private YieldInstruction m_waitForOneThenth;

		[Token(Token = "0x4001802")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private MaterialPropertyBlock m_platformEmissiveMaterialPropertyBlock;

		[Token(Token = "0x4001803")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private Transform m_beamCylinder;

		[Token(Token = "0x4001804")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private MaterialPropertyBlock m_beamMaterialPropertyBlock;

		[Token(Token = "0x4001805")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private Renderer m_beamRenderer;

		[Token(Token = "0x4001806")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private ResonationTempleDoorState m_currentState;

		[Token(Token = "0x4001807")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private bool m_initialized;

		[Token(Token = "0x4001808")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC9")]
		private bool m_isOpen;

		[Token(Token = "0x4001809")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCA")]
		private bool m_isRegistered;

		[Token(Token = "0x400180A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private Coroutine m_doorAnimationRoutine;

		[Token(Token = "0x400180B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private Vector3 m_leftDoorClosedLocalPos;

		[Token(Token = "0x400180C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		private Vector3 m_rightDoorClosedLocalPos;

		[Token(Token = "0x400180D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private Vector3 m_leftDoorOpenLocalPos;

		[Token(Token = "0x400180E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
		private Vector3 m_rightDoorOpenLocalPos;

		[Token(Token = "0x600183B")]
		[Address(RVA = "0xE9983C", Offset = "0xE9983C", VA = "0xE9983C", Slot = "4")]
		public override ComponentState CreateState()
		{
			return null;
		}

		[Token(Token = "0x600183C")]
		[Address(RVA = "0xE998D4", Offset = "0xE998D4", VA = "0xE998D4")]
		private void Awake()
		{
		}

		[Token(Token = "0x600183D")]
		[Address(RVA = "0xE99CFC", Offset = "0xE99CFC", VA = "0xE99CFC", Slot = "5")]
		public void Initialize()
		{
		}

		[Token(Token = "0x600183E")]
		[Address(RVA = "0xE99B20", Offset = "0xE99B20", VA = "0xE99B20")]
		private void CreateRayCylinder()
		{
		}

		[Token(Token = "0x600183F")]
		[Address(RVA = "0xE99E00", Offset = "0xE99E00", VA = "0xE99E00")]
		private void SetEmmissivePlatformMaterial(float val)
		{
		}

		[Token(Token = "0x6001840")]
		[Address(RVA = "0xE99EF8", Offset = "0xE99EF8", VA = "0xE99EF8")]
		private void SetPropertyBlockForPlatforms()
		{
		}

		[Token(Token = "0x6001841")]
		[Address(RVA = "0xE99A30", Offset = "0xE99A30", VA = "0xE99A30")]
		private void RegisterWithResonationSystems()
		{
		}

		[Token(Token = "0x6001842")]
		[Address(RVA = "0xE99F80", Offset = "0xE99F80", VA = "0xE99F80")]
		private float GetPitchOffset(int index, Vector3 pos, TwoDimensionalResonance resonance)
		{
			return default(float);
		}

		[Token(Token = "0x6001843")]
		[Address(RVA = "0xE9A31C", Offset = "0xE9A31C", VA = "0xE9A31C")]
		private void UpdatePlatformSound()
		{
		}

		[Token(Token = "0x6001844")]
		[Address(RVA = "0xE9A320", Offset = "0xE9A320", VA = "0xE9A320")]
		private void StopSoundHere()
		{
		}

		[Token(Token = "0x6001845")]
		[Address(RVA = "0xE9A090", Offset = "0xE9A090", VA = "0xE9A090")]
		private void SetRayCylinderProperties(Vector3 pos, float correctness)
		{
		}

		[Token(Token = "0x6001846")]
		[Address(RVA = "0xE9A324", Offset = "0xE9A324", VA = "0xE9A324")]
		public void SetRayOrigin(int index, Vector3 origin)
		{
		}

		[Token(Token = "0x6001847")]
		[Address(RVA = "0xE9A340", Offset = "0xE9A340", VA = "0xE9A340")]
		private void StopResonanceSystem()
		{
		}

		[Token(Token = "0x6001848")]
		[Address(RVA = "0xE99DC8", Offset = "0xE99DC8", VA = "0xE99DC8")]
		private void SetDoorsOpen()
		{
		}

		[Token(Token = "0x6001849")]
		[Address(RVA = "0xE9A38C", Offset = "0xE9A38C", VA = "0xE9A38C")]
		private void SetBlockingVolume(bool shouldBeActive)
		{
		}

		[Token(Token = "0x600184A")]
		[Address(RVA = "0xE9A3AC", Offset = "0xE9A3AC", VA = "0xE9A3AC")]
		public void SetDoorsOpenPosition()
		{
		}

		[Token(Token = "0x600184B")]
		[Address(RVA = "0xE9A40C", Offset = "0xE9A40C", VA = "0xE9A40C")]
		public void AnimateDoorsOpening()
		{
		}

		[Token(Token = "0x600184C")]
		[Address(RVA = "0xE9A57C", Offset = "0xE9A57C", VA = "0xE9A57C")]
		private void AnimateDoorsClosing()
		{
		}

		[Token(Token = "0x600184D")]
		[Address(RVA = "0xE9A2C4", Offset = "0xE9A2C4", VA = "0xE9A2C4")]
		private void TryStartOpeningRoutine()
		{
		}

		[Token(Token = "0x600184E")]
		[Address(RVA = "0xE9A734", Offset = "0xE9A734", VA = "0xE9A734")]
		private void TryStartClosing()
		{
		}

		[Token(Token = "0x600184F")]
		[Address(RVA = "0xE9A6B8", Offset = "0xE9A6B8", VA = "0xE9A6B8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x98F758", Offset = "0x98F758")]
		private IEnumerator OpeningRoutine()
		{
			return null;
		}

		[Token(Token = "0x6001850")]
		[Address(RVA = "0xE9A7A8", Offset = "0xE9A7A8", VA = "0xE9A7A8")]
		private void OnOpeningAnimComplete()
		{
		}

		[Token(Token = "0x6001851")]
		[Address(RVA = "0xE9A7E0", Offset = "0xE9A7E0", VA = "0xE9A7E0")]
		private void OnClosingAnimComplete()
		{
		}

		[Token(Token = "0x6001852")]
		[Address(RVA = "0xE9A800", Offset = "0xE9A800", VA = "0xE9A800")]
		public ResonationTempleDoor()
		{
		}

		[Token(Token = "0x6001854")]
		[Address(RVA = "0xE9A958", Offset = "0xE9A958", VA = "0xE9A958")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x98F7BC", Offset = "0x98F7BC")]
		private void <RegisterWithResonationSystems>b__37_0(int index, Vector3 pos, TwoDimensionalResonance resonance)
		{
		}

		[Token(Token = "0x6001855")]
		[Address(RVA = "0xE9A95C", Offset = "0xE9A95C", VA = "0xE9A95C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x98F7CC", Offset = "0x98F7CC")]
		private void <RegisterWithResonationSystems>b__37_1(int index)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200040C")]
	public class ResonationTempleDoorState : ComponentState
	{
		[Token(Token = "0x4001815")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool IsOpen;

		[Token(Token = "0x600185C")]
		[Address(RVA = "0xE998A4", Offset = "0xE998A4", VA = "0xE998A4")]
		public ResonationTempleDoorState(bool isOpen)
		{
		}
	}
	[Token(Token = "0x200040D")]
	public struct ResonatorSystemPosition
	{
		[Token(Token = "0x4001816")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x97CC78", Offset = "0x97CC78")]
		private InstrumentResonator <Resonator>k__BackingField;

		[Token(Token = "0x4001817")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x97CC88", Offset = "0x97CC88")]
		private Vector3 <RegisteredPosition>k__BackingField;

		[Token(Token = "0x17000278")]
		public InstrumentResonator Resonator
		{
			[Token(Token = "0x600185D")]
			[Address(RVA = "0xA47E0C", Offset = "0xA47E0C", VA = "0xA47E0C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x98F82C", Offset = "0x98F82C")]
			get
			{
				return null;
			}
			[Token(Token = "0x600185E")]
			[Address(RVA = "0xA47E14", Offset = "0xA47E14", VA = "0xA47E14")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x98F83C", Offset = "0x98F83C")]
			private set
			{
			}
		}

		[Token(Token = "0x17000279")]
		public Vector3 RegisteredPosition
		{
			[Token(Token = "0x600185F")]
			[Address(RVA = "0xA47E1C", Offset = "0xA47E1C", VA = "0xA47E1C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x98F84C", Offset = "0x98F84C")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6001860")]
			[Address(RVA = "0xA47E28", Offset = "0xA47E28", VA = "0xA47E28")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x98F85C", Offset = "0x98F85C")]
			set
			{
			}
		}

		[Token(Token = "0x6001861")]
		[Address(RVA = "0xA47E34", Offset = "0xA47E34", VA = "0xA47E34")]
		public ResonatorSystemPosition(ref InstrumentResonator resonator)
		{
		}

		[Token(Token = "0x6001862")]
		[Address(RVA = "0xA47E3C", Offset = "0xA47E3C", VA = "0xA47E3C")]
		public bool HasPositionChangedSinceLastCheck()
		{
			return default(bool);
		}
	}
	[Token(Token = "0x200040E")]
	public class StatueAnimation : MonoBehaviour
	{
		[Token(Token = "0x4001818")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private ResonationPuzzle m_resonationPuzzle;

		[Token(Token = "0x6001863")]
		[Address(RVA = "0xE9AC1C", Offset = "0xE9AC1C", VA = "0xE9AC1C")]
		public void ShowGod()
		{
		}

		[Token(Token = "0x6001864")]
		[Address(RVA = "0xE9AC34", Offset = "0xE9AC34", VA = "0xE9AC34")]
		public void HideStatue()
		{
		}

		[Token(Token = "0x6001865")]
		[Address(RVA = "0xE9AC4C", Offset = "0xE9AC4C", VA = "0xE9AC4C")]
		public StatueAnimation()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200040F")]
	public struct TwoDimensionalResonance
	{
		[Token(Token = "0x4001819")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x97CCA8", Offset = "0x97CCA8")]
		public float X;

		[Token(Token = "0x400181A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x97CCC0", Offset = "0x97CCC0")]
		public float Y;

		[Token(Token = "0x1700027A")]
		public float Magnitude
		{
			[Token(Token = "0x6001867")]
			[Address(RVA = "0xA47E4C", Offset = "0xA47E4C", VA = "0xA47E4C")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6001866")]
		[Address(RVA = "0xA47E44", Offset = "0xA47E44", VA = "0xA47E44")]
		public TwoDimensionalResonance(float x, float y)
		{
		}

		[Token(Token = "0x6001868")]
		[Address(RVA = "0xE9768C", Offset = "0xE9768C", VA = "0xE9768C")]
		public static TwoDimensionalResonance operator -(TwoDimensionalResonance a, TwoDimensionalResonance b)
		{
			return default(TwoDimensionalResonance);
		}
	}
}
namespace NeatCorp.Puzzles.Coral
{
	[Token(Token = "0x2000410")]
	public class CoralAltar : MonoBehaviour
	{
		[Token(Token = "0x2000411")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x973594", Offset = "0x973594")]
		private sealed class <MaterialPropertyAnimation>d__34 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400182F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001830")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001831")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public CoralAltar <>4__this;

			[Token(Token = "0x4001832")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public int emissiveIndex;

			[Token(Token = "0x4001833")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public float target;

			[Token(Token = "0x1700027B")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600188A")]
				[Address(RVA = "0xE8D5D4", Offset = "0xE8D5D4", VA = "0xE8D5D4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700027C")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600188C")]
				[Address(RVA = "0xE8D63C", Offset = "0xE8D63C", VA = "0xE8D63C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001887")]
			[Address(RVA = "0xE8CF38", Offset = "0xE8CF38", VA = "0xE8CF38")]
			[DebuggerHidden]
			public <MaterialPropertyAnimation>d__34(int <>1__state)
			{
			}

			[Token(Token = "0x6001888")]
			[Address(RVA = "0xE8D52C", Offset = "0xE8D52C", VA = "0xE8D52C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001889")]
			[Address(RVA = "0xE8D530", Offset = "0xE8D530", VA = "0xE8D530", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600188B")]
			[Address(RVA = "0xE8D5DC", Offset = "0xE8D5DC", VA = "0xE8D5DC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000412")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9735A4", Offset = "0x9735A4")]
		private sealed class <MaterialPropertyAnimation>d__35 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001834")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001835")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001836")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public CoralAltar <>4__this;

			[Token(Token = "0x4001837")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float startMinProperty;

			[Token(Token = "0x4001838")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public float startMaxProperty;

			[Token(Token = "0x4001839")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public float target;

			[Token(Token = "0x400183A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			public int emissiveIndex;

			[Token(Token = "0x400183B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public bool updateEmissiveResonationMaterialData;

			[Token(Token = "0x400183C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private float <firstProperty>5__2;

			[Token(Token = "0x400183D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private float <secondProperty>5__3;

			[Token(Token = "0x400183E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			private int <firstPropertyId>5__4;

			[Token(Token = "0x400183F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private int <secondPropertyId>5__5;

			[Token(Token = "0x4001840")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
			private float <change>5__6;

			[Token(Token = "0x4001841")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private int <i>5__7;

			[Token(Token = "0x1700027D")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001890")]
				[Address(RVA = "0xE8D9FC", Offset = "0xE8D9FC", VA = "0xE8D9FC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700027E")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001892")]
				[Address(RVA = "0xE8DA64", Offset = "0xE8DA64", VA = "0xE8DA64", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600188D")]
			[Address(RVA = "0xE8D020", Offset = "0xE8D020", VA = "0xE8D020")]
			[DebuggerHidden]
			public <MaterialPropertyAnimation>d__35(int <>1__state)
			{
			}

			[Token(Token = "0x600188E")]
			[Address(RVA = "0xE8D644", Offset = "0xE8D644", VA = "0xE8D644", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600188F")]
			[Address(RVA = "0xE8D648", Offset = "0xE8D648", VA = "0xE8D648", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001891")]
			[Address(RVA = "0xE8DA04", Offset = "0xE8DA04", VA = "0xE8DA04", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000413")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9735B4", Offset = "0x9735B4")]
		private sealed class <StatueAnimationRoutine>d__36 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001842")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001843")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001844")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public CoralAltar <>4__this;

			[Token(Token = "0x1700027F")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001896")]
				[Address(RVA = "0xE8DBD8", Offset = "0xE8DBD8", VA = "0xE8DBD8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000280")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001898")]
				[Address(RVA = "0xE8DC40", Offset = "0xE8DC40", VA = "0xE8DC40", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001893")]
			[Address(RVA = "0xE8D04C", Offset = "0xE8D04C", VA = "0xE8D04C")]
			[DebuggerHidden]
			public <StatueAnimationRoutine>d__36(int <>1__state)
			{
			}

			[Token(Token = "0x6001894")]
			[Address(RVA = "0xE8DA6C", Offset = "0xE8DA6C", VA = "0xE8DA6C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001895")]
			[Address(RVA = "0xE8DA70", Offset = "0xE8DA70", VA = "0xE8DA70", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001897")]
			[Address(RVA = "0xE8DBE0", Offset = "0xE8DBE0", VA = "0xE8DBE0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400181B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly int LookingAroundLoopId;

		[Token(Token = "0x400181C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private static readonly int minId;

		[Token(Token = "0x400181D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static readonly int maxId;

		[Token(Token = "0x400181E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private YieldInstruction m_waitForOneThenth;

		[Token(Token = "0x400181F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GemAltarSlot[] m_coralAltarSlots;

		[Token(Token = "0x4001820")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x97CCE8", Offset = "0x97CCE8")]
		private ParticleSystem m_statueTransformationParticles;

		[Token(Token = "0x4001821")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x97CD34", Offset = "0x97CD34")]
		private NeatAudioPlayer godTransformSound;

		[Token(Token = "0x4001822")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private NeatAudioPlayer energySound;

		[Token(Token = "0x4001823")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private List<NeatAudioPlayer> energyHum;

		[Token(Token = "0x4001824")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x97CDA0", Offset = "0x97CDA0")]
		[SerializeField]
		private GameObject m_godStatueObject;

		[Token(Token = "0x4001825")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private GameObject m_godObject;

		[Token(Token = "0x4001826")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private Animator m_godAnimator;

		[Token(Token = "0x4001827")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private Animator m_statueAnimator;

		[Token(Token = "0x4001828")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private GameObject m_flowerObject;

		[Token(Token = "0x4001829")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private GodFlower m_godFlower;

		[Token(Token = "0x400182A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private Renderer[] m_platformRenderers;

		[Token(Token = "0x400182B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private int m_crystalsPlaced;

		[Token(Token = "0x400182C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private MaterialPropertyBlock m_currentEmissiveMaterialPropertyBlock;

		[Token(Token = "0x400182D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private EmissiveResonationMaterialData[] m_emissiveResonationMaterialData;

		[Token(Token = "0x400182E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Coroutine m_statueAnimationRoutine;

		[Token(Token = "0x6001869")]
		[Address(RVA = "0xE8C4DC", Offset = "0xE8C4DC", VA = "0xE8C4DC")]
		private void Awake()
		{
		}

		[Token(Token = "0x600186A")]
		[Address(RVA = "0xE8C67C", Offset = "0xE8C67C", VA = "0xE8C67C")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x600186B")]
		[Address(RVA = "0xE8C6C8", Offset = "0xE8C6C8", VA = "0xE8C6C8")]
		private void OnSlotInitialized(int slotIndex, bool hasCrystal)
		{
		}

		[Token(Token = "0x600186C")]
		[Address(RVA = "0xE8C990", Offset = "0xE8C990", VA = "0xE8C990")]
		private void OnStartCrystalPlacement(int slotIndex)
		{
		}

		[Token(Token = "0x600186D")]
		[Address(RVA = "0xE8C994", Offset = "0xE8C994", VA = "0xE8C994")]
		private void OnFinishedCrystalPlacement(int slotIndex)
		{
		}

		[Token(Token = "0x600186E")]
		[Address(RVA = "0xE8C850", Offset = "0xE8C850", VA = "0xE8C850")]
		private void CheckPuzzleCompletion(bool checkFromSaveState = false)
		{
		}

		[Token(Token = "0x600186F")]
		[Address(RVA = "0xE8CBB4", Offset = "0xE8CBB4", VA = "0xE8CBB4")]
		private void ShowAsCompleted()
		{
		}

		[Token(Token = "0x6001870")]
		[Address(RVA = "0xE8CBB0", Offset = "0xE8CBB0", VA = "0xE8CBB0")]
		public void PlaySolveSound()
		{
		}

		[Token(Token = "0x6001871")]
		[Address(RVA = "0xE8CB58", Offset = "0xE8CB58", VA = "0xE8CB58")]
		private void ShowSolvedAnimation()
		{
		}

		[Token(Token = "0x6001872")]
		[Address(RVA = "0xE8CDB0", Offset = "0xE8CDB0", VA = "0xE8CDB0")]
		private bool IsAllPlatformsLit()
		{
			return default(bool);
		}

		[Token(Token = "0x6001873")]
		[Address(RVA = "0xE8CA50", Offset = "0xE8CA50", VA = "0xE8CA50")]
		private bool HasPlatformStartedLightingUp(int index)
		{
			return default(bool);
		}

		[Token(Token = "0x6001874")]
		[Address(RVA = "0xE8CE48", Offset = "0xE8CE48", VA = "0xE8CE48")]
		private bool HasPlatformStartedShuttingDown(int index)
		{
			return default(bool);
		}

		[Token(Token = "0x6001875")]
		[Address(RVA = "0xE8CE00", Offset = "0xE8CE00", VA = "0xE8CE00")]
		private bool IsPlatformFullyLit(int index)
		{
			return default(bool);
		}

		[Token(Token = "0x6001876")]
		[Address(RVA = "0xE8CA9C", Offset = "0xE8CA9C", VA = "0xE8CA9C")]
		private void StartPlatformMaterialAnimationRoutine(int emissiveIndex, float target)
		{
		}

		[Token(Token = "0x6001877")]
		[Address(RVA = "0xE8CE9C", Offset = "0xE8CE9C", VA = "0xE8CE9C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x98F86C", Offset = "0x98F86C")]
		private IEnumerator MaterialPropertyAnimation(int emissiveIndex, float target)
		{
			return null;
		}

		[Token(Token = "0x6001878")]
		[Address(RVA = "0xE8CF64", Offset = "0xE8CF64", VA = "0xE8CF64")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x98F8D0", Offset = "0x98F8D0")]
		private IEnumerator MaterialPropertyAnimation(float startMinProperty, float startMaxProperty, int emissiveIndex, float target, bool updateEmissiveResonationMaterialData)
		{
			return null;
		}

		[Token(Token = "0x6001879")]
		[Address(RVA = "0xE8CD34", Offset = "0xE8CD34", VA = "0xE8CD34")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x98F934", Offset = "0x98F934")]
		private IEnumerator StatueAnimationRoutine()
		{
			return null;
		}

		[Token(Token = "0x600187A")]
		[Address(RVA = "0xE8D078", Offset = "0xE8D078", VA = "0xE8D078")]
		private void SetPropertyBlockEmissiveValue(float val)
		{
		}

		[Token(Token = "0x600187B")]
		[Address(RVA = "0xE8C70C", Offset = "0xE8C70C", VA = "0xE8C70C")]
		private void SetEmissivePlatformMaterialForRenderer(int emissiveIndex, bool shouldBeLit)
		{
		}

		[Token(Token = "0x600187C")]
		[Address(RVA = "0xE8C6A4", Offset = "0xE8C6A4", VA = "0xE8C6A4")]
		private void SetEmmissivePlatformMaterialForAll(float val)
		{
		}

		[Token(Token = "0x600187D")]
		[Address(RVA = "0xE8D1BC", Offset = "0xE8D1BC", VA = "0xE8D1BC")]
		private void SetPropertyBlockForAll()
		{
		}

		[Token(Token = "0x600187E")]
		[Address(RVA = "0xE8D164", Offset = "0xE8D164", VA = "0xE8D164")]
		private void SetPropertyBlockForRenderer(int emissiveIndex)
		{
		}

		[Token(Token = "0x600187F")]
		[Address(RVA = "0xE8D24C", Offset = "0xE8D24C", VA = "0xE8D24C")]
		private int GetMaterialSlotIndex(int emissiveIndex)
		{
			return default(int);
		}

		[Token(Token = "0x6001880")]
		[Address(RVA = "0xE8CC80", Offset = "0xE8CC80", VA = "0xE8CC80")]
		private void TryActivateFlower()
		{
		}

		[Token(Token = "0x6001881")]
		[Address(RVA = "0xE8D258", Offset = "0xE8D258", VA = "0xE8D258")]
		public void ShowGod()
		{
		}

		[Token(Token = "0x6001882")]
		[Address(RVA = "0xE8CC60", Offset = "0xE8CC60", VA = "0xE8CC60")]
		public void HideStatue()
		{
		}

		[Token(Token = "0x6001883")]
		[Address(RVA = "0xE8D2EC", Offset = "0xE8D2EC", VA = "0xE8D2EC")]
		public void GodReactsToPlayer()
		{
		}

		[Token(Token = "0x6001884")]
		[Address(RVA = "0xE8D370", Offset = "0xE8D370", VA = "0xE8D370")]
		public void ShowFlower()
		{
		}

		[Token(Token = "0x6001885")]
		[Address(RVA = "0xE8D390", Offset = "0xE8D390", VA = "0xE8D390")]
		public CoralAltar()
		{
		}
	}
	[Token(Token = "0x2000414")]
	public class CoralCollectionActivator : MonoBehaviour
	{
		[Token(Token = "0x4001845")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject m_coralBall;

		[Token(Token = "0x4001846")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GameObject m_coralCone;

		[Token(Token = "0x4001847")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private GameObject m_coralSpike;

		[Token(Token = "0x6001899")]
		[Address(RVA = "0xE8DC58", Offset = "0xE8DC58", VA = "0xE8DC58")]
		public void ActivateCoralByIndex(int coralIndex)
		{
		}

		[Token(Token = "0x600189A")]
		[Address(RVA = "0xE8DCAC", Offset = "0xE8DCAC", VA = "0xE8DCAC")]
		public CoralCollectionActivator()
		{
		}
	}
	[Token(Token = "0x2000415")]
	public class CoralGodAnimation : MonoBehaviour
	{
		[Token(Token = "0x4001848")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private CoralAltar m_coralAltarPuzzle;

		[Token(Token = "0x4001849")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private SphereCollider m_godReactionToPlayerCollider;

		[Token(Token = "0x400184A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private NeatAudioPlayer audioPlayer;

		[Token(Token = "0x400184B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private NeatAudioCue reactToPlayerCue;

		[Token(Token = "0x400184C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private NeatAudioCue waveCue;

		[Token(Token = "0x400184D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private NeatAudioCue summonFlowerCue;

		[Token(Token = "0x400184E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private GameObject m_waterEffects;

		[Token(Token = "0x600189B")]
		[Address(RVA = "0xE8DCB4", Offset = "0xE8DCB4", VA = "0xE8DCB4")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x600189C")]
		[Address(RVA = "0xE8DCCC", Offset = "0xE8DCCC", VA = "0xE8DCCC")]
		public void EnablePlayerInteraction()
		{
		}

		[Token(Token = "0x600189D")]
		[Address(RVA = "0xE8DCEC", Offset = "0xE8DCEC", VA = "0xE8DCEC")]
		public void SummonFlower()
		{
		}

		[Token(Token = "0x600189E")]
		[Address(RVA = "0xE8DD04", Offset = "0xE8DD04", VA = "0xE8DD04")]
		public void WaterEffects()
		{
		}

		[Token(Token = "0x600189F")]
		[Address(RVA = "0xE8DD24", Offset = "0xE8DD24", VA = "0xE8DD24")]
		public void RaiseArms()
		{
		}

		[Token(Token = "0x60018A0")]
		[Address(RVA = "0xE8DDF8", Offset = "0xE8DDF8", VA = "0xE8DDF8")]
		public void Wave()
		{
		}

		[Token(Token = "0x60018A1")]
		[Address(RVA = "0xE8DECC", Offset = "0xE8DECC", VA = "0xE8DECC")]
		public void ReactToPlayer()
		{
		}

		[Token(Token = "0x60018A2")]
		[Address(RVA = "0xE8DFA0", Offset = "0xE8DFA0", VA = "0xE8DFA0")]
		public void TriggerCoralTreeBud()
		{
		}

		[Token(Token = "0x60018A3")]
		[Address(RVA = "0xE8E028", Offset = "0xE8E028", VA = "0xE8E028")]
		public void SpawnGrabbableCrystal()
		{
		}

		[Token(Token = "0x60018A4")]
		[Address(RVA = "0xE8E0B0", Offset = "0xE8E0B0", VA = "0xE8E0B0")]
		public void DisableGod()
		{
		}

		[Token(Token = "0x60018A5")]
		[Address(RVA = "0xE8E154", Offset = "0xE8E154", VA = "0xE8E154")]
		public CoralGodAnimation()
		{
		}
	}
	[Token(Token = "0x2000416")]
	public class CoralStatueAnimation : MonoBehaviour
	{
		[Token(Token = "0x400184F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private CoralAltar m_coralAltar;

		[Token(Token = "0x60018A6")]
		[Address(RVA = "0xE8EAC8", Offset = "0xE8EAC8", VA = "0xE8EAC8")]
		public void ShowGod()
		{
		}

		[Token(Token = "0x60018A7")]
		[Address(RVA = "0xE8EAE0", Offset = "0xE8EAE0", VA = "0xE8EAE0")]
		public void HideStatue()
		{
		}

		[Token(Token = "0x60018A8")]
		[Address(RVA = "0xE8EAF8", Offset = "0xE8EAF8", VA = "0xE8EAF8")]
		public CoralStatueAnimation()
		{
		}
	}
	[Token(Token = "0x2000417")]
	public class GhostAnimController : MonoBehaviour, IInitializable
	{
		[Token(Token = "0x4001850")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private int m_ghostId;

		[Token(Token = "0x4001851")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Animator m_animator;

		[Token(Token = "0x4001852")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private bool m_isMommy;

		[Token(Token = "0x4001853")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private GameObject m_poofEffect;

		[Token(Token = "0x4001854")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static int SadLayerIndex;

		[Token(Token = "0x4001855")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public static int BaseLayerIndex;

		[Token(Token = "0x17000281")]
		public int GhostId
		{
			[Token(Token = "0x60018A9")]
			[Address(RVA = "0xE8EB58", Offset = "0xE8EB58", VA = "0xE8EB58")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000282")]
		public bool IsMommy
		{
			[Token(Token = "0x60018AA")]
			[Address(RVA = "0xE8EB60", Offset = "0xE8EB60", VA = "0xE8EB60")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60018AB")]
		[Address(RVA = "0xE8EB68", Offset = "0xE8EB68", VA = "0xE8EB68", Slot = "4")]
		public void Initialize()
		{
		}

		[Token(Token = "0x60018AC")]
		[Address(RVA = "0xE8EDD4", Offset = "0xE8EDD4", VA = "0xE8EDD4")]
		private void Awake()
		{
		}

		[Token(Token = "0x60018AD")]
		[Address(RVA = "0xE8EE78", Offset = "0xE8EE78", VA = "0xE8EE78")]
		public Animator GetAnimator()
		{
			return null;
		}

		[Token(Token = "0x60018AE")]
		[Address(RVA = "0xE8EE80", Offset = "0xE8EE80", VA = "0xE8EE80")]
		public void OnPoofsAway()
		{
		}

		[Token(Token = "0x60018AF")]
		[Address(RVA = "0xE8EFEC", Offset = "0xE8EFEC", VA = "0xE8EFEC")]
		public GhostAnimController()
		{
		}
	}
	[Token(Token = "0x2000418")]
	public class GhostFamilyController : SaveableComponent, IInitializable
	{
		[Token(Token = "0x2000419")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9735C4", Offset = "0x9735C4")]
		private sealed class <GhostsDisappearing>d__22 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001861")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001862")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001863")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public GhostFamilyController <>4__this;

			[Token(Token = "0x17000283")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60018C1")]
				[Address(RVA = "0xE90260", Offset = "0xE90260", VA = "0xE90260", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000284")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60018C3")]
				[Address(RVA = "0xE902C8", Offset = "0xE902C8", VA = "0xE902C8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60018BE")]
			[Address(RVA = "0xE8FDE8", Offset = "0xE8FDE8", VA = "0xE8FDE8")]
			[DebuggerHidden]
			public <GhostsDisappearing>d__22(int <>1__state)
			{
			}

			[Token(Token = "0x60018BF")]
			[Address(RVA = "0xE8FF60", Offset = "0xE8FF60", VA = "0xE8FF60", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60018C0")]
			[Address(RVA = "0xE8FF64", Offset = "0xE8FF64", VA = "0xE8FF64", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60018C2")]
			[Address(RVA = "0xE90268", Offset = "0xE90268", VA = "0xE90268", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001856")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static int m_ghostsInitialized;

		[Token(Token = "0x4001857")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static GhostFamilyController sm_instance;

		[Token(Token = "0x4001858")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static readonly int PoofsAwayParameterId;

		[Token(Token = "0x4001859")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private static readonly int ApplauseParameterId;

		[Token(Token = "0x400185A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static readonly int ShoutParameterId;

		[Token(Token = "0x400185B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private CoralCollectionActivator m_mommyCoralCollection;

		[Token(Token = "0x400185C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Animator m_mommyGhostAnimator;

		[Token(Token = "0x400185D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Animator[] m_childGhostAnimators;

		[Token(Token = "0x400185E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private OptimizedCollection<int> m_ghostsCollected;

		[Token(Token = "0x400185F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Coroutine m_ghostsDisappearingRoutine;

		[Token(Token = "0x4001860")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private bool m_initialized;

		[Token(Token = "0x60018B0")]
		[Address(RVA = "0xE8F3CC", Offset = "0xE8F3CC", VA = "0xE8F3CC")]
		private void Awake()
		{
		}

		[Token(Token = "0x60018B1")]
		[Address(RVA = "0xE8F448", Offset = "0xE8F448", VA = "0xE8F448", Slot = "5")]
		public void Initialize()
		{
		}

		[Token(Token = "0x60018B2")]
		[Address(RVA = "0xE8EBCC", Offset = "0xE8EBCC", VA = "0xE8EBCC")]
		public static void RegisterGhost(GhostAnimController ghostAnimController)
		{
		}

		[Token(Token = "0x60018B3")]
		[Address(RVA = "0xE8F56C", Offset = "0xE8F56C", VA = "0xE8F56C")]
		private void TryInitializeGhostAnimations()
		{
		}

		[Token(Token = "0x60018B4")]
		[Address(RVA = "0xE8F7DC", Offset = "0xE8F7DC", VA = "0xE8F7DC", Slot = "4")]
		public override ComponentState CreateState()
		{
			return null;
		}

		[Token(Token = "0x60018B5")]
		[Address(RVA = "0xE8F89C", Offset = "0xE8F89C", VA = "0xE8F89C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60018B6")]
		[Address(RVA = "0xE8F9A4", Offset = "0xE8F9A4", VA = "0xE8F9A4")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60018B7")]
		[Address(RVA = "0xE8FAAC", Offset = "0xE8FAAC", VA = "0xE8FAAC")]
		private void OnPlaformFinished(PlatformFinishedEvent e)
		{
		}

		[Token(Token = "0x60018B8")]
		[Address(RVA = "0xE8F5F8", Offset = "0xE8F5F8", VA = "0xE8F5F8")]
		private void InitializeGhostAnimations()
		{
		}

		[Token(Token = "0x60018B9")]
		[Address(RVA = "0xE8FC88", Offset = "0xE8FC88", VA = "0xE8FC88")]
		private void SetBaseAnimationLayerPlayback(bool shouldPlay)
		{
		}

		[Token(Token = "0x60018BA")]
		[Address(RVA = "0xE8FD08", Offset = "0xE8FD08", VA = "0xE8FD08")]
		public void OnGodAppearing(GodAppearingEvent e)
		{
		}

		[Token(Token = "0x60018BB")]
		[Address(RVA = "0xE8FD6C", Offset = "0xE8FD6C", VA = "0xE8FD6C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x98FA88", Offset = "0x98FA88")]
		private IEnumerator GhostsDisappearing()
		{
			return null;
		}

		[Token(Token = "0x60018BC")]
		[Address(RVA = "0xE8FE14", Offset = "0xE8FE14", VA = "0xE8FE14")]
		public GhostFamilyController()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200041A")]
	public class GhostFamilyControllerState : ComponentState
	{
		[Token(Token = "0x4001864")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int[] GhostsCollected;

		[Token(Token = "0x60018C4")]
		[Address(RVA = "0xE8F868", Offset = "0xE8F868", VA = "0xE8F868")]
		public GhostFamilyControllerState(int[] ghostsCollected)
		{
		}
	}
	[Token(Token = "0x200041B")]
	public class GodAppearingEvent : GameEvent
	{
		[Token(Token = "0x60018C5")]
		[Address(RVA = "0xE8BD48", Offset = "0xE8BD48", VA = "0xE8BD48")]
		public GodAppearingEvent()
		{
		}
	}
	[Token(Token = "0x200041C")]
	public enum CoralBudType
	{
		[Token(Token = "0x4001866")]
		Ball,
		[Token(Token = "0x4001867")]
		Cone,
		[Token(Token = "0x4001868")]
		Crystal,
		[Token(Token = "0x4001869")]
		Pipe,
		[Token(Token = "0x400186A")]
		Spikey
	}
	[Token(Token = "0x200041D")]
	public class CoralBud : MonoBehaviour
	{
		[Token(Token = "0x400186B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private CoralBudType m_coralBudType;

		[Token(Token = "0x17000285")]
		public CoralBudType BudType
		{
			[Token(Token = "0x60018C6")]
			[Address(RVA = "0xE8DC48", Offset = "0xE8DC48", VA = "0xE8DC48")]
			get
			{
				return default(CoralBudType);
			}
		}

		[Token(Token = "0x60018C7")]
		[Address(RVA = "0xE8DC50", Offset = "0xE8DC50", VA = "0xE8DC50")]
		public CoralBud()
		{
		}
	}
	[Token(Token = "0x200041E")]
	public class CoralPlatformPuzzle : SaveableComponent, IInitializable
	{
		[Token(Token = "0x400186C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private readonly int StageParameterId;

		[Token(Token = "0x400186D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private readonly int FullyGrownStateNameHash;

		[Token(Token = "0x400186E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private int m_platformIndex;

		[Token(Token = "0x400186F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[SerializeField]
		private CraftingSystem.ResourceType m_coralResourceType;

		[Token(Token = "0x4001870")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Animator m_coralAnimator;

		[Token(Token = "0x4001871")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private GameObject m_fishParticles;

		[Token(Token = "0x4001872")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private List<PlantPositionProxy> m_coralsPlanted;

		[Token(Token = "0x4001873")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private OptimizedCollection<PlantPositionProxy> m_coralsGrown;

		[Token(Token = "0x4001874")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private bool m_initialized;

		[Token(Token = "0x4001875")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
		private bool m_isSolved;

		[Token(Token = "0x60018C8")]
		[Address(RVA = "0xE8E15C", Offset = "0xE8E15C", VA = "0xE8E15C", Slot = "4")]
		public override ComponentState CreateState()
		{
			return null;
		}

		[Token(Token = "0x60018C9")]
		[Address(RVA = "0xE8E1F4", Offset = "0xE8E1F4", VA = "0xE8E1F4", Slot = "5")]
		public void Initialize()
		{
		}

		[Token(Token = "0x60018CA")]
		[Address(RVA = "0xE8E3A4", Offset = "0xE8E3A4", VA = "0xE8E3A4")]
		public void OnTriggerUpdated(Component[] updatedComponents)
		{
		}

		[Token(Token = "0x60018CB")]
		[Address(RVA = "0xE8E3C8", Offset = "0xE8E3C8", VA = "0xE8E3C8")]
		private void UpdatePlantsRegistry(Component[] updatedComponents)
		{
		}

		[Token(Token = "0x60018CC")]
		[Address(RVA = "0xE8E834", Offset = "0xE8E834", VA = "0xE8E834")]
		private void ClearRemovedComponents(OptimizedCollection<Component> currentComponentCollection)
		{
		}

		[Token(Token = "0x60018CD")]
		[Address(RVA = "0xE8E688", Offset = "0xE8E688", VA = "0xE8E688")]
		public void CheckPlantsGrowth()
		{
		}

		[Token(Token = "0x60018CE")]
		[Address(RVA = "0xE8E294", Offset = "0xE8E294", VA = "0xE8E294")]
		public void CompletePuzzle()
		{
		}

		[Token(Token = "0x60018CF")]
		[Address(RVA = "0xE8E9DC", Offset = "0xE8E9DC", VA = "0xE8E9DC")]
		public CoralPlatformPuzzle()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200041F")]
	public class CoralPlatformPuzzleState : ComponentState
	{
		[Token(Token = "0x4001876")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool IsSolved;

		[Token(Token = "0x60018D0")]
		[Address(RVA = "0xE8E1C4", Offset = "0xE8E1C4", VA = "0xE8E1C4")]
		public CoralPlatformPuzzleState(bool isSolved)
		{
		}
	}
	[Token(Token = "0x2000420")]
	public class GhostCoralBubbleController : MonoBehaviour
	{
		[Token(Token = "0x2000421")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9735D4", Offset = "0x9735D4")]
		private sealed class <ShowBubbleForDuration>d__10 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400187E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400187F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001880")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public GhostCoralBubbleController <>4__this;

			[Token(Token = "0x17000286")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60018DA")]
				[Address(RVA = "0xE8F35C", Offset = "0xE8F35C", VA = "0xE8F35C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000287")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60018DC")]
				[Address(RVA = "0xE8F3C4", Offset = "0xE8F3C4", VA = "0xE8F3C4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60018D7")]
			[Address(RVA = "0xE8F1C8", Offset = "0xE8F1C8", VA = "0xE8F1C8")]
			[DebuggerHidden]
			public <ShowBubbleForDuration>d__10(int <>1__state)
			{
			}

			[Token(Token = "0x60018D8")]
			[Address(RVA = "0xE8F2B8", Offset = "0xE8F2B8", VA = "0xE8F2B8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60018D9")]
			[Address(RVA = "0xE8F2BC", Offset = "0xE8F2BC", VA = "0xE8F2BC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60018DB")]
			[Address(RVA = "0xE8F364", Offset = "0xE8F364", VA = "0xE8F364", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001877")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly WaitForSeconds m_waitForDurationInstruction;

		[Token(Token = "0x4001878")]
		private const int MaxCoralsNum = 3;

		[Token(Token = "0x4001879")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GameObject m_bubbleObject;

		[Token(Token = "0x400187A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private GameObject[] m_coralIcons;

		[Token(Token = "0x400187B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private bool m_alwaysShowBubble;

		[Token(Token = "0x400187C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Coroutine m_bubbleRoutine;

		[Token(Token = "0x400187D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private int m_numberOfCorals;

		[Token(Token = "0x60018D1")]
		[Address(RVA = "0xE8EFF4", Offset = "0xE8EFF4", VA = "0xE8EFF4")]
		private void Awake()
		{
		}

		[Token(Token = "0x60018D2")]
		[Address(RVA = "0xE8F0BC", Offset = "0xE8F0BC", VA = "0xE8F0BC")]
		public void OnCoralNumberChanged(int numberOfCorals)
		{
		}

		[Token(Token = "0x60018D3")]
		[Address(RVA = "0xE8F004", Offset = "0xE8F004", VA = "0xE8F004")]
		public void ShowBubble()
		{
		}

		[Token(Token = "0x60018D4")]
		[Address(RVA = "0xE8F14C", Offset = "0xE8F14C", VA = "0xE8F14C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x98FB3C", Offset = "0x98FB3C")]
		private IEnumerator ShowBubbleForDuration()
		{
			return null;
		}

		[Token(Token = "0x60018D5")]
		[Address(RVA = "0xE8F1F4", Offset = "0xE8F1F4", VA = "0xE8F1F4")]
		public void HideBubble()
		{
		}

		[Token(Token = "0x60018D6")]
		[Address(RVA = "0xE8F214", Offset = "0xE8F214", VA = "0xE8F214")]
		public GhostCoralBubbleController()
		{
		}
	}
	[Token(Token = "0x2000422")]
	public class GhostNoGrabReaction : MonoBehaviour
	{
		[Token(Token = "0x4001881")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GhostPlatformInteraction m_ghostPlatformInteraction;

		[Token(Token = "0x60018DD")]
		[Address(RVA = "0xE902D0", Offset = "0xE902D0", VA = "0xE902D0")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x60018DE")]
		[Address(RVA = "0xE903F4", Offset = "0xE903F4", VA = "0xE903F4")]
		private void OnTriggerExit(Collider other)
		{
		}

		[Token(Token = "0x60018DF")]
		[Address(RVA = "0xE90410", Offset = "0xE90410", VA = "0xE90410")]
		public GhostNoGrabReaction()
		{
		}
	}
	[Token(Token = "0x2000423")]
	public class GhostPlatformInteraction : MonoBehaviour
	{
		[Token(Token = "0x2000424")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9735E4", Offset = "0x9735E4")]
		private sealed class <ReactionRoutine>d__24 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001892")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001893")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001894")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public GhostPlatformInteraction <>4__this;

			[Token(Token = "0x17000288")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60018F5")]
				[Address(RVA = "0xE91300", Offset = "0xE91300", VA = "0xE91300", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000289")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60018F7")]
				[Address(RVA = "0xE91368", Offset = "0xE91368", VA = "0xE91368", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60018F2")]
			[Address(RVA = "0xE90AFC", Offset = "0xE90AFC", VA = "0xE90AFC")]
			[DebuggerHidden]
			public <ReactionRoutine>d__24(int <>1__state)
			{
			}

			[Token(Token = "0x60018F3")]
			[Address(RVA = "0xE91158", Offset = "0xE91158", VA = "0xE91158", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60018F4")]
			[Address(RVA = "0xE9115C", Offset = "0xE9115C", VA = "0xE9115C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60018F6")]
			[Address(RVA = "0xE91308", Offset = "0xE91308", VA = "0xE91308", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001882")]
		private const float WaveInterval = 30f;

		[Token(Token = "0x4001883")]
		private const float ReactInterval = 2.5f;

		[Token(Token = "0x4001884")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly int WaveParamId;

		[Token(Token = "0x4001885")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private static readonly int PoofsAwayParamId;

		[Token(Token = "0x4001886")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static readonly int ApplauseParamId;

		[Token(Token = "0x4001887")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private static readonly int DontTouchCrystalParamId;

		[Token(Token = "0x4001888")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private WaitForSeconds m_reationDelayInstruction;

		[Token(Token = "0x4001889")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private int m_platformIndex;

		[Token(Token = "0x400188A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Animator m_ghostAnimator;

		[Token(Token = "0x400188B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private GhostCoralBubbleController m_ghostCoralBubbleController;

		[Token(Token = "0x400188C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private AttachSlot m_ghostCrystalAttatchSlot;

		[Token(Token = "0x400188D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Grabbable m_ghostCrystalGrabbable;

		[Token(Token = "0x400188E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float m_lastWaveTime;

		[Token(Token = "0x400188F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Coroutine m_reactionRoutine;

		[Token(Token = "0x4001890")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private bool m_shouldReact;

		[Token(Token = "0x4001891")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private float m_lastReactTime;

		[Token(Token = "0x60018E0")]
		[Address(RVA = "0xE90418", Offset = "0xE90418", VA = "0xE90418")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60018E1")]
		[Address(RVA = "0xE905F8", Offset = "0xE905F8", VA = "0xE905F8")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60018E2")]
		[Address(RVA = "0xE90760", Offset = "0xE90760", VA = "0xE90760")]
		private void OnCrystalAttached(PlatformCrystalAttatchedEvent e)
		{
		}

		[Token(Token = "0x60018E3")]
		[Address(RVA = "0xE908A4", Offset = "0xE908A4", VA = "0xE908A4")]
		public void PlayWaveAnim()
		{
		}

		[Token(Token = "0x60018E4")]
		[Address(RVA = "0xE90964", Offset = "0xE90964", VA = "0xE90964")]
		public void OnPointsDown()
		{
		}

		[Token(Token = "0x60018E5")]
		[Address(RVA = "0xE90968", Offset = "0xE90968", VA = "0xE90968")]
		public void PlayApplauseAnim()
		{
		}

		[Token(Token = "0x60018E6")]
		[Address(RVA = "0xE909E8", Offset = "0xE909E8", VA = "0xE909E8")]
		public void PlayFinishAnim()
		{
		}

		[Token(Token = "0x60018E7")]
		[Address(RVA = "0xE902EC", Offset = "0xE902EC", VA = "0xE902EC")]
		public void ReactToPlayerGrabbingGem(bool shouldReact)
		{
		}

		[Token(Token = "0x60018E8")]
		[Address(RVA = "0xE90A80", Offset = "0xE90A80", VA = "0xE90A80")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x98FBF0", Offset = "0x98FBF0")]
		private IEnumerator ReactionRoutine()
		{
			return null;
		}

		[Token(Token = "0x60018E9")]
		[Address(RVA = "0xE90B28", Offset = "0xE90B28", VA = "0xE90B28")]
		public void OnPoofsAway()
		{
		}

		[Token(Token = "0x60018EA")]
		[Address(RVA = "0xE90CC0", Offset = "0xE90CC0", VA = "0xE90CC0")]
		public void DropCrystal()
		{
		}

		[Token(Token = "0x60018EB")]
		[Address(RVA = "0xE90EA0", Offset = "0xE90EA0", VA = "0xE90EA0")]
		private bool IsCorrectPlatform(int platformIndex)
		{
			return default(bool);
		}

		[Token(Token = "0x60018EC")]
		[Address(RVA = "0xE90EB0", Offset = "0xE90EB0", VA = "0xE90EB0")]
		private void OnCoralPlanted(CoralPlantedEvent e)
		{
		}

		[Token(Token = "0x60018ED")]
		[Address(RVA = "0xE90ED8", Offset = "0xE90ED8", VA = "0xE90ED8")]
		private void OnCoralFullyGrown(CoralFullyGrownEvent e)
		{
		}

		[Token(Token = "0x60018EE")]
		[Address(RVA = "0xE90F14", Offset = "0xE90F14", VA = "0xE90F14")]
		private void OnPlatformFinished(PlatformFinishedEvent e)
		{
		}

		[Token(Token = "0x60018EF")]
		[Address(RVA = "0xE90F3C", Offset = "0xE90F3C", VA = "0xE90F3C")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x60018F0")]
		[Address(RVA = "0xE9101C", Offset = "0xE9101C", VA = "0xE9101C")]
		public GhostPlatformInteraction()
		{
		}
	}
	[Token(Token = "0x2000425")]
	public class PlatformGhostAttachSlotEventDispatcher : AttachSlotEventDispatcher
	{
		[Token(Token = "0x4001895")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private int m_platformIndex;

		[Token(Token = "0x60018F8")]
		[Address(RVA = "0xE91370", Offset = "0xE91370", VA = "0xE91370", Slot = "4")]
		protected override void OnAttached(SaveObjectBase saveObj, Grabbable grabbable)
		{
		}

		[Token(Token = "0x60018F9")]
		[Address(RVA = "0xE9142C", Offset = "0xE9142C", VA = "0xE9142C")]
		public PlatformGhostAttachSlotEventDispatcher()
		{
		}
	}
}
namespace NeatCorp.Puzzles.Coral.Events
{
	[Token(Token = "0x2000426")]
	public class CoralFullyGrownEvent : GameEvent
	{
		[Token(Token = "0x4001896")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int PlatformIndex;

		[Token(Token = "0x4001897")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int NumberOfCoralsGrown;

		[Token(Token = "0x60018FA")]
		[Address(RVA = "0xE8E978", Offset = "0xE8E978", VA = "0xE8E978")]
		public CoralFullyGrownEvent(int platformIndex, int numberOfCoralsGrown)
		{
		}
	}
	[Token(Token = "0x2000427")]
	public class CoralPlantedEvent : GameEvent
	{
		[Token(Token = "0x4001898")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int PlatformIndex;

		[Token(Token = "0x60018FB")]
		[Address(RVA = "0xE8E94C", Offset = "0xE8E94C", VA = "0xE8E94C")]
		public CoralPlantedEvent(int platformIndex)
		{
		}
	}
	[Token(Token = "0x2000428")]
	public class PlatformCrystalAttatchedEvent : GameEvent
	{
		[Token(Token = "0x4001899")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int PlatformIndex;

		[Token(Token = "0x400189A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Grabbable GrabbableCrystal;

		[Token(Token = "0x400189B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AttachSlot AttachSlot;

		[Token(Token = "0x60018FC")]
		[Address(RVA = "0xE8EB00", Offset = "0xE8EB00", VA = "0xE8EB00")]
		public PlatformCrystalAttatchedEvent(int platformIndex, Grabbable grabbableCrystal, AttachSlot attachSlot)
		{
		}
	}
	[Token(Token = "0x2000429")]
	public class PlatformFinishedEvent : GameEvent
	{
		[Token(Token = "0x400189C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int PlatformIndex;

		[Token(Token = "0x60018FD")]
		[Address(RVA = "0xE8E9B0", Offset = "0xE8E9B0", VA = "0xE8E9B0")]
		public PlatformFinishedEvent(int platformIndex)
		{
		}
	}
}
namespace NeatCorp.Puzzles.BambooIsland
{
	[Token(Token = "0x200042A")]
	public class BambooIslandAltar : MonoBehaviour
	{
		[Token(Token = "0x200042B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9735F4", Offset = "0x9735F4")]
		private sealed class <StatueAnimationRoutine>d__23 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40018AB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40018AC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40018AD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public BambooIslandAltar <>4__this;

			[Token(Token = "0x1700028A")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001912")]
				[Address(RVA = "0xE8C02C", Offset = "0xE8C02C", VA = "0xE8C02C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700028B")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001914")]
				[Address(RVA = "0xE8C094", Offset = "0xE8C094", VA = "0xE8C094", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600190F")]
			[Address(RVA = "0xE8BC88", Offset = "0xE8BC88", VA = "0xE8BC88")]
			[DebuggerHidden]
			public <StatueAnimationRoutine>d__23(int <>1__state)
			{
			}

			[Token(Token = "0x6001910")]
			[Address(RVA = "0xE8BF00", Offset = "0xE8BF00", VA = "0xE8BF00", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001911")]
			[Address(RVA = "0xE8BF04", Offset = "0xE8BF04", VA = "0xE8BF04", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001913")]
			[Address(RVA = "0xE8C034", Offset = "0xE8C034", VA = "0xE8C034", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400189D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly int LookingAroundLoopId;

		[Token(Token = "0x400189E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GemAltarSlot[] m_coralAltarSlots;

		[Token(Token = "0x400189F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private PlatformGlow[] m_altarGlowSlots;

		[Token(Token = "0x40018A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x97D02C", Offset = "0x97D02C")]
		private ParticleSystem m_statueTransformationParticles;

		[Token(Token = "0x40018A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x97D078", Offset = "0x97D078")]
		private NeatAudioPlayer godTransformSound;

		[Token(Token = "0x40018A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x97D0C4", Offset = "0x97D0C4")]
		private GameObject m_godStatueObject;

		[Token(Token = "0x40018A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private GameObject m_godObject;

		[Token(Token = "0x40018A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private Animator m_godAnimator;

		[Token(Token = "0x40018A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private Animator m_statueAnimator;

		[Token(Token = "0x40018A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private GameObject m_flowerObject;

		[Token(Token = "0x40018A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private GodFlower m_godFlower;

		[Token(Token = "0x40018A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private int m_crystalsPlaced;

		[Token(Token = "0x40018A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Coroutine m_statueAnimationRoutine;

		[Token(Token = "0x40018AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static string AllGemsInsertedEvent;

		[Token(Token = "0x60018FE")]
		[Address(RVA = "0xE8B6C4", Offset = "0xE8B6C4", VA = "0xE8B6C4")]
		private void Awake()
		{
		}

		[Token(Token = "0x60018FF")]
		[Address(RVA = "0xE8B868", Offset = "0xE8B868", VA = "0xE8B868")]
		private void OnSlotInitialized(int slotIndex, bool hasCrystal)
		{
		}

		[Token(Token = "0x6001900")]
		[Address(RVA = "0xE8BA0C", Offset = "0xE8BA0C", VA = "0xE8BA0C")]
		private void OnStartCrystalPlacement(int slotIndex)
		{
		}

		[Token(Token = "0x6001901")]
		[Address(RVA = "0xE8BA10", Offset = "0xE8BA10", VA = "0xE8BA10")]
		private void OnFinishedCrystalPlacement(int slotIndex)
		{
		}

		[Token(Token = "0x6001902")]
		[Address(RVA = "0xE8B8A4", Offset = "0xE8B8A4", VA = "0xE8B8A4")]
		private void LightUpAltarSlot(int index)
		{
		}

		[Token(Token = "0x6001903")]
		[Address(RVA = "0xE8B908", Offset = "0xE8B908", VA = "0xE8B908")]
		private void CheckPuzzleCompletion(bool checkFromSaveState = false)
		{
		}

		[Token(Token = "0x6001904")]
		[Address(RVA = "0xE8BAA0", Offset = "0xE8BAA0", VA = "0xE8BAA0")]
		private void ShowAsCompleted()
		{
		}

		[Token(Token = "0x6001905")]
		[Address(RVA = "0xE8BA9C", Offset = "0xE8BA9C", VA = "0xE8BA9C")]
		public void PlaySolveSound()
		{
		}

		[Token(Token = "0x6001906")]
		[Address(RVA = "0xE8BA44", Offset = "0xE8BA44", VA = "0xE8BA44")]
		private void ShowSolvedAnimation()
		{
		}

		[Token(Token = "0x6001907")]
		[Address(RVA = "0xE8BC0C", Offset = "0xE8BC0C", VA = "0xE8BC0C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x98FCA4", Offset = "0x98FCA4")]
		private IEnumerator StatueAnimationRoutine()
		{
			return null;
		}

		[Token(Token = "0x6001908")]
		[Address(RVA = "0xE8BB58", Offset = "0xE8BB58", VA = "0xE8BB58")]
		private void TryActivateFlower()
		{
		}

		[Token(Token = "0x6001909")]
		[Address(RVA = "0xE8BCB4", Offset = "0xE8BCB4", VA = "0xE8BCB4")]
		public void ShowGod()
		{
		}

		[Token(Token = "0x600190A")]
		[Address(RVA = "0xE8BB38", Offset = "0xE8BB38", VA = "0xE8BB38")]
		public void HideStatue()
		{
		}

		[Token(Token = "0x600190B")]
		[Address(RVA = "0xE8BD50", Offset = "0xE8BD50", VA = "0xE8BD50")]
		public void GodReactsToPlayer()
		{
		}

		[Token(Token = "0x600190C")]
		[Address(RVA = "0xE8BDD4", Offset = "0xE8BDD4", VA = "0xE8BDD4")]
		public void ShowFlower()
		{
		}

		[Token(Token = "0x600190D")]
		[Address(RVA = "0xE8BDF4", Offset = "0xE8BDF4", VA = "0xE8BDF4")]
		public BambooIslandAltar()
		{
		}
	}
	[Token(Token = "0x200042C")]
	public class BambooIslandGodAnimation : MonoBehaviour
	{
		[Token(Token = "0x40018AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private BambooIslandAltar m_Altar;

		[Token(Token = "0x40018AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private SphereCollider m_godReactionToPlayerCollider;

		[Token(Token = "0x40018B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private NeatAudioPlayer audioPlayer;

		[Token(Token = "0x40018B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private NeatAudioCue reactToPlayerCue;

		[Token(Token = "0x40018B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private NeatAudioCue waveCue;

		[Token(Token = "0x40018B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private NeatAudioCue summonFlowerCue;

		[Token(Token = "0x6001915")]
		[Address(RVA = "0xE8C09C", Offset = "0xE8C09C", VA = "0xE8C09C")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x6001916")]
		[Address(RVA = "0xE8C0B4", Offset = "0xE8C0B4", VA = "0xE8C0B4")]
		public void EnablePlayerInteraction()
		{
		}

		[Token(Token = "0x6001917")]
		[Address(RVA = "0xE8C0D4", Offset = "0xE8C0D4", VA = "0xE8C0D4")]
		public void SummonFlower()
		{
		}

		[Token(Token = "0x6001918")]
		[Address(RVA = "0xE8C0EC", Offset = "0xE8C0EC", VA = "0xE8C0EC")]
		public void WaterEffects()
		{
		}

		[Token(Token = "0x6001919")]
		[Address(RVA = "0xE8C0F0", Offset = "0xE8C0F0", VA = "0xE8C0F0")]
		public void RaiseArms()
		{
		}

		[Token(Token = "0x600191A")]
		[Address(RVA = "0xE8C1C4", Offset = "0xE8C1C4", VA = "0xE8C1C4")]
		public void Wave()
		{
		}

		[Token(Token = "0x600191B")]
		[Address(RVA = "0xE8C298", Offset = "0xE8C298", VA = "0xE8C298")]
		public void ReactToPlayer()
		{
		}

		[Token(Token = "0x600191C")]
		[Address(RVA = "0xE8C36C", Offset = "0xE8C36C", VA = "0xE8C36C")]
		public void TriggerCoralTreeBud()
		{
		}

		[Token(Token = "0x600191D")]
		[Address(RVA = "0xE8C370", Offset = "0xE8C370", VA = "0xE8C370")]
		public void SpawnGrabbableCrystal()
		{
		}

		[Token(Token = "0x600191E")]
		[Address(RVA = "0xE8C3F8", Offset = "0xE8C3F8", VA = "0xE8C3F8")]
		public void DisableGod()
		{
		}

		[Token(Token = "0x600191F")]
		[Address(RVA = "0xE8C49C", Offset = "0xE8C49C", VA = "0xE8C49C")]
		public BambooIslandGodAnimation()
		{
		}
	}
	[Token(Token = "0x200042D")]
	public class BambooIslandStatueAnimation : MonoBehaviour
	{
		[Token(Token = "0x40018B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private BambooIslandAltar m_altar;

		[Token(Token = "0x6001920")]
		[Address(RVA = "0xE8C4A4", Offset = "0xE8C4A4", VA = "0xE8C4A4")]
		public void ShowGod()
		{
		}

		[Token(Token = "0x6001921")]
		[Address(RVA = "0xE8C4BC", Offset = "0xE8C4BC", VA = "0xE8C4BC")]
		public void HideStatue()
		{
		}

		[Token(Token = "0x6001922")]
		[Address(RVA = "0xE8C4D4", Offset = "0xE8C4D4", VA = "0xE8C4D4")]
		public BambooIslandStatueAnimation()
		{
		}
	}
}
namespace NeatCorp.Player.MovingPlafrom
{
	[Token(Token = "0x200042E")]
	public interface IMovingPlatform
	{
		[Token(Token = "0x6001923")]
		Vector3 GetVelocity();
	}
}
namespace NeatCorp.Player.Glove
{
	[Token(Token = "0x200042F")]
	public class GloveGem : SaveableComponent, IInitializable, IGloveBlobReactable
	{
		[Token(Token = "0x2000430")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x973604", Offset = "0x973604")]
		private sealed class <MoveToInfusePosition>d__38 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40018C5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40018C6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40018C7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public GloveGem <>4__this;

			[Token(Token = "0x40018C8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public bool playSound;

			[Token(Token = "0x40018C9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private Rigidbody <rigidbody>5__2;

			[Token(Token = "0x40018CA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private float <maxFuseTime>5__3;

			[Token(Token = "0x17000293")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600193B")]
				[Address(RVA = "0xDA1DD8", Offset = "0xDA1DD8", VA = "0xDA1DD8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000294")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600193D")]
				[Address(RVA = "0xDA1E40", Offset = "0xDA1E40", VA = "0xDA1E40", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001938")]
			[Address(RVA = "0xDA1618", Offset = "0xDA1618", VA = "0xDA1618")]
			[DebuggerHidden]
			public <MoveToInfusePosition>d__38(int <>1__state)
			{
			}

			[Token(Token = "0x6001939")]
			[Address(RVA = "0xDA1678", Offset = "0xDA1678", VA = "0xDA1678", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600193A")]
			[Address(RVA = "0xDA167C", Offset = "0xDA167C", VA = "0xDA167C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600193C")]
			[Address(RVA = "0xDA1DE0", Offset = "0xDA1DE0", VA = "0xDA1DE0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40018B5")]
		private const float FuseDistance = 0.01f;

		[Token(Token = "0x40018B6")]
		private const float FuseSqrDistance = 0.0001f;

		[Token(Token = "0x40018B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Stashable m_stashable;

		[Token(Token = "0x40018B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private AnimationCurve m_animationCurve;

		[Token(Token = "0x40018B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private AudioSource m_audioSource;

		[Token(Token = "0x40018BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private AudioClip m_fuseHandClip;

		[Token(Token = "0x40018BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private AudioClip m_fuseClip;

		[Token(Token = "0x40018BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private bool m_resetPositionAfterDelay;

		[Token(Token = "0x40018BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Coroutine m_infuseRoutine;

		[Token(Token = "0x40018BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Transform m_infusionTransform;

		[Token(Token = "0x40018BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Action<GemType> m_onInfusionCompleted;

		[Token(Token = "0x40018C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private float m_fuseTime;

		[Token(Token = "0x40018C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private bool m_isFusing;

		[Token(Token = "0x40018C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x75")]
		private bool m_wasGrabbed;

		[Token(Token = "0x40018C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private OrientedPoint m_spawnPoint;

		[Token(Token = "0x40018C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x97D230", Offset = "0x97D230")]
		private readonly GemType <AssociatedGemType>k__BackingField;

		[Token(Token = "0x1700028C")]
		public GemType GemType
		{
			[Token(Token = "0x6001924")]
			[Address(RVA = "0xDA0CE8", Offset = "0xDA0CE8", VA = "0xDA0CE8")]
			get
			{
				return default(GemType);
			}
		}

		[Token(Token = "0x1700028D")]
		public bool IsFusing
		{
			[Token(Token = "0x6001925")]
			[Address(RVA = "0xDA0CF4", Offset = "0xDA0CF4", VA = "0xDA0CF4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700028E")]
		public bool IsHeld
		{
			[Token(Token = "0x6001926")]
			[Address(RVA = "0xDA0CFC", Offset = "0xDA0CFC", VA = "0xDA0CFC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700028F")]
		public bool IsStashed
		{
			[Token(Token = "0x6001927")]
			[Address(RVA = "0xDA0D18", Offset = "0xDA0D18", VA = "0xDA0D18")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000290")]
		public Grabbable Grabbable
		{
			[Token(Token = "0x6001928")]
			[Address(RVA = "0xD9FED8", Offset = "0xD9FED8", VA = "0xD9FED8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000291")]
		public bool ResetPositionAfterDelay
		{
			[Token(Token = "0x6001929")]
			[Address(RVA = "0xDA0D34", Offset = "0xDA0D34", VA = "0xDA0D34")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000292")]
		protected virtual GemType AssociatedGemType
		{
			[Token(Token = "0x600192A")]
			[Address(RVA = "0xDA0D3C", Offset = "0xDA0D3C", VA = "0xDA0D3C", Slot = "9")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x98FD58", Offset = "0x98FD58")]
			get
			{
				return default(GemType);
			}
		}

		[Token(Token = "0x600192B")]
		[Address(RVA = "0xDA0D44", Offset = "0xDA0D44", VA = "0xDA0D44")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600192C")]
		[Address(RVA = "0xDA0E8C", Offset = "0xDA0E8C", VA = "0xDA0E8C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x600192D")]
		[Address(RVA = "0xDA0FD4", Offset = "0xDA0FD4", VA = "0xDA0FD4")]
		private void OnGrabbed(Grabbable grabbable)
		{
		}

		[Token(Token = "0x600192E")]
		[Address(RVA = "0xDA1094", Offset = "0xDA1094", VA = "0xDA1094")]
		private void OnDropped(Grabbable grabbable)
		{
		}

		[Token(Token = "0x600192F")]
		[Address(RVA = "0xDA1148", Offset = "0xDA1148", VA = "0xDA1148", Slot = "4")]
		public override ComponentState CreateState()
		{
			return null;
		}

		[Token(Token = "0x6001930")]
		[Address(RVA = "0xDA1354", Offset = "0xDA1354", VA = "0xDA1354", Slot = "5")]
		public void Initialize()
		{
		}

		[Token(Token = "0x6001931")]
		[Address(RVA = "0xDA14BC", Offset = "0xDA14BC", VA = "0xDA14BC")]
		public bool TryToInfuseInto(ref Transform infusionTransform, Action<GemType> OnInfusionCompleted)
		{
			return default(bool);
		}

		[Token(Token = "0x6001932")]
		[Address(RVA = "0xD9FE0C", Offset = "0xD9FE0C", VA = "0xD9FE0C")]
		public bool TryToInfuseIntoGlove(bool isRightHand, ref Transform gloveGemTransform, Action<GemType> OnInfusionCompleted)
		{
			return default(bool);
		}

		[Token(Token = "0x6001933")]
		[Address(RVA = "0xDA1588", Offset = "0xDA1588", VA = "0xDA1588")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x98FD68", Offset = "0x98FD68")]
		private IEnumerator MoveToInfusePosition(bool playSound = false)
		{
			return null;
		}

		[Token(Token = "0x6001934")]
		[Address(RVA = "0xDA1644", Offset = "0xDA1644", VA = "0xDA1644", Slot = "6")]
		public Grabbable GetGrabbable()
		{
			return null;
		}

		[Token(Token = "0x6001935")]
		[Address(RVA = "0xDA1660", Offset = "0xDA1660", VA = "0xDA1660", Slot = "7")]
		public GameObject GetGameObject()
		{
			return null;
		}

		[Token(Token = "0x6001936")]
		[Address(RVA = "0xDA1668", Offset = "0xDA1668", VA = "0xDA1668", Slot = "10")]
		public virtual GloveBlobReactionColors GetReactionColors()
		{
			return default(GloveBlobReactionColors);
		}

		[Token(Token = "0x6001937")]
		[Address(RVA = "0xD9E994", Offset = "0xD9E994", VA = "0xD9E994")]
		public GloveGem()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000431")]
	public class GloveGemState : ComponentState
	{
		[Token(Token = "0x40018CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public OrientedPointSerializable spawnPoint;

		[Token(Token = "0x40018CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public bool shouldResetPositionOnLoad;

		[Token(Token = "0x600193E")]
		[Address(RVA = "0xDA12D0", Offset = "0xDA12D0", VA = "0xDA12D0")]
		public GloveGemState(OrientedPoint point, bool resetPosition)
		{
		}
	}
	[Token(Token = "0x2000432")]
	public class Glove : MonoBehaviour
	{
		[Token(Token = "0x2000433")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x973614", Offset = "0x973614")]
		private sealed class <InfuseAnimationRoutine>d__43 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40018DF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40018E0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40018E1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public GemType gemType;

			[Token(Token = "0x40018E2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Glove <>4__this;

			[Token(Token = "0x17000298")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600195D")]
				[Address(RVA = "0xDA0C78", Offset = "0xDA0C78", VA = "0xDA0C78", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000299")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600195F")]
				[Address(RVA = "0xDA0CE0", Offset = "0xDA0CE0", VA = "0xDA0CE0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600195A")]
			[Address(RVA = "0xDA07EC", Offset = "0xDA07EC", VA = "0xDA07EC")]
			[DebuggerHidden]
			public <InfuseAnimationRoutine>d__43(int <>1__state)
			{
			}

			[Token(Token = "0x600195B")]
			[Address(RVA = "0xDA09EC", Offset = "0xDA09EC", VA = "0xDA09EC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600195C")]
			[Address(RVA = "0xDA09F0", Offset = "0xDA09F0", VA = "0xDA09F0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600195E")]
			[Address(RVA = "0xDA0C80", Offset = "0xDA0C80", VA = "0xDA0C80", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40018CD")]
		private const float InfuseAnimationDuration = 1f;

		[Token(Token = "0x40018CE")]
		public const int AbilityCount = 1;

		[Token(Token = "0x40018CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static float MAX_INFUSE_DISTANCE;

		[Token(Token = "0x40018D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public static float MAX_INFUSE_REACTION_DISTANCE;

		[Token(Token = "0x40018D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private FastTravel m_fastTravel;

		[Token(Token = "0x40018D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Transform m_gemTransform;

		[Token(Token = "0x40018D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private PlayerHandAnimator m_playerHandAnimator;

		[Token(Token = "0x40018D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private List<GloveAbility> m_gloveAbilities;

		[Token(Token = "0x40018D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private GloveGem m_hoveringGem;

		[Token(Token = "0x40018D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private readonly WaitForSeconds m_waitForInfuseAnimationInstruction;

		[Token(Token = "0x40018D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Coroutine m_infuseAnimationRoutine;

		[Token(Token = "0x40018D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private bool m_hasPlacementFeedback;

		[Token(Token = "0x40018D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x97D270", Offset = "0x97D270")]
		private bool <IsRight>k__BackingField;

		[Token(Token = "0x40018DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x97D280", Offset = "0x97D280")]
		private GemType <GemShape>k__BackingField;

		[Token(Token = "0x40018DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x97D290", Offset = "0x97D290")]
		private GloveAbility <Ability>k__BackingField;

		[Token(Token = "0x40018DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private PlayerHand PlacementReactionHand;

		[Token(Token = "0x40018DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private IGloveBlobReactable PlacementReactionObject;

		[Token(Token = "0x40018DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public AnimationCurve GemPlacementFeedbackCurve;

		[Token(Token = "0x17000295")]
		public bool IsRight
		{
			[Token(Token = "0x600193F")]
			[Address(RVA = "0xD9F320", Offset = "0xD9F320", VA = "0xD9F320")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x98FE1C", Offset = "0x98FE1C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001940")]
			[Address(RVA = "0xD9F328", Offset = "0xD9F328", VA = "0xD9F328")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x98FE2C", Offset = "0x98FE2C")]
			set
			{
			}
		}

		[Token(Token = "0x17000296")]
		public GemType GemShape
		{
			[Token(Token = "0x6001941")]
			[Address(RVA = "0xD9F334", Offset = "0xD9F334", VA = "0xD9F334")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x98FE3C", Offset = "0x98FE3C")]
			get
			{
				return default(GemType);
			}
			[Token(Token = "0x6001942")]
			[Address(RVA = "0xD9F33C", Offset = "0xD9F33C", VA = "0xD9F33C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x98FE4C", Offset = "0x98FE4C")]
			private set
			{
			}
		}

		[Token(Token = "0x17000297")]
		public GloveAbility Ability
		{
			[Token(Token = "0x6001943")]
			[Address(RVA = "0xD9F344", Offset = "0xD9F344", VA = "0xD9F344")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x98FE5C", Offset = "0x98FE5C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001944")]
			[Address(RVA = "0xD9F34C", Offset = "0xD9F34C", VA = "0xD9F34C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x98FE6C", Offset = "0x98FE6C")]
			private set
			{
			}
		}

		[Token(Token = "0x6001945")]
		[Address(RVA = "0xD9F354", Offset = "0xD9F354", VA = "0xD9F354")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001946")]
		[Address(RVA = "0xD9F4BC", Offset = "0xD9F4BC", VA = "0xD9F4BC")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001947")]
		[Address(RVA = "0xD9F624", Offset = "0xD9F624", VA = "0xD9F624")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001948")]
		[Address(RVA = "0xD9F680", Offset = "0xD9F680", VA = "0xD9F680")]
		private void OnGemGrabbedEvent(GemGrabbedEvent e)
		{
		}

		[Token(Token = "0x6001949")]
		[Address(RVA = "0xD9F930", Offset = "0xD9F930", VA = "0xD9F930")]
		private void OnGemDroppedEvent(GemDroppedEvent e)
		{
		}

		[Token(Token = "0x600194A")]
		[Address(RVA = "0xD9FC0C", Offset = "0xD9FC0C", VA = "0xD9FC0C")]
		public static bool ReactibleCloseEnoughForInfuse(IGloveBlobReactable inReactable, Glove targetGlove)
		{
			return default(bool);
		}

		[Token(Token = "0x600194B")]
		[Address(RVA = "0xD9F7DC", Offset = "0xD9F7DC", VA = "0xD9F7DC")]
		public void StartPlacementFeedback(PlayerHand playerHand, IGloveBlobReactable inReactable)
		{
		}

		[Token(Token = "0x600194C")]
		[Address(RVA = "0xD9FFEC", Offset = "0xD9FFEC", VA = "0xD9FFEC")]
		private void LoopPlacementFeedback(PlayerHand playerHand, IGloveBlobReactable inGem)
		{
		}

		[Token(Token = "0x600194D")]
		[Address(RVA = "0xDA0278", Offset = "0xDA0278", VA = "0xDA0278")]
		public void PlacementFeedbackCallback()
		{
		}

		[Token(Token = "0x600194E")]
		[Address(RVA = "0xD9FEF4", Offset = "0xD9FEF4", VA = "0xD9FEF4")]
		public void StopPlacementFeedback(PlayerHand playerHand, bool updateAnimation = true)
		{
		}

		[Token(Token = "0x600194F")]
		[Address(RVA = "0xDA0310", Offset = "0xDA0310", VA = "0xDA0310")]
		private void OnGemInfused(GemInfusedEvent e)
		{
		}

		[Token(Token = "0x6001950")]
		[Address(RVA = "0xDA0354", Offset = "0xDA0354", VA = "0xDA0354")]
		public void SetGloveType(GemType gemShape, bool isEquippedInRightGlove)
		{
		}

		[Token(Token = "0x6001951")]
		[Address(RVA = "0xDA03A4", Offset = "0xDA03A4", VA = "0xDA03A4")]
		public void SetAbility(GloveAbility ability, bool isEquippedInRightGlove = true)
		{
		}

		[Token(Token = "0x6001952")]
		[Address(RVA = "0xDA04FC", Offset = "0xDA04FC", VA = "0xDA04FC")]
		private bool IsAbilityActive(GemType gemType)
		{
			return default(bool);
		}

		[Token(Token = "0x6001953")]
		[Address(RVA = "0xDA05A8", Offset = "0xDA05A8", VA = "0xDA05A8")]
		public bool OnInputActionPressed(NeatVR_Controller.InputAction inputAction)
		{
			return default(bool);
		}

		[Token(Token = "0x6001954")]
		[Address(RVA = "0xDA065C", Offset = "0xDA065C", VA = "0xDA065C")]
		private void OnInfusionCompleted(GemType gemType)
		{
		}

		[Token(Token = "0x6001955")]
		[Address(RVA = "0xDA0760", Offset = "0xDA0760", VA = "0xDA0760")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x98FE7C", Offset = "0x98FE7C")]
		private IEnumerator InfuseAnimationRoutine(GemType gemType)
		{
			return null;
		}

		[Token(Token = "0x6001956")]
		[Address(RVA = "0xDA0818", Offset = "0xDA0818", VA = "0xDA0818")]
		public bool OnInputActionReleased(NeatVR_Controller.InputAction inputAction)
		{
			return default(bool);
		}

		[Token(Token = "0x6001957")]
		[Address(RVA = "0xDA08CC", Offset = "0xDA08CC", VA = "0xDA08CC")]
		public Transform GetGemTransform()
		{
			return null;
		}

		[Token(Token = "0x6001958")]
		[Address(RVA = "0xDA08D4", Offset = "0xDA08D4", VA = "0xDA08D4")]
		public Glove()
		{
		}
	}
}
namespace NeatCorp.Player.Glove.Gems
{
	[Token(Token = "0x2000434")]
	public class BambooShard : GloveGem
	{
		[Token(Token = "0x40018E3")]
		private const GemType GemTypeConstant = GemType.Bamboo;

		[Token(Token = "0x1700029A")]
		protected override GemType AssociatedGemType
		{
			[Token(Token = "0x6001960")]
			[Address(RVA = "0xD9E984", Offset = "0xD9E984", VA = "0xD9E984", Slot = "9")]
			get
			{
				return default(GemType);
			}
		}

		[Token(Token = "0x6001961")]
		[Address(RVA = "0xD9E98C", Offset = "0xD9E98C", VA = "0xD9E98C")]
		public BambooShard()
		{
		}
	}
	[Token(Token = "0x2000435")]
	public class CoralShard : GloveGem
	{
		[Token(Token = "0x40018E4")]
		private const GemType GemTypeConstant = GemType.Coral;

		[Token(Token = "0x1700029B")]
		protected override GemType AssociatedGemType
		{
			[Token(Token = "0x6001962")]
			[Address(RVA = "0xD9E99C", Offset = "0xD9E99C", VA = "0xD9E99C", Slot = "9")]
			get
			{
				return default(GemType);
			}
		}

		[Token(Token = "0x6001963")]
		[Address(RVA = "0xD9E9A4", Offset = "0xD9E9A4", VA = "0xD9E9A4")]
		public CoralShard()
		{
		}
	}
	[Token(Token = "0x2000436")]
	public class CrystalShard : GloveGem
	{
		[Token(Token = "0x40018E5")]
		private const GemType GemTypeConstant = GemType.Crystal;

		[Token(Token = "0x1700029C")]
		protected override GemType AssociatedGemType
		{
			[Token(Token = "0x6001964")]
			[Address(RVA = "0xD9E9AC", Offset = "0xD9E9AC", VA = "0xD9E9AC", Slot = "9")]
			get
			{
				return default(GemType);
			}
		}

		[Token(Token = "0x6001965")]
		[Address(RVA = "0xD9E9B4", Offset = "0xD9E9B4", VA = "0xD9E9B4")]
		public CrystalShard()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000437")]
	public enum GemType
	{
		[Token(Token = "0x40018E7")]
		Defualt,
		[Token(Token = "0x40018E8")]
		Crystal,
		[Token(Token = "0x40018E9")]
		Coral,
		[Token(Token = "0x40018EA")]
		Bamboo,
		[Token(Token = "0x40018EB")]
		Tutorial,
		[Token(Token = "0x40018EC")]
		Teleport,
		[Token(Token = "0x40018ED")]
		Homeland
	}
	[Token(Token = "0x2000438")]
	public class Gem
	{
		[Token(Token = "0x6001966")]
		[Address(RVA = "0xD9E9BC", Offset = "0xD9E9BC", VA = "0xD9E9BC")]
		public static bool CanBeInfusedInGlove(GemType gemType)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000439")]
	public class HomelandShard : GloveGem
	{
		[Token(Token = "0x40018EE")]
		private const GemType GemTypeConstant = GemType.Homeland;

		[Token(Token = "0x1700029D")]
		protected override GemType AssociatedGemType
		{
			[Token(Token = "0x6001967")]
			[Address(RVA = "0xD9E9CC", Offset = "0xD9E9CC", VA = "0xD9E9CC", Slot = "9")]
			get
			{
				return default(GemType);
			}
		}

		[Token(Token = "0x6001968")]
		[Address(RVA = "0xD9E9D4", Offset = "0xD9E9D4", VA = "0xD9E9D4")]
		public HomelandShard()
		{
		}
	}
	[Token(Token = "0x200043A")]
	public class InfusableShard : GloveGem
	{
		[Token(Token = "0x40018EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[SerializeField]
		private MeshRenderer shardRenderer;

		[Token(Token = "0x40018F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[SerializeField]
		private ParticleSystem particles;

		[Token(Token = "0x40018F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private Color m_centerColor;

		[Token(Token = "0x40018F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private Color m_innerColor;

		[Token(Token = "0x40018F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private Color m_outerColor;

		[Token(Token = "0x40018F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static int CenterColorId;

		[Token(Token = "0x40018F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private static int InnerColorId;

		[Token(Token = "0x40018F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static int OuterColorId;

		[Token(Token = "0x40018F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private MaterialPropertyBlock mpb;

		[Token(Token = "0x1700029E")]
		public Color CenterColor
		{
			[Token(Token = "0x6001969")]
			[Address(RVA = "0xD9E9DC", Offset = "0xD9E9DC", VA = "0xD9E9DC")]
			get
			{
				return default(Color);
			}
		}

		[Token(Token = "0x1700029F")]
		public Color InnerColor
		{
			[Token(Token = "0x600196A")]
			[Address(RVA = "0xD9E9E8", Offset = "0xD9E9E8", VA = "0xD9E9E8")]
			get
			{
				return default(Color);
			}
		}

		[Token(Token = "0x170002A0")]
		public Color OuterColor
		{
			[Token(Token = "0x600196B")]
			[Address(RVA = "0xD9E9F4", Offset = "0xD9E9F4", VA = "0xD9E9F4")]
			get
			{
				return default(Color);
			}
		}

		[Token(Token = "0x600196C")]
		[Address(RVA = "0xD9EA00", Offset = "0xD9EA00", VA = "0xD9EA00")]
		private void Awake()
		{
		}

		[Token(Token = "0x600196D")]
		[Address(RVA = "0xD9EBBC", Offset = "0xD9EBBC", VA = "0xD9EBBC")]
		public void SetTarget(Vector3 targetLocation, float attractStateVal)
		{
		}

		[Token(Token = "0x600196E")]
		[Address(RVA = "0xD9EEBC", Offset = "0xD9EEBC", VA = "0xD9EEBC")]
		public void ResetTarget()
		{
		}

		[Token(Token = "0x600196F")]
		[Address(RVA = "0xD9F014", Offset = "0xD9F014", VA = "0xD9F014", Slot = "10")]
		public override GloveBlobReactionColors GetReactionColors()
		{
			return default(GloveBlobReactionColors);
		}

		[Token(Token = "0x6001970")]
		[Address(RVA = "0xD9F02C", Offset = "0xD9F02C", VA = "0xD9F02C")]
		public InfusableShard()
		{
		}
	}
	[Token(Token = "0x200043B")]
	public class LoopGemPlacementFeedback : GameEvent
	{
		[Token(Token = "0x40018F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public PlayerHand hand;

		[Token(Token = "0x40018F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float amplitude;

		[Token(Token = "0x40018FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float duration;

		[Token(Token = "0x40018FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AnimationCurve hapticCurve;

		[Token(Token = "0x40018FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Action callback;

		[Token(Token = "0x6001972")]
		[Address(RVA = "0xD9F124", Offset = "0xD9F124", VA = "0xD9F124")]
		public LoopGemPlacementFeedback(PlayerHand hand, float amplitude, float duration, AnimationCurve hapticCurve, Action callback)
		{
		}
	}
	[Token(Token = "0x200043C")]
	public class StartGemPlacementFeedback : GameEvent
	{
		[Token(Token = "0x40018FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public PlayerHand hand;

		[Token(Token = "0x40018FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float amplitude;

		[Token(Token = "0x40018FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float duration;

		[Token(Token = "0x4001900")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AnimationCurve hapticCurve;

		[Token(Token = "0x4001901")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Action callback;

		[Token(Token = "0x6001973")]
		[Address(RVA = "0xD9F19C", Offset = "0xD9F19C", VA = "0xD9F19C")]
		public StartGemPlacementFeedback(PlayerHand hand, float amplitude, float duration, AnimationCurve hapticCurve, Action callback)
		{
		}
	}
	[Token(Token = "0x200043D")]
	public class StopGemPlacementFeedback : GameEvent
	{
		[Token(Token = "0x4001902")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public PlayerHand hand;

		[Token(Token = "0x6001974")]
		[Address(RVA = "0xD9F214", Offset = "0xD9F214", VA = "0xD9F214")]
		public StopGemPlacementFeedback(PlayerHand hand)
		{
		}
	}
	[Token(Token = "0x200043E")]
	public class TeleportShard : InfusableShard
	{
		[Token(Token = "0x4001903")]
		private const GemType GemTypeConstant = GemType.Teleport;

		[Token(Token = "0x170002A1")]
		protected override GemType AssociatedGemType
		{
			[Token(Token = "0x6001975")]
			[Address(RVA = "0xD9F248", Offset = "0xD9F248", VA = "0xD9F248", Slot = "9")]
			get
			{
				return default(GemType);
			}
		}

		[Token(Token = "0x6001976")]
		[Address(RVA = "0xD9F250", Offset = "0xD9F250", VA = "0xD9F250")]
		public TeleportShard()
		{
		}
	}
	[Token(Token = "0x200043F")]
	public class TutorialShard : InfusableShard
	{
		[Token(Token = "0x4001904")]
		private const GemType GemTypeConstant = GemType.Tutorial;

		[Token(Token = "0x170002A2")]
		protected override GemType AssociatedGemType
		{
			[Token(Token = "0x6001977")]
			[Address(RVA = "0xD9F2B4", Offset = "0xD9F2B4", VA = "0xD9F2B4", Slot = "9")]
			get
			{
				return default(GemType);
			}
		}

		[Token(Token = "0x6001978")]
		[Address(RVA = "0xD9F2BC", Offset = "0xD9F2BC", VA = "0xD9F2BC")]
		public TutorialShard()
		{
		}
	}
}
namespace NeatCorp.Player.Glove.Ability
{
	[Token(Token = "0x2000440")]
	public class FastTravel : GloveAbility
	{
		[Token(Token = "0x2000441")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x973624", Offset = "0x973624")]
		private sealed class <ReactToBeacon>d__69 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001926")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001927")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001928")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public FastTravel <>4__this;

			[Token(Token = "0x170002A5")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60019A6")]
				[Address(RVA = "0xD9E904", Offset = "0xD9E904", VA = "0xD9E904", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002A6")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60019A8")]
				[Address(RVA = "0xD9E96C", Offset = "0xD9E96C", VA = "0xD9E96C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60019A3")]
			[Address(RVA = "0xD9E500", Offset = "0xD9E500", VA = "0xD9E500")]
			[DebuggerHidden]
			public <ReactToBeacon>d__69(int <>1__state)
			{
			}

			[Token(Token = "0x60019A4")]
			[Address(RVA = "0xD9E884", Offset = "0xD9E884", VA = "0xD9E884", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60019A5")]
			[Address(RVA = "0xD9E888", Offset = "0xD9E888", VA = "0xD9E888", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60019A7")]
			[Address(RVA = "0xD9E90C", Offset = "0xD9E90C", VA = "0xD9E90C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000442")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x973634", Offset = "0x973634")]
		private sealed class <ChargingRoutine>d__73 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001929")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400192A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400192B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public FastTravel <>4__this;

			[Token(Token = "0x170002A7")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60019AC")]
				[Address(RVA = "0xD9E814", Offset = "0xD9E814", VA = "0xD9E814", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002A8")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60019AE")]
				[Address(RVA = "0xD9E87C", Offset = "0xD9E87C", VA = "0xD9E87C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60019A9")]
			[Address(RVA = "0xD9E5F0", Offset = "0xD9E5F0", VA = "0xD9E5F0")]
			[DebuggerHidden]
			public <ChargingRoutine>d__73(int <>1__state)
			{
			}

			[Token(Token = "0x60019AA")]
			[Address(RVA = "0xD9E73C", Offset = "0xD9E73C", VA = "0xD9E73C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60019AB")]
			[Address(RVA = "0xD9E740", Offset = "0xD9E740", VA = "0xD9E740", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60019AD")]
			[Address(RVA = "0xD9E81C", Offset = "0xD9E81C", VA = "0xD9E81C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001905")]
		private const float FullyChargedDuration = 0.25f;

		[Token(Token = "0x4001906")]
		private const float AimActivationTolerance = 0.45f;

		[Token(Token = "0x4001907")]
		private const float FOVActivationTolerance = 0.45f;

		[Token(Token = "0x4001908")]
		private const float LockTolerance = 0.25f;

		[Token(Token = "0x4001909")]
		private const float ReactionTime = 0.15f;

		[Token(Token = "0x400190A")]
		private const float MaxPitchOffset = 0.1f;

		[Token(Token = "0x400190B")]
		private const float PitchFactor = 10f;

		[Token(Token = "0x400190C")]
		public const float MaxAimDistance = 100f;

		[Token(Token = "0x400190D")]
		public const float MinTargetingSqrDistance = 25f;

		[Token(Token = "0x400190E")]
		public const float MaxTargetingSqrDistance = 10000f;

		[Token(Token = "0x400190F")]
		public const GemType AbilityGemeType = GemType.Teleport;

		[Token(Token = "0x4001910")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Transform m_aimDirection;

		[Token(Token = "0x4001911")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private PlayerHandAnimator m_playerHandAnimator;

		[Token(Token = "0x4001912")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private AudioSource m_audioSource;

		[Token(Token = "0x4001913")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private AudioClip m_teleportSoundClip;

		[Token(Token = "0x4001914")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private ParticleSystem m_chargingParticleSystem;

		[Token(Token = "0x4001915")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private List<CrystalBeacon> m_beacons;

		[Token(Token = "0x4001916")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private CrystalBeacon m_lastSelectedBeacon;

		[Token(Token = "0x4001917")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private CrystalBeacon m_selectedBeacon;

		[Token(Token = "0x4001918")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private bool m_wasArcVisible;

		[Token(Token = "0x4001919")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
		private bool m_hasSelectedBeacon;

		[Token(Token = "0x400191A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x62")]
		private bool m_hasChangedSelection;

		[Token(Token = "0x400191B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x63")]
		private bool m_isSelectionLocked;

		[Token(Token = "0x400191C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private int currentlyTestedBeaconIndex;

		[Token(Token = "0x400191D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private OptimizedCollection<CrystalBeacon> m_beaconsWithinTarget;

		[Token(Token = "0x400191E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private OptimizedCollection<CrystalBeacon> m_beaconsToRegister;

		[Token(Token = "0x400191F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private float m_chargeDuration;

		[Token(Token = "0x4001920")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private bool m_isButtonDown;

		[Token(Token = "0x4001921")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8D")]
		private bool m_isWaitingForReaction;

		[Token(Token = "0x4001922")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private CrystalBeacon m_reactingToBeacon;

		[Token(Token = "0x4001923")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Coroutine m_chargingRoutine;

		[Token(Token = "0x4001924")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private Coroutine m_reactionRoutine;

		[Token(Token = "0x4001925")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private readonly WaitForSeconds m_waitForReactionDuration;

		[Token(Token = "0x170002A3")]
		public Ray AimRay
		{
			[Token(Token = "0x6001979")]
			[Address(RVA = "0xD9C71C", Offset = "0xD9C71C", VA = "0xD9C71C")]
			get
			{
				return default(Ray);
			}
		}

		[Token(Token = "0x170002A4")]
		public override GemType AssociatedGemType
		{
			[Token(Token = "0x600197A")]
			[Address(RVA = "0xD9C7A8", Offset = "0xD9C7A8", VA = "0xD9C7A8", Slot = "4")]
			get
			{
				return default(GemType);
			}
		}

		[Token(Token = "0x600197B")]
		[Address(RVA = "0xD9C7B0", Offset = "0xD9C7B0", VA = "0xD9C7B0")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600197C")]
		[Address(RVA = "0xD9C8B8", Offset = "0xD9C8B8", VA = "0xD9C8B8")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x600197D")]
		[Address(RVA = "0xD9C9C0", Offset = "0xD9C9C0", VA = "0xD9C9C0")]
		private void Update()
		{
		}

		[Token(Token = "0x600197E")]
		[Address(RVA = "0xD9CF38", Offset = "0xD9CF38", VA = "0xD9CF38")]
		private void OnCrystalBeaconEnabled(CrystalBeaconEnabledEvent e)
		{
		}

		[Token(Token = "0x600197F")]
		[Address(RVA = "0xD9CFB0", Offset = "0xD9CFB0", VA = "0xD9CFB0")]
		private void OnCrystalBeaconDisabled(CrystalBeaconDisabledEvent e)
		{
		}

		[Token(Token = "0x6001980")]
		[Address(RVA = "0xD9D09C", Offset = "0xD9D09C", VA = "0xD9D09C", Slot = "5")]
		public override void Activate(bool isEquippedInRightGlove)
		{
		}

		[Token(Token = "0x6001981")]
		[Address(RVA = "0xD9D1BC", Offset = "0xD9D1BC", VA = "0xD9D1BC", Slot = "6")]
		public override void Deactivate()
		{
		}

		[Token(Token = "0x6001982")]
		[Address(RVA = "0xD9CB0C", Offset = "0xD9CB0C", VA = "0xD9CB0C")]
		private void ResetEvaluation()
		{
		}

		[Token(Token = "0x6001983")]
		[Address(RVA = "0xD9D2B8", Offset = "0xD9D2B8", VA = "0xD9D2B8")]
		private void SnapLocomotionArcToSelected()
		{
		}

		[Token(Token = "0x6001984")]
		[Address(RVA = "0xD9D404", Offset = "0xD9D404", VA = "0xD9D404")]
		private void ResetLocomotionArc(bool shouldHide = false)
		{
		}

		[Token(Token = "0x6001985")]
		[Address(RVA = "0xD9CB14", Offset = "0xD9CB14", VA = "0xD9CB14")]
		private void FindSelectedBeacon()
		{
		}

		[Token(Token = "0x6001986")]
		[Address(RVA = "0xD9DC4C", Offset = "0xD9DC4C", VA = "0xD9DC4C")]
		private void SetSelectedBeacon(CrystalBeacon beacon, bool hasSelection)
		{
		}

		[Token(Token = "0x6001987")]
		[Address(RVA = "0xD9CADC", Offset = "0xD9CADC", VA = "0xD9CADC")]
		private void ClearSelected()
		{
		}

		[Token(Token = "0x6001988")]
		[Address(RVA = "0xD9CA64", Offset = "0xD9CA64", VA = "0xD9CA64")]
		private void ClearSelectedBeacon()
		{
		}

		[Token(Token = "0x6001989")]
		[Address(RVA = "0xD9D628", Offset = "0xD9D628", VA = "0xD9D628")]
		private bool IsWithinTargetingDistance(Vector3 originToBeacon)
		{
			return default(bool);
		}

		[Token(Token = "0x600198A")]
		[Address(RVA = "0xD9D674", Offset = "0xD9D674", VA = "0xD9D674")]
		private bool IsWithinSightDirection(Vector3 originToBeacon, float tolerance = 0.45f)
		{
			return default(bool);
		}

		[Token(Token = "0x600198B")]
		[Address(RVA = "0xD9DD4C", Offset = "0xD9DD4C", VA = "0xD9DD4C")]
		private bool IsWithinAimDirection(CrystalBeacon beacon, float tolerance = 0.45f)
		{
			return default(bool);
		}

		[Token(Token = "0x600198C")]
		[Address(RVA = "0xD9D774", Offset = "0xD9D774", VA = "0xD9D774")]
		private bool IsWithinAimDirection(Vector3 originToBeacon, float tolerance = 0.45f)
		{
			return default(bool);
		}

		[Token(Token = "0x600198D")]
		[Address(RVA = "0xD9DC48", Offset = "0xD9DC48", VA = "0xD9DC48")]
		private void UpdateBeaconRegistry()
		{
		}

		[Token(Token = "0x600198E")]
		[Address(RVA = "0xD9D878", Offset = "0xD9D878", VA = "0xD9D878")]
		private void EvaluateTargetedBeacons()
		{
		}

		[Token(Token = "0x600198F")]
		[Address(RVA = "0xD9D9E0", Offset = "0xD9D9E0", VA = "0xD9D9E0")]
		private void UpdateBeaconSelection()
		{
		}

		[Token(Token = "0x6001990")]
		[Address(RVA = "0xD9CF50", Offset = "0xD9CF50", VA = "0xD9CF50")]
		public void RegisterBeacon(CrystalBeacon beacon)
		{
		}

		[Token(Token = "0x6001991")]
		[Address(RVA = "0xD9CFC8", Offset = "0xD9CFC8", VA = "0xD9CFC8")]
		public void UnregisterBeacon(CrystalBeacon beacon)
		{
		}

		[Token(Token = "0x6001992")]
		[Address(RVA = "0xD9DED4", Offset = "0xD9DED4", VA = "0xD9DED4")]
		private void AddRegisteredBeacons()
		{
		}

		[Token(Token = "0x6001993")]
		[Address(RVA = "0xD9D534", Offset = "0xD9D534", VA = "0xD9D534")]
		private void ClearOutOldBeacons()
		{
		}

		[Token(Token = "0x6001994")]
		[Address(RVA = "0xD9C720", Offset = "0xD9C720", VA = "0xD9C720")]
		private Ray GetAimRay()
		{
			return default(Ray);
		}

		[Token(Token = "0x6001995")]
		[Address(RVA = "0xD9CE20", Offset = "0xD9CE20", VA = "0xD9CE20")]
		private bool ValidateLock()
		{
			return default(bool);
		}

		[Token(Token = "0x6001996")]
		[Address(RVA = "0xD9E140", Offset = "0xD9E140", VA = "0xD9E140", Slot = "7")]
		public override bool OnTeleportPressed()
		{
			return default(bool);
		}

		[Token(Token = "0x6001997")]
		[Address(RVA = "0xD9CEB8", Offset = "0xD9CEB8", VA = "0xD9CEB8")]
		private void OnTeleportUpdate()
		{
		}

		[Token(Token = "0x6001998")]
		[Address(RVA = "0xD9E2F0", Offset = "0xD9E2F0", VA = "0xD9E2F0", Slot = "8")]
		public override bool OnTeleportReleased()
		{
			return default(bool);
		}

		[Token(Token = "0x6001999")]
		[Address(RVA = "0xD9E15C", Offset = "0xD9E15C", VA = "0xD9E15C")]
		private void UpdateButtonState(bool shouldBeDown)
		{
		}

		[Token(Token = "0x600199A")]
		[Address(RVA = "0xD9DFFC", Offset = "0xD9DFFC", VA = "0xD9DFFC")]
		private void StartReactionRoutine(CrystalBeacon beacon)
		{
		}

		[Token(Token = "0x600199B")]
		[Address(RVA = "0xD9E484", Offset = "0xD9E484", VA = "0xD9E484")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x98FF30", Offset = "0x98FF30")]
		private IEnumerator ReactToBeacon()
		{
			return null;
		}

		[Token(Token = "0x600199C")]
		[Address(RVA = "0xD9DAF0", Offset = "0xD9DAF0", VA = "0xD9DAF0")]
		private void EvaluateReaction()
		{
		}

		[Token(Token = "0x600199D")]
		[Address(RVA = "0xD9E20C", Offset = "0xD9E20C", VA = "0xD9E20C")]
		private void TryStartCharging()
		{
		}

		[Token(Token = "0x600199E")]
		[Address(RVA = "0xD9E064", Offset = "0xD9E064", VA = "0xD9E064")]
		private void TryStopCharging()
		{
		}

		[Token(Token = "0x600199F")]
		[Address(RVA = "0xD9E52C", Offset = "0xD9E52C", VA = "0xD9E52C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x98FF94", Offset = "0x98FF94")]
		private IEnumerator ChargingRoutine()
		{
			return null;
		}

		[Token(Token = "0x60019A0")]
		[Address(RVA = "0xD9E43C", Offset = "0xD9E43C", VA = "0xD9E43C")]
		private void StopParticleSystem(ParticleSystem system)
		{
		}

		[Token(Token = "0x60019A1")]
		[Address(RVA = "0xD9E5A8", Offset = "0xD9E5A8", VA = "0xD9E5A8")]
		private void PlayParticleSystem(ParticleSystem system)
		{
		}

		[Token(Token = "0x60019A2")]
		[Address(RVA = "0xD9E61C", Offset = "0xD9E61C", VA = "0xD9E61C")]
		public FastTravel()
		{
		}
	}
	[Token(Token = "0x2000443")]
	public class FastTravelAbilityActivated : GameEvent
	{
		[Token(Token = "0x400192C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public FastTravel FastTravel;

		[Token(Token = "0x60019AF")]
		[Address(RVA = "0xD9D188", Offset = "0xD9D188", VA = "0xD9D188")]
		public FastTravelAbilityActivated(FastTravel fastTravel)
		{
		}
	}
	[Token(Token = "0x2000444")]
	public class FastTravelAbilityDeactivated : GameEvent
	{
		[Token(Token = "0x400192D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public FastTravel FastTravel;

		[Token(Token = "0x60019B0")]
		[Address(RVA = "0xD9D284", Offset = "0xD9D284", VA = "0xD9D284")]
		public FastTravelAbilityDeactivated(FastTravel fastTravel)
		{
		}
	}
	[Token(Token = "0x2000445")]
	public abstract class GloveAbility : MonoBehaviour
	{
		[Token(Token = "0x400192E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected bool m_isEquippedInRightGlove;

		[Token(Token = "0x170002A9")]
		public abstract GemType AssociatedGemType
		{
			[Token(Token = "0x60019B1")]
			get;
		}

		[Token(Token = "0x60019B2")]
		public abstract void Activate(bool isEquippedInRightGlove);

		[Token(Token = "0x60019B3")]
		public abstract void Deactivate();

		[Token(Token = "0x60019B4")]
		[Address(RVA = "0xD9E974", Offset = "0xD9E974", VA = "0xD9E974", Slot = "7")]
		public virtual bool OnTeleportPressed()
		{
			return default(bool);
		}

		[Token(Token = "0x60019B5")]
		[Address(RVA = "0xD9E97C", Offset = "0xD9E97C", VA = "0xD9E97C", Slot = "8")]
		public virtual bool OnTeleportReleased()
		{
			return default(bool);
		}

		[Token(Token = "0x60019B6")]
		[Address(RVA = "0xD9E734", Offset = "0xD9E734", VA = "0xD9E734")]
		protected GloveAbility()
		{
		}
	}
}
namespace NeatCorp.Player.PlayerDebug
{
	[Token(Token = "0x2000446")]
	public class DebugInputControllerUI : MonoBehaviour
	{
		[Token(Token = "0x400192F")]
		private const float WIDTH = 200f;

		[Token(Token = "0x4001930")]
		private const float HEIGHT = 500f;

		[Token(Token = "0x4001931")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool m_isRightHand;

		[Token(Token = "0x4001932")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private float m_posx;

		[Token(Token = "0x4001933")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private float m_posy;

		[Token(Token = "0x4001934")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private NeatVR_Controller m_controller;

		[Token(Token = "0x4001935")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x97D310", Offset = "0x97D310")]
		private bool <ShouldShow>k__BackingField;

		[Token(Token = "0x170002AA")]
		public bool ShouldShow
		{
			[Token(Token = "0x60019B7")]
			[Address(RVA = "0xDA1E48", Offset = "0xDA1E48", VA = "0xDA1E48")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x990098", Offset = "0x990098")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60019B8")]
			[Address(RVA = "0xDA1E50", Offset = "0xDA1E50", VA = "0xDA1E50")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9900A8", Offset = "0x9900A8")]
			set
			{
			}
		}

		[Token(Token = "0x60019B9")]
		[Address(RVA = "0xDA1E5C", Offset = "0xDA1E5C", VA = "0xDA1E5C")]
		public void Initialize(NeatVR_Controller controller, bool isRightHand)
		{
		}

		[Token(Token = "0x60019BA")]
		[Address(RVA = "0xDA1EDC", Offset = "0xDA1EDC", VA = "0xDA1EDC")]
		private void OnGUI()
		{
		}

		[Token(Token = "0x60019BB")]
		[Address(RVA = "0xDA2420", Offset = "0xDA2420", VA = "0xDA2420")]
		public DebugInputControllerUI()
		{
		}
	}
}
namespace NeatCorp.Utility
{
	[Token(Token = "0x2000447")]
	public class FollowCamera : MonoBehaviour
	{
		[Token(Token = "0x4001936")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Transform m_cameraTransform;

		[Token(Token = "0x4001937")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float m_distance;

		[Token(Token = "0x60019BC")]
		[Address(RVA = "0xD5E974", Offset = "0xD5E974", VA = "0xD5E974")]
		private void GetPositionAndRotation(out Vector3 position, out Quaternion rotation)
		{
		}

		[Token(Token = "0x60019BD")]
		[Address(RVA = "0xD5EAF4", Offset = "0xD5EAF4", VA = "0xD5EAF4")]
		private void Update()
		{
		}

		[Token(Token = "0x60019BE")]
		[Address(RVA = "0xD5ED10", Offset = "0xD5ED10", VA = "0xD5ED10")]
		public FollowCamera()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000448")]
	public class SerializableDictionary<TKey, TValue> : Dictionary<TKey, TValue>, ISerializationCallbackReceiver
	{
		[Token(Token = "0x4001938")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		protected List<TKey> keys;

		[Token(Token = "0x4001939")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		protected List<TValue> values;

		[Token(Token = "0x60019BF")]
		public void OnBeforeSerialize()
		{
		}

		[Token(Token = "0x60019C0")]
		public void OnAfterDeserialize()
		{
		}

		[Token(Token = "0x60019C1")]
		public SerializableDictionary()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000449")]
	public class SerializableSystemType
	{
		[Token(Token = "0x400193A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		private string m_Name;

		[Token(Token = "0x400193B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private string m_AssemblyQualifiedName;

		[Token(Token = "0x400193C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private string m_AssemblyName;

		[Token(Token = "0x400193D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Type m_SystemType;

		[Token(Token = "0x170002AB")]
		public Type SystemType
		{
			[Token(Token = "0x60019C2")]
			[Address(RVA = "0xD5EF20", Offset = "0xD5EF20", VA = "0xD5EF20")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60019C3")]
		[Address(RVA = "0xD5EFA4", Offset = "0xD5EFA4", VA = "0xD5EFA4")]
		private void GetSystemType()
		{
		}

		[Token(Token = "0x60019C4")]
		[Address(RVA = "0xD5F038", Offset = "0xD5F038", VA = "0xD5F038")]
		public bool Equals(SerializableSystemType _Object)
		{
			return default(bool);
		}

		[Token(Token = "0x60019C5")]
		[Address(RVA = "0xD5F088", Offset = "0xD5F088", VA = "0xD5F088")]
		public static bool operator ==(SerializableSystemType a, SerializableSystemType b)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x200044A")]
	public class SoilHelper : MonoBehaviour
	{
		[Token(Token = "0x400193E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private bool m_disableOnSoilBake;

		[Token(Token = "0x400193F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		[SerializeField]
		private bool m_enableOnSoilBake;

		[Token(Token = "0x4001940")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
		private bool m_previouslyActive;

		[Token(Token = "0x60019C6")]
		[Address(RVA = "0xD5F0B4", Offset = "0xD5F0B4", VA = "0xD5F0B4")]
		public SoilHelper()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200044B")]
	public struct SplinePoint
	{
		[Token(Token = "0x4001941")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Vector3 m_position;

		[Token(Token = "0x4001942")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private Vector3 m_tangent;

		[Token(Token = "0x4001943")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Vector3 m_inverseTangent;

		[Token(Token = "0x170002AC")]
		public Vector3 Position
		{
			[Token(Token = "0x60019C7")]
			[Address(RVA = "0xA46004", Offset = "0xA46004", VA = "0xA46004")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x60019C8")]
			[Address(RVA = "0xA46010", Offset = "0xA46010", VA = "0xA46010")]
			set
			{
			}
		}

		[Token(Token = "0x170002AD")]
		public Vector3 Tangent
		{
			[Token(Token = "0x60019C9")]
			[Address(RVA = "0xA4601C", Offset = "0xA4601C", VA = "0xA4601C")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x60019CA")]
			[Address(RVA = "0xA46028", Offset = "0xA46028", VA = "0xA46028")]
			set
			{
			}
		}

		[Token(Token = "0x170002AE")]
		public Vector3 InverseTangent
		{
			[Token(Token = "0x60019CB")]
			[Address(RVA = "0xA4603C", Offset = "0xA4603C", VA = "0xA4603C")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x60019CC")]
		[Address(RVA = "0xA46048", Offset = "0xA46048", VA = "0xA46048")]
		public SplinePoint(Vector3 position, Vector3 tangent)
		{
		}

		[Token(Token = "0x60019CD")]
		[Address(RVA = "0xA46050", Offset = "0xA46050", VA = "0xA46050")]
		public void Set(Vector3 position, Vector3 tangent)
		{
		}

		[Token(Token = "0x60019CE")]
		[Address(RVA = "0xA46064", Offset = "0xA46064", VA = "0xA46064")]
		public void SetPosition(Vector3 val)
		{
		}

		[Token(Token = "0x60019CF")]
		[Address(RVA = "0xA46070", Offset = "0xA46070", VA = "0xA46070")]
		public void SetTangent(Vector3 val)
		{
		}

		[Token(Token = "0x60019D0")]
		[Address(RVA = "0xA46084", Offset = "0xA46084", VA = "0xA46084")]
		private void SetInverseTangent()
		{
		}
	}
	[Token(Token = "0x200044C")]
	public class Spline : MonoBehaviour
	{
		[Token(Token = "0x4001944")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private SplinePoint[] points;

		[Token(Token = "0x4001945")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private bool m_simulate;

		[Token(Token = "0x170002AF")]
		public bool Simulate
		{
			[Token(Token = "0x60019D1")]
			[Address(RVA = "0xD5F0BC", Offset = "0xD5F0BC", VA = "0xD5F0BC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170002B0")]
		public int ControlPointCount
		{
			[Token(Token = "0x60019D2")]
			[Address(RVA = "0xD5F0C4", Offset = "0xD5F0C4", VA = "0xD5F0C4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x60019D3")]
		[Address(RVA = "0xD5F0DC", Offset = "0xD5F0DC", VA = "0xD5F0DC")]
		public SplinePoint GetControlPoint(int index)
		{
			return default(SplinePoint);
		}

		[Token(Token = "0x60019D4")]
		[Address(RVA = "0xD5F300", Offset = "0xD5F300", VA = "0xD5F300")]
		public int GetNextPointIndex(int i)
		{
			return default(int);
		}

		[Token(Token = "0x60019D5")]
		[Address(RVA = "0xD5F31C", Offset = "0xD5F31C", VA = "0xD5F31C")]
		public Vector3 GetVelocity(float t)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60019D6")]
		[Address(RVA = "0xD5F5CC", Offset = "0xD5F5CC", VA = "0xD5F5CC")]
		public Vector3 GetPoint(float t)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60019D7")]
		[Address(RVA = "0xD5F5B0", Offset = "0xD5F5B0", VA = "0xD5F5B0")]
		public SplinePoint GetEndPoint()
		{
			return default(SplinePoint);
		}

		[Token(Token = "0x60019D8")]
		[Address(RVA = "0xD5F7CC", Offset = "0xD5F7CC", VA = "0xD5F7CC")]
		public Vector3 GetInverseTangent(Vector3 end, Vector3 tangent)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60019D9")]
		[Address(RVA = "0xD5F894", Offset = "0xD5F894", VA = "0xD5F894")]
		public Vector3 GetDirection(float t)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60019DA")]
		[Address(RVA = "0xD5F8C4", Offset = "0xD5F8C4", VA = "0xD5F8C4")]
		public void AddControlPoint()
		{
		}

		[Token(Token = "0x60019DB")]
		[Address(RVA = "0xD5F9AC", Offset = "0xD5F9AC", VA = "0xD5F9AC")]
		public void AddControlPointAt(Vector3 pos)
		{
		}

		[Token(Token = "0x60019DC")]
		[Address(RVA = "0xD5FCC0", Offset = "0xD5FCC0", VA = "0xD5FCC0")]
		public void SetControlPoint(int index, Vector3 pos)
		{
		}

		[Token(Token = "0x60019DD")]
		[Address(RVA = "0xD5FD10", Offset = "0xD5FD10", VA = "0xD5FD10")]
		public void SetControlTangent(int index, Vector3 pos)
		{
		}

		[Token(Token = "0x60019DE")]
		[Address(RVA = "0xD5FD64", Offset = "0xD5FD64", VA = "0xD5FD64")]
		public void Clear()
		{
		}

		[Token(Token = "0x60019DF")]
		[Address(RVA = "0xD5FDB8", Offset = "0xD5FDB8", VA = "0xD5FDB8")]
		public Spline()
		{
		}
	}
}
namespace NeatCorp.Utility.Phsyics
{
	[Token(Token = "0x200044D")]
	public struct LayerData
	{
		[Token(Token = "0x4001946")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Transform Transform;

		[Token(Token = "0x4001947")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x97D3D0", Offset = "0x97D3D0")]
		private int <Layer>k__BackingField;

		[Token(Token = "0x170002B1")]
		public int Layer
		{
			[Token(Token = "0x60019E0")]
			[Address(RVA = "0xA45FC0", Offset = "0xA45FC0", VA = "0xA45FC0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9900B8", Offset = "0x9900B8")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60019E1")]
			[Address(RVA = "0xA45FC8", Offset = "0xA45FC8", VA = "0xA45FC8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9900C8", Offset = "0x9900C8")]
			private set
			{
			}
		}

		[Token(Token = "0x60019E2")]
		[Address(RVA = "0xA45FD0", Offset = "0xA45FD0", VA = "0xA45FD0")]
		public void Set(ref Transform transform, int layer)
		{
		}
	}
}
namespace NeatCorp.Utility.Navigation
{
	[Token(Token = "0x200044E")]
	public class ActivateWhenBakingNavMesh : MonoBehaviour
	{
		[Token(Token = "0x4001948")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool gameObjectWasActive;

		[Token(Token = "0x60019E3")]
		[Address(RVA = "0xD5ED20", Offset = "0xD5ED20", VA = "0xD5ED20")]
		public void SetVisible(bool visible)
		{
		}

		[Token(Token = "0x60019E4")]
		[Address(RVA = "0xD5ED88", Offset = "0xD5ED88", VA = "0xD5ED88")]
		public ActivateWhenBakingNavMesh()
		{
		}
	}
	[Token(Token = "0x200044F")]
	public enum NavMeshHelperType
	{
		[Token(Token = "0x400194A")]
		UseExistingMesh,
		[Token(Token = "0x400194B")]
		GenerateMeshFromCollider
	}
	[Token(Token = "0x2000450")]
	[ExecuteInEditMode]
	public class NavMeshHelper : MonoBehaviour
	{
		[Token(Token = "0x400194C")]
		private const string GeneratedMeshObjectName = "NavMeshHelper";

		[Token(Token = "0x400194D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private NavMeshHelperType m_helperMethod;

		[Token(Token = "0x400194E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private BoxCollider m_collider;

		[Token(Token = "0x400194F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private MeshRenderer m_meshRenderer;

		[Token(Token = "0x4001950")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private MeshFilter m_meshFilter;

		[Token(Token = "0x4001951")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private GameObject m_meshObject;

		[Token(Token = "0x4001952")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private SerializableMeshData m_meshData;

		[Token(Token = "0x4001953")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Mesh m_generatedMesh;

		[Token(Token = "0x4001954")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private bool m_rendererEnabledBeforeBuild;

		[Token(Token = "0x4001955")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
		private bool m_needsUpdate;

		[Token(Token = "0x60019E5")]
		[Address(RVA = "0xD5ED90", Offset = "0xD5ED90", VA = "0xD5ED90")]
		private void OnAwake()
		{
		}

		[Token(Token = "0x60019E6")]
		[Address(RVA = "0xD5ED98", Offset = "0xD5ED98", VA = "0xD5ED98")]
		private void SetRendererEnabled(bool shouldBeEnabled)
		{
		}

		[Token(Token = "0x60019E7")]
		[Address(RVA = "0xD5EE40", Offset = "0xD5EE40", VA = "0xD5EE40")]
		public NavMeshHelper()
		{
		}
	}
	[Token(Token = "0x2000451")]
	public class SerializableMeshData : MonoBehaviour
	{
		[Token(Token = "0x4001956")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector3[] Verticies;

		[Token(Token = "0x4001957")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int[] Triangles;

		[Token(Token = "0x60019E8")]
		[Address(RVA = "0xD5EE50", Offset = "0xD5EE50", VA = "0xD5EE50")]
		public SerializableMeshData()
		{
		}
	}
}
namespace NeatCorp.Utility.AnimationCurve
{
	[Token(Token = "0x2000452")]
	public static class AnimationCurveExtensions
	{
		[Token(Token = "0x60019E9")]
		[Address(RVA = "0xD5E920", Offset = "0xD5E920", VA = "0xD5E920")]
		public static float GetStepChange(this UnityEngine.AnimationCurve curve, float beginTime, float endTime)
		{
			return default(float);
		}
	}
}
namespace NeatCorp.Merchant
{
	[Token(Token = "0x2000453")]
	public class Calendar : MonoBehaviour
	{
		[Token(Token = "0x4001958")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject[] m_crosses;

		[Token(Token = "0x60019EA")]
		[Address(RVA = "0xC40EB0", Offset = "0xC40EB0", VA = "0xC40EB0")]
		public void UpdateCrossedDays(int dayCount)
		{
		}

		[Token(Token = "0x60019EB")]
		[Address(RVA = "0xC40F44", Offset = "0xC40F44", VA = "0xC40F44")]
		public Calendar()
		{
		}
	}
	[Token(Token = "0x2000454")]
	public enum PurchasableUpgradeType
	{
		[Token(Token = "0x400195A")]
		Undefined = 10,
		[Token(Token = "0x400195B")]
		WaterCan = 0,
		[Token(Token = "0x400195C")]
		FishingRod = 4,
		[Token(Token = "0x400195D")]
		Axe = 7,
		[Token(Token = "0x400195E")]
		Hoe = 1
	}
	[Token(Token = "0x2000455")]
	public class ToolsUpgradeMerchantBehavior : MerchantBehavior
	{
		[Token(Token = "0x2000456")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x973664", Offset = "0x973664")]
		private sealed class <SelectUpgrade>d__11 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001968")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001969")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400196A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ToolsUpgradeMerchantBehavior <>4__this;

			[Token(Token = "0x400196B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public PurchaseableToolUpgrade toolUpgrade;

			[Token(Token = "0x400196C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public CurrencyCost cost;

			[Token(Token = "0x400196D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private Vector3 <origScale>5__2;

			[Token(Token = "0x400196E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private float <timeElapsed>5__3;

			[Token(Token = "0x400196F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			private Vector3 <targetScale>5__4;

			[Token(Token = "0x170002B2")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001A02")]
				[Address(RVA = "0xD93D94", Offset = "0xD93D94", VA = "0xD93D94", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002B3")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001A04")]
				[Address(RVA = "0xD93DFC", Offset = "0xD93DFC", VA = "0xD93DFC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60019FF")]
			[Address(RVA = "0xD93668", Offset = "0xD93668", VA = "0xD93668")]
			[DebuggerHidden]
			public <SelectUpgrade>d__11(int <>1__state)
			{
			}

			[Token(Token = "0x6001A00")]
			[Address(RVA = "0xD93694", Offset = "0xD93694", VA = "0xD93694", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001A01")]
			[Address(RVA = "0xD93698", Offset = "0xD93698", VA = "0xD93698", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001A03")]
			[Address(RVA = "0xD93D9C", Offset = "0xD93D9C", VA = "0xD93D9C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000457")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x973674", Offset = "0x973674")]
		private sealed class <PerformToolUpgradeAnimation>d__13 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001970")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001971")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001972")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ToolsUpgradeMerchantBehavior <>4__this;

			[Token(Token = "0x4001973")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private Vector3 <origBubbleScale>5__2;

			[Token(Token = "0x4001974")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private Vector3 <bubbleScale>5__3;

			[Token(Token = "0x4001975")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private float <timeElapsed>5__4;

			[Token(Token = "0x4001976")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			private Vector3 <targetScale>5__5;

			[Token(Token = "0x170002B4")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001A08")]
				[Address(RVA = "0xD935F8", Offset = "0xD935F8", VA = "0xD935F8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002B5")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001A0A")]
				[Address(RVA = "0xD93660", Offset = "0xD93660", VA = "0xD93660", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001A05")]
			[Address(RVA = "0xD92F70", Offset = "0xD92F70", VA = "0xD92F70")]
			[DebuggerHidden]
			public <PerformToolUpgradeAnimation>d__13(int <>1__state)
			{
			}

			[Token(Token = "0x6001A06")]
			[Address(RVA = "0xD92F9C", Offset = "0xD92F9C", VA = "0xD92F9C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001A07")]
			[Address(RVA = "0xD92FA0", Offset = "0xD92FA0", VA = "0xD92FA0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001A09")]
			[Address(RVA = "0xD93600", Offset = "0xD93600", VA = "0xD93600", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000458")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x973684", Offset = "0x973684")]
		private sealed class <DeselectUpgrade>d__14 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001977")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001978")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001979")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ToolsUpgradeMerchantBehavior <>4__this;

			[Token(Token = "0x400197A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Purchaseable thing;

			[Token(Token = "0x400197B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private Vector3 <bubbleScale>5__2;

			[Token(Token = "0x400197C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private float <timeElapsed>5__3;

			[Token(Token = "0x400197D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private Vector3 <targetScale>5__4;

			[Token(Token = "0x170002B6")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001A0E")]
				[Address(RVA = "0xD92F00", Offset = "0xD92F00", VA = "0xD92F00", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002B7")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001A10")]
				[Address(RVA = "0xD92F68", Offset = "0xD92F68", VA = "0xD92F68", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001A0B")]
			[Address(RVA = "0xD92850", Offset = "0xD92850", VA = "0xD92850")]
			[DebuggerHidden]
			public <DeselectUpgrade>d__14(int <>1__state)
			{
			}

			[Token(Token = "0x6001A0C")]
			[Address(RVA = "0xD9287C", Offset = "0xD9287C", VA = "0xD9287C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001A0D")]
			[Address(RVA = "0xD92880", Offset = "0xD92880", VA = "0xD92880", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001A0F")]
			[Address(RVA = "0xD92F08", Offset = "0xD92F08", VA = "0xD92F08", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000459")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x973694", Offset = "0x973694")]
		private sealed class <TryShowBubble>d__15 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400197E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400197F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001980")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public bool shouldShow;

			[Token(Token = "0x4001981")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public ToolsUpgradeMerchantBehavior <>4__this;

			[Token(Token = "0x4001982")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <timeElapsed>5__2;

			[Token(Token = "0x4001983")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private Vector3 <targetScale>5__3;

			[Token(Token = "0x170002B8")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001A14")]
				[Address(RVA = "0xD942C0", Offset = "0xD942C0", VA = "0xD942C0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002B9")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001A16")]
				[Address(RVA = "0xD94328", Offset = "0xD94328", VA = "0xD94328", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001A11")]
			[Address(RVA = "0xD93E04", Offset = "0xD93E04", VA = "0xD93E04")]
			[DebuggerHidden]
			public <TryShowBubble>d__15(int <>1__state)
			{
			}

			[Token(Token = "0x6001A12")]
			[Address(RVA = "0xD93E30", Offset = "0xD93E30", VA = "0xD93E30", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001A13")]
			[Address(RVA = "0xD93E34", Offset = "0xD93E34", VA = "0xD93E34", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001A15")]
			[Address(RVA = "0xD942C8", Offset = "0xD942C8", VA = "0xD942C8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400195F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private ToolsUpgradeMerchantSpeechBubble[] m_speechBubbles;

		[Token(Token = "0x4001960")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private ToolsUpgradeMerchantSpeechBubble m_currentSpeechBubble;

		[Token(Token = "0x4001961")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		private ObjectContainer m_container;

		[Token(Token = "0x4001962")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private bool m_hasTool;

		[Token(Token = "0x4001963")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private Tool_Base m_toolToUpgrade;

		[Token(Token = "0x4001964")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private PurchaseableToolUpgrade m_currentlyDisplayedUpgrade;

		[Token(Token = "0x4001965")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private bool m_isPerformingToolUpgrade;

		[Token(Token = "0x4001966")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB9")]
		private bool m_shouldTryShowBubbledObject;

		[Token(Token = "0x4001967")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private Coroutine m_tryShowBubbleRoutine;

		[Token(Token = "0x60019EC")]
		[Address(RVA = "0xC40F4C", Offset = "0xC40F4C", VA = "0xC40F4C")]
		private void Awake()
		{
		}

		[Token(Token = "0x60019ED")]
		[Address(RVA = "0xC40FBC", Offset = "0xC40FBC", VA = "0xC40FBC", Slot = "7")]
		public override void PlayerPointedAtThing(Purchaseable upgrade, CurrencyCost cost, bool canAffordThing)
		{
		}

		[Token(Token = "0x60019EE")]
		[Address(RVA = "0xC41394", Offset = "0xC41394", VA = "0xC41394")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9900E8", Offset = "0x9900E8")]
		private IEnumerator SelectUpgrade(PurchaseableToolUpgrade toolUpgrade, CurrencyCost cost)
		{
			return null;
		}

		[Token(Token = "0x60019EF")]
		[Address(RVA = "0xC41434", Offset = "0xC41434", VA = "0xC41434")]
		public void PerformUpgrade()
		{
		}

		[Token(Token = "0x60019F0")]
		[Address(RVA = "0xC41488", Offset = "0xC41488", VA = "0xC41488")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x99014C", Offset = "0x99014C")]
		private IEnumerator PerformToolUpgradeAnimation()
		{
			return null;
		}

		[Token(Token = "0x60019F1")]
		[Address(RVA = "0xC412FC", Offset = "0xC412FC", VA = "0xC412FC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9901B0", Offset = "0x9901B0")]
		private IEnumerator DeselectUpgrade(Purchaseable thing)
		{
			return null;
		}

		[Token(Token = "0x60019F2")]
		[Address(RVA = "0xC41504", Offset = "0xC41504", VA = "0xC41504")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x990214", Offset = "0x990214")]
		private IEnumerator TryShowBubble(bool shouldShow)
		{
			return null;
		}

		[Token(Token = "0x60019F3")]
		[Address(RVA = "0xC41594", Offset = "0xC41594", VA = "0xC41594")]
		private bool TryShowSpeechBubbleForUpgrade(PurchaseableToolUpgrade upgrade)
		{
			return default(bool);
		}

		[Token(Token = "0x60019F4")]
		[Address(RVA = "0xC417AC", Offset = "0xC417AC", VA = "0xC417AC")]
		private void ResetSpeechBubbleAndUpgrade()
		{
		}

		[Token(Token = "0x60019F5")]
		[Address(RVA = "0xC41708", Offset = "0xC41708", VA = "0xC41708")]
		private void HideCurrentSpeechBubble()
		{
		}

		[Token(Token = "0x60019F6")]
		[Address(RVA = "0xC41634", Offset = "0xC41634", VA = "0xC41634")]
		private bool TryGetSpeechBubbleForUpgrade(PurchasableUpgradeType type, int level, out ToolsUpgradeMerchantSpeechBubble bubble)
		{
			return default(bool);
		}

		[Token(Token = "0x60019F7")]
		[Address(RVA = "0xC417E8", Offset = "0xC417E8", VA = "0xC417E8", Slot = "8")]
		public override void SetPaymentStatus(bool b)
		{
		}

		[Token(Token = "0x60019F8")]
		[Address(RVA = "0xC41894", Offset = "0xC41894", VA = "0xC41894", Slot = "11")]
		public override bool HasQualifiedPayment()
		{
			return default(bool);
		}

		[Token(Token = "0x60019F9")]
		[Address(RVA = "0xC4189C", Offset = "0xC4189C", VA = "0xC4189C", Slot = "6")]
		public override void SetInsufficientPayement()
		{
		}

		[Token(Token = "0x60019FA")]
		[Address(RVA = "0xC418A0", Offset = "0xC418A0", VA = "0xC418A0", Slot = "5")]
		protected override void ResetOnLeftBoat()
		{
		}

		[Token(Token = "0x60019FB")]
		[Address(RVA = "0xC41AE0", Offset = "0xC41AE0", VA = "0xC41AE0")]
		private void Update()
		{
		}

		[Token(Token = "0x60019FC")]
		[Address(RVA = "0xC41E48", Offset = "0xC41E48", VA = "0xC41E48")]
		private bool IsMatchingDisplayedUpgrade(ITool tool)
		{
			return default(bool);
		}

		[Token(Token = "0x60019FD")]
		[Address(RVA = "0xC41F94", Offset = "0xC41F94", VA = "0xC41F94", Slot = "10")]
		public override void FinishAnyPendingPurchase()
		{
		}

		[Token(Token = "0x60019FE")]
		[Address(RVA = "0xC42048", Offset = "0xC42048", VA = "0xC42048")]
		public ToolsUpgradeMerchantBehavior()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200045A")]
	public class UpgradeToolsStockState : ComponentState
	{
		[Token(Token = "0x4001984")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public AssetReferenceSerializable[] UpgradeItems;

		[Token(Token = "0x4001985")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int LastRestockDay;

		[Token(Token = "0x6001A17")]
		[Address(RVA = "0xD996CC", Offset = "0xD996CC", VA = "0xD996CC")]
		public UpgradeToolsStockState()
		{
		}

		[Token(Token = "0x6001A18")]
		[Address(RVA = "0xD995A8", Offset = "0xD995A8", VA = "0xD995A8")]
		public UpgradeToolsStockState(AssetReference[] merchandiseItems, int lastRestockDay)
		{
		}
	}
	[Token(Token = "0x200045B")]
	public enum MerchantType
	{
		[Token(Token = "0x4001987")]
		General,
		[Token(Token = "0x4001988")]
		Tools,
		[Token(Token = "0x4001989")]
		Seed,
		[Token(Token = "0x400198A")]
		Furniture
	}
}
namespace NeatCorp.Merchant.Trading
{
	[Token(Token = "0x200045C")]
	public struct ItemProbability
	{
		[Token(Token = "0x400198B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int StartIndex;

		[Token(Token = "0x400198C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public int Range;

		[Token(Token = "0x400198D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public string Key;

		[Token(Token = "0x6001A19")]
		[Address(RVA = "0xA46A60", Offset = "0xA46A60", VA = "0xA46A60")]
		public ItemProbability(int startIndex, int range, string key)
		{
		}
	}
	[Token(Token = "0x200045D")]
	public class MerchantSpeechBubbleBase : MonoBehaviour
	{
		[Token(Token = "0x400198E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		protected Color defaultTextColor;

		[Token(Token = "0x400198F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		protected Color paidTextColor;

		[Token(Token = "0x4001990")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		protected Color paidIconColor;

		[Token(Token = "0x4001991")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		protected float showBubbleDuration;

		[Token(Token = "0x4001992")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[SerializeField]
		protected float hideBubbleDuration;

		[Token(Token = "0x4001993")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		protected AnimationCurve showBubbleAnimationCurveXAxis;

		[Token(Token = "0x4001994")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		protected AnimationCurve hideBubbleAnimationCurveXAxis;

		[Token(Token = "0x4001995")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		protected AnimationCurve showBubbleAnimationCurveYAxis;

		[Token(Token = "0x4001996")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		protected AnimationCurve hideBubbleAnimationCurveYAxis;

		[Token(Token = "0x4001997")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		protected Color defaultIconColor;

		[Token(Token = "0x4001998")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		protected bool initialized;

		[Token(Token = "0x170002BA")]
		public AnimationCurve ShowBubbleCurveX
		{
			[Token(Token = "0x6001A1A")]
			[Address(RVA = "0xD94A84", Offset = "0xD94A84", VA = "0xD94A84")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002BB")]
		public AnimationCurve HideBubbleCurveX
		{
			[Token(Token = "0x6001A1B")]
			[Address(RVA = "0xD94A8C", Offset = "0xD94A8C", VA = "0xD94A8C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002BC")]
		public AnimationCurve ShowBubbleCurveY
		{
			[Token(Token = "0x6001A1C")]
			[Address(RVA = "0xD94A94", Offset = "0xD94A94", VA = "0xD94A94")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002BD")]
		public AnimationCurve HideBubbleCurveY
		{
			[Token(Token = "0x6001A1D")]
			[Address(RVA = "0xD94A9C", Offset = "0xD94A9C", VA = "0xD94A9C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002BE")]
		public float ShowBubbleDuration
		{
			[Token(Token = "0x6001A1E")]
			[Address(RVA = "0xD94AA4", Offset = "0xD94AA4", VA = "0xD94AA4")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170002BF")]
		public float HideBubbleDuration
		{
			[Token(Token = "0x6001A1F")]
			[Address(RVA = "0xD94AAC", Offset = "0xD94AAC", VA = "0xD94AAC")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6001A20")]
		[Address(RVA = "0xD94AB4", Offset = "0xD94AB4", VA = "0xD94AB4", Slot = "4")]
		public virtual void ShowBubble()
		{
		}

		[Token(Token = "0x6001A21")]
		[Address(RVA = "0xD94BD8", Offset = "0xD94BD8", VA = "0xD94BD8", Slot = "5")]
		public virtual void HideBubble()
		{
		}

		[Token(Token = "0x6001A22")]
		[Address(RVA = "0xD94C1C", Offset = "0xD94C1C", VA = "0xD94C1C", Slot = "6")]
		public virtual void ResetPricesPaid()
		{
		}

		[Token(Token = "0x6001A23")]
		[Address(RVA = "0xD94C7C", Offset = "0xD94C7C", VA = "0xD94C7C")]
		public MerchantSpeechBubbleBase()
		{
		}
	}
	[Token(Token = "0x200045E")]
	public class MerchantStockManager : StockManagerBase
	{
		[Token(Token = "0x200045F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9736A4", Offset = "0x9736A4")]
		private sealed class <RestockRoutine>d__21 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40019A7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40019A8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40019A9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public MerchantStockManager <>4__this;

			[Token(Token = "0x40019AA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public int dayCount;

			[Token(Token = "0x170002C1")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001A45")]
				[Address(RVA = "0xD97A2C", Offset = "0xD97A2C", VA = "0xD97A2C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002C2")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001A47")]
				[Address(RVA = "0xD97A94", Offset = "0xD97A94", VA = "0xD97A94", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001A42")]
			[Address(RVA = "0xD95524", Offset = "0xD95524", VA = "0xD95524")]
			[DebuggerHidden]
			public <RestockRoutine>d__21(int <>1__state)
			{
			}

			[Token(Token = "0x6001A43")]
			[Address(RVA = "0xD97998", Offset = "0xD97998", VA = "0xD97998", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001A44")]
			[Address(RVA = "0xD9799C", Offset = "0xD9799C", VA = "0xD9799C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001A46")]
			[Address(RVA = "0xD97A34", Offset = "0xD97A34", VA = "0xD97A34", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001999")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private int RestockDayInterval;

		[Token(Token = "0x400199A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private Merchandise m_merchandise;

		[Token(Token = "0x400199B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private MerchantStock m_merchantStock;

		[Token(Token = "0x400199C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private Calendar m_calendar;

		[Token(Token = "0x400199D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x97D530", Offset = "0x97D530")]
		[SerializeField]
		private Transform[] m_largePositions;

		[Token(Token = "0x400199E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private Transform[] m_smallPositions;

		[Token(Token = "0x400199F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private int m_lastRestockDay;

		[Token(Token = "0x40019A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private int m_smallItemStockSize;

		[Token(Token = "0x40019A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private int m_largeItemStockSize;

		[Token(Token = "0x40019A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private OptimizedCollection<MerchandiseItem> m_generatedSmallMerchandiseItems;

		[Token(Token = "0x40019A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private OptimizedCollection<MerchandiseItem> m_generatedLargeMerchandiseItems;

		[Token(Token = "0x40019A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private DateTime lastTimeStockWasRandomized;

		[Token(Token = "0x40019A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private bool m_waitingForRestock;

		[Token(Token = "0x40019A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private Coroutine m_restockRoutine;

		[Token(Token = "0x170002C0")]
		public bool AllowedRestock
		{
			[Token(Token = "0x6001A24")]
			[Address(RVA = "0xD94FE4", Offset = "0xD94FE4", VA = "0xD94FE4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001A25")]
		[Address(RVA = "0xD95058", Offset = "0xD95058", VA = "0xD95058")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001A26")]
		[Address(RVA = "0xD95148", Offset = "0xD95148", VA = "0xD95148")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001A27")]
		[Address(RVA = "0xD95244", Offset = "0xD95244", VA = "0xD95244", Slot = "15")]
		protected override void TryInitializeSlots()
		{
		}

		[Token(Token = "0x6001A28")]
		[Address(RVA = "0xD9531C", Offset = "0xD9531C", VA = "0xD9531C", Slot = "7")]
		protected override void SetGeneratedMerchandiseSize()
		{
		}

		[Token(Token = "0x6001A29")]
		[Address(RVA = "0xD953D8", Offset = "0xD953D8", VA = "0xD953D8")]
		private void OnNewDay(int dayCount)
		{
		}

		[Token(Token = "0x6001A2A")]
		[Address(RVA = "0xD95498", Offset = "0xD95498", VA = "0xD95498")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9903B8", Offset = "0x9903B8")]
		private IEnumerator RestockRoutine(int dayCount)
		{
			return null;
		}

		[Token(Token = "0x6001A2B")]
		[Address(RVA = "0xD95550", Offset = "0xD95550", VA = "0xD95550", Slot = "4")]
		public override ComponentState CreateState()
		{
			return null;
		}

		[Token(Token = "0x6001A2C")]
		[Address(RVA = "0xD95868", Offset = "0xD95868", VA = "0xD95868", Slot = "8")]
		public override void Initialize()
		{
		}

		[Token(Token = "0x6001A2D")]
		[Address(RVA = "0xD95E64", Offset = "0xD95E64", VA = "0xD95E64")]
		private void RestockOnRealTime(MerchantStockState currentState)
		{
		}

		[Token(Token = "0x6001A2E")]
		[Address(RVA = "0xD95C90", Offset = "0xD95C90", VA = "0xD95C90")]
		private AssetReference[] GetAllAvailableStockFromState(MerchantStockState currentState)
		{
			return null;
		}

		[Token(Token = "0x6001A2F")]
		[Address(RVA = "0xD95A20", Offset = "0xD95A20", VA = "0xD95A20")]
		private void MoveMerchantGoods()
		{
		}

		[Token(Token = "0x6001A30")]
		[Address(RVA = "0xD95F68", Offset = "0xD95F68", VA = "0xD95F68", Slot = "12")]
		public override void GenerateNewStock()
		{
		}

		[Token(Token = "0x6001A31")]
		[Address(RVA = "0xD95FC0", Offset = "0xD95FC0", VA = "0xD95FC0")]
		private void RandomizeCurrentStock()
		{
		}

		[Token(Token = "0x6001A32")]
		[Address(RVA = "0xD9631C", Offset = "0xD9631C", VA = "0xD9631C")]
		private MerchandiseItem GetGeneratedItemByProbability(bool isLargeItem, int totalItemProbabilityAmount, List<ItemProbability> itemProbabilities)
		{
			return default(MerchandiseItem);
		}

		[Token(Token = "0x6001A33")]
		[Address(RVA = "0xD96570", Offset = "0xD96570", VA = "0xD96570", Slot = "13")]
		protected override void InstantiateGeneratedStock()
		{
		}

		[Token(Token = "0x6001A34")]
		[Address(RVA = "0xD96700", Offset = "0xD96700", VA = "0xD96700", Slot = "14")]
		protected override void HandleStockInstantiation(AssetReference[] items)
		{
		}

		[Token(Token = "0x6001A35")]
		[Address(RVA = "0xD969B4", Offset = "0xD969B4", VA = "0xD969B4")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x99041C", Offset = "0x99041C")]
		private void EditorInstatiation(AssetReference[] refs)
		{
		}

		[Token(Token = "0x6001A36")]
		[Address(RVA = "0xD967A4", Offset = "0xD967A4", VA = "0xD967A4")]
		private void RuntimeInstantiation(AssetReference[] refs)
		{
		}

		[Token(Token = "0x6001A37")]
		[Address(RVA = "0xD96A8C", Offset = "0xD96A8C", VA = "0xD96A8C", Slot = "18")]
		protected override void OnPostObjectsSpawned(SpawnOperationCallbackData obj)
		{
		}

		[Token(Token = "0x6001A38")]
		[Address(RVA = "0xD9703C", Offset = "0xD9703C", VA = "0xD9703C")]
		private bool TryAddGeneratedItemToStock(bool isLarge, AssetReference assetRef)
		{
			return default(bool);
		}

		[Token(Token = "0x6001A39")]
		[Address(RVA = "0xD97114", Offset = "0xD97114", VA = "0xD97114")]
		private bool TryGetItemFromMerchandise(bool isLarge, AssetReference assetRef, out MerchandiseItem item)
		{
			return default(bool);
		}

		[Token(Token = "0x6001A3A")]
		[Address(RVA = "0xD9717C", Offset = "0xD9717C", VA = "0xD9717C", Slot = "20")]
		protected override void StockGenerationCompleted()
		{
		}

		[Token(Token = "0x6001A3B")]
		[Address(RVA = "0xD963D8", Offset = "0xD963D8", VA = "0xD963D8")]
		private bool TryGetRandomItemByProbability(bool isLargeItem, int totalAmount, List<ItemProbability> itemProbabilities, out MerchandiseItem randomizedItem)
		{
			return default(bool);
		}

		[Token(Token = "0x6001A3C")]
		[Address(RVA = "0xD971E8", Offset = "0xD971E8", VA = "0xD971E8")]
		private bool ItemIsUnlocked(MerchandiseItem item)
		{
			return default(bool);
		}

		[Token(Token = "0x6001A3D")]
		[Address(RVA = "0xD972B0", Offset = "0xD972B0", VA = "0xD972B0", Slot = "21")]
		public override ItemCost GetPriceForItem(Purchaseable p)
		{
			return default(ItemCost);
		}

		[Token(Token = "0x6001A3E")]
		[Address(RVA = "0xD974C8", Offset = "0xD974C8", VA = "0xD974C8", Slot = "23")]
		public override void RemoveItemFromStock(Purchaseable p)
		{
		}

		[Token(Token = "0x6001A3F")]
		[Address(RVA = "0xD9769C", Offset = "0xD9769C", VA = "0xD9769C")]
		private bool TryRemoveAssetReferenceFromCollection(ref OptimizedCollection<MerchandiseItem> items, AssetReference assetRef)
		{
			return default(bool);
		}

		[Token(Token = "0x6001A40")]
		[Address(RVA = "0xD977AC", Offset = "0xD977AC", VA = "0xD977AC", Slot = "24")]
		public override bool IsStockEmpty()
		{
			return default(bool);
		}

		[Token(Token = "0x6001A41")]
		[Address(RVA = "0xD97888", Offset = "0xD97888", VA = "0xD97888")]
		public MerchantStockManager()
		{
		}
	}
	[Token(Token = "0x2000460")]
	public class StockManagerBase : SaveableComponent, IInitializable
	{
		[Token(Token = "0x40019AB")]
		private const int StockSize = 4;

		[Token(Token = "0x40019AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		protected bool m_initialized;

		[Token(Token = "0x40019AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		protected List<GameObject> m_spawnedObjects;

		[Token(Token = "0x40019AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		protected Transform[] m_slots;

		[Token(Token = "0x40019AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		protected int m_currentStockSize;

		[Token(Token = "0x6001A48")]
		[Address(RVA = "0xD97A9C", Offset = "0xD97A9C", VA = "0xD97A9C", Slot = "6")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x6001A49")]
		[Address(RVA = "0xD97BF0", Offset = "0xD97BF0", VA = "0xD97BF0", Slot = "7")]
		protected virtual void SetGeneratedMerchandiseSize()
		{
		}

		[Token(Token = "0x6001A4A")]
		[Address(RVA = "0xD97C50", Offset = "0xD97C50", VA = "0xD97C50", Slot = "4")]
		public override ComponentState CreateState()
		{
			return null;
		}

		[Token(Token = "0x6001A4B")]
		[Address(RVA = "0xD97CBC", Offset = "0xD97CBC", VA = "0xD97CBC", Slot = "8")]
		public virtual void Initialize()
		{
		}

		[Token(Token = "0x6001A4C")]
		[Address(RVA = "0xD97CD4", Offset = "0xD97CD4", VA = "0xD97CD4", Slot = "9")]
		protected virtual Merchandise GetMerchandise()
		{
			return null;
		}

		[Token(Token = "0x6001A4D")]
		[Address(RVA = "0xD97D40", Offset = "0xD97D40", VA = "0xD97D40", Slot = "10")]
		protected virtual BaseStock GetStock()
		{
			return null;
		}

		[Token(Token = "0x6001A4E")]
		[Address(RVA = "0xD97DAC", Offset = "0xD97DAC", VA = "0xD97DAC", Slot = "11")]
		protected unsafe virtual ref OptimizedCollection<MerchandiseItem> GetGeneratedMerchandiseItems()
		{
			return ref *(OptimizedCollection<MerchandiseItem>*)null;
		}

		[Token(Token = "0x6001A4F")]
		[Address(RVA = "0xD97E18", Offset = "0xD97E18", VA = "0xD97E18", Slot = "12")]
		public virtual void GenerateNewStock()
		{
		}

		[Token(Token = "0x6001A50")]
		[Address(RVA = "0xD97E28", Offset = "0xD97E28", VA = "0xD97E28", Slot = "13")]
		protected virtual void InstantiateGeneratedStock()
		{
		}

		[Token(Token = "0x6001A51")]
		[Address(RVA = "0xD97F54", Offset = "0xD97F54", VA = "0xD97F54", Slot = "14")]
		protected virtual void HandleStockInstantiation(AssetReference[] items)
		{
		}

		[Token(Token = "0x6001A52")]
		[Address(RVA = "0xD981D4", Offset = "0xD981D4", VA = "0xD981D4", Slot = "15")]
		protected virtual void TryInitializeSlots()
		{
		}

		[Token(Token = "0x6001A53")]
		[Address(RVA = "0xD98250", Offset = "0xD98250", VA = "0xD98250", Slot = "16")]
		protected virtual bool TryGetPurPurchaseable(GameObject spawnedItem, out Purchaseable purchaseable)
		{
			return default(bool);
		}

		[Token(Token = "0x6001A54")]
		[Address(RVA = "0xD98330", Offset = "0xD98330", VA = "0xD98330", Slot = "17")]
		protected virtual void ClearMerchendiseItems()
		{
		}

		[Token(Token = "0x6001A55")]
		[Address(RVA = "0xD96E5C", Offset = "0xD96E5C", VA = "0xD96E5C")]
		protected void PlaceItemBasedOnStashableBounds(Purchaseable spawnedPurchasable)
		{
		}

		[Token(Token = "0x6001A56")]
		[Address(RVA = "0xD97ADC", Offset = "0xD97ADC", VA = "0xD97ADC")]
		protected void RemoveSlotChildren()
		{
		}

		[Token(Token = "0x6001A57")]
		[Address(RVA = "0xD97FC4", Offset = "0xD97FC4", VA = "0xD97FC4")]
		private void RuntimeInstantiation(AssetReference[] refs)
		{
		}

		[Token(Token = "0x6001A58")]
		[Address(RVA = "0xD98390", Offset = "0xD98390", VA = "0xD98390", Slot = "18")]
		protected virtual void OnPostObjectsSpawned(SpawnOperationCallbackData obj)
		{
		}

		[Token(Token = "0x6001A59")]
		[Address(RVA = "0xD986E8", Offset = "0xD986E8", VA = "0xD986E8", Slot = "19")]
		protected virtual void AddGeneratedItemToStock(AssetReference assetRef)
		{
		}

		[Token(Token = "0x6001A5A")]
		[Address(RVA = "0xD987C0", Offset = "0xD987C0", VA = "0xD987C0", Slot = "20")]
		protected virtual void StockGenerationCompleted()
		{
		}

		[Token(Token = "0x6001A5B")]
		[Address(RVA = "0xD98820", Offset = "0xD98820", VA = "0xD98820")]
		private bool ItemIsUnlocked(MerchandiseItem item)
		{
			return default(bool);
		}

		[Token(Token = "0x6001A5C")]
		[Address(RVA = "0xD988E8", Offset = "0xD988E8", VA = "0xD988E8", Slot = "21")]
		public virtual ItemCost GetPriceForItem(Purchaseable p)
		{
			return default(ItemCost);
		}

		[Token(Token = "0x6001A5D")]
		[Address(RVA = "0xD98984", Offset = "0xD98984", VA = "0xD98984", Slot = "22")]
		public virtual CurrencyCost GetCurrencyPriceForItem(Purchaseable p)
		{
			return default(CurrencyCost);
		}

		[Token(Token = "0x6001A5E")]
		[Address(RVA = "0xD989A8", Offset = "0xD989A8", VA = "0xD989A8", Slot = "23")]
		public virtual void RemoveItemFromStock(Purchaseable p)
		{
		}

		[Token(Token = "0x6001A5F")]
		[Address(RVA = "0xD98AF0", Offset = "0xD98AF0", VA = "0xD98AF0", Slot = "24")]
		public virtual bool IsStockEmpty()
		{
			return default(bool);
		}

		[Token(Token = "0x6001A60")]
		[Address(RVA = "0xD969B8", Offset = "0xD969B8", VA = "0xD969B8")]
		public void RemoveSpawnedObjects()
		{
		}

		[Token(Token = "0x6001A61")]
		[Address(RVA = "0xD97910", Offset = "0xD97910", VA = "0xD97910")]
		public StockManagerBase()
		{
		}
	}
	[Token(Token = "0x2000461")]
	public class ToolsUpgradeMerchantSpeechBubble : MerchantSpeechBubbleBase
	{
		[Token(Token = "0x40019B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private TextMeshPro currencyAmount;

		[Token(Token = "0x40019B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private SpriteRenderer currencyIcon;

		[Token(Token = "0x40019B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		private SpriteRenderer toolIcon;

		[Token(Token = "0x40019B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		private PurchasableUpgradeType m_upgradeType;

		[Token(Token = "0x40019B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		[SerializeField]
		private int m_upgradeLevel;

		[Token(Token = "0x170002C3")]
		public PurchasableUpgradeType UpgradeType
		{
			[Token(Token = "0x6001A62")]
			[Address(RVA = "0xD98F44", Offset = "0xD98F44", VA = "0xD98F44")]
			get
			{
				return default(PurchasableUpgradeType);
			}
		}

		[Token(Token = "0x170002C4")]
		public int UpgradeLevel
		{
			[Token(Token = "0x6001A63")]
			[Address(RVA = "0xD98F4C", Offset = "0xD98F4C", VA = "0xD98F4C")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x6001A64")]
		[Address(RVA = "0xD98F54", Offset = "0xD98F54", VA = "0xD98F54")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001A65")]
		[Address(RVA = "0xD98F64", Offset = "0xD98F64", VA = "0xD98F64")]
		private void Init()
		{
		}

		[Token(Token = "0x6001A66")]
		[Address(RVA = "0xD98FA4", Offset = "0xD98FA4", VA = "0xD98FA4", Slot = "4")]
		public override void ShowBubble()
		{
		}

		[Token(Token = "0x6001A67")]
		[Address(RVA = "0xD990E0", Offset = "0xD990E0", VA = "0xD990E0", Slot = "5")]
		public override void HideBubble()
		{
		}

		[Token(Token = "0x6001A68")]
		[Address(RVA = "0xD93CF8", Offset = "0xD93CF8", VA = "0xD93CF8")]
		public void SetPrice(CurrencyCost cost)
		{
		}

		[Token(Token = "0x6001A69")]
		[Address(RVA = "0xD9913C", Offset = "0xD9913C", VA = "0xD9913C")]
		public void SetPricesPaid(bool currencyPaid = false, bool toolPaid = false)
		{
		}

		[Token(Token = "0x6001A6A")]
		[Address(RVA = "0xD99230", Offset = "0xD99230", VA = "0xD99230", Slot = "6")]
		public override void ResetPricesPaid()
		{
		}

		[Token(Token = "0x6001A6B")]
		[Address(RVA = "0xD9923C", Offset = "0xD9923C", VA = "0xD9923C")]
		public ToolsUpgradeMerchantSpeechBubble()
		{
		}
	}
	[Token(Token = "0x2000462")]
	public class BaseStock : ScriptableObject
	{
		[Token(Token = "0x6001A6C")]
		[Address(RVA = "0xD94330", Offset = "0xD94330", VA = "0xD94330", Slot = "4")]
		public virtual AssetReference[] GetAllStockAssetReferences(bool includeEmptySlots)
		{
			return null;
		}

		[Token(Token = "0x6001A6D")]
		[Address(RVA = "0xD94390", Offset = "0xD94390", VA = "0xD94390", Slot = "5")]
		public virtual bool HasValidStock()
		{
			return default(bool);
		}

		[Token(Token = "0x6001A6E")]
		[Address(RVA = "0xD943F0", Offset = "0xD943F0", VA = "0xD943F0", Slot = "6")]
		public virtual AssetReference GetStockAssetReferenceAtIndex(int index)
		{
			return null;
		}

		[Token(Token = "0x6001A6F")]
		[Address(RVA = "0xD94450", Offset = "0xD94450", VA = "0xD94450")]
		public void SetCurrentStock(MerchandiseItem[] content)
		{
		}

		[Token(Token = "0x6001A70")]
		[Address(RVA = "0xD944B0", Offset = "0xD944B0", VA = "0xD944B0")]
		public BaseStock()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000463")]
	public struct CurrencyCost
	{
		[Token(Token = "0x40019B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int Value;

		[Token(Token = "0x6001A71")]
		[Address(RVA = "0xA469B8", Offset = "0xA469B8", VA = "0xA469B8")]
		public CurrencyCost(int value)
		{
		}
	}
	[Token(Token = "0x2000464")]
	public enum CurrencyType
	{
		[Token(Token = "0x40019B7")]
		Flower,
		[Token(Token = "0x40019B8")]
		Vegetable,
		[Token(Token = "0x40019B9")]
		Fruit,
		[Token(Token = "0x40019BA")]
		None
	}
	[Serializable]
	[Token(Token = "0x2000465")]
	public struct ItemCost
	{
		[Token(Token = "0x40019BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int Petals;

		[Token(Token = "0x40019BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public int Greens;

		[Token(Token = "0x40019BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public int Fruit;
	}
	[Token(Token = "0x2000466")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x9736B4", Offset = "0x9736B4")]
	public class Merchandise : MerchandiseBase
	{
		[Token(Token = "0x40019BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private string MerchantType;

		[Token(Token = "0x40019BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private MerchandiseItemDictionary m_merchandiseSmall;

		[Token(Token = "0x40019C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private MerchandiseItemDictionary m_merchandiseLarge;

		[Token(Token = "0x40019C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private List<ItemProbability> m_smallItemProbabilities;

		[Token(Token = "0x40019C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private List<ItemProbability> m_largeItemProbabilities;

		[Token(Token = "0x40019C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x97D60C", Offset = "0x97D60C")]
		private int <TotalProbabilityAmount>k__BackingField;

		[Token(Token = "0x170002C5")]
		public int TotalProbabilityAmount
		{
			[Token(Token = "0x6001A72")]
			[Address(RVA = "0xD944D0", Offset = "0xD944D0", VA = "0xD944D0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9904A4", Offset = "0x9904A4")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001A73")]
			[Address(RVA = "0xD944D8", Offset = "0xD944D8", VA = "0xD944D8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9904B4", Offset = "0x9904B4")]
			set
			{
			}
		}

		[Token(Token = "0x6001A74")]
		[Address(RVA = "0xD944E0", Offset = "0xD944E0", VA = "0xD944E0")]
		private void UpdateProbablilities(MerchandiseItemDictionary merchandise, List<ItemProbability> itemProbabilities)
		{
		}

		[Token(Token = "0x6001A75")]
		[Address(RVA = "0xD94610", Offset = "0xD94610", VA = "0xD94610")]
		public int GetSmallItemProbabilities(out List<ItemProbability> itemProbabilities)
		{
			return default(int);
		}

		[Token(Token = "0x6001A76")]
		[Address(RVA = "0xD946AC", Offset = "0xD946AC", VA = "0xD946AC")]
		public int GetLargeItemProbabilities(out List<ItemProbability> itemProbabilities)
		{
			return default(int);
		}

		[Token(Token = "0x6001A77")]
		[Address(RVA = "0xD94748", Offset = "0xD94748", VA = "0xD94748")]
		public bool TryGetSmallMerchandiseItemByKey(string key, out MerchandiseItem item)
		{
			return default(bool);
		}

		[Token(Token = "0x6001A78")]
		[Address(RVA = "0xD947F0", Offset = "0xD947F0", VA = "0xD947F0")]
		public bool TryGetLargeMerchandiseItemByKey(string key, out MerchandiseItem item)
		{
			return default(bool);
		}

		[Token(Token = "0x6001A79")]
		[Address(RVA = "0xD94898", Offset = "0xD94898", VA = "0xD94898")]
		public bool TryGetMerchandiseItemByKey(bool isLargeItem, string key, out MerchandiseItem item)
		{
			return default(bool);
		}

		[Token(Token = "0x6001A7A")]
		[Address(RVA = "0xD948B4", Offset = "0xD948B4", VA = "0xD948B4")]
		public Merchandise()
		{
		}
	}
	[Token(Token = "0x2000467")]
	public class MerchandiseBase : ScriptableObject
	{
		[Token(Token = "0x40019C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected StringBuilder m_stringBuilder;

		[Token(Token = "0x40019C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		protected bool m_hasUpdatedDictionary;

		[Token(Token = "0x6001A7B")]
		[Address(RVA = "0xD94A04", Offset = "0xD94A04", VA = "0xD94A04")]
		protected void TryInitializeDebug()
		{
		}

		[Token(Token = "0x6001A7C")]
		[Address(RVA = "0xD949FC", Offset = "0xD949FC", VA = "0xD949FC")]
		public MerchandiseBase()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000468")]
	public enum UnlockEvent
	{
		[Token(Token = "0x40019C7")]
		None,
		[Token(Token = "0x40019C8")]
		HouseUpgrade1,
		[Token(Token = "0x40019C9")]
		HouseUpgrade2,
		[Token(Token = "0x40019CA")]
		NumEvents
	}
	[Serializable]
	[Token(Token = "0x2000469")]
	public struct MerchandiseItem
	{
		[Token(Token = "0x40019CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly MerchandiseItem Nonexisting;

		[Token(Token = "0x40019CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[HideInInspector]
		public string Name;

		[Token(Token = "0x40019CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		[HideInInspector]
		public AssetReference AssetReference;

		[Token(Token = "0x40019CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Purchaseable Purchaseable;

		[Token(Token = "0x40019CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int Probability;

		[Token(Token = "0x40019D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public ItemCost ItemCost;

		[Token(Token = "0x40019D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public UnlockEvent UnlockEventRequired;
	}
	[Serializable]
	[Token(Token = "0x200046A")]
	public class MerchandiseItemDictionary : SerializableDictionary<string, MerchandiseItem>
	{
		[Token(Token = "0x6001A7D")]
		[Address(RVA = "0xD949AC", Offset = "0xD949AC", VA = "0xD949AC")]
		public MerchandiseItemDictionary()
		{
		}
	}
	[Token(Token = "0x200046B")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x973720", Offset = "0x973720")]
	public class MerchantStock : BaseStock
	{
		[Token(Token = "0x40019D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private MerchandiseItem[] m_smallMerchandiseItems;

		[Token(Token = "0x40019D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private MerchandiseItem[] m_largeMerchandiseItems;

		[Token(Token = "0x170002C6")]
		public MerchandiseItem[] CurrentSmallItemStock
		{
			[Token(Token = "0x6001A7E")]
			[Address(RVA = "0xD94CF0", Offset = "0xD94CF0", VA = "0xD94CF0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002C7")]
		public MerchandiseItem[] CurrentLargeItemStock
		{
			[Token(Token = "0x6001A7F")]
			[Address(RVA = "0xD94CF8", Offset = "0xD94CF8", VA = "0xD94CF8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001A80")]
		[Address(RVA = "0xD94D00", Offset = "0xD94D00", VA = "0xD94D00")]
		public void SetCurrentStock(MerchandiseItem[] newSmallMerchandiseItems, MerchandiseItem[] newLargeMerrchandiseItem)
		{
		}

		[Token(Token = "0x6001A81")]
		[Address(RVA = "0xD94D34", Offset = "0xD94D34", VA = "0xD94D34")]
		public AssetReference[] GetAllSmallStockAssetReferences(bool includeEmptySlots = false)
		{
			return null;
		}

		[Token(Token = "0x6001A82")]
		[Address(RVA = "0xD94E70", Offset = "0xD94E70", VA = "0xD94E70")]
		public AssetReference[] GetAllLargeStockAssetReferences(bool includeEmptySlots = false)
		{
			return null;
		}

		[Token(Token = "0x6001A83")]
		[Address(RVA = "0xD94FAC", Offset = "0xD94FAC", VA = "0xD94FAC", Slot = "5")]
		public override bool HasValidStock()
		{
			return default(bool);
		}

		[Token(Token = "0x6001A84")]
		[Address(RVA = "0xD94FDC", Offset = "0xD94FDC", VA = "0xD94FDC")]
		public MerchantStock()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200046C")]
	public class MerchantStockState : ComponentState
	{
		[Token(Token = "0x40019D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public AssetReferenceSerializable[] SmallMerchandiseItems;

		[Token(Token = "0x40019D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AssetReferenceSerializable[] LargeMerchandiseItems;

		[Token(Token = "0x40019D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public long lastRestockTime;

		[Token(Token = "0x40019D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int LastRestockDay;

		[Token(Token = "0x170002C8")]
		public DateTime LastRestockTime
		{
			[Token(Token = "0x6001A85")]
			[Address(RVA = "0xD95C24", Offset = "0xD95C24", VA = "0xD95C24")]
			get
			{
				return default(DateTime);
			}
		}

		[Token(Token = "0x6001A86")]
		[Address(RVA = "0xD95830", Offset = "0xD95830", VA = "0xD95830")]
		public MerchantStockState()
		{
		}

		[Token(Token = "0x6001A87")]
		[Address(RVA = "0xD95654", Offset = "0xD95654", VA = "0xD95654")]
		public MerchantStockState(AssetReference[] smallMerchandiseItems, AssetReference[] largeMerchandiseItems, DateTime lastRestockTime, int lastRestockDay)
		{
		}
	}
	[Token(Token = "0x200046D")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x97378C", Offset = "0x97378C")]
	public class ToolUpgradeStock : BaseStock
	{
		[Token(Token = "0x40019D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private UpgradeMerchandiseItem[] m_merchandiseItems;

		[Token(Token = "0x170002C9")]
		public UpgradeMerchandiseItem[] CurrentMerchandiseItems
		{
			[Token(Token = "0x6001A88")]
			[Address(RVA = "0xD98B9C", Offset = "0xD98B9C", VA = "0xD98B9C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001A89")]
		[Address(RVA = "0xD98BA4", Offset = "0xD98BA4", VA = "0xD98BA4")]
		public void SetCurrentStock(UpgradeMerchandiseItem[] newMerchandiseItems)
		{
		}

		[Token(Token = "0x6001A8A")]
		[Address(RVA = "0xD98BAC", Offset = "0xD98BAC", VA = "0xD98BAC", Slot = "4")]
		public override AssetReference[] GetAllStockAssetReferences(bool includeEmptySlots)
		{
			return null;
		}

		[Token(Token = "0x6001A8B")]
		[Address(RVA = "0xD98CE8", Offset = "0xD98CE8", VA = "0xD98CE8", Slot = "5")]
		public override bool HasValidStock()
		{
			return default(bool);
		}

		[Token(Token = "0x6001A8C")]
		[Address(RVA = "0xD98D08", Offset = "0xD98D08", VA = "0xD98D08", Slot = "6")]
		public override AssetReference GetStockAssetReferenceAtIndex(int index)
		{
			return null;
		}

		[Token(Token = "0x6001A8D")]
		[Address(RVA = "0xD98D48", Offset = "0xD98D48", VA = "0xD98D48")]
		public ToolUpgradeStock()
		{
		}
	}
	[Token(Token = "0x200046E")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x9737F8", Offset = "0x9737F8")]
	public class ToolsUpgradeMerchandise : MerchandiseBase
	{
		[Token(Token = "0x40019D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private UpgradeMerchandiseItemDictionary m_merchandise;

		[Token(Token = "0x6001A8E")]
		[Address(RVA = "0xD98D50", Offset = "0xD98D50", VA = "0xD98D50")]
		public UpgradeMerchandiseItem GetMerchandiseItemByKey(string key)
		{
			return default(UpgradeMerchandiseItem);
		}

		[Token(Token = "0x6001A8F")]
		[Address(RVA = "0xD98E1C", Offset = "0xD98E1C", VA = "0xD98E1C")]
		public UpgradeMerchandiseItem[] GetAllMerchandiseItems()
		{
			return null;
		}

		[Token(Token = "0x6001A90")]
		[Address(RVA = "0xD98E84", Offset = "0xD98E84", VA = "0xD98E84")]
		public ToolsUpgradeMerchandise()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200046F")]
	public struct UpgradeMerchandiseItem
	{
		[Token(Token = "0x40019DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly UpgradeMerchandiseItem Nonexisting;

		[Token(Token = "0x40019DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[HideInInspector]
		public string Name;

		[Token(Token = "0x40019DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		[HideInInspector]
		public AssetReference AssetReference;

		[Token(Token = "0x40019DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public PurchaseableToolUpgrade Purchaseable;

		[Token(Token = "0x40019DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public CurrencyCost CurrencyCost;
	}
	[Serializable]
	[Token(Token = "0x2000470")]
	public class UpgradeMerchandiseItemDictionary : SerializableDictionary<string, UpgradeMerchandiseItem>
	{
		[Token(Token = "0x6001A91")]
		[Address(RVA = "0xD98EF4", Offset = "0xD98EF4", VA = "0xD98EF4")]
		public UpgradeMerchandiseItemDictionary()
		{
		}
	}
	[Token(Token = "0x2000471")]
	public class UpgradeToolsStockManager : StockManagerBase
	{
		[Token(Token = "0x2000472")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x973864", Offset = "0x973864")]
		private sealed class <RestockRoutine>d__22 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40019ED")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40019EE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40019EF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public UpgradeToolsStockManager <>4__this;

			[Token(Token = "0x40019F0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public int dayCount;

			[Token(Token = "0x170002CB")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001AB0")]
				[Address(RVA = "0xD9B244", Offset = "0xD9B244", VA = "0xD9B244", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002CC")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001AB2")]
				[Address(RVA = "0xD9B2AC", Offset = "0xD9B2AC", VA = "0xD9B2AC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001AAD")]
			[Address(RVA = "0xD99C18", Offset = "0xD99C18", VA = "0xD99C18")]
			[DebuggerHidden]
			public <RestockRoutine>d__22(int <>1__state)
			{
			}

			[Token(Token = "0x6001AAE")]
			[Address(RVA = "0xD9B1B0", Offset = "0xD9B1B0", VA = "0xD9B1B0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001AAF")]
			[Address(RVA = "0xD9B1B4", Offset = "0xD9B1B4", VA = "0xD9B1B4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001AB1")]
			[Address(RVA = "0xD9B24C", Offset = "0xD9B24C", VA = "0xD9B24C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40019DF")]
		private const int StockSize = 3;

		[Token(Token = "0x40019E0")]
		private const int RestockDayInterval = 1;

		[Token(Token = "0x40019E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private ToolsUpgradeMerchandise m_merchandise;

		[Token(Token = "0x40019E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private ToolUpgradeStock m_merchantStock;

		[Token(Token = "0x40019E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x97D6BC", Offset = "0x97D6BC")]
		private Transform m_topLeftShelf;

		[Token(Token = "0x40019E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private Transform m_topRightShelf;

		[Token(Token = "0x40019E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private Transform m_bottomLeftShelf;

		[Token(Token = "0x40019E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private Transform m_bottomRightShelf;

		[Token(Token = "0x40019E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private OptimizedCollection<UpgradeMerchandiseItem> m_generatedMerchandiseItems;

		[Token(Token = "0x40019E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private int m_indexToReplace;

		[Token(Token = "0x40019E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private bool m_shouldReplaceUpgradeItem;

		[Token(Token = "0x40019EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private int m_lastRestockDay;

		[Token(Token = "0x40019EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		private bool m_waitingForRestock;

		[Token(Token = "0x40019EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Coroutine m_restockRoutine;

		[Token(Token = "0x170002CA")]
		public bool AllowedRestock
		{
			[Token(Token = "0x6001A92")]
			[Address(RVA = "0xD9924C", Offset = "0xD9924C", VA = "0xD9924C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001A93")]
		[Address(RVA = "0xD992C0", Offset = "0xD992C0", VA = "0xD992C0")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001A94")]
		[Address(RVA = "0xD993B0", Offset = "0xD993B0", VA = "0xD993B0")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001A95")]
		[Address(RVA = "0xD994AC", Offset = "0xD994AC", VA = "0xD994AC", Slot = "7")]
		protected override void SetGeneratedMerchandiseSize()
		{
		}

		[Token(Token = "0x6001A96")]
		[Address(RVA = "0xD994B8", Offset = "0xD994B8", VA = "0xD994B8", Slot = "4")]
		public override ComponentState CreateState()
		{
			return null;
		}

		[Token(Token = "0x6001A97")]
		[Address(RVA = "0xD99704", Offset = "0xD99704", VA = "0xD99704", Slot = "8")]
		public override void Initialize()
		{
		}

		[Token(Token = "0x6001A98")]
		[Address(RVA = "0xD99AE4", Offset = "0xD99AE4", VA = "0xD99AE4")]
		private void OnNewDay(int dayCount)
		{
		}

		[Token(Token = "0x6001A99")]
		[Address(RVA = "0xD99B8C", Offset = "0xD99B8C", VA = "0xD99B8C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9904C4", Offset = "0x9904C4")]
		private IEnumerator RestockRoutine(int dayCount)
		{
			return null;
		}

		[Token(Token = "0x6001A9A")]
		[Address(RVA = "0xD99C44", Offset = "0xD99C44", VA = "0xD99C44", Slot = "12")]
		public override void GenerateNewStock()
		{
		}

		[Token(Token = "0x6001A9B")]
		[Address(RVA = "0xD99EF0", Offset = "0xD99EF0", VA = "0xD99EF0", Slot = "24")]
		public override bool IsStockEmpty()
		{
			return default(bool);
		}

		[Token(Token = "0x6001A9C")]
		[Address(RVA = "0xD99F8C", Offset = "0xD99F8C", VA = "0xD99F8C", Slot = "16")]
		protected override bool TryGetPurPurchaseable(GameObject spawnedItem, out Purchaseable purchaseable)
		{
			return default(bool);
		}

		[Token(Token = "0x6001A9D")]
		[Address(RVA = "0xD99DE4", Offset = "0xD99DE4", VA = "0xD99DE4")]
		private bool ShouldShowUpgrade(PurchaseableToolUpgrade toolUpgrade)
		{
			return default(bool);
		}

		[Token(Token = "0x6001A9E")]
		[Address(RVA = "0xD9A06C", Offset = "0xD9A06C", VA = "0xD9A06C", Slot = "17")]
		protected override void ClearMerchendiseItems()
		{
		}

		[Token(Token = "0x6001A9F")]
		[Address(RVA = "0xD9A0C0", Offset = "0xD9A0C0", VA = "0xD9A0C0", Slot = "15")]
		protected override void TryInitializeSlots()
		{
		}

		[Token(Token = "0x6001AA0")]
		[Address(RVA = "0xD9980C", Offset = "0xD9980C", VA = "0xD9980C")]
		private void MoveMerchantGoods()
		{
		}

		[Token(Token = "0x6001AA1")]
		[Address(RVA = "0xD999D4", Offset = "0xD999D4", VA = "0xD999D4")]
		private AssetReference[] GetAllAvailableStockFromState(UpgradeToolsStockState currentState)
		{
			return null;
		}

		[Token(Token = "0x6001AA2")]
		[Address(RVA = "0xD9A228", Offset = "0xD9A228", VA = "0xD9A228", Slot = "10")]
		protected override BaseStock GetStock()
		{
			return null;
		}

		[Token(Token = "0x6001AA3")]
		[Address(RVA = "0xD9A230", Offset = "0xD9A230", VA = "0xD9A230")]
		private void RuntimeInstantiation(AssetReference[] refs)
		{
		}

		[Token(Token = "0x6001AA4")]
		[Address(RVA = "0xD9A440", Offset = "0xD9A440", VA = "0xD9A440", Slot = "18")]
		protected override void OnPostObjectsSpawned(SpawnOperationCallbackData obj)
		{
		}

		[Token(Token = "0x6001AA5")]
		[Address(RVA = "0xD9A790", Offset = "0xD9A790", VA = "0xD9A790")]
		private void OnPostObjectSpawned(SpawnOperationCallbackData obj)
		{
		}

		[Token(Token = "0x6001AA6")]
		[Address(RVA = "0xD9ABEC", Offset = "0xD9ABEC", VA = "0xD9ABEC", Slot = "19")]
		protected override void AddGeneratedItemToStock(AssetReference assetRef)
		{
		}

		[Token(Token = "0x6001AA7")]
		[Address(RVA = "0xD9AADC", Offset = "0xD9AADC", VA = "0xD9AADC")]
		private void ReplaceMerchandiseItemAtIndex(int index, AssetReference assetRef)
		{
		}

		[Token(Token = "0x6001AA8")]
		[Address(RVA = "0xD9AC94", Offset = "0xD9AC94", VA = "0xD9AC94", Slot = "20")]
		protected override void StockGenerationCompleted()
		{
		}

		[Token(Token = "0x6001AA9")]
		[Address(RVA = "0xD9ACE8", Offset = "0xD9ACE8", VA = "0xD9ACE8", Slot = "22")]
		public override CurrencyCost GetCurrencyPriceForItem(Purchaseable p)
		{
			return default(CurrencyCost);
		}

		[Token(Token = "0x6001AAA")]
		[Address(RVA = "0xD9ADD0", Offset = "0xD9ADD0", VA = "0xD9ADD0", Slot = "23")]
		public override void RemoveItemFromStock(Purchaseable p)
		{
		}

		[Token(Token = "0x6001AAB")]
		[Address(RVA = "0xD9B004", Offset = "0xD9B004", VA = "0xD9B004")]
		private bool TryReplaceBoughtMerchandiseItem(UpgradeMerchandiseItem itemToReplace, out UpgradeMerchandiseItem replacementItem)
		{
			return default(bool);
		}

		[Token(Token = "0x6001AAC")]
		[Address(RVA = "0xD9B124", Offset = "0xD9B124", VA = "0xD9B124")]
		public UpgradeToolsStockManager()
		{
		}
	}
}
namespace NeatCorp.Locomotion
{
	[Token(Token = "0x2000473")]
	public class FreeLocomotion : MonoBehaviour
	{
		[Token(Token = "0x40019F1")]
		private const float MaxSampleDistance = 0.2f;

		[Token(Token = "0x40019F2")]
		private const float AccelerationTargetThershold = 0.01f;

		[Token(Token = "0x40019F3")]
		private const float HitDistanceTolerance = 0.01f;

		[Token(Token = "0x40019F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static NavMeshQueryFilter NavMeshQueryFilter;

		[Token(Token = "0x40019F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool m_hasGameSettings;

		[Token(Token = "0x40019F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private GameSettings m_gameSettings;

		[Token(Token = "0x40019F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Transform m_playerOriginTransform;

		[Token(Token = "0x40019F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static FreeLocomotion Instance;

		[Token(Token = "0x40019F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Vector3 m_targetInputDirection;

		[Token(Token = "0x40019FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private Vector3 m_currentInputDirection;

		[Token(Token = "0x40019FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Vector3 m_validNavmeshPosition;

		[Token(Token = "0x40019FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private bool m_hasPendingMovement;

		[Token(Token = "0x40019FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private float m_horizontalRotationDelta;

		[Token(Token = "0x170002CD")]
		public bool UseLeftHandedInput
		{
			[Token(Token = "0x6001AB3")]
			[Address(RVA = "0xC3FBD8", Offset = "0xC3FBD8", VA = "0xC3FBD8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170002CE")]
		public bool UseSmoothTurning
		{
			[Token(Token = "0x6001AB4")]
			[Address(RVA = "0xC3FC04", Offset = "0xC3FC04", VA = "0xC3FC04")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170002CF")]
		public bool IsEnabled
		{
			[Token(Token = "0x6001AB5")]
			[Address(RVA = "0xC3FC38", Offset = "0xC3FC38", VA = "0xC3FC38")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001AB6")]
		[Address(RVA = "0xC3FD04", Offset = "0xC3FD04", VA = "0xC3FD04")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001AB7")]
		[Address(RVA = "0xC3FD74", Offset = "0xC3FD74", VA = "0xC3FD74")]
		private void Start()
		{
		}

		[Token(Token = "0x6001AB8")]
		[Address(RVA = "0xC3FE54", Offset = "0xC3FE54", VA = "0xC3FE54")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001AB9")]
		[Address(RVA = "0xC3FEFC", Offset = "0xC3FEFC", VA = "0xC3FEFC")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001ABA")]
		[Address(RVA = "0xC3FFA4", Offset = "0xC3FFA4", VA = "0xC3FFA4")]
		private void OnPlayerTeleported(PlayerTeleportEvent e)
		{
		}

		[Token(Token = "0x6001ABB")]
		[Address(RVA = "0xC3FFC8", Offset = "0xC3FFC8", VA = "0xC3FFC8")]
		public static void MovePlayerToNavmesh()
		{
		}

		[Token(Token = "0x6001ABC")]
		[Address(RVA = "0xC4030C", Offset = "0xC4030C", VA = "0xC4030C")]
		public void StopMoving()
		{
		}

		[Token(Token = "0x6001ABD")]
		[Address(RVA = "0xC4003C", Offset = "0xC4003C", VA = "0xC4003C")]
		private void MoveToSampledPosition(float tolerance = 1f)
		{
		}

		[Token(Token = "0x6001ABE")]
		[Address(RVA = "0xC40384", Offset = "0xC40384", VA = "0xC40384")]
		public static Vector3 GetClosestPositionOnNavmesh(Vector3 playerOrigin, float tolerance = 1f)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001ABF")]
		[Address(RVA = "0xC404E8", Offset = "0xC404E8", VA = "0xC404E8")]
		public void UpdateMovement(Vector2 movementInput)
		{
		}

		[Token(Token = "0x6001AC0")]
		[Address(RVA = "0xC405F0", Offset = "0xC405F0", VA = "0xC405F0")]
		public void UpdateRotation(Vector2 rotationInput)
		{
		}

		[Token(Token = "0x6001AC1")]
		[Address(RVA = "0xC40654", Offset = "0xC40654", VA = "0xC40654")]
		private void Update()
		{
		}

		[Token(Token = "0x6001AC2")]
		[Address(RVA = "0xC40710", Offset = "0xC40710", VA = "0xC40710")]
		private void UpdateMovementDirection()
		{
		}

		[Token(Token = "0x6001AC3")]
		[Address(RVA = "0xC40BD0", Offset = "0xC40BD0", VA = "0xC40BD0")]
		private bool TrySampleFullLengthPosition(Vector3 originPosition, out NavMeshHit navMeshHit)
		{
			return default(bool);
		}

		[Token(Token = "0x6001AC4")]
		[Address(RVA = "0xC408C8", Offset = "0xC408C8", VA = "0xC408C8")]
		private void MovePlayer()
		{
		}

		[Token(Token = "0x6001AC5")]
		[Address(RVA = "0xC40AB8", Offset = "0xC40AB8", VA = "0xC40AB8")]
		private void RotatePlayer()
		{
		}

		[Token(Token = "0x6001AC6")]
		[Address(RVA = "0xC40E54", Offset = "0xC40E54", VA = "0xC40E54")]
		public bool AllowedToRotate(bool isRightHand)
		{
			return default(bool);
		}

		[Token(Token = "0x6001AC7")]
		[Address(RVA = "0xC40EA4", Offset = "0xC40EA4", VA = "0xC40EA4")]
		public FreeLocomotion()
		{
		}
	}
}
namespace NeatCorp.Localization
{
	[Token(Token = "0x2000474")]
	public class SetLanguageController : MonoBehaviour
	{
		[Token(Token = "0x40019FE")]
		public const GameSettingId SettingId = GameSettingId.Language;

		[Token(Token = "0x40019FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private TMP_Text[] m_languageDisplayNames;

		[Token(Token = "0x4001A00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private PrevNextButton m_nextButton;

		[Token(Token = "0x4001A01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private PrevNextButton m_prevButton;

		[Token(Token = "0x4001A02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int m_currentLanguageIndex;

		[Token(Token = "0x4001A03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private GameObject m_currentlyDisplayedLanguage;

		[Token(Token = "0x4001A04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private LanguageManager manager;

		[Token(Token = "0x6001AC9")]
		[Address(RVA = "0xC3F46C", Offset = "0xC3F46C", VA = "0xC3F46C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001ACA")]
		[Address(RVA = "0xC3F7BC", Offset = "0xC3F7BC", VA = "0xC3F7BC")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001ACB")]
		[Address(RVA = "0xC3F5EC", Offset = "0xC3F5EC", VA = "0xC3F5EC")]
		private void HideAllLanguageDisplayNames()
		{
		}

		[Token(Token = "0x6001ACC")]
		[Address(RVA = "0xC3F8EC", Offset = "0xC3F8EC", VA = "0xC3F8EC")]
		private void SetInitLanguageIndex()
		{
		}

		[Token(Token = "0x6001ACD")]
		[Address(RVA = "0xC3F67C", Offset = "0xC3F67C", VA = "0xC3F67C")]
		private void TryDisplayLanguage(bool setActive = true)
		{
		}

		[Token(Token = "0x6001ACE")]
		[Address(RVA = "0xC3F9F8", Offset = "0xC3F9F8", VA = "0xC3F9F8")]
		public void NextLanguage(PushButton button)
		{
		}

		[Token(Token = "0x6001ACF")]
		[Address(RVA = "0xC3FAF4", Offset = "0xC3FAF4", VA = "0xC3FAF4")]
		public void PreviousLanguage(PushButton button)
		{
		}

		[Token(Token = "0x6001AD0")]
		[Address(RVA = "0xC3F710", Offset = "0xC3F710", VA = "0xC3F710")]
		private void ApplyLanguage()
		{
		}

		[Token(Token = "0x6001AD1")]
		[Address(RVA = "0xC3FA70", Offset = "0xC3FA70", VA = "0xC3FA70")]
		private void ChangeSetting()
		{
		}

		[Token(Token = "0x6001AD2")]
		[Address(RVA = "0xC3FB6C", Offset = "0xC3FB6C", VA = "0xC3FB6C")]
		public SetLanguageController()
		{
		}
	}
}
namespace NeatCorp.Loading
{
	[Token(Token = "0x2000475")]
	public class LoadingScreen : MonoBehaviour
	{
		[Token(Token = "0x2000476")]
		public enum LoadingStateType
		{
			[Token(Token = "0x4001A16")]
			None,
			[Token(Token = "0x4001A17")]
			FadeIn,
			[Token(Token = "0x4001A18")]
			Loading,
			[Token(Token = "0x4001A19")]
			FadeOut
		}

		[Token(Token = "0x2000477")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x973874", Offset = "0x973874")]
		private sealed class <>c__DisplayClass35_0
		{
			[Token(Token = "0x4001A1A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public LoadingScreen <>4__this;

			[Token(Token = "0x4001A1B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Action onComplete;

			[Token(Token = "0x6001AE3")]
			[Address(RVA = "0xC3E710", Offset = "0xC3E710", VA = "0xC3E710")]
			public <>c__DisplayClass35_0()
			{
			}

			[Token(Token = "0x6001AE4")]
			[Address(RVA = "0xC3E718", Offset = "0xC3E718", VA = "0xC3E718")]
			internal void <DoShow>b__2()
			{
			}

			[Token(Token = "0x6001AE5")]
			[Address(RVA = "0xC3E780", Offset = "0xC3E780", VA = "0xC3E780")]
			internal void <DoShow>b__3()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000478")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x973884", Offset = "0x973884")]
		private sealed class <>c
		{
			[Token(Token = "0x4001A1C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4001A1D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static DOGetter<float> <>9__35_0;

			[Token(Token = "0x4001A1E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static DOSetter<float> <>9__35_1;

			[Token(Token = "0x4001A1F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public static DOGetter<float> <>9__36_0;

			[Token(Token = "0x4001A20")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public static DOSetter<float> <>9__36_1;

			[Token(Token = "0x6001AE7")]
			[Address(RVA = "0xC3E6E8", Offset = "0xC3E6E8", VA = "0xC3E6E8")]
			public <>c()
			{
			}

			[Token(Token = "0x6001AE8")]
			[Address(RVA = "0xC3E6F0", Offset = "0xC3E6F0", VA = "0xC3E6F0")]
			internal float <DoShow>b__35_0()
			{
				return default(float);
			}

			[Token(Token = "0x6001AE9")]
			[Address(RVA = "0xC3E6F8", Offset = "0xC3E6F8", VA = "0xC3E6F8")]
			internal void <DoShow>b__35_1(float vol)
			{
			}

			[Token(Token = "0x6001AEA")]
			[Address(RVA = "0xC3E700", Offset = "0xC3E700", VA = "0xC3E700")]
			internal float <DoHide>b__36_0()
			{
				return default(float);
			}

			[Token(Token = "0x6001AEB")]
			[Address(RVA = "0xC3E708", Offset = "0xC3E708", VA = "0xC3E708")]
			internal void <DoHide>b__36_1(float vol)
			{
			}
		}

		[Token(Token = "0x2000479")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x973894", Offset = "0x973894")]
		private sealed class <DoShow>d__35 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001A21")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001A22")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001A23")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public LoadingScreen <>4__this;

			[Token(Token = "0x4001A24")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Action onComplete;

			[Token(Token = "0x4001A25")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Action onAfterFade;

			[Token(Token = "0x4001A26")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private <>c__DisplayClass35_0 <>8__1;

			[Token(Token = "0x170002D5")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001AEF")]
				[Address(RVA = "0xC3F3FC", Offset = "0xC3F3FC", VA = "0xC3F3FC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002D6")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001AF1")]
				[Address(RVA = "0xC3F464", Offset = "0xC3F464", VA = "0xC3F464", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001AEC")]
			[Address(RVA = "0xC3E614", Offset = "0xC3E614", VA = "0xC3E614")]
			[DebuggerHidden]
			public <DoShow>d__35(int <>1__state)
			{
			}

			[Token(Token = "0x6001AED")]
			[Address(RVA = "0xC3EE60", Offset = "0xC3EE60", VA = "0xC3EE60", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001AEE")]
			[Address(RVA = "0xC3EE64", Offset = "0xC3EE64", VA = "0xC3EE64", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001AF0")]
			[Address(RVA = "0xC3F404", Offset = "0xC3F404", VA = "0xC3F404", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200047A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9738A4", Offset = "0x9738A4")]
		private sealed class <DoHide>d__36 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001A27")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001A28")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001A29")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public LoadingScreen <>4__this;

			[Token(Token = "0x4001A2A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Action onBeforeFade;

			[Token(Token = "0x4001A2B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Action onComplete;

			[Token(Token = "0x4001A2C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private AsyncOperation <async>5__2;

			[Token(Token = "0x170002D7")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001AF5")]
				[Address(RVA = "0xC3EDF0", Offset = "0xC3EDF0", VA = "0xC3EDF0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002D8")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001AF7")]
				[Address(RVA = "0xC3EE58", Offset = "0xC3EE58", VA = "0xC3EE58", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001AF2")]
			[Address(RVA = "0xC3E640", Offset = "0xC3E640", VA = "0xC3E640")]
			[DebuggerHidden]
			public <DoHide>d__36(int <>1__state)
			{
			}

			[Token(Token = "0x6001AF3")]
			[Address(RVA = "0xC3E800", Offset = "0xC3E800", VA = "0xC3E800", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001AF4")]
			[Address(RVA = "0xC3E804", Offset = "0xC3E804", VA = "0xC3E804", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001AF6")]
			[Address(RVA = "0xC3EDF8", Offset = "0xC3EDF8", VA = "0xC3EDF8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001A05")]
		private const float FadeTime = 0.5f;

		[Token(Token = "0x4001A06")]
		private const float TargetFps = 90f;

		[Token(Token = "0x4001A07")]
		private const float FadeOutSoundTime = 0.5f;

		[Token(Token = "0x4001A08")]
		private const float FadeInSoundTime = 1f;

		[Token(Token = "0x4001A09")]
		private const float sharpness = 0.01f;

		[Token(Token = "0x4001A0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x97D778", Offset = "0x97D778")]
		private static LoadingStateType <LoadingState>k__BackingField;

		[Token(Token = "0x4001A0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Transform m_cameraTransform;

		[Token(Token = "0x4001A0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private SpriteRenderer m_sprite;

		[Token(Token = "0x4001A0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private SpriteRenderer m_bg;

		[Token(Token = "0x4001A0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private float m_distance;

		[Token(Token = "0x4001A0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[SerializeField]
		private float m_minDisplayTime;

		[Token(Token = "0x4001A10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Camera m_camera;

		[Token(Token = "0x4001A11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private CameraClearFlags m_originalClearFlags;

		[Token(Token = "0x4001A12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private float m_originalFarClipDist;

		[Token(Token = "0x4001A13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Tween m_fadeTween;

		[Token(Token = "0x4001A14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private float m_startTime;

		[Token(Token = "0x170002D0")]
		public static LoadingStateType LoadingState
		{
			[Token(Token = "0x6001AD3")]
			[Address(RVA = "0xC3DCCC", Offset = "0xC3DCCC", VA = "0xC3DCCC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x990578", Offset = "0x990578")]
			get
			{
				return default(LoadingStateType);
			}
			[Token(Token = "0x6001AD4")]
			[Address(RVA = "0xC3DD1C", Offset = "0xC3DD1C", VA = "0xC3DD1C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x990588", Offset = "0x990588")]
			private set
			{
			}
		}

		[Token(Token = "0x170002D1")]
		public static bool IsShowing
		{
			[Token(Token = "0x6001AD5")]
			[Address(RVA = "0xC3DD70", Offset = "0xC3DD70", VA = "0xC3DD70")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170002D2")]
		public static bool HasInitiatedLoading
		{
			[Token(Token = "0x6001AD6")]
			[Address(RVA = "0xC3DDC8", Offset = "0xC3DDC8", VA = "0xC3DDC8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170002D3")]
		public float TimeDisplayed
		{
			[Token(Token = "0x6001AD7")]
			[Address(RVA = "0xC3DE24", Offset = "0xC3DE24", VA = "0xC3DE24")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170002D4")]
		public float Distance
		{
			[Token(Token = "0x6001AD8")]
			[Address(RVA = "0xC3DE50", Offset = "0xC3DE50", VA = "0xC3DE50")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6001AD9")]
		[Address(RVA = "0xC3DE58", Offset = "0xC3DE58", VA = "0xC3DE58")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001ADA")]
		[Address(RVA = "0xC3E060", Offset = "0xC3E060", VA = "0xC3E060")]
		private void Update()
		{
		}

		[Token(Token = "0x6001ADB")]
		[Address(RVA = "0xC3E3FC", Offset = "0xC3E3FC", VA = "0xC3E3FC")]
		public YieldInstruction Show()
		{
			return null;
		}

		[Token(Token = "0x6001ADC")]
		[Address(RVA = "0xC3E4DC", Offset = "0xC3E4DC", VA = "0xC3E4DC")]
		public YieldInstruction Hide()
		{
			return null;
		}

		[Token(Token = "0x6001ADD")]
		[Address(RVA = "0xC3E5BC", Offset = "0xC3E5BC", VA = "0xC3E5BC")]
		public void Show(Action onCompleted, [Optional] Action onAfterFade)
		{
		}

		[Token(Token = "0x6001ADE")]
		[Address(RVA = "0xC3E5E8", Offset = "0xC3E5E8", VA = "0xC3E5E8")]
		public void Hide(Action onCompleted, [Optional] Action onBeforeFade)
		{
		}

		[Token(Token = "0x6001ADF")]
		[Address(RVA = "0xC3E27C", Offset = "0xC3E27C", VA = "0xC3E27C")]
		private void GetPositionAndRotation(out Vector3 position, out Quaternion rotation)
		{
		}

		[Token(Token = "0x6001AE0")]
		[Address(RVA = "0xC3E430", Offset = "0xC3E430", VA = "0xC3E430")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x990598", Offset = "0x990598")]
		private IEnumerator DoShow(Action onComplete, [Optional] Action onAfterFade)
		{
			return null;
		}

		[Token(Token = "0x6001AE1")]
		[Address(RVA = "0xC3E510", Offset = "0xC3E510", VA = "0xC3E510")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9905FC", Offset = "0x9905FC")]
		private IEnumerator DoHide(Action onComplete, [Optional] Action onBeforeFade)
		{
			return null;
		}

		[Token(Token = "0x6001AE2")]
		[Address(RVA = "0xC3E66C", Offset = "0xC3E66C", VA = "0xC3E66C")]
		public LoadingScreen()
		{
		}
	}
}
namespace NeatCorp.Scripts.Utils
{
	[Token(Token = "0x200047B")]
	public class Colors
	{
		[Token(Token = "0x4001A2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly int TintColorPropertyID;

		[Token(Token = "0x4001A2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public static readonly int ColorPropertyID;
	}
}
namespace NeatCorp.Scripts.Fade
{
	[Token(Token = "0x200047C")]
	public class FadeHandler : MonoBehaviour
	{
		[Token(Token = "0x200047D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9738B4", Offset = "0x9738B4")]
		private sealed class <>c__DisplayClass22_0
		{
			[Token(Token = "0x4001A39")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public TweenCallback onComplete;

			[Token(Token = "0x4001A3A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public FadeHandler <>4__this;

			[Token(Token = "0x6001B0A")]
			[Address(RVA = "0xD5409C", Offset = "0xD5409C", VA = "0xD5409C")]
			public <>c__DisplayClass22_0()
			{
			}

			[Token(Token = "0x6001B0B")]
			[Address(RVA = "0xD54154", Offset = "0xD54154", VA = "0xD54154")]
			internal void <FadeInInternal>b__0()
			{
			}
		}

		[Token(Token = "0x200047E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9738C4", Offset = "0x9738C4")]
		private sealed class <>c__DisplayClass23_0
		{
			[Token(Token = "0x4001A3B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public FadeHandler <>4__this;

			[Token(Token = "0x4001A3C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public TweenCallback onComplete;

			[Token(Token = "0x6001B0C")]
			[Address(RVA = "0xD540A4", Offset = "0xD540A4", VA = "0xD540A4")]
			public <>c__DisplayClass23_0()
			{
			}

			[Token(Token = "0x6001B0D")]
			[Address(RVA = "0xD541C0", Offset = "0xD541C0", VA = "0xD541C0")]
			internal void <FadeOutInternal>b__0()
			{
			}

			[Token(Token = "0x6001B0E")]
			[Address(RVA = "0xD541EC", Offset = "0xD541EC", VA = "0xD541EC")]
			internal void <FadeOutInternal>b__1()
			{
			}
		}

		[Token(Token = "0x4001A2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly CameraClearFlags m_cameraClearFlags;

		[Token(Token = "0x4001A30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private bool m_autoFadeInOnStart;

		[Token(Token = "0x4001A31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Renderer m_renderer;

		[Token(Token = "0x4001A32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Camera m_camera;

		[Token(Token = "0x4001A33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Tweener m_fadeTweener;

		[Token(Token = "0x4001A34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Color m_cameraClearColor;

		[Token(Token = "0x4001A35")]
		public const float DefaultFadeTime = 0f;

		[Token(Token = "0x4001A38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static FadeHandler Instance;

		[Token(Token = "0x1400002B")]
		public event Action OnBeforeFadeOut
		{
			[Token(Token = "0x6001AF9")]
			[Address(RVA = "0xD53794", Offset = "0xD53794", VA = "0xD53794")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x990700", Offset = "0x990700")]
			add
			{
			}
			[Token(Token = "0x6001AFA")]
			[Address(RVA = "0xD53838", Offset = "0xD53838", VA = "0xD53838")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x990710", Offset = "0x990710")]
			remove
			{
			}
		}

		[Token(Token = "0x1400002C")]
		public event Action OnAfterFadeIn
		{
			[Token(Token = "0x6001AFB")]
			[Address(RVA = "0xD538DC", Offset = "0xD538DC", VA = "0xD538DC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x990720", Offset = "0x990720")]
			add
			{
			}
			[Token(Token = "0x6001AFC")]
			[Address(RVA = "0xD53980", Offset = "0xD53980", VA = "0xD53980")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x990730", Offset = "0x990730")]
			remove
			{
			}
		}

		[Token(Token = "0x6001AFD")]
		[Address(RVA = "0xD53A24", Offset = "0xD53A24", VA = "0xD53A24")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001AFE")]
		[Address(RVA = "0xD53A7C", Offset = "0xD53A7C", VA = "0xD53A7C")]
		private void Start()
		{
		}

		[Token(Token = "0x6001AFF")]
		[Address(RVA = "0xD53C84", Offset = "0xD53C84", VA = "0xD53C84")]
		public static YieldInstruction FadeIn(float fadeTime)
		{
			return null;
		}

		[Token(Token = "0x6001B00")]
		[Address(RVA = "0xD53D0C", Offset = "0xD53D0C", VA = "0xD53D0C")]
		public static YieldInstruction FadeOut(float fadeTime)
		{
			return null;
		}

		[Token(Token = "0x6001B01")]
		[Address(RVA = "0xD53F54", Offset = "0xD53F54", VA = "0xD53F54")]
		public static void FadeIn()
		{
		}

		[Token(Token = "0x6001B02")]
		[Address(RVA = "0xD53FB4", Offset = "0xD53FB4", VA = "0xD53FB4")]
		public static void FadeIn(float fadeTime, TweenCallback onComplete)
		{
		}

		[Token(Token = "0x6001B03")]
		[Address(RVA = "0xD54024", Offset = "0xD54024", VA = "0xD54024")]
		public static void FadeOut(TweenCallback onComplete)
		{
		}

		[Token(Token = "0x6001B04")]
		[Address(RVA = "0xD5402C", Offset = "0xD5402C", VA = "0xD5402C")]
		public static void FadeOut(float fadeTime, TweenCallback onComplete)
		{
		}

		[Token(Token = "0x6001B05")]
		[Address(RVA = "0xD53AD4", Offset = "0xD53AD4", VA = "0xD53AD4")]
		private void FadeInInternal(float fadeTime, TweenCallback onComplete)
		{
		}

		[Token(Token = "0x6001B06")]
		[Address(RVA = "0xD53D94", Offset = "0xD53D94", VA = "0xD53D94")]
		private void FadeOutInternal(float fadeTime, TweenCallback onComplete)
		{
		}

		[Token(Token = "0x6001B07")]
		[Address(RVA = "0xD540AC", Offset = "0xD540AC", VA = "0xD540AC")]
		private void SetCameraClearColorToBlack()
		{
		}

		[Token(Token = "0x6001B08")]
		[Address(RVA = "0xD540F8", Offset = "0xD540F8", VA = "0xD540F8")]
		private void ResetCameraClearFlags()
		{
		}

		[Token(Token = "0x6001B09")]
		[Address(RVA = "0xD54140", Offset = "0xD54140", VA = "0xD54140")]
		public FadeHandler()
		{
		}
	}
}
namespace NeatCorp.Polaroid
{
	[Token(Token = "0x200047F")]
	public class PolaroidPicture : SaveableComponent, IInitializable
	{
		[Token(Token = "0x2000480")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9738D4", Offset = "0x9738D4")]
		private sealed class <>c__DisplayClass32_0
		{
			[Token(Token = "0x4001A55")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public PolaroidPicture <>4__this;

			[Token(Token = "0x4001A56")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Action onMoveOutCompleted;

			[Token(Token = "0x6001B26")]
			[Address(RVA = "0xDA37B0", Offset = "0xDA37B0", VA = "0xDA37B0")]
			public <>c__DisplayClass32_0()
			{
			}

			[Token(Token = "0x6001B27")]
			[Address(RVA = "0xDA4164", Offset = "0xDA4164", VA = "0xDA4164")]
			internal void <MoveOutOfCamera>b__0()
			{
			}
		}

		[Token(Token = "0x2000481")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9738E4", Offset = "0x9738E4")]
		private sealed class <RemoveFadeAfterDuration>d__35 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001A57")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001A58")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001A59")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public PolaroidPicture <>4__this;

			[Token(Token = "0x170002D9")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001B2B")]
				[Address(RVA = "0xDA425C", Offset = "0xDA425C", VA = "0xDA425C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002DA")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001B2D")]
				[Address(RVA = "0xDA42C4", Offset = "0xDA42C4", VA = "0xDA42C4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001B28")]
			[Address(RVA = "0xDA395C", Offset = "0xDA395C", VA = "0xDA395C")]
			[DebuggerHidden]
			public <RemoveFadeAfterDuration>d__35(int <>1__state)
			{
			}

			[Token(Token = "0x6001B29")]
			[Address(RVA = "0xDA41CC", Offset = "0xDA41CC", VA = "0xDA41CC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001B2A")]
			[Address(RVA = "0xDA41D0", Offset = "0xDA41D0", VA = "0xDA41D0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001B2C")]
			[Address(RVA = "0xDA4264", Offset = "0xDA4264", VA = "0xDA4264", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001A3D")]
		private const float MoveOutDuration = 0.4f;

		[Token(Token = "0x4001A3E")]
		private const float FadeDuration = 3f;

		[Token(Token = "0x4001A3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Collider m_collider;

		[Token(Token = "0x4001A40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Rigidbody m_rigidBody;

		[Token(Token = "0x4001A41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private MeshRenderer m_frameRenderer;

		[Token(Token = "0x4001A42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Grabbable m_grabbable;

		[Token(Token = "0x4001A43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private MeshRenderer m_photoRenderer;

		[Token(Token = "0x4001A44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private ShareUIController m_shareUIController;

		[Token(Token = "0x4001A45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private PushMeshButton m_shareButton;

		[Token(Token = "0x4001A46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private MeshRenderer m_fadeRenderer;

		[Token(Token = "0x4001A47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Sequence m_sequence;

		[Token(Token = "0x4001A48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private bool m_initialized;

		[Token(Token = "0x4001A49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private PolaroidPictureState m_currentState;

		[Token(Token = "0x4001A4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private bool m_isAttached;

		[Token(Token = "0x4001A4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x81")]
		private bool m_delayDetachment;

		[Token(Token = "0x4001A4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Texture2D m_photoTexture;

		[Token(Token = "0x4001A4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private int m_photoWidth;

		[Token(Token = "0x4001A4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		private int m_photoHeight;

		[Token(Token = "0x4001A4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private string m_highResFilePath;

		[Token(Token = "0x4001A50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private YieldInstruction m_fadeDelayInstruction;

		[Token(Token = "0x4001A51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private MaterialPropertyBlock mpb;

		[Token(Token = "0x4001A52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private MaterialPropertyBlock fade_mpb;

		[Token(Token = "0x4001A53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly int ShaderTextureId;

		[Token(Token = "0x4001A54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private static readonly int FadeStartTimeId;

		[Token(Token = "0x6001B0F")]
		[Address(RVA = "0xDA2DB8", Offset = "0xDA2DB8", VA = "0xDA2DB8")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001B10")]
		[Address(RVA = "0xDA2F60", Offset = "0xDA2F60", VA = "0xDA2F60")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001B11")]
		[Address(RVA = "0xDA3108", Offset = "0xDA3108", VA = "0xDA3108", Slot = "5")]
		public void Initialize()
		{
		}

		[Token(Token = "0x6001B12")]
		[Address(RVA = "0xDA3488", Offset = "0xDA3488", VA = "0xDA3488")]
		public void Hide()
		{
		}

		[Token(Token = "0x6001B13")]
		[Address(RVA = "0xDA34CC", Offset = "0xDA34CC", VA = "0xDA34CC")]
		public void Show()
		{
		}

		[Token(Token = "0x6001B14")]
		[Address(RVA = "0xDA3510", Offset = "0xDA3510", VA = "0xDA3510")]
		public void AssignPhotoTexture(Texture2D polaroidTexture, int width, int height)
		{
		}

		[Token(Token = "0x6001B15")]
		[Address(RVA = "0xDA354C", Offset = "0xDA354C", VA = "0xDA354C")]
		public void AssignPath(string path)
		{
		}

		[Token(Token = "0x6001B16")]
		[Address(RVA = "0xDA32C0", Offset = "0xDA32C0", VA = "0xDA32C0")]
		private void SetUpPhotoTexture()
		{
		}

		[Token(Token = "0x6001B17")]
		[Address(RVA = "0xDA3554", Offset = "0xDA3554", VA = "0xDA3554")]
		public void MoveOutOfCamera(Transform movingOutEndTrans, Action onMoveOutCompleted)
		{
		}

		[Token(Token = "0x6001B18")]
		[Address(RVA = "0xDA37B8", Offset = "0xDA37B8", VA = "0xDA37B8")]
		private void EnableFade()
		{
		}

		[Token(Token = "0x6001B19")]
		[Address(RVA = "0xDA37E8", Offset = "0xDA37E8", VA = "0xDA37E8")]
		private void StartFade()
		{
		}

		[Token(Token = "0x6001B1A")]
		[Address(RVA = "0xDA38E0", Offset = "0xDA38E0", VA = "0xDA38E0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x990740", Offset = "0x990740")]
		private IEnumerator RemoveFadeAfterDuration()
		{
			return null;
		}

		[Token(Token = "0x6001B1B")]
		[Address(RVA = "0xDA3988", Offset = "0xDA3988", VA = "0xDA3988")]
		private void OnGrabbed(Grabbable grabbable)
		{
		}

		[Token(Token = "0x6001B1C")]
		[Address(RVA = "0xDA3A90", Offset = "0xDA3A90", VA = "0xDA3A90")]
		private void OnDropped(Grabbable grabbable)
		{
		}

		[Token(Token = "0x6001B1D")]
		[Address(RVA = "0xDA3AE8", Offset = "0xDA3AE8", VA = "0xDA3AE8")]
		public void DetachFromCamera(Tool_PolaroidCamera cam)
		{
		}

		[Token(Token = "0x6001B1E")]
		[Address(RVA = "0xDA3D34", Offset = "0xDA3D34", VA = "0xDA3D34")]
		private void DelayedDetachement()
		{
		}

		[Token(Token = "0x6001B1F")]
		[Address(RVA = "0xDA3BF0", Offset = "0xDA3BF0", VA = "0xDA3BF0")]
		private void Detach()
		{
		}

		[Token(Token = "0x6001B20")]
		[Address(RVA = "0xDA3D78", Offset = "0xDA3D78", VA = "0xDA3D78", Slot = "4")]
		public override ComponentState CreateState()
		{
			return null;
		}

		[Token(Token = "0x6001B21")]
		[Address(RVA = "0xDA3E0C", Offset = "0xDA3E0C", VA = "0xDA3E0C")]
		private void UpdateState()
		{
		}

		[Token(Token = "0x6001B22")]
		[Address(RVA = "0xDA3F60", Offset = "0xDA3F60", VA = "0xDA3F60")]
		public void SharePicture(PushMeshButton _)
		{
		}

		[Token(Token = "0x6001B23")]
		[Address(RVA = "0xDA401C", Offset = "0xDA401C", VA = "0xDA401C")]
		private void ShareToFacebookResult(Message<ShareMediaResult> message)
		{
		}

		[Token(Token = "0x6001B24")]
		[Address(RVA = "0xDA4068", Offset = "0xDA4068", VA = "0xDA4068")]
		public PolaroidPicture()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000482")]
	public class PolaroidPictureState : ComponentStateWithBinaryData
	{
		[Token(Token = "0x4001A5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int m_width;

		[Token(Token = "0x4001A5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public int m_height;

		[Token(Token = "0x4001A5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string m_highResFilePath;

		[Token(Token = "0x6001B2E")]
		[Address(RVA = "0xDA42CC", Offset = "0xDA42CC", VA = "0xDA42CC", Slot = "4")]
		public override string GetFilenameExtension()
		{
			return null;
		}

		[Token(Token = "0x6001B2F")]
		[Address(RVA = "0xDA3E04", Offset = "0xDA3E04", VA = "0xDA3E04")]
		public PolaroidPictureState()
		{
		}
	}
	[Token(Token = "0x2000483")]
	public class ShareUIController : MonoBehaviour
	{
		[Token(Token = "0x4001A5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private PushMeshButton m_shareButton;

		[Token(Token = "0x4001A5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private PushMeshButton m_facebookButton;

		[Token(Token = "0x4001A5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private PushMeshButton m_cancelButton;

		[Token(Token = "0x4001A60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private readonly Vector3 m_facebookOpenPos;

		[Token(Token = "0x4001A61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Sequence m_buttonAnimSequence;

		[Token(Token = "0x6001B30")]
		[Address(RVA = "0xDA4314", Offset = "0xDA4314", VA = "0xDA4314")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001B31")]
		[Address(RVA = "0xDA449C", Offset = "0xDA449C", VA = "0xDA449C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001B32")]
		[Address(RVA = "0xDA4624", Offset = "0xDA4624", VA = "0xDA4624")]
		private void OnButtonPushed(PushMeshButton button)
		{
		}

		[Token(Token = "0x6001B33")]
		[Address(RVA = "0xDA4738", Offset = "0xDA4738", VA = "0xDA4738")]
		private void SetSubMenuButtonsActive(bool shouldBeActive)
		{
		}

		[Token(Token = "0x6001B34")]
		[Address(RVA = "0xDA47FC", Offset = "0xDA47FC", VA = "0xDA47FC")]
		private void AnimateButton(Transform trans, Vector3 targetPos)
		{
		}

		[Token(Token = "0x6001B35")]
		[Address(RVA = "0xDA3A50", Offset = "0xDA3A50", VA = "0xDA3A50")]
		public void Show()
		{
		}

		[Token(Token = "0x6001B36")]
		[Address(RVA = "0xDA3AA8", Offset = "0xDA3AA8", VA = "0xDA3AA8")]
		public void Hide()
		{
		}

		[Token(Token = "0x6001B37")]
		[Address(RVA = "0xDA49AC", Offset = "0xDA49AC", VA = "0xDA49AC")]
		public ShareUIController()
		{
		}
	}
	[Token(Token = "0x2000484")]
	public class Tool_PolaroidCamera : Tool_Base, ITool, IInitializable
	{
		[Token(Token = "0x2000485")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9738F4", Offset = "0x9738F4")]
		private sealed class <CopyRenderTextureAfterDelay>d__73 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001A8F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001A90")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001A91")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Tool_PolaroidCamera <>4__this;

			[Token(Token = "0x170002DE")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001B61")]
				[Address(RVA = "0xDA734C", Offset = "0xDA734C", VA = "0xDA734C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002DF")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001B63")]
				[Address(RVA = "0xDA73B4", Offset = "0xDA73B4", VA = "0xDA73B4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001B5E")]
			[Address(RVA = "0xDA643C", Offset = "0xDA643C", VA = "0xDA643C")]
			[DebuggerHidden]
			public <CopyRenderTextureAfterDelay>d__73(int <>1__state)
			{
			}

			[Token(Token = "0x6001B5F")]
			[Address(RVA = "0xDA6E98", Offset = "0xDA6E98", VA = "0xDA6E98", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001B60")]
			[Address(RVA = "0xDA6E9C", Offset = "0xDA6E9C", VA = "0xDA6E9C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001B62")]
			[Address(RVA = "0xDA7354", Offset = "0xDA7354", VA = "0xDA7354", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001A62")]
		private const float ConstantUpdateInterval = 0.5f;

		[Token(Token = "0x4001A63")]
		private const float MinPreviewSqrDistance = 0.2f;

		[Token(Token = "0x4001A64")]
		private const float MaxPreviewSqrDistance = 1f;

		[Token(Token = "0x4001A65")]
		private const int WatermarkPosX = 500;

		[Token(Token = "0x4001A66")]
		private const int WatermarkPosY = -400;

		[Token(Token = "0x4001A67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x97D8E8", Offset = "0x97D8E8")]
		[SerializeField]
		private bool m_usePrefabCameraProjection;

		[Token(Token = "0x4001A68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private Camera m_prefabCamera;

		[Token(Token = "0x4001A69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private int m_resWidth;

		[Token(Token = "0x4001A6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[SerializeField]
		private int m_resHeight;

		[Token(Token = "0x4001A6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private MeshRenderer m_cameraMeshRenderer;

		[Token(Token = "0x4001A6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private Texture2D m_logoOverlayTexture;

		[Token(Token = "0x4001A6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x97D984", Offset = "0x97D984")]
		private MeshFilter m_displayMeshFilter;

		[Token(Token = "0x4001A6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private MeshRenderer m_displayMeshRenderer;

		[Token(Token = "0x4001A6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private GameObject m_displayTurnedOff;

		[Token(Token = "0x4001A70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private GameObject m_cameraLens;

		[Token(Token = "0x4001A71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private bool m_useDynamicFramerate;

		[Token(Token = "0x4001A72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x97DA10", Offset = "0x97DA10")]
		private AssetReference m_polaroidAsset;

		[Token(Token = "0x4001A73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		private Transform m_pictureMovingOutStartTransform;

		[Token(Token = "0x4001A74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[SerializeField]
		private Transform m_pictureMovingOutEndTransform;

		[Token(Token = "0x4001A75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x97DA7C", Offset = "0x97DA7C")]
		private PhotographTargetFinder m_photographTargetFinder;

		[Token(Token = "0x4001A76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x97DAC8", Offset = "0x97DAC8")]
		[SerializeField]
		private Grabbable m_grabbable;

		[Token(Token = "0x4001A77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[SerializeField]
		private SendQuestEvent m_cameraFoundEvent;

		[Token(Token = "0x4001A78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x97DB24", Offset = "0x97DB24")]
		private ParticleSystem m_flashParticle;

		[Token(Token = "0x4001A79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x97DB70", Offset = "0x97DB70")]
		private AudioSource m_cameraPressedSound;

		[Token(Token = "0x4001A7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private PlayerHand m_heldByHand;

		[Token(Token = "0x4001A7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private RenderTexture m_renderTexture;

		[Token(Token = "0x4001A7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private RenderTexture m_renderTextureHalf;

		[Token(Token = "0x4001A7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private RenderTexture m_previewRenderTexture;

		[Token(Token = "0x4001A7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private Texture2D m_polaroidTexture;

		[Token(Token = "0x4001A7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		private Texture2D m_saveToFileTexture;

		[Token(Token = "0x4001A80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		private Rect m_rect;

		[Token(Token = "0x4001A81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		private Rect m_previewRect;

		[Token(Token = "0x4001A82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		private float m_previewUpdateInterval;

		[Token(Token = "0x4001A83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
		private float m_timeSinceLastPreviewUpdate;

		[Token(Token = "0x4001A84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		private bool m_isSetUp;

		[Token(Token = "0x4001A85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x131")]
		private bool m_isActive;

		[Token(Token = "0x4001A86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x132")]
		private bool m_isOnDelay;

		[Token(Token = "0x4001A87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x133")]
		private bool m_hasPendingCapture;

		[Token(Token = "0x4001A88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		private PolaroidPicture m_attachedPolaroid;

		[Token(Token = "0x4001A89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		private string m_polaroidFilePath;

		[Token(Token = "0x4001A8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static bool m_hasWatermark;

		[Token(Token = "0x4001A8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static Color[] sm_watermarkPixels;

		[Token(Token = "0x4001A8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		private bool m_usePreviewScreen;

		[Token(Token = "0x4001A8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x97DBBC", Offset = "0x97DBBC")]
		private static int <PictureWidth>k__BackingField;

		[Token(Token = "0x4001A8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x97DBCC", Offset = "0x97DBCC")]
		private static int <PictureHeight>k__BackingField;

		[Token(Token = "0x170002DB")]
		private Camera m_camera
		{
			[Token(Token = "0x6001B38")]
			[Address(RVA = "0xDA4A10", Offset = "0xDA4A10", VA = "0xDA4A10")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002DC")]
		public static int PictureWidth
		{
			[Token(Token = "0x6001B39")]
			[Address(RVA = "0xDA4A8C", Offset = "0xDA4A8C", VA = "0xDA4A8C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9907F4", Offset = "0x9907F4")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001B3A")]
			[Address(RVA = "0xDA4ADC", Offset = "0xDA4ADC", VA = "0xDA4ADC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x990804", Offset = "0x990804")]
			set
			{
			}
		}

		[Token(Token = "0x170002DD")]
		public static int PictureHeight
		{
			[Token(Token = "0x6001B3B")]
			[Address(RVA = "0xDA4B30", Offset = "0xDA4B30", VA = "0xDA4B30")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x990814", Offset = "0x990814")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001B3C")]
			[Address(RVA = "0xDA4B80", Offset = "0xDA4B80", VA = "0xDA4B80")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x990824", Offset = "0x990824")]
			set
			{
			}
		}

		[Token(Token = "0x6001B3D")]
		[Address(RVA = "0xDA4BD4", Offset = "0xDA4BD4", VA = "0xDA4BD4")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001B3E")]
		[Address(RVA = "0xDA4C7C", Offset = "0xDA4C7C", VA = "0xDA4C7C", Slot = "21")]
		public void Initialize()
		{
		}

		[Token(Token = "0x6001B3F")]
		[Address(RVA = "0xDA5050", Offset = "0xDA5050", VA = "0xDA5050", Slot = "6")]
		public override void Init()
		{
		}

		[Token(Token = "0x6001B40")]
		[Address(RVA = "0xDA4D68", Offset = "0xDA4D68", VA = "0xDA4D68")]
		private bool TrySetupCamera()
		{
			return default(bool);
		}

		[Token(Token = "0x6001B41")]
		[Address(RVA = "0xDA5084", Offset = "0xDA5084", VA = "0xDA5084")]
		private void Update()
		{
		}

		[Token(Token = "0x6001B42")]
		[Address(RVA = "0xDA52D8", Offset = "0xDA52D8", VA = "0xDA52D8", Slot = "12")]
		public override void StartUsing(PlayerHand hand)
		{
		}

		[Token(Token = "0x6001B43")]
		[Address(RVA = "0xDA5494", Offset = "0xDA5494", VA = "0xDA5494", Slot = "13")]
		public override void StopUsing(PlayerHand hand)
		{
		}

		[Token(Token = "0x6001B44")]
		[Address(RVA = "0xDA55A4", Offset = "0xDA55A4", VA = "0xDA55A4", Slot = "14")]
		public override void WhileHeld(PlayerHand hand)
		{
		}

		[Token(Token = "0x6001B45")]
		[Address(RVA = "0xDA5970", Offset = "0xDA5970", VA = "0xDA5970", Slot = "19")]
		public ToolType GetToolType()
		{
			return default(ToolType);
		}

		[Token(Token = "0x6001B46")]
		[Address(RVA = "0xDA5978", Offset = "0xDA5978", VA = "0xDA5978", Slot = "4")]
		public override ComponentState CreateState()
		{
			return null;
		}

		[Token(Token = "0x6001B47")]
		[Address(RVA = "0xDA5678", Offset = "0xDA5678", VA = "0xDA5678")]
		private void UpdateCameraAndHandPositions()
		{
		}

		[Token(Token = "0x6001B48")]
		[Address(RVA = "0xDA5458", Offset = "0xDA5458", VA = "0xDA5458")]
		private void ActivateCamera()
		{
		}

		[Token(Token = "0x6001B49")]
		[Address(RVA = "0xDA54E8", Offset = "0xDA54E8", VA = "0xDA54E8")]
		private void DeactivateCamera()
		{
		}

		[Token(Token = "0x6001B4A")]
		[Address(RVA = "0xDA5A6C", Offset = "0xDA5A6C", VA = "0xDA5A6C")]
		private void OnCameraPreRender(Camera cam)
		{
		}

		[Token(Token = "0x6001B4B")]
		[Address(RVA = "0xDA5104", Offset = "0xDA5104", VA = "0xDA5104")]
		private void RenderCamera()
		{
		}

		[Token(Token = "0x6001B4C")]
		[Address(RVA = "0xDA5B74", Offset = "0xDA5B74", VA = "0xDA5B74")]
		private void OnCameraPostRender(Camera cam)
		{
		}

		[Token(Token = "0x6001B4D")]
		[Address(RVA = "0xDA59D4", Offset = "0xDA59D4", VA = "0xDA59D4")]
		private void SetCameraPowerOn(bool shouldBeOn)
		{
		}

		[Token(Token = "0x6001B4E")]
		[Address(RVA = "0xDA5124", Offset = "0xDA5124", VA = "0xDA5124")]
		private void UpdatePreview()
		{
		}

		[Token(Token = "0x6001B4F")]
		[Address(RVA = "0xDA5800", Offset = "0xDA5800", VA = "0xDA5800")]
		private void ActivatePictureCapture()
		{
		}

		[Token(Token = "0x6001B50")]
		[Address(RVA = "0xDA5C84", Offset = "0xDA5C84", VA = "0xDA5C84")]
		private void TakePicture()
		{
		}

		[Token(Token = "0x6001B51")]
		[Address(RVA = "0xDA637C", Offset = "0xDA637C", VA = "0xDA637C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x990834", Offset = "0x990834")]
		private IEnumerator CopyRenderTextureAfterDelay()
		{
			return null;
		}

		[Token(Token = "0x6001B52")]
		[Address(RVA = "0xDA63F8", Offset = "0xDA63F8", VA = "0xDA63F8")]
		private void PlayEffectsAndSpawnPolaroid()
		{
		}

		[Token(Token = "0x6001B53")]
		[Address(RVA = "0xDA664C", Offset = "0xDA664C", VA = "0xDA664C")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x990898", Offset = "0x990898")]
		private void DrawWorldTestLines(Vector3[] positions)
		{
		}

		[Token(Token = "0x6001B54")]
		[Address(RVA = "0xDA6650", Offset = "0xDA6650", VA = "0xDA6650")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x9908D0", Offset = "0x9908D0")]
		private void DrawScreenTestLines(Vector3[] positions, Rect r)
		{
		}

		[Token(Token = "0x6001B55")]
		[Address(RVA = "0xDA5E08", Offset = "0xDA5E08", VA = "0xDA5E08")]
		private bool GetScreenPreviewRect(out Rect r)
		{
			return default(bool);
		}

		[Token(Token = "0x6001B56")]
		[Address(RVA = "0xDA6654", Offset = "0xDA6654", VA = "0xDA6654")]
		private Vector3 GetTopLeftOrientation(Vector3 screenCoord, float screenHeight)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001B57")]
		[Address(RVA = "0xDA6468", Offset = "0xDA6468", VA = "0xDA6468")]
		private void SpawnPolaroid()
		{
		}

		[Token(Token = "0x6001B58")]
		[Address(RVA = "0xDA6764", Offset = "0xDA6764", VA = "0xDA6764")]
		private void PrePolaroidSpawned(SpawnOperationCallbackData obj)
		{
		}

		[Token(Token = "0x6001B59")]
		[Address(RVA = "0xDA69B4", Offset = "0xDA69B4", VA = "0xDA69B4")]
		private void PostPolaroidSpawned(SpawnOperationCallbackData obj)
		{
		}

		[Token(Token = "0x6001B5A")]
		[Address(RVA = "0xDA6ADC", Offset = "0xDA6ADC", VA = "0xDA6ADC")]
		private void OnPictureMoveOutCompleted()
		{
		}

		[Token(Token = "0x6001B5B")]
		[Address(RVA = "0xDA6AE4", Offset = "0xDA6AE4", VA = "0xDA6AE4")]
		private void OnPolaroidGrabbed(PolaroidGrabbedFromCameraEvent e)
		{
		}

		[Token(Token = "0x6001B5C")]
		[Address(RVA = "0xDA6BB4", Offset = "0xDA6BB4", VA = "0xDA6BB4")]
		private static void AddWatermark(Texture2D texture, Texture2D watermarkTexture)
		{
		}

		[Token(Token = "0x6001B5D")]
		[Address(RVA = "0xDA6E70", Offset = "0xDA6E70", VA = "0xDA6E70")]
		public Tool_PolaroidCamera()
		{
		}
	}
}
namespace NeatCorp.UI
{
	[Token(Token = "0x2000486")]
	public class PushButton : UIButton, IGrabbable
	{
		[Token(Token = "0x2000487")]
		public delegate void PushButtonDelegate(PushButton button);

		[Token(Token = "0x4001A92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public PushButtonDelegate OnStartGrabbing;

		[Token(Token = "0x4001A93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PushButtonDelegate OnStopGrabbing;

		[Token(Token = "0x4001A94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public PushButtonDelegate OnUpdateGrabbing;

		[Token(Token = "0x4001A95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public PushButtonDelegate OnPressButton;

		[Token(Token = "0x4001A96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public PushButtonDelegate OnHoverOver;

		[Token(Token = "0x4001A97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public PushButtonDelegate OnHoverOut;

		[Token(Token = "0x4001A98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public NeatAudioCue onGrabSoundCue;

		[Token(Token = "0x4001A99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private NeatAudioPlayer neatAudioPlayer;

		[Token(Token = "0x4001A9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private PlayerHand heldByHand;

		[Token(Token = "0x4001A9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private Color defaultColor;

		[Token(Token = "0x4001A9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private Color selectedColor;

		[Token(Token = "0x4001A9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private Color highlightedColor;

		[Token(Token = "0x4001A9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private Color disabledColor;

		[Token(Token = "0x4001A9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		private Image buttonImage;

		[Token(Token = "0x4001AA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[SerializeField]
		private Image selectedButtonImage;

		[Token(Token = "0x4001AA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[SerializeField]
		private bool enableChildrenWhenSelected;

		[Token(Token = "0x4001AA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		[SerializeField]
		private Color disabledTextColor;

		[Token(Token = "0x4001AA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[SerializeField]
		private TextMeshPro buttonText;

		[Token(Token = "0x4001AA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private PushButton[] childButtons;

		[Token(Token = "0x4001AA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		protected bool isSelected;

		[Token(Token = "0x4001AA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD9")]
		protected bool isHighlighted;

		[Token(Token = "0x4001AA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDA")]
		protected bool buttonIsEnabled;

		[Token(Token = "0x4001AA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDB")]
		protected bool initialized;

		[Token(Token = "0x6001B64")]
		[Address(RVA = "0xD5CD24", Offset = "0xD5CD24", VA = "0xD5CD24", Slot = "21")]
		public virtual void Awake()
		{
		}

		[Token(Token = "0x6001B65")]
		[Address(RVA = "0xD5CFCC", Offset = "0xD5CFCC", VA = "0xD5CFCC")]
		private void UpdateColor()
		{
		}

		[Token(Token = "0x6001B66")]
		[Address(RVA = "0xD5D22C", Offset = "0xD5D22C", VA = "0xD5D22C")]
		private void UpdateImage()
		{
		}

		[Token(Token = "0x6001B67")]
		[Address(RVA = "0xD5D33C", Offset = "0xD5D33C", VA = "0xD5D33C", Slot = "10")]
		public int GetCurrentPriority()
		{
			return default(int);
		}

		[Token(Token = "0x6001B68")]
		[Address(RVA = "0xD5D344", Offset = "0xD5D344", VA = "0xD5D344", Slot = "22")]
		public PlayerHand GetHeldByHand()
		{
			return null;
		}

		[Token(Token = "0x6001B69")]
		[Address(RVA = "0xD5D34C", Offset = "0xD5D34C", VA = "0xD5D34C", Slot = "7")]
		public override void PressButton(PlayerHand hand)
		{
		}

		[Token(Token = "0x6001B6A")]
		[Address(RVA = "0xD5D788", Offset = "0xD5D788", VA = "0xD5D788", Slot = "4")]
		public override void StartGrabbing(PlayerHand hand, Vector3 grabPositionOnItem, OrientedPoint handAttachPoint)
		{
		}

		[Token(Token = "0x6001B6B")]
		[Address(RVA = "0xD5D79C", Offset = "0xD5D79C", VA = "0xD5D79C", Slot = "6")]
		public override void StopGrabbing(PlayerHand hand, Vector3 grabPositionOnItem, OrientedPoint attachPoint)
		{
		}

		[Token(Token = "0x6001B6C")]
		[Address(RVA = "0xD5D7B0", Offset = "0xD5D7B0", VA = "0xD5D7B0", Slot = "5")]
		public override void UpdateGrabbing(PlayerHand hand, Vector3 grabPositionOnItem, OrientedPoint attachPoint)
		{
		}

		[Token(Token = "0x6001B6D")]
		[Address(RVA = "0xD5D7C4", Offset = "0xD5D7C4", VA = "0xD5D7C4", Slot = "9")]
		public override bool IsEnabled()
		{
			return default(bool);
		}

		[Token(Token = "0x6001B6E")]
		[Address(RVA = "0xD5D800", Offset = "0xD5D800", VA = "0xD5D800", Slot = "23")]
		public bool HaveChildGrabbables()
		{
			return default(bool);
		}

		[Token(Token = "0x6001B6F")]
		[Address(RVA = "0xD5D808", Offset = "0xD5D808", VA = "0xD5D808", Slot = "17")]
		public bool ShouldConsumeGrab(Collider collider)
		{
			return default(bool);
		}

		[Token(Token = "0x6001B70")]
		[Address(RVA = "0xD5D810", Offset = "0xD5D810", VA = "0xD5D810", Slot = "18")]
		public void Touch()
		{
		}

		[Token(Token = "0x6001B71")]
		[Address(RVA = "0xD5D814", Offset = "0xD5D814", VA = "0xD5D814", Slot = "8")]
		public override void SetIsHighlighted(bool highlighted)
		{
		}

		[Token(Token = "0x6001B72")]
		[Address(RVA = "0xD5D890", Offset = "0xD5D890", VA = "0xD5D890")]
		public void SetIsSelected(bool selected)
		{
		}

		[Token(Token = "0x6001B73")]
		[Address(RVA = "0xD5CEC4", Offset = "0xD5CEC4", VA = "0xD5CEC4")]
		private void ToggleChildren(bool enable)
		{
		}

		[Token(Token = "0x6001B74")]
		[Address(RVA = "0xD5D8DC", Offset = "0xD5D8DC", VA = "0xD5D8DC")]
		public void SetIsEnabled(bool shouldBeEnabled)
		{
		}

		[Token(Token = "0x6001B75")]
		[Address(RVA = "0xD5D9D0", Offset = "0xD5D9D0", VA = "0xD5D9D0")]
		public void DisableAndDeselect()
		{
		}

		[Token(Token = "0x6001B76")]
		[Address(RVA = "0xD5DA00", Offset = "0xD5DA00", VA = "0xD5DA00", Slot = "11")]
		public bool IsExtraSticky()
		{
			return default(bool);
		}

		[Token(Token = "0x6001B77")]
		[Address(RVA = "0xD5DA08", Offset = "0xD5DA08", VA = "0xD5DA08", Slot = "12")]
		public GrabbableOutline GetOutline()
		{
			return null;
		}

		[Token(Token = "0x6001B78")]
		[Address(RVA = "0xD5DA10", Offset = "0xD5DA10", VA = "0xD5DA10", Slot = "19")]
		public float GetDelayBeforeGrab()
		{
			return default(float);
		}

		[Token(Token = "0x6001B79")]
		[Address(RVA = "0xD5DA18", Offset = "0xD5DA18", VA = "0xD5DA18", Slot = "20")]
		public Collider[] GetColliders()
		{
			return null;
		}

		[Token(Token = "0x6001B7A")]
		[Address(RVA = "0xD5DA20", Offset = "0xD5DA20", VA = "0xD5DA20")]
		public PushButton()
		{
		}
	}
	[Token(Token = "0x2000488")]
	public class PushMeshButton : UIButton, IGrabbable
	{
		[Token(Token = "0x2000489")]
		public delegate void PushButtonDelegate(PushMeshButton button);

		[Token(Token = "0x4001AA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public PushButtonDelegate OnStartGrabbing;

		[Token(Token = "0x4001AAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PushButtonDelegate OnStopGrabbing;

		[Token(Token = "0x4001AAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public PushButtonDelegate OnUpdateGrabbing;

		[Token(Token = "0x4001AAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public PushButtonDelegate OnPressButton;

		[Token(Token = "0x4001AAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private NeatAudioCue m_pressSoundCue;

		[Token(Token = "0x4001AAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private NeatAudioPlayer m_neatAudioPlayer;

		[Token(Token = "0x4001AAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private GameObject m_defaultState;

		[Token(Token = "0x4001AB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private GameObject m_highlightedState;

		[Token(Token = "0x4001AB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private GameObject m_selectedState;

		[Token(Token = "0x4001AB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private GameObject m_disabledState;

		[Token(Token = "0x4001AB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private bool m_enableChildrenWhenSelected;

		[Token(Token = "0x4001AB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private TextMeshPro m_buttonText;

		[Token(Token = "0x4001AB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private PlayerHand m_heldByHand;

		[Token(Token = "0x4001AB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private PushMeshButton[] m_childButtons;

		[Token(Token = "0x4001AB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private GameObject m_currentState;

		[Token(Token = "0x4001AB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private GameObject[] m_buttonStates;

		[Token(Token = "0x4001AB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		protected bool m_isSelected;

		[Token(Token = "0x4001ABA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x99")]
		protected bool m_isHighlighted;

		[Token(Token = "0x4001ABB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9A")]
		protected bool m_buttonIsEnabled;

		[Token(Token = "0x4001ABC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9B")]
		protected bool m_initialized;

		[Token(Token = "0x6001B7F")]
		[Address(RVA = "0xD5DB60", Offset = "0xD5DB60", VA = "0xD5DB60", Slot = "21")]
		public virtual void Awake()
		{
		}

		[Token(Token = "0x6001B80")]
		[Address(RVA = "0xD5DE30", Offset = "0xD5DE30", VA = "0xD5DE30")]
		private void UpdateState()
		{
		}

		[Token(Token = "0x6001B81")]
		[Address(RVA = "0xD5DFE4", Offset = "0xD5DFE4", VA = "0xD5DFE4")]
		private void SetActiveState()
		{
		}

		[Token(Token = "0x6001B82")]
		[Address(RVA = "0xD5E10C", Offset = "0xD5E10C", VA = "0xD5E10C", Slot = "10")]
		public int GetCurrentPriority()
		{
			return default(int);
		}

		[Token(Token = "0x6001B83")]
		[Address(RVA = "0xD5E114", Offset = "0xD5E114", VA = "0xD5E114", Slot = "22")]
		public PlayerHand GetHeldByHand()
		{
			return null;
		}

		[Token(Token = "0x6001B84")]
		[Address(RVA = "0xD5E11C", Offset = "0xD5E11C", VA = "0xD5E11C", Slot = "7")]
		public override void PressButton(PlayerHand hand)
		{
		}

		[Token(Token = "0x6001B85")]
		[Address(RVA = "0xD5E558", Offset = "0xD5E558", VA = "0xD5E558", Slot = "4")]
		public override void StartGrabbing(PlayerHand hand, Vector3 grabPositionOnItem, OrientedPoint handAttachPoint)
		{
		}

		[Token(Token = "0x6001B86")]
		[Address(RVA = "0xD5E56C", Offset = "0xD5E56C", VA = "0xD5E56C", Slot = "6")]
		public override void StopGrabbing(PlayerHand hand, Vector3 grabPositionOnItem, OrientedPoint attachPoint)
		{
		}

		[Token(Token = "0x6001B87")]
		[Address(RVA = "0xD5E580", Offset = "0xD5E580", VA = "0xD5E580", Slot = "5")]
		public override void UpdateGrabbing(PlayerHand hand, Vector3 grabPositionOnItem, OrientedPoint attachPoint)
		{
		}

		[Token(Token = "0x6001B88")]
		[Address(RVA = "0xD5E594", Offset = "0xD5E594", VA = "0xD5E594", Slot = "9")]
		public override bool IsEnabled()
		{
			return default(bool);
		}

		[Token(Token = "0x6001B89")]
		[Address(RVA = "0xD5E5D0", Offset = "0xD5E5D0", VA = "0xD5E5D0", Slot = "23")]
		public bool HaveChildGrabbables()
		{
			return default(bool);
		}

		[Token(Token = "0x6001B8A")]
		[Address(RVA = "0xD5E5D8", Offset = "0xD5E5D8", VA = "0xD5E5D8", Slot = "17")]
		public bool ShouldConsumeGrab(Collider collider)
		{
			return default(bool);
		}

		[Token(Token = "0x6001B8B")]
		[Address(RVA = "0xD5E5E0", Offset = "0xD5E5E0", VA = "0xD5E5E0", Slot = "18")]
		public void Touch()
		{
		}

		[Token(Token = "0x6001B8C")]
		[Address(RVA = "0xD5E5E4", Offset = "0xD5E5E4", VA = "0xD5E5E4", Slot = "8")]
		public override void SetIsHighlighted(bool highlighted)
		{
		}

		[Token(Token = "0x6001B8D")]
		[Address(RVA = "0xD5E5F0", Offset = "0xD5E5F0", VA = "0xD5E5F0")]
		public void SetIsSelected(bool selected)
		{
		}

		[Token(Token = "0x6001B8E")]
		[Address(RVA = "0xD5DD28", Offset = "0xD5DD28", VA = "0xD5DD28")]
		private void ToggleChildren(bool enable)
		{
		}

		[Token(Token = "0x6001B8F")]
		[Address(RVA = "0xD5E634", Offset = "0xD5E634", VA = "0xD5E634")]
		public void SetIsEnabled(bool shouldBeEnabled)
		{
		}

		[Token(Token = "0x6001B90")]
		[Address(RVA = "0xD5E640", Offset = "0xD5E640", VA = "0xD5E640")]
		public void DisableAndDeselect()
		{
		}

		[Token(Token = "0x6001B91")]
		[Address(RVA = "0xD5E66C", Offset = "0xD5E66C", VA = "0xD5E66C", Slot = "11")]
		public bool IsExtraSticky()
		{
			return default(bool);
		}

		[Token(Token = "0x6001B92")]
		[Address(RVA = "0xD5E674", Offset = "0xD5E674", VA = "0xD5E674", Slot = "12")]
		public GrabbableOutline GetOutline()
		{
			return null;
		}

		[Token(Token = "0x6001B93")]
		[Address(RVA = "0xD5E67C", Offset = "0xD5E67C", VA = "0xD5E67C", Slot = "19")]
		public float GetDelayBeforeGrab()
		{
			return default(float);
		}

		[Token(Token = "0x6001B94")]
		[Address(RVA = "0xD5E684", Offset = "0xD5E684", VA = "0xD5E684", Slot = "20")]
		public Collider[] GetColliders()
		{
			return null;
		}

		[Token(Token = "0x6001B95")]
		[Address(RVA = "0xD5E68C", Offset = "0xD5E68C", VA = "0xD5E68C")]
		public PushMeshButton()
		{
		}
	}
	[Token(Token = "0x200048A")]
	public class HeightAdjustmentControl : NumberStepControl
	{
		[Token(Token = "0x6001B9A")]
		[Address(RVA = "0xD5C48C", Offset = "0xD5C48C", VA = "0xD5C48C")]
		public void SetHeightAdjustment()
		{
		}

		[Token(Token = "0x6001B9B")]
		[Address(RVA = "0xD5C560", Offset = "0xD5C560", VA = "0xD5C560")]
		public static float GetCurrentHeightAdjustment()
		{
			return default(float);
		}

		[Token(Token = "0x6001B9C")]
		[Address(RVA = "0xD5C5D8", Offset = "0xD5C5D8", VA = "0xD5C5D8")]
		public HeightAdjustmentControl()
		{
		}
	}
	[Token(Token = "0x200048B")]
	public class NumberStepControl : MonoBehaviour
	{
		[Token(Token = "0x4001ABD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		protected NumberStepController m_numberStepController;

		[Token(Token = "0x4001ABE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static NumberStepControl m_instance;

		[Token(Token = "0x170002E0")]
		protected static NumberStepController sm_numberStepController
		{
			[Token(Token = "0x6001B9D")]
			[Address(RVA = "0xD5C57C", Offset = "0xD5C57C", VA = "0xD5C57C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001B9E")]
		[Address(RVA = "0xD5C5DC", Offset = "0xD5C5DC", VA = "0xD5C5DC")]
		public NumberStepControl()
		{
		}
	}
	[Token(Token = "0x200048C")]
	public class NumberStepController : MonoBehaviour
	{
		[Token(Token = "0x4001ABF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private PrevNextButton m_prevButton;

		[Token(Token = "0x4001AC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private PrevNextButton m_nextButton;

		[Token(Token = "0x4001AC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private GameSettingId m_settingId;

		[Token(Token = "0x4001AC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private TMP_Text m_textField;

		[Token(Token = "0x4001AC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x97DD3C", Offset = "0x97DD3C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x97DD3C", Offset = "0x97DD3C")]
		[SerializeField]
		private string m_format;

		[Token(Token = "0x4001AC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x97DDAC", Offset = "0x97DDAC")]
		private bool m_applyFormat;

		[Token(Token = "0x4001AC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x97DDF8", Offset = "0x97DDF8")]
		private UnityEvent m_onValueChanged;

		[Token(Token = "0x4001AC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x97DE44", Offset = "0x97DE44")]
		private bool m_loopValues;

		[Token(Token = "0x4001AC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private float[] m_numberSteps;

		[Token(Token = "0x4001AC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private int m_currentStepIndex;

		[Token(Token = "0x4001AC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private bool m_hasInitialized;

		[Token(Token = "0x170002E1")]
		public int CurrentStepIndex
		{
			[Token(Token = "0x6001B9F")]
			[Address(RVA = "0xD5C6D0", Offset = "0xD5C6D0", VA = "0xD5C6D0")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x6001BA0")]
		[Address(RVA = "0xD5C6D8", Offset = "0xD5C6D8", VA = "0xD5C6D8")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001BA1")]
		[Address(RVA = "0xD5C9F8", Offset = "0xD5C9F8", VA = "0xD5C9F8")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001BA2")]
		[Address(RVA = "0xD5C830", Offset = "0xD5C830", VA = "0xD5C830")]
		private void TrySetValueFromSettings()
		{
		}

		[Token(Token = "0x6001BA3")]
		[Address(RVA = "0xD5CB40", Offset = "0xD5CB40", VA = "0xD5CB40")]
		public void Next(PushButton button)
		{
		}

		[Token(Token = "0x6001BA4")]
		[Address(RVA = "0xD5CC28", Offset = "0xD5CC28", VA = "0xD5CC28")]
		public void Previous(PushButton button)
		{
		}

		[Token(Token = "0x6001BA5")]
		[Address(RVA = "0xD5C908", Offset = "0xD5C908", VA = "0xD5C908")]
		private void SetText()
		{
		}

		[Token(Token = "0x6001BA6")]
		[Address(RVA = "0xD5CB98", Offset = "0xD5CB98", VA = "0xD5CB98")]
		private void ChangeSetting()
		{
		}

		[Token(Token = "0x6001BA7")]
		[Address(RVA = "0xD5C510", Offset = "0xD5C510", VA = "0xD5C510")]
		public float GetCurrentStepValue()
		{
			return default(float);
		}

		[Token(Token = "0x6001BA8")]
		[Address(RVA = "0xD5CC8C", Offset = "0xD5CC8C", VA = "0xD5CC8C")]
		public NumberStepController()
		{
		}
	}
	[Token(Token = "0x200048D")]
	public class UIButton : MonoBehaviour
	{
		[Token(Token = "0x6001BA9")]
		[Address(RVA = "0xD5E6E0", Offset = "0xD5E6E0", VA = "0xD5E6E0", Slot = "4")]
		public virtual void StartGrabbing(PlayerHand playerHand, Vector3 point, OrientedPoint grabPoint)
		{
		}

		[Token(Token = "0x6001BAA")]
		[Address(RVA = "0xD5E740", Offset = "0xD5E740", VA = "0xD5E740", Slot = "5")]
		public virtual void UpdateGrabbing(PlayerHand playerHand, Vector3 point, OrientedPoint grabPoint)
		{
		}

		[Token(Token = "0x6001BAB")]
		[Address(RVA = "0xD5E7A0", Offset = "0xD5E7A0", VA = "0xD5E7A0", Slot = "6")]
		public virtual void StopGrabbing(PlayerHand playerHand, Vector3 point, OrientedPoint grabPoint)
		{
		}

		[Token(Token = "0x6001BAC")]
		[Address(RVA = "0xD5E800", Offset = "0xD5E800", VA = "0xD5E800", Slot = "7")]
		public virtual void PressButton(PlayerHand playerHand)
		{
		}

		[Token(Token = "0x6001BAD")]
		[Address(RVA = "0xD5E860", Offset = "0xD5E860", VA = "0xD5E860", Slot = "8")]
		public virtual void SetIsHighlighted(bool v)
		{
		}

		[Token(Token = "0x6001BAE")]
		[Address(RVA = "0xD5E8C0", Offset = "0xD5E8C0", VA = "0xD5E8C0", Slot = "9")]
		public virtual bool IsEnabled()
		{
			return default(bool);
		}

		[Token(Token = "0x6001BAF")]
		[Address(RVA = "0xD5DB28", Offset = "0xD5DB28", VA = "0xD5DB28")]
		public UIButton()
		{
		}
	}
}
namespace NeatCorp.UI.Collection
{
	[Token(Token = "0x200048E")]
	public enum AnimalCategory
	{
		[Token(Token = "0x4001ACB")]
		Creature,
		[Token(Token = "0x4001ACC")]
		Fish,
		[Token(Token = "0x4001ACD")]
		Bird
	}
	[Token(Token = "0x200048F")]
	public class AnimalCategoryPage : CategoryPage
	{
		[Token(Token = "0x4001ACE")]
		private const int AnimalEntriesPerFold = 4;

		[Token(Token = "0x4001ACF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private BookIllustration[] m_illustrations;

		[Token(Token = "0x4001AD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private List<AnimalCollectionItem> m_unlockedAnimals;

		[Token(Token = "0x4001AD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private bool m_hasInitializedEventListeners;

		[Token(Token = "0x170002E2")]
		public List<AnimalCollectionItem> UnlockedAnimals
		{
			[Token(Token = "0x6001BB0")]
			[Address(RVA = "0xD56CCC", Offset = "0xD56CCC", VA = "0xD56CCC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001BB1")]
		[Address(RVA = "0xD56CD4", Offset = "0xD56CD4", VA = "0xD56CD4")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001BB2")]
		[Address(RVA = "0xD56D84", Offset = "0xD56D84", VA = "0xD56D84")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001BB3")]
		[Address(RVA = "0xD56E2C", Offset = "0xD56E2C", VA = "0xD56E2C")]
		public void RegisterBase(AnimalCollectionPage recipeCollectionPage, AnimalCollectionSaveData[] unlockedAnimals)
		{
		}

		[Token(Token = "0x6001BB4")]
		[Address(RVA = "0xD57034", Offset = "0xD57034", VA = "0xD57034")]
		private void OnAnimalUnlocked(UnlockCollectableAnimalEvent e)
		{
		}

		[Token(Token = "0x6001BB5")]
		[Address(RVA = "0xD57208", Offset = "0xD57208", VA = "0xD57208")]
		private void TryUnlockAnimal(AnimalCollectionItemData item, bool isNew = true)
		{
		}

		[Token(Token = "0x6001BB6")]
		[Address(RVA = "0xD56F0C", Offset = "0xD56F0C", VA = "0xD56F0C")]
		private void UnlockAll(AnimalCollectionSaveData[] allUnlockedItems)
		{
		}

		[Token(Token = "0x6001BB7")]
		[Address(RVA = "0xD57358", Offset = "0xD57358", VA = "0xD57358")]
		private bool IsAlreadyUnlocked(PhotographTargetType photographTargetType)
		{
			return default(bool);
		}

		[Token(Token = "0x6001BB8")]
		[Address(RVA = "0xD576A8", Offset = "0xD576A8", VA = "0xD576A8", Slot = "6")]
		protected override int GetEntriesPerFold()
		{
			return default(int);
		}

		[Token(Token = "0x6001BB9")]
		[Address(RVA = "0xD576B0", Offset = "0xD576B0", VA = "0xD576B0", Slot = "7")]
		protected override void ShowEntriesAtPage()
		{
		}

		[Token(Token = "0x6001BBA")]
		[Address(RVA = "0xD57854", Offset = "0xD57854", VA = "0xD57854")]
		private void MakeAnimalItemAsNonNew(BookIllustration illustration)
		{
		}

		[Token(Token = "0x6001BBB")]
		[Address(RVA = "0xD57B5C", Offset = "0xD57B5C", VA = "0xD57B5C", Slot = "9")]
		protected override int GetItemsTotal()
		{
			return default(int);
		}

		[Token(Token = "0x6001BBC")]
		[Address(RVA = "0xD57418", Offset = "0xD57418", VA = "0xD57418")]
		private bool TryGetIllustration(PhotographTargetType targetType, out BookIllustration illustration)
		{
			return default(bool);
		}

		[Token(Token = "0x6001BBD")]
		[Address(RVA = "0xD57B78", Offset = "0xD57B78", VA = "0xD57B78", Slot = "10")]
		public override bool HasNewlyUnlockedItems()
		{
			return default(bool);
		}

		[Token(Token = "0x6001BBE")]
		[Address(RVA = "0xD57C30", Offset = "0xD57C30", VA = "0xD57C30")]
		public AnimalCategoryPage()
		{
		}
	}
	[Token(Token = "0x2000490")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x973904", Offset = "0x973904")]
	public class AnimalCollection : Collection
	{
		[Token(Token = "0x4001AD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		protected AnimalCategory m_category;

		[Token(Token = "0x4001AD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private List<AnimalCollectionItemData> m_items;

		[Token(Token = "0x6001BBF")]
		[Address(RVA = "0xD57CB4", Offset = "0xD57CB4", VA = "0xD57CB4")]
		private bool GetTargetForMatchingCategory(CollectableData collectable, out PhotographTarget target)
		{
			return default(bool);
		}

		[Token(Token = "0x6001BC0")]
		[Address(RVA = "0xD57D84", Offset = "0xD57D84", VA = "0xD57D84")]
		private bool IsMatchingCategory(PhotographTarget target)
		{
			return default(bool);
		}

		[Token(Token = "0x6001BC1")]
		[Address(RVA = "0xD570F0", Offset = "0xD570F0", VA = "0xD570F0")]
		public bool TryGetDataFromTarget(PhotographTarget target, out AnimalCollectionItemData recipeCollectionItem)
		{
			return default(bool);
		}

		[Token(Token = "0x6001BC2")]
		[Address(RVA = "0xD575AC", Offset = "0xD575AC", VA = "0xD575AC")]
		public bool TryGetDataFromTargetType(PhotographTargetType targetType, out AnimalCollectionItemData recipeCollectionItem)
		{
			return default(bool);
		}

		[Token(Token = "0x6001BC3")]
		[Address(RVA = "0xD57E28", Offset = "0xD57E28", VA = "0xD57E28")]
		private bool CollectionContainsType(PhotographTargetType type)
		{
			return default(bool);
		}

		[Token(Token = "0x6001BC4")]
		[Address(RVA = "0xD57EE0", Offset = "0xD57EE0", VA = "0xD57EE0")]
		public AnimalCollection()
		{
		}
	}
	[Token(Token = "0x2000491")]
	public struct AnimalCollectionItem
	{
		[Token(Token = "0x4001AD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public AnimalCollectionItemData ItemData;

		[Token(Token = "0x4001AD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool IsNew;

		[Token(Token = "0x6001BC5")]
		[Address(RVA = "0xA45D30", Offset = "0xA45D30", VA = "0xA45D30")]
		public AnimalCollectionItem(AnimalCollectionItemData itemData, bool isNew = true)
		{
		}

		[Token(Token = "0x6001BC6")]
		[Address(RVA = "0xD57B24", Offset = "0xD57B24", VA = "0xD57B24")]
		public static AnimalCollectionItem MakeNonNew(AnimalCollectionItem item)
		{
			return default(AnimalCollectionItem);
		}
	}
	[Serializable]
	[Token(Token = "0x2000492")]
	public struct AnimalCollectionItemData
	{
		[Token(Token = "0x4001AD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string Name;

		[Token(Token = "0x4001AD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public PhotographTargetType PhotographTargetType;

		[Token(Token = "0x4001AD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public AnimalCategory Category;
	}
	[Token(Token = "0x2000493")]
	public class AnimalCollectionPage : CollectionPage, IInitializable
	{
		[Token(Token = "0x4001AD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private GameObject m_creatureCategory;

		[Token(Token = "0x4001ADA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private GameObject m_fishCategory;

		[Token(Token = "0x4001ADB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private PushButton m_creatureCategoryButton;

		[Token(Token = "0x4001ADC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private PushButton m_fishCategoryButton;

		[Token(Token = "0x4001ADD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private AnimalCategoryPage m_creatureCategoryPage;

		[Token(Token = "0x4001ADE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private AnimalCategoryPage m_fishCategoryPage;

		[Token(Token = "0x4001ADF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[HideInInspector]
		[SerializeField]
		private AnimalCategoryPage[] m_allCategories;

		[Token(Token = "0x6001BC7")]
		[Address(RVA = "0xD57F64", Offset = "0xD57F64", VA = "0xD57F64", Slot = "10")]
		public void Initialize()
		{
		}

		[Token(Token = "0x6001BC8")]
		[Address(RVA = "0xD5805C", Offset = "0xD5805C", VA = "0xD5805C", Slot = "4")]
		public override ComponentState CreateState()
		{
			return null;
		}

		[Token(Token = "0x6001BC9")]
		[Address(RVA = "0xD58270", Offset = "0xD58270", VA = "0xD58270", Slot = "5")]
		protected override void OnEnable()
		{
		}

		[Token(Token = "0x6001BCA")]
		[Address(RVA = "0xD583E8", Offset = "0xD583E8", VA = "0xD583E8", Slot = "6")]
		protected override void OnDisable()
		{
		}

		[Token(Token = "0x6001BCB")]
		[Address(RVA = "0xD58534", Offset = "0xD58534", VA = "0xD58534")]
		private void CreaturesCategoryPressed(PushButton button)
		{
		}

		[Token(Token = "0x6001BCC")]
		[Address(RVA = "0xD58578", Offset = "0xD58578", VA = "0xD58578")]
		private void FishCategoryPressed(PushButton button)
		{
		}

		[Token(Token = "0x6001BCD")]
		[Address(RVA = "0xD585BC", Offset = "0xD585BC", VA = "0xD585BC", Slot = "8")]
		public override bool HasNewlyUnlockedItems()
		{
			return default(bool);
		}

		[Token(Token = "0x6001BCE")]
		[Address(RVA = "0xD5863C", Offset = "0xD5863C", VA = "0xD5863C", Slot = "9")]
		public override void UpdateCategoryNewEffects()
		{
		}

		[Token(Token = "0x6001BCF")]
		[Address(RVA = "0xD586B8", Offset = "0xD586B8", VA = "0xD586B8")]
		public AnimalCollectionPage()
		{
		}
	}
	[Token(Token = "0x2000494")]
	public class AnimalCollectionPageState : ComponentState
	{
		[Token(Token = "0x4001AE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public AnimalCollectionSaveData[] unlockedAnimals;

		[Token(Token = "0x6001BD0")]
		[Address(RVA = "0xD5814C", Offset = "0xD5814C", VA = "0xD5814C")]
		public AnimalCollectionPageState(List<AnimalCollectionItem> animals)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000495")]
	public struct AnimalCollectionSaveData
	{
		[Token(Token = "0x4001AE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public PhotographTargetType PhotographTargetType;

		[Token(Token = "0x4001AE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public bool IsNew;

		[Token(Token = "0x6001BD1")]
		[Address(RVA = "0xA45DA0", Offset = "0xA45DA0", VA = "0xA45DA0")]
		public AnimalCollectionSaveData(AnimalCollectionItemData animalData, bool isNew)
		{
		}
	}
	[Token(Token = "0x2000496")]
	public class PhotographTarget : MonoBehaviour
	{
		[Token(Token = "0x4001AE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Collider[] m_colliders;

		[Token(Token = "0x4001AE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private AnimalCategory m_category;

		[Token(Token = "0x4001AE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private PhotographTargetType m_targetType;

		[Token(Token = "0x4001AE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private bool m_ignoreCollectable;

		[Token(Token = "0x170002E3")]
		public bool IgnoreCollectable
		{
			[Token(Token = "0x6001BD2")]
			[Address(RVA = "0xD5A46C", Offset = "0xD5A46C", VA = "0xD5A46C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170002E4")]
		public AnimalCategory AnimalCategory
		{
			[Token(Token = "0x6001BD3")]
			[Address(RVA = "0xD5A474", Offset = "0xD5A474", VA = "0xD5A474")]
			get
			{
				return default(AnimalCategory);
			}
		}

		[Token(Token = "0x170002E5")]
		public PhotographTargetType TargetType
		{
			[Token(Token = "0x6001BD4")]
			[Address(RVA = "0xD5A47C", Offset = "0xD5A47C", VA = "0xD5A47C")]
			get
			{
				return default(PhotographTargetType);
			}
		}

		[Token(Token = "0x6001BD5")]
		[Address(RVA = "0xD5A484", Offset = "0xD5A484", VA = "0xD5A484")]
		public bool HitTestColliders(Vector3 origin, float maxDistance)
		{
			return default(bool);
		}

		[Token(Token = "0x6001BD6")]
		[Address(RVA = "0xD5A708", Offset = "0xD5A708", VA = "0xD5A708")]
		public PhotographTarget()
		{
		}
	}
	[Token(Token = "0x2000497")]
	public class PhotographTargetFinder : MonoBehaviour
	{
		[Token(Token = "0x4001AE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private SphereCollider m_collider;

		[Token(Token = "0x4001AE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private List<PhotographTarget> m_animalTargets;

		[Token(Token = "0x4001AE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x97DFB8", Offset = "0x97DFB8")]
		private bool <HasAnimalTargets>k__BackingField;

		[Token(Token = "0x170002E6")]
		public bool HasAnimalTargets
		{
			[Token(Token = "0x6001BD7")]
			[Address(RVA = "0xD5A710", Offset = "0xD5A710", VA = "0xD5A710")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x990958", Offset = "0x990958")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001BD8")]
			[Address(RVA = "0xD5A718", Offset = "0xD5A718", VA = "0xD5A718")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x990968", Offset = "0x990968")]
			private set
			{
			}
		}

		[Token(Token = "0x6001BD9")]
		[Address(RVA = "0xD5A724", Offset = "0xD5A724", VA = "0xD5A724")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x6001BDA")]
		[Address(RVA = "0xD5A8B4", Offset = "0xD5A8B4", VA = "0xD5A8B4")]
		private void OnTriggerExit(Collider other)
		{
		}

		[Token(Token = "0x6001BDB")]
		[Address(RVA = "0xD5A858", Offset = "0xD5A858", VA = "0xD5A858")]
		private void UpdateHasTarget()
		{
		}

		[Token(Token = "0x6001BDC")]
		[Address(RVA = "0xD5A954", Offset = "0xD5A954", VA = "0xD5A954")]
		public void OnPhotoTaken()
		{
		}

		[Token(Token = "0x6001BDD")]
		[Address(RVA = "0xD5A7C0", Offset = "0xD5A7C0", VA = "0xD5A7C0")]
		private bool TryGetPhotographTargetUpwards(Transform tf, int upwardLevels, out PhotographTarget target)
		{
			return default(bool);
		}

		[Token(Token = "0x6001BDE")]
		[Address(RVA = "0xD5AAAC", Offset = "0xD5AAAC", VA = "0xD5AAAC")]
		private bool TryGetPhotographTarget(Transform tf, out PhotographTarget target)
		{
			return default(bool);
		}

		[Token(Token = "0x6001BDF")]
		[Address(RVA = "0xD5AB14", Offset = "0xD5AB14", VA = "0xD5AB14")]
		private bool TryGetNextParent(ref Transform tf)
		{
			return default(bool);
		}

		[Token(Token = "0x6001BE0")]
		[Address(RVA = "0xD5ABD0", Offset = "0xD5ABD0", VA = "0xD5ABD0")]
		public void StartUsing()
		{
		}

		[Token(Token = "0x6001BE1")]
		[Address(RVA = "0xD5ABF8", Offset = "0xD5ABF8", VA = "0xD5ABF8")]
		public void StopUsing()
		{
		}

		[Token(Token = "0x6001BE2")]
		[Address(RVA = "0xD5AC6C", Offset = "0xD5AC6C", VA = "0xD5AC6C")]
		public PhotographTargetFinder()
		{
		}
	}
	[Token(Token = "0x2000498")]
	public enum PhotographTargetType
	{
		[Token(Token = "0x4001AEB")]
		Undefined,
		[Token(Token = "0x4001AEC")]
		Puffkin,
		[Token(Token = "0x4001AED")]
		ManateeCow,
		[Token(Token = "0x4001AEE")]
		Moleseal,
		[Token(Token = "0x4001AEF")]
		Ghost,
		[Token(Token = "0x4001AF0")]
		Dragonsheep,
		[Token(Token = "0x4001AF1")]
		Blowbird,
		[Token(Token = "0x4001AF2")]
		Seagull,
		[Token(Token = "0x4001AF3")]
		Bullfink,
		[Token(Token = "0x4001AF4")]
		Owl,
		[Token(Token = "0x4001AF5")]
		Raven,
		[Token(Token = "0x4001AF6")]
		Duck,
		[Token(Token = "0x4001AF7")]
		BlobFish,
		[Token(Token = "0x4001AF8")]
		BunnyFish,
		[Token(Token = "0x4001AF9")]
		CuttleFish,
		[Token(Token = "0x4001AFA")]
		GoldFish,
		[Token(Token = "0x4001AFB")]
		JellyFish,
		[Token(Token = "0x4001AFC")]
		LurkerFish,
		[Token(Token = "0x4001AFD")]
		PufferFish,
		[Token(Token = "0x4001AFE")]
		SpikeFish,
		[Token(Token = "0x4001AFF")]
		TadpoleFish,
		[Token(Token = "0x4001B00")]
		TongueFish,
		[Token(Token = "0x4001B01")]
		TubeFish,
		[Token(Token = "0x4001B02")]
		PotpotFlippy,
		[Token(Token = "0x4001B03")]
		PotpotLinnea,
		[Token(Token = "0x4001B04")]
		PotpotLeo,
		[Token(Token = "0x4001B05")]
		FurnitureMerchant,
		[Token(Token = "0x4001B06")]
		GeneralMerchant,
		[Token(Token = "0x4001B07")]
		SeedMerchant,
		[Token(Token = "0x4001B08")]
		ToolsMerchant,
		[Token(Token = "0x4001B09")]
		GodBiome1,
		[Token(Token = "0x4001B0A")]
		GodBiome2,
		[Token(Token = "0x4001B0B")]
		GodBiome3,
		[Token(Token = "0x4001B0C")]
		Whale
	}
	[Token(Token = "0x2000499")]
	public class BookIllustration : MonoBehaviour
	{
		[Token(Token = "0x4001B0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject m_rendered;

		[Token(Token = "0x4001B0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GameObject m_silhouette;

		[Token(Token = "0x4001B0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private ParticleSystem m_newEffect;

		[Token(Token = "0x4001B10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private PhotographTargetType[] m_representingTypes;

		[Token(Token = "0x4001B11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x97E008", Offset = "0x97E008")]
		private bool <IsUnlocked>k__BackingField;

		[Token(Token = "0x4001B12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x97E018", Offset = "0x97E018")]
		private bool <IsNew>k__BackingField;

		[Token(Token = "0x170002E7")]
		public bool IsUnlocked
		{
			[Token(Token = "0x6001BE3")]
			[Address(RVA = "0xD586D8", Offset = "0xD586D8", VA = "0xD586D8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x990978", Offset = "0x990978")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001BE4")]
			[Address(RVA = "0xD586E0", Offset = "0xD586E0", VA = "0xD586E0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x990988", Offset = "0x990988")]
			private set
			{
			}
		}

		[Token(Token = "0x170002E8")]
		public bool IsNew
		{
			[Token(Token = "0x6001BE5")]
			[Address(RVA = "0xD586EC", Offset = "0xD586EC", VA = "0xD586EC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x990998", Offset = "0x990998")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001BE6")]
			[Address(RVA = "0xD586F4", Offset = "0xD586F4", VA = "0xD586F4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9909A8", Offset = "0x9909A8")]
			private set
			{
			}
		}

		[Token(Token = "0x6001BE7")]
		[Address(RVA = "0xD57538", Offset = "0xD57538", VA = "0xD57538")]
		public void Unlock(bool isNew = false)
		{
		}

		[Token(Token = "0x6001BE8")]
		[Address(RVA = "0xD58700", Offset = "0xD58700", VA = "0xD58700")]
		public void Lock()
		{
		}

		[Token(Token = "0x6001BE9")]
		[Address(RVA = "0xD57AD4", Offset = "0xD57AD4", VA = "0xD57AD4")]
		public bool IsRepresenting(PhotographTargetType type)
		{
			return default(bool);
		}

		[Token(Token = "0x6001BEA")]
		[Address(RVA = "0xD577BC", Offset = "0xD577BC", VA = "0xD577BC")]
		public void Show()
		{
		}

		[Token(Token = "0x6001BEB")]
		[Address(RVA = "0xD5798C", Offset = "0xD5798C", VA = "0xD5798C")]
		public void Hide()
		{
		}

		[Token(Token = "0x6001BEC")]
		[Address(RVA = "0xD58784", Offset = "0xD58784", VA = "0xD58784")]
		public BookIllustration()
		{
		}
	}
	[Token(Token = "0x200049A")]
	public class BookRecipeSprite : MonoBehaviour
	{
		[Token(Token = "0x4001B13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private SpriteRenderer m_spriteRenderer;

		[Token(Token = "0x4001B14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private ParticleSystem m_newEffect;

		[Token(Token = "0x4001B15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x97E048", Offset = "0x97E048")]
		private bool <IsUnlocked>k__BackingField;

		[Token(Token = "0x4001B16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x97E058", Offset = "0x97E058")]
		private bool <IsNew>k__BackingField;

		[Token(Token = "0x170002E9")]
		public bool IsUnlocked
		{
			[Token(Token = "0x6001BED")]
			[Address(RVA = "0xD5878C", Offset = "0xD5878C", VA = "0xD5878C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9909B8", Offset = "0x9909B8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001BEE")]
			[Address(RVA = "0xD58794", Offset = "0xD58794", VA = "0xD58794")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9909C8", Offset = "0x9909C8")]
			private set
			{
			}
		}

		[Token(Token = "0x170002EA")]
		public bool IsNew
		{
			[Token(Token = "0x6001BEF")]
			[Address(RVA = "0xD587A0", Offset = "0xD587A0", VA = "0xD587A0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9909D8", Offset = "0x9909D8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001BF0")]
			[Address(RVA = "0xD587A8", Offset = "0xD587A8", VA = "0xD587A8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9909E8", Offset = "0x9909E8")]
			private set
			{
			}
		}

		[Token(Token = "0x6001BF1")]
		[Address(RVA = "0xD587B4", Offset = "0xD587B4", VA = "0xD587B4")]
		public void Show(Sprite sprite, bool isNew)
		{
		}

		[Token(Token = "0x6001BF2")]
		[Address(RVA = "0xD588B0", Offset = "0xD588B0", VA = "0xD588B0")]
		public void Hide()
		{
		}

		[Token(Token = "0x6001BF3")]
		[Address(RVA = "0xD5892C", Offset = "0xD5892C", VA = "0xD5892C")]
		public BookRecipeSprite()
		{
		}
	}
	[Token(Token = "0x200049B")]
	public class BookmarkHandler : MonoBehaviour
	{
		[Token(Token = "0x4001B17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private MenuBookmark m_homeBookmark;

		[Token(Token = "0x4001B18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private MenuBookmark m_recipeBookmark;

		[Token(Token = "0x4001B19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private MenuBookmark m_creatureBookmark;

		[Token(Token = "0x4001B1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private CollectionPage m_recipeCollectionPage;

		[Token(Token = "0x4001B1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private CollectionPage m_creatureCollectionPage;

		[Token(Token = "0x6001BF4")]
		[Address(RVA = "0xD58934", Offset = "0xD58934", VA = "0xD58934")]
		public void UpdateNotifications()
		{
		}

		[Token(Token = "0x6001BF5")]
		[Address(RVA = "0xD58A00", Offset = "0xD58A00", VA = "0xD58A00")]
		public BookmarkHandler()
		{
		}
	}
	[Token(Token = "0x200049C")]
	public class CategoryPage : MonoBehaviour
	{
		[Token(Token = "0x4001B1C")]
		private const int DefaultEntriesPerFold = 4;

		[Token(Token = "0x4001B1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		protected Collection m_collection;

		[Token(Token = "0x4001B1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private PushButton m_nextPageButton;

		[Token(Token = "0x4001B1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private PushButton m_prevPageButton;

		[Token(Token = "0x4001B20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private MenuCategoryTab m_tab;

		[Token(Token = "0x4001B21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private TMP_Text m_leftPageNumber;

		[Token(Token = "0x4001B22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private TMP_Text m_rightPageNumber;

		[Token(Token = "0x4001B23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		protected int m_unlockedItemsNum;

		[Token(Token = "0x4001B24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		protected int m_currentPageIndex;

		[Token(Token = "0x4001B25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		protected int m_maxPages;

		[Token(Token = "0x4001B26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		protected CollectionPage m_collectionPage;

		[Token(Token = "0x170002EB")]
		protected int EntriesPerFold
		{
			[Token(Token = "0x6001BF6")]
			[Address(RVA = "0xD577B0", Offset = "0xD577B0", VA = "0xD577B0")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x6001BF7")]
		[Address(RVA = "0xD58A08", Offset = "0xD58A08", VA = "0xD58A08", Slot = "4")]
		protected virtual void OnEnable()
		{
		}

		[Token(Token = "0x6001BF8")]
		[Address(RVA = "0xD58B60", Offset = "0xD58B60", VA = "0xD58B60", Slot = "5")]
		protected virtual void OnDisable()
		{
		}

		[Token(Token = "0x6001BF9")]
		[Address(RVA = "0xD58CA8", Offset = "0xD58CA8", VA = "0xD58CA8", Slot = "6")]
		protected virtual int GetEntriesPerFold()
		{
			return default(int);
		}

		[Token(Token = "0x6001BFA")]
		[Address(RVA = "0xD58CB0", Offset = "0xD58CB0", VA = "0xD58CB0")]
		public void OnNextPageButtonPressed(PushButton button)
		{
		}

		[Token(Token = "0x6001BFB")]
		[Address(RVA = "0xD58CEC", Offset = "0xD58CEC", VA = "0xD58CEC")]
		public void OnPrevPageButtonPressed(PushButton button)
		{
		}

		[Token(Token = "0x6001BFC")]
		[Address(RVA = "0xD58DA8", Offset = "0xD58DA8", VA = "0xD58DA8", Slot = "7")]
		protected virtual void ShowEntriesAtPage()
		{
		}

		[Token(Token = "0x6001BFD")]
		[Address(RVA = "0xD56CD8", Offset = "0xD56CD8", VA = "0xD56CD8")]
		protected void UpdateMaxPages()
		{
		}

		[Token(Token = "0x6001BFE")]
		[Address(RVA = "0xD58DAC", Offset = "0xD58DAC", VA = "0xD58DAC", Slot = "8")]
		protected virtual Sprite GetCollectionSprite(int i)
		{
			return null;
		}

		[Token(Token = "0x6001BFF")]
		[Address(RVA = "0xD58DB4", Offset = "0xD58DB4", VA = "0xD58DB4", Slot = "9")]
		protected virtual int GetItemsTotal()
		{
			return default(int);
		}

		[Token(Token = "0x6001C00")]
		[Address(RVA = "0xD58DBC", Offset = "0xD58DBC", VA = "0xD58DBC", Slot = "10")]
		public virtual bool HasNewlyUnlockedItems()
		{
			return default(bool);
		}

		[Token(Token = "0x6001C01")]
		[Address(RVA = "0xD57A68", Offset = "0xD57A68", VA = "0xD57A68")]
		public void UpdateNewEffectPlayback()
		{
		}

		[Token(Token = "0x6001C02")]
		[Address(RVA = "0xD57A08", Offset = "0xD57A08", VA = "0xD57A08")]
		protected void UpdatePageNumbers()
		{
		}

		[Token(Token = "0x6001C03")]
		[Address(RVA = "0xD58EC8", Offset = "0xD58EC8", VA = "0xD58EC8")]
		private string GetPageNumberText(bool isLeftPage)
		{
			return null;
		}

		[Token(Token = "0x6001C04")]
		[Address(RVA = "0xD57CAC", Offset = "0xD57CAC", VA = "0xD57CAC")]
		public CategoryPage()
		{
		}
	}
	[Token(Token = "0x200049D")]
	public struct CollectableData
	{
		[Token(Token = "0x4001B27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public GameObject Prefab;

		[Token(Token = "0x4001B28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public AssetReference AssetReference;

		[Token(Token = "0x4001B29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string GUID;
	}
	[Token(Token = "0x200049E")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x973970", Offset = "0x973970")]
	public class Collection : ScriptableObject
	{
		[Token(Token = "0x6001C05")]
		[Address(RVA = "0xD57F5C", Offset = "0xD57F5C", VA = "0xD57F5C")]
		public Collection()
		{
		}
	}
	[Token(Token = "0x200049F")]
	public abstract class CollectionPage : SaveableComponent
	{
		[Token(Token = "0x4001B2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private NeatAudioPlayer m_audioPlayer;

		[Token(Token = "0x4001B2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private NeatAudioCue m_unlockSound;

		[Token(Token = "0x4001B2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private MenuBookmark m_bookmark;

		[Token(Token = "0x6001C06")]
		[Address(RVA = "0xD583C8", Offset = "0xD583C8", VA = "0xD583C8", Slot = "5")]
		protected virtual void OnEnable()
		{
		}

		[Token(Token = "0x6001C07")]
		[Address(RVA = "0xD58530", Offset = "0xD58530", VA = "0xD58530", Slot = "6")]
		protected virtual void OnDisable()
		{
		}

		[Token(Token = "0x6001C08")]
		[Address(RVA = "0xD58FBC", Offset = "0xD58FBC", VA = "0xD58FBC", Slot = "4")]
		public override ComponentState CreateState()
		{
			return null;
		}

		[Token(Token = "0x6001C09")]
		[Address(RVA = "0xD5901C", Offset = "0xD5901C", VA = "0xD5901C")]
		public int GetCollectionIds()
		{
			return default(int);
		}

		[Token(Token = "0x6001C0A")]
		[Address(RVA = "0xD59024", Offset = "0xD59024", VA = "0xD59024")]
		public int GetCollectionId()
		{
			return default(int);
		}

		[Token(Token = "0x6001C0B")]
		[Address(RVA = "0xD5902C", Offset = "0xD5902C", VA = "0xD5902C", Slot = "7")]
		public virtual void PlayUnlockSound()
		{
		}

		[Token(Token = "0x6001C0C")]
		[Address(RVA = "0xD590C0", Offset = "0xD590C0", VA = "0xD590C0", Slot = "8")]
		public virtual bool HasNewlyUnlockedItems()
		{
			return default(bool);
		}

		[Token(Token = "0x6001C0D")]
		[Address(RVA = "0xD58E14", Offset = "0xD58E14", VA = "0xD58E14")]
		public void TryShowBookmarkNewEffect()
		{
		}

		[Token(Token = "0x6001C0E")]
		public abstract void UpdateCategoryNewEffects();

		[Token(Token = "0x6001C0F")]
		[Address(RVA = "0xD58E7C", Offset = "0xD58E7C", VA = "0xD58E7C")]
		public void TryStopBookmarkNewEffect()
		{
		}

		[Token(Token = "0x6001C10")]
		[Address(RVA = "0xD586C0", Offset = "0xD586C0", VA = "0xD586C0")]
		protected CollectionPage()
		{
		}
	}
	[Token(Token = "0x20004A0")]
	public class MenuBookmark : MonoBehaviour
	{
		[Token(Token = "0x20004A1")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9739DC", Offset = "0x9739DC")]
		private sealed class <UpdateWiggleRoutine>d__20 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001B38")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001B39")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001B3A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public MenuBookmark <>4__this;

			[Token(Token = "0x170002EC")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001C24")]
				[Address(RVA = "0xD59BD0", Offset = "0xD59BD0", VA = "0xD59BD0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002ED")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001C26")]
				[Address(RVA = "0xD59C38", Offset = "0xD59C38", VA = "0xD59C38", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001C21")]
			[Address(RVA = "0xD59820", Offset = "0xD59820", VA = "0xD59820")]
			[DebuggerHidden]
			public <UpdateWiggleRoutine>d__20(int <>1__state)
			{
			}

			[Token(Token = "0x6001C22")]
			[Address(RVA = "0xD59B38", Offset = "0xD59B38", VA = "0xD59B38", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001C23")]
			[Address(RVA = "0xD59B3C", Offset = "0xD59B3C", VA = "0xD59B3C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001C25")]
			[Address(RVA = "0xD59BD8", Offset = "0xD59BD8", VA = "0xD59BD8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001B2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private PushButton m_button;

		[Token(Token = "0x4001B2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Transform m_visual;

		[Token(Token = "0x4001B2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private readonly Vector3 m_hoverOffset;

		[Token(Token = "0x4001B30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private readonly Vector3 m_selectedOffset;

		[Token(Token = "0x4001B31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool m_isWiggling;

		[Token(Token = "0x4001B32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Tween m_wiggleTween;

		[Token(Token = "0x4001B33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Coroutine m_updateWiggleRoutine;

		[Token(Token = "0x4001B34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private YieldInstruction m_waitForNextWiggle;

		[Token(Token = "0x4001B35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Vector3 m_startLocalPosition;

		[Token(Token = "0x4001B36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private bool m_isSelected;

		[Token(Token = "0x4001B37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6D")]
		private bool m_isHovered;

		[Token(Token = "0x6001C11")]
		[Address(RVA = "0xD590C8", Offset = "0xD590C8", VA = "0xD590C8")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001C12")]
		[Address(RVA = "0xD59204", Offset = "0xD59204", VA = "0xD59204")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001C13")]
		[Address(RVA = "0xD592D0", Offset = "0xD592D0", VA = "0xD592D0")]
		private void OnBookmarkSelected(BookmarkSelectedEvent e)
		{
		}

		[Token(Token = "0x6001C14")]
		[Address(RVA = "0xD5937C", Offset = "0xD5937C", VA = "0xD5937C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001C15")]
		[Address(RVA = "0xD59538", Offset = "0xD59538", VA = "0xD59538")]
		private void TryStartWiggleRoutine()
		{
		}

		[Token(Token = "0x6001C16")]
		[Address(RVA = "0xD59614", Offset = "0xD59614", VA = "0xD59614")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001C17")]
		[Address(RVA = "0xD597D8", Offset = "0xD597D8", VA = "0xD597D8")]
		private void TryStopWigglingRoutine()
		{
		}

		[Token(Token = "0x6001C18")]
		[Address(RVA = "0xD589E0", Offset = "0xD589E0", VA = "0xD589E0")]
		public void TryShowNotification()
		{
		}

		[Token(Token = "0x6001C19")]
		[Address(RVA = "0xD589F0", Offset = "0xD589F0", VA = "0xD589F0")]
		public void TryStopNotification()
		{
		}

		[Token(Token = "0x6001C1A")]
		[Address(RVA = "0xD59598", Offset = "0xD59598", VA = "0xD59598")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9909F8", Offset = "0x9909F8")]
		private IEnumerator UpdateWiggleRoutine()
		{
			return null;
		}

		[Token(Token = "0x6001C1B")]
		[Address(RVA = "0xD5984C", Offset = "0xD5984C", VA = "0xD5984C")]
		private void OnPointerOver(PushButton button)
		{
		}

		[Token(Token = "0x6001C1C")]
		[Address(RVA = "0xD59978", Offset = "0xD59978", VA = "0xD59978")]
		private void OnPointerOut(PushButton button)
		{
		}

		[Token(Token = "0x6001C1D")]
		[Address(RVA = "0xD59980", Offset = "0xD59980", VA = "0xD59980")]
		private void OnSelected(PushButton button)
		{
		}

		[Token(Token = "0x6001C1E")]
		[Address(RVA = "0xD59374", Offset = "0xD59374", VA = "0xD59374")]
		private void Deselect()
		{
		}

		[Token(Token = "0x6001C1F")]
		[Address(RVA = "0xD59858", Offset = "0xD59858", VA = "0xD59858")]
		private void MoveVisualToPosition()
		{
		}

		[Token(Token = "0x6001C20")]
		[Address(RVA = "0xD59A1C", Offset = "0xD59A1C", VA = "0xD59A1C")]
		public MenuBookmark()
		{
		}
	}
	[Token(Token = "0x20004A2")]
	public class MenuCategoryTab : MonoBehaviour
	{
		[Token(Token = "0x4001B3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private PushButton m_button;

		[Token(Token = "0x4001B3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Transform m_visual;

		[Token(Token = "0x4001B3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private ParticleSystem m_newEffect;

		[Token(Token = "0x4001B3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private readonly Vector3 m_hoverOffset;

		[Token(Token = "0x4001B3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private readonly Vector3 m_selectedOffset;

		[Token(Token = "0x4001B40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Vector3 m_startLocalScale;

		[Token(Token = "0x4001B41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private bool m_isSelected;

		[Token(Token = "0x4001B42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x55")]
		private bool m_isHovered;

		[Token(Token = "0x6001C27")]
		[Address(RVA = "0xD59C40", Offset = "0xD59C40", VA = "0xD59C40")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001C28")]
		[Address(RVA = "0xD59CE8", Offset = "0xD59CE8", VA = "0xD59CE8")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001C29")]
		[Address(RVA = "0xD59D90", Offset = "0xD59D90", VA = "0xD59D90")]
		private void OnTabSelected(CategoryTabSelectedEvent e)
		{
		}

		[Token(Token = "0x6001C2A")]
		[Address(RVA = "0xD59E3C", Offset = "0xD59E3C", VA = "0xD59E3C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001C2B")]
		[Address(RVA = "0xD59FF8", Offset = "0xD59FF8", VA = "0xD59FF8")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001C2C")]
		[Address(RVA = "0xD58DC4", Offset = "0xD58DC4", VA = "0xD58DC4")]
		public void TryShowNotification()
		{
		}

		[Token(Token = "0x6001C2D")]
		[Address(RVA = "0xD58E60", Offset = "0xD58E60", VA = "0xD58E60")]
		public void TryStopNotification()
		{
		}

		[Token(Token = "0x6001C2E")]
		[Address(RVA = "0xD5A1B4", Offset = "0xD5A1B4", VA = "0xD5A1B4")]
		private void OnPointerOver(PushButton button)
		{
		}

		[Token(Token = "0x6001C2F")]
		[Address(RVA = "0xD5A2DC", Offset = "0xD5A2DC", VA = "0xD5A2DC")]
		private void OnPointerOut(PushButton button)
		{
		}

		[Token(Token = "0x6001C30")]
		[Address(RVA = "0xD5A2E4", Offset = "0xD5A2E4", VA = "0xD5A2E4")]
		private void OnSelected(PushButton button)
		{
		}

		[Token(Token = "0x6001C31")]
		[Address(RVA = "0xD59E34", Offset = "0xD59E34", VA = "0xD59E34")]
		private void Deselect()
		{
		}

		[Token(Token = "0x6001C32")]
		[Address(RVA = "0xD5A1C0", Offset = "0xD5A1C0", VA = "0xD5A1C0")]
		private void UpdateVisualScale()
		{
		}

		[Token(Token = "0x6001C33")]
		[Address(RVA = "0xD5A380", Offset = "0xD5A380", VA = "0xD5A380")]
		public MenuCategoryTab()
		{
		}
	}
	[Token(Token = "0x20004A3")]
	public class PlantsCollectionPage : CollectionPage
	{
		[Token(Token = "0x6001C34")]
		[Address(RVA = "0xD5ACE8", Offset = "0xD5ACE8", VA = "0xD5ACE8", Slot = "9")]
		public override void UpdateCategoryNewEffects()
		{
		}

		[Token(Token = "0x6001C35")]
		[Address(RVA = "0xD5AD48", Offset = "0xD5AD48", VA = "0xD5AD48")]
		public PlantsCollectionPage()
		{
		}
	}
	[Token(Token = "0x20004A4")]
	public enum RecipeCategory
	{
		[Token(Token = "0x4001B44")]
		Crafting,
		[Token(Token = "0x4001B45")]
		Cooking
	}
	[Token(Token = "0x20004A5")]
	public class RecipeCategoryPage : CategoryPage
	{
		[Token(Token = "0x4001B46")]
		private const int RecipeEntriesPerFold = 8;

		[Token(Token = "0x4001B47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private BookRecipeSprite[] m_recipeSprites;

		[Token(Token = "0x4001B48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private List<RecipeCollectionItem> m_unlockedRecipes;

		[Token(Token = "0x4001B49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private bool m_hasInitializedEventListeners;

		[Token(Token = "0x170002EE")]
		public List<RecipeCollectionItem> UnlockedRecipes
		{
			[Token(Token = "0x6001C36")]
			[Address(RVA = "0xD5AD50", Offset = "0xD5AD50", VA = "0xD5AD50")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001C37")]
		[Address(RVA = "0xD5AD58", Offset = "0xD5AD58", VA = "0xD5AD58")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001C38")]
		[Address(RVA = "0xD5AE08", Offset = "0xD5AE08", VA = "0xD5AE08")]
		public void RegisterBase(RecipeCollectionPage recipeCollectionPage, RecipeCollectionSaveData[] m_unlockedRecipes)
		{
		}

		[Token(Token = "0x6001C39")]
		[Address(RVA = "0xD5B038", Offset = "0xD5B038", VA = "0xD5B038")]
		private void OnRecipeUnlocked(UnlockCollectableRecipeEvent e)
		{
		}

		[Token(Token = "0x6001C3A")]
		[Address(RVA = "0xD5B280", Offset = "0xD5B280", VA = "0xD5B280")]
		private void TryUnlockRecipe(RecipeCollectionItemData item, bool isNew = true)
		{
		}

		[Token(Token = "0x6001C3B")]
		[Address(RVA = "0xD5AEE8", Offset = "0xD5AEE8", VA = "0xD5AEE8")]
		private void UnlockAllRecipes(RecipeCollectionSaveData[] allUnlockedItems)
		{
		}

		[Token(Token = "0x6001C3C")]
		[Address(RVA = "0xD5B378", Offset = "0xD5B378", VA = "0xD5B378")]
		private bool IsAlreadyUnlocked(string assetGuid)
		{
			return default(bool);
		}

		[Token(Token = "0x6001C3D")]
		[Address(RVA = "0xD5B59C", Offset = "0xD5B59C", VA = "0xD5B59C", Slot = "7")]
		protected override void ShowEntriesAtPage()
		{
		}

		[Token(Token = "0x6001C3E")]
		[Address(RVA = "0xD5B814", Offset = "0xD5B814", VA = "0xD5B814", Slot = "6")]
		protected override int GetEntriesPerFold()
		{
			return default(int);
		}

		[Token(Token = "0x6001C3F")]
		[Address(RVA = "0xD5B81C", Offset = "0xD5B81C", VA = "0xD5B81C", Slot = "8")]
		protected override Sprite GetCollectionSprite(int i)
		{
			return null;
		}

		[Token(Token = "0x6001C40")]
		[Address(RVA = "0xD5B89C", Offset = "0xD5B89C", VA = "0xD5B89C", Slot = "10")]
		public override bool HasNewlyUnlockedItems()
		{
			return default(bool);
		}

		[Token(Token = "0x6001C41")]
		[Address(RVA = "0xD5B954", Offset = "0xD5B954", VA = "0xD5B954")]
		public RecipeCategoryPage()
		{
		}
	}
	[Token(Token = "0x20004A6")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x9739EC", Offset = "0x9739EC")]
	public class RecipeCollection : Collection
	{
		[Token(Token = "0x4001B4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		protected RecipeCategory m_category;

		[Token(Token = "0x4001B4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private List<RecipeCollectionItemData> m_items;

		[Token(Token = "0x6001C42")]
		[Address(RVA = "0xD5B9D0", Offset = "0xD5B9D0", VA = "0xD5B9D0")]
		private bool GetMatchingCategory(CollectableData collectable, out CraftingRecipe recipe)
		{
			return default(bool);
		}

		[Token(Token = "0x6001C43")]
		[Address(RVA = "0xD5BAE8", Offset = "0xD5BAE8", VA = "0xD5BAE8")]
		private bool IsMatchingCategory(CraftingRecipe recipe)
		{
			return default(bool);
		}

		[Token(Token = "0x6001C44")]
		[Address(RVA = "0xD5B10C", Offset = "0xD5B10C", VA = "0xD5B10C")]
		public bool TryGetDataFromRecipe(CraftingRecipe recipe, out RecipeCollectionItemData recipeCollectionItem)
		{
			return default(bool);
		}

		[Token(Token = "0x6001C45")]
		[Address(RVA = "0xD5B47C", Offset = "0xD5B47C", VA = "0xD5B47C")]
		public bool TryGetDataFromGUID(string guid, out RecipeCollectionItemData recipeCollectionItem)
		{
			return default(bool);
		}

		[Token(Token = "0x6001C46")]
		[Address(RVA = "0xD5BB74", Offset = "0xD5BB74", VA = "0xD5BB74")]
		private Sprite GetCombinedSpriteAsset(CollectableData collectable)
		{
			return null;
		}

		[Token(Token = "0x6001C47")]
		[Address(RVA = "0xD5BC70", Offset = "0xD5BC70", VA = "0xD5BC70")]
		public RecipeCollection()
		{
		}
	}
	[Token(Token = "0x20004A7")]
	public struct RecipeCollectionItem
	{
		[Token(Token = "0x4001B4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public RecipeCollectionItemData ItemData;

		[Token(Token = "0x4001B4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool IsNew;

		[Token(Token = "0x6001C48")]
		[Address(RVA = "0xA45E28", Offset = "0xA45E28", VA = "0xA45E28")]
		public RecipeCollectionItem(RecipeCollectionItemData itemData, bool isNew = true)
		{
		}

		[Token(Token = "0x6001C49")]
		[Address(RVA = "0xD5B7D4", Offset = "0xD5B7D4", VA = "0xD5B7D4")]
		public static RecipeCollectionItem MakeNonNew(RecipeCollectionItem item)
		{
			return default(RecipeCollectionItem);
		}
	}
	[Serializable]
	[Token(Token = "0x20004A8")]
	public struct RecipeCollectionItemData
	{
		[Token(Token = "0x4001B4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string Name;

		[Token(Token = "0x4001B4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public string AssetGUID;

		[Token(Token = "0x4001B50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public AssetReference AssetRef;

		[Token(Token = "0x4001B51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public CraftingRecipe Recipe;

		[Token(Token = "0x4001B52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Sprite Sprite;

		[Token(Token = "0x4001B53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public RecipeCategory Category;
	}
	[Token(Token = "0x20004A9")]
	public class RecipeCollectionPage : CollectionPage, IInitializable
	{
		[Token(Token = "0x4001B54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private GameObject m_craftingCategory;

		[Token(Token = "0x4001B55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private GameObject m_cookingCategory;

		[Token(Token = "0x4001B56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private PushButton m_craftingCategoryButton;

		[Token(Token = "0x4001B57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private PushButton m_cookingCategoryButton;

		[Token(Token = "0x4001B58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private RecipeCategoryPage m_crafringCategoryPage;

		[Token(Token = "0x4001B59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private RecipeCategoryPage m_cookingCategoryPage;

		[Token(Token = "0x4001B5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		[HideInInspector]
		private RecipeCategoryPage[] m_allCategories;

		[Token(Token = "0x6001C4A")]
		[Address(RVA = "0xD5BCEC", Offset = "0xD5BCEC", VA = "0xD5BCEC", Slot = "10")]
		public void Initialize()
		{
		}

		[Token(Token = "0x6001C4B")]
		[Address(RVA = "0xD5BDE4", Offset = "0xD5BDE4", VA = "0xD5BDE4", Slot = "4")]
		public override ComponentState CreateState()
		{
			return null;
		}

		[Token(Token = "0x6001C4C")]
		[Address(RVA = "0xD5C02C", Offset = "0xD5C02C", VA = "0xD5C02C", Slot = "5")]
		protected override void OnEnable()
		{
		}

		[Token(Token = "0x6001C4D")]
		[Address(RVA = "0xD5C184", Offset = "0xD5C184", VA = "0xD5C184", Slot = "6")]
		protected override void OnDisable()
		{
		}

		[Token(Token = "0x6001C4E")]
		[Address(RVA = "0xD5C2CC", Offset = "0xD5C2CC", VA = "0xD5C2CC")]
		private void CraftingCategoryPressed(PushButton button)
		{
		}

		[Token(Token = "0x6001C4F")]
		[Address(RVA = "0xD5C310", Offset = "0xD5C310", VA = "0xD5C310")]
		private void CookingCategoryPressed(PushButton button)
		{
		}

		[Token(Token = "0x6001C50")]
		[Address(RVA = "0xD5C354", Offset = "0xD5C354", VA = "0xD5C354", Slot = "8")]
		public override bool HasNewlyUnlockedItems()
		{
			return default(bool);
		}

		[Token(Token = "0x6001C51")]
		[Address(RVA = "0xD5C3D4", Offset = "0xD5C3D4", VA = "0xD5C3D4", Slot = "9")]
		public override void UpdateCategoryNewEffects()
		{
		}

		[Token(Token = "0x6001C52")]
		[Address(RVA = "0xD5C450", Offset = "0xD5C450", VA = "0xD5C450")]
		public RecipeCollectionPage()
		{
		}
	}
	[Token(Token = "0x20004AA")]
	public class RecipeCollectionPageState : ComponentState
	{
		[Token(Token = "0x4001B5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public RecipeCollectionSaveData[] unlockedRecipes;

		[Token(Token = "0x6001C53")]
		[Address(RVA = "0xD5BED4", Offset = "0xD5BED4", VA = "0xD5BED4")]
		public RecipeCollectionPageState(List<RecipeCollectionItem> recipes)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20004AB")]
	public struct RecipeCollectionSaveData
	{
		[Token(Token = "0x4001B5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string AssetGUID;

		[Token(Token = "0x4001B5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public bool IsNew;

		[Token(Token = "0x6001C54")]
		[Address(RVA = "0xA45F4C", Offset = "0xA45F4C", VA = "0xA45F4C")]
		public RecipeCollectionSaveData(RecipeCollectionItemData recipeData, bool isNew)
		{
		}
	}
}
namespace NeatCorp.Fishing
{
	[Serializable]
	[Token(Token = "0x20004AC")]
	public struct FishStruggleStats
	{
		[Token(Token = "0x4001B5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static FishStruggleStats Default;

		[Token(Token = "0x4001B5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float Speed;

		[Token(Token = "0x4001B60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float Strength;

		[Token(Token = "0x6001C55")]
		[Address(RVA = "0xA45B58", Offset = "0xA45B58", VA = "0xA45B58")]
		public FishStruggleStats(float speed, float strength)
		{
		}
	}
}
namespace NeatCorp.Interaction.Volumes
{
	[Serializable]
	[Token(Token = "0x20004AD")]
	public class ComponentTrackingEvent : UnityEvent<Component[]>
	{
		[Token(Token = "0x6001C57")]
		[Address(RVA = "0xC3CE2C", Offset = "0xC3CE2C", VA = "0xC3CE2C")]
		public ComponentTrackingEvent()
		{
		}
	}
	[Token(Token = "0x20004AE")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x973A58", Offset = "0x973A58")]
	public class ComponentTrackingTrigger : MonoBehaviour, IInitializable
	{
		[Token(Token = "0x20004AF")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x973ABC", Offset = "0x973ABC")]
		private sealed class <UpdateContiniously>d__20 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001B6D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001B6E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001B6F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ComponentTrackingTrigger <>4__this;

			[Token(Token = "0x170002EF")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001C66")]
				[Address(RVA = "0xC3D5E4", Offset = "0xC3D5E4", VA = "0xC3D5E4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002F0")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001C68")]
				[Address(RVA = "0xC3D64C", Offset = "0xC3D64C", VA = "0xC3D64C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001C63")]
			[Address(RVA = "0xC3D3BC", Offset = "0xC3D3BC", VA = "0xC3D3BC")]
			[DebuggerHidden]
			public <UpdateContiniously>d__20(int <>1__state)
			{
			}

			[Token(Token = "0x6001C64")]
			[Address(RVA = "0xC3D560", Offset = "0xC3D560", VA = "0xC3D560", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001C65")]
			[Address(RVA = "0xC3D564", Offset = "0xC3D564", VA = "0xC3D564", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001C67")]
			[Address(RVA = "0xC3D5EC", Offset = "0xC3D5EC", VA = "0xC3D5EC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001B61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private SphereCollider m_trigger;

		[Token(Token = "0x4001B62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		[HideInInspector]
		private SerializableSystemType m_type;

		[Token(Token = "0x4001B63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private LayerMask m_layerMask;

		[Token(Token = "0x4001B64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		private QueryTriggerInteraction m_queryTriggerInteraction;

		[Token(Token = "0x4001B65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private bool m_runOnInitialize;

		[Token(Token = "0x4001B66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
		[SerializeField]
		private bool m_triggeredByPlayerProximity;

		[Token(Token = "0x4001B67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x32")]
		[SerializeField]
		private bool m_updateContinuously;

		[Token(Token = "0x4001B68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x97E2F8", Offset = "0x97E2F8")]
		[SerializeField]
		private ComponentTrackingEvent OnUpdated;

		[Token(Token = "0x4001B69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private OptimizedCollection<Component> m_overlappingComponents;

		[Token(Token = "0x4001B6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Collider[] m_overlappingColliders;

		[Token(Token = "0x4001B6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private WaitForSeconds m_waitForOneSecondInstruction;

		[Token(Token = "0x4001B6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Coroutine m_continuousUpdateRoutine;

		[Token(Token = "0x6001C58")]
		[Address(RVA = "0xC3CE7C", Offset = "0xC3CE7C", VA = "0xC3CE7C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001C59")]
		[Address(RVA = "0xC3CEC8", Offset = "0xC3CEC8", VA = "0xC3CEC8", Slot = "4")]
		public void Initialize()
		{
		}

		[Token(Token = "0x6001C5A")]
		[Address(RVA = "0xC3CF08", Offset = "0xC3CF08", VA = "0xC3CF08")]
		private void TrackOverlappingComponents()
		{
		}

		[Token(Token = "0x6001C5B")]
		[Address(RVA = "0xC3D1BC", Offset = "0xC3D1BC", VA = "0xC3D1BC")]
		public Component[] GetComponentsInVolume()
		{
			return null;
		}

		[Token(Token = "0x6001C5C")]
		[Address(RVA = "0xC3D208", Offset = "0xC3D208", VA = "0xC3D208")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x6001C5D")]
		[Address(RVA = "0xC3D2A4", Offset = "0xC3D2A4", VA = "0xC3D2A4")]
		private void OnTriggerExit(Collider other)
		{
		}

		[Token(Token = "0x6001C5E")]
		[Address(RVA = "0xC3CE80", Offset = "0xC3CE80", VA = "0xC3CE80")]
		private void TryStopContinuousUpdate()
		{
		}

		[Token(Token = "0x6001C5F")]
		[Address(RVA = "0xC3D14C", Offset = "0xC3D14C", VA = "0xC3D14C")]
		private void StartContinuousUpdate()
		{
		}

		[Token(Token = "0x6001C60")]
		[Address(RVA = "0xC3D340", Offset = "0xC3D340", VA = "0xC3D340")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x990AAC", Offset = "0x990AAC")]
		private IEnumerator UpdateContiniously()
		{
			return null;
		}

		[Token(Token = "0x6001C61")]
		[Address(RVA = "0xC3D3E8", Offset = "0xC3D3E8", VA = "0xC3D3E8")]
		public bool TryGetComponentsInTrigger(out Component[] components)
		{
			return default(bool);
		}

		[Token(Token = "0x6001C62")]
		[Address(RVA = "0xC3D480", Offset = "0xC3D480", VA = "0xC3D480")]
		public ComponentTrackingTrigger()
		{
		}
	}
}
namespace NeatCorp.Interaction.Water
{
	[Token(Token = "0x20004B0")]
	public enum WaterType
	{
		[Token(Token = "0x4001B71")]
		Normal,
		[Token(Token = "0x4001B72")]
		Humming
	}
	[Token(Token = "0x20004B1")]
	public class WaterSource : MonoBehaviour
	{
		[Token(Token = "0x4001B73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private WaterType m_waterType;

		[Token(Token = "0x4001B74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private float splashParticleMaxDistance;

		[Token(Token = "0x4001B75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AudioSource waterSound;

		[Token(Token = "0x4001B76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Tool_WateringCan m_wateringCan;

		[Token(Token = "0x4001B77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Rigidbody m_wateringCanRb;

		[Token(Token = "0x4001B78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool m_hasInitializedWateringCan;

		[Token(Token = "0x4001B79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float lastSplashTime;

		[Token(Token = "0x170002F1")]
		public WaterType WaterType
		{
			[Token(Token = "0x6001C69")]
			[Address(RVA = "0xC3D654", Offset = "0xC3D654", VA = "0xC3D654")]
			get
			{
				return default(WaterType);
			}
		}

		[Token(Token = "0x6001C6A")]
		[Address(RVA = "0xC3D65C", Offset = "0xC3D65C", VA = "0xC3D65C")]
		private void PlayWaterSplash(Transform t)
		{
		}

		[Token(Token = "0x6001C6B")]
		[Address(RVA = "0xC3D870", Offset = "0xC3D870", VA = "0xC3D870")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x6001C6C")]
		[Address(RVA = "0xC3DBD0", Offset = "0xC3DBD0", VA = "0xC3DBD0")]
		public WaterSource()
		{
		}
	}
}
namespace NeatCorp.Interaction.Tools.WateringCan
{
	[Token(Token = "0x20004B2")]
	public class Tool_WateringCan : Tool_Base, ITool, IInitializable
	{
		[Token(Token = "0x4001B7A")]
		private const float WATER_PER_SECOND = 1f;

		[Token(Token = "0x4001B7B")]
		private const float WATERING_RADIUS = 0.75f;

		[Token(Token = "0x4001B7C")]
		private const float WATERING_MAX_DISTANCE = 3f;

		[Token(Token = "0x4001B7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private WaterConeEmitter waterBeam;

		[Token(Token = "0x4001B7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private FloatValueContainer container;

		[Token(Token = "0x4001B7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public GameObject waterSplashParticlePrefab;

		[Token(Token = "0x4001B80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public MeshRenderer waterMeterRnd;

		[Token(Token = "0x4001B81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public MaterialPropertyBlock waterMeterMpb;

		[Token(Token = "0x4001B82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private MeshRenderer[] m_waterMeters;

		[Token(Token = "0x4001B83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x97E394", Offset = "0x97E394")]
		private NeatAudioPlayer pourSound;

		[Token(Token = "0x4001B84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private NeatAudioPlayer groundSound;

		[Token(Token = "0x4001B85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private NeatAudioPlayer waterEmptyAudio;

		[Token(Token = "0x4001B86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static int shaderPropWaterMeter;

		[Token(Token = "0x4001B87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private ParticleSystem waterSplash;

		[Token(Token = "0x4001B88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private WateringCanDroppedEvent droppedEvent;

		[Token(Token = "0x4001B89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private bool m_canPlayOutOfWaterSound;

		[Token(Token = "0x4001B8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public static int WaterCanLevel;

		[Token(Token = "0x4001B8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA9")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x97E400", Offset = "0x97E400")]
		private bool <IsWatering>k__BackingField;

		[Token(Token = "0x170002F2")]
		private float FillPercent
		{
			[Token(Token = "0x6001C6D")]
			[Address(RVA = "0xC3BC98", Offset = "0xC3BC98", VA = "0xC3BC98")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170002F3")]
		private bool HasWaterLeft
		{
			[Token(Token = "0x6001C6E")]
			[Address(RVA = "0xC3BCB8", Offset = "0xC3BCB8", VA = "0xC3BCB8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170002F4")]
		private bool IsAtPourAngle
		{
			[Token(Token = "0x6001C6F")]
			[Address(RVA = "0xC3BCE8", Offset = "0xC3BCE8", VA = "0xC3BCE8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170002F5")]
		public bool IsWatering
		{
			[Token(Token = "0x6001C72")]
			[Address(RVA = "0xC3BDDC", Offset = "0xC3BDDC", VA = "0xC3BDDC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x990B60", Offset = "0x990B60")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001C73")]
			[Address(RVA = "0xC3BDE4", Offset = "0xC3BDE4", VA = "0xC3BDE4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x990B70", Offset = "0x990B70")]
			private set
			{
			}
		}

		[Token(Token = "0x170002F6")]
		private bool FXActive
		{
			[Token(Token = "0x6001C80")]
			[Address(RVA = "0xC3CD7C", Offset = "0xC3CD7C", VA = "0xC3CD7C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001C81")]
			[Address(RVA = "0xC3C1E8", Offset = "0xC3C1E8", VA = "0xC3C1E8")]
			set
			{
			}
		}

		[Token(Token = "0x6001C70")]
		[Address(RVA = "0xC3BDB8", Offset = "0xC3BDB8", VA = "0xC3BDB8", Slot = "19")]
		public ToolType GetToolType()
		{
			return default(ToolType);
		}

		[Token(Token = "0x6001C71")]
		[Address(RVA = "0xC3BDC0", Offset = "0xC3BDC0", VA = "0xC3BDC0", Slot = "15")]
		public override void OnSnapTurnWhileHeld()
		{
		}

		[Token(Token = "0x6001C74")]
		[Address(RVA = "0xC3BDF0", Offset = "0xC3BDF0", VA = "0xC3BDF0", Slot = "6")]
		public override void Init()
		{
		}

		[Token(Token = "0x6001C75")]
		[Address(RVA = "0xC3BE68", Offset = "0xC3BE68", VA = "0xC3BE68", Slot = "21")]
		public void Initialize()
		{
		}

		[Token(Token = "0x6001C76")]
		[Address(RVA = "0xC3C158", Offset = "0xC3C158", VA = "0xC3C158", Slot = "13")]
		public override void StopUsing(PlayerHand hand)
		{
		}

		[Token(Token = "0x6001C77")]
		[Address(RVA = "0xC3C338", Offset = "0xC3C338", VA = "0xC3C338", Slot = "14")]
		public override void WhileHeld(PlayerHand hand)
		{
		}

		[Token(Token = "0x6001C78")]
		[Address(RVA = "0xC3C3D0", Offset = "0xC3C3D0", VA = "0xC3C3D0")]
		private void DoWatering(float deltaWater)
		{
		}

		[Token(Token = "0x6001C79")]
		[Address(RVA = "0xC3CA90", Offset = "0xC3CA90", VA = "0xC3CA90")]
		public void FillCan(WaterType waterType = WaterType.Normal)
		{
		}

		[Token(Token = "0x6001C7A")]
		[Address(RVA = "0xC3CAC4", Offset = "0xC3CAC4", VA = "0xC3CAC4")]
		public void TryAddContent(float amount, WaterType waterType = WaterType.Normal)
		{
		}

		[Token(Token = "0x6001C7B")]
		[Address(RVA = "0xC3C094", Offset = "0xC3C094", VA = "0xC3C094")]
		private void UpdateMeter()
		{
		}

		[Token(Token = "0x6001C7C")]
		[Address(RVA = "0xC3CAF8", Offset = "0xC3CAF8", VA = "0xC3CAF8", Slot = "4")]
		public override ComponentState CreateState()
		{
			return null;
		}

		[Token(Token = "0x6001C7D")]
		[Address(RVA = "0xC3CB84", Offset = "0xC3CB84", VA = "0xC3CB84", Slot = "17")]
		public override void SetToolUpgradeLevel(int upgradeLevel)
		{
		}

		[Token(Token = "0x6001C7E")]
		[Address(RVA = "0xC3C914", Offset = "0xC3C914", VA = "0xC3C914")]
		private void ShowSplashParticle(Vector3 pos, Vector3 normal)
		{
		}

		[Token(Token = "0x6001C7F")]
		[Address(RVA = "0xC3CD34", Offset = "0xC3CD34", VA = "0xC3CD34")]
		private void HideSplashParticle()
		{
		}

		[Token(Token = "0x6001C82")]
		[Address(RVA = "0xC3CDA8", Offset = "0xC3CDA8", VA = "0xC3CDA8")]
		public Tool_WateringCan()
		{
		}
	}
}
namespace NeatCorp.Interaction.Audio
{
	[Token(Token = "0x20004B3")]
	public class Rotatable2Audio : MonoBehaviour
	{
		[Token(Token = "0x4001B8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Rotatable2 m_rotatable;

		[Token(Token = "0x4001B8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private int m_triggerSoundSteps;

		[Token(Token = "0x4001B8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private float m_minStepDelay;

		[Token(Token = "0x4001B8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private NeatAudioPlayer m_audioPlayer;

		[Token(Token = "0x4001B90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private NeatAudioCue m_stepSound;

		[Token(Token = "0x4001B91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private NeatAudioCue m_minStepSound;

		[Token(Token = "0x4001B92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private NeatAudioCue m_maxStepSound;

		[Token(Token = "0x4001B93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private float m_totalRotationRange;

		[Token(Token = "0x4001B94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private int m_currentStep;

		[Token(Token = "0x4001B95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private NeatAudioCue m_currentAudioCue;

		[Token(Token = "0x4001B96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private float m_delay;

		[Token(Token = "0x4001B97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private bool m_active;

		[Token(Token = "0x6001C84")]
		[Address(RVA = "0xC33F88", Offset = "0xC33F88", VA = "0xC33F88")]
		public void ActivateAudio()
		{
		}

		[Token(Token = "0x6001C85")]
		[Address(RVA = "0xC33F94", Offset = "0xC33F94", VA = "0xC33F94")]
		public void DeactivateAudio()
		{
		}

		[Token(Token = "0x6001C86")]
		[Address(RVA = "0xC33F9C", Offset = "0xC33F9C", VA = "0xC33F9C")]
		private void Update()
		{
		}

		[Token(Token = "0x6001C87")]
		[Address(RVA = "0xC34120", Offset = "0xC34120", VA = "0xC34120")]
		public Rotatable2Audio()
		{
		}
	}
	[Token(Token = "0x20004B4")]
	public class RotatableAudio : MonoBehaviour
	{
		[Token(Token = "0x4001B98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Rotatable m_rotatable;

		[Token(Token = "0x4001B99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private int m_triggerSoundSteps;

		[Token(Token = "0x4001B9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private float m_minStepDelay;

		[Token(Token = "0x4001B9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private NeatAudioPlayer m_audioPlayer;

		[Token(Token = "0x4001B9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private NeatAudioCue m_stepSound;

		[Token(Token = "0x4001B9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private NeatAudioCue m_minStepSound;

		[Token(Token = "0x4001B9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private NeatAudioCue m_maxStepSound;

		[Token(Token = "0x4001B9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private float m_totalRotationRange;

		[Token(Token = "0x4001BA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private int m_currentStep;

		[Token(Token = "0x4001BA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private NeatAudioCue m_currentAudioCue;

		[Token(Token = "0x4001BA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private float m_delay;

		[Token(Token = "0x4001BA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private bool m_active;

		[Token(Token = "0x6001C88")]
		[Address(RVA = "0xC34138", Offset = "0xC34138", VA = "0xC34138")]
		public void ActivateAudio()
		{
		}

		[Token(Token = "0x6001C89")]
		[Address(RVA = "0xC34144", Offset = "0xC34144", VA = "0xC34144")]
		public void DeactivateAudio()
		{
		}

		[Token(Token = "0x6001C8A")]
		[Address(RVA = "0xC3414C", Offset = "0xC3414C", VA = "0xC3414C")]
		private void Update()
		{
		}

		[Token(Token = "0x6001C8B")]
		[Address(RVA = "0xC342C4", Offset = "0xC342C4", VA = "0xC342C4")]
		public RotatableAudio()
		{
		}
	}
}
namespace NeatCorp.Interaction.Bubble
{
	[Token(Token = "0x20004B5")]
	public class MoodBubbleController : MonoBehaviour
	{
		[Token(Token = "0x4001BA4")]
		private const float PopOutDuration = 0.75f;

		[Token(Token = "0x6001C8C")]
		[Address(RVA = "0xC342DC", Offset = "0xC342DC", VA = "0xC342DC")]
		public void Remove()
		{
		}

		[Token(Token = "0x6001C8D")]
		[Address(RVA = "0xC343C0", Offset = "0xC343C0", VA = "0xC343C0")]
		private void OnBubbleRemoved()
		{
		}

		[Token(Token = "0x6001C8E")]
		[Address(RVA = "0xC34484", Offset = "0xC34484", VA = "0xC34484")]
		public MoodBubbleController()
		{
		}
	}
}
namespace NeatCorp.Interaction.Instrument
{
	[Token(Token = "0x20004B6")]
	public class DeresonatedEvent : GameEvent
	{
		[Token(Token = "0x4001BA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x97E510", Offset = "0x97E510")]
		private InstrumentResonator <Resonator>k__BackingField;

		[Token(Token = "0x170002F7")]
		public InstrumentResonator Resonator
		{
			[Token(Token = "0x6001C8F")]
			[Address(RVA = "0xC35D1C", Offset = "0xC35D1C", VA = "0xC35D1C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x990B80", Offset = "0x990B80")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001C90")]
			[Address(RVA = "0xC35D24", Offset = "0xC35D24", VA = "0xC35D24")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x990B90", Offset = "0x990B90")]
			private set
			{
			}
		}

		[Token(Token = "0x6001C91")]
		[Address(RVA = "0xC35D2C", Offset = "0xC35D2C", VA = "0xC35D2C")]
		public DeresonatedEvent(InstrumentResonator resonator)
		{
		}
	}
	[Token(Token = "0x20004B7")]
	public class InstrumentGrabbedEvent : GameEvent
	{
		[Token(Token = "0x4001BA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x97E520", Offset = "0x97E520")]
		private ResonationInstrument <Instrument>k__BackingField;

		[Token(Token = "0x170002F8")]
		private ResonationInstrument Instrument
		{
			[Token(Token = "0x6001C92")]
			[Address(RVA = "0xC35D60", Offset = "0xC35D60", VA = "0xC35D60")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x990BA0", Offset = "0x990BA0")]
			set
			{
			}
		}

		[Token(Token = "0x6001C93")]
		[Address(RVA = "0xC35D68", Offset = "0xC35D68", VA = "0xC35D68")]
		public InstrumentGrabbedEvent(ResonationInstrument instrument)
		{
		}
	}
	[Token(Token = "0x20004B8")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x973ACC", Offset = "0x973ACC")]
	public class InstrumentResonator : SaveableComponent, IInitializable
	{
		[Token(Token = "0x20004B9")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x973B30", Offset = "0x973B30")]
		private sealed class <NotifyPlayer>d__69 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001BDA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001BDB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001BDC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ResonationInstrument instrument;

			[Token(Token = "0x4001BDD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public PlayerHand hand;

			[Token(Token = "0x4001BDE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public InstrumentResonator <>4__this;

			[Token(Token = "0x4001BDF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private bool <didOpenInventory>5__2;

			[Token(Token = "0x4001BE0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private Coroutine <rotateAnim>5__3;

			[Token(Token = "0x170002FD")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001CC1")]
				[Address(RVA = "0xC3850C", Offset = "0xC3850C", VA = "0xC3850C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002FE")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001CC3")]
				[Address(RVA = "0xC38574", Offset = "0xC38574", VA = "0xC38574", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001CBE")]
			[Address(RVA = "0xC372D8", Offset = "0xC372D8", VA = "0xC372D8")]
			[DebuggerHidden]
			public <NotifyPlayer>d__69(int <>1__state)
			{
			}

			[Token(Token = "0x6001CBF")]
			[Address(RVA = "0xC37F24", Offset = "0xC37F24", VA = "0xC37F24", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001CC0")]
			[Address(RVA = "0xC37F28", Offset = "0xC37F28", VA = "0xC37F28", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001CC2")]
			[Address(RVA = "0xC38514", Offset = "0xC38514", VA = "0xC38514", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001BA7")]
		private const float HarmonizationDuration = 2f;

		[Token(Token = "0x4001BA8")]
		private const float HarmonizationThreshold = 0.0005f;

		[Token(Token = "0x4001BA9")]
		private const float UpdateInterval = 0.1f;

		[Token(Token = "0x4001BAA")]
		private const float DefaultTunedFalloffTime = 900f;

		[Token(Token = "0x4001BAB")]
		private const float DefaultUnTunedFalloffTime = 30f;

		[Token(Token = "0x4001BAC")]
		private const float DefaultIdleVolume = 0.05f;

		[Token(Token = "0x4001BAD")]
		private const float HalfVolume = 0.5f;

		[Token(Token = "0x4001BAE")]
		private const float HarmonizationFalloffFactor = 0.1f;

		[Token(Token = "0x4001BAF")]
		private const float MaxVolumeChangeDuration = 30f;

		[Token(Token = "0x4001BB0")]
		private const float MaxVolumeChangeFactor = 0.0033333334f;

		[Token(Token = "0x4001BB1")]
		private const float ResonationTargetTolerance = 0.05f;

		[Token(Token = "0x4001BB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private SphereCollider m_trigger;

		[Token(Token = "0x4001BB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Transform m_root;

		[Token(Token = "0x4001BB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private float m_idleVolume;

		[Token(Token = "0x4001BB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[SerializeField]
		private float m_baseSoilFactor;

		[Token(Token = "0x4001BB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private int midiPitch;

		[Token(Token = "0x4001BB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[SerializeField]
		private int midiTarget;

		[Token(Token = "0x4001BB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private AnimationCurve m_tunedVolumeFalloff;

		[Token(Token = "0x4001BB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private AnimationCurve m_untunedVolumeFalloff;

		[Token(Token = "0x4001BBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private AudioSource m_audioSource;

		[Token(Token = "0x4001BBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private SoilModifierComponent m_soilModifier;

		[Token(Token = "0x4001BBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private ParticleSystem m_resonationEffect;

		[Token(Token = "0x4001BBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private ParticleSystem m_resonationEffectTargetReached;

		[Token(Token = "0x4001BBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private Transform m_scaleableEffect;

		[Token(Token = "0x4001BBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private ParticleSystem m_extraEffect;

		[Token(Token = "0x4001BC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private NeatAudioPlayer audioPlayer;

		[Token(Token = "0x4001BC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private NeatAudioCue soilGrowing;

		[Token(Token = "0x4001BC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		private NeatAudioCue soilShrinking;

		[Token(Token = "0x4001BC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x97E640", Offset = "0x97E640")]
		public UnityEvent OnStartingToResonate;

		[Token(Token = "0x4001BC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public UnityEvent OnReachedMaxResonation;

		[Token(Token = "0x4001BC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[HideInInspector]
		public int[] m_pitchlist;

		[Token(Token = "0x4001BC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private SoilDataType[] m_soilDataToModify;

		[Token(Token = "0x4001BC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private float m_resonationAmount;

		[Token(Token = "0x4001BC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		private float m_currentUpdateDuration;

		[Token(Token = "0x4001BC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private float m_volumeFalloffTime;

		[Token(Token = "0x4001BCA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		private float m_harmonizedDuration;

		[Token(Token = "0x4001BCB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private float m_harmonizedAmountDuration;

		[Token(Token = "0x4001BCC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		private float m_targetResonation;

		[Token(Token = "0x4001BCD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private float m_currentResonation;

		[Token(Token = "0x4001BCE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		private float m_notePosition;

		[Token(Token = "0x4001BCF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private float m_maxVolume;

		[Token(Token = "0x4001BD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		private float m_currentMaxVolume;

		[Token(Token = "0x4001BD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private float m_systemMaxVolume;

		[Token(Token = "0x4001BD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		private float m_normalMaxVolume;

		[Token(Token = "0x4001BD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x97E688", Offset = "0x97E688")]
		private bool <IsHarmonized>k__BackingField;

		[Token(Token = "0x4001BD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF1")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x97E698", Offset = "0x97E698")]
		private bool <IsInitialized>k__BackingField;

		[Token(Token = "0x4001BD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private List<ResonanceSystem> m_resonatingSystems;

		[Token(Token = "0x4001BD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		private bool isStashed;

		[Token(Token = "0x4001BD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x101")]
		private bool isHeld;

		[Token(Token = "0x4001BD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		private Coroutine notifyPlayer;

		[Token(Token = "0x4001BD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static string instrumentTag;

		[Token(Token = "0x170002F9")]
		public Vector3 RootPosition
		{
			[Token(Token = "0x6001C94")]
			[Address(RVA = "0xC35D9C", Offset = "0xC35D9C", VA = "0xC35D9C")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x170002FA")]
		public bool IsHarmonized
		{
			[Token(Token = "0x6001C95")]
			[Address(RVA = "0xC35DB8", Offset = "0xC35DB8", VA = "0xC35DB8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x990BB0", Offset = "0x990BB0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001C96")]
			[Address(RVA = "0xC35DC0", Offset = "0xC35DC0", VA = "0xC35DC0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x990BC0", Offset = "0x990BC0")]
			private set
			{
			}
		}

		[Token(Token = "0x170002FB")]
		public bool IsInitialized
		{
			[Token(Token = "0x6001C97")]
			[Address(RVA = "0xC35DCC", Offset = "0xC35DCC", VA = "0xC35DCC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x990BD0", Offset = "0x990BD0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001C98")]
			[Address(RVA = "0xC35DD4", Offset = "0xC35DD4", VA = "0xC35DD4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x990BE0", Offset = "0x990BE0")]
			private set
			{
			}
		}

		[Token(Token = "0x170002FC")]
		private bool ShouldUpdate
		{
			[Token(Token = "0x6001C99")]
			[Address(RVA = "0xC35DE0", Offset = "0xC35DE0", VA = "0xC35DE0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001C9A")]
		[Address(RVA = "0xC35E40", Offset = "0xC35E40", VA = "0xC35E40")]
		private void Start()
		{
		}

		[Token(Token = "0x6001C9B")]
		[Address(RVA = "0xC35F80", Offset = "0xC35F80", VA = "0xC35F80", Slot = "5")]
		public void Initialize()
		{
		}

		[Token(Token = "0x6001C9C")]
		[Address(RVA = "0xC36334", Offset = "0xC36334", VA = "0xC36334")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6001C9D")]
		[Address(RVA = "0xC364D0", Offset = "0xC364D0", VA = "0xC364D0")]
		private void Update()
		{
		}

		[Token(Token = "0x6001C9E")]
		[Address(RVA = "0xC365F4", Offset = "0xC365F4", VA = "0xC365F4")]
		public void UpdateResonation(float targetResonation)
		{
		}

		[Token(Token = "0x6001C9F")]
		[Address(RVA = "0xC368CC", Offset = "0xC368CC", VA = "0xC368CC")]
		public void OnStoppedResonatingWithInstrument()
		{
		}

		[Token(Token = "0x6001CA0")]
		[Address(RVA = "0xC369FC", Offset = "0xC369FC", VA = "0xC369FC")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x6001CA1")]
		[Address(RVA = "0xC37170", Offset = "0xC37170", VA = "0xC37170")]
		public void NotifyPlayerAboutInstrumentInInventory(PlayerHand hand, ResonationInstrument instrument)
		{
		}

		[Token(Token = "0x6001CA2")]
		[Address(RVA = "0xC3722C", Offset = "0xC3722C", VA = "0xC3722C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x990BF0", Offset = "0x990BF0")]
		private IEnumerator NotifyPlayer(PlayerHand hand, ResonationInstrument instrument)
		{
			return null;
		}

		[Token(Token = "0x6001CA3")]
		[Address(RVA = "0xC37304", Offset = "0xC37304", VA = "0xC37304")]
		public bool IsWithinRange(Vector3 otherPosition, float otherRadius)
		{
			return default(bool);
		}

		[Token(Token = "0x6001CA4")]
		[Address(RVA = "0xC3745C", Offset = "0xC3745C", VA = "0xC3745C")]
		public void SetIsHarmonized(bool sendEvent = true)
		{
		}

		[Token(Token = "0x6001CA5")]
		[Address(RVA = "0xC37540", Offset = "0xC37540", VA = "0xC37540")]
		public void SetIsDeresonated()
		{
		}

		[Token(Token = "0x6001CA6")]
		[Address(RVA = "0xC36028", Offset = "0xC36028", VA = "0xC36028")]
		private void UpdateResonationEffect()
		{
		}

		[Token(Token = "0x6001CA7")]
		[Address(RVA = "0xC375F8", Offset = "0xC375F8", VA = "0xC375F8")]
		private void StopAllEffects()
		{
		}

		[Token(Token = "0x6001CA8")]
		[Address(RVA = "0xC37770", Offset = "0xC37770", VA = "0xC37770")]
		public void PlayTargetReachedEffect()
		{
		}

		[Token(Token = "0x6001CA9")]
		[Address(RVA = "0xC37804", Offset = "0xC37804", VA = "0xC37804")]
		public void SetPitch(float newPitch)
		{
		}

		[Token(Token = "0x6001CAA")]
		[Address(RVA = "0xC37820", Offset = "0xC37820", VA = "0xC37820")]
		public void SetMidiPitch(float newPitch)
		{
		}

		[Token(Token = "0x6001CAB")]
		[Address(RVA = "0xC367F4", Offset = "0xC367F4", VA = "0xC367F4")]
		private void SetResonationAmount(float newVolume)
		{
		}

		[Token(Token = "0x6001CAC")]
		[Address(RVA = "0xC378B8", Offset = "0xC378B8", VA = "0xC378B8")]
		public void SetSystemVolume()
		{
		}

		[Token(Token = "0x6001CAD")]
		[Address(RVA = "0xC378C4", Offset = "0xC378C4", VA = "0xC378C4")]
		public void SetNormalVolume()
		{
		}

		[Token(Token = "0x6001CAE")]
		[Address(RVA = "0xC35AE4", Offset = "0xC35AE4", VA = "0xC35AE4")]
		public void StopResonation()
		{
		}

		[Token(Token = "0x6001CAF")]
		[Address(RVA = "0xC378D0", Offset = "0xC378D0", VA = "0xC378D0")]
		public void AddResonatingSystem(ResonanceSystem system)
		{
		}

		[Token(Token = "0x6001CB0")]
		[Address(RVA = "0xC37954", Offset = "0xC37954", VA = "0xC37954")]
		public void RemoveResonatingSystem(ResonanceSystem system)
		{
		}

		[Token(Token = "0x6001CB1")]
		[Address(RVA = "0xC363B8", Offset = "0xC363B8", VA = "0xC363B8")]
		private void UpdateResonationVolume()
		{
		}

		[Token(Token = "0x6001CB2")]
		[Address(RVA = "0xC379D8", Offset = "0xC379D8", VA = "0xC379D8")]
		private void SetAudioSourceVolume(float newVolume)
		{
		}

		[Token(Token = "0x6001CB3")]
		[Address(RVA = "0xC364AC", Offset = "0xC364AC", VA = "0xC364AC")]
		private void UpdateVolumeFalloff(float updateDeltaTime)
		{
		}

		[Token(Token = "0x6001CB4")]
		[Address(RVA = "0xC37A90", Offset = "0xC37A90", VA = "0xC37A90")]
		private void UpdateByFixedCurveStep(ref float value, AnimationCurve curve, ref float time, float updateDeltaTime)
		{
		}

		[Token(Token = "0x6001CB5")]
		[Address(RVA = "0xC37BE4", Offset = "0xC37BE4", VA = "0xC37BE4")]
		private void UpdateByCurve(ref float value, AnimationCurve curve, ref float time, float updateDeltaTime)
		{
		}

		[Token(Token = "0x6001CB6")]
		[Address(RVA = "0xC37C44", Offset = "0xC37C44", VA = "0xC37C44", Slot = "4")]
		public override ComponentState CreateState()
		{
			return null;
		}

		[Token(Token = "0x6001CB7")]
		[Address(RVA = "0xC352D8", Offset = "0xC352D8", VA = "0xC352D8")]
		public void OnGrabbed()
		{
		}

		[Token(Token = "0x6001CB8")]
		[Address(RVA = "0xC35470", Offset = "0xC35470", VA = "0xC35470")]
		public void OnDropped()
		{
		}

		[Token(Token = "0x6001CB9")]
		[Address(RVA = "0xC3522C", Offset = "0xC3522C", VA = "0xC3522C")]
		public void OnStashed()
		{
		}

		[Token(Token = "0x6001CBA")]
		[Address(RVA = "0xC35774", Offset = "0xC35774", VA = "0xC35774")]
		public void OnActivated()
		{
		}

		[Token(Token = "0x6001CBB")]
		[Address(RVA = "0xC37CFC", Offset = "0xC37CFC", VA = "0xC37CFC")]
		public int GetPitchAtIndex(int index)
		{
			return default(int);
		}

		[Token(Token = "0x6001CBC")]
		[Address(RVA = "0xC37D40", Offset = "0xC37D40", VA = "0xC37D40")]
		public InstrumentResonator()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20004BA")]
	public class InstrumentResonatorState : ComponentState
	{
		[Token(Token = "0x4001BE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float ResonationAmount;

		[Token(Token = "0x4001BE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public bool IsHarmonized;

		[Token(Token = "0x6001CC4")]
		[Address(RVA = "0xC37CBC", Offset = "0xC37CBC", VA = "0xC37CBC")]
		public InstrumentResonatorState(float resonation, bool harmonized)
		{
		}
	}
	[Token(Token = "0x20004BB")]
	public class ResonatedEvent : GameEvent
	{
		[Token(Token = "0x4001BE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x97E6A8", Offset = "0x97E6A8")]
		private InstrumentResonator <Resonator>k__BackingField;

		[Token(Token = "0x170002FF")]
		public InstrumentResonator Resonator
		{
			[Token(Token = "0x6001CC5")]
			[Address(RVA = "0xC3857C", Offset = "0xC3857C", VA = "0xC3857C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x990CA4", Offset = "0x990CA4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001CC6")]
			[Address(RVA = "0xC38584", Offset = "0xC38584", VA = "0xC38584")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x990CB4", Offset = "0x990CB4")]
			private set
			{
			}
		}

		[Token(Token = "0x6001CC7")]
		[Address(RVA = "0xC3750C", Offset = "0xC3750C", VA = "0xC3750C")]
		public ResonatedEvent(InstrumentResonator resonator)
		{
		}
	}
	[Token(Token = "0x20004BC")]
	public class ResonationInstrument : MonoBehaviour
	{
		[Token(Token = "0x20004BD")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x973B40", Offset = "0x973B40")]
		private sealed class <AnimateSongFinish>d__73 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001C20")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001C21")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001C22")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ResonationInstrument <>4__this;

			[Token(Token = "0x4001C23")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <rotationSpeed>5__2;

			[Token(Token = "0x4001C24")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private Vector3 <rotVec>5__3;

			[Token(Token = "0x4001C25")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private float <timeLeft>5__4;

			[Token(Token = "0x4001C26")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private bool <outerRingDone>5__5;

			[Token(Token = "0x4001C27")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3D")]
			private bool <middleRingDone>5__6;

			[Token(Token = "0x17000302")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001CF8")]
				[Address(RVA = "0xC3B640", Offset = "0xC3B640", VA = "0xC3B640", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000303")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001CFA")]
				[Address(RVA = "0xC3B6A8", Offset = "0xC3B6A8", VA = "0xC3B6A8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001CF5")]
			[Address(RVA = "0xC3A484", Offset = "0xC3A484", VA = "0xC3A484")]
			[DebuggerHidden]
			public <AnimateSongFinish>d__73(int <>1__state)
			{
			}

			[Token(Token = "0x6001CF6")]
			[Address(RVA = "0xC3B120", Offset = "0xC3B120", VA = "0xC3B120", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001CF7")]
			[Address(RVA = "0xC3B124", Offset = "0xC3B124", VA = "0xC3B124", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001CF9")]
			[Address(RVA = "0xC3B648", Offset = "0xC3B648", VA = "0xC3B648", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20004BE")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x973B50", Offset = "0x973B50")]
		private sealed class <MaterialPropertyAnimation>d__97 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001C28")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001C29")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001C2A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ResonationInstrument <>4__this;

			[Token(Token = "0x4001C2B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float startMinProperty;

			[Token(Token = "0x4001C2C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public float startMaxProperty;

			[Token(Token = "0x4001C2D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public int rendererIndex;

			[Token(Token = "0x4001C2E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			public float target;

			[Token(Token = "0x4001C2F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public bool updateEmissiveResonationMaterialData;

			[Token(Token = "0x4001C30")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private float <firstProperty>5__2;

			[Token(Token = "0x4001C31")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private float <secondProperty>5__3;

			[Token(Token = "0x4001C32")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			private int <firstPropertyId>5__4;

			[Token(Token = "0x4001C33")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private int <secondPropertyId>5__5;

			[Token(Token = "0x4001C34")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
			private float <change>5__6;

			[Token(Token = "0x4001C35")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private float <iterations>5__7;

			[Token(Token = "0x4001C36")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
			private int <i>5__8;

			[Token(Token = "0x17000304")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001CFE")]
				[Address(RVA = "0xC3BC28", Offset = "0xC3BC28", VA = "0xC3BC28", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000305")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001D00")]
				[Address(RVA = "0xC3BC90", Offset = "0xC3BC90", VA = "0xC3BC90", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001CFB")]
			[Address(RVA = "0xC3AC78", Offset = "0xC3AC78", VA = "0xC3AC78")]
			[DebuggerHidden]
			public <MaterialPropertyAnimation>d__97(int <>1__state)
			{
			}

			[Token(Token = "0x6001CFC")]
			[Address(RVA = "0xC3B7C8", Offset = "0xC3B7C8", VA = "0xC3B7C8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001CFD")]
			[Address(RVA = "0xC3B7CC", Offset = "0xC3B7CC", VA = "0xC3B7CC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001CFF")]
			[Address(RVA = "0xC3BC30", Offset = "0xC3BC30", VA = "0xC3BC30", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20004BF")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x973B60", Offset = "0x973B60")]
		private sealed class <MaterialPropertyAnimation>d__100 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001C37")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001C38")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001C39")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ResonationInstrument <>4__this;

			[Token(Token = "0x4001C3A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public int rendererIndex;

			[Token(Token = "0x4001C3B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public float target;

			[Token(Token = "0x17000306")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001D04")]
				[Address(RVA = "0xC3B758", Offset = "0xC3B758", VA = "0xC3B758", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000307")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001D06")]
				[Address(RVA = "0xC3B7C0", Offset = "0xC3B7C0", VA = "0xC3B7C0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001D01")]
			[Address(RVA = "0xC3AD80", Offset = "0xC3AD80", VA = "0xC3AD80")]
			[DebuggerHidden]
			public <MaterialPropertyAnimation>d__100(int <>1__state)
			{
			}

			[Token(Token = "0x6001D02")]
			[Address(RVA = "0xC3B6B0", Offset = "0xC3B6B0", VA = "0xC3B6B0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001D03")]
			[Address(RVA = "0xC3B6B4", Offset = "0xC3B6B4", VA = "0xC3B6B4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001D05")]
			[Address(RVA = "0xC3B760", Offset = "0xC3B760", VA = "0xC3B760", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001BE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly int minId;

		[Token(Token = "0x4001BE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private static readonly int maxId;

		[Token(Token = "0x4001BE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static readonly int grooveSelectorId;

		[Token(Token = "0x4001BE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public static int NumInstrumentsInInventory;

		[Token(Token = "0x4001BE8")]
		public const float MinMidiPitch = 60f;

		[Token(Token = "0x4001BE9")]
		public const float MaxMidiPitch = 72f;

		[Token(Token = "0x4001BEA")]
		public const float PitchFactor = 0.05f;

		[Token(Token = "0x4001BEB")]
		private const float VolumeIncreaseFactor = 0.005f;

		[Token(Token = "0x4001BEC")]
		private const float RotationFactor = 0.1f;

		[Token(Token = "0x4001BED")]
		private const float DefaultVolumeFalloffTime = 25f;

		[Token(Token = "0x4001BEE")]
		private const float DotDistance = 0.55f;

		[Token(Token = "0x4001BEF")]
		private const float MinResonanceVolume = 0.05f;

		[Token(Token = "0x4001BF0")]
		private const float PitchDeltaTolerance = 0.25f;

		[Token(Token = "0x4001BF1")]
		private const int NumberOfAnimatedProperties = 2;

		[Token(Token = "0x4001BF2")]
		private const float MaterialAnimationUpdatesPerSecond = 20f;

		[Token(Token = "0x4001BF3")]
		private const float MaterialAnimationDuration = 0.5f;

		[Token(Token = "0x4001BF4")]
		private const float MaterialAnimationAmount = 0.2f;

		[Token(Token = "0x4001BF5")]
		private const float AnimationAmountThreshold = 0.001f;

		[Token(Token = "0x4001BF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Rotatable2 m_rotatable;

		[Token(Token = "0x4001BF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private AnimationCurve m_volumeFalloffCurve;

		[Token(Token = "0x4001BF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Grabbable m_grabbable;

		[Token(Token = "0x4001BF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private GestrumentMonophonic m_gestrumentMonophonic;

		[Token(Token = "0x4001BFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private GameObject[] m_indicators;

		[Token(Token = "0x4001BFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private ParticleSystem[] m_indicatorEffects;

		[Token(Token = "0x4001BFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x97E718", Offset = "0x97E718")]
		private ParticleSystem m_instrumentPlayingEffect;

		[Token(Token = "0x4001BFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private ParticleSystem m_harmonizationParticle;

		[Token(Token = "0x4001BFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private Transform outerRing;

		[Token(Token = "0x4001BFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private Transform middleRing;

		[Token(Token = "0x4001C00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private Renderer m_instrumentBaseRenderer;

		[Token(Token = "0x4001C01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private Renderer m_knobRenderer;

		[Token(Token = "0x4001C02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private Renderer m_outerRingRenderer;

		[Token(Token = "0x4001C03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private Renderer m_innerRingRenderer;

		[Token(Token = "0x4001C04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private InstrumentCrystalAnimation middleCrystal;

		[Token(Token = "0x4001C05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private InstrumentCrystalAnimation handleCrystal;

		[Token(Token = "0x4001C06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		private Transform rootObject;

		[Token(Token = "0x4001C07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		private NeatAudioPlayer audioPlayer;

		[Token(Token = "0x4001C08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[SerializeField]
		private NeatAudioCue instrumentSoundCue;

		[Token(Token = "0x4001C09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static readonly int SPEED;

		[Token(Token = "0x4001C0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public static readonly int STATE;

		[Token(Token = "0x4001C0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static readonly int RATTLE;

		[Token(Token = "0x4001C0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public static readonly int PROGRESS;

		[Token(Token = "0x4001C0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private MaterialPropertyBlock m_currentEmissiveMaterialPropertyBlock;

		[Token(Token = "0x4001C0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private float m_pitch;

		[Token(Token = "0x4001C0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		private float m_volume;

		[Token(Token = "0x4001C10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private InstrumentResonator m_resonator;

		[Token(Token = "0x4001C11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private float sqrDistancePlayerToResonator;

		[Token(Token = "0x4001C12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		private float m_lastRotation;

		[Token(Token = "0x4001C13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private float m_volumeFalloffTime;

		[Token(Token = "0x4001C14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		private bool m_isBeingUsed;

		[Token(Token = "0x4001C15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private float currentTargetRotation;

		[Token(Token = "0x4001C16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		private int numIndicatorsActivated;

		[Token(Token = "0x4001C17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private int currentTargetGroove;

		[Token(Token = "0x4001C18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		private bool isAnimatingSongFinish;

		[Token(Token = "0x4001C19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private YieldInstruction m_waitForOneThenth;

		[Token(Token = "0x4001C1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private Coroutine animateSongFinish;

		[Token(Token = "0x4001C1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private List<InstrumentResonator> allResonatorsInRange;

		[Token(Token = "0x4001C1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		private EmissiveResonationMaterialData[] m_emissiveResonationMaterialData;

		[Token(Token = "0x4001C1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		private Renderer[] m_instrumentRenderers;

		[Token(Token = "0x4001C1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		private float timeLeftToHoldStill;

		[Token(Token = "0x4001C1F")]
		private const float timeRequiredToHoldStill = 0.8f;

		[Token(Token = "0x17000300")]
		public Grabbable Grabbable
		{
			[Token(Token = "0x6001CC8")]
			[Address(RVA = "0xC3858C", Offset = "0xC3858C", VA = "0xC3858C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000301")]
		public bool IsHeld
		{
			[Token(Token = "0x6001CC9")]
			[Address(RVA = "0xC384A4", Offset = "0xC384A4", VA = "0xC384A4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001CCA")]
		[Address(RVA = "0xC38594", Offset = "0xC38594", VA = "0xC38594")]
		private void Start()
		{
		}

		[Token(Token = "0x6001CCB")]
		[Address(RVA = "0xC3881C", Offset = "0xC3881C", VA = "0xC3881C")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001CCC")]
		[Address(RVA = "0xC38A68", Offset = "0xC38A68", VA = "0xC38A68")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6001CCD")]
		[Address(RVA = "0xC39044", Offset = "0xC39044", VA = "0xC39044")]
		private void OnStartedPlaying()
		{
		}

		[Token(Token = "0x6001CCE")]
		[Address(RVA = "0xC39E90", Offset = "0xC39E90", VA = "0xC39E90")]
		private void RandomizeNextTarget()
		{
		}

		[Token(Token = "0x6001CCF")]
		[Address(RVA = "0xC3A0D4", Offset = "0xC3A0D4", VA = "0xC3A0D4")]
		private void ResetTimeToHold()
		{
		}

		[Token(Token = "0x6001CD0")]
		[Address(RVA = "0xC395CC", Offset = "0xC395CC", VA = "0xC395CC")]
		private float GetProgress()
		{
			return default(float);
		}

		[Token(Token = "0x6001CD1")]
		[Address(RVA = "0xC39780", Offset = "0xC39780", VA = "0xC39780")]
		private void CheckIfTargetIsReached()
		{
		}

		[Token(Token = "0x6001CD2")]
		[Address(RVA = "0xC3A1D4", Offset = "0xC3A1D4", VA = "0xC3A1D4")]
		private void OnFinishedPlaying()
		{
		}

		[Token(Token = "0x6001CD3")]
		[Address(RVA = "0xC3A408", Offset = "0xC3A408", VA = "0xC3A408")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x990CC4", Offset = "0x990CC4")]
		private IEnumerator AnimateSongFinish()
		{
			return null;
		}

		[Token(Token = "0x6001CD4")]
		[Address(RVA = "0xC3A0E4", Offset = "0xC3A0E4", VA = "0xC3A0E4")]
		private void LockRingIntoPlace()
		{
		}

		[Token(Token = "0x6001CD5")]
		[Address(RVA = "0xC3A298", Offset = "0xC3A298", VA = "0xC3A298")]
		private void ResetRings(bool resetRotation)
		{
		}

		[Token(Token = "0x6001CD6")]
		[Address(RVA = "0xC38F2C", Offset = "0xC38F2C", VA = "0xC38F2C")]
		private void OnDroppedInstrument()
		{
		}

		[Token(Token = "0x6001CD7")]
		[Address(RVA = "0xC39DD0", Offset = "0xC39DD0", VA = "0xC39DD0")]
		private void StartSound()
		{
		}

		[Token(Token = "0x6001CD8")]
		[Address(RVA = "0xC396A8", Offset = "0xC396A8", VA = "0xC396A8")]
		private void UpdateVolume(float rotationAmount)
		{
		}

		[Token(Token = "0x6001CD9")]
		[Address(RVA = "0xC383C8", Offset = "0xC383C8", VA = "0xC383C8")]
		public void StartInstrumentPlayingEffect(float emissionRate)
		{
		}

		[Token(Token = "0x6001CDA")]
		[Address(RVA = "0xC384C0", Offset = "0xC384C0", VA = "0xC384C0")]
		public void StopInstrumentPlayingEffect()
		{
		}

		[Token(Token = "0x6001CDB")]
		[Address(RVA = "0xC392BC", Offset = "0xC392BC", VA = "0xC392BC")]
		private void UpdateInstrumentPlayingEffect(float speed)
		{
		}

		[Token(Token = "0x6001CDC")]
		[Address(RVA = "0xC39DAC", Offset = "0xC39DAC", VA = "0xC39DAC")]
		private void UpdateVolumeFalloff()
		{
		}

		[Token(Token = "0x6001CDD")]
		[Address(RVA = "0xC3A648", Offset = "0xC3A648", VA = "0xC3A648")]
		private void UpdateByFixedCurveStep(ref float value, AnimationCurve curve, ref float time)
		{
		}

		[Token(Token = "0x6001CDE")]
		[Address(RVA = "0xC3A570", Offset = "0xC3A570", VA = "0xC3A570")]
		private void ResetAllIndicators()
		{
		}

		[Token(Token = "0x6001CDF")]
		[Address(RVA = "0xC3A4B0", Offset = "0xC3A4B0", VA = "0xC3A4B0")]
		private void StopSound()
		{
		}

		[Token(Token = "0x6001CE0")]
		[Address(RVA = "0xC39DCC", Offset = "0xC39DCC", VA = "0xC39DCC")]
		private void UpdateAudio()
		{
		}

		[Token(Token = "0x6001CE1")]
		[Address(RVA = "0xC39078", Offset = "0xC39078", VA = "0xC39078")]
		private void CheckIfResonatorIsStillInRange()
		{
		}

		[Token(Token = "0x6001CE2")]
		[Address(RVA = "0xC39454", Offset = "0xC39454", VA = "0xC39454")]
		private bool HasResonator()
		{
			return default(bool);
		}

		[Token(Token = "0x6001CE3")]
		[Address(RVA = "0xC36ED0", Offset = "0xC36ED0", VA = "0xC36ED0")]
		public void RegisterResonator(InstrumentResonator instrumentResonator)
		{
		}

		[Token(Token = "0x6001CE4")]
		[Address(RVA = "0xC3A710", Offset = "0xC3A710", VA = "0xC3A710")]
		public void OnAddedToInventory()
		{
		}

		[Token(Token = "0x6001CE5")]
		[Address(RVA = "0xC3A780", Offset = "0xC3A780", VA = "0xC3A780")]
		public void OnRemovedFromInventory()
		{
		}

		[Token(Token = "0x6001CE6")]
		[Address(RVA = "0xC3A7F0", Offset = "0xC3A7F0", VA = "0xC3A7F0")]
		private void SetGlowingMaterialProperties(float val)
		{
		}

		[Token(Token = "0x6001CE7")]
		[Address(RVA = "0xC3A8B0", Offset = "0xC3A8B0", VA = "0xC3A8B0")]
		private void SetPropertyBlockForAll()
		{
		}

		[Token(Token = "0x6001CE8")]
		[Address(RVA = "0xC3A92C", Offset = "0xC3A92C", VA = "0xC3A92C")]
		private void SetPropertyBlockForRenderer(int rendererIndex)
		{
		}

		[Token(Token = "0x6001CE9")]
		[Address(RVA = "0xC39510", Offset = "0xC39510", VA = "0xC39510")]
		private void StartMaterialAnimationRoutine(int index, float target)
		{
		}

		[Token(Token = "0x6001CEA")]
		[Address(RVA = "0xC3AA18", Offset = "0xC3AA18", VA = "0xC3AA18")]
		private void StopMaterialEmissionImmediately(int index)
		{
		}

		[Token(Token = "0x6001CEB")]
		[Address(RVA = "0xC3ABBC", Offset = "0xC3ABBC", VA = "0xC3ABBC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x990D28", Offset = "0x990D28")]
		private IEnumerator MaterialPropertyAnimation(float startMinProperty, float startMaxProperty, int rendererIndex, float target, bool updateEmissiveResonationMaterialData)
		{
			return null;
		}

		[Token(Token = "0x6001CEC")]
		[Address(RVA = "0xC39D18", Offset = "0xC39D18", VA = "0xC39D18")]
		private void ShutDownAllMaterialEmission(bool animate = true)
		{
		}

		[Token(Token = "0x6001CED")]
		[Address(RVA = "0xC3ACF8", Offset = "0xC3ACF8", VA = "0xC3ACF8")]
		private void StartAllMaterialEmission()
		{
		}

		[Token(Token = "0x6001CEE")]
		[Address(RVA = "0xC3A97C", Offset = "0xC3A97C", VA = "0xC3A97C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x990D8C", Offset = "0x990D8C")]
		private IEnumerator MaterialPropertyAnimation(int rendererIndex, float target)
		{
			return null;
		}

		[Token(Token = "0x6001CEF")]
		[Address(RVA = "0xC394C4", Offset = "0xC394C4", VA = "0xC394C4")]
		private bool IsLitOrLightingUp(int index)
		{
			return default(bool);
		}

		[Token(Token = "0x6001CF0")]
		[Address(RVA = "0xC3ACA4", Offset = "0xC3ACA4", VA = "0xC3ACA4")]
		private bool IsUnlitOrShuttingDown(int index)
		{
			return default(bool);
		}

		[Token(Token = "0x6001CF1")]
		[Address(RVA = "0xC3ADAC", Offset = "0xC3ADAC", VA = "0xC3ADAC")]
		private bool IsFullyLit(int index)
		{
			return default(bool);
		}

		[Token(Token = "0x6001CF2")]
		[Address(RVA = "0xC3ADF4", Offset = "0xC3ADF4", VA = "0xC3ADF4")]
		public void OnHandleSnapped(Rotatable2 rotatable)
		{
		}

		[Token(Token = "0x6001CF3")]
		[Address(RVA = "0xC3AED4", Offset = "0xC3AED4", VA = "0xC3AED4")]
		public ResonationInstrument()
		{
		}
	}
}
namespace NeatCorp.Interaction.Crystals
{
	[Token(Token = "0x20004C0")]
	public class CrystalPedestal : SaveableComponent, IInitializable
	{
		[Token(Token = "0x20004C1")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x973B70", Offset = "0x973B70")]
		private sealed class <WaitForInitialization>d__20 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001C4D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001C4E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001C4F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public InstrumentResonator resonator;

			[Token(Token = "0x4001C50")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public CrystalPedestal <>4__this;

			[Token(Token = "0x17000308")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001D21")]
				[Address(RVA = "0xC35CAC", Offset = "0xC35CAC", VA = "0xC35CAC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000309")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001D23")]
				[Address(RVA = "0xC35D14", Offset = "0xC35D14", VA = "0xC35D14", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001D1E")]
			[Address(RVA = "0xC34D14", Offset = "0xC34D14", VA = "0xC34D14")]
			[DebuggerHidden]
			public <WaitForInitialization>d__20(int <>1__state)
			{
			}

			[Token(Token = "0x6001D1F")]
			[Address(RVA = "0xC35BA8", Offset = "0xC35BA8", VA = "0xC35BA8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001D20")]
			[Address(RVA = "0xC35BAC", Offset = "0xC35BAC", VA = "0xC35BAC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001D22")]
			[Address(RVA = "0xC35CB4", Offset = "0xC35CB4", VA = "0xC35CB4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001C3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private GameObject m_crystalObject;

		[Token(Token = "0x4001C3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private GameObject m_crystalPreVis;

		[Token(Token = "0x4001C3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private AssetReference m_shardReference;

		[Token(Token = "0x4001C3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private CrystalBeacon m_beacon;

		[Token(Token = "0x4001C40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private Grabbable m_grabbable;

		[Token(Token = "0x4001C41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private InstrumentResonator m_resonator;

		[Token(Token = "0x4001C42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private bool m_hasCrystal;

		[Token(Token = "0x4001C43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
		private bool m_isLeftHandRegistered;

		[Token(Token = "0x4001C44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5A")]
		private bool m_isRightHandRegistered;

		[Token(Token = "0x4001C45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private PlayerHand m_leftHand;

		[Token(Token = "0x4001C46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private PlayerHand m_rightHand;

		[Token(Token = "0x4001C47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private PlayerHand m_assignableHand;

		[Token(Token = "0x4001C48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private CrystalShard m_crystalShard;

		[Token(Token = "0x4001C49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Transform m_crystalTransform;

		[Token(Token = "0x4001C4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private bool m_isTryingToGrabCrystal;

		[Token(Token = "0x4001C4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private ResonanceSystem m_snappedToSystem;

		[Token(Token = "0x4001C4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private bool m_isSnappedIntoPosition;

		[Token(Token = "0x6001D07")]
		[Address(RVA = "0xC3448C", Offset = "0xC3448C", VA = "0xC3448C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001D08")]
		[Address(RVA = "0xC348C8", Offset = "0xC348C8", VA = "0xC348C8")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001D09")]
		[Address(RVA = "0xC34AA4", Offset = "0xC34AA4", VA = "0xC34AA4", Slot = "5")]
		public void Initialize()
		{
		}

		[Token(Token = "0x6001D0A")]
		[Address(RVA = "0xC34C7C", Offset = "0xC34C7C", VA = "0xC34C7C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x990EE0", Offset = "0x990EE0")]
		private IEnumerator WaitForInitialization(InstrumentResonator resonator)
		{
			return null;
		}

		[Token(Token = "0x6001D0B")]
		[Address(RVA = "0xC34D40", Offset = "0xC34D40", VA = "0xC34D40")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x6001D0C")]
		[Address(RVA = "0xC34E78", Offset = "0xC34E78", VA = "0xC34E78")]
		private void OnTriggerExit(Collider other)
		{
		}

		[Token(Token = "0x6001D0D")]
		[Address(RVA = "0xC34F80", Offset = "0xC34F80", VA = "0xC34F80")]
		private void OnTriggerStay(Collider other)
		{
		}

		[Token(Token = "0x6001D0E")]
		[Address(RVA = "0xC34728", Offset = "0xC34728", VA = "0xC34728")]
		private void OnStashed()
		{
		}

		[Token(Token = "0x6001D0F")]
		[Address(RVA = "0xC347D4", Offset = "0xC347D4", VA = "0xC347D4")]
		private void OnGrabbed(Grabbable grabbable)
		{
		}

		[Token(Token = "0x6001D10")]
		[Address(RVA = "0xC3537C", Offset = "0xC3537C", VA = "0xC3537C")]
		private void OnDropped(Grabbable grabbable)
		{
		}

		[Token(Token = "0x6001D11")]
		[Address(RVA = "0xC35520", Offset = "0xC35520", VA = "0xC35520")]
		private void OnGemGrabbed(GemGrabbedEvent e)
		{
		}

		[Token(Token = "0x6001D12")]
		[Address(RVA = "0xC35564", Offset = "0xC35564", VA = "0xC35564")]
		private void OnGemDropped(GemDroppedEvent e)
		{
		}

		[Token(Token = "0x6001D13")]
		[Address(RVA = "0xC34D74", Offset = "0xC34D74", VA = "0xC34D74")]
		private void TryRegisterHand(Collider other)
		{
		}

		[Token(Token = "0x6001D14")]
		[Address(RVA = "0xC34E7C", Offset = "0xC34E7C", VA = "0xC34E7C")]
		private void TryUnregisterHand(Collider other)
		{
		}

		[Token(Token = "0x6001D15")]
		[Address(RVA = "0xC35114", Offset = "0xC35114", VA = "0xC35114")]
		private void TryAddCrystal(Collider other)
		{
		}

		[Token(Token = "0x6001D16")]
		[Address(RVA = "0xC356E0", Offset = "0xC356E0", VA = "0xC356E0")]
		public Vector3 GetPrevisPos()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001D17")]
		[Address(RVA = "0xC356FC", Offset = "0xC356FC", VA = "0xC356FC")]
		private void OnInfusionCompleted(GemType gemType)
		{
		}

		[Token(Token = "0x6001D18")]
		[Address(RVA = "0xC34BD4", Offset = "0xC34BD4", VA = "0xC34BD4")]
		private void SetCrystalActive(bool shoudBeActive)
		{
		}

		[Token(Token = "0x6001D19")]
		[Address(RVA = "0xC34FE4", Offset = "0xC34FE4", VA = "0xC34FE4")]
		private void TryGrabShard(PlayerHand hand)
		{
		}

		[Token(Token = "0x6001D1A")]
		[Address(RVA = "0xC3582C", Offset = "0xC3582C", VA = "0xC3582C")]
		public void SetShouldSnapIntoPosition(bool shouldSnap, ResonanceSystem resonanceSystem, Vector3 pos, Quaternion rot)
		{
		}

		[Token(Token = "0x6001D1B")]
		[Address(RVA = "0xC359C8", Offset = "0xC359C8", VA = "0xC359C8")]
		private void OnShardSpawned(SpawnOperationCallbackData data)
		{
		}

		[Token(Token = "0x6001D1C")]
		[Address(RVA = "0xC35B08", Offset = "0xC35B08", VA = "0xC35B08", Slot = "4")]
		public override ComponentState CreateState()
		{
			return null;
		}

		[Token(Token = "0x6001D1D")]
		[Address(RVA = "0xC35BA0", Offset = "0xC35BA0", VA = "0xC35BA0")]
		public CrystalPedestal()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20004C2")]
	public class CrystalPedestalState : ComponentState
	{
		[Token(Token = "0x4001C51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool hasCrystal;

		[Token(Token = "0x6001D24")]
		[Address(RVA = "0xC35B70", Offset = "0xC35B70", VA = "0xC35B70")]
		public CrystalPedestalState(bool hasCrystal)
		{
		}
	}
}
namespace NeatCorp.Gradient
{
	[Token(Token = "0x20004C3")]
	public class ColorState : ComponentState
	{
		[Token(Token = "0x4001C52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Color32Serializable Dark;

		[Token(Token = "0x4001C53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public Color32Serializable Mid;

		[Token(Token = "0x4001C54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Color32Serializable Bright;

		[Token(Token = "0x6001D25")]
		[Address(RVA = "0xD4A924", Offset = "0xD4A924", VA = "0xD4A924")]
		public ColorState(PlantColors colors)
		{
		}
	}
	[Token(Token = "0x20004C4")]
	public class SaveColorState : SaveableComponent, IInitializable
	{
		[Token(Token = "0x4001C55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private GradientColorer m_gradientColorer;

		[Token(Token = "0x4001C56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Color32 m_dark;

		[Token(Token = "0x4001C57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private Color32 m_mid;

		[Token(Token = "0x4001C58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Color32 m_bright;

		[Token(Token = "0x6001D26")]
		[Address(RVA = "0xD4A9D8", Offset = "0xD4A9D8", VA = "0xD4A9D8", Slot = "4")]
		public override ComponentState CreateState()
		{
			return null;
		}

		[Token(Token = "0x6001D27")]
		[Address(RVA = "0xD4AA60", Offset = "0xD4AA60", VA = "0xD4AA60", Slot = "5")]
		public void Initialize()
		{
		}

		[Token(Token = "0x6001D28")]
		[Address(RVA = "0xD4ABF4", Offset = "0xD4ABF4", VA = "0xD4ABF4")]
		public SaveColorState()
		{
		}
	}
}
namespace NeatCorp.Gardening
{
	[Token(Token = "0x20004C5")]
	public interface ISoilManipulator
	{
		[Token(Token = "0x6001D29")]
		void OnSoilManipulation(Vector3 pos);
	}
	[Token(Token = "0x20004C6")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x973B80", Offset = "0x973B80")]
	public class TillableMaterials : ScriptableObject
	{
		[Token(Token = "0x4001C59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Material[] Materials;

		[Token(Token = "0x6001D2A")]
		[Address(RVA = "0xD46BE4", Offset = "0xD46BE4", VA = "0xD46BE4")]
		public bool IsTillable(Material mat)
		{
			return default(bool);
		}

		[Token(Token = "0x6001D2B")]
		[Address(RVA = "0xD46CF8", Offset = "0xD46CF8", VA = "0xD46CF8")]
		public TillableMaterials()
		{
		}
	}
}
namespace NeatCorp.Gardening.WaterPump
{
	[Token(Token = "0x20004C7")]
	public class WaterStream : MonoBehaviour
	{
		[Token(Token = "0x4001C5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Tool_WateringCan m_wateringCan;

		[Token(Token = "0x4001C5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Rigidbody m_wateringCanRb;

		[Token(Token = "0x4001C5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool m_hasInitializedWateringCan;

		[Token(Token = "0x4001C5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		private bool m_isWateringCanAvailable;

		[Token(Token = "0x6001D2C")]
		[Address(RVA = "0xD46D00", Offset = "0xD46D00", VA = "0xD46D00")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001D2D")]
		[Address(RVA = "0xD46D20", Offset = "0xD46D20", VA = "0xD46D20")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x6001D2E")]
		[Address(RVA = "0xD46F80", Offset = "0xD46F80", VA = "0xD46F80")]
		private void OnTriggerExit(Collider other)
		{
		}

		[Token(Token = "0x6001D2F")]
		[Address(RVA = "0xD46EA0", Offset = "0xD46EA0", VA = "0xD46EA0")]
		private void TryAddCan(Collider other)
		{
		}

		[Token(Token = "0x6001D30")]
		[Address(RVA = "0xD46F84", Offset = "0xD46F84", VA = "0xD46F84")]
		private void TryRemoveCan(Collider other)
		{
		}

		[Token(Token = "0x6001D31")]
		[Address(RVA = "0xD46D10", Offset = "0xD46D10", VA = "0xD46D10")]
		private void TryRemoveCan()
		{
		}

		[Token(Token = "0x6001D32")]
		[Address(RVA = "0xD47038", Offset = "0xD47038", VA = "0xD47038")]
		public void TryFillingWaterCan(float amount, WaterType waterType)
		{
		}

		[Token(Token = "0x6001D33")]
		[Address(RVA = "0xD47060", Offset = "0xD47060", VA = "0xD47060")]
		public WaterStream()
		{
		}
	}
	[Token(Token = "0x20004C8")]
	public class Waterpump : MonoBehaviour
	{
		[Token(Token = "0x4001C5E")]
		private const float WateringMaxDistance = 2f;

		[Token(Token = "0x4001C5F")]
		private const float WateringRadius = 0.75f;

		[Token(Token = "0x4001C60")]
		private const float WaterflowFalloff = 0.005f;

		[Token(Token = "0x4001C61")]
		private const float MaxWaterBeamWidth = 0.05f;

		[Token(Token = "0x4001C62")]
		private const float MaxWaterBeamAngle = 30f;

		[Token(Token = "0x4001C63")]
		private const float RotationFlowFactor = 0.2f;

		[Token(Token = "0x4001C64")]
		private const float FillInterval = 0.5f;

		[Token(Token = "0x4001C65")]
		private const float FillMultiplier = 4f;

		[Token(Token = "0x4001C66")]
		private const float MaxWaterFlow = 5f;

		[Token(Token = "0x4001C67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private WaterStream m_waterStream;

		[Token(Token = "0x4001C68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Grabbable m_grabbable;

		[Token(Token = "0x4001C69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Rotatable m_rotatable;

		[Token(Token = "0x4001C6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private WaterConeEmitter m_waterConeEmitter;

		[Token(Token = "0x4001C6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private AnimationCurve m_waterBeamWidthCurve;

		[Token(Token = "0x4001C6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private AnimationCurve m_motionForceCurve;

		[Token(Token = "0x4001C6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private NeatAudioPlayer m_pourSound;

		[Token(Token = "0x4001C6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private NeatAudioPlayer m_groundSound;

		[Token(Token = "0x4001C6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private bool m_downwardMotion;

		[Token(Token = "0x4001C70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
		private bool m_isStreamActive;

		[Token(Token = "0x4001C71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5A")]
		private bool m_shouldUpdate;

		[Token(Token = "0x4001C72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private float m_downwardMotionDuration;

		[Token(Token = "0x4001C73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private float m_lastRotation;

		[Token(Token = "0x4001C74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private float m_durationSinceLastFill;

		[Token(Token = "0x4001C75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private WaterType m_extractedWaterType;

		[Token(Token = "0x4001C76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public float WaterFlow;

		[Token(Token = "0x1700030A")]
		public WaterType WaterType
		{
			[Token(Token = "0x6001D34")]
			[Address(RVA = "0xD47068", Offset = "0xD47068", VA = "0xD47068")]
			get
			{
				return default(WaterType);
			}
		}

		[Token(Token = "0x6001D35")]
		[Address(RVA = "0xD47070", Offset = "0xD47070", VA = "0xD47070")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001D36")]
		[Address(RVA = "0xD472D0", Offset = "0xD472D0", VA = "0xD472D0")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001D37")]
		[Address(RVA = "0xD47454", Offset = "0xD47454", VA = "0xD47454")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001D38")]
		[Address(RVA = "0xD4758C", Offset = "0xD4758C", VA = "0xD4758C")]
		private void OnGrabbed(Grabbable grabbable)
		{
		}

		[Token(Token = "0x6001D39")]
		[Address(RVA = "0xD475E8", Offset = "0xD475E8", VA = "0xD475E8")]
		private void OnDropped(Grabbable grabbable)
		{
		}

		[Token(Token = "0x6001D3A")]
		[Address(RVA = "0xD47664", Offset = "0xD47664", VA = "0xD47664")]
		private void OnStashed()
		{
		}

		[Token(Token = "0x6001D3B")]
		[Address(RVA = "0xD475B8", Offset = "0xD475B8", VA = "0xD475B8")]
		private void SetHandleActive(bool shouldBeActive)
		{
		}

		[Token(Token = "0x6001D3C")]
		[Address(RVA = "0xD475E0", Offset = "0xD475E0", VA = "0xD475E0")]
		private void StopWaterFlow()
		{
		}

		[Token(Token = "0x6001D3D")]
		[Address(RVA = "0xD477D4", Offset = "0xD477D4", VA = "0xD477D4")]
		private void Update()
		{
		}

		[Token(Token = "0x6001D3E")]
		[Address(RVA = "0xD4782C", Offset = "0xD4782C", VA = "0xD4782C")]
		private void UpdatePumpMotion()
		{
		}

		[Token(Token = "0x6001D3F")]
		[Address(RVA = "0xD47938", Offset = "0xD47938", VA = "0xD47938")]
		private void UpdateWaterflowFalloff()
		{
		}

		[Token(Token = "0x6001D40")]
		[Address(RVA = "0xD4766C", Offset = "0xD4766C", VA = "0xD4766C")]
		private void UpdateWaterStream()
		{
		}

		[Token(Token = "0x6001D41")]
		[Address(RVA = "0xD479D4", Offset = "0xD479D4", VA = "0xD479D4")]
		private void DoWatering(float deltaWater)
		{
		}

		[Token(Token = "0x6001D42")]
		[Address(RVA = "0xD47D6C", Offset = "0xD47D6C", VA = "0xD47D6C")]
		public Waterpump()
		{
		}
	}
}
namespace NeatCorp.Gardening.Compost
{
	[Token(Token = "0x20004C9")]
	public class Compost : SaveableComponent, IInitializable
	{
		[Token(Token = "0x20004CA")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x973BEC", Offset = "0x973BEC")]
		private sealed class <>c__DisplayClass80_0
		{
			[Token(Token = "0x4001CB6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Rigidbody rb;

			[Token(Token = "0x4001CB7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Vector3 compostToPlayerDirection;

			[Token(Token = "0x4001CB8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public BirdBehavior birdBehavior;

			[Token(Token = "0x6001D71")]
			[Address(RVA = "0xD439D0", Offset = "0xD439D0", VA = "0xD439D0")]
			public <>c__DisplayClass80_0()
			{
			}

			[Token(Token = "0x6001D72")]
			[Address(RVA = "0xD44E4C", Offset = "0xD44E4C", VA = "0xD44E4C")]
			internal void <MoveObjectOutOfBin>b__0()
			{
			}
		}

		[Token(Token = "0x20004CB")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x973BFC", Offset = "0x973BFC")]
		private sealed class <RemoveAllDelayed>d__82 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001CB9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001CBA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001CBB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Compost <>4__this;

			[Token(Token = "0x1700030C")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001D76")]
				[Address(RVA = "0xD454DC", Offset = "0xD454DC", VA = "0xD454DC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700030D")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001D78")]
				[Address(RVA = "0xD45544", Offset = "0xD45544", VA = "0xD45544", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001D73")]
			[Address(RVA = "0xD43A70", Offset = "0xD43A70", VA = "0xD43A70")]
			[DebuggerHidden]
			public <RemoveAllDelayed>d__82(int <>1__state)
			{
			}

			[Token(Token = "0x6001D74")]
			[Address(RVA = "0xD45348", Offset = "0xD45348", VA = "0xD45348", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001D75")]
			[Address(RVA = "0xD4534C", Offset = "0xD4534C", VA = "0xD4534C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001D77")]
			[Address(RVA = "0xD454E4", Offset = "0xD454E4", VA = "0xD454E4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20004CC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x973C0C", Offset = "0x973C0C")]
		private sealed class <DestroyObject>d__83 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001CBC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001CBD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001CBE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Transform obj;

			[Token(Token = "0x4001CBF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Compost <>4__this;

			[Token(Token = "0x4001CC0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private Vector3 <startScale>5__2;

			[Token(Token = "0x4001CC1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private float <distance>5__3;

			[Token(Token = "0x1700030E")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001D7C")]
				[Address(RVA = "0xD452D8", Offset = "0xD452D8", VA = "0xD452D8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700030F")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001D7E")]
				[Address(RVA = "0xD45340", Offset = "0xD45340", VA = "0xD45340", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001D79")]
			[Address(RVA = "0xD43A9C", Offset = "0xD43A9C", VA = "0xD43A9C")]
			[DebuggerHidden]
			public <DestroyObject>d__83(int <>1__state)
			{
			}

			[Token(Token = "0x6001D7A")]
			[Address(RVA = "0xD44F10", Offset = "0xD44F10", VA = "0xD44F10", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001D7B")]
			[Address(RVA = "0xD44F14", Offset = "0xD44F14", VA = "0xD44F14", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001D7D")]
			[Address(RVA = "0xD452E0", Offset = "0xD452E0", VA = "0xD452E0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20004CD")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x973C1C", Offset = "0x973C1C")]
		private sealed class <WaitForProcessing>d__87 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001CC2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001CC3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001CC4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Compost <>4__this;

			[Token(Token = "0x4001CC5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <durationAfterDelay>5__2;

			[Token(Token = "0x17000310")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001D82")]
				[Address(RVA = "0xD4572C", Offset = "0xD4572C", VA = "0xD4572C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000311")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001D84")]
				[Address(RVA = "0xD45794", Offset = "0xD45794", VA = "0xD45794", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001D7F")]
			[Address(RVA = "0xD43EEC", Offset = "0xD43EEC", VA = "0xD43EEC")]
			[DebuggerHidden]
			public <WaitForProcessing>d__87(int <>1__state)
			{
			}

			[Token(Token = "0x6001D80")]
			[Address(RVA = "0xD4554C", Offset = "0xD4554C", VA = "0xD4554C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001D81")]
			[Address(RVA = "0xD45550", Offset = "0xD45550", VA = "0xD45550", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001D83")]
			[Address(RVA = "0xD45734", Offset = "0xD45734", VA = "0xD45734", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20004CE")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x973C2C", Offset = "0x973C2C")]
		private sealed class <WaitUntilTrayOpen>d__89 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001CC6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001CC7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001CC8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Compost <>4__this;

			[Token(Token = "0x17000312")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001D88")]
				[Address(RVA = "0xD45AF8", Offset = "0xD45AF8", VA = "0xD45AF8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000313")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001D8A")]
				[Address(RVA = "0xD45B60", Offset = "0xD45B60", VA = "0xD45B60", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001D85")]
			[Address(RVA = "0xD43FD0", Offset = "0xD43FD0", VA = "0xD43FD0")]
			[DebuggerHidden]
			public <WaitUntilTrayOpen>d__89(int <>1__state)
			{
			}

			[Token(Token = "0x6001D86")]
			[Address(RVA = "0xD459AC", Offset = "0xD459AC", VA = "0xD459AC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001D87")]
			[Address(RVA = "0xD459B0", Offset = "0xD459B0", VA = "0xD459B0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001D89")]
			[Address(RVA = "0xD45B00", Offset = "0xD45B00", VA = "0xD45B00", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20004CF")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x973C3C", Offset = "0x973C3C")]
		private sealed class <WaitUntilLidOpen>d__90 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001CC9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001CCA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001CCB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Compost <>4__this;

			[Token(Token = "0x17000314")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001D8E")]
				[Address(RVA = "0xD4593C", Offset = "0xD4593C", VA = "0xD4593C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000315")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001D90")]
				[Address(RVA = "0xD459A4", Offset = "0xD459A4", VA = "0xD459A4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001D8B")]
			[Address(RVA = "0xD44078", Offset = "0xD44078", VA = "0xD44078")]
			[DebuggerHidden]
			public <WaitUntilLidOpen>d__90(int <>1__state)
			{
			}

			[Token(Token = "0x6001D8C")]
			[Address(RVA = "0xD4579C", Offset = "0xD4579C", VA = "0xD4579C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001D8D")]
			[Address(RVA = "0xD457A0", Offset = "0xD457A0", VA = "0xD457A0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001D8F")]
			[Address(RVA = "0xD45944", Offset = "0xD45944", VA = "0xD45944", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001C77")]
		private const int MaxContentLevel = 10;

		[Token(Token = "0x4001C78")]
		private const int MinContentLevel = 0;

		[Token(Token = "0x4001C79")]
		private const float RemovalWaitDuration = 1f;

		[Token(Token = "0x4001C7A")]
		private const float TrayOpenAngle = 15f;

		[Token(Token = "0x4001C7B")]
		private const float OffsetDistance = 0.06f;

		[Token(Token = "0x4001C7C")]
		private const float DelayProcessingStart = 1.5f;

		[Token(Token = "0x4001C7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private readonly Vector3 VerticalOffset;

		[Token(Token = "0x4001C7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private readonly int m_compostOnId;

		[Token(Token = "0x4001C7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private readonly int m_compostDoneId;

		[Token(Token = "0x4001C80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private readonly int m_fertGrabbedId;

		[Token(Token = "0x4001C81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private readonly int m_lidUpStateNameId;

		[Token(Token = "0x4001C82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private readonly int m_openTrayStateNameId;

		[Token(Token = "0x4001C83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private readonly YieldInstruction m_waitBeforeRemovalInstruction;

		[Token(Token = "0x4001C84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private readonly YieldInstruction m_waitBeforeProcessStart;

		[Token(Token = "0x4001C85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private CompostTrigger m_entryTrigger;

		[Token(Token = "0x4001C86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private GameObject m_poof;

		[Token(Token = "0x4001C87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private float m_fallSpeed;

		[Token(Token = "0x4001C88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private AnimationCurve m_curve;

		[Token(Token = "0x4001C89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private Stashable m_stashable;

		[Token(Token = "0x4001C8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private AssetReference m_compostProducePrefab;

		[Token(Token = "0x4001C8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private Animator m_animator;

		[Token(Token = "0x4001C8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private float m_maxProcessTime;

		[Token(Token = "0x4001C8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		private AnimationCurve m_proccesTimeMultiplierCurve;

		[Token(Token = "0x4001C8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x97E9A4", Offset = "0x97E9A4")]
		[SerializeField]
		private Transform m_needle;

		[Token(Token = "0x4001C8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[SerializeField]
		private CompostLever m_lever;

		[Token(Token = "0x4001C90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[SerializeField]
		private Transform m_meterIndicator;

		[Token(Token = "0x4001C91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x97EA10", Offset = "0x97EA10")]
		private int ContentLevel;

		[Token(Token = "0x4001C92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[SerializeField]
		private CompostTrigger m_compostTrigger;

		[Token(Token = "0x4001C93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[SerializeField]
		private Transform m_contentTransform;

		[Token(Token = "0x4001C94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[SerializeField]
		private Transform m_minContentPosition;

		[Token(Token = "0x4001C95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[SerializeField]
		private Transform m_maxContentPosition;

		[Token(Token = "0x4001C96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x97EA9C", Offset = "0x97EA9C")]
		[SerializeField]
		private Transform m_trayTransform;

		[Token(Token = "0x4001C97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		[SerializeField]
		private Rotatable m_trayRotator;

		[Token(Token = "0x4001C98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		[SerializeField]
		private Transform m_produceSpawnPoint;

		[Token(Token = "0x4001C99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x97EB08", Offset = "0x97EB08")]
		[SerializeField]
		private NeatAudioPlayer m_soundPlayer;

		[Token(Token = "0x4001C9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		[SerializeField]
		private NeatAudioCue m_compostLoopCue;

		[Token(Token = "0x4001C9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		[SerializeField]
		private NeatAudioCue m_compostDoneCue;

		[Token(Token = "0x4001C9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		[SerializeField]
		private NeatAudioCue m_trayCloseCue;

		[Token(Token = "0x4001C9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		[SerializeField]
		private NeatAudioCue m_resetCue;

		[Token(Token = "0x4001C9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		[SerializeField]
		private NeatAudioCue m_produceAddedCue;

		[Token(Token = "0x4001C9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		[SerializeField]
		private NeatAudioCue m_materialRejectedCue;

		[Token(Token = "0x4001CA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		private OptimizedCollection<Transform> m_objectsEnteringBin;

		[Token(Token = "0x4001CA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		private OptimizedCollection<Transform> m_objectsExitingBin;

		[Token(Token = "0x4001CA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		private OptimizedCollection<Transform> m_objectsBeingConsumed;

		[Token(Token = "0x4001CA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		private OptimizedCollection<CompostProduce> m_produceInTray;

		[Token(Token = "0x4001CA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		private CompostState m_currentState;

		[Token(Token = "0x4001CA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		private Transform[] m_meterIndicators;

		[Token(Token = "0x4001CA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		private bool m_initialized;

		[Token(Token = "0x4001CA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x181")]
		private bool m_updateTrayAngle;

		[Token(Token = "0x4001CA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x182")]
		private bool m_isTrayOpen;

		[Token(Token = "0x4001CA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x183")]
		private bool m_isHoldingTray;

		[Token(Token = "0x4001CAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
		private Coroutine m_delayedRemovalRoutine;

		[Token(Token = "0x4001CAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
		private bool m_isProcessing;

		[Token(Token = "0x4001CAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
		private Coroutine m_waitForProcessingRoutine;

		[Token(Token = "0x4001CAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
		private Coroutine m_waitUntilTrayOpenRoutine;

		[Token(Token = "0x4001CAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
		private Coroutine m_waitUntilLidOpenRoutine;

		[Token(Token = "0x4001CAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
		private int m_initializedProduce;

		[Token(Token = "0x4001CB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B4")]
		private bool m_animateNeedle;

		[Token(Token = "0x4001CB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
		private float m_needleTargetDuration;

		[Token(Token = "0x4001CB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1BC")]
		private float m_needleAnimDuration;

		[Token(Token = "0x4001CB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
		private int m_animTargetContentLevel;

		[Token(Token = "0x4001CB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C4")]
		private float m_needleDeltaAngle;

		[Token(Token = "0x4001CB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
		private NeatAudioPlayer m_poofAudio;

		[Token(Token = "0x1700030B")]
		public bool Initialized
		{
			[Token(Token = "0x6001D43")]
			[Address(RVA = "0xD41B14", Offset = "0xD41B14", VA = "0xD41B14")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001D44")]
		[Address(RVA = "0xD41B1C", Offset = "0xD41B1C", VA = "0xD41B1C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001D45")]
		[Address(RVA = "0xD41E70", Offset = "0xD41E70", VA = "0xD41E70")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001D46")]
		[Address(RVA = "0xD42244", Offset = "0xD42244", VA = "0xD42244")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001D47")]
		[Address(RVA = "0xD42328", Offset = "0xD42328", VA = "0xD42328")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6001D48")]
		[Address(RVA = "0xD42574", Offset = "0xD42574", VA = "0xD42574", Slot = "4")]
		public override ComponentState CreateState()
		{
			return null;
		}

		[Token(Token = "0x6001D49")]
		[Address(RVA = "0xD42604", Offset = "0xD42604", VA = "0xD42604")]
		private int[] GetSerializableProduceInTray()
		{
			return null;
		}

		[Token(Token = "0x6001D4A")]
		[Address(RVA = "0xD42740", Offset = "0xD42740", VA = "0xD42740", Slot = "5")]
		public void Initialize()
		{
		}

		[Token(Token = "0x6001D4B")]
		[Address(RVA = "0xD429E0", Offset = "0xD429E0", VA = "0xD429E0")]
		private void SpawnProduceInTrayOnInitialize()
		{
		}

		[Token(Token = "0x6001D4C")]
		[Address(RVA = "0xD42B88", Offset = "0xD42B88", VA = "0xD42B88")]
		private void OpenTray()
		{
		}

		[Token(Token = "0x6001D4D")]
		[Address(RVA = "0xD424E4", Offset = "0xD424E4", VA = "0xD424E4")]
		private void UpdateTrayAngle()
		{
		}

		[Token(Token = "0x6001D4E")]
		[Address(RVA = "0xD42BCC", Offset = "0xD42BCC", VA = "0xD42BCC")]
		private void SetTrayStateOpen(bool shouldBeOpen)
		{
		}

		[Token(Token = "0x6001D4F")]
		[Address(RVA = "0xD42BF0", Offset = "0xD42BF0", VA = "0xD42BF0")]
		private void UpdateTrayGrabbables()
		{
		}

		[Token(Token = "0x6001D50")]
		[Address(RVA = "0xD42D44", Offset = "0xD42D44", VA = "0xD42D44")]
		private void OnEnterEntryTrigger(Transform other, ICompostable compostable)
		{
		}

		[Token(Token = "0x6001D51")]
		[Address(RVA = "0xD42EE0", Offset = "0xD42EE0", VA = "0xD42EE0")]
		private void OnExitEntryTrigger(Transform other)
		{
		}

		[Token(Token = "0x6001D52")]
		[Address(RVA = "0xD43040", Offset = "0xD43040", VA = "0xD43040")]
		public void OnEnterCompostTrigger(Transform otherRoot, ICompostable compostable)
		{
		}

		[Token(Token = "0x6001D53")]
		[Address(RVA = "0xD431F0", Offset = "0xD431F0", VA = "0xD431F0")]
		private void MoveObjectOutOfBin(Transform objTransform, bool teleport = false)
		{
		}

		[Token(Token = "0x6001D54")]
		[Address(RVA = "0xD437C4", Offset = "0xD437C4", VA = "0xD437C4")]
		private void ConsumeCompostable(Transform objTransform, ICompostable compostable)
		{
		}

		[Token(Token = "0x6001D55")]
		[Address(RVA = "0xD42FC4", Offset = "0xD42FC4", VA = "0xD42FC4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x990F94", Offset = "0x990F94")]
		private IEnumerator RemoveAllDelayed()
		{
			return null;
		}

		[Token(Token = "0x6001D56")]
		[Address(RVA = "0xD439D8", Offset = "0xD439D8", VA = "0xD439D8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x990FF8", Offset = "0x990FF8")]
		private IEnumerator DestroyObject(Transform obj)
		{
			return null;
		}

		[Token(Token = "0x6001D57")]
		[Address(RVA = "0xD42810", Offset = "0xD42810", VA = "0xD42810")]
		private void UpdateContentLevel(int change, bool animate = false)
		{
		}

		[Token(Token = "0x6001D58")]
		[Address(RVA = "0xD422F8", Offset = "0xD422F8", VA = "0xD422F8")]
		private void TryActivateLever(bool animate = false)
		{
		}

		[Token(Token = "0x6001D59")]
		[Address(RVA = "0xD43DC0", Offset = "0xD43DC0", VA = "0xD43DC0")]
		private void OnLeverPulled()
		{
		}

		[Token(Token = "0x6001D5A")]
		[Address(RVA = "0xD43E70", Offset = "0xD43E70", VA = "0xD43E70")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x99105C", Offset = "0x99105C")]
		private IEnumerator WaitForProcessing()
		{
			return null;
		}

		[Token(Token = "0x6001D5B")]
		[Address(RVA = "0xD43F18", Offset = "0xD43F18", VA = "0xD43F18")]
		public void OnTrayAnimationEnter(OnAnimationStateEnterEvent e)
		{
		}

		[Token(Token = "0x6001D5C")]
		[Address(RVA = "0xD43F54", Offset = "0xD43F54", VA = "0xD43F54")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9910C0", Offset = "0x9910C0")]
		private IEnumerator WaitUntilTrayOpen()
		{
			return null;
		}

		[Token(Token = "0x6001D5D")]
		[Address(RVA = "0xD43FFC", Offset = "0xD43FFC", VA = "0xD43FFC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x991124", Offset = "0x991124")]
		private IEnumerator WaitUntilLidOpen()
		{
			return null;
		}

		[Token(Token = "0x6001D5E")]
		[Address(RVA = "0xD440A4", Offset = "0xD440A4", VA = "0xD440A4")]
		private void UpdateContentEffects()
		{
		}

		[Token(Token = "0x6001D5F")]
		[Address(RVA = "0xD428BC", Offset = "0xD428BC", VA = "0xD428BC")]
		private void UpdateContentGraphics()
		{
		}

		[Token(Token = "0x6001D60")]
		[Address(RVA = "0xD43AC8", Offset = "0xD43AC8", VA = "0xD43AC8")]
		private void UpdateMeter(bool animate = true, int targetContentLevel = -1, float duration = 0.5f)
		{
		}

		[Token(Token = "0x6001D61")]
		[Address(RVA = "0xD44214", Offset = "0xD44214", VA = "0xD44214")]
		private void StartNeedleAnimation(int targetContentLevel, float duration)
		{
		}

		[Token(Token = "0x6001D62")]
		[Address(RVA = "0xD42368", Offset = "0xD42368", VA = "0xD42368")]
		private void UpdateNeedleAnimation()
		{
		}

		[Token(Token = "0x6001D63")]
		[Address(RVA = "0xD42A2C", Offset = "0xD42A2C", VA = "0xD42A2C")]
		private void SpawnProduce()
		{
		}

		[Token(Token = "0x6001D64")]
		[Address(RVA = "0xD443A4", Offset = "0xD443A4", VA = "0xD443A4")]
		private void PostProduceSpawned(SpawnOperationCallbackData obj)
		{
		}

		[Token(Token = "0x6001D65")]
		[Address(RVA = "0xD44854", Offset = "0xD44854", VA = "0xD44854")]
		private int GetUninitializedFertilizerValue()
		{
			return default(int);
		}

		[Token(Token = "0x6001D66")]
		[Address(RVA = "0xD44644", Offset = "0xD44644", VA = "0xD44644")]
		private Vector3 GetOffsetPosition()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001D67")]
		[Address(RVA = "0xD4491C", Offset = "0xD4491C", VA = "0xD4491C")]
		private void OnProduceRemovedFromBin(ProduceRemovedFromBinEvent e)
		{
		}

		[Token(Token = "0x6001D68")]
		[Address(RVA = "0xD449AC", Offset = "0xD449AC", VA = "0xD449AC")]
		public void OnGrabTray()
		{
		}

		[Token(Token = "0x6001D69")]
		[Address(RVA = "0xD449B8", Offset = "0xD449B8", VA = "0xD449B8")]
		public void OnDropTray()
		{
		}

		[Token(Token = "0x6001D6A")]
		[Address(RVA = "0xD42E40", Offset = "0xD42E40", VA = "0xD42E40")]
		public bool IsCompostStashedOrHeld()
		{
			return default(bool);
		}

		[Token(Token = "0x6001D6B")]
		[Address(RVA = "0xD449C0", Offset = "0xD449C0", VA = "0xD449C0")]
		private void OnStashed()
		{
		}

		[Token(Token = "0x6001D6C")]
		[Address(RVA = "0xD44A84", Offset = "0xD44A84", VA = "0xD44A84")]
		private void OnPreGrabbed(Grabbable grabbable)
		{
		}

		[Token(Token = "0x6001D6D")]
		[Address(RVA = "0xD44A8C", Offset = "0xD44A8C", VA = "0xD44A8C")]
		private void OnDropped(Grabbable grabbable)
		{
		}

		[Token(Token = "0x6001D6E")]
		[Address(RVA = "0xD449FC", Offset = "0xD449FC", VA = "0xD449FC")]
		private void TrySetInteractive(bool value)
		{
		}

		[Token(Token = "0x6001D6F")]
		[Address(RVA = "0xD44AC8", Offset = "0xD44AC8", VA = "0xD44AC8")]
		private void SetPhysicsForAllContent(bool shouldBeActive)
		{
		}

		[Token(Token = "0x6001D70")]
		[Address(RVA = "0xD44C24", Offset = "0xD44C24", VA = "0xD44C24")]
		public Compost()
		{
		}
	}
	[Token(Token = "0x20004D0")]
	public class CompostLever : MonoBehaviour
	{
		[Token(Token = "0x20004D1")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x973C4C", Offset = "0x973C4C")]
		private sealed class <>c__DisplayClass12_0
		{
			[Token(Token = "0x4001CD2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public CompostLever <>4__this;

			[Token(Token = "0x4001CD3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public bool shouldBePullable;

			[Token(Token = "0x6001D9A")]
			[Address(RVA = "0xD45C0C", Offset = "0xD45C0C", VA = "0xD45C0C")]
			public <>c__DisplayClass12_0()
			{
			}

			[Token(Token = "0x6001D9B")]
			[Address(RVA = "0xD45CF0", Offset = "0xD45CF0", VA = "0xD45CF0")]
			internal void <SetLeverPullable>b__0()
			{
			}
		}

		[Token(Token = "0x4001CCC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private float RotationDuration;

		[Token(Token = "0x4001CCD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Rotatable m_lever;

		[Token(Token = "0x4001CCE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool m_isPullable;

		[Token(Token = "0x4001CCF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		private bool m_isHolding;

		[Token(Token = "0x4001CD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private readonly Vector3 m_localUpRotation;

		[Token(Token = "0x4001CD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x97EBC4", Offset = "0x97EBC4")]
		private Action <OnLeverPulled>k__BackingField;

		[Token(Token = "0x17000316")]
		public Action OnLeverPulled
		{
			[Token(Token = "0x6001D91")]
			[Address(RVA = "0xD45B68", Offset = "0xD45B68", VA = "0xD45B68")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x991318", Offset = "0x991318")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001D92")]
			[Address(RVA = "0xD45B70", Offset = "0xD45B70", VA = "0xD45B70")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x991328", Offset = "0x991328")]
			set
			{
			}
		}

		[Token(Token = "0x6001D93")]
		[Address(RVA = "0xD45B78", Offset = "0xD45B78", VA = "0xD45B78")]
		private void Update()
		{
		}

		[Token(Token = "0x6001D94")]
		[Address(RVA = "0xD45BF0", Offset = "0xD45BF0", VA = "0xD45BF0")]
		public void OnLeverGrabbed()
		{
		}

		[Token(Token = "0x6001D95")]
		[Address(RVA = "0xD45C04", Offset = "0xD45C04", VA = "0xD45C04")]
		public void OnLeverDropped()
		{
		}

		[Token(Token = "0x6001D96")]
		[Address(RVA = "0xD43BB0", Offset = "0xD43BB0", VA = "0xD43BB0")]
		public void SetLeverPullable(bool shouldBePullable, bool animate = false)
		{
		}

		[Token(Token = "0x6001D97")]
		[Address(RVA = "0xD45C14", Offset = "0xD45C14", VA = "0xD45C14")]
		private void SetPullableProperties(bool shouldBePullable, bool waitForAnimation)
		{
		}

		[Token(Token = "0x6001D98")]
		[Address(RVA = "0xD45C38", Offset = "0xD45C38", VA = "0xD45C38")]
		private void SetLeverInteraction(bool enableInteraction)
		{
		}

		[Token(Token = "0x6001D99")]
		[Address(RVA = "0xD45C80", Offset = "0xD45C80", VA = "0xD45C80")]
		public CompostLever()
		{
		}
	}
	[Token(Token = "0x20004D2")]
	public class CompostProduce : MonoBehaviour
	{
		[Token(Token = "0x20004D3")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x973C5C", Offset = "0x973C5C")]
		private sealed class <CheckDistanceRoutine>d__19 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001CDC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001CDD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001CDE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public CompostProduce <>4__this;

			[Token(Token = "0x17000318")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001DAF")]
				[Address(RVA = "0xD46568", Offset = "0xD46568", VA = "0xD46568", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000319")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001DB1")]
				[Address(RVA = "0xD465D0", Offset = "0xD465D0", VA = "0xD465D0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001DAC")]
			[Address(RVA = "0xD46460", Offset = "0xD46460", VA = "0xD46460")]
			[DebuggerHidden]
			public <CheckDistanceRoutine>d__19(int <>1__state)
			{
			}

			[Token(Token = "0x6001DAD")]
			[Address(RVA = "0xD464BC", Offset = "0xD464BC", VA = "0xD464BC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001DAE")]
			[Address(RVA = "0xD464C0", Offset = "0xD464C0", VA = "0xD464C0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001DB0")]
			[Address(RVA = "0xD46570", Offset = "0xD46570", VA = "0xD46570", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001CD4")]
		private const float RemovedThreshold = 0.15f;

		[Token(Token = "0x4001CD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private IntValueContainer m_container;

		[Token(Token = "0x4001CD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Grabbable m_grabbable;

		[Token(Token = "0x4001CD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Rigidbody m_rigidBody;

		[Token(Token = "0x4001CD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private SaveObjectSpawnable m_saveObject;

		[Token(Token = "0x4001CD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Transform m_trayTransform;

		[Token(Token = "0x4001CDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool m_removedFromBin;

		[Token(Token = "0x4001CDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Coroutine m_distanceRoutine;

		[Token(Token = "0x17000317")]
		public int FertilizerValue
		{
			[Token(Token = "0x6001D9C")]
			[Address(RVA = "0xD42724", Offset = "0xD42724", VA = "0xD42724")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x6001D9D")]
		[Address(RVA = "0xD45D1C", Offset = "0xD45D1C", VA = "0xD45D1C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001D9E")]
		[Address(RVA = "0xD45EA0", Offset = "0xD45EA0", VA = "0xD45EA0")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001D9F")]
		[Address(RVA = "0xD46024", Offset = "0xD46024", VA = "0xD46024")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001DA0")]
		[Address(RVA = "0xD448A8", Offset = "0xD448A8", VA = "0xD448A8")]
		public void SetFertilizerValue(int value)
		{
		}

		[Token(Token = "0x6001DA1")]
		[Address(RVA = "0xD448CC", Offset = "0xD448CC", VA = "0xD448CC")]
		public void SpawnFromTray(Transform trayTransform)
		{
		}

		[Token(Token = "0x6001DA2")]
		[Address(RVA = "0xD4615C", Offset = "0xD4615C", VA = "0xD4615C")]
		private void OnGrabbed(Grabbable grabbable)
		{
		}

		[Token(Token = "0x6001DA3")]
		[Address(RVA = "0xD460F8", Offset = "0xD460F8", VA = "0xD460F8")]
		private void TryStartDistanceCheck()
		{
		}

		[Token(Token = "0x6001DA4")]
		[Address(RVA = "0xD461DC", Offset = "0xD461DC", VA = "0xD461DC")]
		private void OnDropped(Grabbable grabbable)
		{
		}

		[Token(Token = "0x6001DA5")]
		[Address(RVA = "0xD46228", Offset = "0xD46228", VA = "0xD46228")]
		private bool IsOutsideRadius(Grabbable grabbable, float radius)
		{
			return default(bool);
		}

		[Token(Token = "0x6001DA6")]
		[Address(RVA = "0xD46160", Offset = "0xD46160", VA = "0xD46160")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x991338", Offset = "0x991338")]
		private IEnumerator CheckDistanceRoutine()
		{
			return null;
		}

		[Token(Token = "0x6001DA7")]
		[Address(RVA = "0xD4648C", Offset = "0xD4648C", VA = "0xD4648C")]
		private void OnStashedItem()
		{
		}

		[Token(Token = "0x6001DA8")]
		[Address(RVA = "0xD4634C", Offset = "0xD4634C", VA = "0xD4634C")]
		public void SetRemoved(bool clearParent = false, bool activatePhysics = false)
		{
		}

		[Token(Token = "0x6001DA9")]
		[Address(RVA = "0xD42CF0", Offset = "0xD42CF0", VA = "0xD42CF0")]
		public void SetGrabbableActive(bool shouldBeActive)
		{
		}

		[Token(Token = "0x6001DAA")]
		[Address(RVA = "0xD44BD8", Offset = "0xD44BD8", VA = "0xD44BD8")]
		public void SetPhysicsActive(bool shouldBeActive)
		{
		}

		[Token(Token = "0x6001DAB")]
		[Address(RVA = "0xD464AC", Offset = "0xD464AC", VA = "0xD464AC")]
		public CompostProduce()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20004D4")]
	public class CompostState : ComponentState
	{
		[Token(Token = "0x4001CDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int ContentLevel;

		[Token(Token = "0x4001CE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int[] ProduceInTray;

		[Token(Token = "0x6001DB2")]
		[Address(RVA = "0xD426E0", Offset = "0xD426E0", VA = "0xD426E0")]
		public CompostState(int contentLevel, int[] produceInTray)
		{
		}
	}
	[Token(Token = "0x20004D5")]
	public class CompostTrigger : MonoBehaviour
	{
		[Token(Token = "0x4001CE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Action<Transform, ICompostable> EnterTriggerDelegate;

		[Token(Token = "0x4001CE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Action<Transform> ExitTriggerDelegate;

		[Token(Token = "0x4001CE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Compost m_compost;

		[Token(Token = "0x6001DB3")]
		[Address(RVA = "0xD41E20", Offset = "0xD41E20", VA = "0xD41E20")]
		public void InitializeTrigger(Compost compost, Action<Transform, ICompostable> enterAction, Action<Transform> exitAction)
		{
		}

		[Token(Token = "0x6001DB4")]
		[Address(RVA = "0xD4216C", Offset = "0xD4216C", VA = "0xD4216C")]
		public void RemoveDelegates(Action<Transform, ICompostable> enterAction, Action<Transform> exitAction)
		{
		}

		[Token(Token = "0x6001DB5")]
		[Address(RVA = "0xD465D8", Offset = "0xD465D8", VA = "0xD465D8")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x6001DB6")]
		[Address(RVA = "0xD46838", Offset = "0xD46838", VA = "0xD46838")]
		private Grabbable GetGrabbableFromCollider(Collider other)
		{
			return null;
		}

		[Token(Token = "0x6001DB7")]
		[Address(RVA = "0xD468B0", Offset = "0xD468B0", VA = "0xD468B0")]
		private void OnTriggerExit(Collider other)
		{
		}

		[Token(Token = "0x6001DB8")]
		[Address(RVA = "0xD469D8", Offset = "0xD469D8", VA = "0xD469D8")]
		public CompostTrigger()
		{
		}
	}
	[Token(Token = "0x20004D6")]
	public class Compostable : MonoBehaviour, ICompostable
	{
		[Token(Token = "0x4001CE4")]
		public const int DefaultCompostValue = 1;

		[Token(Token = "0x4001CE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private int CompostValue;

		[Token(Token = "0x6001DB9")]
		[Address(RVA = "0xD469E0", Offset = "0xD469E0", VA = "0xD469E0", Slot = "4")]
		public int GetCompostContentValue()
		{
			return default(int);
		}

		[Token(Token = "0x6001DBA")]
		[Address(RVA = "0xD469E8", Offset = "0xD469E8", VA = "0xD469E8")]
		public Compostable()
		{
		}
	}
	[Token(Token = "0x20004D7")]
	public class FertilizerBall : MonoBehaviour, ISoilManipulator, ICompostable
	{
		[Token(Token = "0x4001CE6")]
		private const float DefaultFertilizedSoilRadius = 0.5f;

		[Token(Token = "0x4001CE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private float m_fertilizedSoilRadius;

		[Token(Token = "0x6001DBB")]
		[Address(RVA = "0xD469F8", Offset = "0xD469F8", VA = "0xD469F8")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001DBC")]
		[Address(RVA = "0xD46A5C", Offset = "0xD46A5C", VA = "0xD46A5C")]
		private bool TryFertilizeAtPosition(Vector3 pos)
		{
			return default(bool);
		}

		[Token(Token = "0x6001DBD")]
		[Address(RVA = "0xD46BC8", Offset = "0xD46BC8", VA = "0xD46BC8", Slot = "5")]
		public int GetCompostContentValue()
		{
			return default(int);
		}

		[Token(Token = "0x6001DBE")]
		[Address(RVA = "0xD46BD0", Offset = "0xD46BD0", VA = "0xD46BD0", Slot = "4")]
		public void OnSoilManipulation(Vector3 pos)
		{
		}

		[Token(Token = "0x6001DBF")]
		[Address(RVA = "0xD46BD4", Offset = "0xD46BD4", VA = "0xD46BD4")]
		public FertilizerBall()
		{
		}
	}
	[Token(Token = "0x20004D8")]
	public interface ICompostable
	{
		[Token(Token = "0x6001DC0")]
		int GetCompostContentValue();
	}
}
namespace NeatCorp.Environment
{
	[Serializable]
	[Token(Token = "0x20004D9")]
	public enum ActiveStateType
	{
		[Token(Token = "0x4001CE9")]
		Enabled,
		[Token(Token = "0x4001CEA")]
		Disabled
	}
	[Token(Token = "0x20004DA")]
	public class OnActiveStateChange : MonoBehaviour
	{
		[Token(Token = "0x4001CEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private ActiveStateType m_activationState;

		[Token(Token = "0x4001CEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private UnityEvent m_event;

		[Token(Token = "0x6001DC1")]
		[Address(RVA = "0xD3CCC4", Offset = "0xD3CCC4", VA = "0xD3CCC4")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001DC2")]
		[Address(RVA = "0xD3CCE0", Offset = "0xD3CCE0", VA = "0xD3CCE0")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001DC3")]
		[Address(RVA = "0xD3CD00", Offset = "0xD3CD00", VA = "0xD3CD00")]
		public OnActiveStateChange()
		{
		}
	}
}
namespace NeatCorp.Environment.Teleportation
{
	[Token(Token = "0x20004DB")]
	[ExecuteInEditMode]
	public class CrystalBeacon : MonoBehaviour
	{
		[Token(Token = "0x20004DC")]
		private enum LitState
		{
			[Token(Token = "0x4001D0F")]
			Unlit,
			[Token(Token = "0x4001D10")]
			Resonating,
			[Token(Token = "0x4001D11")]
			Lit,
			[Token(Token = "0x4001D12")]
			Deresonating
		}

		[Token(Token = "0x20004DD")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x973C7C", Offset = "0x973C7C")]
		private sealed class <StartUp>d__69 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001D13")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001D14")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001D15")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public CrystalBeacon <>4__this;

			[Token(Token = "0x17000323")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001DEE")]
				[Address(RVA = "0xD40BDC", Offset = "0xD40BDC", VA = "0xD40BDC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000324")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001DF0")]
				[Address(RVA = "0xD40C44", Offset = "0xD40C44", VA = "0xD40C44", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001DEB")]
			[Address(RVA = "0xD3FA50", Offset = "0xD3FA50", VA = "0xD3FA50")]
			[DebuggerHidden]
			public <StartUp>d__69(int <>1__state)
			{
			}

			[Token(Token = "0x6001DEC")]
			[Address(RVA = "0xD40B08", Offset = "0xD40B08", VA = "0xD40B08", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001DED")]
			[Address(RVA = "0xD40B0C", Offset = "0xD40B0C", VA = "0xD40B0C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001DEF")]
			[Address(RVA = "0xD40BE4", Offset = "0xD40BE4", VA = "0xD40BE4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20004DE")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x973C8C", Offset = "0x973C8C")]
		private sealed class <ShutDown>d__70 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001D16")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001D17")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001D18")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public CrystalBeacon <>4__this;

			[Token(Token = "0x17000325")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001DF4")]
				[Address(RVA = "0xD40A98", Offset = "0xD40A98", VA = "0xD40A98", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000326")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001DF6")]
				[Address(RVA = "0xD40B00", Offset = "0xD40B00", VA = "0xD40B00", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001DF1")]
			[Address(RVA = "0xD3FA7C", Offset = "0xD3FA7C", VA = "0xD3FA7C")]
			[DebuggerHidden]
			public <ShutDown>d__70(int <>1__state)
			{
			}

			[Token(Token = "0x6001DF2")]
			[Address(RVA = "0xD40980", Offset = "0xD40980", VA = "0xD40980", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001DF3")]
			[Address(RVA = "0xD40984", Offset = "0xD40984", VA = "0xD40984", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001DF5")]
			[Address(RVA = "0xD40AA0", Offset = "0xD40AA0", VA = "0xD40AA0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20004DF")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x973C9C", Offset = "0x973C9C")]
		private sealed class <Cooldown>d__71 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001D19")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001D1A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001D1B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public CrystalBeacon <>4__this;

			[Token(Token = "0x17000327")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001DFA")]
				[Address(RVA = "0xD40910", Offset = "0xD40910", VA = "0xD40910", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000328")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001DFC")]
				[Address(RVA = "0xD40978", Offset = "0xD40978", VA = "0xD40978", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001DF7")]
			[Address(RVA = "0xD3FAA8", Offset = "0xD3FAA8", VA = "0xD3FAA8")]
			[DebuggerHidden]
			public <Cooldown>d__71(int <>1__state)
			{
			}

			[Token(Token = "0x6001DF8")]
			[Address(RVA = "0xD4083C", Offset = "0xD4083C", VA = "0xD4083C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001DF9")]
			[Address(RVA = "0xD40840", Offset = "0xD40840", VA = "0xD40840", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001DFB")]
			[Address(RVA = "0xD40918", Offset = "0xD40918", VA = "0xD40918", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001CED")]
		private const float FullResonationTime = 1f;

		[Token(Token = "0x4001CEE")]
		private const float FullDeresonateTime = 0.5f;

		[Token(Token = "0x4001CEF")]
		private const float MaxColliderSqrDistance = 225f;

		[Token(Token = "0x4001CF0")]
		private const float CoolDownTime = 0.5f;

		[Token(Token = "0x4001CF1")]
		private const float MinActivationTolerance = 0.005f;

		[Token(Token = "0x4001CF2")]
		private const float MaxActivationTolerance = 0.009f;

		[Token(Token = "0x4001CF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly float MaxAimSqrDistance;

		[Token(Token = "0x4001CF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x97EC54", Offset = "0x97EC54")]
		[SerializeField]
		private CapsuleCollider m_capsuleCollider;

		[Token(Token = "0x4001CF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x97ECA0", Offset = "0x97ECA0")]
		[SerializeField]
		private Transform m_teleportLocation;

		[Token(Token = "0x4001CF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Vector3[] ValidTeleportLocations;

		[Token(Token = "0x4001CF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Vector3 LastPrecomputeLocation;

		[Token(Token = "0x4001CF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[SerializeField]
		private float m_proximityRadius;

		[Token(Token = "0x4001CF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x97ED0C", Offset = "0x97ED0C")]
		[SerializeField]
		private bool m_useLocationProximity;

		[Token(Token = "0x4001CFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
		private bool UsePrecomputedTeleportLocations;

		[Token(Token = "0x4001CFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x97ED58", Offset = "0x97ED58")]
		private GameObject m_lightCircleEffect;

		[Token(Token = "0x4001CFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private InstrumentResonator m_resonator;

		[Token(Token = "0x4001CFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private NeatAudioPlayer m_resonationSound;

		[Token(Token = "0x4001CFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly int PITCH;

		[Token(Token = "0x4001CFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[HideInInspector]
		public int m_musicalPitch;

		[Token(Token = "0x4001D00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private OptimizedCollection<FastTravel> m_fastTravelAbilities;

		[Token(Token = "0x4001D01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private float m_activationTolerance;

		[Token(Token = "0x4001D02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private float m_resonationPitch;

		[Token(Token = "0x4001D03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private float m_resonationAmount;

		[Token(Token = "0x4001D04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private bool m_isSelectedByLeftHand;

		[Token(Token = "0x4001D05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8D")]
		private bool m_isSelectedByRightHand;

		[Token(Token = "0x4001D06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public int MaxNumTeleportLocations;

		[Token(Token = "0x4001D07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		public float TeleportLocationCenterOffset;

		[Token(Token = "0x4001D08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x97EDD4", Offset = "0x97EDD4")]
		private bool <IsOnCooldown>k__BackingField;

		[Token(Token = "0x4001D09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x99")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x97EDE4", Offset = "0x97EDE4")]
		private bool <IsAbilityActive>k__BackingField;

		[Token(Token = "0x4001D0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		private LitState m_litState;

		[Token(Token = "0x4001D0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private Ray m_currentAimRay;

		[Token(Token = "0x4001D0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private Coroutine m_resonateRoutine;

		[Token(Token = "0x4001D0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private Coroutine m_cooldownRoutine;

		[Token(Token = "0x1700031A")]
		public CapsuleCollider Collider
		{
			[Token(Token = "0x6001DC4")]
			[Address(RVA = "0xD3EBF8", Offset = "0xD3EBF8", VA = "0xD3EBF8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700031B")]
		public Vector3 CentrePosition
		{
			[Token(Token = "0x6001DC5")]
			[Address(RVA = "0xD3EC00", Offset = "0xD3EC00", VA = "0xD3EC00")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x1700031C")]
		private Vector3 OriginToCentre
		{
			[Token(Token = "0x6001DC6")]
			[Address(RVA = "0xD3EC74", Offset = "0xD3EC74", VA = "0xD3EC74")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x1700031D")]
		private Vector3 OriginToTargetLocation
		{
			[Token(Token = "0x6001DC7")]
			[Address(RVA = "0xD3ED38", Offset = "0xD3ED38", VA = "0xD3ED38")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x1700031E")]
		public bool IsOnCooldown
		{
			[Token(Token = "0x6001DC8")]
			[Address(RVA = "0xD3EDFC", Offset = "0xD3EDFC", VA = "0xD3EDFC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9913EC", Offset = "0x9913EC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001DC9")]
			[Address(RVA = "0xD3EE04", Offset = "0xD3EE04", VA = "0xD3EE04")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9913FC", Offset = "0x9913FC")]
			private set
			{
			}
		}

		[Token(Token = "0x1700031F")]
		public bool IsAbilityActive
		{
			[Token(Token = "0x6001DCA")]
			[Address(RVA = "0xD3EE10", Offset = "0xD3EE10", VA = "0xD3EE10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x99140C", Offset = "0x99140C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001DCB")]
			[Address(RVA = "0xD3EE18", Offset = "0xD3EE18", VA = "0xD3EE18")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x99141C", Offset = "0x99141C")]
			private set
			{
			}
		}

		[Token(Token = "0x17000320")]
		public float ResonationPitch
		{
			[Token(Token = "0x6001DCC")]
			[Address(RVA = "0xD3EE24", Offset = "0xD3EE24", VA = "0xD3EE24")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001DCD")]
			[Address(RVA = "0xD3EE2C", Offset = "0xD3EE2C", VA = "0xD3EE2C")]
			set
			{
			}
		}

		[Token(Token = "0x17000321")]
		public bool IsSelectedByAnyHand
		{
			[Token(Token = "0x6001DCE")]
			[Address(RVA = "0xD3EEC0", Offset = "0xD3EEC0", VA = "0xD3EEC0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000322")]
		public bool IsLit
		{
			[Token(Token = "0x6001DCF")]
			[Address(RVA = "0xD3EEE0", Offset = "0xD3EEE0", VA = "0xD3EEE0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001DD0")]
		[Address(RVA = "0xD3EEF0", Offset = "0xD3EEF0", VA = "0xD3EEF0")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001DD1")]
		[Address(RVA = "0xD3F07C", Offset = "0xD3F07C", VA = "0xD3F07C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001DD2")]
		[Address(RVA = "0xD3F208", Offset = "0xD3F208", VA = "0xD3F208")]
		private void OnFastTravelActivated(FastTravelAbilityActivated e)
		{
		}

		[Token(Token = "0x6001DD3")]
		[Address(RVA = "0xD3F298", Offset = "0xD3F298", VA = "0xD3F298")]
		private void OnFastTravelDeactivated(FastTravelAbilityDeactivated e)
		{
		}

		[Token(Token = "0x6001DD4")]
		[Address(RVA = "0xD3EC04", Offset = "0xD3EC04", VA = "0xD3EC04")]
		private Vector3 GetCentrePosition()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001DD5")]
		[Address(RVA = "0xD3EC78", Offset = "0xD3EC78", VA = "0xD3EC78")]
		private Vector3 GetOriginToCenter()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001DD6")]
		[Address(RVA = "0xD3ED3C", Offset = "0xD3ED3C", VA = "0xD3ED3C")]
		private Vector3 GetOriginToTargetLocation()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001DD7")]
		[Address(RVA = "0xD3F328", Offset = "0xD3F328", VA = "0xD3F328")]
		private Vector3 GetClosestColliderPosition()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001DD8")]
		[Address(RVA = "0xD3F390", Offset = "0xD3F390", VA = "0xD3F390")]
		public float GetAlignment(Ray aimRay)
		{
			return default(float);
		}

		[Token(Token = "0x6001DD9")]
		[Address(RVA = "0xD3F47C", Offset = "0xD3F47C", VA = "0xD3F47C")]
		public bool IsAimingAt(Ray aimRay)
		{
			return default(bool);
		}

		[Token(Token = "0x6001DDA")]
		[Address(RVA = "0xD3F6E8", Offset = "0xD3F6E8", VA = "0xD3F6E8")]
		private bool HasLineOfSightTo(float rayDistance)
		{
			return default(bool);
		}

		[Token(Token = "0x6001DDB")]
		[Address(RVA = "0xD3F730", Offset = "0xD3F730", VA = "0xD3F730")]
		public void UpdateSelection(bool shouldBeSelected, bool updateRightHand)
		{
		}

		[Token(Token = "0x6001DDC")]
		[Address(RVA = "0xD3F750", Offset = "0xD3F750", VA = "0xD3F750")]
		private void TrySetLit()
		{
		}

		[Token(Token = "0x6001DDD")]
		[Address(RVA = "0xD3F83C", Offset = "0xD3F83C", VA = "0xD3F83C")]
		private void TrySetUnlit()
		{
		}

		[Token(Token = "0x6001DDE")]
		[Address(RVA = "0xD3F8DC", Offset = "0xD3F8DC", VA = "0xD3F8DC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x99142C", Offset = "0x99142C")]
		private IEnumerator StartUp()
		{
			return null;
		}

		[Token(Token = "0x6001DDF")]
		[Address(RVA = "0xD3F9D4", Offset = "0xD3F9D4", VA = "0xD3F9D4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x991490", Offset = "0x991490")]
		private IEnumerator ShutDown()
		{
			return null;
		}

		[Token(Token = "0x6001DE0")]
		[Address(RVA = "0xD3F958", Offset = "0xD3F958", VA = "0xD3F958")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9914F4", Offset = "0x9914F4")]
		private IEnumerator Cooldown()
		{
			return null;
		}

		[Token(Token = "0x6001DE1")]
		[Address(RVA = "0xD3FAD4", Offset = "0xD3FAD4", VA = "0xD3FAD4")]
		public bool CanLockAt()
		{
			return default(bool);
		}

		[Token(Token = "0x6001DE2")]
		[Address(RVA = "0xD3FAE4", Offset = "0xD3FAE4", VA = "0xD3FAE4")]
		public void SetupTeleportLocations()
		{
		}

		[Token(Token = "0x6001DE3")]
		[Address(RVA = "0xD400EC", Offset = "0xD400EC", VA = "0xD400EC")]
		public bool TryTeleportTo()
		{
			return default(bool);
		}

		[Token(Token = "0x6001DE4")]
		[Address(RVA = "0xD404D4", Offset = "0xD404D4", VA = "0xD404D4")]
		public void OnPressed()
		{
		}

		[Token(Token = "0x6001DE5")]
		[Address(RVA = "0xD4053C", Offset = "0xD4053C", VA = "0xD4053C")]
		public void OnReleased()
		{
		}

		[Token(Token = "0x6001DE6")]
		[Address(RVA = "0xD405A4", Offset = "0xD405A4", VA = "0xD405A4")]
		public void OnGrabbed()
		{
		}

		[Token(Token = "0x6001DE7")]
		[Address(RVA = "0xD405AC", Offset = "0xD405AC", VA = "0xD405AC")]
		public void Deactivate()
		{
		}

		[Token(Token = "0x6001DE8")]
		[Address(RVA = "0xD405B4", Offset = "0xD405B4", VA = "0xD405B4")]
		public void UpdateResonationPitch(int beaconIndex)
		{
		}

		[Token(Token = "0x6001DE9")]
		[Address(RVA = "0xD406CC", Offset = "0xD406CC", VA = "0xD406CC")]
		public CrystalBeacon()
		{
		}
	}
	[Token(Token = "0x20004E0")]
	public class CrystalBeaconDisabledEvent : GameEvent
	{
		[Token(Token = "0x4001D1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x97EDF4", Offset = "0x97EDF4")]
		private CrystalBeacon <Beacon>k__BackingField;

		[Token(Token = "0x17000329")]
		public CrystalBeacon Beacon
		{
			[Token(Token = "0x6001DFD")]
			[Address(RVA = "0xD40C4C", Offset = "0xD40C4C", VA = "0xD40C4C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x991648", Offset = "0x991648")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001DFE")]
			[Address(RVA = "0xD40C54", Offset = "0xD40C54", VA = "0xD40C54")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x991658", Offset = "0x991658")]
			private set
			{
			}
		}

		[Token(Token = "0x6001DFF")]
		[Address(RVA = "0xD3F1D4", Offset = "0xD3F1D4", VA = "0xD3F1D4")]
		public CrystalBeaconDisabledEvent(CrystalBeacon beacon)
		{
		}
	}
	[Token(Token = "0x20004E1")]
	public class CrystalBeaconEnabledEvent : GameEvent
	{
		[Token(Token = "0x4001D1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x97EE04", Offset = "0x97EE04")]
		private CrystalBeacon <Beacon>k__BackingField;

		[Token(Token = "0x1700032A")]
		public CrystalBeacon Beacon
		{
			[Token(Token = "0x6001E00")]
			[Address(RVA = "0xD40C5C", Offset = "0xD40C5C", VA = "0xD40C5C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x991668", Offset = "0x991668")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001E01")]
			[Address(RVA = "0xD40C64", Offset = "0xD40C64", VA = "0xD40C64")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x991678", Offset = "0x991678")]
			private set
			{
			}
		}

		[Token(Token = "0x6001E02")]
		[Address(RVA = "0xD3F048", Offset = "0xD3F048", VA = "0xD3F048")]
		public CrystalBeaconEnabledEvent(CrystalBeacon beacon)
		{
		}
	}
}
namespace NeatCorp.Environment.Plants
{
	[Token(Token = "0x20004E2")]
	public class CrystalFlower : SaveableComponent, IInitializable
	{
		[Token(Token = "0x20004E3")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x973CAC", Offset = "0x973CAC")]
		private sealed class <ActivateFastTravelAbilityAfterDelay>d__25 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001D2F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001D30")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x1700032B")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001E10")]
				[Address(RVA = "0xD3DA80", Offset = "0xD3DA80", VA = "0xD3DA80", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700032C")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001E12")]
				[Address(RVA = "0xD3DAE8", Offset = "0xD3DAE8", VA = "0xD3DAE8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001E0D")]
			[Address(RVA = "0xD3D824", Offset = "0xD3D824", VA = "0xD3D824")]
			[DebuggerHidden]
			public <ActivateFastTravelAbilityAfterDelay>d__25(int <>1__state)
			{
			}

			[Token(Token = "0x6001E0E")]
			[Address(RVA = "0xD3D8BC", Offset = "0xD3D8BC", VA = "0xD3D8BC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001E0F")]
			[Address(RVA = "0xD3D8C0", Offset = "0xD3D8C0", VA = "0xD3D8C0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001E11")]
			[Address(RVA = "0xD3DA88", Offset = "0xD3DA88", VA = "0xD3DA88", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001D1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private readonly int StateNameHash;

		[Token(Token = "0x4001D1F")]
		private const int AnimationLayer = 0;

		[Token(Token = "0x4001D20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		private float GrowthTime;

		[Token(Token = "0x4001D21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private float m_growth;

		[Token(Token = "0x4001D22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Animator m_animator;

		[Token(Token = "0x4001D23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Transform m_shardTransform;

		[Token(Token = "0x4001D24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private AssetReference m_grabbableCrystal;

		[Token(Token = "0x4001D25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private InstrumentResonator resonator;

		[Token(Token = "0x4001D26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private NeatAudioPlayer audioPlayer;

		[Token(Token = "0x4001D27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private NeatAudioCue flowerGrowingSound;

		[Token(Token = "0x4001D28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private NeatAudioCue crystalGemSpawnedSound;

		[Token(Token = "0x4001D29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private bool m_shouldRespawnCrystal;

		[Token(Token = "0x4001D2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x71")]
		private bool m_initialized;

		[Token(Token = "0x4001D2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x72")]
		private bool m_isHarvested;

		[Token(Token = "0x4001D2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private int m_dayHarvested;

		[Token(Token = "0x4001D2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private CrystalFlowerState m_state;

		[Token(Token = "0x4001D2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private SaveObjectBase spawnedShard;

		[Token(Token = "0x6001E03")]
		[Address(RVA = "0xD3CD08", Offset = "0xD3CD08", VA = "0xD3CD08")]
		private void Update()
		{
		}

		[Token(Token = "0x6001E04")]
		[Address(RVA = "0xD3D12C", Offset = "0xD3D12C", VA = "0xD3D12C", Slot = "4")]
		public override ComponentState CreateState()
		{
			return null;
		}

		[Token(Token = "0x6001E05")]
		[Address(RVA = "0xD3D1F8", Offset = "0xD3D1F8", VA = "0xD3D1F8", Slot = "5")]
		public void Initialize()
		{
		}

		[Token(Token = "0x6001E06")]
		[Address(RVA = "0xD3CF38", Offset = "0xD3CF38", VA = "0xD3CF38")]
		private void SpawnShard()
		{
		}

		[Token(Token = "0x6001E07")]
		[Address(RVA = "0xD3D4BC", Offset = "0xD3D4BC", VA = "0xD3D4BC")]
		private void OnShardSpawned(SpawnOperationCallbackData data)
		{
		}

		[Token(Token = "0x6001E08")]
		[Address(RVA = "0xD3D0E0", Offset = "0xD3D0E0", VA = "0xD3D0E0")]
		private void SetAnimationTime()
		{
		}

		[Token(Token = "0x6001E09")]
		[Address(RVA = "0xD3CEA4", Offset = "0xD3CEA4", VA = "0xD3CEA4")]
		private void UpdateGrowthAnimation()
		{
		}

		[Token(Token = "0x6001E0A")]
		[Address(RVA = "0xD3D6B4", Offset = "0xD3D6B4", VA = "0xD3D6B4")]
		public void OnShardGrabbed(Grabbable grabbable)
		{
		}

		[Token(Token = "0x6001E0B")]
		[Address(RVA = "0xD3D45C", Offset = "0xD3D45C", VA = "0xD3D45C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x991688", Offset = "0x991688")]
		private IEnumerator ActivateFastTravelAbilityAfterDelay()
		{
			return null;
		}

		[Token(Token = "0x6001E0C")]
		[Address(RVA = "0xD3D850", Offset = "0xD3D850", VA = "0xD3D850")]
		public CrystalFlower()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20004E4")]
	public class CrystalFlowerState : ComponentState
	{
		[Token(Token = "0x4001D31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool IsHarvested;

		[Token(Token = "0x4001D32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float Growth;

		[Token(Token = "0x4001D33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int DayHarvested;

		[Token(Token = "0x6001E13")]
		[Address(RVA = "0xD3D1A8", Offset = "0xD3D1A8", VA = "0xD3D1A8")]
		public CrystalFlowerState(bool isHarvested, float growth, int dayHarvested)
		{
		}
	}
	[Token(Token = "0x20004E5")]
	public class GodFlower : SaveableComponent, IInitializable
	{
		[Token(Token = "0x20004E6")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x973CBC", Offset = "0x973CBC")]
		private sealed class <AnimateRewardAppearing>d__16 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001D3E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001D3F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001D40")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Grabbable grabbable;

			[Token(Token = "0x4001D41")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public GodFlower <>4__this;

			[Token(Token = "0x4001D42")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private Transform <rewardTransform>5__2;

			[Token(Token = "0x4001D43")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private float <finalScale>5__3;

			[Token(Token = "0x4001D44")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private float <initialScale>5__4;

			[Token(Token = "0x4001D45")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private float <duration>5__5;

			[Token(Token = "0x4001D46")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			private float <timeElapsed>5__6;

			[Token(Token = "0x4001D47")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private Vector3 <dir>5__7;

			[Token(Token = "0x4001D48")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
			private float <progress>5__8;

			[Token(Token = "0x4001D49")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			private float <currTime>5__9;

			[Token(Token = "0x4001D4A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
			private float <startPosY>5__10;

			[Token(Token = "0x4001D4B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			private float <startRotY>5__11;

			[Token(Token = "0x1700032D")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001E20")]
				[Address(RVA = "0xD3EB88", Offset = "0xD3EB88", VA = "0xD3EB88", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700032E")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001E22")]
				[Address(RVA = "0xD3EBF0", Offset = "0xD3EBF0", VA = "0xD3EBF0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001E1D")]
			[Address(RVA = "0xD3E328", Offset = "0xD3E328", VA = "0xD3E328")]
			[DebuggerHidden]
			public <AnimateRewardAppearing>d__16(int <>1__state)
			{
			}

			[Token(Token = "0x6001E1E")]
			[Address(RVA = "0xD3E4A8", Offset = "0xD3E4A8", VA = "0xD3E4A8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001E1F")]
			[Address(RVA = "0xD3E4AC", Offset = "0xD3E4AC", VA = "0xD3E4AC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001E21")]
			[Address(RVA = "0xD3EB90", Offset = "0xD3EB90", VA = "0xD3EB90", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001D34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Transform rewardSpawnTransform;

		[Token(Token = "0x4001D35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Transform rewardTargetTransform;

		[Token(Token = "0x4001D36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private ParticleSystem rewardSpawnEffect;

		[Token(Token = "0x4001D37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private AssetReference rewardPrefab;

		[Token(Token = "0x4001D38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private float rewardScale;

		[Token(Token = "0x4001D39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x97EF04", Offset = "0x97EF04")]
		[SerializeField]
		private Collider teleportBlocker;

		[Token(Token = "0x4001D3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private SendMilestoneEvent triggerMilestone;

		[Token(Token = "0x4001D3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private NeatAudioPlayer rewardSoundPlayer;

		[Token(Token = "0x4001D3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private bool isHarvested;

		[Token(Token = "0x4001D3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private DateTime lastTimeFlowerWasHarvested;

		[Token(Token = "0x6001E14")]
		[Address(RVA = "0xD3DAF0", Offset = "0xD3DAF0", VA = "0xD3DAF0", Slot = "5")]
		public void Initialize()
		{
		}

		[Token(Token = "0x6001E15")]
		[Address(RVA = "0xD3DE50", Offset = "0xD3DE50", VA = "0xD3DE50")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001E16")]
		[Address(RVA = "0xD3DE58", Offset = "0xD3DE58", VA = "0xD3DE58")]
		public void TriggerFlower()
		{
		}

		[Token(Token = "0x6001E17")]
		[Address(RVA = "0xD3DCA8", Offset = "0xD3DCA8", VA = "0xD3DCA8")]
		private void SpawnReward()
		{
		}

		[Token(Token = "0x6001E18")]
		[Address(RVA = "0xD3DF04", Offset = "0xD3DF04", VA = "0xD3DF04")]
		private void OnRewardSpawned(SpawnOperationCallbackData data)
		{
		}

		[Token(Token = "0x6001E19")]
		[Address(RVA = "0xD3E1BC", Offset = "0xD3E1BC", VA = "0xD3E1BC")]
		private void OnRewardGrabbed(Grabbable grabbable)
		{
		}

		[Token(Token = "0x6001E1A")]
		[Address(RVA = "0xD3E124", Offset = "0xD3E124", VA = "0xD3E124")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x99173C", Offset = "0x99173C")]
		private IEnumerator AnimateRewardAppearing(Grabbable grabbable)
		{
			return null;
		}

		[Token(Token = "0x6001E1B")]
		[Address(RVA = "0xD3E354", Offset = "0xD3E354", VA = "0xD3E354", Slot = "4")]
		public override ComponentState CreateState()
		{
			return null;
		}

		[Token(Token = "0x6001E1C")]
		[Address(RVA = "0xD3E428", Offset = "0xD3E428", VA = "0xD3E428")]
		public GodFlower()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20004E7")]
	public class GodFlowerState : ComponentState
	{
		[Token(Token = "0x4001D4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool harvested;

		[Token(Token = "0x4001D4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public long lastHarvest;

		[Token(Token = "0x1700032F")]
		public DateTime LastTimeHarvested
		{
			[Token(Token = "0x6001E23")]
			[Address(RVA = "0xD3DC3C", Offset = "0xD3DC3C", VA = "0xD3DC3C")]
			get
			{
				return default(DateTime);
			}
		}

		[Token(Token = "0x6001E24")]
		[Address(RVA = "0xD3E3DC", Offset = "0xD3E3DC", VA = "0xD3E3DC")]
		public GodFlowerState(bool harvested, DateTime lastTimeHarvested)
		{
		}
	}
}
namespace NeatCorp.Environment.OceanContent
{
	[Token(Token = "0x20004E8")]
	public class FishingSpotReward : OceanContentRewardWithId
	{
		[Token(Token = "0x20004E9")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x973CCC", Offset = "0x973CCC")]
		private sealed class <DespawnFallback>d__16 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001D59")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001D5A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001D5B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float waitSeconds;

			[Token(Token = "0x4001D5C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public FishingSpotReward <>4__this;

			[Token(Token = "0x17000330")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001E38")]
				[Address(RVA = "0xC8E520", Offset = "0xC8E520", VA = "0xC8E520", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000331")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001E3A")]
				[Address(RVA = "0xC8E588", Offset = "0xC8E588", VA = "0xC8E588", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001E35")]
			[Address(RVA = "0xC8E194", Offset = "0xC8E194", VA = "0xC8E194")]
			[DebuggerHidden]
			public <DespawnFallback>d__16(int <>1__state)
			{
			}

			[Token(Token = "0x6001E36")]
			[Address(RVA = "0xC8E43C", Offset = "0xC8E43C", VA = "0xC8E43C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001E37")]
			[Address(RVA = "0xC8E440", Offset = "0xC8E440", VA = "0xC8E440", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001E39")]
			[Address(RVA = "0xC8E528", Offset = "0xC8E528", VA = "0xC8E528", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001D4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly int m_buoySinkStateId;

		[Token(Token = "0x4001D4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private static readonly int m_buoySinkTriggerParamId;

		[Token(Token = "0x4001D50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private FishRegion m_fishRegion;

		[Token(Token = "0x4001D51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Animator m_buoyAnimation;

		[Token(Token = "0x4001D52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private ParticleSystem m_buoySplashParticleSystem;

		[Token(Token = "0x4001D53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private ParticleSystem m_oceanBubblesParticleSystem;

		[Token(Token = "0x4001D54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x97EFB0", Offset = "0x97EFB0")]
		private NeatAudioPlayer m_longRangeAudioPlayer;

		[Token(Token = "0x4001D55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private NeatAudioPlayer m_loopAudioPlayer;

		[Token(Token = "0x4001D56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private NeatAudioCue m_spawnAudioCue;

		[Token(Token = "0x4001D57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private NeatAudioCue m_despawnAudioCue;

		[Token(Token = "0x4001D58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Coroutine m_despawnFallbackCoroutine;

		[Token(Token = "0x6001E25")]
		[Address(RVA = "0xC8D514", Offset = "0xC8D514", VA = "0xC8D514", Slot = "6")]
		public override void Spawn()
		{
		}

		[Token(Token = "0x6001E26")]
		[Address(RVA = "0xC8DC10", Offset = "0xC8DC10", VA = "0xC8DC10", Slot = "7")]
		public override void Despawn()
		{
		}

		[Token(Token = "0x6001E27")]
		[Address(RVA = "0xC8E010", Offset = "0xC8E010", VA = "0xC8E010", Slot = "8")]
		public override void Reset()
		{
		}

		[Token(Token = "0x6001E28")]
		[Address(RVA = "0xC8D8E8", Offset = "0xC8D8E8", VA = "0xC8D8E8")]
		public void SetFishRegionItems(AssetReference[] rewardItemReferences)
		{
		}

		[Token(Token = "0x6001E29")]
		[Address(RVA = "0xC8D7AC", Offset = "0xC8D7AC", VA = "0xC8D7AC")]
		private void ResetAllEvents()
		{
		}

		[Token(Token = "0x6001E2A")]
		[Address(RVA = "0xC8E108", Offset = "0xC8E108", VA = "0xC8E108")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9917F0", Offset = "0x9917F0")]
		private IEnumerator DespawnFallback(float waitSeconds)
		{
			return null;
		}

		[Token(Token = "0x6001E2B")]
		[Address(RVA = "0xC8DED0", Offset = "0xC8DED0", VA = "0xC8DED0")]
		private void StartDespawnFallbackCoroutine()
		{
		}

		[Token(Token = "0x6001E2C")]
		[Address(RVA = "0xC8DAFC", Offset = "0xC8DAFC", VA = "0xC8DAFC")]
		private void PlaySpawnAndLoopAudio()
		{
		}

		[Token(Token = "0x6001E2D")]
		[Address(RVA = "0xC8DDA8", Offset = "0xC8DDA8", VA = "0xC8DDA8")]
		private void PlayDespawnAudio()
		{
		}

		[Token(Token = "0x6001E2E")]
		[Address(RVA = "0xC8E1C0", Offset = "0xC8E1C0", VA = "0xC8E1C0")]
		private void StopAllSounds()
		{
		}

		[Token(Token = "0x6001E2F")]
		[Address(RVA = "0xC8E2C8", Offset = "0xC8E2C8", VA = "0xC8E2C8")]
		private void OnFishSpawned()
		{
		}

		[Token(Token = "0x6001E30")]
		[Address(RVA = "0xC8DF2C", Offset = "0xC8DF2C", VA = "0xC8DF2C")]
		private void OnReadyForDespawn()
		{
		}

		[Token(Token = "0x6001E31")]
		[Address(RVA = "0xC8E300", Offset = "0xC8E300", VA = "0xC8E300")]
		private void OnAnimationStateExit(OnAnimationStateExitEvent e)
		{
		}

		[Token(Token = "0x6001E32")]
		[Address(RVA = "0xC8DA18", Offset = "0xC8DA18", VA = "0xC8DA18")]
		private void SetFishingRegionEnabled(bool enabled)
		{
		}

		[Token(Token = "0x6001E33")]
		[Address(RVA = "0xC8E3B0", Offset = "0xC8E3B0", VA = "0xC8E3B0")]
		public FishingSpotReward()
		{
		}
	}
	[Token(Token = "0x20004EA")]
	public class ManateeCowFollowEvent : GameEvent
	{
		[Token(Token = "0x4001D5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool CanFollow;

		[Token(Token = "0x6001E3B")]
		[Address(RVA = "0xC8E590", Offset = "0xC8E590", VA = "0xC8E590")]
		public ManateeCowFollowEvent(bool canFollow)
		{
		}
	}
	[Token(Token = "0x20004EB")]
	public class ManateeCowFollowerUpdater : MonoBehaviour
	{
		[Token(Token = "0x20004EC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x973CDC", Offset = "0x973CDC")]
		private sealed class <CleanUpAfterDuration>d__7 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001D62")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001D63")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001D64")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ManateeCowFollowerUpdater <>4__this;

			[Token(Token = "0x4001D65")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private int <tries>5__2;

			[Token(Token = "0x17000332")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001E44")]
				[Address(RVA = "0xC8EAA8", Offset = "0xC8EAA8", VA = "0xC8EAA8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000333")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001E46")]
				[Address(RVA = "0xC8EB10", Offset = "0xC8EB10", VA = "0xC8EB10", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001E41")]
			[Address(RVA = "0xC8E8F4", Offset = "0xC8E8F4", VA = "0xC8E8F4")]
			[DebuggerHidden]
			public <CleanUpAfterDuration>d__7(int <>1__state)
			{
			}

			[Token(Token = "0x6001E42")]
			[Address(RVA = "0xC8E998", Offset = "0xC8E998", VA = "0xC8E998", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001E43")]
			[Address(RVA = "0xC8E99C", Offset = "0xC8E99C", VA = "0xC8E99C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001E45")]
			[Address(RVA = "0xC8EAB0", Offset = "0xC8EAB0", VA = "0xC8EAB0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001D5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Boat m_boat;

		[Token(Token = "0x4001D5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private ManateeCowFollowers m_followers;

		[Token(Token = "0x4001D60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Coroutine m_cleanupRoutine;

		[Token(Token = "0x4001D61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private YieldInstruction m_waitForTwoSeconds;

		[Token(Token = "0x6001E3C")]
		[Address(RVA = "0xC8E5C0", Offset = "0xC8E5C0", VA = "0xC8E5C0")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001E3D")]
		[Address(RVA = "0xC8E5F0", Offset = "0xC8E5F0", VA = "0xC8E5F0")]
		private void Update()
		{
		}

		[Token(Token = "0x6001E3E")]
		[Address(RVA = "0xC8E820", Offset = "0xC8E820", VA = "0xC8E820")]
		public void StartCleanup()
		{
		}

		[Token(Token = "0x6001E3F")]
		[Address(RVA = "0xC8E878", Offset = "0xC8E878", VA = "0xC8E878")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9918A4", Offset = "0x9918A4")]
		private IEnumerator CleanUpAfterDuration()
		{
			return null;
		}

		[Token(Token = "0x6001E40")]
		[Address(RVA = "0xC8E920", Offset = "0xC8E920", VA = "0xC8E920")]
		public ManateeCowFollowerUpdater()
		{
		}
	}
	[Token(Token = "0x20004ED")]
	public class ManateeCowFollowers : MonoBehaviour
	{
		[Token(Token = "0x20004EE")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x973CEC", Offset = "0x973CEC")]
		private sealed class <StopAfterDuration>d__22 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001D76")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001D77")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001D78")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public int diff;

			[Token(Token = "0x4001D79")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public ManateeCowFollowers <>4__this;

			[Token(Token = "0x17000334")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001E56")]
				[Address(RVA = "0xC8F260", Offset = "0xC8F260", VA = "0xC8F260", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000335")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001E58")]
				[Address(RVA = "0xC8F2C8", Offset = "0xC8F2C8", VA = "0xC8F2C8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001E53")]
			[Address(RVA = "0xC8F0C8", Offset = "0xC8F0C8", VA = "0xC8F0C8")]
			[DebuggerHidden]
			public <StopAfterDuration>d__22(int <>1__state)
			{
			}

			[Token(Token = "0x6001E54")]
			[Address(RVA = "0xC8F1A0", Offset = "0xC8F1A0", VA = "0xC8F1A0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001E55")]
			[Address(RVA = "0xC8F1A4", Offset = "0xC8F1A4", VA = "0xC8F1A4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001E57")]
			[Address(RVA = "0xC8F268", Offset = "0xC8F268", VA = "0xC8F268", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001D66")]
		private const float DefaultMinFollowChance = 0.1f;

		[Token(Token = "0x4001D67")]
		private const float DefaultMaxFollowChance = 0.9f;

		[Token(Token = "0x4001D68")]
		private const float MaxFollowWaitDuration = 2880f;

		[Token(Token = "0x4001D69")]
		private const float DefaultMinFollowDuration = 12f;

		[Token(Token = "0x4001D6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static int sm_followParam;

		[Token(Token = "0x4001D6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private static int sm_entryStateParam;

		[Token(Token = "0x4001D6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject m_manateeContainer;

		[Token(Token = "0x4001D6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Animator m_animator;

		[Token(Token = "0x4001D6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x97F06C", Offset = "0x97F06C")]
		private float m_minChanceToFollow;

		[Token(Token = "0x4001D6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x97F0AC", Offset = "0x97F0AC")]
		private float m_maxChanceToFollow;

		[Token(Token = "0x4001D70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x97F0EC", Offset = "0x97F0EC")]
		private float m_minFollowDuration;

		[Token(Token = "0x4001D71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private ManateeCowFollowerUpdater m_updater;

		[Token(Token = "0x4001D72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float m_currentFollowChance;

		[Token(Token = "0x4001D73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private int m_lastFollowTimeStamp;

		[Token(Token = "0x4001D74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private bool m_isFollowing;

		[Token(Token = "0x4001D75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Coroutine m_stopAfterDurationRoutine;

		[Token(Token = "0x6001E47")]
		[Address(RVA = "0xC8EB18", Offset = "0xC8EB18", VA = "0xC8EB18")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001E48")]
		[Address(RVA = "0xC8EC24", Offset = "0xC8EC24", VA = "0xC8EC24")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001E49")]
		[Address(RVA = "0xC8ED30", Offset = "0xC8ED30", VA = "0xC8ED30")]
		private void OnManateeCowFollowEvent(ManateeCowFollowEvent e)
		{
		}

		[Token(Token = "0x6001E4A")]
		[Address(RVA = "0xC8ED50", Offset = "0xC8ED50", VA = "0xC8ED50")]
		private void TryStartFollowing()
		{
		}

		[Token(Token = "0x6001E4B")]
		[Address(RVA = "0xC8EE98", Offset = "0xC8EE98", VA = "0xC8EE98")]
		private void StopFollowing()
		{
		}

		[Token(Token = "0x6001E4C")]
		[Address(RVA = "0xC8E76C", Offset = "0xC8E76C", VA = "0xC8E76C")]
		public void SetStopFollowParam()
		{
		}

		[Token(Token = "0x6001E4D")]
		[Address(RVA = "0xC8F03C", Offset = "0xC8F03C", VA = "0xC8F03C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x991958", Offset = "0x991958")]
		private IEnumerator StopAfterDuration(int diff)
		{
			return null;
		}

		[Token(Token = "0x6001E4E")]
		[Address(RVA = "0xC8EF8C", Offset = "0xC8EF8C", VA = "0xC8EF8C")]
		private void UpdateFollowChance(int minuteTimestamp)
		{
		}

		[Token(Token = "0x6001E4F")]
		[Address(RVA = "0xC8F0F4", Offset = "0xC8F0F4", VA = "0xC8F0F4")]
		private void OnManateeCowStopFollow(OnAnimationStateExitEvent e)
		{
		}

		[Token(Token = "0x6001E50")]
		[Address(RVA = "0xC8EA64", Offset = "0xC8EA64", VA = "0xC8EA64")]
		public void StopAnimatorAndSetInactive()
		{
		}

		[Token(Token = "0x6001E51")]
		[Address(RVA = "0xC8F0F8", Offset = "0xC8F0F8", VA = "0xC8F0F8")]
		public ManateeCowFollowers()
		{
		}
	}
	[Token(Token = "0x20004EF")]
	public class OceanContentManager : SaveableComponent, IInitializable
	{
		[Token(Token = "0x20004F0")]
		private delegate bool TryGetSpawnPointCallback(out OceanContentSpawnPoint spawnPoint);

		[Token(Token = "0x20004F1")]
		private struct SpawnedRewardRecord
		{
			[Token(Token = "0x4001D95")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public string RewardId;

			[Token(Token = "0x4001D96")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public string SpawnId;

			[Token(Token = "0x6001E93")]
			[Address(RVA = "0xA45960", Offset = "0xA45960", VA = "0xA45960")]
			public SpawnedRewardRecord(string rewardId, string spawnId)
			{
			}

			[Token(Token = "0x6001E94")]
			[Address(RVA = "0xA45994", Offset = "0xA45994", VA = "0xA45994")]
			public bool IsValid()
			{
				return default(bool);
			}
		}

		[Serializable]
		[Token(Token = "0x20004F2")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x973CFC", Offset = "0x973CFC")]
		private sealed class <>c
		{
			[Token(Token = "0x4001D97")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4001D98")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<bool> <>9__44_0;

			[Token(Token = "0x4001D99")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Func<bool> <>9__44_1;

			[Token(Token = "0x6001E96")]
			[Address(RVA = "0xD36E9C", Offset = "0xD36E9C", VA = "0xD36E9C")]
			public <>c()
			{
			}

			[Token(Token = "0x6001E97")]
			[Address(RVA = "0xD36EA4", Offset = "0xD36EA4", VA = "0xD36EA4")]
			internal bool <OnSpawnPointExit>b__44_0()
			{
				return default(bool);
			}

			[Token(Token = "0x6001E98")]
			[Address(RVA = "0xD36EAC", Offset = "0xD36EAC", VA = "0xD36EAC")]
			internal bool <OnSpawnPointExit>b__44_1()
			{
				return default(bool);
			}
		}

		[Token(Token = "0x20004F3")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x973D0C", Offset = "0x973D0C")]
		private sealed class <PlayWhaleRandomWhaleSong>d__51 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001D9A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001D9B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001D9C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public OceanContentManager <>4__this;

			[Token(Token = "0x17000336")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001E9C")]
				[Address(RVA = "0xD3718C", Offset = "0xD3718C", VA = "0xD3718C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000337")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001E9E")]
				[Address(RVA = "0xD371F4", Offset = "0xD371F4", VA = "0xD371F4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001E99")]
			[Address(RVA = "0xD36F48", Offset = "0xD36F48", VA = "0xD36F48")]
			[DebuggerHidden]
			public <PlayWhaleRandomWhaleSong>d__51(int <>1__state)
			{
			}

			[Token(Token = "0x6001E9A")]
			[Address(RVA = "0xD36F74", Offset = "0xD36F74", VA = "0xD36F74", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001E9B")]
			[Address(RVA = "0xD36F78", Offset = "0xD36F78", VA = "0xD36F78", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001E9D")]
			[Address(RVA = "0xD37194", Offset = "0xD37194", VA = "0xD37194", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20004F4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x973D1C", Offset = "0x973D1C")]
		private sealed class <WaitAndSubscribeToOnNewDay>d__53 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001D9D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001D9E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001D9F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public OceanContentManager <>4__this;

			[Token(Token = "0x17000338")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001EA2")]
				[Address(RVA = "0xD3755C", Offset = "0xD3755C", VA = "0xD3755C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000339")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001EA4")]
				[Address(RVA = "0xD375C4", Offset = "0xD375C4", VA = "0xD375C4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001E9F")]
			[Address(RVA = "0xD37390", Offset = "0xD37390", VA = "0xD37390")]
			[DebuggerHidden]
			public <WaitAndSubscribeToOnNewDay>d__53(int <>1__state)
			{
			}

			[Token(Token = "0x6001EA0")]
			[Address(RVA = "0xD373BC", Offset = "0xD373BC", VA = "0xD373BC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001EA1")]
			[Address(RVA = "0xD373C0", Offset = "0xD373C0", VA = "0xD373C0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001EA3")]
			[Address(RVA = "0xD37564", Offset = "0xD37564", VA = "0xD37564", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20004F5")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x973D2C", Offset = "0x973D2C")]
		private sealed class <StartWhaleApperanceAfterInitialize>d__57 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001DA0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001DA1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001DA2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public OceanContentManager <>4__this;

			[Token(Token = "0x1700033A")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001EA8")]
				[Address(RVA = "0xD37320", Offset = "0xD37320", VA = "0xD37320", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700033B")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001EAA")]
				[Address(RVA = "0xD37388", Offset = "0xD37388", VA = "0xD37388", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001EA5")]
			[Address(RVA = "0xD371FC", Offset = "0xD371FC", VA = "0xD371FC")]
			[DebuggerHidden]
			public <StartWhaleApperanceAfterInitialize>d__57(int <>1__state)
			{
			}

			[Token(Token = "0x6001EA6")]
			[Address(RVA = "0xD37228", Offset = "0xD37228", VA = "0xD37228", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001EA7")]
			[Address(RVA = "0xD3722C", Offset = "0xD3722C", VA = "0xD3722C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001EA9")]
			[Address(RVA = "0xD37328", Offset = "0xD37328", VA = "0xD37328", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20004F6")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x973D3C", Offset = "0x973D3C")]
		private sealed class <>c__DisplayClass60_0
		{
			[Token(Token = "0x4001DA3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public bool shouldEnable;

			[Token(Token = "0x6001EAB")]
			[Address(RVA = "0xD36EB4", Offset = "0xD36EB4", VA = "0xD36EB4")]
			public <>c__DisplayClass60_0()
			{
			}

			[Token(Token = "0x6001EAC")]
			[Address(RVA = "0xD36EBC", Offset = "0xD36EBC", VA = "0xD36EBC")]
			internal bool <ReplaceAllInvalidClaimedSpawnPoints>b__0()
			{
				return default(bool);
			}
		}

		[Token(Token = "0x20004F7")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x973D4C", Offset = "0x973D4C")]
		private sealed class <>c__DisplayClass60_1
		{
			[Token(Token = "0x4001DA4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public bool shouldEnable;

			[Token(Token = "0x6001EAD")]
			[Address(RVA = "0xD36EC4", Offset = "0xD36EC4", VA = "0xD36EC4")]
			public <>c__DisplayClass60_1()
			{
			}

			[Token(Token = "0x6001EAE")]
			[Address(RVA = "0xD36ECC", Offset = "0xD36ECC", VA = "0xD36ECC")]
			internal bool <ReplaceAllInvalidClaimedSpawnPoints>b__1()
			{
				return default(bool);
			}
		}

		[Token(Token = "0x20004F8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x973D5C", Offset = "0x973D5C")]
		private sealed class <>c__DisplayClass62_0
		{
			[Token(Token = "0x4001DA5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public OceanContentSpawnPoint whaleSpawnPoint;

			[Token(Token = "0x6001EAF")]
			[Address(RVA = "0xD36ED4", Offset = "0xD36ED4", VA = "0xD36ED4")]
			public <>c__DisplayClass62_0()
			{
			}

			[Token(Token = "0x6001EB0")]
			[Address(RVA = "0xD36EDC", Offset = "0xD36EDC", VA = "0xD36EDC")]
			internal bool <ReShuffleAllOveragedSpawnPoints>b__0()
			{
				return default(bool);
			}
		}

		[Token(Token = "0x20004F9")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x973D6C", Offset = "0x973D6C")]
		private sealed class <>c__DisplayClass62_1
		{
			[Token(Token = "0x4001DA6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public OceanContentSpawnPoint rewardSpawnPoint;

			[Token(Token = "0x6001EB1")]
			[Address(RVA = "0xD36EF8", Offset = "0xD36EF8", VA = "0xD36EF8")]
			public <>c__DisplayClass62_1()
			{
			}

			[Token(Token = "0x6001EB2")]
			[Address(RVA = "0xD36F00", Offset = "0xD36F00", VA = "0xD36F00")]
			internal bool <ReShuffleAllOveragedSpawnPoints>b__1()
			{
				return default(bool);
			}
		}

		[Token(Token = "0x20004FA")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x973D7C", Offset = "0x973D7C")]
		private sealed class <>c__DisplayClass75_0
		{
			[Token(Token = "0x4001DA7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public OceanContentRewardWithId reward;

			[Token(Token = "0x6001EB3")]
			[Address(RVA = "0xD36F1C", Offset = "0xD36F1C", VA = "0xD36F1C")]
			public <>c__DisplayClass75_0()
			{
			}

			[Token(Token = "0x6001EB4")]
			[Address(RVA = "0xD36F24", Offset = "0xD36F24", VA = "0xD36F24")]
			internal bool <RemoveRewardFromSpawnedRecord>b__0(SpawnedRewardRecord record)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4001D7A")]
		private const float WhaleSongChance = 0.35f;

		[Token(Token = "0x4001D7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Coroutine m_waitForTODMInstanceRoutine;

		[Token(Token = "0x4001D7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Coroutine m_waitForWhaleInstaneRoutine;

		[Token(Token = "0x4001D7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private WaitForSeconds m_waitForSevenSeconds;

		[Token(Token = "0x4001D7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x97F13C", Offset = "0x97F13C")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x97F13C", Offset = "0x97F13C")]
		private int DaysFromWhaleRelease;

		[Token(Token = "0x4001D7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[SerializeField]
		private int m_nextWhaleAppearanceDay;

		[Token(Token = "0x4001D80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private NeatAudioPlayer m_whaleSongPlayer;

		[Token(Token = "0x4001D81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private bool m_hasSpawnedWhale;

		[Token(Token = "0x4001D82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Whale Whale;

		[Token(Token = "0x4001D83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Coroutine m_whaleSongRoutine;

		[Token(Token = "0x4001D84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private bool m_shouldPlayWhaleSong;

		[Token(Token = "0x4001D85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x97F1C0", Offset = "0x97F1C0")]
		private RewardData m_raftRewardData;

		[Token(Token = "0x4001D86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private RewardData m_fishingSpotRewardData;

		[Token(Token = "0x4001D87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x97F21C", Offset = "0x97F21C")]
		private int m_maxClaimedRewardsPerDay;

		[Token(Token = "0x4001D88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		[NeatCorp.Attributes.ReadOnly]
		[SerializeField]
		private int m_remainingRewardSpawnsToday;

		[Token(Token = "0x4001D89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private SpawnedRewardRecord[] m_spawnedRewards;

		[Token(Token = "0x4001D8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static OceanContentRewardPool RewardPool;

		[Token(Token = "0x4001D8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x97F294", Offset = "0x97F294")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x97F294", Offset = "0x97F294")]
		private int m_maxSimultaneousWhaleSpawns;

		[Token(Token = "0x4001D8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x97F2F8", Offset = "0x97F2F8")]
		[SerializeField]
		private int m_maxSimultaneousRewardSpawns;

		[Token(Token = "0x4001D8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x97F338", Offset = "0x97F338")]
		[SerializeField]
		private int m_maxActiveSpawnDayAge;

		[Token(Token = "0x4001D8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private string[] m_activeWhaleSpawnPointIds;

		[Token(Token = "0x4001D8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private string[] m_claimedRewardSpawnPointIds;

		[Token(Token = "0x4001D90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[SerializeField]
		[BeginReadOnlyGroup]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x97F378", Offset = "0x97F378")]
		private OceanContentSpawnPoint[] m_allSpawnPointsCache;

		[Token(Token = "0x4001D91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[BeginReadOnlyGroup]
		[SerializeField]
		private OceanContentSpawnPoint[] m_allWhaleSpawnPointsCache;

		[Token(Token = "0x4001D92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[BeginReadOnlyGroup]
		[SerializeField]
		private OceanContentSpawnPoint[] m_allRewardSpawnPointsCache;

		[Token(Token = "0x4001D93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[EndReadOnlyGroup]
		private string[] m_allSpawnPointIdsCache;

		[Token(Token = "0x4001D94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private OceanContentSpawnPoint m_currentWhaleSpawnPoint;

		[Token(Token = "0x6001E59")]
		[Address(RVA = "0xC8F2D0", Offset = "0xC8F2D0", VA = "0xC8F2D0")]
		private bool shouldShowWhale()
		{
			return default(bool);
		}

		[Token(Token = "0x6001E5A")]
		[Address(RVA = "0xC8F368", Offset = "0xC8F368", VA = "0xC8F368")]
		private bool shouldEnableNextRewardSpawn()
		{
			return default(bool);
		}

		[Token(Token = "0x6001E5B")]
		[Address(RVA = "0xC8F4A4", Offset = "0xC8F4A4", VA = "0xC8F4A4")]
		public OceanContentSpawnPoint[] GetAllClaimedSpawnPoints()
		{
			return null;
		}

		[Token(Token = "0x6001E5C")]
		[Address(RVA = "0xC8F594", Offset = "0xC8F594", VA = "0xC8F594")]
		public OceanContentSpawnPoint[] GetAllWhaleSpawnPoints()
		{
			return null;
		}

		[Token(Token = "0x6001E5D")]
		[Address(RVA = "0xC8F690", Offset = "0xC8F690", VA = "0xC8F690")]
		public OceanContentSpawnPoint[] GetAllActiveWhaleSpawnPoints()
		{
			return null;
		}

		[Token(Token = "0x6001E5E")]
		[Address(RVA = "0xC8F794", Offset = "0xC8F794", VA = "0xC8F794")]
		public OceanContentSpawnPoint[] GetAllRewardSpawnPoints()
		{
			return null;
		}

		[Token(Token = "0x6001E5F")]
		[Address(RVA = "0xC8F3A0", Offset = "0xC8F3A0", VA = "0xC8F3A0")]
		public OceanContentSpawnPoint[] GetAllClaimedAndEnabledRewardSpawnPoints()
		{
			return null;
		}

		[Token(Token = "0x6001E60")]
		[Address(RVA = "0xC8F890", Offset = "0xC8F890", VA = "0xC8F890")]
		public OceanContentSpawnPoint[] GetAllActiveSpawnPoints()
		{
			return null;
		}

		[Token(Token = "0x6001E61")]
		[Address(RVA = "0xC8F994", Offset = "0xC8F994", VA = "0xC8F994", Slot = "4")]
		public override ComponentState CreateState()
		{
			return null;
		}

		[Token(Token = "0x6001E62")]
		[Address(RVA = "0xC8FC84", Offset = "0xC8FC84", VA = "0xC8FC84")]
		public static void TrySetWhale(Whale whale)
		{
		}

		[Token(Token = "0x6001E63")]
		[Address(RVA = "0xC8FCDC", Offset = "0xC8FCDC", VA = "0xC8FCDC")]
		public static void SetRewardPool(OceanContentRewardPool pool)
		{
		}

		[Token(Token = "0x6001E64")]
		[Address(RVA = "0xC8FD34", Offset = "0xC8FD34", VA = "0xC8FD34", Slot = "5")]
		public void Initialize()
		{
		}

		[Token(Token = "0x6001E65")]
		[Address(RVA = "0xC9046C", Offset = "0xC9046C", VA = "0xC9046C")]
		private void TryStartWhaleApperanceFromInitialize(OceanContentSpawnPoint spawnPoint)
		{
		}

		[Token(Token = "0x6001E66")]
		[Address(RVA = "0xC90F60", Offset = "0xC90F60", VA = "0xC90F60")]
		public void OnSpawnPointEnter(OceanContentSpawnPoint spawnPoint)
		{
		}

		[Token(Token = "0x6001E67")]
		[Address(RVA = "0xC916FC", Offset = "0xC916FC", VA = "0xC916FC")]
		public void OnSpawnPointExit(OceanContentSpawnPoint spawnPoint)
		{
		}

		[Token(Token = "0x6001E68")]
		[Address(RVA = "0xC91EB4", Offset = "0xC91EB4", VA = "0xC91EB4")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001E69")]
		[Address(RVA = "0xC92140", Offset = "0xC92140", VA = "0xC92140")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001E6A")]
		[Address(RVA = "0xC923E8", Offset = "0xC923E8", VA = "0xC923E8")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001E6B")]
		[Address(RVA = "0xC92808", Offset = "0xC92808", VA = "0xC92808")]
		private void OnWorldZoneChanged(WorldZone newWorldZone)
		{
		}

		[Token(Token = "0x6001E6C")]
		[Address(RVA = "0xC928CC", Offset = "0xC928CC", VA = "0xC928CC")]
		private void OnNewDay(int dayCount)
		{
		}

		[Token(Token = "0x6001E6D")]
		[Address(RVA = "0xC90AF8", Offset = "0xC90AF8", VA = "0xC90AF8")]
		private void ReEvaluateAllClaimedSpawnPointEnabledStates()
		{
		}

		[Token(Token = "0x6001E6E")]
		[Address(RVA = "0xC92D34", Offset = "0xC92D34", VA = "0xC92D34")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x991A0C", Offset = "0x991A0C")]
		private IEnumerator PlayWhaleRandomWhaleSong()
		{
			return null;
		}

		[Token(Token = "0x6001E6F")]
		[Address(RVA = "0xC92DB0", Offset = "0xC92DB0", VA = "0xC92DB0")]
		private bool TryGetClosestWhaleSpawnPointPos(out Vector3 closestSpawnPos)
		{
			return default(bool);
		}

		[Token(Token = "0x6001E70")]
		[Address(RVA = "0xC9236C", Offset = "0xC9236C", VA = "0xC9236C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x991A70", Offset = "0x991A70")]
		private IEnumerator WaitAndSubscribeToOnNewDay()
		{
			return null;
		}

		[Token(Token = "0x6001E71")]
		[Address(RVA = "0xC9037C", Offset = "0xC9037C", VA = "0xC9037C")]
		private bool TryClaimSpawnPoint(OceanContentSpawnPoint spawnPoint, bool reset = true)
		{
			return default(bool);
		}

		[Token(Token = "0x6001E72")]
		[Address(RVA = "0xC90C34", Offset = "0xC90C34", VA = "0xC90C34")]
		private void PopulateAllAvailableSpawnSlots()
		{
		}

		[Token(Token = "0x6001E73")]
		[Address(RVA = "0xC90EE4", Offset = "0xC90EE4", VA = "0xC90EE4")]
		private void StartWhaleFromWithinSpawnPoint(OceanContentSpawnPoint whaleSpawnPoint)
		{
		}

		[Token(Token = "0x6001E74")]
		[Address(RVA = "0xC9325C", Offset = "0xC9325C", VA = "0xC9325C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x991AD4", Offset = "0x991AD4")]
		private IEnumerator StartWhaleApperanceAfterInitialize()
		{
			return null;
		}

		[Token(Token = "0x6001E75")]
		[Address(RVA = "0xC92CD8", Offset = "0xC92CD8", VA = "0xC92CD8")]
		private void ActivateWhaleSong()
		{
		}

		[Token(Token = "0x6001E76")]
		[Address(RVA = "0xC9090C", Offset = "0xC9090C", VA = "0xC9090C")]
		private void ResetAllUnclaimedSpawnPoints(bool includeCurrentlyTriggereing = false)
		{
		}

		[Token(Token = "0x6001E77")]
		[Address(RVA = "0xC9057C", Offset = "0xC9057C", VA = "0xC9057C")]
		private void ReplaceAllInvalidClaimedSpawnPoints()
		{
		}

		[Token(Token = "0x6001E78")]
		[Address(RVA = "0xC926E4", Offset = "0xC926E4", VA = "0xC926E4")]
		private void ReleaseAllSpawnPoints()
		{
		}

		[Token(Token = "0x6001E79")]
		[Address(RVA = "0xC9298C", Offset = "0xC9298C", VA = "0xC9298C")]
		private void ReShuffleAllOveragedSpawnPoints()
		{
		}

		[Token(Token = "0x6001E7A")]
		[Address(RVA = "0xC92900", Offset = "0xC92900", VA = "0xC92900")]
		private void BumpAllActiveAndEnabledSpawnPointAges()
		{
		}

		[Token(Token = "0x6001E7B")]
		[Address(RVA = "0xC932D8", Offset = "0xC932D8", VA = "0xC932D8")]
		private bool TrySelectRandomSpawnPoint(OceanContentSpawnPoint[] spawnPointList, out OceanContentSpawnPoint spawnPoint)
		{
			return default(bool);
		}

		[Token(Token = "0x6001E7C")]
		[Address(RVA = "0xC9312C", Offset = "0xC9312C", VA = "0xC9312C")]
		private bool TryGetRandomRewardSpawnPoint(out OceanContentSpawnPoint spawnPoint)
		{
			return default(bool);
		}

		[Token(Token = "0x6001E7D")]
		[Address(RVA = "0xC92FFC", Offset = "0xC92FFC", VA = "0xC92FFC")]
		private bool TryGetRandomWhaleSpawnPoint(out OceanContentSpawnPoint spawnPoint)
		{
			return default(bool);
		}

		[Token(Token = "0x6001E7E")]
		[Address(RVA = "0xC91D48", Offset = "0xC91D48", VA = "0xC91D48")]
		private OceanContentSpawnPoint ReleaseAndSelectNewSpawnPoint(OceanContentSpawnPoint oldSpawnPoint, TryGetSpawnPointCallback TryGetSpawnPoint, [Optional] Func<bool> shouldEnable, bool reuseExistingSpawnPointAsFallback = true)
		{
			return null;
		}

		[Token(Token = "0x6001E7F")]
		[Address(RVA = "0xC910A0", Offset = "0xC910A0", VA = "0xC910A0")]
		private void TryShowWhaleAt(OceanContentSpawnPoint spawnPoint, bool facePlayer = false)
		{
		}

		[Token(Token = "0x6001E80")]
		[Address(RVA = "0xC91B28", Offset = "0xC91B28", VA = "0xC91B28")]
		private bool WhaleIsAtSpawnPoint(OceanContentSpawnPoint spawnPoint)
		{
			return default(bool);
		}

		[Token(Token = "0x6001E81")]
		[Address(RVA = "0xC91C94", Offset = "0xC91C94", VA = "0xC91C94")]
		private void TryHideWhale()
		{
		}

		[Token(Token = "0x6001E82")]
		[Address(RVA = "0xC91340", Offset = "0xC91340", VA = "0xC91340")]
		private void TrySpawnRewardAt(OceanContentSpawnPoint spawnPoint)
		{
		}

		[Token(Token = "0x6001E83")]
		[Address(RVA = "0xC93370", Offset = "0xC93370", VA = "0xC93370")]
		private void OnRewardItemSpawned()
		{
		}

		[Token(Token = "0x6001E84")]
		[Address(RVA = "0xC91A20", Offset = "0xC91A20", VA = "0xC91A20")]
		private void TryDespawnRewardAt(OceanContentSpawnPoint spawnPoint)
		{
		}

		[Token(Token = "0x6001E85")]
		[Address(RVA = "0xC9048C", Offset = "0xC9048C", VA = "0xC9048C")]
		private void AddRewardToSpawnedRecord(OceanContentRewardWithId reward, OceanContentSpawnPoint spawnPoint)
		{
		}

		[Token(Token = "0x6001E86")]
		[Address(RVA = "0xC93488", Offset = "0xC93488", VA = "0xC93488")]
		private void RemoveRewardFromSpawnedRecord(OceanContentRewardWithId reward)
		{
		}

		[Token(Token = "0x6001E87")]
		[Address(RVA = "0xC935A4", Offset = "0xC935A4", VA = "0xC935A4")]
		private void OnWhaleReleased(WhaleReleasedEvent e)
		{
		}

		[Token(Token = "0x6001E88")]
		[Address(RVA = "0xC93628", Offset = "0xC93628", VA = "0xC93628")]
		private void TrySetNextWhaleApperanceData(int nextWhaleAppearanceDay)
		{
		}

		[Token(Token = "0x6001E89")]
		[Address(RVA = "0xC936D0", Offset = "0xC936D0", VA = "0xC936D0")]
		private void OnSetNextApperance(NextWhaleApperanceEvent e)
		{
		}

		[Token(Token = "0x6001E8A")]
		[Address(RVA = "0xC902C0", Offset = "0xC902C0", VA = "0xC902C0")]
		public bool TryGetSpawnPointById(string spawnGuid, out OceanContentSpawnPoint spawnPoint)
		{
			return default(bool);
		}

		[Token(Token = "0x6001E8B")]
		[Address(RVA = "0xC93380", Offset = "0xC93380", VA = "0xC93380")]
		private bool TryGetRewardAtSpawnPoint(OceanContentSpawnPoint spawnPoint, out OceanContentRewardWithId reward)
		{
			return default(bool);
		}

		[Token(Token = "0x6001E8C")]
		[Address(RVA = "0xC91014", Offset = "0xC91014", VA = "0xC91014")]
		private bool SpawnPointIdIsActiveWhalePoint(string spawnId)
		{
			return default(bool);
		}

		[Token(Token = "0x6001E8D")]
		[Address(RVA = "0xC912B4", Offset = "0xC912B4", VA = "0xC912B4")]
		private bool SpawnPointIdIsClaimedRewardPoint(string spawnId)
		{
			return default(bool);
		}

		[Token(Token = "0x6001E8E")]
		[Address(RVA = "0xC936F0", Offset = "0xC936F0", VA = "0xC936F0")]
		public OceanContentManager()
		{
		}
	}
	[Token(Token = "0x20004FB")]
	public class OceanContentManagerState : ComponentState
	{
		[Token(Token = "0x4001DA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int NextWhaleAppearanceDay;

		[Token(Token = "0x4001DA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int RemainingRewardSpawnsToday;

		[Token(Token = "0x4001DAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public OceanContentSpawnState[] ActiveSpawnStates;

		[Token(Token = "0x4001DAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public OceanContentRewardState[] ActiveRewardStates;

		[Token(Token = "0x6001EB5")]
		[Address(RVA = "0xD37918", Offset = "0xD37918", VA = "0xD37918")]
		public OceanContentManagerState(int nextWhaleAppearanceDay, int remainingRewardSpawnsToday, [Optional] OceanContentSpawnState[] activeSpawnStates, [Optional] OceanContentRewardState[] activeRewardStates)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20004FC")]
	public struct OceanContentSpawnState
	{
		[Token(Token = "0x4001DAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string SpawnId;

		[Token(Token = "0x4001DAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public bool WasEnabled;

		[Token(Token = "0x4001DAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public int AgeAtSave;

		[Token(Token = "0x4001DAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool HadBeenTriggered;

		[Token(Token = "0x4001DB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		public bool PlayerWasInside;

		[Token(Token = "0x4001DB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12")]
		public bool WasClaimed;

		[Token(Token = "0x6001EB6")]
		[Address(RVA = "0xA45AE8", Offset = "0xA45AE8", VA = "0xA45AE8")]
		public OceanContentSpawnState(string spawnId, bool isEnabled, int currentAge, bool hasBeenTriggered, bool playerIsInside, bool isClaimed = false)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20004FD")]
	public struct OceanContentRewardState
	{
		[Token(Token = "0x4001DB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string RewardId;

		[Token(Token = "0x4001DB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public string SpawnId;

		[Token(Token = "0x4001DB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public OrientedPoint RewardTransformAtSave;

		[Token(Token = "0x4001DB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public AssetReference RewardItemAssetReference;

		[Token(Token = "0x6001EB7")]
		[Address(RVA = "0xA459D8", Offset = "0xA459D8", VA = "0xA459D8")]
		public OceanContentRewardState(string rewardId, string spawnId, Transform currentRewardTransform, AssetReference rewardItemAssetReference)
		{
		}
	}
	[Token(Token = "0x20004FE")]
	public class OceanContentRewardWithId : MonoBehaviour
	{
		[Token(Token = "0x20004FF")]
		public delegate void OnRewardItemSpawnedCallback();

		[Token(Token = "0x4001DB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		[NeatCorp.Attributes.ReadOnly]
		public string RewardId;

		[Token(Token = "0x4001DB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private AssetReference m_rewardItem;

		[Token(Token = "0x4001DB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public OnRewardItemSpawnedCallback OnRewardItemSpawned;

		[Token(Token = "0x1700033C")]
		public AssetReference RewardItem
		{
			[Token(Token = "0x6001EB8")]
			[Address(RVA = "0xD37DBC", Offset = "0xD37DBC", VA = "0xD37DBC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700033D")]
		public bool HasValidId
		{
			[Token(Token = "0x6001EB9")]
			[Address(RVA = "0xD37DC4", Offset = "0xD37DC4", VA = "0xD37DC4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001EBA")]
		[Address(RVA = "0xD37DE8", Offset = "0xD37DE8", VA = "0xD37DE8", Slot = "4")]
		public virtual void SpawnWithItemAt(AssetReference itemRef, OrientedPoint orientedPoint)
		{
		}

		[Token(Token = "0x6001EBB")]
		[Address(RVA = "0xD37E50", Offset = "0xD37E50", VA = "0xD37E50", Slot = "5")]
		public virtual void SpawnAt(OrientedPoint orientedPoint)
		{
		}

		[Token(Token = "0x6001EBC")]
		[Address(RVA = "0xD37EA4", Offset = "0xD37EA4", VA = "0xD37EA4", Slot = "6")]
		public virtual void Spawn()
		{
		}

		[Token(Token = "0x6001EBD")]
		[Address(RVA = "0xD37ECC", Offset = "0xD37ECC", VA = "0xD37ECC", Slot = "7")]
		public virtual void Despawn()
		{
		}

		[Token(Token = "0x6001EBE")]
		[Address(RVA = "0xD37EF4", Offset = "0xD37EF4", VA = "0xD37EF4", Slot = "8")]
		public virtual void Reset()
		{
		}

		[Token(Token = "0x6001EBF")]
		[Address(RVA = "0xD37F40", Offset = "0xD37F40", VA = "0xD37F40")]
		public void UnsetRewardItem()
		{
		}

		[Token(Token = "0x6001EC0")]
		[Address(RVA = "0xD37F4C", Offset = "0xD37F4C", VA = "0xD37F4C", Slot = "9")]
		public virtual void LoadState(OceanContentRewardState state)
		{
		}

		[Token(Token = "0x6001EC1")]
		[Address(RVA = "0xD38068", Offset = "0xD38068", VA = "0xD38068")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001EC2")]
		[Address(RVA = "0xD38074", Offset = "0xD38074", VA = "0xD38074")]
		public OceanContentRewardWithId()
		{
		}
	}
	[Token(Token = "0x2000500")]
	public class OceanContentRewardPool : MonoBehaviour
	{
		[Token(Token = "0x4001DB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		[NeatCorp.Attributes.ReadOnly]
		private RaftReward[] m_raftRewardPool;

		[Token(Token = "0x4001DBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[NeatCorp.Attributes.ReadOnly]
		[SerializeField]
		private FishingSpotReward[] m_fishingSpotRewardPool;

		[Token(Token = "0x4001DBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private OceanContentRewardWithId[] m_allRewardsCache;

		[Token(Token = "0x6001EC7")]
		[Address(RVA = "0xD3797C", Offset = "0xD3797C", VA = "0xD3797C")]
		public OceanContentRewardWithId[] GetAllRewards()
		{
			return null;
		}

		[Token(Token = "0x6001EC8")]
		[Address(RVA = "0xD379D0", Offset = "0xD379D0", VA = "0xD379D0")]
		public bool TryGetRaftReward(out RaftReward raftReward)
		{
			return default(bool);
		}

		[Token(Token = "0x6001EC9")]
		[Address(RVA = "0xD37AC4", Offset = "0xD37AC4", VA = "0xD37AC4")]
		public bool TryGetFishingSpotReward(out FishingSpotReward fishingSpotReward)
		{
			return default(bool);
		}

		[Token(Token = "0x6001ECA")]
		[Address(RVA = "0xD37BB8", Offset = "0xD37BB8", VA = "0xD37BB8")]
		public bool TryGetRewardById(string id, out OceanContentRewardWithId reward)
		{
			return default(bool);
		}

		[Token(Token = "0x6001ECB")]
		[Address(RVA = "0xD37C98", Offset = "0xD37C98", VA = "0xD37C98")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001ECC")]
		[Address(RVA = "0xD37CC4", Offset = "0xD37CC4", VA = "0xD37CC4")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001ECD")]
		[Address(RVA = "0xD37D1C", Offset = "0xD37D1C", VA = "0xD37D1C")]
		public OceanContentRewardPool()
		{
		}
	}
	[Token(Token = "0x2000501")]
	public enum SpawnType
	{
		[Token(Token = "0x4001DBD")]
		FishingReward = 10,
		[Token(Token = "0x4001DBE")]
		RubbleReward = 20,
		[Token(Token = "0x4001DBF")]
		Whale = 30
	}
	[Token(Token = "0x2000502")]
	[Flags]
	public enum SpawnTypeFlag
	{
		[Token(Token = "0x4001DC1")]
		None = 0,
		[Token(Token = "0x4001DC2")]
		Everything = 0x40100400,
		[Token(Token = "0x4001DC3")]
		AllRewards = 0x100400,
		[Token(Token = "0x4001DC4")]
		FishingReward = 0x400,
		[Token(Token = "0x4001DC5")]
		RubbleReward = 0x100000,
		[Token(Token = "0x4001DC6")]
		Whale = 0x40000000
	}
	[Token(Token = "0x2000503")]
	public class OceanContentSpawnPoint : MonoBehaviour
	{
		[Token(Token = "0x2000504")]
		public delegate void OnPlayerEnterCallback(OceanContentSpawnPoint spawnPoint);

		[Token(Token = "0x2000505")]
		public delegate void OnPlayerExitCallback(OceanContentSpawnPoint spawnPoint);

		[Token(Token = "0x4001DC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		[NeatCorp.Attributes.ReadOnly]
		private string m_spawnId;

		[Token(Token = "0x4001DC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		[NeatCorp.Attributes.ReadOnly]
		private int m_age;

		[Token(Token = "0x4001DC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private SpawnTypeFlag m_enabledSpawnTypes;

		[Token(Token = "0x4001DCA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x97F57C", Offset = "0x97F57C")]
		private float m_triggerRadius;

		[Token(Token = "0x4001DCB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x97F5C0", Offset = "0x97F5C0")]
		private float m_despawnDeadzoneRadius;

		[Token(Token = "0x4001DCC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool m_isClaimed;

		[Token(Token = "0x4001DCD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
		private bool m_hasBeenTriggered;

		[Token(Token = "0x4001DCE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		[HideInInspector]
		private SphereCollider m_trigger;

		[Token(Token = "0x4001DCF")]
		private const float m_oceanSurfaceHeight = 0f;

		[Token(Token = "0x4001DD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public OnPlayerEnterCallback OnPlayerEnter;

		[Token(Token = "0x4001DD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public OnPlayerExitCallback OnPlayerExit;

		[Token(Token = "0x4001DD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private bool m_playerIsInside;

		[Token(Token = "0x4001DD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private OrientedPoint m_originalOrientedPoint;

		[Token(Token = "0x4001DD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private bool m_transformWasOverridden;

		[Token(Token = "0x1700033E")]
		public string SpawnId
		{
			[Token(Token = "0x6001ECE")]
			[Address(RVA = "0xD382D4", Offset = "0xD382D4", VA = "0xD382D4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700033F")]
		public int Age
		{
			[Token(Token = "0x6001ECF")]
			[Address(RVA = "0xD382DC", Offset = "0xD382DC", VA = "0xD382DC")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000340")]
		public bool IsClaimed
		{
			[Token(Token = "0x6001ED0")]
			[Address(RVA = "0xD382E4", Offset = "0xD382E4", VA = "0xD382E4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000341")]
		public bool IsClaimedAndEnabled
		{
			[Token(Token = "0x6001ED1")]
			[Address(RVA = "0xD382EC", Offset = "0xD382EC", VA = "0xD382EC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000342")]
		public bool IsAvailable
		{
			[Token(Token = "0x6001ED2")]
			[Address(RVA = "0xD38304", Offset = "0xD38304", VA = "0xD38304")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000343")]
		public bool HasBeenTriggered
		{
			[Token(Token = "0x6001ED3")]
			[Address(RVA = "0xD38334", Offset = "0xD38334", VA = "0xD38334")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000344")]
		public bool PlayerIsInside
		{
			[Token(Token = "0x6001ED6")]
			[Address(RVA = "0xD38358", Offset = "0xD38358", VA = "0xD38358")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001ED7")]
			[Address(RVA = "0xD38360", Offset = "0xD38360", VA = "0xD38360")]
			private set
			{
			}
		}

		[Token(Token = "0x17000345")]
		public bool IsRewardSpawnType
		{
			[Token(Token = "0x6001ED9")]
			[Address(RVA = "0xD384FC", Offset = "0xD384FC", VA = "0xD384FC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000346")]
		public bool IsWhaleSpawnType
		{
			[Token(Token = "0x6001EDA")]
			[Address(RVA = "0xD385E0", Offset = "0xD385E0", VA = "0xD385E0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001ED4")]
		[Address(RVA = "0xD3833C", Offset = "0xD3833C", VA = "0xD3833C")]
		public void Enable()
		{
		}

		[Token(Token = "0x6001ED5")]
		[Address(RVA = "0xD38348", Offset = "0xD38348", VA = "0xD38348")]
		public void IncreaseAge()
		{
		}

		[Token(Token = "0x6001ED8")]
		[Address(RVA = "0xD38460", Offset = "0xD38460", VA = "0xD38460")]
		public void SetTemporaryTransformOverride(OrientedPoint transformOverride)
		{
		}

		[Token(Token = "0x6001EDB")]
		[Address(RVA = "0xD38678", Offset = "0xD38678", VA = "0xD38678")]
		public bool TryGetTypeToSpawn(out SpawnType spawnType, SpawnTypeFlag allowedSpawnTypes = SpawnTypeFlag.Everything)
		{
			return default(bool);
		}

		[Token(Token = "0x6001EDC")]
		[Address(RVA = "0xD38BFC", Offset = "0xD38BFC", VA = "0xD38BFC")]
		public bool TryClaim(bool reset = true)
		{
			return default(bool);
		}

		[Token(Token = "0x6001EDD")]
		[Address(RVA = "0xD38DAC", Offset = "0xD38DAC", VA = "0xD38DAC")]
		public void Release()
		{
		}

		[Token(Token = "0x6001EDE")]
		[Address(RVA = "0xD38CBC", Offset = "0xD38CBC", VA = "0xD38CBC")]
		public void Reset()
		{
		}

		[Token(Token = "0x6001EDF")]
		[Address(RVA = "0xD38E10", Offset = "0xD38E10", VA = "0xD38E10")]
		public OceanContentSpawnState GetCurrentState(OceanContentManager manager)
		{
			return default(OceanContentSpawnState);
		}

		[Token(Token = "0x6001EE0")]
		[Address(RVA = "0xD38F00", Offset = "0xD38F00", VA = "0xD38F00")]
		public void LoadState(OceanContentSpawnState spawnPointState)
		{
		}

		[Token(Token = "0x6001EE1")]
		[Address(RVA = "0xD38FC8", Offset = "0xD38FC8", VA = "0xD38FC8")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001EE2")]
		[Address(RVA = "0xD39100", Offset = "0xD39100", VA = "0xD39100")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001EE3")]
		[Address(RVA = "0xD39198", Offset = "0xD39198", VA = "0xD39198")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001EE4")]
		[Address(RVA = "0xD383A8", Offset = "0xD383A8", VA = "0xD383A8")]
		private void HandlePlayerEnter()
		{
		}

		[Token(Token = "0x6001EE5")]
		[Address(RVA = "0xD383F8", Offset = "0xD383F8", VA = "0xD383F8")]
		private void HandlePlayerExit()
		{
		}

		[Token(Token = "0x6001EE6")]
		[Address(RVA = "0xD39954", Offset = "0xD39954", VA = "0xD39954")]
		private void OnTriggerEnter(Collider o)
		{
		}

		[Token(Token = "0x6001EE7")]
		[Address(RVA = "0xD39A0C", Offset = "0xD39A0C", VA = "0xD39A0C")]
		private void OnTriggerExit(Collider o)
		{
		}

		[Token(Token = "0x6001EE8")]
		[Address(RVA = "0xD38D78", Offset = "0xD38D78", VA = "0xD38D78")]
		private void SetActive(bool active)
		{
		}

		[Token(Token = "0x6001EE9")]
		[Address(RVA = "0xD39AC8", Offset = "0xD39AC8", VA = "0xD39AC8")]
		public OceanContentSpawnPoint()
		{
		}
	}
	[Token(Token = "0x2000506")]
	public class RaftItemTracker : MonoBehaviour
	{
		[Token(Token = "0x2000507")]
		public delegate void OnItemPutOnRaftCallback(Grabbable grabbableItem);

		[Token(Token = "0x2000508")]
		public delegate void OnItemRemovedFromRaftCallback(Grabbable grabbableItem);

		[Token(Token = "0x4001DD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private List<Grabbable> m_grabbableItemsOnRaft;

		[Token(Token = "0x4001DD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public OnItemPutOnRaftCallback OnItemPutOnRaft;

		[Token(Token = "0x4001DD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public OnItemRemovedFromRaftCallback OnItemRemovedFromRaft;

		[Token(Token = "0x17000347")]
		public List<Grabbable> GrabbableItemsOnRaft
		{
			[Token(Token = "0x6001EF2")]
			[Address(RVA = "0xD39B70", Offset = "0xD39B70", VA = "0xD39B70")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001EF3")]
		[Address(RVA = "0xD39B78", Offset = "0xD39B78", VA = "0xD39B78")]
		public void Clear()
		{
		}

		[Token(Token = "0x6001EF4")]
		[Address(RVA = "0xD39BEC", Offset = "0xD39BEC", VA = "0xD39BEC")]
		private void OnTriggerEnter(Collider collider)
		{
		}

		[Token(Token = "0x6001EF5")]
		[Address(RVA = "0xD39D8C", Offset = "0xD39D8C", VA = "0xD39D8C")]
		private void OnTriggerExit(Collider collider)
		{
		}

		[Token(Token = "0x6001EF6")]
		[Address(RVA = "0xD39CD8", Offset = "0xD39CD8", VA = "0xD39CD8")]
		private void AddObjectToItemArray(Grabbable grabbableObject)
		{
		}

		[Token(Token = "0x6001EF7")]
		[Address(RVA = "0xD39E78", Offset = "0xD39E78", VA = "0xD39E78")]
		private void RemoveObjectFromItemArray(Grabbable grabbableObject)
		{
		}

		[Token(Token = "0x6001EF8")]
		[Address(RVA = "0xD3A65C", Offset = "0xD3A65C", VA = "0xD3A65C")]
		public RaftItemTracker()
		{
		}
	}
	[Token(Token = "0x2000509")]
	public class RaftReward : OceanContentRewardWithId
	{
		[Token(Token = "0x200050A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x973D9C", Offset = "0x973D9C")]
		private sealed class <OnAnimatorReady>d__27 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001DEA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001DEB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001DEC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public RaftReward <>4__this;

			[Token(Token = "0x17000349")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001F1D")]
				[Address(RVA = "0xD3C7F8", Offset = "0xD3C7F8", VA = "0xD3C7F8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700034A")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001F1F")]
				[Address(RVA = "0xD3C860", Offset = "0xD3C860", VA = "0xD3C860", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001F1A")]
			[Address(RVA = "0xD3BAF8", Offset = "0xD3BAF8", VA = "0xD3BAF8")]
			[DebuggerHidden]
			public <OnAnimatorReady>d__27(int <>1__state)
			{
			}

			[Token(Token = "0x6001F1B")]
			[Address(RVA = "0xD3C6F0", Offset = "0xD3C6F0", VA = "0xD3C6F0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001F1C")]
			[Address(RVA = "0xD3C6F4", Offset = "0xD3C6F4", VA = "0xD3C6F4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001F1E")]
			[Address(RVA = "0xD3C800", Offset = "0xD3C800", VA = "0xD3C800", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200050B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x973DAC", Offset = "0x973DAC")]
		private sealed class <DespawnFallback>d__29 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001DED")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001DEE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001DEF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float waitSeconds;

			[Token(Token = "0x4001DF0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public RaftReward <>4__this;

			[Token(Token = "0x1700034B")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001F23")]
				[Address(RVA = "0xD3C680", Offset = "0xD3C680", VA = "0xD3C680", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700034C")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001F25")]
				[Address(RVA = "0xD3C6E8", Offset = "0xD3C6E8", VA = "0xD3C6E8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001F20")]
			[Address(RVA = "0xD3BBB0", Offset = "0xD3BBB0", VA = "0xD3BBB0")]
			[DebuggerHidden]
			public <DespawnFallback>d__29(int <>1__state)
			{
			}

			[Token(Token = "0x6001F21")]
			[Address(RVA = "0xD3C59C", Offset = "0xD3C59C", VA = "0xD3C59C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001F22")]
			[Address(RVA = "0xD3C5A0", Offset = "0xD3C5A0", VA = "0xD3C5A0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001F24")]
			[Address(RVA = "0xD3C688", Offset = "0xD3C688", VA = "0xD3C688", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001DD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly int m_raftSinkTriggerParamId;

		[Token(Token = "0x4001DD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Transform m_rewardSpawnPoint;

		[Token(Token = "0x4001DDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Animator m_raftAnimation;

		[Token(Token = "0x4001DDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private MeshRenderer m_raftMeshRenderer;

		[Token(Token = "0x4001DDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private ParticleSystem m_raftSplashParticleSystem;

		[Token(Token = "0x4001DDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private RaftItemTracker m_raftItemTracker;

		[Token(Token = "0x4001DDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x97F688", Offset = "0x97F688")]
		[SerializeField]
		private NeatAudioPlayer m_longRangeAudioPlayer;

		[Token(Token = "0x4001DDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private NeatAudioPlayer m_loopAudioPlayer;

		[Token(Token = "0x4001DE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private NeatAudioCue m_spawnAudioCue;

		[Token(Token = "0x4001DE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private NeatAudioCue m_despawnAudioCue;

		[Token(Token = "0x4001DE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private GameObject m_spawnedRewardItem;

		[Token(Token = "0x4001DE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private bool m_isDespawning;

		[Token(Token = "0x4001DE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x81")]
		private bool m_hasReachedIdle;

		[Token(Token = "0x4001DE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private List<Grabbable> m_itemsToParentToRaftOnIdle;

		[Token(Token = "0x4001DE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private List<GameObject> m_itemsToDestroyOnDespawn;

		[Token(Token = "0x4001DE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Coroutine m_onAnimatorReadyCoroutine;

		[Token(Token = "0x4001DE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private Coroutine m_onRaftIsIdleCoroutine;

		[Token(Token = "0x4001DE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private Coroutine m_despawnFallbackCoroutine;

		[Token(Token = "0x17000348")]
		public GameObject SpawnedRewardItem
		{
			[Token(Token = "0x6001F01")]
			[Address(RVA = "0xD3A764", Offset = "0xD3A764", VA = "0xD3A764")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001F02")]
		[Address(RVA = "0xD3A76C", Offset = "0xD3A76C", VA = "0xD3A76C", Slot = "6")]
		public override void Spawn()
		{
		}

		[Token(Token = "0x6001F03")]
		[Address(RVA = "0xD3AE68", Offset = "0xD3AE68", VA = "0xD3AE68", Slot = "7")]
		public override void Despawn()
		{
		}

		[Token(Token = "0x6001F04")]
		[Address(RVA = "0xD3B590", Offset = "0xD3B590", VA = "0xD3B590", Slot = "8")]
		public override void Reset()
		{
		}

		[Token(Token = "0x6001F05")]
		[Address(RVA = "0xD3B684", Offset = "0xD3B684", VA = "0xD3B684")]
		public void PreInitSpawnRewardItem(SpawnOperationCallbackData data)
		{
		}

		[Token(Token = "0x6001F06")]
		[Address(RVA = "0xD3B848", Offset = "0xD3B848", VA = "0xD3B848")]
		public void PostInitSpawnRewardItem(SpawnOperationCallbackData data)
		{
		}

		[Token(Token = "0x6001F07")]
		[Address(RVA = "0xD3B988", Offset = "0xD3B988", VA = "0xD3B988")]
		public void OnRewardItemFirstGrab(Grabbable rewardItem)
		{
		}

		[Token(Token = "0x6001F08")]
		[Address(RVA = "0xD3ABD8", Offset = "0xD3ABD8", VA = "0xD3ABD8")]
		private void ResetAllEvents()
		{
		}

		[Token(Token = "0x6001F09")]
		[Address(RVA = "0xD3BA7C", Offset = "0xD3BA7C", VA = "0xD3BA7C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x991C28", Offset = "0x991C28")]
		private IEnumerator OnAnimatorReady()
		{
			return null;
		}

		[Token(Token = "0x6001F0A")]
		[Address(RVA = "0xD3AE10", Offset = "0xD3AE10", VA = "0xD3AE10")]
		private void StartOnAnimatorReadyCoroutine()
		{
		}

		[Token(Token = "0x6001F0B")]
		[Address(RVA = "0xD3BB24", Offset = "0xD3BB24", VA = "0xD3BB24")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x991C8C", Offset = "0x991C8C")]
		private IEnumerator DespawnFallback(float waitSeconds)
		{
			return null;
		}

		[Token(Token = "0x6001F0C")]
		[Address(RVA = "0xD3B34C", Offset = "0xD3B34C", VA = "0xD3B34C")]
		private void StartDespawnFallbackCoroutine()
		{
		}

		[Token(Token = "0x6001F0D")]
		[Address(RVA = "0xD3BBDC", Offset = "0xD3BBDC", VA = "0xD3BBDC")]
		private void PlaySpawnAndLoopAudio()
		{
		}

		[Token(Token = "0x6001F0E")]
		[Address(RVA = "0xD3BCF0", Offset = "0xD3BCF0", VA = "0xD3BCF0")]
		private void PlayDespawnAudio()
		{
		}

		[Token(Token = "0x6001F0F")]
		[Address(RVA = "0xD3BE18", Offset = "0xD3BE18", VA = "0xD3BE18")]
		private void StopAllSounds()
		{
		}

		[Token(Token = "0x6001F10")]
		[Address(RVA = "0xD3BF20", Offset = "0xD3BF20", VA = "0xD3BF20")]
		private void TrySetRaftAsItemParent(Grabbable grabbableItem, bool shouldParent)
		{
		}

		[Token(Token = "0x6001F11")]
		[Address(RVA = "0xD3AF60", Offset = "0xD3AF60", VA = "0xD3AF60")]
		private void OnWillDespawn()
		{
		}

		[Token(Token = "0x6001F12")]
		[Address(RVA = "0xD3B3DC", Offset = "0xD3B3DC", VA = "0xD3B3DC")]
		public void OnReadyForDespawn()
		{
		}

		[Token(Token = "0x6001F13")]
		[Address(RVA = "0xD3C194", Offset = "0xD3C194", VA = "0xD3C194")]
		private void OnRaftHasSunkAnimationExit(OnAnimationStateExitEvent e)
		{
		}

		[Token(Token = "0x6001F14")]
		[Address(RVA = "0xD3C198", Offset = "0xD3C198", VA = "0xD3C198")]
		private void OnRaftIsIdleAnimationEnter(OnAnimationStateEnterEvent e)
		{
		}

		[Token(Token = "0x6001F15")]
		[Address(RVA = "0xD3C1A4", Offset = "0xD3C1A4", VA = "0xD3C1A4")]
		private void OnRaftIsIdle()
		{
		}

		[Token(Token = "0x6001F16")]
		[Address(RVA = "0xD3C358", Offset = "0xD3C358", VA = "0xD3C358")]
		private void OnItemPutOnRaft(Grabbable grabbableItem)
		{
		}

		[Token(Token = "0x6001F17")]
		[Address(RVA = "0xD3C3F8", Offset = "0xD3C3F8", VA = "0xD3C3F8")]
		private void OnItemRemovedFromRaft(Grabbable grabbableItem)
		{
		}

		[Token(Token = "0x6001F18")]
		[Address(RVA = "0xD3C480", Offset = "0xD3C480", VA = "0xD3C480")]
		public RaftReward()
		{
		}
	}
	[Token(Token = "0x200050C")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x973DBC", Offset = "0x973DBC")]
	public class RewardData : ScriptableObject
	{
		[Token(Token = "0x4001DF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private AssetReference[] m_rewards;

		[Token(Token = "0x4001DF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x97F714", Offset = "0x97F714")]
		[SerializeField]
		private float[] m_weights;

		[Token(Token = "0x1700034D")]
		public AssetReference[] AllAvailableRewards
		{
			[Token(Token = "0x6001F26")]
			[Address(RVA = "0xD3C868", Offset = "0xD3C868", VA = "0xD3C868")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001F27")]
		[Address(RVA = "0xD3C870", Offset = "0xD3C870", VA = "0xD3C870")]
		public AssetReference GetRandomReward()
		{
			return null;
		}

		[Token(Token = "0x6001F28")]
		[Address(RVA = "0xD3C998", Offset = "0xD3C998", VA = "0xD3C998")]
		public bool TryGetRandomReward(out AssetReference rewardAssetReference)
		{
			return default(bool);
		}

		[Token(Token = "0x6001F29")]
		[Address(RVA = "0xD3C9D4", Offset = "0xD3C9D4", VA = "0xD3C9D4")]
		private int GetRandomWeightedIndex()
		{
			return default(int);
		}

		[Token(Token = "0x6001F2A")]
		[Address(RVA = "0xD3C8F8", Offset = "0xD3C8F8", VA = "0xD3C8F8")]
		private bool TryGetRandomWeightedIndex(out int randomIndex)
		{
			return default(bool);
		}

		[Token(Token = "0x6001F2B")]
		[Address(RVA = "0xD3CB48", Offset = "0xD3CB48", VA = "0xD3CB48")]
		private void UpdateWeightsToMatchRewards()
		{
		}

		[Token(Token = "0x6001F2C")]
		[Address(RVA = "0xD3CC58", Offset = "0xD3CC58", VA = "0xD3CC58")]
		public RewardData()
		{
		}
	}
}
namespace NeatCorp.Environment.Lighting
{
	[Token(Token = "0x200050D")]
	public class LightAltarFire : MonoBehaviour
	{
		[Token(Token = "0x4001DF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private IslandType m_islandType;

		[Token(Token = "0x4001DF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private EnvironmentLight[] m_environmentLights;

		[Token(Token = "0x4001DF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private bool m_startLit;

		[Token(Token = "0x6001F2D")]
		[Address(RVA = "0xC8D2D4", Offset = "0xC8D2D4", VA = "0xC8D2D4")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001F2E")]
		[Address(RVA = "0xC8D428", Offset = "0xC8D428", VA = "0xC8D428")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001F2F")]
		[Address(RVA = "0xC8D4D0", Offset = "0xC8D4D0", VA = "0xC8D4D0")]
		private void OnIslandStateEvent(IslandStateEvent e)
		{
		}

		[Token(Token = "0x6001F30")]
		[Address(RVA = "0xC8D388", Offset = "0xC8D388", VA = "0xC8D388")]
		private void SetLight(bool shouldBeLit)
		{
		}

		[Token(Token = "0x6001F31")]
		[Address(RVA = "0xC8D50C", Offset = "0xC8D50C", VA = "0xC8D50C")]
		public LightAltarFire()
		{
		}
	}
}
namespace NeatCorp.Environment.Islands
{
	[Token(Token = "0x200050E")]
	public enum IslandState
	{
		[Token(Token = "0x4001DF7")]
		Undiscovered,
		[Token(Token = "0x4001DF8")]
		Visited,
		[Token(Token = "0x4001DF9")]
		CurrentlyCompleted,
		[Token(Token = "0x4001DFA")]
		PreviouslyCompleted
	}
	[Token(Token = "0x200050F")]
	public enum IslandType
	{
		[Token(Token = "0x4001DFC")]
		Homeland,
		[Token(Token = "0x4001DFD")]
		Crystal,
		[Token(Token = "0x4001DFE")]
		Coral,
		[Token(Token = "0x4001DFF")]
		Bamboo,
		[Token(Token = "0x4001E00")]
		GodIsland
	}
}
namespace NeatCorp.Environment.CoralIsland
{
	[Token(Token = "0x2000510")]
	public class CoralTreeFlower : MonoBehaviour
	{
		[Token(Token = "0x2000511")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x973E28", Offset = "0x973E28")]
		private sealed class <StartOpeningDelayed>d__11 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001E07")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001E08")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001E09")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public CoralTreeFlower <>4__this;

			[Token(Token = "0x1700034E")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001F3E")]
				[Address(RVA = "0xC8D058", Offset = "0xC8D058", VA = "0xC8D058", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700034F")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001F40")]
				[Address(RVA = "0xC8D0C0", Offset = "0xC8D0C0", VA = "0xC8D0C0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001F3B")]
			[Address(RVA = "0xC8CEC8", Offset = "0xC8CEC8", VA = "0xC8CEC8")]
			[DebuggerHidden]
			public <StartOpeningDelayed>d__11(int <>1__state)
			{
			}

			[Token(Token = "0x6001F3C")]
			[Address(RVA = "0xC8CFD8", Offset = "0xC8CFD8", VA = "0xC8CFD8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001F3D")]
			[Address(RVA = "0xC8CFDC", Offset = "0xC8CFDC", VA = "0xC8CFDC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001F3F")]
			[Address(RVA = "0xC8D060", Offset = "0xC8D060", VA = "0xC8D060", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001E01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly int sm_flowerOpenStateId;

		[Token(Token = "0x4001E02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject m_flowerClosed;

		[Token(Token = "0x4001E03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GameObject m_flowerOpen;

		[Token(Token = "0x4001E04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Animator m_animator;

		[Token(Token = "0x4001E05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private YieldInstruction m_waitForUntilOpeningDuration;

		[Token(Token = "0x4001E06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Coroutine m_openFlowerRoutine;

		[Token(Token = "0x6001F32")]
		[Address(RVA = "0xC8CA30", Offset = "0xC8CA30", VA = "0xC8CA30")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001F33")]
		[Address(RVA = "0xC8CAD8", Offset = "0xC8CAD8", VA = "0xC8CAD8")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001F34")]
		[Address(RVA = "0xC8CB80", Offset = "0xC8CB80", VA = "0xC8CB80")]
		private void OnIslandStateEvent(IslandStateEvent e)
		{
		}

		[Token(Token = "0x6001F35")]
		[Address(RVA = "0xC8CCA8", Offset = "0xC8CCA8", VA = "0xC8CCA8")]
		private void HandleOpening(bool startOpen, float speed = 1f, float duration = 1f)
		{
		}

		[Token(Token = "0x6001F36")]
		[Address(RVA = "0xC8CE78", Offset = "0xC8CE78", VA = "0xC8CE78")]
		private void OpenManually(IslandStateEvent e, float speed = 1f)
		{
		}

		[Token(Token = "0x6001F37")]
		[Address(RVA = "0xC8CDFC", Offset = "0xC8CDFC", VA = "0xC8CDFC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x991D90", Offset = "0x991D90")]
		private IEnumerator StartOpeningDelayed()
		{
			return null;
		}

		[Token(Token = "0x6001F38")]
		[Address(RVA = "0xC8CEF4", Offset = "0xC8CEF4", VA = "0xC8CEF4")]
		public void Open(IslandStateEvent e)
		{
		}

		[Token(Token = "0x6001F39")]
		[Address(RVA = "0xC8CEFC", Offset = "0xC8CEFC", VA = "0xC8CEFC")]
		public CoralTreeFlower()
		{
		}
	}
	[Token(Token = "0x2000512")]
	public class LightParticlesFlower : SaveableComponent, IInitializable
	{
		[Token(Token = "0x4001E0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private GameObject m_lightParticles;

		[Token(Token = "0x4001E0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private CoralTreeFlower m_openableFlower;

		[Token(Token = "0x4001E0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool m_isOpen;

		[Token(Token = "0x4001E0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
		private bool m_hasInitialized;

		[Token(Token = "0x6001F41")]
		[Address(RVA = "0xC8D0C8", Offset = "0xC8D0C8", VA = "0xC8D0C8", Slot = "5")]
		public void Initialize()
		{
		}

		[Token(Token = "0x6001F42")]
		[Address(RVA = "0xC8D220", Offset = "0xC8D220", VA = "0xC8D220", Slot = "4")]
		public override ComponentState CreateState()
		{
			return null;
		}

		[Token(Token = "0x6001F43")]
		[Address(RVA = "0xC8D2B8", Offset = "0xC8D2B8", VA = "0xC8D2B8")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x6001F44")]
		[Address(RVA = "0xC8D16C", Offset = "0xC8D16C", VA = "0xC8D16C")]
		public void Open(bool shouldStartOpen)
		{
		}

		[Token(Token = "0x6001F45")]
		[Address(RVA = "0xC8D2CC", Offset = "0xC8D2CC", VA = "0xC8D2CC")]
		public LightParticlesFlower()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000513")]
	public class LightParticlesFlowerState : ComponentState
	{
		[Token(Token = "0x4001E0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool IsOpen;

		[Token(Token = "0x6001F46")]
		[Address(RVA = "0xC8D288", Offset = "0xC8D288", VA = "0xC8D288")]
		public LightParticlesFlowerState(bool isOpen)
		{
		}
	}
}
namespace NeatCorp.Text.Credits
{
	[Token(Token = "0x2000514")]
	public class CreditsHandler : MonoBehaviour
	{
		[Token(Token = "0x2000515")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x973E38", Offset = "0x973E38")]
		private sealed class <ShowCreditsRoutine>d__23 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001E23")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001E24")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001E25")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public CreditsHandler <>4__this;

			[Token(Token = "0x17000350")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001F56")]
				[Address(RVA = "0xD563E8", Offset = "0xD563E8", VA = "0xD563E8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000351")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001F58")]
				[Address(RVA = "0xD56450", Offset = "0xD56450", VA = "0xD56450", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001F53")]
			[Address(RVA = "0xD5560C", Offset = "0xD5560C", VA = "0xD5560C")]
			[DebuggerHidden]
			public <ShowCreditsRoutine>d__23(int <>1__state)
			{
			}

			[Token(Token = "0x6001F54")]
			[Address(RVA = "0xD55F9C", Offset = "0xD55F9C", VA = "0xD55F9C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001F55")]
			[Address(RVA = "0xD55FA0", Offset = "0xD55FA0", VA = "0xD55FA0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001F57")]
			[Address(RVA = "0xD563F0", Offset = "0xD563F0", VA = "0xD563F0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000516")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x973E48", Offset = "0x973E48")]
		private sealed class <>c__DisplayClass26_0
		{
			[Token(Token = "0x4001E26")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public CreditsHandler <>4__this;

			[Token(Token = "0x4001E27")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public TMP_Text textField;

			[Token(Token = "0x6001F59")]
			[Address(RVA = "0xD559EC", Offset = "0xD559EC", VA = "0xD559EC")]
			public <>c__DisplayClass26_0()
			{
			}

			[Token(Token = "0x6001F5A")]
			[Address(RVA = "0xD55F58", Offset = "0xD55F58", VA = "0xD55F58")]
			internal void <FadeOut>b__0()
			{
			}
		}

		[Token(Token = "0x2000517")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x973E58", Offset = "0x973E58")]
		private sealed class <>c__DisplayClass29_0
		{
			[Token(Token = "0x4001E28")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public CreditsHandler <>4__this;

			[Token(Token = "0x4001E29")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public TMP_Text[] textFields;

			[Token(Token = "0x6001F5B")]
			[Address(RVA = "0xD55D10", Offset = "0xD55D10", VA = "0xD55D10")]
			public <>c__DisplayClass29_0()
			{
			}

			[Token(Token = "0x6001F5C")]
			[Address(RVA = "0xD55F78", Offset = "0xD55F78", VA = "0xD55F78")]
			internal void <FadeOutSequence>b__0()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000518")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x973E68", Offset = "0x973E68")]
		private sealed class <>c
		{
			[Token(Token = "0x4001E2A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4001E2B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Action <>9__31_0;

			[Token(Token = "0x6001F5E")]
			[Address(RVA = "0xD55F4C", Offset = "0xD55F4C", VA = "0xD55F4C")]
			public <>c()
			{
			}

			[Token(Token = "0x6001F5F")]
			[Address(RVA = "0xD55F54", Offset = "0xD55F54", VA = "0xD55F54")]
			internal void <.ctor>b__31_0()
			{
			}
		}

		[Token(Token = "0x4001E0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private TMP_Text[] m_firstFields;

		[Token(Token = "0x4001E10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private TMP_Text[] m_secondFields;

		[Token(Token = "0x4001E11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private TMP_Text[] m_thirdFields;

		[Token(Token = "0x4001E12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private TMP_Text[] m_fourthFields;

		[Token(Token = "0x4001E13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Transform m_scrollView;

		[Token(Token = "0x4001E14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private float m_scrollSpeed;

		[Token(Token = "0x4001E15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[SerializeField]
		private float m_messageFadeTime;

		[Token(Token = "0x4001E16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private float m_textFadeTime;

		[Token(Token = "0x4001E17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private Transform m_fadeInPos;

		[Token(Token = "0x4001E18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private Transform m_fadeOutPos;

		[Token(Token = "0x4001E19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private TMP_Text[] m_fields;

		[Token(Token = "0x4001E1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private int m_numberOfFields;

		[Token(Token = "0x4001E1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		[HideInInspector]
		private List<TMP_Text> m_fieldsList;

		[Token(Token = "0x4001E1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public Action OnComplete;

		[Token(Token = "0x4001E1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private bool m_shouldScroll;

		[Token(Token = "0x4001E1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private int m_nextToFadeIn;

		[Token(Token = "0x4001E1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private int m_nextToFadeOut;

		[Token(Token = "0x4001E20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private Vector3 m_scrollDelta;

		[Token(Token = "0x4001E21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Tween m_currentTween;

		[Token(Token = "0x4001E22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private bool m_isCompleted;

		[Token(Token = "0x6001F47")]
		[Address(RVA = "0xD55424", Offset = "0xD55424", VA = "0xD55424")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001F48")]
		[Address(RVA = "0xD55474", Offset = "0xD55474", VA = "0xD55474")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001F49")]
		[Address(RVA = "0xD55428", Offset = "0xD55428", VA = "0xD55428")]
		public void ShowCredits()
		{
		}

		[Token(Token = "0x6001F4A")]
		[Address(RVA = "0xD55590", Offset = "0xD55590", VA = "0xD55590")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x991E44", Offset = "0x991E44")]
		private IEnumerator ShowCreditsRoutine()
		{
			return null;
		}

		[Token(Token = "0x6001F4B")]
		[Address(RVA = "0xD55638", Offset = "0xD55638", VA = "0xD55638")]
		private void Update()
		{
		}

		[Token(Token = "0x6001F4C")]
		[Address(RVA = "0xD55864", Offset = "0xD55864", VA = "0xD55864")]
		private Tween FadeIn(TMP_Text textField, float fadeTime = 0f)
		{
			return null;
		}

		[Token(Token = "0x6001F4D")]
		[Address(RVA = "0xD558E8", Offset = "0xD558E8", VA = "0xD558E8")]
		private Tween FadeOut(TMP_Text textField, float fadeTime = 0f)
		{
			return null;
		}

		[Token(Token = "0x6001F4E")]
		[Address(RVA = "0xD559F4", Offset = "0xD559F4", VA = "0xD559F4")]
		private void OnTextFieldFadeOut(TMP_Text textField)
		{
		}

		[Token(Token = "0x6001F4F")]
		[Address(RVA = "0xD55A70", Offset = "0xD55A70", VA = "0xD55A70")]
		private Tween FadeInSequence(TMP_Text[] textField, float fadeTime = 0f)
		{
			return null;
		}

		[Token(Token = "0x6001F50")]
		[Address(RVA = "0xD55B8C", Offset = "0xD55B8C", VA = "0xD55B8C")]
		private Tween FadeOutSequence(TMP_Text[] textFields, float fadeTime = 0f)
		{
			return null;
		}

		[Token(Token = "0x6001F51")]
		[Address(RVA = "0xD554C4", Offset = "0xD554C4", VA = "0xD554C4")]
		private void SetFieldsActive(TMP_Text[] textFields, bool shouldBeActive, float alpha = -1f)
		{
		}

		[Token(Token = "0x6001F52")]
		[Address(RVA = "0xD55D18", Offset = "0xD55D18", VA = "0xD55D18")]
		public CreditsHandler()
		{
		}
	}
}
namespace NeatCorp.Creatures
{
	[Token(Token = "0x2000519")]
	public class CreatureBase : SaveableComponent, IInitializable
	{
		[Token(Token = "0x4001E2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		protected bool m_initialized;

		[Token(Token = "0x4001E2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		protected CreatureState m_currentState;

		[Token(Token = "0x6001F60")]
		[Address(RVA = "0xC7E8F4", Offset = "0xC7E8F4", VA = "0xC7E8F4", Slot = "4")]
		public override ComponentState CreateState()
		{
			return null;
		}

		[Token(Token = "0x6001F61")]
		[Address(RVA = "0xC7E958", Offset = "0xC7E958", VA = "0xC7E958", Slot = "6")]
		public virtual void Initialize()
		{
		}

		[Token(Token = "0x6001F62")]
		[Address(RVA = "0xC7E9F0", Offset = "0xC7E9F0", VA = "0xC7E9F0")]
		public CreatureBase()
		{
		}
	}
	[Token(Token = "0x200051A")]
	public class CreatureMoveToPointerTest : MonoBehaviour
	{
		[Token(Token = "0x4001E2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private NavMeshAgent m_agent;

		[Token(Token = "0x6001F63")]
		[Address(RVA = "0xC7E9F8", Offset = "0xC7E9F8", VA = "0xC7E9F8")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x6001F64")]
		[Address(RVA = "0xC7EAAC", Offset = "0xC7EAAC", VA = "0xC7EAAC")]
		private void Update()
		{
		}

		[Token(Token = "0x6001F65")]
		[Address(RVA = "0xC7ED04", Offset = "0xC7ED04", VA = "0xC7ED04")]
		public CreatureMoveToPointerTest()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200051B")]
	public struct CreaturePopulation
	{
		[Token(Token = "0x4001E2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x97F8DC", Offset = "0x97F8DC")]
		public int MaxTotalCreatures;

		[Token(Token = "0x4001E30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x97F8F4", Offset = "0x97F8F4")]
		public int MaxVisitingCreatures;

		[Token(Token = "0x4001E31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x97F90C", Offset = "0x97F90C")]
		public int MaxVisitingDays;

		[Token(Token = "0x4001E32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x97F924", Offset = "0x97F924")]
		public int DaysSpawnInterval;

		[Token(Token = "0x4001E33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int FirstSpawnDay;

		[Token(Token = "0x4001E34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x97F93C", Offset = "0x97F93C")]
		private int <Visiting>k__BackingField;

		[Token(Token = "0x4001E35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x97F94C", Offset = "0x97F94C")]
		private int <LastSpawnDay>k__BackingField;

		[Token(Token = "0x17000352")]
		public int Visiting
		{
			[Token(Token = "0x6001F66")]
			[Address(RVA = "0xA43B74", Offset = "0xA43B74", VA = "0xA43B74")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x991EF8", Offset = "0x991EF8")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001F67")]
			[Address(RVA = "0xA43B7C", Offset = "0xA43B7C", VA = "0xA43B7C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x991F08", Offset = "0x991F08")]
			set
			{
			}
		}

		[Token(Token = "0x17000353")]
		public int LastSpawnDay
		{
			[Token(Token = "0x6001F68")]
			[Address(RVA = "0xA43B84", Offset = "0xA43B84", VA = "0xA43B84")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x991F18", Offset = "0x991F18")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001F69")]
			[Address(RVA = "0xA43B8C", Offset = "0xA43B8C", VA = "0xA43B8C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x991F28", Offset = "0x991F28")]
			set
			{
			}
		}
	}
	[Token(Token = "0x200051C")]
	public enum CreatureType
	{
		[Token(Token = "0x4001E37")]
		Undefined,
		[Token(Token = "0x4001E38")]
		ManateeCow,
		[Token(Token = "0x4001E39")]
		Puffkin,
		[Token(Token = "0x4001E3A")]
		Moleseal,
		[Token(Token = "0x4001E3B")]
		DragonSheep,
		[Token(Token = "0x4001E3C")]
		NumTypes
	}
	[Token(Token = "0x200051D")]
	[Flags]
	public enum CreatureTypeFlag
	{
		[Token(Token = "0x4001E3E")]
		ManateeCow = 2,
		[Token(Token = "0x4001E3F")]
		Puffkin = 4,
		[Token(Token = "0x4001E40")]
		Moleseal = 8,
		[Token(Token = "0x4001E41")]
		DragonSheep = 0x10
	}
	[Token(Token = "0x200051E")]
	public static class CreatureTypeExtensions
	{
		[Token(Token = "0x6001F6A")]
		[Address(RVA = "0xC7ED2C", Offset = "0xC7ED2C", VA = "0xC7ED2C")]
		public static CreatureTypeFlag AsFlag(this CreatureType ct)
		{
			return default(CreatureTypeFlag);
		}
	}
	[Token(Token = "0x200051F")]
	public class DragonSheepDebug : MonoBehaviour
	{
		[Token(Token = "0x2000520")]
		public enum DragonSheepState
		{
			[Token(Token = "0x4001E4B")]
			Default,
			[Token(Token = "0x4001E4C")]
			FollowingPlayer,
			[Token(Token = "0x4001E4D")]
			StayingAtLocation
		}

		[Token(Token = "0x2000521")]
		public struct DragonSheepDebugInfo
		{
			[Token(Token = "0x4001E4E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public DragonSheepState DebugState;

			[Token(Token = "0x4001E4F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public ManualMovementType ManualMovement;

			[Token(Token = "0x4001E50")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public CreatureBehaviour.CreatureAction CreatureAction;

			[Token(Token = "0x4001E51")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public CreatureBehaviour.CreatureAction SpecialActionOverride;

			[Token(Token = "0x4001E52")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public CreatureMovement.CreatureMovementState CreatureMovementState;

			[Token(Token = "0x4001E53")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public Vector3 Velocity;

			[Token(Token = "0x4001E54")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float VelocitySqrMagnitude;

			[Token(Token = "0x4001E55")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public string DebugText;

			[Token(Token = "0x4001E56")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public bool IsVelocityBlocked;

			[Token(Token = "0x4001E57")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
			public bool CloseToTarget;

			[Token(Token = "0x4001E58")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			public Vector3 MovementHelperDirection;

			[Token(Token = "0x6001F6F")]
			[Address(RVA = "0xA43CF0", Offset = "0xA43CF0", VA = "0xA43CF0")]
			public void Reset()
			{
			}
		}

		[Token(Token = "0x4001E42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private TMP_Text m_DebugStateText;

		[Token(Token = "0x4001E43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private TMP_Text m_velocity;

		[Token(Token = "0x4001E44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private TMP_Text m_ManualMovementText;

		[Token(Token = "0x4001E45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private TMP_Text m_CreatureActionText;

		[Token(Token = "0x4001E46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private TMP_Text m_SpecialActionOverrideText;

		[Token(Token = "0x4001E47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private TMP_Text m_CreatureMovementStateText;

		[Token(Token = "0x4001E48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private TMP_Text m_debugText;

		[Token(Token = "0x4001E49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private DragonSheepDebugInfo m_debugInfo;

		[Token(Token = "0x6001F6B")]
		[Address(RVA = "0xC7ED38", Offset = "0xC7ED38", VA = "0xC7ED38")]
		public void UpdateDebugInfo(DragonSheepDebugInfo info)
		{
		}

		[Token(Token = "0x6001F6C")]
		[Address(RVA = "0xC7ED88", Offset = "0xC7ED88", VA = "0xC7ED88")]
		public void UpdateDebugText()
		{
		}

		[Token(Token = "0x6001F6D")]
		[Address(RVA = "0xC7F084", Offset = "0xC7F084", VA = "0xC7F084")]
		private void RotateText()
		{
		}

		[Token(Token = "0x6001F6E")]
		[Address(RVA = "0xC7F188", Offset = "0xC7F188", VA = "0xC7F188")]
		public DragonSheepDebug()
		{
		}
	}
	[Token(Token = "0x2000522")]
	public enum ManualMovementType
	{
		[Token(Token = "0x4001E5A")]
		None,
		[Token(Token = "0x4001E5B")]
		InitialRotation,
		[Token(Token = "0x4001E5C")]
		Moving,
		[Token(Token = "0x4001E5D")]
		EndRotation,
		[Token(Token = "0x4001E5E")]
		AdjustHeight
	}
	[Token(Token = "0x2000523")]
	public enum MovementResult
	{
		[Token(Token = "0x4001E60")]
		Moving,
		[Token(Token = "0x4001E61")]
		Finished,
		[Token(Token = "0x4001E62")]
		Failed
	}
	[Token(Token = "0x2000524")]
	public class DragonSheepMovement : SaveableComponent, IInitializable
	{
		[Token(Token = "0x2000525")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x973E98", Offset = "0x973E98")]
		private sealed class <UnlockWhenFacing>d__61 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001E95")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001E96")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001E97")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public DragonSheepMovement <>4__this;

			[Token(Token = "0x17000356")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001FA6")]
				[Address(RVA = "0xC83350", Offset = "0xC83350", VA = "0xC83350", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000357")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001FA8")]
				[Address(RVA = "0xC833B8", Offset = "0xC833B8", VA = "0xC833B8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001FA3")]
			[Address(RVA = "0xC7F6E0", Offset = "0xC7F6E0", VA = "0xC7F6E0")]
			[DebuggerHidden]
			public <UnlockWhenFacing>d__61(int <>1__state)
			{
			}

			[Token(Token = "0x6001FA4")]
			[Address(RVA = "0xC83190", Offset = "0xC83190", VA = "0xC83190", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001FA5")]
			[Address(RVA = "0xC83194", Offset = "0xC83194", VA = "0xC83194", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001FA7")]
			[Address(RVA = "0xC83358", Offset = "0xC83358", VA = "0xC83358", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001E63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static int StayAtLocationParamId;

		[Token(Token = "0x4001E64")]
		private const float BaseOffsetTargetTolerance = 0.005f;

		[Token(Token = "0x4001E65")]
		private const float CheckPlayerPositionInterval = 6f;

		[Token(Token = "0x4001E66")]
		private const float TargetRotationTolerance = 1.5f;

		[Token(Token = "0x4001E67")]
		private const float TargetSqareDistanceTolerance = 0.0001f;

		[Token(Token = "0x4001E68")]
		private const float MaxSpeedDistance = 40f;

		[Token(Token = "0x4001E69")]
		private const float MaxCatchUpSpeed = 3f;

		[Token(Token = "0x4001E6A")]
		private const float FailedMovementDuration = 5f;

		[Token(Token = "0x4001E6B")]
		private const float MaxWaitingForPathDuration = 30f;

		[Token(Token = "0x4001E6C")]
		private const float CollisionRadius = 0.25f;

		[Token(Token = "0x4001E6D")]
		private const float LowestAltitude = 0.5f;

		[Token(Token = "0x4001E6E")]
		private const float ChangeCheckPositionTheshold = 10f;

		[Token(Token = "0x4001E6F")]
		private const float MaxHeightAdjustmentToNavmesh = 5f;

		[Token(Token = "0x4001E70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private CreatureBehaviour m_behaviour;

		[Token(Token = "0x4001E71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Animator m_animator;

		[Token(Token = "0x4001E72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private NavMeshAgent m_agent;

		[Token(Token = "0x4001E73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private CapsuleCollider m_pettableTrigger;

		[Token(Token = "0x4001E74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private float m_verticalSpeed;

		[Token(Token = "0x4001E75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[SerializeField]
		private float m_minPitchDuration;

		[Token(Token = "0x4001E76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private float m_maxPitchDuration;

		[Token(Token = "0x4001E77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[SerializeField]
		private float m_minFollowPlayerInterval;

		[Token(Token = "0x4001E78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private float m_maxFollowPlayerInterval;

		[Token(Token = "0x4001E79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[SerializeField]
		private float m_offNavmeshMinFollowInterval;

		[Token(Token = "0x4001E7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private float m_offNavmeshMaxFollowInterval;

		[Token(Token = "0x4001E7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private SaveObjectBase m_saveObjectBase;

		[Token(Token = "0x4001E7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private bool m_showDebugInfo;

		[Token(Token = "0x4001E7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private GameObject m_debugPrefab;

		[Token(Token = "0x4001E7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private float m_targetBaseOffset;

		[Token(Token = "0x4001E7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private float m_timeUntilNewHeight;

		[Token(Token = "0x4001E80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private float m_timeUntilNewFollowPosition;

		[Token(Token = "0x4001E81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		[SerializeField]
		[HideInInspector]
		private float m_halfAgentHeight;

		[Token(Token = "0x4001E82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private bool m_tryingToFollowPlayer;

		[Token(Token = "0x4001E83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		private float m_timeUntilFollowPositionUpdate;

		[Token(Token = "0x4001E84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private ManualMovementType m_manualMovement;

		[Token(Token = "0x4001E85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		private Vector3 m_followPlayerPosition;

		[Token(Token = "0x4001E86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private NavMeshPath m_path;

		[Token(Token = "0x4001E87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private Scene m_scene;

		[Token(Token = "0x4001E88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		private Vector3 m_velocity;

		[Token(Token = "0x4001E89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private Vector3 m_targetVelocity;

		[Token(Token = "0x4001E8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		private bool m_isUnlocked;

		[Token(Token = "0x4001E8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCD")]
		private bool m_initialized;

		[Token(Token = "0x4001E8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCE")]
		private bool m_tryingToReachNavigationTarget;

		[Token(Token = "0x4001E8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private float m_failedToMoveTowardsTarget;

		[Token(Token = "0x4001E8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		private float m_idlePathDuration;

		[Token(Token = "0x4001E8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private Transform m_stayPosition;

		[Token(Token = "0x4001E90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private bool m_hasStayPosition;

		[Token(Token = "0x4001E91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE1")]
		private bool m_isAtStayLocation;

		[Token(Token = "0x4001E92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE2")]
		private bool m_hasReachedStayLocation;

		[Token(Token = "0x4001E93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x97FAE4", Offset = "0x97FAE4")]
		private static DragonSheepMovement <Instance>k__BackingField;

		[Token(Token = "0x4001E94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x97FAF4", Offset = "0x97FAF4")]
		private static Transform <TempStayPosition>k__BackingField;

		[Token(Token = "0x17000354")]
		public static DragonSheepMovement Instance
		{
			[Token(Token = "0x6001F70")]
			[Address(RVA = "0xC7F190", Offset = "0xC7F190", VA = "0xC7F190")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x991F48", Offset = "0x991F48")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001F71")]
			[Address(RVA = "0xC7F1F8", Offset = "0xC7F1F8", VA = "0xC7F1F8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x991F58", Offset = "0x991F58")]
			private set
			{
			}
		}

		[Token(Token = "0x17000355")]
		public static Transform TempStayPosition
		{
			[Token(Token = "0x6001F72")]
			[Address(RVA = "0xC7F268", Offset = "0xC7F268", VA = "0xC7F268")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x991F68", Offset = "0x991F68")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001F73")]
			[Address(RVA = "0xC7F2D0", Offset = "0xC7F2D0", VA = "0xC7F2D0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x991F78", Offset = "0x991F78")]
			private set
			{
			}
		}

		[Token(Token = "0x6001F74")]
		[Address(RVA = "0xC7F340", Offset = "0xC7F340", VA = "0xC7F340")]
		private void InitializeSettings()
		{
		}

		[Token(Token = "0x6001F75")]
		[Address(RVA = "0xC7F400", Offset = "0xC7F400", VA = "0xC7F400")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001F76")]
		[Address(RVA = "0xC7F4BC", Offset = "0xC7F4BC", VA = "0xC7F4BC")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001F77")]
		[Address(RVA = "0xC7F564", Offset = "0xC7F564", VA = "0xC7F564")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001F78")]
		[Address(RVA = "0xC7F60C", Offset = "0xC7F60C", VA = "0xC7F60C")]
		private void OnIslandStateEvent(IslandStateEvent e)
		{
		}

		[Token(Token = "0x6001F79")]
		[Address(RVA = "0xC7F664", Offset = "0xC7F664", VA = "0xC7F664")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x991F88", Offset = "0x991F88")]
		private IEnumerator UnlockWhenFacing()
		{
			return null;
		}

		[Token(Token = "0x6001F7A")]
		[Address(RVA = "0xC7F70C", Offset = "0xC7F70C", VA = "0xC7F70C")]
		public static Transform GetStayPosition()
		{
			return null;
		}

		[Token(Token = "0x6001F7B")]
		[Address(RVA = "0xC7F8C0", Offset = "0xC7F8C0", VA = "0xC7F8C0", Slot = "5")]
		public void Initialize()
		{
		}

		[Token(Token = "0x6001F7C")]
		[Address(RVA = "0xC800F0", Offset = "0xC800F0", VA = "0xC800F0", Slot = "4")]
		public override ComponentState CreateState()
		{
			return null;
		}

		[Token(Token = "0x6001F7D")]
		[Address(RVA = "0xC801A8", Offset = "0xC801A8", VA = "0xC801A8")]
		private void UpdateBaseOffset()
		{
		}

		[Token(Token = "0x6001F7E")]
		[Address(RVA = "0xC80418", Offset = "0xC80418", VA = "0xC80418")]
		private void UpdateFollowBehavior()
		{
		}

		[Token(Token = "0x6001F7F")]
		[Address(RVA = "0xC80744", Offset = "0xC80744", VA = "0xC80744")]
		private void MoveToAndStayAtPosition(Transform stayLocation)
		{
		}

		[Token(Token = "0x6001F80")]
		[Address(RVA = "0xC8067C", Offset = "0xC8067C", VA = "0xC8067C")]
		private void SetStayAtLocationState(bool shouldStay)
		{
		}

		[Token(Token = "0x6001F81")]
		[Address(RVA = "0xC811EC", Offset = "0xC811EC", VA = "0xC811EC")]
		private bool ShouldMoveTowardsTemporaryTarget()
		{
			return default(bool);
		}

		[Token(Token = "0x6001F82")]
		[Address(RVA = "0xC811C0", Offset = "0xC811C0", VA = "0xC811C0")]
		private void SetTimeUntilNewFollowDuration()
		{
		}

		[Token(Token = "0x6001F83")]
		[Address(RVA = "0xC81164", Offset = "0xC81164", VA = "0xC81164")]
		private void TryAdjustFollowIntervalWhileOffNavmesh()
		{
		}

		[Token(Token = "0x6001F84")]
		[Address(RVA = "0xC807DC", Offset = "0xC807DC", VA = "0xC807DC")]
		private bool TryGetPlayerFollowPosition(ref Vector3 checkOnPlayerPosition)
		{
			return default(bool);
		}

		[Token(Token = "0x6001F85")]
		[Address(RVA = "0xC814B8", Offset = "0xC814B8", VA = "0xC814B8")]
		private bool GetPositionOutsideCollision(ref Vector3 updatedPosition, Vector3 targetPosition, Vector3 playerPosition)
		{
			return default(bool);
		}

		[Token(Token = "0x6001F86")]
		[Address(RVA = "0xC80E84", Offset = "0xC80E84", VA = "0xC80E84")]
		private bool TryReachDestination(Vector3 pos, CreatureBehaviour.CreatureAction creatureAction, bool skipHeightAdjustment = false, bool skipEndRotation = false)
		{
			return default(bool);
		}

		[Token(Token = "0x6001F87")]
		[Address(RVA = "0xC81800", Offset = "0xC81800", VA = "0xC81800")]
		private bool IsCloseEnough(Vector3 pos, bool skipEndRotation = false)
		{
			return default(bool);
		}

		[Token(Token = "0x6001F88")]
		[Address(RVA = "0xC816FC", Offset = "0xC816FC", VA = "0xC816FC")]
		private bool IsWithinDistanceTo(Vector3 pos)
		{
			return default(bool);
		}

		[Token(Token = "0x6001F89")]
		[Address(RVA = "0xC81A78", Offset = "0xC81A78", VA = "0xC81A78")]
		private bool IsWithinGeneralDirection(Vector3 pos)
		{
			return default(bool);
		}

		[Token(Token = "0x6001F8A")]
		[Address(RVA = "0xC822F8", Offset = "0xC822F8", VA = "0xC822F8")]
		private bool TryMoveToNavmesh(Vector3 pos)
		{
			return default(bool);
		}

		[Token(Token = "0x6001F8B")]
		[Address(RVA = "0xC81300", Offset = "0xC81300", VA = "0xC81300")]
		private bool RotateTo(Vector3 pos)
		{
			return default(bool);
		}

		[Token(Token = "0x6001F8C")]
		[Address(RVA = "0xC81880", Offset = "0xC81880", VA = "0xC81880")]
		private bool RotateTowards(Vector3 pos)
		{
			return default(bool);
		}

		[Token(Token = "0x6001F8D")]
		[Address(RVA = "0xC82634", Offset = "0xC82634", VA = "0xC82634")]
		private bool IsAlreadyAtStayLocation(Transform target)
		{
			return default(bool);
		}

		[Token(Token = "0x6001F8E")]
		[Address(RVA = "0xC81BB0", Offset = "0xC81BB0", VA = "0xC81BB0")]
		private void MoveTowards(Vector3 pos, out MovementResult result)
		{
		}

		[Token(Token = "0x6001F8F")]
		[Address(RVA = "0xC8284C", Offset = "0xC8284C", VA = "0xC8284C")]
		private Vector3 TryGetValidVelocityDirection(Vector3 targetVelocity, float targetDistance)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001F90")]
		[Address(RVA = "0xC80324", Offset = "0xC80324", VA = "0xC80324")]
		private float GetVerticalMovementTarget()
		{
			return default(float);
		}

		[Token(Token = "0x6001F91")]
		[Address(RVA = "0xC82B94", Offset = "0xC82B94", VA = "0xC82B94")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6001F92")]
		[Address(RVA = "0xC7FF44", Offset = "0xC7FF44", VA = "0xC7FF44")]
		private bool TryMoveToPersistantScene()
		{
			return default(bool);
		}

		[Token(Token = "0x6001F93")]
		[Address(RVA = "0xC7FB0C", Offset = "0xC7FB0C", VA = "0xC7FB0C")]
		public void Unlock()
		{
		}

		[Token(Token = "0x6001F94")]
		[Address(RVA = "0xC7FBCC", Offset = "0xC7FBCC", VA = "0xC7FBCC")]
		public static void SetStayPosition(Transform stayPosition)
		{
		}

		[Token(Token = "0x6001F95")]
		[Address(RVA = "0xC82BD8", Offset = "0xC82BD8", VA = "0xC82BD8")]
		public static void ResetStayPosition()
		{
		}

		[Token(Token = "0x6001F96")]
		[Address(RVA = "0xC82ED8", Offset = "0xC82ED8", VA = "0xC82ED8")]
		private void TryMoveToClosestNavmesh()
		{
		}

		[Token(Token = "0x6001F97")]
		[Address(RVA = "0xC8305C", Offset = "0xC8305C", VA = "0xC8305C")]
		public void CallDragonSheep()
		{
		}

		[Token(Token = "0x6001F98")]
		[Address(RVA = "0xC830E0", Offset = "0xC830E0", VA = "0xC830E0")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x991FEC", Offset = "0x991FEC")]
		private void UpdateDebugInfo()
		{
		}

		[Token(Token = "0x6001F99")]
		[Address(RVA = "0xC830E4", Offset = "0xC830E4", VA = "0xC830E4")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x992024", Offset = "0x992024")]
		private void DrawCheckOnInitialTarget(Vector3 checkOnPlayerPosition)
		{
		}

		[Token(Token = "0x6001F9A")]
		[Address(RVA = "0xC830E8", Offset = "0xC830E8", VA = "0xC830E8")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x99205C", Offset = "0x99205C")]
		private void DrawNavmeshCheckPositionInfo(Vector3 checkOnPlayerPosition, NavMeshHit hit)
		{
		}

		[Token(Token = "0x6001F9B")]
		[Address(RVA = "0xC830EC", Offset = "0xC830EC", VA = "0xC830EC")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x992094", Offset = "0x992094")]
		private void DrawTargetOutsideCollision(Vector3 checkOnPlayerPosition)
		{
		}

		[Token(Token = "0x6001F9C")]
		[Address(RVA = "0xC830F0", Offset = "0xC830F0", VA = "0xC830F0")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x9920CC", Offset = "0x9920CC")]
		private void DrawCheckPositionCollisionInfo(Vector3 updatedPosition, bool collisionResult, float distance, Ray ray)
		{
		}

		[Token(Token = "0x6001F9D")]
		[Address(RVA = "0xC830F4", Offset = "0xC830F4", VA = "0xC830F4")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x992104", Offset = "0x992104")]
		private void SetDebugNotWithinCloseDistanceInfo()
		{
		}

		[Token(Token = "0x6001F9E")]
		[Address(RVA = "0xC830F8", Offset = "0xC830F8", VA = "0xC830F8")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x99213C", Offset = "0x99213C")]
		private void SetDebugMovementHelperDirection(Vector3 frameMovementToTarget)
		{
		}

		[Token(Token = "0x6001F9F")]
		[Address(RVA = "0xC830FC", Offset = "0xC830FC", VA = "0xC830FC")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x992174", Offset = "0x992174")]
		private void SetDebugIsCloseToTarget()
		{
		}

		[Token(Token = "0x6001FA0")]
		[Address(RVA = "0xC83100", Offset = "0xC83100", VA = "0xC83100")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x9921AC", Offset = "0x9921AC")]
		private void SetDebugVelocity(Vector3 velocity)
		{
		}

		[Token(Token = "0x6001FA1")]
		[Address(RVA = "0xC83104", Offset = "0xC83104", VA = "0xC83104")]
		public DragonSheepMovement()
		{
		}
	}
	[Token(Token = "0x2000526")]
	public class DragonSheepMovementState : ComponentState
	{
		[Token(Token = "0x4001E98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool IsUnlocked;

		[Token(Token = "0x4001E99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float TimeUntilFollowPlayer;

		[Token(Token = "0x6001FA9")]
		[Address(RVA = "0xC80168", Offset = "0xC80168", VA = "0xC80168")]
		public DragonSheepMovementState(bool isUnlocked, float timeUntilFollowPlayer)
		{
		}
	}
	[Token(Token = "0x2000527")]
	public class DragonSheepStayLocation : MonoBehaviour
	{
		[Token(Token = "0x4001E9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Transform m_stayPosition;

		[Token(Token = "0x6001FAA")]
		[Address(RVA = "0xC833C0", Offset = "0xC833C0", VA = "0xC833C0")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x6001FAB")]
		[Address(RVA = "0xC83468", Offset = "0xC83468", VA = "0xC83468")]
		private void OnTriggerExit(Collider other)
		{
		}

		[Token(Token = "0x6001FAC")]
		[Address(RVA = "0xC83564", Offset = "0xC83564", VA = "0xC83564")]
		public DragonSheepStayLocation()
		{
		}
	}
	[Token(Token = "0x2000528")]
	public class EyeExpression : MonoBehaviour
	{
		[Token(Token = "0x4001E9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private CreatureBehaviour m_behaviour;

		[Token(Token = "0x4001E9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Transform m_eyeExpressionJoint;

		[Token(Token = "0x4001E9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Renderer m_eyeRenderer;

		[Token(Token = "0x4001E9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Renderer[] m_eyeRendererLods;

		[Token(Token = "0x4001E9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private int m_materialIndex;

		[Token(Token = "0x4001EA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[HideInInspector]
		[SerializeField]
		private int m_eyeTextureCols;

		[Token(Token = "0x4001EA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[HideInInspector]
		[SerializeField]
		private int m_eyeTextureRows;

		[Token(Token = "0x4001EA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private float m_lastY;

		[Token(Token = "0x4001EA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float m_lastX;

		[Token(Token = "0x4001EA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private MaterialPropertyBlock m_mpb;

		[Token(Token = "0x4001EA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private bool m_hasPropertyBlock;

		[Token(Token = "0x4001EA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private float m_offsetV;

		[Token(Token = "0x4001EA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private float m_offsetH;

		[Token(Token = "0x4001EA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private bool m_hasNeutralExpression;

		[Token(Token = "0x4001EA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly int cols;

		[Token(Token = "0x4001EAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private static readonly int rows;

		[Token(Token = "0x4001EAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static readonly int offsetH;

		[Token(Token = "0x4001EAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private static readonly int offsetV;

		[Token(Token = "0x6001FAD")]
		[Address(RVA = "0xC83BF4", Offset = "0xC83BF4", VA = "0xC83BF4")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x6001FAE")]
		[Address(RVA = "0xC83E04", Offset = "0xC83E04", VA = "0xC83E04")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001FAF")]
		[Address(RVA = "0xC83E80", Offset = "0xC83E80", VA = "0xC83E80")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6001FB0")]
		[Address(RVA = "0xC83ECC", Offset = "0xC83ECC", VA = "0xC83ECC")]
		private bool IsCloseToPlayer()
		{
			return default(bool);
		}

		[Token(Token = "0x6001FB1")]
		[Address(RVA = "0xC83FD0", Offset = "0xC83FD0", VA = "0xC83FD0")]
		private void UpdateEyeExpressions()
		{
		}

		[Token(Token = "0x6001FB2")]
		[Address(RVA = "0xC842D4", Offset = "0xC842D4", VA = "0xC842D4")]
		private void SetNeutralExpression()
		{
		}

		[Token(Token = "0x6001FB3")]
		[Address(RVA = "0xC843A0", Offset = "0xC843A0", VA = "0xC843A0")]
		private void SetPropertyBlocks()
		{
		}

		[Token(Token = "0x6001FB4")]
		[Address(RVA = "0xC84440", Offset = "0xC84440", VA = "0xC84440")]
		public EyeExpression()
		{
		}
	}
	[Token(Token = "0x2000529")]
	public class VisitingAnimalSpawnLocation : MonoBehaviour
	{
		[Token(Token = "0x4001EAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public CreatureTypeFlag creatureTypeFlag;

		[Token(Token = "0x6001FB6")]
		[Address(RVA = "0xC850D8", Offset = "0xC850D8", VA = "0xC850D8")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001FB7")]
		[Address(RVA = "0xC85140", Offset = "0xC85140", VA = "0xC85140")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001FB8")]
		[Address(RVA = "0xC851A8", Offset = "0xC851A8", VA = "0xC851A8")]
		public VisitingAnimalSpawnLocation()
		{
		}
	}
}
namespace NeatCorp.Creatures.Whale
{
	[Token(Token = "0x200052A")]
	public class NextWhaleApperanceEvent : GameEvent
	{
		[Token(Token = "0x4001EAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int NextAppeingDay;

		[Token(Token = "0x6001FB9")]
		[Address(RVA = "0xC85258", Offset = "0xC85258", VA = "0xC85258")]
		public NextWhaleApperanceEvent(int nextAppeingDay)
		{
		}
	}
	[Token(Token = "0x200052B")]
	public class Whale : SaveableComponent, IInitializable
	{
		[Token(Token = "0x200052C")]
		public enum WhaleAction
		{
			[Token(Token = "0x4001EE7")]
			Undefined,
			[Token(Token = "0x4001EE8")]
			Idle,
			[Token(Token = "0x4001EE9")]
			TryToEatFromHand,
			[Token(Token = "0x4001EEA")]
			EatFromHand,
			[Token(Token = "0x4001EEB")]
			Full,
			[Token(Token = "0x4001EEC")]
			Petted,
			[Token(Token = "0x4001EED")]
			Dive,
			[Token(Token = "0x4001EEE")]
			Disappear,
			[Token(Token = "0x4001EEF")]
			HappyReaction,
			[Token(Token = "0x4001EF0")]
			NumActions
		}

		[Token(Token = "0x200052D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x973EA8", Offset = "0x973EA8")]
		private sealed class <CleanUpAfterDuration>d__88 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001EF1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001EF2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001EF3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Whale <>4__this;

			[Token(Token = "0x4001EF4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private int <times>5__2;

			[Token(Token = "0x1700035B")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001FF3")]
				[Address(RVA = "0xC87870", Offset = "0xC87870", VA = "0xC87870", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700035C")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001FF5")]
				[Address(RVA = "0xC878D8", Offset = "0xC878D8", VA = "0xC878D8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001FF0")]
			[Address(RVA = "0xC869F4", Offset = "0xC869F4", VA = "0xC869F4")]
			[DebuggerHidden]
			public <CleanUpAfterDuration>d__88(int <>1__state)
			{
			}

			[Token(Token = "0x6001FF1")]
			[Address(RVA = "0xC877A4", Offset = "0xC877A4", VA = "0xC877A4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001FF2")]
			[Address(RVA = "0xC877A8", Offset = "0xC877A8", VA = "0xC877A8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001FF4")]
			[Address(RVA = "0xC87878", Offset = "0xC87878", VA = "0xC87878", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001EAF")]
		private const string creatureTypeString = "Whale";

		[Token(Token = "0x4001EB0")]
		private const float LongSqrDistanceToPlayer = 900f;

		[Token(Token = "0x4001EB1")]
		private const float MidDistanceToPlayer = 225f;

		[Token(Token = "0x4001EB2")]
		private const float MinLookDistance = 5.5f;

		[Token(Token = "0x4001EB3")]
		private const float MaxLookDistance = 12f;

		[Token(Token = "0x4001EB4")]
		private const float MinRandomSwimingDuration = 5f;

		[Token(Token = "0x4001EB5")]
		private const float MaxRanodomSwimingDuration = 15f;

		[Token(Token = "0x4001EB6")]
		private const int StartHungerLevel = 2;

		[Token(Token = "0x4001EB7")]
		private const float MinActionDuration = 1f;

		[Token(Token = "0x4001EB8")]
		private const float MaxActionDuration = 3f;

		[Token(Token = "0x4001EB9")]
		private const float PettingTimeNeeded = 1f;

		[Token(Token = "0x4001EBA")]
		private const int MinScaleValue = 10;

		[Token(Token = "0x4001EBB")]
		private const int MaxGrowthLevel = 50;

		[Token(Token = "0x4001EBC")]
		private const int TotalGrowthLevels = 40;

		[Token(Token = "0x4001EBD")]
		private const float MinFeedTriggerSize = 0.05f;

		[Token(Token = "0x4001EBE")]
		private const float MaxFeedTriggerSize = 0.14f;

		[Token(Token = "0x4001EBF")]
		private const int WhaleApperanceInterval = 1;

		[Token(Token = "0x4001EC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private WhaleEmoteController m_emoteController;

		[Token(Token = "0x4001EC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private ParticleSystem m_heartParticles;

		[Token(Token = "0x4001EC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private WhaleAnimation m_whaleAnimation;

		[Token(Token = "0x4001EC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private SphereCollider m_feedTrigger;

		[Token(Token = "0x4001EC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private FLookAnimator m_lookAtAnimator;

		[Token(Token = "0x4001EC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private LookAtPlayer m_lookAtPlayer;

		[Token(Token = "0x4001EC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private bool m_shouldMoveInDistance;

		[Token(Token = "0x4001EC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private AnimationCurve m_hungerCurve;

		[Token(Token = "0x4001EC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private SaveObjectBase m_saveObjectBase;

		[Token(Token = "0x4001EC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x97FC64", Offset = "0x97FC64")]
		[SerializeField]
		private WhaleAudioController m_audioController;

		[Token(Token = "0x4001ECA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private int m_growthLevel;

		[Token(Token = "0x4001ECB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private int m_nextApperanceDay;

		[Token(Token = "0x4001ECC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private WhaleBehaviorState m_currentBehaviorState;

		[Token(Token = "0x4001ECD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private float m_randSwimmingDuration;

		[Token(Token = "0x4001ECE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private float m_swimingDuration;

		[Token(Token = "0x4001ECF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private bool m_isTurning;

		[Token(Token = "0x4001ED0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8D")]
		private bool m_canBeFed;

		[Token(Token = "0x4001ED1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private CreatureInteractionEvent interactionEvent;

		[Token(Token = "0x4001ED2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private CreatureFedEvent fedEvent;

		[Token(Token = "0x4001ED3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private float m_timeSpentBeingPetted;

		[Token(Token = "0x4001ED4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		private float m_timeLeftDoingCurrentAction;

		[Token(Token = "0x4001ED5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private bool m_initialized;

		[Token(Token = "0x4001ED6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		private WhaleAction m_currentAction;

		[Token(Token = "0x4001ED7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private WhaleAction m_nextAction;

		[Token(Token = "0x4001ED8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		private WhaleAction m_previousAction;

		[Token(Token = "0x4001ED9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private WhaleAction m_specialActionOverride;

		[Token(Token = "0x4001EDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		private int m_currentHunger;

		[Token(Token = "0x4001EDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private float m_currentHungerIncrement;

		[Token(Token = "0x4001EDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		private bool m_hasGreetedPlayer;

		[Token(Token = "0x4001EDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC5")]
		private bool m_wantsToDive;

		[Token(Token = "0x4001EDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private float m_diveDuration;

		[Token(Token = "0x4001EDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		private bool m_shouldDisappear;

		[Token(Token = "0x4001EE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private Vector3 m_directionToPlayer;

		[Token(Token = "0x4001EE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		private Scene m_scene;

		[Token(Token = "0x4001EE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private bool m_isCloseToPlayer;

		[Token(Token = "0x4001EE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private Coroutine m_cleanupRoutine;

		[Token(Token = "0x4001EE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private YieldInstruction m_waitForFiveSeconds;

		[Token(Token = "0x4001EE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private bool m_canInteract;

		[Token(Token = "0x17000358")]
		public WhaleAction CurrentBehavior
		{
			[Token(Token = "0x6001FBA")]
			[Address(RVA = "0xC85284", Offset = "0xC85284", VA = "0xC85284")]
			get
			{
				return default(WhaleAction);
			}
		}

		[Token(Token = "0x17000359")]
		public bool IsCloseToPlayer
		{
			[Token(Token = "0x6001FBB")]
			[Address(RVA = "0xC852B4", Offset = "0xC852B4", VA = "0xC852B4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700035A")]
		public bool IsShowing
		{
			[Token(Token = "0x6001FBC")]
			[Address(RVA = "0xC852BC", Offset = "0xC852BC", VA = "0xC852BC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001FBD")]
		[Address(RVA = "0xC852A0", Offset = "0xC852A0", VA = "0xC852A0")]
		private bool HasSpecialActionOverride()
		{
			return default(bool);
		}

		[Token(Token = "0x6001FBE")]
		[Address(RVA = "0xC852C4", Offset = "0xC852C4", VA = "0xC852C4")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001FBF")]
		[Address(RVA = "0xC8557C", Offset = "0xC8557C", VA = "0xC8557C")]
		private void OnDiveAnimationExit(OnAnimationStateExitEvent e)
		{
		}

		[Token(Token = "0x6001FC0")]
		[Address(RVA = "0xC85584", Offset = "0xC85584", VA = "0xC85584")]
		private void TryStopAnimationAndHide(bool forceStop = false)
		{
		}

		[Token(Token = "0x6001FC1")]
		[Address(RVA = "0xC85614", Offset = "0xC85614", VA = "0xC85614")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001FC2")]
		[Address(RVA = "0xC858E4", Offset = "0xC858E4", VA = "0xC858E4", Slot = "4")]
		public override ComponentState CreateState()
		{
			return null;
		}

		[Token(Token = "0x6001FC3")]
		[Address(RVA = "0xC859A8", Offset = "0xC859A8", VA = "0xC859A8", Slot = "5")]
		public void Initialize()
		{
		}

		[Token(Token = "0x6001FC4")]
		[Address(RVA = "0xC85BCC", Offset = "0xC85BCC", VA = "0xC85BCC")]
		private bool TryMoveToPersistantScene()
		{
			return default(bool);
		}

		[Token(Token = "0x6001FC5")]
		[Address(RVA = "0xC85BBC", Offset = "0xC85BBC", VA = "0xC85BBC")]
		private void ResetWhaleActions()
		{
		}

		[Token(Token = "0x6001FC6")]
		[Address(RVA = "0xC85D78", Offset = "0xC85D78", VA = "0xC85D78")]
		private void WhaleLevelUp()
		{
		}

		[Token(Token = "0x6001FC7")]
		[Address(RVA = "0xC85F10", Offset = "0xC85F10", VA = "0xC85F10")]
		public void StartApperance()
		{
		}

		[Token(Token = "0x6001FC8")]
		[Address(RVA = "0xC85B48", Offset = "0xC85B48", VA = "0xC85B48")]
		private void SetNewApperanceByLevel()
		{
		}

		[Token(Token = "0x6001FC9")]
		[Address(RVA = "0xC86278", Offset = "0xC86278", VA = "0xC86278")]
		private void SetAudioParams(float growthLevel01)
		{
		}

		[Token(Token = "0x6001FCA")]
		[Address(RVA = "0xC86260", Offset = "0xC86260", VA = "0xC86260")]
		private void SetAnimationSpeed(float growthLevel01)
		{
		}

		[Token(Token = "0x6001FCB")]
		[Address(RVA = "0xC861D0", Offset = "0xC861D0", VA = "0xC861D0")]
		private void SetFLookDistance(float growthLevel01)
		{
		}

		[Token(Token = "0x6001FCC")]
		[Address(RVA = "0xC86078", Offset = "0xC86078", VA = "0xC86078")]
		private void SetScale()
		{
		}

		[Token(Token = "0x6001FCD")]
		[Address(RVA = "0xC86130", Offset = "0xC86130", VA = "0xC86130")]
		private void SetFeedTriggerSize(float growthLevel01)
		{
		}

		[Token(Token = "0x6001FCE")]
		[Address(RVA = "0xC85E58", Offset = "0xC85E58", VA = "0xC85E58")]
		private void SetNewHungerLevel()
		{
		}

		[Token(Token = "0x6001FCF")]
		[Address(RVA = "0xC86118", Offset = "0xC86118", VA = "0xC86118")]
		public float GetGrowth01()
		{
			return default(float);
		}

		[Token(Token = "0x6001FD0")]
		[Address(RVA = "0xC86328", Offset = "0xC86328", VA = "0xC86328")]
		private void Update()
		{
		}

		[Token(Token = "0x6001FD1")]
		[Address(RVA = "0xC864FC", Offset = "0xC864FC", VA = "0xC864FC")]
		public void StartTryingToEatFromHand()
		{
		}

		[Token(Token = "0x6001FD2")]
		[Address(RVA = "0xC86510", Offset = "0xC86510", VA = "0xC86510")]
		public void StopTryingToEatFromHand()
		{
		}

		[Token(Token = "0x6001FD3")]
		[Address(RVA = "0xC86550", Offset = "0xC86550", VA = "0xC86550")]
		public void OnObjectReceived(PlayerHand hand, Grabbable grabbable)
		{
		}

		[Token(Token = "0x6001FD4")]
		[Address(RVA = "0xC8683C", Offset = "0xC8683C", VA = "0xC8683C")]
		public void OnPettingStart()
		{
		}

		[Token(Token = "0x6001FD5")]
		[Address(RVA = "0xC868CC", Offset = "0xC868CC", VA = "0xC868CC")]
		public void OnPettingEnd()
		{
		}

		[Token(Token = "0x6001FD6")]
		[Address(RVA = "0xC868F0", Offset = "0xC868F0", VA = "0xC868F0")]
		public void DiveBackIntoOcean()
		{
		}

		[Token(Token = "0x6001FD7")]
		[Address(RVA = "0xC86978", Offset = "0xC86978", VA = "0xC86978")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x992234", Offset = "0x992234")]
		private IEnumerator CleanUpAfterDuration()
		{
			return null;
		}

		[Token(Token = "0x6001FD8")]
		[Address(RVA = "0xC855EC", Offset = "0xC855EC", VA = "0xC855EC")]
		public void HideWhale()
		{
		}

		[Token(Token = "0x6001FD9")]
		[Address(RVA = "0xC86360", Offset = "0xC86360", VA = "0xC86360")]
		private void SetDistanceBehavior()
		{
		}

		[Token(Token = "0x6001FDA")]
		[Address(RVA = "0xC86A20", Offset = "0xC86A20", VA = "0xC86A20")]
		public void SetBehaviorState(WhaleBehaviorState state)
		{
		}

		[Token(Token = "0x6001FDB")]
		[Address(RVA = "0xC85FA8", Offset = "0xC85FA8", VA = "0xC85FA8")]
		private void ResetAllStateDurations()
		{
		}

		[Token(Token = "0x6001FDC")]
		[Address(RVA = "0xC85FB0", Offset = "0xC85FB0", VA = "0xC85FB0")]
		private void ResetAllAnimParams()
		{
		}

		[Token(Token = "0x6001FDD")]
		[Address(RVA = "0xC864D4", Offset = "0xC864D4", VA = "0xC864D4")]
		private void UpdateBehavior(float dt)
		{
		}

		[Token(Token = "0x6001FDE")]
		[Address(RVA = "0xC86B10", Offset = "0xC86B10", VA = "0xC86B10")]
		private void LongDistanceBehavior(float dt)
		{
		}

		[Token(Token = "0x6001FDF")]
		[Address(RVA = "0xC86CDC", Offset = "0xC86CDC", VA = "0xC86CDC")]
		private void MidDistanceBehavior(float dt)
		{
		}

		[Token(Token = "0x6001FE0")]
		[Address(RVA = "0xC87250", Offset = "0xC87250", VA = "0xC87250")]
		private void OnTurnComplete()
		{
		}

		[Token(Token = "0x6001FE1")]
		[Address(RVA = "0xC8720C", Offset = "0xC8720C", VA = "0xC8720C")]
		private void TryWaveToPlayer()
		{
		}

		[Token(Token = "0x6001FE2")]
		[Address(RVA = "0xC86FE4", Offset = "0xC86FE4", VA = "0xC86FE4")]
		private void TryTurnTowardsPlayer()
		{
		}

		[Token(Token = "0x6001FE3")]
		[Address(RVA = "0xC86EB8", Offset = "0xC86EB8", VA = "0xC86EB8")]
		private bool IsFacingPlayer()
		{
			return default(bool);
		}

		[Token(Token = "0x6001FE4")]
		[Address(RVA = "0xC87260", Offset = "0xC87260", VA = "0xC87260")]
		public Vector3 GetDirectionToPlayer()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001FE5")]
		[Address(RVA = "0xC86D68", Offset = "0xC86D68", VA = "0xC86D68")]
		private void ShortDistanceBehavior(float dt)
		{
		}

		[Token(Token = "0x6001FE6")]
		[Address(RVA = "0xC8736C", Offset = "0xC8736C", VA = "0xC8736C")]
		private void UpdatePlayerInteraction(float dt)
		{
		}

		[Token(Token = "0x6001FE7")]
		[Address(RVA = "0xC86E94", Offset = "0xC86E94", VA = "0xC86E94")]
		private void DoSpecialActionOverride(float dt)
		{
		}

		[Token(Token = "0x6001FE8")]
		[Address(RVA = "0xC867EC", Offset = "0xC867EC", VA = "0xC867EC")]
		private void TrySetFeedingTriggerActive(bool shouldBeActive)
		{
		}

		[Token(Token = "0x6001FE9")]
		[Address(RVA = "0xC876D4", Offset = "0xC876D4", VA = "0xC876D4")]
		public void SetSpecialActionOverride(WhaleAction action)
		{
		}

		[Token(Token = "0x6001FEA")]
		[Address(RVA = "0xC86530", Offset = "0xC86530", VA = "0xC86530")]
		public void ClearSpecialActionOverride(WhaleAction action)
		{
		}

		[Token(Token = "0x6001FEB")]
		[Address(RVA = "0xC85F98", Offset = "0xC85F98", VA = "0xC85F98")]
		public void ClearCurrentSpecialActionOverride()
		{
		}

		[Token(Token = "0x6001FEC")]
		[Address(RVA = "0xC866B4", Offset = "0xC866B4", VA = "0xC866B4")]
		private void DoAction(WhaleAction action, float duration = -1f)
		{
		}

		[Token(Token = "0x6001FED")]
		[Address(RVA = "0xC87648", Offset = "0xC87648", VA = "0xC87648")]
		private void UpdateAction(WhaleAction action, float dt)
		{
		}

		[Token(Token = "0x6001FEE")]
		[Address(RVA = "0xC87718", Offset = "0xC87718", VA = "0xC87718")]
		public void SetNextApperanceDay(int nextWhaleAppearanceDay)
		{
		}

		[Token(Token = "0x6001FEF")]
		[Address(RVA = "0xC87720", Offset = "0xC87720", VA = "0xC87720")]
		public Whale()
		{
		}
	}
	[Token(Token = "0x200052E")]
	public class WhaleAnimation : MonoBehaviour
	{
		[Token(Token = "0x200052F")]
		public enum WhaleAnim
		{
			[Token(Token = "0x4001F04")]
			HoldingFood,
			[Token(Token = "0x4001F05")]
			HappyReact,
			[Token(Token = "0x4001F06")]
			Diving,
			[Token(Token = "0x4001F07")]
			Petting,
			[Token(Token = "0x4001F08")]
			Wave,
			[Token(Token = "0x4001F09")]
			Burp,
			[Token(Token = "0x4001F0A")]
			Eating,
			[Token(Token = "0x4001F0B")]
			SprayWater,
			[Token(Token = "0x4001F0C")]
			None
		}

		[Token(Token = "0x2000530")]
		public enum TriggerAnims
		{
			[Token(Token = "0x4001F0E")]
			SprayWater = 7
		}

		[Token(Token = "0x4001EF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Animator animator;

		[Token(Token = "0x4001EF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static int IdleStateNameHash;

		[Token(Token = "0x4001EF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public static int ResurfaceStateNameHash;

		[Token(Token = "0x4001EF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static int HoldingFoodParam;

		[Token(Token = "0x4001EF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public static int HappyReactParam;

		[Token(Token = "0x4001EFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static int DivingParam;

		[Token(Token = "0x4001EFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public static int PettingParam;

		[Token(Token = "0x4001EFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static int WaveParam;

		[Token(Token = "0x4001EFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public static int BurpParam;

		[Token(Token = "0x4001EFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public static int EatingParam;

		[Token(Token = "0x4001EFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public static int IsCloseToPlayerParam;

		[Token(Token = "0x4001F00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public static int SprayWaterParam;

		[Token(Token = "0x4001F01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int[] animIds;

		[Token(Token = "0x4001F02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool m_isCloseToPlayer;

		[Token(Token = "0x6001FF6")]
		[Address(RVA = "0xC878E0", Offset = "0xC878E0", VA = "0xC878E0")]
		private void PlayAnimation(WhaleAnim anim, bool resetOtherAnimations = true)
		{
		}

		[Token(Token = "0x6001FF7")]
		[Address(RVA = "0xC879E0", Offset = "0xC879E0", VA = "0xC879E0")]
		private bool IsTriggerParam(WhaleAnim anim)
		{
			return default(bool);
		}

		[Token(Token = "0x6001FF8")]
		[Address(RVA = "0xC87CDC", Offset = "0xC87CDC", VA = "0xC87CDC")]
		private bool IsTriggerParam(int animIndex)
		{
			return default(bool);
		}

		[Token(Token = "0x6001FF9")]
		[Address(RVA = "0xC86A4C", Offset = "0xC86A4C", VA = "0xC86A4C")]
		public void ResetParameters(WhaleAnim exclude = WhaleAnim.None)
		{
		}

		[Token(Token = "0x6001FFA")]
		[Address(RVA = "0xC86EAC", Offset = "0xC86EAC", VA = "0xC86EAC")]
		public void Dive()
		{
		}

		[Token(Token = "0x6001FFB")]
		[Address(RVA = "0xC876DC", Offset = "0xC876DC", VA = "0xC876DC")]
		public void TryToEatFromHand()
		{
		}

		[Token(Token = "0x6001FFC")]
		[Address(RVA = "0xC876E8", Offset = "0xC876E8", VA = "0xC876E8")]
		public void EatFromHand()
		{
		}

		[Token(Token = "0x6001FFD")]
		[Address(RVA = "0xC876F4", Offset = "0xC876F4", VA = "0xC876F4")]
		public void Full()
		{
		}

		[Token(Token = "0x6001FFE")]
		[Address(RVA = "0xC8770C", Offset = "0xC8770C", VA = "0xC8770C")]
		public void Petted()
		{
		}

		[Token(Token = "0x6001FFF")]
		[Address(RVA = "0xC87254", Offset = "0xC87254", VA = "0xC87254")]
		public void WaveToPlayer()
		{
		}

		[Token(Token = "0x6002000")]
		[Address(RVA = "0xC87700", Offset = "0xC87700", VA = "0xC87700")]
		public void HappyReaction()
		{
		}

		[Token(Token = "0x6002001")]
		[Address(RVA = "0xC86DD8", Offset = "0xC86DD8", VA = "0xC86DD8")]
		public void IsCloseToPlayer(bool isClose)
		{
		}

		[Token(Token = "0x6002002")]
		[Address(RVA = "0xC85FCC", Offset = "0xC85FCC", VA = "0xC85FCC")]
		public void Play()
		{
		}

		[Token(Token = "0x6002003")]
		[Address(RVA = "0xC855CC", Offset = "0xC855CC", VA = "0xC855CC")]
		public void Stop()
		{
		}

		[Token(Token = "0x6002004")]
		[Address(RVA = "0xC86294", Offset = "0xC86294", VA = "0xC86294")]
		public void SetAnimationSpeed(float growthLevel01)
		{
		}

		[Token(Token = "0x6002005")]
		[Address(RVA = "0xC87FD8", Offset = "0xC87FD8", VA = "0xC87FD8")]
		public WhaleAnimation()
		{
		}
	}
	[Token(Token = "0x2000531")]
	public class WhaleAudioController : MonoBehaviour
	{
		[Token(Token = "0x4001F0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly int SizeParamId;

		[Token(Token = "0x4001F10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x97FCC0", Offset = "0x97FCC0")]
		private NeatAudioPlayer m_loopingAudio;

		[Token(Token = "0x4001F11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private NeatAudioPlayer m_longRangeAudio;

		[Token(Token = "0x4001F12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private NeatAudioPlayer m_midRangeAudio;

		[Token(Token = "0x4001F13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private NeatAudioPlayer m_shortRangeAudio;

		[Token(Token = "0x4001F14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private NeatAudioPlayer m_mouthAudio;

		[Token(Token = "0x4001F15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x97FD4C", Offset = "0x97FD4C")]
		private NeatAudioCue m_burpCue;

		[Token(Token = "0x4001F16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private NeatAudioCue m_diveCue;

		[Token(Token = "0x4001F17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private NeatAudioCue m_eatCue;

		[Token(Token = "0x4001F18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private NeatAudioCue m_happyReactCue;

		[Token(Token = "0x4001F19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private NeatAudioCue m_inhaleCue;

		[Token(Token = "0x4001F1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private NeatAudioCue m_openMouthCue;

		[Token(Token = "0x4001F1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private NeatAudioCue m_pettingCue;

		[Token(Token = "0x4001F1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private NeatAudioCue m_reactToPlayerCue;

		[Token(Token = "0x4001F1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private NeatAudioCue m_resurfaceCue;

		[Token(Token = "0x4001F1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private NeatAudioCue m_ringsCue;

		[Token(Token = "0x4001F1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private NeatAudioCue m_whaleSongCue;

		[Token(Token = "0x4001F20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		private NeatAudioCue m_splashCue;

		[Token(Token = "0x4001F21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		private NeatAudioCue m_sprayWaterCue;

		[Token(Token = "0x4001F22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private float m_sizeLevel01;

		[Token(Token = "0x6002007")]
		[Address(RVA = "0xC882EC", Offset = "0xC882EC", VA = "0xC882EC")]
		public void SetParam(float param01)
		{
		}

		[Token(Token = "0x6002008")]
		[Address(RVA = "0xC882F4", Offset = "0xC882F4", VA = "0xC882F4")]
		private void AssignAndPlayCue(NeatAudioPlayer player, NeatAudioCue cue)
		{
		}

		[Token(Token = "0x6002009")]
		[Address(RVA = "0xC883A0", Offset = "0xC883A0", VA = "0xC883A0")]
		public void Burp()
		{
		}

		[Token(Token = "0x600200A")]
		[Address(RVA = "0xC883A8", Offset = "0xC883A8", VA = "0xC883A8")]
		public void Dive()
		{
		}

		[Token(Token = "0x600200B")]
		[Address(RVA = "0xC883B4", Offset = "0xC883B4", VA = "0xC883B4")]
		public void Eat()
		{
		}

		[Token(Token = "0x600200C")]
		[Address(RVA = "0xC883C0", Offset = "0xC883C0", VA = "0xC883C0")]
		public void HappyReaction()
		{
		}

		[Token(Token = "0x600200D")]
		[Address(RVA = "0xC883CC", Offset = "0xC883CC", VA = "0xC883CC")]
		public void Inhale()
		{
		}

		[Token(Token = "0x600200E")]
		[Address(RVA = "0xC883D8", Offset = "0xC883D8", VA = "0xC883D8")]
		public void OpenMouth()
		{
		}

		[Token(Token = "0x600200F")]
		[Address(RVA = "0xC883E4", Offset = "0xC883E4", VA = "0xC883E4")]
		public void Petting()
		{
		}

		[Token(Token = "0x6002010")]
		[Address(RVA = "0xC883F0", Offset = "0xC883F0", VA = "0xC883F0")]
		public void ReactToPlayerInDistance()
		{
		}

		[Token(Token = "0x6002011")]
		[Address(RVA = "0xC883FC", Offset = "0xC883FC", VA = "0xC883FC")]
		public void Resurface()
		{
		}

		[Token(Token = "0x6002012")]
		[Address(RVA = "0xC88408", Offset = "0xC88408", VA = "0xC88408")]
		public void Rings()
		{
		}

		[Token(Token = "0x6002013")]
		[Address(RVA = "0xC88414", Offset = "0xC88414", VA = "0xC88414")]
		public void Song()
		{
		}

		[Token(Token = "0x6002014")]
		[Address(RVA = "0xC88420", Offset = "0xC88420", VA = "0xC88420")]
		public void Splash()
		{
		}

		[Token(Token = "0x6002015")]
		[Address(RVA = "0xC8842C", Offset = "0xC8842C", VA = "0xC8842C")]
		public void Spray()
		{
		}

		[Token(Token = "0x6002016")]
		[Address(RVA = "0xC88438", Offset = "0xC88438", VA = "0xC88438")]
		public void SetLoopingWaves(int shouldPlay)
		{
		}

		[Token(Token = "0x6002017")]
		[Address(RVA = "0xC884FC", Offset = "0xC884FC", VA = "0xC884FC")]
		public WhaleAudioController()
		{
		}
	}
	[Token(Token = "0x2000532")]
	public enum WhaleBehaviorState
	{
		[Token(Token = "0x4001F24")]
		LongDistance,
		[Token(Token = "0x4001F25")]
		MidDistance,
		[Token(Token = "0x4001F26")]
		ShortDistance
	}
	[Token(Token = "0x2000533")]
	public class WhaleEffectController : MonoBehaviour
	{
		[Token(Token = "0x4001F27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x97FE58", Offset = "0x97FE58")]
		[SerializeField]
		private ParticleSystem m_surfacedParticleSystem;

		[Token(Token = "0x4001F28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private ParticleSystem m_splashParticleSystem;

		[Token(Token = "0x4001F29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private ParticleSystem m_sprayParticleSystem;

		[Token(Token = "0x4001F2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private ParticleSystem m_ringsParticleSystem;

		[Token(Token = "0x4001F2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x97FED4", Offset = "0x97FED4")]
		private WhaleAudioController m_whaleAudioController;

		[Token(Token = "0x6002019")]
		[Address(RVA = "0xC88568", Offset = "0xC88568", VA = "0xC88568")]
		public void Spray()
		{
		}

		[Token(Token = "0x600201A")]
		[Address(RVA = "0xC885F0", Offset = "0xC885F0", VA = "0xC885F0")]
		public void Splash()
		{
		}

		[Token(Token = "0x600201B")]
		[Address(RVA = "0xC885F8", Offset = "0xC885F8", VA = "0xC885F8")]
		public void Rings()
		{
		}

		[Token(Token = "0x600201C")]
		[Address(RVA = "0xC88600", Offset = "0xC88600", VA = "0xC88600")]
		public void Surfaced(int b)
		{
		}

		[Token(Token = "0x600201D")]
		[Address(RVA = "0xC88570", Offset = "0xC88570", VA = "0xC88570")]
		private void PlayParticleSystem(ParticleSystem particleSystem)
		{
		}

		[Token(Token = "0x600201E")]
		[Address(RVA = "0xC8861C", Offset = "0xC8861C", VA = "0xC8861C")]
		private void StopParticleSystem(ParticleSystem particleSystem)
		{
		}

		[Token(Token = "0x600201F")]
		[Address(RVA = "0xC88674", Offset = "0xC88674", VA = "0xC88674")]
		public WhaleEffectController()
		{
		}
	}
	[Token(Token = "0x2000534")]
	public class WhaleEmoteController : MonoBehaviour
	{
		[Token(Token = "0x2000535")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x973EB8", Offset = "0x973EB8")]
		private sealed class <ShowEmoteForDuration>d__12 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001F31")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001F32")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001F33")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float duration;

			[Token(Token = "0x4001F34")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public WhaleEmoteController <>4__this;

			[Token(Token = "0x1700035F")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600202B")]
				[Address(RVA = "0xC88BFC", Offset = "0xC88BFC", VA = "0xC88BFC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000360")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600202D")]
				[Address(RVA = "0xC88C64", Offset = "0xC88C64", VA = "0xC88C64", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002028")]
			[Address(RVA = "0xC889EC", Offset = "0xC889EC", VA = "0xC889EC")]
			[DebuggerHidden]
			public <ShowEmoteForDuration>d__12(int <>1__state)
			{
			}

			[Token(Token = "0x6002029")]
			[Address(RVA = "0xC88AD8", Offset = "0xC88AD8", VA = "0xC88AD8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600202A")]
			[Address(RVA = "0xC88ADC", Offset = "0xC88ADC", VA = "0xC88ADC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600202C")]
			[Address(RVA = "0xC88C04", Offset = "0xC88C04", VA = "0xC88C04", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001F2C")]
		private const float ScaleDuration = 0.3f;

		[Token(Token = "0x4001F2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private WhaleEmoteDictionary m_emotes;

		[Token(Token = "0x4001F2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private SpriteRenderer m_spriteRenderer;

		[Token(Token = "0x4001F2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Coroutine m_showForDurationRoutine;

		[Token(Token = "0x4001F30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private WhaleEmoteType m_currentEmoteType;

		[Token(Token = "0x1700035D")]
		public WhaleEmoteType CurrentEmoteType
		{
			[Token(Token = "0x6002020")]
			[Address(RVA = "0xC8867C", Offset = "0xC8867C", VA = "0xC8867C")]
			get
			{
				return default(WhaleEmoteType);
			}
		}

		[Token(Token = "0x1700035E")]
		public bool IsActive
		{
			[Token(Token = "0x6002021")]
			[Address(RVA = "0xC88684", Offset = "0xC88684", VA = "0xC88684")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6002022")]
		[Address(RVA = "0xC886A8", Offset = "0xC886A8", VA = "0xC886A8")]
		public void SetActive(bool shouldShow)
		{
		}

		[Token(Token = "0x6002023")]
		[Address(RVA = "0xC886DC", Offset = "0xC886DC", VA = "0xC886DC")]
		public void ShowEmote(WhaleEmoteType type)
		{
		}

		[Token(Token = "0x6002024")]
		[Address(RVA = "0xC888F4", Offset = "0xC888F4", VA = "0xC888F4")]
		public void ShowEmoteForDuration(WhaleEmoteType type, float duration)
		{
		}

		[Token(Token = "0x6002025")]
		[Address(RVA = "0xC88960", Offset = "0xC88960", VA = "0xC88960")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9922E8", Offset = "0x9922E8")]
		private IEnumerator ShowEmoteForDuration(float duration)
		{
			return null;
		}

		[Token(Token = "0x6002026")]
		[Address(RVA = "0xC88784", Offset = "0xC88784", VA = "0xC88784")]
		private void ScaleBubble(bool shouldShow)
		{
		}

		[Token(Token = "0x6002027")]
		[Address(RVA = "0xC88A18", Offset = "0xC88A18", VA = "0xC88A18")]
		public WhaleEmoteController()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000536")]
	public class WhaleEmoteDictionary : SerializableDictionary<WhaleEmoteType, Sprite>
	{
		[Token(Token = "0x600202E")]
		[Address(RVA = "0xC88A88", Offset = "0xC88A88", VA = "0xC88A88")]
		public WhaleEmoteDictionary()
		{
		}
	}
	[Token(Token = "0x2000537")]
	public enum WhaleEmoteType
	{
		[Token(Token = "0x4001F36")]
		Undefined,
		[Token(Token = "0x4001F37")]
		Ocean,
		[Token(Token = "0x4001F38")]
		Heart
	}
	[Token(Token = "0x2000538")]
	public class WhaleFish : SaveableComponent, IInitializable
	{
		[Token(Token = "0x4001F39")]
		private const float MaxScale = 2.5f;

		[Token(Token = "0x4001F3A")]
		private const float GrowthDurationinGameMinutes = 2880f;

		[Token(Token = "0x4001F3B")]
		private const float GrowthFractionPerRealTimeSecond = 0.00034722223f;

		[Token(Token = "0x4001F3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private WhaleEmoteController m_emoteController;

		[Token(Token = "0x4001F3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Fish m_fishComponent;

		[Token(Token = "0x4001F3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Grabbable m_grabbable;

		[Token(Token = "0x4001F3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private int m_startGrowingTimestamp;

		[Token(Token = "0x4001F40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private float m_currentScaleValue;

		[Token(Token = "0x4001F41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float m_updateDelta;

		[Token(Token = "0x4001F42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private int m_pondInitTimes;

		[Token(Token = "0x4001F43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private bool m_needsPondInitialization;

		[Token(Token = "0x4001F44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
		private bool m_hasInitializedInPond;

		[Token(Token = "0x17000361")]
		public bool IsFullyGrown
		{
			[Token(Token = "0x600202F")]
			[Address(RVA = "0xC88C6C", Offset = "0xC88C6C", VA = "0xC88C6C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6002030")]
		[Address(RVA = "0xC88C80", Offset = "0xC88C80", VA = "0xC88C80")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6002031")]
		[Address(RVA = "0xC88D50", Offset = "0xC88D50", VA = "0xC88D50")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6002032")]
		[Address(RVA = "0xC88E20", Offset = "0xC88E20", VA = "0xC88E20")]
		private void OnDropped(Grabbable obj)
		{
		}

		[Token(Token = "0x6002033")]
		[Address(RVA = "0xC88ED0", Offset = "0xC88ED0", VA = "0xC88ED0", Slot = "4")]
		public override ComponentState CreateState()
		{
			return null;
		}

		[Token(Token = "0x6002034")]
		[Address(RVA = "0xC88F74", Offset = "0xC88F74", VA = "0xC88F74", Slot = "5")]
		public void Initialize()
		{
		}

		[Token(Token = "0x6002035")]
		[Address(RVA = "0xC89074", Offset = "0xC89074", VA = "0xC89074")]
		private void Update()
		{
		}

		[Token(Token = "0x6002036")]
		[Address(RVA = "0xC89064", Offset = "0xC89064", VA = "0xC89064")]
		private void ResetPondInitialization()
		{
		}

		[Token(Token = "0x6002037")]
		[Address(RVA = "0xC89168", Offset = "0xC89168", VA = "0xC89168")]
		private void CheckPondInitialization()
		{
		}

		[Token(Token = "0x6002038")]
		[Address(RVA = "0xC89270", Offset = "0xC89270", VA = "0xC89270")]
		private void SetGrowthInPondWhileAway()
		{
		}

		[Token(Token = "0x6002039")]
		[Address(RVA = "0xC891C4", Offset = "0xC891C4", VA = "0xC891C4")]
		private void TryUpdateScaleValue()
		{
		}

		[Token(Token = "0x600203A")]
		[Address(RVA = "0xC89360", Offset = "0xC89360", VA = "0xC89360")]
		private void TryShowOceanEmote()
		{
		}

		[Token(Token = "0x600203B")]
		[Address(RVA = "0xC88E28", Offset = "0xC88E28", VA = "0xC88E28")]
		private void UpdateScale(float newScale)
		{
		}

		[Token(Token = "0x600203C")]
		[Address(RVA = "0xC8938C", Offset = "0xC8938C", VA = "0xC8938C")]
		private void OnReleasedInOcean()
		{
		}

		[Token(Token = "0x600203D")]
		[Address(RVA = "0xC8942C", Offset = "0xC8942C", VA = "0xC8942C")]
		public WhaleFish()
		{
		}
	}
	[Token(Token = "0x2000539")]
	public class WhaleFishState : ComponentState
	{
		[Token(Token = "0x4001F45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int StartGrowingTimeStamp;

		[Token(Token = "0x4001F46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float Scale;

		[Token(Token = "0x600203E")]
		[Address(RVA = "0xC88F38", Offset = "0xC88F38", VA = "0xC88F38")]
		public WhaleFishState(int startGrowingTimeStamp, float currentScale)
		{
		}
	}
	[Token(Token = "0x200053A")]
	public class WhaleReleasedEvent : GameEvent
	{
		[Token(Token = "0x600203F")]
		[Address(RVA = "0xC89424", Offset = "0xC89424", VA = "0xC89424")]
		public WhaleReleasedEvent()
		{
		}
	}
	[Token(Token = "0x200053B")]
	public class WhaleState : ComponentState
	{
		[Token(Token = "0x4001F47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int Level;

		[Token(Token = "0x4001F48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int NextApperanceDay;

		[Token(Token = "0x4001F49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int CurrentHunger;

		[Token(Token = "0x4001F4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float HungerIncrement;

		[Token(Token = "0x6002040")]
		[Address(RVA = "0xC85958", Offset = "0xC85958", VA = "0xC85958")]
		public WhaleState(int level, int nextApperanceDay, int currentHunger, float hungerIncrement)
		{
		}
	}
	[Token(Token = "0x200053C")]
	public class FollowerEffectController : MonoBehaviour
	{
		[Token(Token = "0x4001F4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private ParticleSystem m_rightCowFrontSplash;

		[Token(Token = "0x4001F4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private ParticleSystem m_rightCowBackSplash;

		[Token(Token = "0x4001F4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private ParticleSystem m_leftCowFrontSplash;

		[Token(Token = "0x4001F4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private ParticleSystem m_leftCowBackSplash;

		[Token(Token = "0x6002041")]
		[Address(RVA = "0xC851B0", Offset = "0xC851B0", VA = "0xC851B0")]
		public void RightCowFrontSplash()
		{
		}

		[Token(Token = "0x6002042")]
		[Address(RVA = "0xC85238", Offset = "0xC85238", VA = "0xC85238")]
		public void RightCowBackSplash()
		{
		}

		[Token(Token = "0x6002043")]
		[Address(RVA = "0xC85240", Offset = "0xC85240", VA = "0xC85240")]
		public void LeftCowFrontSplash()
		{
		}

		[Token(Token = "0x6002044")]
		[Address(RVA = "0xC85248", Offset = "0xC85248", VA = "0xC85248")]
		public void LeftCowBackSplash()
		{
		}

		[Token(Token = "0x6002045")]
		[Address(RVA = "0xC851B8", Offset = "0xC851B8", VA = "0xC851B8")]
		private void PlayParticleSystem(ParticleSystem particleSystem)
		{
		}

		[Token(Token = "0x6002046")]
		[Address(RVA = "0xC85250", Offset = "0xC85250", VA = "0xC85250")]
		public FollowerEffectController()
		{
		}
	}
}
namespace NeatCorp.Creatures.Serialization
{
	[Token(Token = "0x200053D")]
	public class BarnQuestSave : SaveableComponent, IInitializable
	{
		[Token(Token = "0x4001F4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private GameObject m_intactBarnObject;

		[Token(Token = "0x4001F50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private GameObject m_brokenBarnObject;

		[Token(Token = "0x4001F51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool m_isInitialized;

		[Token(Token = "0x4001F52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
		private bool m_isCompleted;

		[Token(Token = "0x6002047")]
		[Address(RVA = "0xC84F00", Offset = "0xC84F00", VA = "0xC84F00", Slot = "4")]
		public override ComponentState CreateState()
		{
			return null;
		}

		[Token(Token = "0x6002048")]
		[Address(RVA = "0xC84F98", Offset = "0xC84F98", VA = "0xC84F98", Slot = "5")]
		public void Initialize()
		{
		}

		[Token(Token = "0x6002049")]
		[Address(RVA = "0xC8507C", Offset = "0xC8507C", VA = "0xC8507C")]
		public void BuildBarn()
		{
		}

		[Token(Token = "0x600204A")]
		[Address(RVA = "0xC85038", Offset = "0xC85038", VA = "0xC85038")]
		public void SetBarnActive()
		{
		}

		[Token(Token = "0x600204B")]
		[Address(RVA = "0xC85088", Offset = "0xC85088", VA = "0xC85088")]
		public BarnQuestSave()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200053E")]
	public class BarnQuestState : ComponentState
	{
		[Token(Token = "0x4001F53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool IsCompleted;

		[Token(Token = "0x600204C")]
		[Address(RVA = "0xC84F68", Offset = "0xC84F68", VA = "0xC84F68")]
		public BarnQuestState(bool isCompleted)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200053F")]
	public class BreedableCreatureState : CreatureState
	{
		[Token(Token = "0x4001F54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public uint Seed;

		[Token(Token = "0x4001F55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public CreatureType CreatureType;

		[Token(Token = "0x4001F56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float Age;

		[Token(Token = "0x600204D")]
		[Address(RVA = "0xC85090", Offset = "0xC85090", VA = "0xC85090")]
		public BreedableCreatureState(uint seed, CreatureType creatureType, float age)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000540")]
	public class CreatureState : ComponentState
	{
		[Token(Token = "0x600204E")]
		[Address(RVA = "0xC7E950", Offset = "0xC7E950", VA = "0xC7E950")]
		public CreatureState()
		{
		}
	}
}
namespace NeatCorp.Creatures.Potpots
{
	[Serializable]
	[Token(Token = "0x2000541")]
	public struct PotpotData
	{
		[Token(Token = "0x4001F57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public PotpotType Type;

		[Token(Token = "0x4001F58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public GameObject Prefab;
	}
	[Token(Token = "0x2000542")]
	public class PotpotReplacer : MonoBehaviour
	{
		[Token(Token = "0x4001F59")]
		private const string UNDO_STR_SWAP_WITH_PREFAB = "swap potpot type";

		[Token(Token = "0x4001F5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject m_potpot;

		[Token(Token = "0x4001F5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private PotpotType m_type;

		[Token(Token = "0x4001F5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private PotpotVariants m_variants;

		[Token(Token = "0x4001F5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private PotpotAnimationController m_animations;

		[Token(Token = "0x600204F")]
		[Address(RVA = "0xC84E5C", Offset = "0xC84E5C", VA = "0xC84E5C")]
		public PotpotReplacer()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000543")]
	public enum PotpotType
	{
		[Token(Token = "0x4001F5F")]
		Flippy,
		[Token(Token = "0x4001F60")]
		Linnea,
		[Token(Token = "0x4001F61")]
		Leo
	}
	[Token(Token = "0x2000544")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x973EC8", Offset = "0x973EC8")]
	public class PotpotVariants : ScriptableObject
	{
		[Token(Token = "0x4001F62")]
		public const string DefaultLocation = "Assets/Data/Potpots/Potpot Variants.asset";

		[Token(Token = "0x4001F63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public PotpotData[] m_variants;

		[Token(Token = "0x6002050")]
		[Address(RVA = "0xC84E64", Offset = "0xC84E64", VA = "0xC84E64")]
		public bool TryGetAssetOfType(PotpotType type, out GameObject match)
		{
			return default(bool);
		}

		[Token(Token = "0x6002051")]
		[Address(RVA = "0xC84EF8", Offset = "0xC84EF8", VA = "0xC84EF8")]
		public PotpotVariants()
		{
		}
	}
}
namespace NeatCorp.Creatures.Edibles
{
	[Token(Token = "0x2000545")]
	public class CookedDish : Edible
	{
		[Token(Token = "0x6002052")]
		[Address(RVA = "0xC8356C", Offset = "0xC8356C", VA = "0xC8356C")]
		public CookedDish()
		{
		}
	}
	[Token(Token = "0x2000546")]
	public class Edible
	{
		[Token(Token = "0x4001F64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly Edible CookedDish;

		[Token(Token = "0x4001F65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static readonly Edible Veggie;

		[Token(Token = "0x4001F66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static readonly Edible Fruit;

		[Token(Token = "0x4001F67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static readonly Edible[] All;

		[Token(Token = "0x4001F68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public List<CraftingSystem.ResourceType> ResourceTypes;

		[Token(Token = "0x6002053")]
		[Address(RVA = "0xC83698", Offset = "0xC83698", VA = "0xC83698")]
		public bool Contains(CraftingSystem.ResourceType resourceType)
		{
			return default(bool);
		}

		[Token(Token = "0x6002054")]
		[Address(RVA = "0xC83740", Offset = "0xC83740", VA = "0xC83740")]
		public static bool FoundInEdibleTypes(CraftingSystem.ResourceType resourceType, Edible[] edibleTypes)
		{
			return default(bool);
		}

		[Token(Token = "0x6002055")]
		[Address(RVA = "0xC83690", Offset = "0xC83690", VA = "0xC83690")]
		public Edible()
		{
		}
	}
	[Token(Token = "0x2000547")]
	public class Fruit : Edible
	{
		[Token(Token = "0x6002057")]
		[Address(RVA = "0xC83AF0", Offset = "0xC83AF0", VA = "0xC83AF0")]
		public Fruit()
		{
		}
	}
	[Token(Token = "0x2000548")]
	public class Veggie : Edible
	{
		[Token(Token = "0x6002058")]
		[Address(RVA = "0xC8399C", Offset = "0xC8399C", VA = "0xC8399C")]
		public Veggie()
		{
		}
	}
}
namespace NeatCorp.Creatures.Gifting
{
	[Token(Token = "0x2000549")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x973F34", Offset = "0x973F34")]
	public class CreatureBreedingItemsRequestAsset : CreatureRequestAsset
	{
		[Token(Token = "0x6002059")]
		[Address(RVA = "0xC84514", Offset = "0xC84514", VA = "0xC84514")]
		public CreatureBreedingItemsRequestAsset()
		{
		}
	}
	[Token(Token = "0x200054A")]
	public class CreatureGiftSystem : ScriptableObject
	{
		[Token(Token = "0x4001F69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private List<CreatureItemRequestAsset> CreatureRequestAssets;

		[Token(Token = "0x4001F6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private List<CreatureRewardAsset> CreatureRewardAssets;

		[Token(Token = "0x4001F6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x980030", Offset = "0x980030")]
		[SerializeField]
		private CreatureBreedingItemsRequestAsset ManateeCowBreedingItems;

		[Token(Token = "0x4001F6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private CreatureBreedingItemsRequestAsset PuffkinBreedingItems;

		[Token(Token = "0x4001F6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private CreatureBreedingItemsRequestAsset MoleSealBreedingItems;

		[Token(Token = "0x600205A")]
		[Address(RVA = "0xC84524", Offset = "0xC84524", VA = "0xC84524")]
		public CreatureNestRequest GetCreatureNestItemRequest(CreatureType creatureType)
		{
			return null;
		}

		[Token(Token = "0x600205B")]
		[Address(RVA = "0xC84578", Offset = "0xC84578", VA = "0xC84578")]
		public CreatureBarnSpotRequest GetCreatureBarnSpotRequest(CreatureType creatureType)
		{
			return null;
		}

		[Token(Token = "0x600205C")]
		[Address(RVA = "0xC845CC", Offset = "0xC845CC", VA = "0xC845CC")]
		public CreatureItemRequest GetRandomCreatureRequest(CreatureType creatureType, uint minTamenessLevel = 0u, uint maxTamenessLevel = 0u)
		{
			return null;
		}

		[Token(Token = "0x600205D")]
		[Address(RVA = "0xC848A0", Offset = "0xC848A0", VA = "0xC848A0")]
		public CreatureReward GetRandomCreatureRewardByProbability(CreatureType creatureType, GrowthStateType growthStateType)
		{
			return default(CreatureReward);
		}

		[Token(Token = "0x600205E")]
		[Address(RVA = "0xC84640", Offset = "0xC84640", VA = "0xC84640")]
		public CreatureItemRequest GetCreatureRequestFromSeed(uint seed, CreatureType creatureType, uint minTamenessLevel = 0u, uint maxTamenessLevel = 0u)
		{
			return null;
		}

		[Token(Token = "0x600205F")]
		[Address(RVA = "0xC84904", Offset = "0xC84904", VA = "0xC84904")]
		public CreatureReward GetCreatureRewardFromSeed(uint seed, CreatureType creatureType, GrowthStateType growthStateType)
		{
			return default(CreatureReward);
		}

		[Token(Token = "0x6002060")]
		[Address(RVA = "0xC84BCC", Offset = "0xC84BCC", VA = "0xC84BCC")]
		private int[] GetIndexCollection(int index, uint count)
		{
			return null;
		}

		[Token(Token = "0x6002061")]
		[Address(RVA = "0xC84C74", Offset = "0xC84C74", VA = "0xC84C74")]
		public CreatureGiftSystem()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200054B")]
	public class CreatureItemRequest : CreatureRequest
	{
		[Token(Token = "0x4001F6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x98009C", Offset = "0x98009C")]
		public uint RequieredTamenessLevel;

		[Token(Token = "0x4001F6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9800B4", Offset = "0x9800B4")]
		public float TamenessIncrement;

		[Token(Token = "0x4001F70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9800CC", Offset = "0x9800CC")]
		private uint <Seed>k__BackingField;

		[Token(Token = "0x17000362")]
		public uint Seed
		{
			[Token(Token = "0x6002062")]
			[Address(RVA = "0xC84D2C", Offset = "0xC84D2C", VA = "0xC84D2C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x99239C", Offset = "0x99239C")]
			get
			{
				return default(uint);
			}
			[Token(Token = "0x6002063")]
			[Address(RVA = "0xC84D34", Offset = "0xC84D34", VA = "0xC84D34")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9923AC", Offset = "0x9923AC")]
			set
			{
			}
		}
	}
	[Token(Token = "0x200054C")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x973FA0", Offset = "0x973FA0")]
	public class CreatureItemRequestAsset : ScriptableObject
	{
		[Token(Token = "0x4001F71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public CreatureItemRequest Request;

		[Token(Token = "0x6002064")]
		[Address(RVA = "0xC84D3C", Offset = "0xC84D3C", VA = "0xC84D3C")]
		public CreatureItemRequestAsset()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200054D")]
	public class CreatureRequest
	{
		[Token(Token = "0x4001F72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public CreatureTypeFlag CreatureTypes;

		[Token(Token = "0x4001F73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Sprite Sprite;

		[Token(Token = "0x4001F74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CraftingSystem.ResourceTypeEnum ResourceType;
	}
	[Serializable]
	[Token(Token = "0x200054E")]
	public class CreatureNestRequest : CreatureRequest
	{
	}
	[Serializable]
	[Token(Token = "0x200054F")]
	public class CreatureBarnSpotRequest : CreatureRequest
	{
	}
	[Token(Token = "0x2000550")]
	public class CreatureRequestAsset : ScriptableObject
	{
		[Token(Token = "0x4001F75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public CreatureNestRequest NestRequestAsset;

		[Token(Token = "0x4001F76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CreatureBarnSpotRequest BarnSpotRequestAsset;

		[Token(Token = "0x6002065")]
		[Address(RVA = "0xC8451C", Offset = "0xC8451C", VA = "0xC8451C")]
		public CreatureRequestAsset()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000551")]
	public struct CreatureReward
	{
		[Token(Token = "0x4001F77")]
		private const uint DefaultProbability = 10u;

		[Token(Token = "0x4001F78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public CreatureTypeFlag CreatureType;

		[Token(Token = "0x4001F79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public GrowthStateTypeFlag GrowthStateType;

		[Token(Token = "0x4001F7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public AssetReference RewardAsset;

		[Token(Token = "0x4001F7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9800DC", Offset = "0x9800DC")]
		public uint Probability;

		[Token(Token = "0x4001F7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9800F8", Offset = "0x9800F8")]
		private uint <Seed>k__BackingField;

		[Token(Token = "0x17000363")]
		public uint Seed
		{
			[Token(Token = "0x6002066")]
			[Address(RVA = "0xA43D34", Offset = "0xA43D34", VA = "0xA43D34")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9923BC", Offset = "0x9923BC")]
			set
			{
			}
		}

		[Token(Token = "0x6002067")]
		[Address(RVA = "0xA43D3C", Offset = "0xA43D3C", VA = "0xA43D3C")]
		public CreatureReward(CreatureTypeFlag creatureType, GrowthStateTypeFlag growthStateType, AssetReference rewardAsset, uint probability)
		{
		}
	}
	[Token(Token = "0x2000552")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x97400C", Offset = "0x97400C")]
	public class CreatureRewardAsset : ScriptableObject
	{
		[Token(Token = "0x4001F7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public CreatureReward Reward;

		[Token(Token = "0x6002068")]
		[Address(RVA = "0xC84DF4", Offset = "0xC84DF4", VA = "0xC84DF4")]
		public CreatureRewardAsset()
		{
		}
	}
}
namespace NeatCorp.Creatures.Breeding
{
	[Token(Token = "0x2000553")]
	public class BreedableCreature : CreatureBase
	{
		[Token(Token = "0x4001F7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private GradientColorer gradientColorer;

		[Token(Token = "0x4001F7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private PatternController m_patternController;

		[Token(Token = "0x4001F80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private SkinnedMeshRenderer m_skinnedMeshRenderer;

		[Token(Token = "0x4001F81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x980138", Offset = "0x980138")]
		[SerializeField]
		private Transform m_body;

		[Token(Token = "0x4001F82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private Transform m_head;

		[Token(Token = "0x4001F83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private Transform m_leftEye;

		[Token(Token = "0x4001F84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private Transform m_rightEye;

		[Token(Token = "0x4001F85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private BreedVariation m_breedVariation;

		[Token(Token = "0x4001F86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private CreatureGrowthData m_growthData;

		[Token(Token = "0x4001F87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private bool m_hasGrowthData;

		[Token(Token = "0x4001F88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA1")]
		private bool m_hasInitializedBreedProperties;

		[Token(Token = "0x4001F89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		private float m_age;

		[Token(Token = "0x6002069")]
		[Address(RVA = "0x104D330", Offset = "0x104D330", VA = "0x104D330", Slot = "4")]
		public override ComponentState CreateState()
		{
			return null;
		}

		[Token(Token = "0x600206A")]
		[Address(RVA = "0x104D3B8", Offset = "0x104D3B8", VA = "0x104D3B8", Slot = "6")]
		public override void Initialize()
		{
		}

		[Token(Token = "0x600206B")]
		[Address(RVA = "0x104D598", Offset = "0x104D598", VA = "0x104D598", Slot = "7")]
		protected virtual void TrySetStateProperties()
		{
		}

		[Token(Token = "0x600206C")]
		[Address(RVA = "0x104D7E8", Offset = "0x104D7E8", VA = "0x104D7E8")]
		public void SetSpawnedBreedProperties(BreedVariation breedVariation, bool spawnFullyGrown)
		{
		}

		[Token(Token = "0x600206D")]
		[Address(RVA = "0x104D4F4", Offset = "0x104D4F4", VA = "0x104D4F4")]
		private void TryInitializeBreedProperties(BreedVariation breedVariation)
		{
		}

		[Token(Token = "0x600206E")]
		[Address(RVA = "0x104D714", Offset = "0x104D714", VA = "0x104D714")]
		private void SetGrowthData(float age, bool startAtMatureAge = false)
		{
		}

		[Token(Token = "0x600206F")]
		[Address(RVA = "0x104DEDC", Offset = "0x104DEDC", VA = "0x104DEDC")]
		public GrowthStateType UpdateGrowth(float deltaTime, out float updatedScale)
		{
			return default(GrowthStateType);
		}

		[Token(Token = "0x6002070")]
		[Address(RVA = "0x104DC78", Offset = "0x104DC78", VA = "0x104DC78")]
		private float SetGrowth(CreatureGrowthData growthData, float age = 0f)
		{
			return default(float);
		}

		[Token(Token = "0x6002071")]
		[Address(RVA = "0x104D864", Offset = "0x104D864", VA = "0x104D864")]
		protected void TrySetCreaturePattern(BreedVariation currentBreedVariation)
		{
		}

		[Token(Token = "0x6002072")]
		[Address(RVA = "0x104D9EC", Offset = "0x104D9EC", VA = "0x104D9EC")]
		protected void TrySetCreatureColors(BreedVariation currentBreedVariation)
		{
		}

		[Token(Token = "0x6002073")]
		[Address(RVA = "0x104DB6C", Offset = "0x104DB6C", VA = "0x104DB6C")]
		private void TrySetExpressionTexture(BreedVariation currentBreedVariation)
		{
		}

		[Token(Token = "0x6002074")]
		[Address(RVA = "0x104DF48", Offset = "0x104DF48", VA = "0x104DF48")]
		public PlantColors GetCurrentColors()
		{
			return default(PlantColors);
		}

		[Token(Token = "0x6002075")]
		[Address(RVA = "0x104DFFC", Offset = "0x104DFFC", VA = "0x104DFFC")]
		public BreedableCreature()
		{
		}
	}
	[Token(Token = "0x2000554")]
	public class BreedingManager : MonoBehaviour
	{
		[Token(Token = "0x4001F8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private BreedingVariationManager m_breedingVariationManager;

		[Token(Token = "0x4001F8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Transform m_spawnLocation;

		[Token(Token = "0x4001F8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private bool m_useRandomSpawnOffset;

		[Token(Token = "0x4001F8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9801E4", Offset = "0x9801E4")]
		private AssetReference PuffkinAsset;

		[Token(Token = "0x4001F8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private AssetReference ManateeCowAsset;

		[Token(Token = "0x4001F8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private AssetReference MolesealAsset;

		[Token(Token = "0x4001F90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x980250", Offset = "0x980250")]
		private AssetReference PuffkinEggAsset;

		[Token(Token = "0x4001F91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private AssetReference ManateeCowEggAsset;

		[Token(Token = "0x4001F92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private AssetReference MolesealEggAsset;

		[Token(Token = "0x4001F93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static BreedingManager sm_instance;

		[Token(Token = "0x4001F94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private BreedVariation m_currentBreedVariation;

		[Token(Token = "0x4001F95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private NavMeshAgent m_currentNavMeshAgent;

		[Token(Token = "0x4001F96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private bool m_spawnAsVisitor;

		[Token(Token = "0x17000364")]
		public Transform SpawnLocation
		{
			[Token(Token = "0x6002076")]
			[Address(RVA = "0x104E004", Offset = "0x104E004", VA = "0x104E004")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002077")]
		[Address(RVA = "0x104E00C", Offset = "0x104E00C", VA = "0x104E00C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002078")]
		[Address(RVA = "0x104E064", Offset = "0x104E064", VA = "0x104E064")]
		public static void SpawnBreedOfType(CreatureType creatureType, Transform spawnLocation, [Optional] Action<SpawnOperationCallbackData> OnCreatureSpawnedCallback, bool isDomestic = true)
		{
		}

		[Token(Token = "0x6002079")]
		[Address(RVA = "0x104D680", Offset = "0x104D680", VA = "0x104D680")]
		public static BreedVariation GetCreatureVariationFromSeed(CreatureType cretureType, uint seed, bool isDomestic = true)
		{
			return default(BreedVariation);
		}

		[Token(Token = "0x600207A")]
		[Address(RVA = "0x104DE6C", Offset = "0x104DE6C", VA = "0x104DE6C")]
		public static CreatureGrowthData GetCreatureGrowthData(CreatureType creatureType)
		{
			return null;
		}

		[Token(Token = "0x600207B")]
		[Address(RVA = "0x104E4AC", Offset = "0x104E4AC", VA = "0x104E4AC")]
		public static void SpawnEggOfType(CreatureType cretureType, OrientedPoint spawnLocation, [Optional] Action<SpawnOperationCallbackData> OnEggSpawnedCallback)
		{
		}

		[Token(Token = "0x600207C")]
		[Address(RVA = "0x104E5E4", Offset = "0x104E5E4", VA = "0x104E5E4")]
		private void OnCreaturePreInitCallback(SpawnOperationCallbackData obj)
		{
		}

		[Token(Token = "0x600207D")]
		[Address(RVA = "0x104E7D0", Offset = "0x104E7D0", VA = "0x104E7D0")]
		public BreedingManager()
		{
		}
	}
	[Token(Token = "0x2000555")]
	public class Egg : SaveableComponent, IInitializable
	{
		[Token(Token = "0x2000556")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x974078", Offset = "0x974078")]
		private sealed class <RemoveAfterDelay>d__20 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001FA7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001FA8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001FA9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Egg <>4__this;

			[Token(Token = "0x17000365")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600208B")]
				[Address(RVA = "0xC7DD78", Offset = "0xC7DD78", VA = "0xC7DD78", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000366")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600208D")]
				[Address(RVA = "0xC7DDE0", Offset = "0xC7DDE0", VA = "0xC7DDE0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002088")]
			[Address(RVA = "0xC7D99C", Offset = "0xC7D99C", VA = "0xC7D99C")]
			[DebuggerHidden]
			public <RemoveAfterDelay>d__20(int <>1__state)
			{
			}

			[Token(Token = "0x6002089")]
			[Address(RVA = "0xC7DC64", Offset = "0xC7DC64", VA = "0xC7DC64", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600208A")]
			[Address(RVA = "0xC7DC68", Offset = "0xC7DC68", VA = "0xC7DC68", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600208C")]
			[Address(RVA = "0xC7DD80", Offset = "0xC7DD80", VA = "0xC7DD80", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001F97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static int DELAY_BEFORE_HATCHING;

		[Token(Token = "0x4001F98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private static float DELAY_BEFORE_REMOVAL;

		[Token(Token = "0x4001F99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private CreatureType creatureType;

		[Token(Token = "0x4001F9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private GameObject wholeEgg;

		[Token(Token = "0x4001F9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private GameObject eggTop;

		[Token(Token = "0x4001F9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private GameObject eggBottom;

		[Token(Token = "0x4001F9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private NeatAudioPlayer audioPlayer;

		[Token(Token = "0x4001F9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private NeatAudioCue eggSpawnedSound;

		[Token(Token = "0x4001F9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private NeatAudioCue eggHatchedSound;

		[Token(Token = "0x4001FA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private float timeUntilHatching;

		[Token(Token = "0x4001FA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private float timeUntilRemoval;

		[Token(Token = "0x4001FA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private bool didHatch;

		[Token(Token = "0x4001FA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x69")]
		private bool initialized;

		[Token(Token = "0x4001FA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private int creationTimestamp;

		[Token(Token = "0x4001FA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private bool didSignUpForCallback;

		[Token(Token = "0x4001FA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Action<SpawnOperationCallbackData> CreatureSpawnedCallback;

		[Token(Token = "0x600207E")]
		[Address(RVA = "0xC7D2A4", Offset = "0xC7D2A4", VA = "0xC7D2A4")]
		public void RequestCallbackOnHatch(Action<SpawnOperationCallbackData> callback)
		{
		}

		[Token(Token = "0x600207F")]
		[Address(RVA = "0xC7D2AC", Offset = "0xC7D2AC", VA = "0xC7D2AC", Slot = "4")]
		public override ComponentState CreateState()
		{
			return null;
		}

		[Token(Token = "0x6002080")]
		[Address(RVA = "0xC7D444", Offset = "0xC7D444", VA = "0xC7D444", Slot = "5")]
		public void Initialize()
		{
		}

		[Token(Token = "0x6002081")]
		[Address(RVA = "0xC7D878", Offset = "0xC7D878", VA = "0xC7D878")]
		public void OnEggReadyToHatch()
		{
		}

		[Token(Token = "0x6002082")]
		[Address(RVA = "0xC7D7FC", Offset = "0xC7D7FC", VA = "0xC7D7FC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9923CC", Offset = "0x9923CC")]
		private IEnumerator RemoveAfterDelay()
		{
			return null;
		}

		[Token(Token = "0x6002083")]
		[Address(RVA = "0xC7D674", Offset = "0xC7D674", VA = "0xC7D674")]
		private void Hatch(bool onlyShowEggPieces = false)
		{
		}

		[Token(Token = "0x6002084")]
		[Address(RVA = "0xC7D9C8", Offset = "0xC7D9C8", VA = "0xC7D9C8")]
		public void PlayEggSpawnedEffect()
		{
		}

		[Token(Token = "0x6002085")]
		[Address(RVA = "0xC7DA9C", Offset = "0xC7DA9C", VA = "0xC7DA9C")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6002086")]
		[Address(RVA = "0xC7DB68", Offset = "0xC7DB68", VA = "0xC7DB68")]
		public Egg()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000557")]
	public class EggState : ComponentState
	{
		[Token(Token = "0x4001FAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public CreatureType CreatureType;

		[Token(Token = "0x4001FAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float TimeUntilHatching;

		[Token(Token = "0x4001FAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float TimeUntilRemoval;

		[Token(Token = "0x4001FAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public bool DidHatch;

		[Token(Token = "0x600208E")]
		[Address(RVA = "0xC7D3F0", Offset = "0xC7D3F0", VA = "0xC7D3F0")]
		public EggState(CreatureType creatureType, float timeUntilHatching, float timeUntilRemoval, bool didHatch)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000558")]
	public struct BreedVariation
	{
		[Token(Token = "0x4001FAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public CreatureType CreatureType;

		[Token(Token = "0x4001FAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public CreaturePattern Pattern;

		[Token(Token = "0x4001FB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public CreatureColors Colors;

		[Token(Token = "0x4001FB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ExpressionSet EyeExpressions;

		[Token(Token = "0x4001FB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float VoicePitch;

		[Token(Token = "0x4001FB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x98032C", Offset = "0x98032C")]
		private uint <Seed>k__BackingField;

		[Token(Token = "0x17000367")]
		public uint Seed
		{
			[Token(Token = "0x600208F")]
			[Address(RVA = "0xA4E394", Offset = "0xA4E394", VA = "0xA4E394")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x992480", Offset = "0x992480")]
			get
			{
				return default(uint);
			}
			[Token(Token = "0x6002090")]
			[Address(RVA = "0xA4E39C", Offset = "0xA4E39C", VA = "0xA4E39C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x992490", Offset = "0x992490")]
			set
			{
			}
		}

		[Token(Token = "0x6002091")]
		[Address(RVA = "0xA4E3A4", Offset = "0xA4E3A4", VA = "0xA4E3A4")]
		public BreedVariation(uint seed, CreatureType creatureType, CreaturePattern creaturePattern, CreatureColors colors, ExpressionSet eyeExpressions, float pitch)
		{
		}
	}
	[Token(Token = "0x2000559")]
	public class BreedingVariationManager : ScriptableObject
	{
		[Token(Token = "0x4001FB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x98033C", Offset = "0x98033C")]
		private PuffkinBreedData DomesticPuffkinVariations;

		[Token(Token = "0x4001FB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private PuffkinBreedData WildPuffkinVariations;

		[Token(Token = "0x4001FB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x980398", Offset = "0x980398")]
		[SerializeField]
		private ManateeCowBreedData DomesticManateeCowVariations;

		[Token(Token = "0x4001FB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private ManateeCowBreedData WildManateeCowVariations;

		[Token(Token = "0x4001FB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9803F4", Offset = "0x9803F4")]
		[SerializeField]
		private MolesealBreedData DomesticMolesealVariations;

		[Token(Token = "0x4001FB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private MolesealBreedData WildMolesealVariations;

		[Token(Token = "0x6002092")]
		[Address(RVA = "0xC7CD44", Offset = "0xC7CD44", VA = "0xC7CD44")]
		public BreedVariation GenerateNewBreedVariation(CreatureType creatureType, bool isDomestic = true)
		{
			return default(BreedVariation);
		}

		[Token(Token = "0x6002093")]
		[Address(RVA = "0xC7CEE4", Offset = "0xC7CEE4", VA = "0xC7CEE4")]
		public BreedVariation GenerateBreedVariationFromSeed(CreatureType creatureType, uint seed, bool isDomestic = true)
		{
			return default(BreedVariation);
		}

		[Token(Token = "0x6002094")]
		[Address(RVA = "0xC7D00C", Offset = "0xC7D00C", VA = "0xC7D00C")]
		public CreatureGrowthData GetCreatureGrowthData(CreatureType creatureType, bool isDomestic = true)
		{
			return null;
		}

		[Token(Token = "0x6002095")]
		[Address(RVA = "0xC7CE88", Offset = "0xC7CE88", VA = "0xC7CE88")]
		private CreatureBreedData GetCreatureBreedData(CreatureType creatureType, bool isDomestic = true)
		{
			return null;
		}

		[Token(Token = "0x6002096")]
		[Address(RVA = "0xC7D110", Offset = "0xC7D110", VA = "0xC7D110")]
		public BreedingVariationManager()
		{
		}
	}
	[Token(Token = "0x200055A")]
	public abstract class CreatureBreedData : ScriptableObject
	{
		[Token(Token = "0x4001FBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public CreatureType CreatureType;

		[Token(Token = "0x4001FBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public bool IsDomestic;

		[Token(Token = "0x4001FBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x980450", Offset = "0x980450")]
		public List<EyeExpressionSet> EyeExpressions;

		[Token(Token = "0x4001FBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x980488", Offset = "0x980488")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x980488", Offset = "0x980488")]
		public float DownPitchRange;

		[Token(Token = "0x4001FBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9804E0", Offset = "0x9804E0")]
		public float UpPitchRange;

		[Token(Token = "0x6002097")]
		public abstract BreedVariation GetSeedVariation(uint seed);

		[Token(Token = "0x6002098")]
		public abstract CreaturePattern GetRandomPattern(ref Unity.Mathematics.Random rand);

		[Token(Token = "0x6002099")]
		public abstract CreatureColors GetRandomColor(ref Unity.Mathematics.Random rand);

		[Token(Token = "0x600209A")]
		[Address(RVA = "0xC7D140", Offset = "0xC7D140", VA = "0xC7D140")]
		public ExpressionSet GetRandomEyes(ref Unity.Mathematics.Random rand)
		{
			return null;
		}

		[Token(Token = "0x600209B")]
		[Address(RVA = "0xC7D1DC", Offset = "0xC7D1DC", VA = "0xC7D1DC")]
		public float GetRandomPitch(ref Unity.Mathematics.Random rand)
		{
			return default(float);
		}

		[Token(Token = "0x600209C")]
		public abstract CreatureGrowthData GetGrowthData();

		[Token(Token = "0x600209D")]
		[Address(RVA = "0xC7D224", Offset = "0xC7D224", VA = "0xC7D224")]
		protected CreatureBreedData()
		{
		}
	}
	[Token(Token = "0x200055B")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x974088", Offset = "0x974088")]
	public class ManateeCowBreedData : CreatureBreedData
	{
		[Token(Token = "0x4001FBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9804FC", Offset = "0x9804FC")]
		public List<ManateeCowPattern> Patterns;

		[Token(Token = "0x4001FC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public List<ManateeCowColorSet> ColorVariations;

		[Token(Token = "0x4001FC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x980534", Offset = "0x980534")]
		public ManateeCowGrowthData GrowthData;

		[Token(Token = "0x600209E")]
		[Address(RVA = "0xC7DF6C", Offset = "0xC7DF6C", VA = "0xC7DF6C")]
		public ManateeCowBreedData()
		{
		}

		[Token(Token = "0x600209F")]
		[Address(RVA = "0xC7E02C", Offset = "0xC7E02C", VA = "0xC7E02C", Slot = "4")]
		public override BreedVariation GetSeedVariation(uint seed)
		{
			return default(BreedVariation);
		}

		[Token(Token = "0x60020A0")]
		[Address(RVA = "0xC7E118", Offset = "0xC7E118", VA = "0xC7E118", Slot = "5")]
		public override CreaturePattern GetRandomPattern(ref Unity.Mathematics.Random rand)
		{
			return null;
		}

		[Token(Token = "0x60020A1")]
		[Address(RVA = "0xC7E1B4", Offset = "0xC7E1B4", VA = "0xC7E1B4", Slot = "6")]
		public override CreatureColors GetRandomColor(ref Unity.Mathematics.Random rand)
		{
			return null;
		}

		[Token(Token = "0x60020A2")]
		[Address(RVA = "0xC7E258", Offset = "0xC7E258", VA = "0xC7E258", Slot = "7")]
		public override CreatureGrowthData GetGrowthData()
		{
			return null;
		}
	}
	[Token(Token = "0x200055C")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x9740F4", Offset = "0x9740F4")]
	public class MolesealBreedData : CreatureBreedData
	{
		[Token(Token = "0x4001FC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x98056C", Offset = "0x98056C")]
		public List<MolesealPattern> Patterns;

		[Token(Token = "0x4001FC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public List<MolesealColorSet> ColorVariations;

		[Token(Token = "0x4001FC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9805A4", Offset = "0x9805A4")]
		public MolesealGrowthData GrowthData;

		[Token(Token = "0x60020A3")]
		[Address(RVA = "0xC7E260", Offset = "0xC7E260", VA = "0xC7E260")]
		public MolesealBreedData()
		{
		}

		[Token(Token = "0x60020A4")]
		[Address(RVA = "0xC7E320", Offset = "0xC7E320", VA = "0xC7E320", Slot = "4")]
		public override BreedVariation GetSeedVariation(uint seed)
		{
			return default(BreedVariation);
		}

		[Token(Token = "0x60020A5")]
		[Address(RVA = "0xC7E40C", Offset = "0xC7E40C", VA = "0xC7E40C", Slot = "5")]
		public override CreaturePattern GetRandomPattern(ref Unity.Mathematics.Random rand)
		{
			return null;
		}

		[Token(Token = "0x60020A6")]
		[Address(RVA = "0xC7E4A8", Offset = "0xC7E4A8", VA = "0xC7E4A8", Slot = "6")]
		public override CreatureColors GetRandomColor(ref Unity.Mathematics.Random rand)
		{
			return null;
		}

		[Token(Token = "0x60020A7")]
		[Address(RVA = "0xC7E54C", Offset = "0xC7E54C", VA = "0xC7E54C", Slot = "7")]
		public override CreatureGrowthData GetGrowthData()
		{
			return null;
		}
	}
	[Token(Token = "0x200055D")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x974160", Offset = "0x974160")]
	public class PuffkinBreedData : CreatureBreedData
	{
		[Token(Token = "0x4001FC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9805DC", Offset = "0x9805DC")]
		public List<PuffkinPattern> Patterns;

		[Token(Token = "0x4001FC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public List<PuffkinColorSet> ColorVariations;

		[Token(Token = "0x4001FC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x980614", Offset = "0x980614")]
		public PuffkinGrowthData GrowthData;

		[Token(Token = "0x60020A8")]
		[Address(RVA = "0xC7E600", Offset = "0xC7E600", VA = "0xC7E600")]
		public PuffkinBreedData()
		{
		}

		[Token(Token = "0x60020A9")]
		[Address(RVA = "0xC7E6C0", Offset = "0xC7E6C0", VA = "0xC7E6C0", Slot = "4")]
		public override BreedVariation GetSeedVariation(uint seed)
		{
			return default(BreedVariation);
		}

		[Token(Token = "0x60020AA")]
		[Address(RVA = "0xC7E7AC", Offset = "0xC7E7AC", VA = "0xC7E7AC", Slot = "5")]
		public override CreaturePattern GetRandomPattern(ref Unity.Mathematics.Random rand)
		{
			return null;
		}

		[Token(Token = "0x60020AB")]
		[Address(RVA = "0xC7E848", Offset = "0xC7E848", VA = "0xC7E848", Slot = "6")]
		public override CreatureColors GetRandomColor(ref Unity.Mathematics.Random rand)
		{
			return null;
		}

		[Token(Token = "0x60020AC")]
		[Address(RVA = "0xC7E8EC", Offset = "0xC7E8EC", VA = "0xC7E8EC", Slot = "7")]
		public override CreatureGrowthData GetGrowthData()
		{
			return null;
		}
	}
}
namespace NeatCorp.Creatures.Breeding.Pattern
{
	[Token(Token = "0x200055E")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x9741CC", Offset = "0x9741CC")]
	public class ManateeCowPattern : CreaturePattern
	{
		[Token(Token = "0x60020AD")]
		[Address(RVA = "0xC7E5D0", Offset = "0xC7E5D0", VA = "0xC7E5D0")]
		public ManateeCowPattern()
		{
		}
	}
	[Token(Token = "0x200055F")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x974238", Offset = "0x974238")]
	public class MolesealPattern : CreaturePattern
	{
		[Token(Token = "0x60020AE")]
		[Address(RVA = "0xC7E5D4", Offset = "0xC7E5D4", VA = "0xC7E5D4")]
		public MolesealPattern()
		{
		}
	}
	[Token(Token = "0x2000560")]
	public class CreaturePattern : ScriptableObject
	{
		[Token(Token = "0x4001FC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool IsDomestic;

		[Token(Token = "0x4001FC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Vector2 UV;

		[Token(Token = "0x4001FCA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float Strength;

		[Token(Token = "0x60020AF")]
		[Address(RVA = "0xC7E554", Offset = "0xC7E554", VA = "0xC7E554")]
		public CreaturePattern()
		{
		}
	}
	[Token(Token = "0x2000561")]
	public class PatternController : MonoBehaviour
	{
		[Token(Token = "0x4001FCB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GradientColorer m_gradientColorer;

		[Token(Token = "0x60020B0")]
		[Address(RVA = "0xC7E5D8", Offset = "0xC7E5D8", VA = "0xC7E5D8")]
		public void SetPattern(CreaturePattern pattern, [Optional] Color color)
		{
		}

		[Token(Token = "0x60020B1")]
		[Address(RVA = "0xC7E5F4", Offset = "0xC7E5F4", VA = "0xC7E5F4")]
		public PatternController()
		{
		}
	}
	[Token(Token = "0x2000562")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x9742A4", Offset = "0x9742A4")]
	public class PuffkinPattern : CreaturePattern
	{
		[Token(Token = "0x60020B2")]
		[Address(RVA = "0xC7E5FC", Offset = "0xC7E5FC", VA = "0xC7E5FC")]
		public PuffkinPattern()
		{
		}
	}
}
namespace NeatCorp.Creatures.Breeding.Expression
{
	[Token(Token = "0x2000563")]
	public enum AesteticsType
	{
		[Token(Token = "0x4001FCD")]
		Eyes,
		[Token(Token = "0x4001FCE")]
		Mouth,
		[Token(Token = "0x4001FCF")]
		Forehead
	}
	[Token(Token = "0x2000564")]
	public class ExpressionSet : ScriptableObject
	{
		[Token(Token = "0x4001FD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public CreatureTypeFlag CreatureTypes;

		[Token(Token = "0x4001FD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Texture2D Texture;

		[Token(Token = "0x4001FD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x98065C", Offset = "0x98065C")]
		private AesteticsType <AesteticsType>k__BackingField;

		[Token(Token = "0x17000368")]
		public AesteticsType AesteticsType
		{
			[Token(Token = "0x60020B3")]
			[Address(RVA = "0xC7DDE8", Offset = "0xC7DDE8", VA = "0xC7DDE8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9924A0", Offset = "0x9924A0")]
			get
			{
				return default(AesteticsType);
			}
			[Token(Token = "0x60020B4")]
			[Address(RVA = "0xC7DDF0", Offset = "0xC7DDF0", VA = "0xC7DDF0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9924B0", Offset = "0x9924B0")]
			protected set
			{
			}
		}

		[Token(Token = "0x60020B5")]
		[Address(RVA = "0xC7DDF8", Offset = "0xC7DDF8", VA = "0xC7DDF8")]
		public ExpressionSet()
		{
		}
	}
	[Token(Token = "0x2000565")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x974310", Offset = "0x974310")]
	public class EyeExpressionSet : ExpressionSet
	{
		[Token(Token = "0x60020B6")]
		[Address(RVA = "0xC7DE00", Offset = "0xC7DE00", VA = "0xC7DE00")]
		public EyeExpressionSet()
		{
		}
	}
	[Token(Token = "0x2000566")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x97437C", Offset = "0x97437C")]
	public class ForeheadExpressionSet : ExpressionSet
	{
		[Token(Token = "0x60020B7")]
		[Address(RVA = "0xC7DE28", Offset = "0xC7DE28", VA = "0xC7DE28")]
		public ForeheadExpressionSet()
		{
		}
	}
	[Token(Token = "0x2000567")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x9743E8", Offset = "0x9743E8")]
	public class MouthExpressionSet : ExpressionSet
	{
		[Token(Token = "0x60020B8")]
		[Address(RVA = "0xC7DE54", Offset = "0xC7DE54", VA = "0xC7DE54")]
		public MouthExpressionSet()
		{
		}
	}
}
namespace NeatCorp.Creatures.Breeding.ColorSet
{
	[Token(Token = "0x2000568")]
	public class CreatureColorSet : ScriptableObject
	{
		[Token(Token = "0x4001FD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool IsDomestic;

		[Token(Token = "0x60020B9")]
		[Address(RVA = "0xC7D118", Offset = "0xC7D118", VA = "0xC7D118")]
		public CreatureColorSet()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000569")]
	public class CreatureColors
	{
		[Token(Token = "0x4001FD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Color PatternColor;

		[Token(Token = "0x60020BA")]
		[Address(RVA = "0xC7D120", Offset = "0xC7D120", VA = "0xC7D120")]
		public CreatureColors()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200056A")]
	public struct GradientColors
	{
		[Token(Token = "0x4001FD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Color Bright;

		[Token(Token = "0x4001FD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Color Mid;

		[Token(Token = "0x4001FD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Color Dark;
	}
	[Token(Token = "0x200056B")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x974454", Offset = "0x974454")]
	public class ManateeCowColorSet : CreatureColorSet
	{
		[Token(Token = "0x4001FD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ManateeCowColors Colors;

		[Token(Token = "0x60020BB")]
		[Address(RVA = "0xC7D128", Offset = "0xC7D128", VA = "0xC7D128")]
		public ManateeCowColorSet()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200056C")]
	public class ManateeCowColors : CreatureColors
	{
		[Token(Token = "0x4001FD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GradientColors GradientColors;
	}
	[Token(Token = "0x200056D")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x9744C0", Offset = "0x9744C0")]
	public class MolesealColorSet : CreatureColorSet
	{
		[Token(Token = "0x4001FDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MolesealColors Colors;

		[Token(Token = "0x60020BC")]
		[Address(RVA = "0xC7D130", Offset = "0xC7D130", VA = "0xC7D130")]
		public MolesealColorSet()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200056E")]
	public class MolesealColors : CreatureColors
	{
		[Token(Token = "0x4001FDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GradientColors GradientColors;
	}
	[Token(Token = "0x200056F")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x97452C", Offset = "0x97452C")]
	public class PuffkinColorSet : CreatureColorSet
	{
		[Token(Token = "0x4001FDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PuffkinColors Colors;

		[Token(Token = "0x60020BD")]
		[Address(RVA = "0xC7D138", Offset = "0xC7D138", VA = "0xC7D138")]
		public PuffkinColorSet()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000570")]
	public class PuffkinColors : CreatureColors
	{
		[Token(Token = "0x4001FDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GradientColors GradientColors;
	}
}
namespace NeatCorp.Creatures.Breeding.Growth
{
	[Token(Token = "0x2000571")]
	public class CreatureGrowthData : ScriptableObject
	{
		[Token(Token = "0x4001FDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GrowthState[] GrowthStates;

		[Token(Token = "0x4001FDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x98066C", Offset = "0x98066C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x98066C", Offset = "0x98066C")]
		public float Body;

		[Token(Token = "0x4001FE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9806C4", Offset = "0x9806C4")]
		public float Head;

		[Token(Token = "0x4001FE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9806E0", Offset = "0x9806E0")]
		public float Eyes;

		[Token(Token = "0x4001FE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[HideInInspector]
		public uint TotalGrowthDuration;

		[Token(Token = "0x60020BE")]
		[Address(RVA = "0xC7DE80", Offset = "0xC7DE80", VA = "0xC7DE80")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x60020BF")]
		[Address(RVA = "0xC7DECC", Offset = "0xC7DECC", VA = "0xC7DECC")]
		public GrowthStateType GetGrowthStateType(float age)
		{
			return default(GrowthStateType);
		}

		[Token(Token = "0x60020C0")]
		[Address(RVA = "0xC7DF34", Offset = "0xC7DF34", VA = "0xC7DF34")]
		public CreatureGrowthData()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000572")]
	public struct GrowthState
	{
		[Token(Token = "0x4001FE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public GrowthStateType StateType;

		[Token(Token = "0x4001FE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public uint StateDuration;
	}
	[Token(Token = "0x2000573")]
	public enum GrowthStateType
	{
		[Token(Token = "0x4001FE6")]
		Infant,
		[Token(Token = "0x4001FE7")]
		Child,
		[Token(Token = "0x4001FE8")]
		Teen,
		[Token(Token = "0x4001FE9")]
		Mature
	}
	[Token(Token = "0x2000574")]
	[Flags]
	public enum GrowthStateTypeFlag
	{
		[Token(Token = "0x4001FEB")]
		Infant = 1,
		[Token(Token = "0x4001FEC")]
		Child = 2,
		[Token(Token = "0x4001FED")]
		Teen = 4,
		[Token(Token = "0x4001FEE")]
		Mature = 8
	}
	[Token(Token = "0x2000575")]
	public static class CreatureGrowthStateTypeMask
	{
		[Token(Token = "0x60020C1")]
		[Address(RVA = "0xC7DF3C", Offset = "0xC7DF3C", VA = "0xC7DF3C")]
		public static bool ContainsFlag(this int mask, GrowthStateTypeFlag flag)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000576")]
	public static class GrowthStateTypeExtensions
	{
		[Token(Token = "0x60020C2")]
		[Address(RVA = "0xC7DF48", Offset = "0xC7DF48", VA = "0xC7DF48")]
		public static GrowthStateTypeFlag AsFlag(this GrowthStateType type)
		{
			return default(GrowthStateTypeFlag);
		}
	}
	[Token(Token = "0x2000577")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x9745C8", Offset = "0x9745C8")]
	public class ManateeCowGrowthData : CreatureGrowthData
	{
		[Token(Token = "0x60020C3")]
		[Address(RVA = "0xC7DF54", Offset = "0xC7DF54", VA = "0xC7DF54")]
		public ManateeCowGrowthData()
		{
		}
	}
	[Token(Token = "0x2000578")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x974634", Offset = "0x974634")]
	public class MolesealGrowthData : CreatureGrowthData
	{
		[Token(Token = "0x60020C4")]
		[Address(RVA = "0xC7DF5C", Offset = "0xC7DF5C", VA = "0xC7DF5C")]
		public MolesealGrowthData()
		{
		}
	}
	[Token(Token = "0x2000579")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x9746A0", Offset = "0x9746A0")]
	public class PuffkinGrowthData : CreatureGrowthData
	{
		[Token(Token = "0x60020C5")]
		[Address(RVA = "0xC7DF64", Offset = "0xC7DF64", VA = "0xC7DF64")]
		public PuffkinGrowthData()
		{
		}
	}
}
namespace NeatCorp.Creatures.Birds
{
	[Token(Token = "0x200057A")]
	public static class BirdAnimation
	{
		[Token(Token = "0x4001FEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static int IdleParamId;

		[Token(Token = "0x4001FF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public static int EatingParamId;

		[Token(Token = "0x4001FF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static int FlappingParamId;

		[Token(Token = "0x4001FF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public static int HoveringParamId;

		[Token(Token = "0x4001FF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static int HeldParamId;

		[Token(Token = "0x4001FF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public static int FallingParamId;

		[Token(Token = "0x4001FF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static int PoofedUpParamId;

		[Token(Token = "0x4001FF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public static int PickedUpParamId;

		[Token(Token = "0x4001FF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public static int PettingParamId;

		[Token(Token = "0x4001FF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public static int StartledParamId;
	}
	[Token(Token = "0x200057B")]
	public class BirdBehavior : MonoBehaviour, IBird
	{
		[Token(Token = "0x4001FF9")]
		private const float DefaultFlightSpeed = 1.1f;

		[Token(Token = "0x4001FFA")]
		private const float DefaultLandingSpeed = 0.8f;

		[Token(Token = "0x4001FFB")]
		private const float DefaultRotationSpeed = 2f;

		[Token(Token = "0x4001FFC")]
		private const float GroundProjectionDistance = 0.3f;

		[Token(Token = "0x4001FFD")]
		private const float MinLandingVelocity = 4.0000004E-06f;

		[Token(Token = "0x4001FFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		protected BirdType m_birdType;

		[Token(Token = "0x4001FFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		protected Animator m_animator;

		[Token(Token = "0x4002000")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		protected Collider m_collider;

		[Token(Token = "0x4002001")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		protected float m_flightSpeed;

		[Token(Token = "0x4002002")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[SerializeField]
		protected float m_landingSpeed;

		[Token(Token = "0x4002003")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		protected float m_rotationSpeed;

		[Token(Token = "0x4002004")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private BirdBehaviorState m_currentState;

		[Token(Token = "0x4002005")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private BirdInterestPoint m_occupiedInterestPoint;

		[Token(Token = "0x4002006")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private RaycastHit m_hitInfo;

		[Token(Token = "0x4002007")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private Vector3 m_randomOffset;

		[Token(Token = "0x4002008")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Vector3 m_startPos;

		[Token(Token = "0x4002009")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private Vector3 m_targetPos;

		[Token(Token = "0x400200A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private float m_randomIdleWaitTime;

		[Token(Token = "0x400200B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		private float m_distanceLeftToTarget;

		[Token(Token = "0x400200C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private Pettable[] m_pettables;

		[Token(Token = "0x400200D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private float m_randomGroundTime;

		[Token(Token = "0x400200E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		private Vector3 m_dirToTarget;

		[Token(Token = "0x400200F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private float m_flightPathDistance;

		[Token(Token = "0x4002010")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private BezierData m_flightPath;

		[Token(Token = "0x4002011")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private float m_distanceTraveled;

		[Token(Token = "0x4002012")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		protected BirdSpawnPoint m_currentSpawnPoint;

		[Token(Token = "0x4002013")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		protected bool m_isGrabbable;

		[Token(Token = "0x4002014")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		protected Grabbable m_grabbable;

		[Token(Token = "0x4002015")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		protected float m_randomEatTime;

		[Token(Token = "0x4002016")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		protected float m_timeInCurrentState;

		[Token(Token = "0x4002017")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		protected Collider m_birdCollider;

		[Token(Token = "0x4002018")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		public Vector3 m_currentTargetPoint;

		[Token(Token = "0x4002019")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
		private bool m_shouldEatAfterLanding;

		[Token(Token = "0x17000369")]
		public BirdType BirdType
		{
			[Token(Token = "0x60020C7")]
			[Address(RVA = "0x1045890", Offset = "0x1045890", VA = "0x1045890")]
			get
			{
				return default(BirdType);
			}
		}

		[Token(Token = "0x1700036A")]
		public Animator Animator
		{
			[Token(Token = "0x60020C8")]
			[Address(RVA = "0x1045898", Offset = "0x1045898", VA = "0x1045898")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700036B")]
		public BirdBehaviorState CurrentState
		{
			[Token(Token = "0x60020C9")]
			[Address(RVA = "0x10458A0", Offset = "0x10458A0", VA = "0x10458A0")]
			get
			{
				return default(BirdBehaviorState);
			}
			[Token(Token = "0x60020CA")]
			[Address(RVA = "0x10458A8", Offset = "0x10458A8", VA = "0x10458A8")]
			protected set
			{
			}
		}

		[Token(Token = "0x60020CB")]
		[Address(RVA = "0x10458B0", Offset = "0x10458B0", VA = "0x10458B0", Slot = "5")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x60020CC")]
		[Address(RVA = "0x1045990", Offset = "0x1045990", VA = "0x1045990")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60020CD")]
		[Address(RVA = "0x104599C", Offset = "0x104599C", VA = "0x104599C", Slot = "6")]
		protected virtual void OnEnable()
		{
		}

		[Token(Token = "0x60020CE")]
		[Address(RVA = "0x10459A0", Offset = "0x10459A0", VA = "0x10459A0", Slot = "7")]
		public virtual void ResetValues()
		{
		}

		[Token(Token = "0x60020CF")]
		[Address(RVA = "0x1045A94", Offset = "0x1045A94", VA = "0x1045A94")]
		public void SetSpawnPoint(BirdSpawnPoint spawnPoint)
		{
		}

		[Token(Token = "0x60020D0")]
		[Address(RVA = "0x1045B90", Offset = "0x1045B90", VA = "0x1045B90")]
		private void Update()
		{
		}

		[Token(Token = "0x60020D1")]
		[Address(RVA = "0x1047620", Offset = "0x1047620", VA = "0x1047620")]
		public bool TrySetFlightTargetToCurrentSpawnPoint()
		{
			return default(bool);
		}

		[Token(Token = "0x60020D2")]
		[Address(RVA = "0x1047710", Offset = "0x1047710", VA = "0x1047710", Slot = "8")]
		public virtual void SwitchToState(BirdBehaviorState state)
		{
		}

		[Token(Token = "0x60020D3")]
		[Address(RVA = "0x1047098", Offset = "0x1047098", VA = "0x1047098")]
		private void SetFlightPath()
		{
		}

		[Token(Token = "0x60020D4")]
		[Address(RVA = "0x1047338", Offset = "0x1047338", VA = "0x1047338")]
		private void UpdateAnimationState()
		{
		}

		[Token(Token = "0x60020D5")]
		[Address(RVA = "0x10475CC", Offset = "0x10475CC", VA = "0x10475CC")]
		private void UpdatePhysicsState()
		{
		}

		[Token(Token = "0x60020D6")]
		[Address(RVA = "0x1047920", Offset = "0x1047920", VA = "0x1047920")]
		private void CheckGroundDistance()
		{
		}

		[Token(Token = "0x60020D7")]
		[Address(RVA = "0x1047BEC", Offset = "0x1047BEC", VA = "0x1047BEC", Slot = "4")]
		public BirdBehavior GetBehaviorComponent()
		{
			return null;
		}

		[Token(Token = "0x60020D8")]
		[Address(RVA = "0x1047BF0", Offset = "0x1047BF0", VA = "0x1047BF0")]
		public BirdBehavior()
		{
		}
	}
	[Token(Token = "0x200057C")]
	public enum BirdBehaviorState
	{
		[Token(Token = "0x400201B")]
		Idle,
		[Token(Token = "0x400201C")]
		Flying,
		[Token(Token = "0x400201D")]
		Landing,
		[Token(Token = "0x400201E")]
		HasPointOfInterest,
		[Token(Token = "0x400201F")]
		OnGround,
		[Token(Token = "0x4002020")]
		Held,
		[Token(Token = "0x4002021")]
		Floating,
		[Token(Token = "0x4002022")]
		Falling,
		[Token(Token = "0x4002023")]
		Flee,
		[Token(Token = "0x4002024")]
		NumStates
	}
	[Token(Token = "0x200057D")]
	public class BirdFlightBehavior : MonoBehaviour
	{
		[Token(Token = "0x200057E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x97470C", Offset = "0x97470C")]
		private sealed class <TryToLandAfterDuration>d__22 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002035")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002036")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002037")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public BirdFlightBehavior <>4__this;

			[Token(Token = "0x1700036C")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60020E4")]
				[Address(RVA = "0x10486D0", Offset = "0x10486D0", VA = "0x10486D0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700036D")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60020E6")]
				[Address(RVA = "0x1048738", Offset = "0x1048738", VA = "0x1048738", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60020E1")]
			[Address(RVA = "0x10484CC", Offset = "0x10484CC", VA = "0x10484CC")]
			[DebuggerHidden]
			public <TryToLandAfterDuration>d__22(int <>1__state)
			{
			}

			[Token(Token = "0x60020E2")]
			[Address(RVA = "0x1048584", Offset = "0x1048584", VA = "0x1048584", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60020E3")]
			[Address(RVA = "0x1048588", Offset = "0x1048588", VA = "0x1048588", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60020E5")]
			[Address(RVA = "0x10486D8", Offset = "0x10486D8", VA = "0x10486D8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4002025")]
		private const float DefaultMinFlightDuration = 3f;

		[Token(Token = "0x4002026")]
		private const float DefaultMaxFlightDuration = 5f;

		[Token(Token = "0x4002027")]
		private const float DefaultMaxTeleportReaction = 1f;

		[Token(Token = "0x4002028")]
		private const float DefaultMaxSneakTeleportRange = 1.5f;

		[Token(Token = "0x4002029")]
		private const float DefaultMaxVelocity = 9f;

		[Token(Token = "0x400202A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private FlyingBirdBehavior m_flightBirdBehavior;

		[Token(Token = "0x400202B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float m_maxTeleportReaction;

		[Token(Token = "0x400202C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private float m_maxSneakTeleportRange;

		[Token(Token = "0x400202D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private float m_maxSneakVelocity;

		[Token(Token = "0x400202E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		private float m_minFlightDuration;

		[Token(Token = "0x400202F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private float m_maxFlightDuration;

		[Token(Token = "0x4002030")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[SerializeField]
		private Vector3 m_flightDirection;

		[Token(Token = "0x4002031")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Coroutine m_landingRoutine;

		[Token(Token = "0x4002032")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Collider m_colliderInsideTrigger;

		[Token(Token = "0x4002033")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private bool m_isPlayerWithinRange;

		[Token(Token = "0x4002034")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
		private bool m_isFleeing;

		[Token(Token = "0x60020D9")]
		[Address(RVA = "0x1047CC8", Offset = "0x1047CC8", VA = "0x1047CC8")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60020DA")]
		[Address(RVA = "0x1047CD0", Offset = "0x1047CD0", VA = "0x1047CD0")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x60020DB")]
		[Address(RVA = "0x1047FE4", Offset = "0x1047FE4", VA = "0x1047FE4")]
		private void OnTriggerExit(Collider other)
		{
		}

		[Token(Token = "0x60020DC")]
		[Address(RVA = "0x10480A4", Offset = "0x10480A4", VA = "0x10480A4")]
		private void Update()
		{
		}

		[Token(Token = "0x60020DD")]
		[Address(RVA = "0x10480B4", Offset = "0x10480B4", VA = "0x10480B4")]
		private void UpdateStartledBehavior()
		{
		}

		[Token(Token = "0x60020DE")]
		[Address(RVA = "0x1047DC4", Offset = "0x1047DC4", VA = "0x1047DC4")]
		private void Flee()
		{
		}

		[Token(Token = "0x60020DF")]
		[Address(RVA = "0x1048450", Offset = "0x1048450", VA = "0x1048450")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9924E0", Offset = "0x9924E0")]
		private IEnumerator TryToLandAfterDuration()
		{
			return null;
		}

		[Token(Token = "0x60020E0")]
		[Address(RVA = "0x10484F8", Offset = "0x10484F8", VA = "0x10484F8")]
		public BirdFlightBehavior()
		{
		}
	}
	[Token(Token = "0x200057F")]
	public class BirdInterestPoint : MonoBehaviour, IInitializable
	{
		[Token(Token = "0x4002038")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private BirdType[] m_attractedBirds;

		[Token(Token = "0x4002039")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float m_range;

		[Token(Token = "0x400203A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public bool randomizeOffset;

		[Token(Token = "0x400203B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9807FC", Offset = "0x9807FC")]
		private bool <IsOccupied>k__BackingField;

		[Token(Token = "0x400203C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x26")]
		private bool initialized;

		[Token(Token = "0x1700036E")]
		public bool IsOccupied
		{
			[Token(Token = "0x60020E7")]
			[Address(RVA = "0x1048740", Offset = "0x1048740", VA = "0x1048740")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x992594", Offset = "0x992594")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60020E8")]
			[Address(RVA = "0x1048748", Offset = "0x1048748", VA = "0x1048748")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9925A4", Offset = "0x9925A4")]
			private set
			{
			}
		}

		[Token(Token = "0x1700036F")]
		public bool HasBeenInitialized
		{
			[Token(Token = "0x60020E9")]
			[Address(RVA = "0x1048754", Offset = "0x1048754", VA = "0x1048754")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000370")]
		public float Range
		{
			[Token(Token = "0x60020EA")]
			[Address(RVA = "0x104875C", Offset = "0x104875C", VA = "0x104875C")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000371")]
		public BirdType[] AttractedBirdTypes
		{
			[Token(Token = "0x60020EB")]
			[Address(RVA = "0x1048764", Offset = "0x1048764", VA = "0x1048764")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60020EC")]
		[Address(RVA = "0x104876C", Offset = "0x104876C", VA = "0x104876C", Slot = "4")]
		public void Initialize()
		{
		}

		[Token(Token = "0x60020ED")]
		[Address(RVA = "0x1045B78", Offset = "0x1045B78", VA = "0x1045B78")]
		public void Occupy(bool occupied)
		{
		}

		[Token(Token = "0x60020EE")]
		[Address(RVA = "0x1048860", Offset = "0x1048860", VA = "0x1048860")]
		public BirdInterestPoint()
		{
		}
	}
	[Token(Token = "0x2000580")]
	public class BirdSpawnPoint : MonoBehaviour, IInitializable
	{
		[Token(Token = "0x400203D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private BirdType m_birdType;

		[Token(Token = "0x400203E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private bool spawnBirdOnStart;

		[Token(Token = "0x400203F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x98082C", Offset = "0x98082C")]
		private bool <IsOccupied>k__BackingField;

		[Token(Token = "0x4002040")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E")]
		private bool initialized;

		[Token(Token = "0x17000372")]
		public bool IsOccupied
		{
			[Token(Token = "0x60020EF")]
			[Address(RVA = "0x10488D4", Offset = "0x10488D4", VA = "0x10488D4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9925B4", Offset = "0x9925B4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60020F0")]
			[Address(RVA = "0x10488DC", Offset = "0x10488DC", VA = "0x10488DC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9925C4", Offset = "0x9925C4")]
			private set
			{
			}
		}

		[Token(Token = "0x17000373")]
		public BirdType BirdType
		{
			[Token(Token = "0x60020F1")]
			[Address(RVA = "0x10488E8", Offset = "0x10488E8", VA = "0x10488E8")]
			get
			{
				return default(BirdType);
			}
		}

		[Token(Token = "0x60020F2")]
		[Address(RVA = "0x10488F0", Offset = "0x10488F0", VA = "0x10488F0", Slot = "4")]
		public void Initialize()
		{
		}

		[Token(Token = "0x60020F3")]
		[Address(RVA = "0x1048B0C", Offset = "0x1048B0C", VA = "0x1048B0C")]
		public void OnBirdSpawned(SpawnOperationCallbackData data)
		{
		}

		[Token(Token = "0x60020F4")]
		[Address(RVA = "0x1045B84", Offset = "0x1045B84", VA = "0x1045B84")]
		public void Occupy(bool occupied)
		{
		}

		[Token(Token = "0x60020F5")]
		[Address(RVA = "0x1048DF0", Offset = "0x1048DF0", VA = "0x1048DF0")]
		public BirdSpawnPoint()
		{
		}
	}
	[Token(Token = "0x2000581")]
	public class BirdSpawner : MonoBehaviour
	{
		[Token(Token = "0x2000582")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x97471C", Offset = "0x97471C")]
		private sealed class <WaitForDependenciesInit>d__24 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002058")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002059")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400205A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public BirdSpawner <>4__this;

			[Token(Token = "0x17000374")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600211E")]
				[Address(RVA = "0x104B40C", Offset = "0x104B40C", VA = "0x104B40C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000375")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002120")]
				[Address(RVA = "0x104B474", Offset = "0x104B474", VA = "0x104B474", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600211B")]
			[Address(RVA = "0x1049064", Offset = "0x1049064", VA = "0x1049064")]
			[DebuggerHidden]
			public <WaitForDependenciesInit>d__24(int <>1__state)
			{
			}

			[Token(Token = "0x600211C")]
			[Address(RVA = "0x104B230", Offset = "0x104B230", VA = "0x104B230", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600211D")]
			[Address(RVA = "0x104B234", Offset = "0x104B234", VA = "0x104B234", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600211F")]
			[Address(RVA = "0x104B414", Offset = "0x104B414", VA = "0x104B414", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4002041")]
		public const float TemporaryStayDuration = 30f;

		[Token(Token = "0x4002042")]
		private const float MaxDistance = 20f;

		[Token(Token = "0x4002043")]
		private const float RemovalSqrDistance = 100f;

		[Token(Token = "0x4002044")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static BirdSpawner Instance;

		[Token(Token = "0x4002045")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private AssetReference m_blowBirbPrefab;

		[Token(Token = "0x4002046")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private AssetReference m_bullfinkPrefab;

		[Token(Token = "0x4002047")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private AssetReference m_owlBirdPrefab;

		[Token(Token = "0x4002048")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private AssetReference m_ravenPrefab;

		[Token(Token = "0x4002049")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private AssetReference m_duckPrefab;

		[Token(Token = "0x400204A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private BirdType[] m_dayBirds;

		[Token(Token = "0x400204B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private int m_targetNumberOfDayBirds;

		[Token(Token = "0x400204C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private BirdType[] m_nightBirds;

		[Token(Token = "0x400204D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private int m_targetNumberOfNightBirds;

		[Token(Token = "0x400204E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[SerializeField]
		private bool m_printDebug;

		[Token(Token = "0x400204F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private SpawnedBirdsData m_spawnedBlowBirbs;

		[Token(Token = "0x4002050")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private SpawnedBirdsData m_spawnedBullfinks;

		[Token(Token = "0x4002051")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private SpawnedBirdsData m_spawnedOwls;

		[Token(Token = "0x4002052")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private SpawnedBirdsData m_spawnedRavens;

		[Token(Token = "0x4002053")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		private SpawnedBirdsData m_spawnedDucks;

		[Token(Token = "0x4002054")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		private SpawnedBirdsData m_undefinedBirds;

		[Token(Token = "0x4002055")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		private List<BirdSpawnPoint> m_spawnPoints;

		[Token(Token = "0x4002056")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		private List<BirdInterestPoint> m_interestPoints;

		[Token(Token = "0x4002057")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		private WorldZoneID m_currentWorldZoneId;

		[Token(Token = "0x60020F6")]
		[Address(RVA = "0x1048E00", Offset = "0x1048E00", VA = "0x1048E00")]
		private void Awake()
		{
		}

		[Token(Token = "0x60020F7")]
		[Address(RVA = "0x1048FE8", Offset = "0x1048FE8", VA = "0x1048FE8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9925D4", Offset = "0x9925D4")]
		private IEnumerator WaitForDependenciesInit()
		{
			return null;
		}

		[Token(Token = "0x60020F8")]
		[Address(RVA = "0x1049090", Offset = "0x1049090", VA = "0x1049090")]
		private void OnWorldZoneChanged(WorldZone newWorldZone)
		{
		}

		[Token(Token = "0x60020F9")]
		[Address(RVA = "0x104918C", Offset = "0x104918C", VA = "0x104918C")]
		private void InitializeTimeOfDayEvents()
		{
		}

		[Token(Token = "0x60020FA")]
		[Address(RVA = "0x1049404", Offset = "0x1049404", VA = "0x1049404")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60020FB")]
		[Address(RVA = "0x10495C8", Offset = "0x10495C8", VA = "0x10495C8")]
		private void OnNewHourOfDay(int hour)
		{
		}

		[Token(Token = "0x60020FC")]
		[Address(RVA = "0x10492A4", Offset = "0x10492A4", VA = "0x10492A4")]
		private bool IsNight(int hour)
		{
			return default(bool);
		}

		[Token(Token = "0x60020FD")]
		[Address(RVA = "0x10492B4", Offset = "0x10492B4", VA = "0x10492B4")]
		private void UpdateTimeSpecificBirds(bool isNight)
		{
		}

		[Token(Token = "0x60020FE")]
		[Address(RVA = "0x1048ED8", Offset = "0x1048ED8", VA = "0x1048ED8")]
		private void CheckAsset(ref AssetReference asset, int num)
		{
		}

		[Token(Token = "0x60020FF")]
		[Address(RVA = "0x1049694", Offset = "0x1049694", VA = "0x1049694")]
		private void Update()
		{
		}

		[Token(Token = "0x6002100")]
		[Address(RVA = "0x10497E0", Offset = "0x10497E0", VA = "0x10497E0")]
		private bool TryUpdateBirdSpawn(ref SpawnedBirdsData data)
		{
			return default(bool);
		}

		[Token(Token = "0x6002101")]
		[Address(RVA = "0x1049EB8", Offset = "0x1049EB8", VA = "0x1049EB8")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x992638", Offset = "0x992638")]
		private void DebugPrintAllBirds()
		{
		}

		[Token(Token = "0x6002102")]
		[Address(RVA = "0x1049EBC", Offset = "0x1049EBC", VA = "0x1049EBC")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x992670", Offset = "0x992670")]
		private void DebugPrintBirdType(SpawnedBirdsData data)
		{
		}

		[Token(Token = "0x6002103")]
		[Address(RVA = "0x1049EC0", Offset = "0x1049EC0", VA = "0x1049EC0")]
		public void ResetSystem()
		{
		}

		[Token(Token = "0x6002104")]
		[Address(RVA = "0x1048A58", Offset = "0x1048A58", VA = "0x1048A58")]
		public void AddSpawnPoint(BirdSpawnPoint point)
		{
		}

		[Token(Token = "0x6002105")]
		[Address(RVA = "0x1049F30", Offset = "0x1049F30", VA = "0x1049F30")]
		public void RemoveSpawnPoint(BirdSpawnPoint point)
		{
		}

		[Token(Token = "0x6002106")]
		[Address(RVA = "0x10487F8", Offset = "0x10487F8", VA = "0x10487F8")]
		public void AddInterestPoint(BirdInterestPoint point)
		{
		}

		[Token(Token = "0x6002107")]
		[Address(RVA = "0x1049FD4", Offset = "0x1049FD4", VA = "0x1049FD4")]
		public void RemoveInterestPoint(BirdInterestPoint point)
		{
		}

		[Token(Token = "0x6002108")]
		[Address(RVA = "0x1049928", Offset = "0x1049928", VA = "0x1049928")]
		private bool TryGetAnyAvailableSpawnPoint(BirdType birdType, out BirdSpawnPoint availablePoint)
		{
			return default(bool);
		}

		[Token(Token = "0x6002109")]
		[Address(RVA = "0x1048AC0", Offset = "0x1048AC0", VA = "0x1048AC0")]
		public void SpawnBirdAtPoint(BirdSpawnPoint point, BirdType birdType)
		{
		}

		[Token(Token = "0x600210A")]
		[Address(RVA = "0x104A078", Offset = "0x104A078", VA = "0x104A078")]
		private int GetNumberOfBirdsSpawnsOfTypeInRange(BirdType birdType, Vector3 point, float maxDistance)
		{
			return default(int);
		}

		[Token(Token = "0x600210B")]
		[Address(RVA = "0x1046DC8", Offset = "0x1046DC8", VA = "0x1046DC8")]
		public BirdInterestPoint OccupyInterestingPointInRange(Vector3 point, float maxDistance)
		{
			return null;
		}

		[Token(Token = "0x600210C")]
		[Address(RVA = "0x104A278", Offset = "0x104A278", VA = "0x104A278")]
		public bool TryToSpawnBirdNearPoint(BirdType birdType, Vector3 point, float maxDistance)
		{
			return default(bool);
		}

		[Token(Token = "0x600210D")]
		[Address(RVA = "0x1049D38", Offset = "0x1049D38", VA = "0x1049D38")]
		private bool TryDespawnBird(BirdType birdType)
		{
			return default(bool);
		}

		[Token(Token = "0x600210E")]
		[Address(RVA = "0x104A644", Offset = "0x104A644", VA = "0x104A644")]
		private bool CanRemoveBirdAtPos(Vector3 pos)
		{
			return default(bool);
		}

		[Token(Token = "0x600210F")]
		[Address(RVA = "0x1049130", Offset = "0x1049130", VA = "0x1049130")]
		private void RemoveAllDestroyedBirds(bool reset = false)
		{
		}

		[Token(Token = "0x6002110")]
		[Address(RVA = "0x104A798", Offset = "0x104A798", VA = "0x104A798")]
		private void RemoveDestroyedBirds(ref SpawnedBirdsData data, bool reset)
		{
		}

		[Token(Token = "0x6002111")]
		[Address(RVA = "0x1049A98", Offset = "0x1049A98", VA = "0x1049A98")]
		private bool TrySpawnBird(BirdType birdType, BirdSpawnPoint spawnPoint)
		{
			return default(bool);
		}

		[Token(Token = "0x6002112")]
		[Address(RVA = "0x104AA80", Offset = "0x104AA80", VA = "0x104AA80")]
		private bool TryFindInactiveBird(BirdType birdType, out GameObject birdObject)
		{
			return default(bool);
		}

		[Token(Token = "0x6002113")]
		[Address(RVA = "0x104ABF4", Offset = "0x104ABF4", VA = "0x104ABF4")]
		private GameObject FindReusableBirdOfType(BirdType birdType)
		{
			return null;
		}

		[Token(Token = "0x6002114")]
		[Address(RVA = "0x104A950", Offset = "0x104A950", VA = "0x104A950")]
		private bool CanSpawnBirdAtThisTime(BirdType birdType)
		{
			return default(bool);
		}

		[Token(Token = "0x6002115")]
		[Address(RVA = "0x1048BD4", Offset = "0x1048BD4", VA = "0x1048BD4")]
		public void SetupSpawnedBird(GameObject birdObject, BirdSpawnPoint spawnPoint, bool isNew = false)
		{
		}

		[Token(Token = "0x6002116")]
		[Address(RVA = "0x10495D8", Offset = "0x10495D8", VA = "0x10495D8")]
		private unsafe ref SpawnedBirdsData GetSpawnedBirdsDataFromType(BirdType birdType)
		{
			return ref *(SpawnedBirdsData*)null;
		}

		[Token(Token = "0x6002117")]
		[Address(RVA = "0x104A8A0", Offset = "0x104A8A0", VA = "0x104A8A0")]
		private AssetReference GetBirdAssetFromType(BirdType birdType)
		{
			return null;
		}

		[Token(Token = "0x6002118")]
		[Address(RVA = "0x10481A8", Offset = "0x10481A8", VA = "0x10481A8")]
		public bool TryGetFreeBirdSpawnPointsNearTarget(BirdType birdType, Vector3 targetPos, out BirdSpawnPoint closestSpawnPoint, float overrideMaxDistance = 0f)
		{
			return default(bool);
		}

		[Token(Token = "0x6002119")]
		[Address(RVA = "0x104AEFC", Offset = "0x104AEFC", VA = "0x104AEFC")]
		public BirdSpawner()
		{
		}
	}
	[Token(Token = "0x2000583")]
	public enum BirdType
	{
		[Token(Token = "0x400205C")]
		Undefined,
		[Token(Token = "0x400205D")]
		Blowbirb,
		[Token(Token = "0x400205E")]
		Seagull,
		[Token(Token = "0x400205F")]
		Bullfink,
		[Token(Token = "0x4002060")]
		Owl,
		[Token(Token = "0x4002061")]
		Raven,
		[Token(Token = "0x4002062")]
		Duck
	}
	[Token(Token = "0x2000584")]
	public class BlowbirdBehavior : BirdBehavior
	{
		[Token(Token = "0x4002063")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		[SerializeField]
		private FloatAfterThrowing m_floatAfterThrowing;

		[Token(Token = "0x4002064")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		[SerializeField]
		private Collider m_normalCollider;

		[Token(Token = "0x4002065")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		[SerializeField]
		private Collider m_poofedUpCollider;

		[Token(Token = "0x6002121")]
		[Address(RVA = "0x104B47C", Offset = "0x104B47C", VA = "0x104B47C", Slot = "5")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6002122")]
		[Address(RVA = "0x104B4A8", Offset = "0x104B4A8", VA = "0x104B4A8", Slot = "6")]
		protected override void OnEnable()
		{
		}

		[Token(Token = "0x6002123")]
		[Address(RVA = "0x104B4AC", Offset = "0x104B4AC", VA = "0x104B4AC")]
		private void SetPoofedUpCollider(bool isPoofedUp)
		{
		}

		[Token(Token = "0x6002124")]
		[Address(RVA = "0x104B518", Offset = "0x104B518", VA = "0x104B518", Slot = "8")]
		public override void SwitchToState(BirdBehaviorState state)
		{
		}

		[Token(Token = "0x6002125")]
		[Address(RVA = "0x104B798", Offset = "0x104B798", VA = "0x104B798", Slot = "7")]
		public override void ResetValues()
		{
		}

		[Token(Token = "0x6002126")]
		[Address(RVA = "0x104B7D4", Offset = "0x104B7D4", VA = "0x104B7D4")]
		public BlowbirdBehavior()
		{
		}
	}
	[Token(Token = "0x2000585")]
	public class FloatAfterThrowing : MonoBehaviour
	{
		[Token(Token = "0x2000586")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x97472C", Offset = "0x97472C")]
		private sealed class <StartFloatingRoutine>d__31 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400207F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002080")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002081")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public FloatAfterThrowing <>4__this;

			[Token(Token = "0x4002082")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Grabbable grabbable;

			[Token(Token = "0x17000377")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002139")]
				[Address(RVA = "0x104C518", Offset = "0x104C518", VA = "0x104C518", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000378")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600213B")]
				[Address(RVA = "0x104C580", Offset = "0x104C580", VA = "0x104C580", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002136")]
			[Address(RVA = "0x104BE9C", Offset = "0x104BE9C", VA = "0x104BE9C")]
			[DebuggerHidden]
			public <StartFloatingRoutine>d__31(int <>1__state)
			{
			}

			[Token(Token = "0x6002137")]
			[Address(RVA = "0x104C2BC", Offset = "0x104C2BC", VA = "0x104C2BC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002138")]
			[Address(RVA = "0x104C2C0", Offset = "0x104C2C0", VA = "0x104C2C0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600213A")]
			[Address(RVA = "0x104C520", Offset = "0x104C520", VA = "0x104C520", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4002066")]
		private const float SqrVelocityThreshold = 4f;

		[Token(Token = "0x4002067")]
		private const float VerticalMovementScale = 0.1f;

		[Token(Token = "0x4002068")]
		private const float DampeningFactor = 0.6f;

		[Token(Token = "0x4002069")]
		private const float MinVelocity = 0.5f;

		[Token(Token = "0x400206A")]
		private const float UpwardsSpeed = 0.005f;

		[Token(Token = "0x400206B")]
		private const float OscillationSpeed = 0.1f;

		[Token(Token = "0x400206C")]
		private const float InclineIncrement = 0.1f;

		[Token(Token = "0x400206D")]
		private const float MaxAltitude = 60f;

		[Token(Token = "0x400206E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private BirdBehavior m_birdBehavior;

		[Token(Token = "0x400206F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Animator m_animator;

		[Token(Token = "0x4002070")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Grabbable m_grabbable;

		[Token(Token = "0x4002071")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private AnimationCurve m_oscillationCurve;

		[Token(Token = "0x4002072")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private float m_delay;

		[Token(Token = "0x4002073")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private bool m_isFloating;

		[Token(Token = "0x4002074")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float m_interpTime;

		[Token(Token = "0x4002075")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Rigidbody m_rigidbody;

		[Token(Token = "0x4002076")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Quaternion m_randomRotation;

		[Token(Token = "0x4002077")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private YieldInstruction m_waitForFloatingInstruction;

		[Token(Token = "0x4002078")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Coroutine m_startFloatingRoutine;

		[Token(Token = "0x4002079")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Vector3 m_inclineMotion;

		[Token(Token = "0x400207A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private float m_inclineVal;

		[Token(Token = "0x400207B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private float m_originalAngularDrag;

		[Token(Token = "0x400207C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private float m_originalDrag;

		[Token(Token = "0x400207D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private float m_originalSleepThreshold;

		[Token(Token = "0x400207E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private RigidbodyConstraints m_originalConstraints;

		[Token(Token = "0x17000376")]
		public bool IsFloating
		{
			[Token(Token = "0x6002127")]
			[Address(RVA = "0x104B7D8", Offset = "0x104B7D8", VA = "0x104B7D8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6002128")]
		[Address(RVA = "0x104B7E0", Offset = "0x104B7E0", VA = "0x104B7E0")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002129")]
		[Address(RVA = "0x104B898", Offset = "0x104B898", VA = "0x104B898")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600212A")]
		[Address(RVA = "0x104B968", Offset = "0x104B968", VA = "0x104B968")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x600212B")]
		[Address(RVA = "0x104BA38", Offset = "0x104BA38", VA = "0x104BA38")]
		private void OnDropped(Grabbable grabbable)
		{
		}

		[Token(Token = "0x600212C")]
		[Address(RVA = "0x104BE04", Offset = "0x104BE04", VA = "0x104BE04")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9926F8", Offset = "0x9926F8")]
		private IEnumerator StartFloatingRoutine(Grabbable grabbable)
		{
			return null;
		}

		[Token(Token = "0x600212D")]
		[Address(RVA = "0x104BBA4", Offset = "0x104BBA4", VA = "0x104BBA4")]
		private float GetLerpedTorqueForce(float min, float max)
		{
			return default(float);
		}

		[Token(Token = "0x600212E")]
		[Address(RVA = "0x104BC7C", Offset = "0x104BC7C", VA = "0x104BC7C")]
		private void AddRandomTorque(float forceMultiplier)
		{
		}

		[Token(Token = "0x600212F")]
		[Address(RVA = "0x104BEC8", Offset = "0x104BEC8", VA = "0x104BEC8")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6002130")]
		[Address(RVA = "0x104C038", Offset = "0x104C038", VA = "0x104C038")]
		private void Update()
		{
		}

		[Token(Token = "0x6002131")]
		[Address(RVA = "0x104BED8", Offset = "0x104BED8", VA = "0x104BED8")]
		private void UpdateFloatingPhysics()
		{
		}

		[Token(Token = "0x6002132")]
		[Address(RVA = "0x104C11C", Offset = "0x104C11C", VA = "0x104C11C")]
		private void UpdateFloatingMovement()
		{
		}

		[Token(Token = "0x6002133")]
		[Address(RVA = "0x104C0A0", Offset = "0x104C0A0", VA = "0x104C0A0")]
		private void RemoveFromView()
		{
		}

		[Token(Token = "0x6002134")]
		[Address(RVA = "0x104B6E0", Offset = "0x104B6E0", VA = "0x104B6E0")]
		public void ResetPhysics()
		{
		}

		[Token(Token = "0x6002135")]
		[Address(RVA = "0x104C2A8", Offset = "0x104C2A8", VA = "0x104C2A8")]
		public FloatAfterThrowing()
		{
		}
	}
	[Token(Token = "0x2000587")]
	public class FlyingBirdBehavior : BirdBehavior
	{
		[Token(Token = "0x600213C")]
		[Address(RVA = "0x104844C", Offset = "0x104844C", VA = "0x104844C")]
		public void FleeToLocation(BirdSpawnPoint point)
		{
		}

		[Token(Token = "0x600213D")]
		[Address(RVA = "0x104C588", Offset = "0x104C588", VA = "0x104C588")]
		public FlyingBirdBehavior()
		{
		}
	}
	[Token(Token = "0x2000588")]
	public class GrabbableBird : MonoBehaviour
	{
		[Token(Token = "0x4002083")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private BirdBehavior m_birdBehavior;

		[Token(Token = "0x4002084")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Grabbable m_grabbable;

		[Token(Token = "0x600213E")]
		[Address(RVA = "0x104C58C", Offset = "0x104C58C", VA = "0x104C58C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600213F")]
		[Address(RVA = "0x104C6C4", Offset = "0x104C6C4", VA = "0x104C6C4")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6002140")]
		[Address(RVA = "0x104C7FC", Offset = "0x104C7FC", VA = "0x104C7FC")]
		private void OnGrabbed(Grabbable grabbable)
		{
		}

		[Token(Token = "0x6002141")]
		[Address(RVA = "0x104C944", Offset = "0x104C944", VA = "0x104C944")]
		private void OnDropped(Grabbable grabbable)
		{
		}

		[Token(Token = "0x6002142")]
		[Address(RVA = "0x104C9F0", Offset = "0x104C9F0", VA = "0x104C9F0")]
		public Grabbable GetGrabbable()
		{
			return null;
		}

		[Token(Token = "0x6002143")]
		[Address(RVA = "0x104C9F8", Offset = "0x104C9F8", VA = "0x104C9F8")]
		public GrabbableBird()
		{
		}
	}
	[Token(Token = "0x2000589")]
	public interface IBird
	{
		[Token(Token = "0x6002144")]
		BirdBehavior GetBehaviorComponent();
	}
	[Token(Token = "0x200058A")]
	public class PettableBird : MonoBehaviour
	{
		[Token(Token = "0x4002085")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private BirdBehavior m_birdBehavior;

		[Token(Token = "0x4002086")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Pettable[] m_pettables;

		[Token(Token = "0x6002145")]
		[Address(RVA = "0x104CA00", Offset = "0x104CA00", VA = "0x104CA00")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6002146")]
		[Address(RVA = "0x104CB48", Offset = "0x104CB48", VA = "0x104CB48")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6002147")]
		[Address(RVA = "0x104CC5C", Offset = "0x104CC5C", VA = "0x104CC5C")]
		private void OnPettingStart()
		{
		}

		[Token(Token = "0x6002148")]
		[Address(RVA = "0x104CD04", Offset = "0x104CD04", VA = "0x104CD04")]
		private void OnPettingEnd()
		{
		}

		[Token(Token = "0x6002149")]
		[Address(RVA = "0x104CD90", Offset = "0x104CD90", VA = "0x104CD90")]
		public PettableBird()
		{
		}
	}
	[Token(Token = "0x200058B")]
	public struct SpawnedBirdsData
	{
		[Token(Token = "0x4002087")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int MaxNumberOfBirds;

		[Token(Token = "0x4002088")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public BirdType BirdType;

		[Token(Token = "0x4002089")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public List<BirdBehavior> Birds;

		[Token(Token = "0x400208A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int TargetCount;

		[Token(Token = "0x400208B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float TimeUntilNextSpawn;

		[Token(Token = "0x400208C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float TimeUntilTempBirdsDespawn;

		[Token(Token = "0x400208D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int UninitializedBirds;

		[Token(Token = "0x400208E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int ActiveBirdsCount;

		[Token(Token = "0x17000379")]
		public int Count
		{
			[Token(Token = "0x600214A")]
			[Address(RVA = "0xA4E348", Offset = "0xA4E348", VA = "0xA4E348")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x600214B")]
		[Address(RVA = "0xA4E350", Offset = "0xA4E350", VA = "0xA4E350")]
		public SpawnedBirdsData(BirdType birdType, int maxNumberOfBirds)
		{
		}
	}
	[Token(Token = "0x200058C")]
	public class TriggerBirdSpawning : MonoBehaviour, IInitializable
	{
		[Token(Token = "0x400208F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int numberOfBirdsToSpawn;

		[Token(Token = "0x4002090")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Grabbable grabbable;

		[Token(Token = "0x4002091")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private BirdInterestPoint[] interestPoints;

		[Token(Token = "0x600214C")]
		[Address(RVA = "0x104CD98", Offset = "0x104CD98", VA = "0x104CD98", Slot = "4")]
		public void Initialize()
		{
		}

		[Token(Token = "0x600214D")]
		[Address(RVA = "0x104D060", Offset = "0x104D060", VA = "0x104D060")]
		public void Trigger(Grabbable grabbable)
		{
		}

		[Token(Token = "0x600214E")]
		[Address(RVA = "0x104CED8", Offset = "0x104CED8", VA = "0x104CED8")]
		private bool SpawningIsAllowed()
		{
			return default(bool);
		}

		[Token(Token = "0x600214F")]
		[Address(RVA = "0x104CFAC", Offset = "0x104CFAC", VA = "0x104CFAC")]
		private void Spawn()
		{
		}

		[Token(Token = "0x6002150")]
		[Address(RVA = "0x104D158", Offset = "0x104D158", VA = "0x104D158")]
		private void SpawnBirdsNearPoint(BirdInterestPoint point)
		{
		}

		[Token(Token = "0x6002151")]
		[Address(RVA = "0x104D240", Offset = "0x104D240", VA = "0x104D240")]
		public TriggerBirdSpawning()
		{
		}
	}
}
namespace NeatCorp.Quests
{
	[Token(Token = "0x200058D")]
	public class QuestBubble : SaveableComponent, IInitializable
	{
		[Token(Token = "0x200058E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x97473C", Offset = "0x97473C")]
		private sealed class <ActivateLinkedQuestRoutine>d__23 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40020A1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40020A2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40020A3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public QuestBubble <>4__this;

			[Token(Token = "0x1700037A")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002161")]
				[Address(RVA = "0xD50A94", Offset = "0xD50A94", VA = "0xD50A94", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700037B")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002163")]
				[Address(RVA = "0xD50AFC", Offset = "0xD50AFC", VA = "0xD50AFC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600215E")]
			[Address(RVA = "0xD508A0", Offset = "0xD508A0", VA = "0xD508A0")]
			[DebuggerHidden]
			public <ActivateLinkedQuestRoutine>d__23(int <>1__state)
			{
			}

			[Token(Token = "0x600215F")]
			[Address(RVA = "0xD509A0", Offset = "0xD509A0", VA = "0xD509A0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002160")]
			[Address(RVA = "0xD509A4", Offset = "0xD509A4", VA = "0xD509A4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002162")]
			[Address(RVA = "0xD50A9C", Offset = "0xD50A9C", VA = "0xD50A9C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200058F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x97474C", Offset = "0x97474C")]
		private sealed class <RemoveRoutine>d__24 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40020A4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40020A5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40020A6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public QuestBubble <>4__this;

			[Token(Token = "0x40020A7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private int <length>5__2;

			[Token(Token = "0x40020A8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private int <i>5__3;

			[Token(Token = "0x1700037C")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002167")]
				[Address(RVA = "0xD50D0C", Offset = "0xD50D0C", VA = "0xD50D0C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700037D")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002169")]
				[Address(RVA = "0xD50D74", Offset = "0xD50D74", VA = "0xD50D74", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002164")]
			[Address(RVA = "0xD508CC", Offset = "0xD508CC", VA = "0xD508CC")]
			[DebuggerHidden]
			public <RemoveRoutine>d__24(int <>1__state)
			{
			}

			[Token(Token = "0x6002165")]
			[Address(RVA = "0xD50B04", Offset = "0xD50B04", VA = "0xD50B04", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002166")]
			[Address(RVA = "0xD50B08", Offset = "0xD50B08", VA = "0xD50B08", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002168")]
			[Address(RVA = "0xD50D14", Offset = "0xD50D14", VA = "0xD50D14", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4002092")]
		private const float PopOutDuration = 1f;

		[Token(Token = "0x4002093")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Transform[] m_itemsToRemove;

		[Token(Token = "0x4002094")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Transform m_questRoot;

		[Token(Token = "0x4002095")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private bool m_removeOnCompleted;

		[Token(Token = "0x4002096")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9809DC", Offset = "0x9809DC")]
		private UnityEvent OnRewardRecieved;

		[Token(Token = "0x4002097")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private UnityEvent OnRewardPreviouslySpawned;

		[Token(Token = "0x4002098")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private UnityEvent OnPreviouslyCompleted;

		[Token(Token = "0x4002099")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x980A48", Offset = "0x980A48")]
		[SerializeField]
		private SendQuestEvent m_activateQuestEvent;

		[Token(Token = "0x400209A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private float m_delay;

		[Token(Token = "0x400209B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[HideInInspector]
		[SerializeField]
		private CraftingBubble m_craftingBubble;

		[Token(Token = "0x400209C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[HideInInspector]
		[SerializeField]
		private CraftingMachine m_craftingMachine;

		[Token(Token = "0x400209D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Sequence m_tweenSequence;

		[Token(Token = "0x400209E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private YieldInstruction m_delayInstruction;

		[Token(Token = "0x400209F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private bool m_isCompleted;

		[Token(Token = "0x40020A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x89")]
		private bool m_rewardRecieved;

		[Token(Token = "0x6002152")]
		[Address(RVA = "0xD4FE24", Offset = "0xD4FE24", VA = "0xD4FE24", Slot = "4")]
		public override ComponentState CreateState()
		{
			return null;
		}

		[Token(Token = "0x6002153")]
		[Address(RVA = "0xD4FED0", Offset = "0xD4FED0", VA = "0xD4FED0", Slot = "5")]
		public void Initialize()
		{
		}

		[Token(Token = "0x6002154")]
		[Address(RVA = "0xD50208", Offset = "0xD50208", VA = "0xD50208")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6002155")]
		[Address(RVA = "0xD50320", Offset = "0xD50320", VA = "0xD50320")]
		public void OnRecipeCompleted()
		{
		}

		[Token(Token = "0x6002156")]
		[Address(RVA = "0xD50124", Offset = "0xD50124", VA = "0xD50124")]
		private void TryAddRewardRecievedEvent()
		{
		}

		[Token(Token = "0x6002157")]
		[Address(RVA = "0xD50348", Offset = "0xD50348", VA = "0xD50348")]
		public void OnRewardRecievedCallback()
		{
		}

		[Token(Token = "0x6002158")]
		[Address(RVA = "0xD5035C", Offset = "0xD5035C", VA = "0xD5035C")]
		public void RemoveBubble()
		{
		}

		[Token(Token = "0x6002159")]
		[Address(RVA = "0xD50700", Offset = "0xD50700", VA = "0xD50700")]
		private void OnBubbleRemoved()
		{
		}

		[Token(Token = "0x600215A")]
		[Address(RVA = "0xD50824", Offset = "0xD50824", VA = "0xD50824")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9927AC", Offset = "0x9927AC")]
		private IEnumerator ActivateLinkedQuestRoutine()
		{
			return null;
		}

		[Token(Token = "0x600215B")]
		[Address(RVA = "0xD50684", Offset = "0xD50684", VA = "0xD50684")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x992810", Offset = "0x992810")]
		private IEnumerator RemoveRoutine()
		{
			return null;
		}

		[Token(Token = "0x600215C")]
		[Address(RVA = "0xD50048", Offset = "0xD50048", VA = "0xD50048")]
		public void RemoveQuest()
		{
		}

		[Token(Token = "0x600215D")]
		[Address(RVA = "0xD508F8", Offset = "0xD508F8", VA = "0xD508F8")]
		public QuestBubble()
		{
		}
	}
	[Token(Token = "0x2000590")]
	public class QuestBubbleState : ComponentState
	{
		[Token(Token = "0x40020A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool IsCompleted;

		[Token(Token = "0x40020AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		public bool RewardRecieved;

		[Token(Token = "0x600216A")]
		[Address(RVA = "0xD4FE8C", Offset = "0xD4FE8C", VA = "0xD4FE8C")]
		public QuestBubbleState(bool isCompleted, bool rewardRecieved)
		{
		}
	}
	[Token(Token = "0x2000591")]
	public enum TutorialQuestProgress
	{
		[Token(Token = "0x40020AC")]
		None,
		[Token(Token = "0x40020AD")]
		HasCraftedItem,
		[Token(Token = "0x40020AE")]
		HasGrabbedOrb,
		[Token(Token = "0x40020AF")]
		HasInfusedOrb,
		[Token(Token = "0x40020B0")]
		HasPlaceGemOnAltar,
		[Token(Token = "0x40020B1")]
		MAX_NUM
	}
	[Token(Token = "0x2000592")]
	public class TutorialQuest : SaveableComponent, IInitializable
	{
		[Token(Token = "0x2000593")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x97475C", Offset = "0x97475C")]
		private sealed class <WaitForGameToFinishLoading>d__15 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40020B8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40020B9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40020BA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public TutorialQuest <>4__this;

			[Token(Token = "0x1700037E")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600217B")]
				[Address(RVA = "0xD52224", Offset = "0xD52224", VA = "0xD52224", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700037F")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600217D")]
				[Address(RVA = "0xD5228C", Offset = "0xD5228C", VA = "0xD5228C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002178")]
			[Address(RVA = "0xD51C4C", Offset = "0xD51C4C", VA = "0xD51C4C")]
			[DebuggerHidden]
			public <WaitForGameToFinishLoading>d__15(int <>1__state)
			{
			}

			[Token(Token = "0x6002179")]
			[Address(RVA = "0xD52078", Offset = "0xD52078", VA = "0xD52078", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600217A")]
			[Address(RVA = "0xD5207C", Offset = "0xD5207C", VA = "0xD5207C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600217C")]
			[Address(RVA = "0xD5222C", Offset = "0xD5222C", VA = "0xD5222C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40020B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private QuestBubble questBubble;

		[Token(Token = "0x40020B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private PotpotAnimationController potpot;

		[Token(Token = "0x40020B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private GameObject openInventoryMoodBubble;

		[Token(Token = "0x40020B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private SendQuestEvent sendOnCompletion;

		[Token(Token = "0x40020B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private Stashable gemToPutInInventory;

		[Token(Token = "0x40020B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private TutorialQuestProgress currentProgress;

		[Token(Token = "0x600216B")]
		[Address(RVA = "0xD51438", Offset = "0xD51438", VA = "0xD51438", Slot = "4")]
		public override ComponentState CreateState()
		{
			return null;
		}

		[Token(Token = "0x600216C")]
		[Address(RVA = "0xD514CC", Offset = "0xD514CC", VA = "0xD514CC", Slot = "5")]
		public void Initialize()
		{
		}

		[Token(Token = "0x600216D")]
		[Address(RVA = "0xD517A8", Offset = "0xD517A8", VA = "0xD517A8")]
		public void OnOrbCrafted()
		{
		}

		[Token(Token = "0x600216E")]
		[Address(RVA = "0xD517B4", Offset = "0xD517B4", VA = "0xD517B4")]
		public void OnOrbGrabbed()
		{
		}

		[Token(Token = "0x600216F")]
		[Address(RVA = "0xD515E4", Offset = "0xD515E4", VA = "0xD515E4")]
		public void OnOrbInfused()
		{
		}

		[Token(Token = "0x6002170")]
		[Address(RVA = "0xD517F4", Offset = "0xD517F4", VA = "0xD517F4")]
		public void OnInventoryOpened(PlayerHand hand, Transform inventoryPosition)
		{
		}

		[Token(Token = "0x6002171")]
		[Address(RVA = "0xD51980", Offset = "0xD51980", VA = "0xD51980")]
		public void OnCrystalGemGrabbed(GemGrabbedEvent e)
		{
		}

		[Token(Token = "0x6002172")]
		[Address(RVA = "0xD51B24", Offset = "0xD51B24", VA = "0xD51B24")]
		public void CompleteQuest()
		{
		}

		[Token(Token = "0x6002173")]
		[Address(RVA = "0xD51BB8", Offset = "0xD51BB8", VA = "0xD51BB8")]
		public void OnQuestCompletelyDone()
		{
		}

		[Token(Token = "0x6002174")]
		[Address(RVA = "0xD5172C", Offset = "0xD5172C", VA = "0xD5172C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x992914", Offset = "0x992914")]
		private IEnumerator WaitForGameToFinishLoading()
		{
			return null;
		}

		[Token(Token = "0x6002175")]
		[Address(RVA = "0xD51C78", Offset = "0xD51C78", VA = "0xD51C78")]
		public void OnTutorialSkipped(QuestEvent e)
		{
		}

		[Token(Token = "0x6002176")]
		[Address(RVA = "0xD51E78", Offset = "0xD51E78", VA = "0xD51E78")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6002177")]
		[Address(RVA = "0xD52070", Offset = "0xD52070", VA = "0xD52070")]
		public TutorialQuest()
		{
		}
	}
	[Token(Token = "0x2000594")]
	public class TutorialQuestState : ComponentState
	{
		[Token(Token = "0x40020BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int currentProgress;

		[Token(Token = "0x600217E")]
		[Address(RVA = "0xD52294", Offset = "0xD52294", VA = "0xD52294")]
		public TutorialQuestProgress GetCurrentProgress()
		{
			return default(TutorialQuestProgress);
		}

		[Token(Token = "0x600217F")]
		[Address(RVA = "0xD514A0", Offset = "0xD514A0", VA = "0xD514A0")]
		public TutorialQuestState(TutorialQuestProgress progress)
		{
		}
	}
	[Token(Token = "0x2000595")]
	public class ChopTrunksQuest : SaveableComponent, IInitializable
	{
		[Token(Token = "0x2000596")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x97476C", Offset = "0x97476C")]
		private sealed class <RemoveRoutine>d__15 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40020C7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40020C8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40020C9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ChopTrunksQuest <>4__this;

			[Token(Token = "0x40020CA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private int <length>5__2;

			[Token(Token = "0x40020CB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private int <i>5__3;

			[Token(Token = "0x17000380")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002189")]
				[Address(RVA = "0xE9C08C", Offset = "0xE9C08C", VA = "0xE9C08C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000381")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600218B")]
				[Address(RVA = "0xE9C0F4", Offset = "0xE9C0F4", VA = "0xE9C0F4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002186")]
			[Address(RVA = "0xE9BDA8", Offset = "0xE9BDA8", VA = "0xE9BDA8")]
			[DebuggerHidden]
			public <RemoveRoutine>d__15(int <>1__state)
			{
			}

			[Token(Token = "0x6002187")]
			[Address(RVA = "0xE9BE84", Offset = "0xE9BE84", VA = "0xE9BE84", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002188")]
			[Address(RVA = "0xE9BE88", Offset = "0xE9BE88", VA = "0xE9BE88", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600218A")]
			[Address(RVA = "0xE9C094", Offset = "0xE9C094", VA = "0xE9C094", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40020BC")]
		private const float PopOutDuration = 1f;

		[Token(Token = "0x40020BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private int m_trunksToRemove;

		[Token(Token = "0x40020BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private PotpotAnimationController m_potpotController;

		[Token(Token = "0x40020BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private UnlockMerchantEventDispatcher m_eventDispatcher;

		[Token(Token = "0x40020C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private bool m_removeOnCompleted;

		[Token(Token = "0x40020C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private Transform[] m_itemsToRemove;

		[Token(Token = "0x40020C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private Transform m_questRoot;

		[Token(Token = "0x40020C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Sequence m_tweenSequence;

		[Token(Token = "0x40020C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private YieldInstruction m_delayInstruction;

		[Token(Token = "0x40020C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private int m_trunksRemoved;

		[Token(Token = "0x40020C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private bool m_isQuestCompleted;

		[Token(Token = "0x6002180")]
		[Address(RVA = "0xE9B930", Offset = "0xE9B930", VA = "0xE9B930", Slot = "4")]
		public override ComponentState CreateState()
		{
			return null;
		}

		[Token(Token = "0x6002181")]
		[Address(RVA = "0xE9B9A8", Offset = "0xE9B9A8", VA = "0xE9B9A8", Slot = "5")]
		public void Initialize()
		{
		}

		[Token(Token = "0x6002182")]
		[Address(RVA = "0xE9BCC4", Offset = "0xE9BCC4", VA = "0xE9BCC4")]
		public void OnTrunkRemoved()
		{
		}

		[Token(Token = "0x6002183")]
		[Address(RVA = "0xE9BAA8", Offset = "0xE9BAA8", VA = "0xE9BAA8")]
		public void RemoveQuest()
		{
		}

		[Token(Token = "0x6002184")]
		[Address(RVA = "0xE9BD2C", Offset = "0xE9BD2C", VA = "0xE9BD2C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9929C8", Offset = "0x9929C8")]
		private IEnumerator RemoveRoutine()
		{
			return null;
		}

		[Token(Token = "0x6002185")]
		[Address(RVA = "0xE9BDD4", Offset = "0xE9BDD4", VA = "0xE9BDD4")]
		public ChopTrunksQuest()
		{
		}
	}
	[Token(Token = "0x2000597")]
	public class ChopTrunkQuestState : ComponentState
	{
		[Token(Token = "0x40020CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool IsQuestCompleted;

		[Token(Token = "0x40020CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int TrunksRemoved;

		[Token(Token = "0x600218C")]
		[Address(RVA = "0xE9B8F0", Offset = "0xE9B8F0", VA = "0xE9B8F0")]
		public ChopTrunkQuestState(bool isQuestCompleted, int trunksRemoved)
		{
		}
	}
	[Token(Token = "0x2000598")]
	public class UnlockMerchantEventDispatcher : MonoBehaviour
	{
		[Token(Token = "0x40020CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private MerchantType m_merchantType;

		[Token(Token = "0x600218D")]
		[Address(RVA = "0xD5229C", Offset = "0xD5229C", VA = "0xD5229C")]
		public void DispatchMerchantUnlockEvent(bool isUnlocked)
		{
		}

		[Token(Token = "0x600218E")]
		[Address(RVA = "0xD52334", Offset = "0xD52334", VA = "0xD52334")]
		public UnlockMerchantEventDispatcher()
		{
		}
	}
	[Token(Token = "0x2000599")]
	public class UnlockMerchantQuest : SaveableComponent, IInitializable
	{
		[Token(Token = "0x200059A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x97477C", Offset = "0x97477C")]
		private sealed class <WaitForDependenciesInit>d__21 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40020E1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40020E2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40020E3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public UnlockMerchantQuest <>4__this;

			[Token(Token = "0x17000382")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60021A2")]
				[Address(RVA = "0xD53520", Offset = "0xD53520", VA = "0xD53520", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000383")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60021A4")]
				[Address(RVA = "0xD53588", Offset = "0xD53588", VA = "0xD53588", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600219F")]
			[Address(RVA = "0xD52534", Offset = "0xD52534", VA = "0xD52534")]
			[DebuggerHidden]
			public <WaitForDependenciesInit>d__21(int <>1__state)
			{
			}

			[Token(Token = "0x60021A0")]
			[Address(RVA = "0xD53350", Offset = "0xD53350", VA = "0xD53350", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60021A1")]
			[Address(RVA = "0xD53354", Offset = "0xD53354", VA = "0xD53354", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60021A3")]
			[Address(RVA = "0xD53528", Offset = "0xD53528", VA = "0xD53528", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200059B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x97478C", Offset = "0x97478C")]
		private sealed class <RemoveRoutine>d__29 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40020E4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40020E5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40020E6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public UnlockMerchantQuest <>4__this;

			[Token(Token = "0x40020E7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private int <length>5__2;

			[Token(Token = "0x40020E8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private int <i>5__3;

			[Token(Token = "0x17000384")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60021A8")]
				[Address(RVA = "0xD532E0", Offset = "0xD532E0", VA = "0xD532E0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000385")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60021AA")]
				[Address(RVA = "0xD53348", Offset = "0xD53348", VA = "0xD53348", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60021A5")]
			[Address(RVA = "0xD52D9C", Offset = "0xD52D9C", VA = "0xD52D9C")]
			[DebuggerHidden]
			public <RemoveRoutine>d__29(int <>1__state)
			{
			}

			[Token(Token = "0x60021A6")]
			[Address(RVA = "0xD530D8", Offset = "0xD530D8", VA = "0xD530D8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60021A7")]
			[Address(RVA = "0xD530DC", Offset = "0xD530DC", VA = "0xD530DC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60021A9")]
			[Address(RVA = "0xD532E8", Offset = "0xD532E8", VA = "0xD532E8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200059C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x97479C", Offset = "0x97479C")]
		private sealed class <PlayCompleteSoundRoutine>d__30 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40020E9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40020EA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40020EB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public UnlockMerchantQuest <>4__this;

			[Token(Token = "0x17000386")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60021AE")]
				[Address(RVA = "0xD53068", Offset = "0xD53068", VA = "0xD53068", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000387")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60021B0")]
				[Address(RVA = "0xD530D0", Offset = "0xD530D0", VA = "0xD530D0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60021AB")]
			[Address(RVA = "0xD52DC8", Offset = "0xD52DC8", VA = "0xD52DC8")]
			[DebuggerHidden]
			public <PlayCompleteSoundRoutine>d__30(int <>1__state)
			{
			}

			[Token(Token = "0x60021AC")]
			[Address(RVA = "0xD52F28", Offset = "0xD52F28", VA = "0xD52F28", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60021AD")]
			[Address(RVA = "0xD52F2C", Offset = "0xD52F2C", VA = "0xD52F2C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60021AF")]
			[Address(RVA = "0xD53070", Offset = "0xD53070", VA = "0xD53070", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40020CF")]
		public const string TradingPostActive = "TradingPostActive";

		[Token(Token = "0x40020D0")]
		private const float PopOutDuration = 1f;

		[Token(Token = "0x40020D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private MerchantBoat m_merchantBoat;

		[Token(Token = "0x40020D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private SendQuestEvent m_questEventDispatcher;

		[Token(Token = "0x40020D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private TradingPostQuest m_tradingPostQuest;

		[Token(Token = "0x40020D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private GameObject[] m_itemsToInactivate;

		[Token(Token = "0x40020D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private bool m_removeOnCompleted;

		[Token(Token = "0x40020D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private Transform[] m_itemsToRemove;

		[Token(Token = "0x40020D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private NeatAudioPlayer[] m_neatAudioPlayers;

		[Token(Token = "0x40020D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private NeatAudioPlayer m_musicAudiPlayer;

		[Token(Token = "0x40020D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private NeatAudioCue m_flagRaised;

		[Token(Token = "0x40020DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private NeatAudioCue m_fireworksLaunched;

		[Token(Token = "0x40020DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private NeatAudioCue m_fireworksExplosion;

		[Token(Token = "0x40020DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private int m_alternatingAudioPlayerIndex;

		[Token(Token = "0x40020DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private bool m_isQuestCompleted;

		[Token(Token = "0x40020DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x85")]
		private bool m_shouldShowMerchantBoat;

		[Token(Token = "0x40020DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Sequence m_tweenSequence;

		[Token(Token = "0x40020E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private YieldInstruction m_delayInstruction;

		[Token(Token = "0x600218F")]
		[Address(RVA = "0xD5233C", Offset = "0xD5233C", VA = "0xD5233C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002190")]
		[Address(RVA = "0xD523E4", Offset = "0xD523E4", VA = "0xD523E4")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6002191")]
		[Address(RVA = "0xD5248C", Offset = "0xD5248C", VA = "0xD5248C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6002192")]
		[Address(RVA = "0xD52368", Offset = "0xD52368", VA = "0xD52368")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x992A7C", Offset = "0x992A7C")]
		private IEnumerator WaitForDependenciesInit()
		{
			return null;
		}

		[Token(Token = "0x6002193")]
		[Address(RVA = "0xD52560", Offset = "0xD52560", VA = "0xD52560")]
		private void OnUnlocked(UnlockMerchantEvent e)
		{
		}

		[Token(Token = "0x6002194")]
		[Address(RVA = "0xD52640", Offset = "0xD52640", VA = "0xD52640")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6002195")]
		[Address(RVA = "0xD527A8", Offset = "0xD527A8", VA = "0xD527A8", Slot = "5")]
		public void Initialize()
		{
		}

		[Token(Token = "0x6002196")]
		[Address(RVA = "0xD52904", Offset = "0xD52904", VA = "0xD52904")]
		private void SetMerchantActive(bool shouldShowMerchant)
		{
		}

		[Token(Token = "0x6002197")]
		[Address(RVA = "0xD52C40", Offset = "0xD52C40", VA = "0xD52C40", Slot = "4")]
		public override ComponentState CreateState()
		{
			return null;
		}

		[Token(Token = "0x6002198")]
		[Address(RVA = "0xD52CEC", Offset = "0xD52CEC", VA = "0xD52CEC")]
		private void OnPlayerLeftWorldZone(WorldZone leftWorldZone)
		{
		}

		[Token(Token = "0x6002199")]
		[Address(RVA = "0xD52A24", Offset = "0xD52A24", VA = "0xD52A24")]
		private void RemoveQuest()
		{
		}

		[Token(Token = "0x600219A")]
		[Address(RVA = "0xD52D20", Offset = "0xD52D20", VA = "0xD52D20")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x992AE0", Offset = "0x992AE0")]
		private IEnumerator RemoveRoutine()
		{
			return null;
		}

		[Token(Token = "0x600219B")]
		[Address(RVA = "0xD525C4", Offset = "0xD525C4", VA = "0xD525C4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x992B44", Offset = "0x992B44")]
		private IEnumerator PlayCompleteSoundRoutine()
		{
			return null;
		}

		[Token(Token = "0x600219C")]
		[Address(RVA = "0xD52DF4", Offset = "0xD52DF4", VA = "0xD52DF4")]
		private void PlayAudioCue(NeatAudioCue cue)
		{
		}

		[Token(Token = "0x600219D")]
		[Address(RVA = "0xD52E6C", Offset = "0xD52E6C", VA = "0xD52E6C")]
		private void PlayMusic()
		{
		}

		[Token(Token = "0x600219E")]
		[Address(RVA = "0xD52E88", Offset = "0xD52E88", VA = "0xD52E88")]
		public UnlockMerchantQuest()
		{
		}
	}
	[Token(Token = "0x200059D")]
	public class UnlockMerchantQuestState : ComponentState
	{
		[Token(Token = "0x40020EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool IsQuestCompleted;

		[Token(Token = "0x40020ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		public bool ShouldShowMerchantBoat;

		[Token(Token = "0x60021B1")]
		[Address(RVA = "0xD52CA8", Offset = "0xD52CA8", VA = "0xD52CA8")]
		public UnlockMerchantQuestState(bool isQuestCompleted, bool shouldShowMerchantBoat)
		{
		}
	}
}
namespace NeatCorp.Quests.MissionBeacon
{
	[Token(Token = "0x200059E")]
	public interface IExcavatable
	{
		[Token(Token = "0x60021B2")]
		void Dig(int hoeLevel);

		[Token(Token = "0x60021B3")]
		bool CanBeExcavated();
	}
	[Token(Token = "0x200059F")]
	public class MissionBeacon : SaveableComponent, IInitializable
	{
		[Token(Token = "0x20005A0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9747AC", Offset = "0x9747AC")]
		private sealed class <CheckForBracelet>d__38 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400210F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002110")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002111")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public MissionBeacon <>4__this;

			[Token(Token = "0x17000388")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60021D6")]
				[Address(RVA = "0xE9F4D4", Offset = "0xE9F4D4", VA = "0xE9F4D4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000389")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60021D8")]
				[Address(RVA = "0xE9F53C", Offset = "0xE9F53C", VA = "0xE9F53C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60021D3")]
			[Address(RVA = "0xE9DB90", Offset = "0xE9DB90", VA = "0xE9DB90")]
			[DebuggerHidden]
			public <CheckForBracelet>d__38(int <>1__state)
			{
			}

			[Token(Token = "0x60021D4")]
			[Address(RVA = "0xE9F26C", Offset = "0xE9F26C", VA = "0xE9F26C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60021D5")]
			[Address(RVA = "0xE9F270", Offset = "0xE9F270", VA = "0xE9F270", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60021D7")]
			[Address(RVA = "0xE9F4DC", Offset = "0xE9F4DC", VA = "0xE9F4DC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20005A1")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9747BC", Offset = "0x9747BC")]
		private sealed class <OpenedBeaconAudio>d__43 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002112")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002113")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002114")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public MissionBeacon <>4__this;

			[Token(Token = "0x4002115")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <loopCueTimer>5__2;

			[Token(Token = "0x1700038A")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60021DC")]
				[Address(RVA = "0xE9F860", Offset = "0xE9F860", VA = "0xE9F860", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700038B")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60021DE")]
				[Address(RVA = "0xE9F8C8", Offset = "0xE9F8C8", VA = "0xE9F8C8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60021D9")]
			[Address(RVA = "0xE9DD30", Offset = "0xE9DD30", VA = "0xE9DD30")]
			[DebuggerHidden]
			public <OpenedBeaconAudio>d__43(int <>1__state)
			{
			}

			[Token(Token = "0x60021DA")]
			[Address(RVA = "0xE9F794", Offset = "0xE9F794", VA = "0xE9F794", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60021DB")]
			[Address(RVA = "0xE9F798", Offset = "0xE9F798", VA = "0xE9F798", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60021DD")]
			[Address(RVA = "0xE9F868", Offset = "0xE9F868", VA = "0xE9F868", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20005A2")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9747CC", Offset = "0x9747CC")]
		private sealed class <Illuminate>d__60 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002116")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002117")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002118")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public MissionBeacon <>4__this;

			[Token(Token = "0x4002119")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float TargetIllumination;

			[Token(Token = "0x400211A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float <currentIlluminationFadeTime>5__2;

			[Token(Token = "0x1700038C")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60021E2")]
				[Address(RVA = "0xE9F724", Offset = "0xE9F724", VA = "0xE9F724", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700038D")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60021E4")]
				[Address(RVA = "0xE9F78C", Offset = "0xE9F78C", VA = "0xE9F78C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60021DF")]
			[Address(RVA = "0xE9F114", Offset = "0xE9F114", VA = "0xE9F114")]
			[DebuggerHidden]
			public <Illuminate>d__60(int <>1__state)
			{
			}

			[Token(Token = "0x60021E0")]
			[Address(RVA = "0xE9F544", Offset = "0xE9F544", VA = "0xE9F544", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60021E1")]
			[Address(RVA = "0xE9F548", Offset = "0xE9F548", VA = "0xE9F548", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60021E3")]
			[Address(RVA = "0xE9F72C", Offset = "0xE9F72C", VA = "0xE9F72C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40020EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private MissionBeaconAnimation BeaconAnimation;

		[Token(Token = "0x40020EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Transform BeaconActivationLocation;

		[Token(Token = "0x40020F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private float OpenDistance;

		[Token(Token = "0x40020F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[SerializeField]
		private float CloseDistance;

		[Token(Token = "0x40020F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private AssetReference MapToSpawn;

		[Token(Token = "0x40020F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private Transform MapSpawnTransform;

		[Token(Token = "0x40020F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private MissionBeaconMapType MapTypeToSpawn;

		[Token(Token = "0x40020F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private Sprite MapSprite;

		[Token(Token = "0x40020F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private SkinnedMeshRenderer MissionBeaconRenderer;

		[Token(Token = "0x40020F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private MissionBeaconMapImpostor MapImpostor;

		[Token(Token = "0x40020F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private RotateObjectSlowly m_hoveringMapLocation;

		[Token(Token = "0x40020F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x980D34", Offset = "0x980D34")]
		private NeatAudioPlayer MissionBeaconOpenAudioPlayer;

		[Token(Token = "0x40020FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private NeatAudioPlayer MissionBeaconLoopAudioPlayer;

		[Token(Token = "0x40020FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private NeatAudioPlayer MissionBeaconCloseAudioPlayer;

		[Token(Token = "0x40020FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private NeatAudioCue MissionBeaconOpenCue;

		[Token(Token = "0x40020FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		private NeatAudioCue MissionBeaconLoopCue;

		[Token(Token = "0x40020FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		private NeatAudioCue MissionBeaconCloseCue;

		[Token(Token = "0x40020FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[SerializeField]
		private float LoopCueDelay;

		[Token(Token = "0x4002100")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		private bool BeaconOpened;

		[Token(Token = "0x4002101")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private PlayerHand TrackedHand;

		[Token(Token = "0x4002102")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private GameObject SpawnedMap;

		[Token(Token = "0x4002103")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private bool MapHasBeenGrabbed;

		[Token(Token = "0x4002104")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private MaterialPropertyBlock MissionBeaconPropertyBlock;

		[Token(Token = "0x4002105")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private float CurrentIllumination;

		[Token(Token = "0x4002106")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		private float IlluminationFadeDuration;

		[Token(Token = "0x4002107")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private Coroutine BraceletCheckRoutine;

		[Token(Token = "0x4002108")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private Coroutine AudioRoutine;

		[Token(Token = "0x4002109")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private bool CloseAnimationBegunPlaying;

		[Token(Token = "0x400210A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private Sequence m_mapSpawnSequence;

		[Token(Token = "0x400210B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private bool m_sequenceCreated;

		[Token(Token = "0x400210C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
		private Vector3 m_origHoverLocalPos;

		[Token(Token = "0x400210D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		private Vector3 m_origHoverLocalScale;

		[Token(Token = "0x400210E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
		private bool m_hasCachedOriginalHover;

		[Token(Token = "0x60021B4")]
		[Address(RVA = "0xE9D518", Offset = "0xE9D518", VA = "0xE9D518")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60021B5")]
		[Address(RVA = "0xE9D5A0", Offset = "0xE9D5A0", VA = "0xE9D5A0", Slot = "5")]
		public void Initialize()
		{
		}

		[Token(Token = "0x60021B6")]
		[Address(RVA = "0xE9D92C", Offset = "0xE9D92C", VA = "0xE9D92C")]
		private void Update()
		{
		}

		[Token(Token = "0x60021B7")]
		[Address(RVA = "0xE9DB3C", Offset = "0xE9DB3C", VA = "0xE9DB3C")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60021B8")]
		[Address(RVA = "0xE9D550", Offset = "0xE9D550", VA = "0xE9D550")]
		private void CleanUpTweenSequence()
		{
		}

		[Token(Token = "0x60021B9")]
		[Address(RVA = "0xE9D8B0", Offset = "0xE9D8B0", VA = "0xE9D8B0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x992C98", Offset = "0x992C98")]
		private IEnumerator CheckForBracelet()
		{
			return null;
		}

		[Token(Token = "0x60021BA")]
		[Address(RVA = "0xE9DA9C", Offset = "0xE9DA9C", VA = "0xE9DA9C")]
		public void OpenBeacon()
		{
		}

		[Token(Token = "0x60021BB")]
		[Address(RVA = "0xE9DAF0", Offset = "0xE9DAF0", VA = "0xE9DAF0")]
		public void CloseBeacon()
		{
		}

		[Token(Token = "0x60021BC")]
		[Address(RVA = "0xE9DC1C", Offset = "0xE9DC1C", VA = "0xE9DC1C")]
		public void BeginSpinUp()
		{
		}

		[Token(Token = "0x60021BD")]
		[Address(RVA = "0xE9DCD4", Offset = "0xE9DCD4", VA = "0xE9DCD4")]
		public void BeginClosing()
		{
		}

		[Token(Token = "0x60021BE")]
		[Address(RVA = "0xE9DC58", Offset = "0xE9DC58", VA = "0xE9DC58")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x992CFC", Offset = "0x992CFC")]
		private IEnumerator OpenedBeaconAudio()
		{
			return null;
		}

		[Token(Token = "0x60021BF")]
		[Address(RVA = "0xE9DD5C", Offset = "0xE9DD5C", VA = "0xE9DD5C")]
		public void OnBeaconFinishedOpen()
		{
		}

		[Token(Token = "0x60021C0")]
		[Address(RVA = "0xE9E0F8", Offset = "0xE9E0F8", VA = "0xE9E0F8")]
		public void OnBeaconBeginClose()
		{
		}

		[Token(Token = "0x60021C1")]
		[Address(RVA = "0xE9DE30", Offset = "0xE9DE30", VA = "0xE9DE30")]
		public void SpawnMap()
		{
		}

		[Token(Token = "0x60021C2")]
		[Address(RVA = "0xE9E270", Offset = "0xE9E270", VA = "0xE9E270")]
		private void OnMapSpawnedPreInit(SpawnOperationCallbackData spawnCallback)
		{
		}

		[Token(Token = "0x60021C3")]
		[Address(RVA = "0xE9E470", Offset = "0xE9E470", VA = "0xE9E470")]
		private void OnMapSpawnedPostInit(SpawnOperationCallbackData spawnCallback)
		{
		}

		[Token(Token = "0x60021C4")]
		[Address(RVA = "0xE9E6B8", Offset = "0xE9E6B8", VA = "0xE9E6B8")]
		private void ResetHoverLocation()
		{
		}

		[Token(Token = "0x60021C5")]
		[Address(RVA = "0xE9E200", Offset = "0xE9E200", VA = "0xE9E200")]
		private void TryPlaySequence(bool playBackwards = false)
		{
		}

		[Token(Token = "0x60021C6")]
		[Address(RVA = "0xE9E77C", Offset = "0xE9E77C", VA = "0xE9E77C")]
		private void TryCreateSequence()
		{
		}

		[Token(Token = "0x60021C7")]
		[Address(RVA = "0xE9EA44", Offset = "0xE9EA44", VA = "0xE9EA44")]
		private void OnMapAnimationFinishedForwards()
		{
		}

		[Token(Token = "0x60021C8")]
		[Address(RVA = "0xE9EC8C", Offset = "0xE9EC8C", VA = "0xE9EC8C")]
		private void OnMapAnimationFinishedBackwards()
		{
		}

		[Token(Token = "0x60021C9")]
		[Address(RVA = "0xE9E3A4", Offset = "0xE9E3A4", VA = "0xE9E3A4")]
		private void InitializeMap()
		{
		}

		[Token(Token = "0x60021CA")]
		[Address(RVA = "0xE9DFA8", Offset = "0xE9DFA8", VA = "0xE9DFA8")]
		private void TryUpdateMissionBeaconMapState()
		{
		}

		[Token(Token = "0x60021CB")]
		[Address(RVA = "0xE9EDC8", Offset = "0xE9EDC8", VA = "0xE9EDC8")]
		private void OnMapPreGrab(Grabbable obj)
		{
		}

		[Token(Token = "0x60021CC")]
		[Address(RVA = "0xE9EEB0", Offset = "0xE9EEB0", VA = "0xE9EEB0")]
		private void OnMapGrabbed(Grabbable mapGrabbable)
		{
		}

		[Token(Token = "0x60021CD")]
		[Address(RVA = "0xE9DBBC", Offset = "0xE9DBBC", VA = "0xE9DBBC")]
		public void ShowIllumination()
		{
		}

		[Token(Token = "0x60021CE")]
		[Address(RVA = "0xE9DBEC", Offset = "0xE9DBEC", VA = "0xE9DBEC")]
		public void HideIllumination()
		{
		}

		[Token(Token = "0x60021CF")]
		[Address(RVA = "0xE9F088", Offset = "0xE9F088", VA = "0xE9F088")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x992D60", Offset = "0x992D60")]
		public IEnumerator Illuminate(float TargetIllumination)
		{
			return null;
		}

		[Token(Token = "0x60021D0")]
		[Address(RVA = "0xE9F140", Offset = "0xE9F140", VA = "0xE9F140")]
		public void ForceIllumination(float inIllumination)
		{
		}

		[Token(Token = "0x60021D1")]
		[Address(RVA = "0xE9F1E4", Offset = "0xE9F1E4", VA = "0xE9F1E4", Slot = "4")]
		public override ComponentState CreateState()
		{
			return null;
		}

		[Token(Token = "0x60021D2")]
		[Address(RVA = "0xE9F24C", Offset = "0xE9F24C", VA = "0xE9F24C")]
		public MissionBeacon()
		{
		}
	}
	[Token(Token = "0x20005A3")]
	public class MissionBeaconState : ComponentState
	{
		[Token(Token = "0x400211B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool MapHasBeenGrabbed;

		[Token(Token = "0x60021E5")]
		[Address(RVA = "0xD4F208", Offset = "0xD4F208", VA = "0xD4F208")]
		public MissionBeaconState(bool inMapHasBeenGrabbed)
		{
		}
	}
	[Token(Token = "0x20005A4")]
	public class MissionBeaconActiveStateBehaviour : StateMachineBehaviour
	{
		[Token(Token = "0x60021E6")]
		[Address(RVA = "0xD4E3B0", Offset = "0xD4E3B0", VA = "0xD4E3B0", Slot = "4")]
		public override void OnStateEnter(Animator animator, AnimatorStateInfo stateInfo, int layerIndex)
		{
		}

		[Token(Token = "0x60021E7")]
		[Address(RVA = "0xD4E4A0", Offset = "0xD4E4A0", VA = "0xD4E4A0", Slot = "6")]
		public override void OnStateExit(Animator animator, AnimatorStateInfo stateInfo, int layerIndex)
		{
		}

		[Token(Token = "0x60021E8")]
		[Address(RVA = "0xD4E590", Offset = "0xD4E590", VA = "0xD4E590")]
		public MissionBeaconActiveStateBehaviour()
		{
		}
	}
	[Token(Token = "0x20005A5")]
	public class MissionBeaconAnimation : MonoBehaviour
	{
		[Token(Token = "0x400211C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static int ActiveParamName;

		[Token(Token = "0x400211D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private static int OpenParamName;

		[Token(Token = "0x400211E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Animator m_animator;

		[Token(Token = "0x60021E9")]
		[Address(RVA = "0xD4E598", Offset = "0xD4E598", VA = "0xD4E598")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60021EA")]
		[Address(RVA = "0xD4E650", Offset = "0xD4E650", VA = "0xD4E650")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60021EB")]
		[Address(RVA = "0xD4E708", Offset = "0xD4E708", VA = "0xD4E708")]
		public void Open()
		{
		}

		[Token(Token = "0x60021EC")]
		[Address(RVA = "0xD4E78C", Offset = "0xD4E78C", VA = "0xD4E78C")]
		public void Close()
		{
		}

		[Token(Token = "0x60021ED")]
		[Address(RVA = "0xD4E810", Offset = "0xD4E810", VA = "0xD4E810")]
		public void Activate()
		{
		}

		[Token(Token = "0x60021EE")]
		[Address(RVA = "0xD4E894", Offset = "0xD4E894", VA = "0xD4E894")]
		public void Deactivate()
		{
		}

		[Token(Token = "0x60021EF")]
		[Address(RVA = "0xD4E918", Offset = "0xD4E918", VA = "0xD4E918")]
		private void OnBeaconEvent(MissionBeaconDeactivateEvent e)
		{
		}

		[Token(Token = "0x60021F0")]
		[Address(RVA = "0xD4E938", Offset = "0xD4E938", VA = "0xD4E938")]
		public MissionBeaconAnimation()
		{
		}
	}
	[Token(Token = "0x20005A6")]
	public class MissionBeaconDeactivateEvent : GameEvent
	{
	}
	[Token(Token = "0x20005A7")]
	public class MissionBeaconMap : ImportantItem
	{
		[Token(Token = "0x400211F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private MeshRenderer MapRenderer;

		[Token(Token = "0x4002120")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private MissionBeaconMapType MapType;

		[Token(Token = "0x4002121")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private Sprite[] MapTypeSprites;

		[Token(Token = "0x4002122")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private MaterialPropertyBlock RendererPropertyBlock;

		[Token(Token = "0x4002123")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static int MainTexId;

		[Token(Token = "0x60021F2")]
		[Address(RVA = "0xD4E9C4", Offset = "0xD4E9C4", VA = "0xD4E9C4", Slot = "6")]
		public override void Initialize()
		{
		}

		[Token(Token = "0x60021F3")]
		[Address(RVA = "0xD4EA70", Offset = "0xD4EA70", VA = "0xD4EA70")]
		public void SetMapType(MissionBeaconMapType newMapType)
		{
		}

		[Token(Token = "0x60021F4")]
		[Address(RVA = "0xD4EC24", Offset = "0xD4EC24", VA = "0xD4EC24")]
		public MissionBeaconMapType GetMapType()
		{
			return default(MissionBeaconMapType);
		}

		[Token(Token = "0x60021F5")]
		[Address(RVA = "0xD4EA78", Offset = "0xD4EA78", VA = "0xD4EA78")]
		public void UpdateMapSprite()
		{
		}

		[Token(Token = "0x60021F6")]
		[Address(RVA = "0xD4EC2C", Offset = "0xD4EC2C", VA = "0xD4EC2C", Slot = "4")]
		public override ComponentState CreateState()
		{
			return null;
		}

		[Token(Token = "0x60021F7")]
		[Address(RVA = "0xD4ED6C", Offset = "0xD4ED6C", VA = "0xD4ED6C")]
		public MissionBeaconMap()
		{
		}
	}
	[Token(Token = "0x20005A8")]
	public class MissionBeaconMapComponentState : ImportantItemState
	{
		[Token(Token = "0x4002124")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MissionBeaconMapType MapType;

		[Token(Token = "0x60021F9")]
		[Address(RVA = "0xD4ED38", Offset = "0xD4ED38", VA = "0xD4ED38")]
		public MissionBeaconMapComponentState(MissionBeaconMapType inMaptype, SaveID impostorId)
		{
		}
	}
	[Token(Token = "0x20005A9")]
	public class MissionBeaconMapImpostor : ImportantItemImpostor
	{
		[Token(Token = "0x4002125")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public MissionBeaconMapType MapType;

		[Token(Token = "0x60021FA")]
		[Address(RVA = "0xD4EE3C", Offset = "0xD4EE3C", VA = "0xD4EE3C", Slot = "16")]
		public override Grabbable GetRealGrabbable()
		{
			return null;
		}

		[Token(Token = "0x60021FB")]
		[Address(RVA = "0xD4EEC8", Offset = "0xD4EEC8", VA = "0xD4EEC8", Slot = "17")]
		public override void Initialize()
		{
		}

		[Token(Token = "0x60021FC")]
		[Address(RVA = "0xD4EECC", Offset = "0xD4EECC", VA = "0xD4EECC")]
		public void TryFindAndAssignMap()
		{
		}

		[Token(Token = "0x60021FD")]
		[Address(RVA = "0xD4EF74", Offset = "0xD4EF74", VA = "0xD4EF74", Slot = "22")]
		protected override void FindImportantItem()
		{
		}

		[Token(Token = "0x60021FE")]
		[Address(RVA = "0xD4F200", Offset = "0xD4F200", VA = "0xD4F200")]
		public MissionBeaconMapImpostor()
		{
		}
	}
	[Token(Token = "0x20005AA")]
	public class TotemDirtPile : SaveableComponent, IExcavatable, IInitializable
	{
		[Token(Token = "0x4002126")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private AttachSlot m_attatchSlot;

		[Token(Token = "0x4002127")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private int m_requieredHoeLevel;

		[Token(Token = "0x4002128")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x980E40", Offset = "0x980E40")]
		private UnityEvent m_onDig;

		[Token(Token = "0x4002129")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private UnityEvent m_onDigFail;

		[Token(Token = "0x400212A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x980E9C", Offset = "0x980E9C")]
		private Tool_Axe.AxeLevelType m_requieredAxeLevel;

		[Token(Token = "0x400212B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Grabbable m_attatchedGrabbable;

		[Token(Token = "0x400212C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private MissionBeaconMapType MapForActivation;

		[Token(Token = "0x400212D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private ParticleSystem DugUpEffect;

		[Token(Token = "0x400212E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private Transform TotemHeadDugUpTargetTransform;

		[Token(Token = "0x400212F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Renderer DirtMeshRenderer;

		[Token(Token = "0x4002130")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private bool HaveBeenDugUp;

		[Token(Token = "0x60021FF")]
		[Address(RVA = "0xD4F238", Offset = "0xD4F238", VA = "0xD4F238")]
		public void Awake()
		{
		}

		[Token(Token = "0x6002200")]
		[Address(RVA = "0xD4F298", Offset = "0xD4F298", VA = "0xD4F298", Slot = "7")]
		public void Initialize()
		{
		}

		[Token(Token = "0x6002201")]
		[Address(RVA = "0xD4F6F0", Offset = "0xD4F6F0", VA = "0xD4F6F0")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6002202")]
		[Address(RVA = "0xD4F7E4", Offset = "0xD4F7E4", VA = "0xD4F7E4")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6002203")]
		[Address(RVA = "0xD4F8D8", Offset = "0xD4F8D8", VA = "0xD4F8D8")]
		private void OnAttatched(SaveObjectBase saveObj, Grabbable grabbable)
		{
		}

		[Token(Token = "0x6002204")]
		[Address(RVA = "0xD4F91C", Offset = "0xD4F91C", VA = "0xD4F91C")]
		private void OnMapStateUpdatedEvent(MissionBeaconMapStateUpdateEvent e)
		{
		}

		[Token(Token = "0x6002205")]
		[Address(RVA = "0xD4F954", Offset = "0xD4F954", VA = "0xD4F954", Slot = "5")]
		public void Dig(int hoeLevel)
		{
		}

		[Token(Token = "0x6002206")]
		[Address(RVA = "0xD4FC18", Offset = "0xD4FC18", VA = "0xD4FC18", Slot = "6")]
		public bool CanBeExcavated()
		{
			return default(bool);
		}

		[Token(Token = "0x6002207")]
		[Address(RVA = "0xD4F59C", Offset = "0xD4F59C", VA = "0xD4F59C")]
		public void ShowAndActivate()
		{
		}

		[Token(Token = "0x6002208")]
		[Address(RVA = "0xD4F448", Offset = "0xD4F448", VA = "0xD4F448")]
		public void HideAndDeactivate()
		{
		}

		[Token(Token = "0x6002209")]
		[Address(RVA = "0xD4F33C", Offset = "0xD4F33C", VA = "0xD4F33C")]
		public bool ShouldBeVisibleAndActive()
		{
			return default(bool);
		}

		[Token(Token = "0x600220A")]
		[Address(RVA = "0xD4FC50", Offset = "0xD4FC50", VA = "0xD4FC50")]
		private GameObject[] GetAllChildObjects()
		{
			return null;
		}

		[Token(Token = "0x600220B")]
		[Address(RVA = "0xD4FD80", Offset = "0xD4FD80", VA = "0xD4FD80", Slot = "4")]
		public override ComponentState CreateState()
		{
			return null;
		}

		[Token(Token = "0x600220C")]
		[Address(RVA = "0xD4FE14", Offset = "0xD4FE14", VA = "0xD4FE14")]
		public TotemDirtPile()
		{
		}
	}
	[Token(Token = "0x20005AB")]
	public class TotemDirtPileState : ComponentState
	{
		[Token(Token = "0x4002131")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public MissionBeaconMapType MapForActivation;

		[Token(Token = "0x600220D")]
		[Address(RVA = "0xD4FDE8", Offset = "0xD4FDE8", VA = "0xD4FDE8")]
		public TotemDirtPileState(MissionBeaconMapType inMapForActivation)
		{
		}
	}
}
namespace NeatCorp.Quests.Cultivation
{
	[Token(Token = "0x20005AC")]
	public enum CheckPlantPart
	{
		[Token(Token = "0x4002133")]
		Head,
		[Token(Token = "0x4002134")]
		Body,
		[Token(Token = "0x4002135")]
		Any
	}
	[Token(Token = "0x20005AD")]
	public class GrowPlantsQuest : SaveableComponent, IInitializable
	{
		[Token(Token = "0x20005AE")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9747DC", Offset = "0x9747DC")]
		private sealed class <ActivateLinkedQuestRoutine>d__34 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002149")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400214A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400214B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public GrowPlantsQuest <>4__this;

			[Token(Token = "0x1700038E")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002224")]
				[Address(RVA = "0xE9D230", Offset = "0xE9D230", VA = "0xE9D230", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700038F")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002226")]
				[Address(RVA = "0xE9D298", Offset = "0xE9D298", VA = "0xE9D298", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002221")]
			[Address(RVA = "0xE9D030", Offset = "0xE9D030", VA = "0xE9D030")]
			[DebuggerHidden]
			public <ActivateLinkedQuestRoutine>d__34(int <>1__state)
			{
			}

			[Token(Token = "0x6002222")]
			[Address(RVA = "0xE9D13C", Offset = "0xE9D13C", VA = "0xE9D13C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002223")]
			[Address(RVA = "0xE9D140", Offset = "0xE9D140", VA = "0xE9D140", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002225")]
			[Address(RVA = "0xE9D238", Offset = "0xE9D238", VA = "0xE9D238", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20005AF")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9747EC", Offset = "0x9747EC")]
		private sealed class <RemoveRoutine>d__35 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400214C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400214D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400214E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public GrowPlantsQuest <>4__this;

			[Token(Token = "0x400214F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private int <length>5__2;

			[Token(Token = "0x4002150")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private int <i>5__3;

			[Token(Token = "0x17000390")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600222A")]
				[Address(RVA = "0xE9D4A8", Offset = "0xE9D4A8", VA = "0xE9D4A8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000391")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600222C")]
				[Address(RVA = "0xE9D510", Offset = "0xE9D510", VA = "0xE9D510", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002227")]
			[Address(RVA = "0xE9D05C", Offset = "0xE9D05C", VA = "0xE9D05C")]
			[DebuggerHidden]
			public <RemoveRoutine>d__35(int <>1__state)
			{
			}

			[Token(Token = "0x6002228")]
			[Address(RVA = "0xE9D2A0", Offset = "0xE9D2A0", VA = "0xE9D2A0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002229")]
			[Address(RVA = "0xE9D2A4", Offset = "0xE9D2A4", VA = "0xE9D2A4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600222B")]
			[Address(RVA = "0xE9D4B0", Offset = "0xE9D4B0", VA = "0xE9D4B0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4002136")]
		private const float PopOutDuration = 1f;

		[Token(Token = "0x4002137")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private CraftingSystem.ResourceType m_resourceType;

		[Token(Token = "0x4002138")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		private int m_number;

		[Token(Token = "0x4002139")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private CheckPlantPart m_checkPart;

		[Token(Token = "0x400213A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private CraftingCanvas m_connectedCanvas;

		[Token(Token = "0x400213B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x980F58", Offset = "0x980F58")]
		public UnityEvent OnPlanted;

		[Token(Token = "0x400213C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public UnityEvent OnGrown;

		[Token(Token = "0x400213D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public UnityEvent OnFinished;

		[Token(Token = "0x400213E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private List<PlantPositionProxy> m_plantsPlanted;

		[Token(Token = "0x400213F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private OptimizedCollection<PlantPositionProxy> m_plantsGrown;

		[Token(Token = "0x4002140")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private bool m_initialized;

		[Token(Token = "0x4002141")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x71")]
		private bool m_isSolved;

		[Token(Token = "0x4002142")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x980F90", Offset = "0x980F90")]
		private Transform[] m_itemsToRemove;

		[Token(Token = "0x4002143")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private Transform m_questRoot;

		[Token(Token = "0x4002144")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private bool m_removeOnCompleted;

		[Token(Token = "0x4002145")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x980FFC", Offset = "0x980FFC")]
		[SerializeField]
		private SendQuestEvent m_activateQuestEvent;

		[Token(Token = "0x4002146")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		private float m_delay;

		[Token(Token = "0x4002147")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private Sequence m_tweenSequence;

		[Token(Token = "0x4002148")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private YieldInstruction m_delayInstruction;

		[Token(Token = "0x600220E")]
		[Address(RVA = "0xE9C0FC", Offset = "0xE9C0FC", VA = "0xE9C0FC")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x600220F")]
		[Address(RVA = "0xE9C1D0", Offset = "0xE9C1D0", VA = "0xE9C1D0")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002210")]
		[Address(RVA = "0xE9C100", Offset = "0xE9C100", VA = "0xE9C100")]
		private void TryInitializeCollections()
		{
		}

		[Token(Token = "0x6002211")]
		[Address(RVA = "0xE9C1D4", Offset = "0xE9C1D4", VA = "0xE9C1D4", Slot = "4")]
		public override ComponentState CreateState()
		{
			return null;
		}

		[Token(Token = "0x6002212")]
		[Address(RVA = "0xE9C26C", Offset = "0xE9C26C", VA = "0xE9C26C", Slot = "5")]
		public void Initialize()
		{
		}

		[Token(Token = "0x6002213")]
		[Address(RVA = "0xE9C378", Offset = "0xE9C378", VA = "0xE9C378")]
		public void OnTriggerUpdated(Component[] updatedComponents)
		{
		}

		[Token(Token = "0x6002214")]
		[Address(RVA = "0xE9C39C", Offset = "0xE9C39C", VA = "0xE9C39C")]
		private void UpdatePlantsRegistry(Component[] updatedComponents)
		{
		}

		[Token(Token = "0x6002215")]
		[Address(RVA = "0xE9C8A8", Offset = "0xE9C8A8", VA = "0xE9C8A8")]
		private bool HasMatchingResourceType(PlantPositionProxy plantPositionProxy)
		{
			return default(bool);
		}

		[Token(Token = "0x6002216")]
		[Address(RVA = "0xE9C8AC", Offset = "0xE9C8AC", VA = "0xE9C8AC")]
		private bool HasMatchingResourceType(PlantPositionProxy plantPositionProxy, CraftingSystem.ResourceType resourceType)
		{
			return default(bool);
		}

		[Token(Token = "0x6002217")]
		[Address(RVA = "0xE9C790", Offset = "0xE9C790", VA = "0xE9C790")]
		private void ClearRemovedComponents(OptimizedCollection<Component> currentComponentCollection)
		{
		}

		[Token(Token = "0x6002218")]
		[Address(RVA = "0xE9C5FC", Offset = "0xE9C5FC", VA = "0xE9C5FC")]
		public void CheckPlantsGrowth()
		{
		}

		[Token(Token = "0x6002219")]
		[Address(RVA = "0xE9C92C", Offset = "0xE9C92C", VA = "0xE9C92C")]
		private void TryUpdateConnectedCanvas(PlantPositionProxy[] plants)
		{
		}

		[Token(Token = "0x600221A")]
		[Address(RVA = "0xE9C30C", Offset = "0xE9C30C", VA = "0xE9C30C")]
		public void CompleteQuest()
		{
		}

		[Token(Token = "0x600221B")]
		[Address(RVA = "0xE9CCA4", Offset = "0xE9CCA4", VA = "0xE9CCA4")]
		public void RemoveItems()
		{
		}

		[Token(Token = "0x600221C")]
		[Address(RVA = "0xE9CF00", Offset = "0xE9CF00", VA = "0xE9CF00")]
		private void OnItemsRemoved()
		{
		}

		[Token(Token = "0x600221D")]
		[Address(RVA = "0xE9CFB4", Offset = "0xE9CFB4", VA = "0xE9CFB4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x992EB4", Offset = "0x992EB4")]
		private IEnumerator ActivateLinkedQuestRoutine()
		{
			return null;
		}

		[Token(Token = "0x600221E")]
		[Address(RVA = "0xE9CE84", Offset = "0xE9CE84", VA = "0xE9CE84")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x992F18", Offset = "0x992F18")]
		private IEnumerator RemoveRoutine()
		{
			return null;
		}

		[Token(Token = "0x600221F")]
		[Address(RVA = "0xE9CC20", Offset = "0xE9CC20", VA = "0xE9CC20")]
		public void RemoveQuest()
		{
		}

		[Token(Token = "0x6002220")]
		[Address(RVA = "0xE9D088", Offset = "0xE9D088", VA = "0xE9D088")]
		public GrowPlantsQuest()
		{
		}
	}
	[Token(Token = "0x20005B0")]
	public class GrowPlantsQuestState : ComponentState
	{
		[Token(Token = "0x4002151")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool IsSolved;

		[Token(Token = "0x600222D")]
		[Address(RVA = "0xE9C23C", Offset = "0xE9C23C", VA = "0xE9C23C")]
		public GrowPlantsQuestState(bool isSolved)
		{
		}
	}
}
namespace NeatCorp.Quests.Boat
{
	[Token(Token = "0x20005B1")]
	public class BoatBubbleController : SaveableComponent, IInitializable
	{
		[Token(Token = "0x20005B2")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9747FC", Offset = "0x9747FC")]
		private sealed class <RemoveRoutine>d__21 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400215F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002160")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002161")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public BoatBubbleController <>4__this;

			[Token(Token = "0x4002162")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private int <length>5__2;

			[Token(Token = "0x4002163")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private int <i>5__3;

			[Token(Token = "0x17000392")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600223C")]
				[Address(RVA = "0xE9B880", Offset = "0xE9B880", VA = "0xE9B880", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000393")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600223E")]
				[Address(RVA = "0xE9B8E8", Offset = "0xE9B8E8", VA = "0xE9B8E8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002239")]
			[Address(RVA = "0xE9B5A4", Offset = "0xE9B5A4", VA = "0xE9B5A4")]
			[DebuggerHidden]
			public <RemoveRoutine>d__21(int <>1__state)
			{
			}

			[Token(Token = "0x600223A")]
			[Address(RVA = "0xE9B678", Offset = "0xE9B678", VA = "0xE9B678", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600223B")]
			[Address(RVA = "0xE9B67C", Offset = "0xE9B67C", VA = "0xE9B67C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600223D")]
			[Address(RVA = "0xE9B888", Offset = "0xE9B888", VA = "0xE9B888", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4002152")]
		private const float PopOutDuration = 1f;

		[Token(Token = "0x4002153")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private CraftingCanvasSprite m_top;

		[Token(Token = "0x4002154")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private CraftingCanvasSprite m_wheel;

		[Token(Token = "0x4002155")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private CraftingCanvasSprite m_engine;

		[Token(Token = "0x4002156")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private CraftingCanvasSprite m_hull;

		[Token(Token = "0x4002157")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private Transform[] m_itemsToRemove;

		[Token(Token = "0x4002158")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private Transform m_questRoot;

		[Token(Token = "0x4002159")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private bool m_removeOnCompleted;

		[Token(Token = "0x400215A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9810C8", Offset = "0x9810C8")]
		private UnityEvent OnPartCompleted;

		[Token(Token = "0x400215B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private UnityEvent OnFinished;

		[Token(Token = "0x400215C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Sequence m_tweenSequence;

		[Token(Token = "0x400215D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private YieldInstruction m_delayInstruction;

		[Token(Token = "0x400215E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private bool m_initialized;

		[Token(Token = "0x600222E")]
		[Address(RVA = "0xE9AD34", Offset = "0xE9AD34", VA = "0xE9AD34", Slot = "5")]
		public void Initialize()
		{
		}

		[Token(Token = "0x600222F")]
		[Address(RVA = "0xE9AEA8", Offset = "0xE9AEA8", VA = "0xE9AEA8", Slot = "4")]
		public override ComponentState CreateState()
		{
			return null;
		}

		[Token(Token = "0x6002230")]
		[Address(RVA = "0xE9AE34", Offset = "0xE9AE34", VA = "0xE9AE34")]
		private void SetPartsActive(BoatBubbleControllerState s)
		{
		}

		[Token(Token = "0x6002231")]
		[Address(RVA = "0xE9AFC0", Offset = "0xE9AFC0", VA = "0xE9AFC0")]
		private void OnBoatPartCompleted(BoatQuestEvent e)
		{
		}

		[Token(Token = "0x6002232")]
		[Address(RVA = "0xE9B088", Offset = "0xE9B088", VA = "0xE9B088")]
		private bool CheckIfFinished()
		{
			return default(bool);
		}

		[Token(Token = "0x6002233")]
		[Address(RVA = "0xE9B0E8", Offset = "0xE9B0E8", VA = "0xE9B0E8")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6002234")]
		[Address(RVA = "0xE9B1CC", Offset = "0xE9B1CC", VA = "0xE9B1CC")]
		public void RemoveBubble()
		{
		}

		[Token(Token = "0x6002235")]
		[Address(RVA = "0xE9B470", Offset = "0xE9B470", VA = "0xE9B470")]
		private void OnBubbleRemoved()
		{
		}

		[Token(Token = "0x6002236")]
		[Address(RVA = "0xE9B3F4", Offset = "0xE9B3F4", VA = "0xE9B3F4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x99301C", Offset = "0x99301C")]
		private IEnumerator RemoveRoutine()
		{
			return null;
		}

		[Token(Token = "0x6002237")]
		[Address(RVA = "0xE9B520", Offset = "0xE9B520", VA = "0xE9B520")]
		public void RemoveQuest()
		{
		}

		[Token(Token = "0x6002238")]
		[Address(RVA = "0xE9B5D0", Offset = "0xE9B5D0", VA = "0xE9B5D0")]
		public BoatBubbleController()
		{
		}
	}
	[Token(Token = "0x20005B3")]
	public class BoatBubbleControllerState : ComponentState
	{
		[Token(Token = "0x4002164")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool HasTop;

		[Token(Token = "0x4002165")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		public bool HasWheel;

		[Token(Token = "0x4002166")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12")]
		public bool HasEngine;

		[Token(Token = "0x4002167")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x13")]
		public bool HasHull;

		[Token(Token = "0x600223F")]
		[Address(RVA = "0xE9AF5C", Offset = "0xE9AF5C", VA = "0xE9AF5C")]
		public BoatBubbleControllerState(bool hasTop, bool hasWheel, bool hasEngine, bool hasHull)
		{
		}
	}
	[Token(Token = "0x20005B4")]
	public enum BoatQuestEventType
	{
		[Token(Token = "0x4002169")]
		Top,
		[Token(Token = "0x400216A")]
		Wheel,
		[Token(Token = "0x400216B")]
		Engine,
		[Token(Token = "0x400216C")]
		Hull
	}
	[Token(Token = "0x20005B5")]
	public class BoatQuestEvent : GameEvent
	{
		[Token(Token = "0x400216D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public BoatQuestEventType Part;

		[Token(Token = "0x400216E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public bool Completed;

		[Token(Token = "0x6002240")]
		[Address(RVA = "0xE9ACEC", Offset = "0xE9ACEC", VA = "0xE9ACEC")]
		public BoatQuestEvent(BoatQuestEventType part, bool completed)
		{
		}
	}
}
namespace NeatCorp.Quests.Trading
{
	[Token(Token = "0x20005B6")]
	public class TradingPostQuest : MonoBehaviour
	{
		[Token(Token = "0x20005B7")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x97480C", Offset = "0x97480C")]
		private sealed class <PlayFireworksAfterDuration>d__12 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002176")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002177")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002178")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public TradingPostQuest <>4__this;

			[Token(Token = "0x17000394")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600224F")]
				[Address(RVA = "0xD513C8", Offset = "0xD513C8", VA = "0xD513C8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000395")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002251")]
				[Address(RVA = "0xD51430", Offset = "0xD51430", VA = "0xD51430", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600224C")]
			[Address(RVA = "0xD511CC", Offset = "0xD511CC", VA = "0xD511CC")]
			[DebuggerHidden]
			public <PlayFireworksAfterDuration>d__12(int <>1__state)
			{
			}

			[Token(Token = "0x600224D")]
			[Address(RVA = "0xD51308", Offset = "0xD51308", VA = "0xD51308", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600224E")]
			[Address(RVA = "0xD5130C", Offset = "0xD5130C", VA = "0xD5130C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002250")]
			[Address(RVA = "0xD513D0", Offset = "0xD513D0", VA = "0xD513D0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400216F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly int m_flagPoleActiveParamaId;

		[Token(Token = "0x4002170")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private static readonly int m_flagPoleTriggerParamId;

		[Token(Token = "0x4002171")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private MerchantType m_merchantType;

		[Token(Token = "0x4002172")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GameObject[] m_objectsToActivate;

		[Token(Token = "0x4002173")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private GameObject[] m_objectsToRemove;

		[Token(Token = "0x4002174")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Animator m_animator;

		[Token(Token = "0x4002175")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private ParticleSystem m_fireworks;

		[Token(Token = "0x6002241")]
		[Address(RVA = "0xD50D7C", Offset = "0xD50D7C", VA = "0xD50D7C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6002242")]
		[Address(RVA = "0xD50E24", Offset = "0xD50E24", VA = "0xD50E24")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6002243")]
		[Address(RVA = "0xD50ECC", Offset = "0xD50ECC", VA = "0xD50ECC")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6002244")]
		[Address(RVA = "0xD50ED4", Offset = "0xD50ED4", VA = "0xD50ED4")]
		private void OnUnlocked(UnlockMerchantEvent e)
		{
		}

		[Token(Token = "0x6002245")]
		[Address(RVA = "0xD510B0", Offset = "0xD510B0", VA = "0xD510B0")]
		private void PlayTradingPostAnimations()
		{
		}

		[Token(Token = "0x6002246")]
		[Address(RVA = "0xD51150", Offset = "0xD51150", VA = "0xD51150")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9930D0", Offset = "0x9930D0")]
		private IEnumerator PlayFireworksAfterDuration()
		{
			return null;
		}

		[Token(Token = "0x6002247")]
		[Address(RVA = "0xD50F30", Offset = "0xD50F30", VA = "0xD50F30")]
		private void ActivateDynamicObjects()
		{
		}

		[Token(Token = "0x6002248")]
		[Address(RVA = "0xD50FB4", Offset = "0xD50FB4", VA = "0xD50FB4")]
		private void RemoveDynamicObjects()
		{
		}

		[Token(Token = "0x6002249")]
		[Address(RVA = "0xD511F8", Offset = "0xD511F8", VA = "0xD511F8")]
		public void SetFlagRaised()
		{
		}

		[Token(Token = "0x600224A")]
		[Address(RVA = "0xD5127C", Offset = "0xD5127C", VA = "0xD5127C")]
		public TradingPostQuest()
		{
		}
	}
}
namespace NeatCorp.Home
{
	[Token(Token = "0x20005B8")]
	public class HomeUpgradeObjective : CraftItemObjective
	{
		[Token(Token = "0x4002179")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private GameObject[] m_enableOnComplete;

		[Token(Token = "0x400217A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private GameObject[] m_disableOnComplete;

		[Token(Token = "0x6002252")]
		[Address(RVA = "0xC2D1A0", Offset = "0xC2D1A0", VA = "0xC2D1A0", Slot = "6")]
		public override void OnCraftedItem()
		{
		}

		[Token(Token = "0x6002253")]
		[Address(RVA = "0xC2D304", Offset = "0xC2D304", VA = "0xC2D304")]
		private void EnableObjectsOnComplete()
		{
		}

		[Token(Token = "0x6002254")]
		[Address(RVA = "0xC2D274", Offset = "0xC2D274", VA = "0xC2D274")]
		private void DisableObjectsOnComplete()
		{
		}

		[Token(Token = "0x6002255")]
		[Address(RVA = "0xC2D394", Offset = "0xC2D394", VA = "0xC2D394")]
		private void SetChildrenActive(Transform parent, bool shouldBeActive)
		{
		}

		[Token(Token = "0x6002256")]
		[Address(RVA = "0xC2D438", Offset = "0xC2D438", VA = "0xC2D438")]
		public HomeUpgradeObjective()
		{
		}
	}
	[Token(Token = "0x20005B9")]
	public class HomeManager : MonoBehaviour
	{
		[Token(Token = "0x400217B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private HomeType m_currentHomeType;

		[Token(Token = "0x400217C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private HomeDictionary m_homes;

		[Token(Token = "0x400217D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private AssetReference[] m_homeAssetRefs;

		[Token(Token = "0x400217E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9811C4", Offset = "0x9811C4")]
		[SerializeField]
		private Animator m_upgradeAnimation;

		[Token(Token = "0x400217F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private AnimationPlayback m_animationPlayback;

		[Token(Token = "0x4002180")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private AnimatorPlaybackData m_emptyToTentData;

		[Token(Token = "0x4002181")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private AnimatorPlaybackData m_tentToHouseData;

		[Token(Token = "0x4002182")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private AnimatorPlaybackData m_houseToMansionData;

		[Token(Token = "0x4002183")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private AnimatorPlaybackData m_mansionToEndGameData;

		[Token(Token = "0x4002184")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private int m_totalAnimationFrames;

		[Token(Token = "0x4002185")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Dictionary<HomeType, AssetReference> m_homeRefsDict;

		[Token(Token = "0x4002186")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Home m_currentHome;

		[Token(Token = "0x4002187")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Home m_homeToReplace;

		[Token(Token = "0x4002188")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Home m_newHome;

		[Token(Token = "0x4002189")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private bool m_hasInitialized;

		[Token(Token = "0x400218A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private HouseholdObjectLocations m_initialObjectLocations;

		[Token(Token = "0x400218B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static HomeManager sm_instance;

		[Token(Token = "0x400218C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private HomeUpgradePhysics m_upgradePhysics;

		[Token(Token = "0x400218D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private AnimatorPlaybackData m_currentAnimatorData;

		[Token(Token = "0x400218E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private AnimatorPlaybackData[] m_animatorPlaybackData;

		[Token(Token = "0x400218F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static HouseholdObject[] sm_householdObjects;

		[Token(Token = "0x17000396")]
		public static HomeManager Instance
		{
			[Token(Token = "0x6002257")]
			[Address(RVA = "0xC2B400", Offset = "0xC2B400", VA = "0xC2B400")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000397")]
		public static HomeType CurrentHomeType
		{
			[Token(Token = "0x6002258")]
			[Address(RVA = "0xC2B468", Offset = "0xC2B468", VA = "0xC2B468")]
			get
			{
				return default(HomeType);
			}
		}

		[Token(Token = "0x6002259")]
		[Address(RVA = "0xC2B59C", Offset = "0xC2B59C", VA = "0xC2B59C")]
		private void Awake()
		{
		}

		[Token(Token = "0x600225A")]
		[Address(RVA = "0xC2B6D4", Offset = "0xC2B6D4", VA = "0xC2B6D4")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600225B")]
		[Address(RVA = "0xC2B790", Offset = "0xC2B790", VA = "0xC2B790")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x600225C")]
		[Address(RVA = "0xC2B4C4", Offset = "0xC2B4C4", VA = "0xC2B4C4")]
		private static HomeType GetHomeType()
		{
			return default(HomeType);
		}

		[Token(Token = "0x600225D")]
		[Address(RVA = "0xC2B900", Offset = "0xC2B900", VA = "0xC2B900")]
		private void TempBrokenUpgradeFix()
		{
		}

		[Token(Token = "0x600225E")]
		[Address(RVA = "0xC2B9CC", Offset = "0xC2B9CC", VA = "0xC2B9CC")]
		public static void RegisterCurrentHome(Home home)
		{
		}

		[Token(Token = "0x600225F")]
		[Address(RVA = "0xC2BE8C", Offset = "0xC2BE8C", VA = "0xC2BE8C")]
		public static void PrepareToRegisterHouseholdObject(HouseholdObject householdObject)
		{
		}

		[Token(Token = "0x6002260")]
		[Address(RVA = "0xC2BF54", Offset = "0xC2BF54", VA = "0xC2BF54")]
		private void RegisterHouseholdObjects()
		{
		}

		[Token(Token = "0x6002261")]
		[Address(RVA = "0xC2BD74", Offset = "0xC2BD74", VA = "0xC2BD74")]
		private void HandleInitialization()
		{
		}

		[Token(Token = "0x6002262")]
		[Address(RVA = "0xC2C0A0", Offset = "0xC2C0A0", VA = "0xC2C0A0")]
		private void UnlockAchievementsRetroactivly()
		{
		}

		[Token(Token = "0x6002263")]
		[Address(RVA = "0xC2C298", Offset = "0xC2C298", VA = "0xC2C298")]
		private bool TryIncreaseHomeLevel()
		{
			return default(bool);
		}

		[Token(Token = "0x6002264")]
		[Address(RVA = "0xC2C3B0", Offset = "0xC2C3B0", VA = "0xC2C3B0")]
		public void UpgradeHome()
		{
		}

		[Token(Token = "0x6002265")]
		[Address(RVA = "0xC2C66C", Offset = "0xC2C66C", VA = "0xC2C66C")]
		private AnimatorPlaybackData GetAnimatorPlaybackData(int level)
		{
			return null;
		}

		[Token(Token = "0x6002266")]
		[Address(RVA = "0xC2CAA0", Offset = "0xC2CAA0", VA = "0xC2CAA0")]
		private void OnAnimationPlaybackEvent(AnimationPlaybackEvent e)
		{
		}

		[Token(Token = "0x6002267")]
		[Address(RVA = "0xC2CAD8", Offset = "0xC2CAD8", VA = "0xC2CAD8")]
		private void OnPreInitializeHome(SpawnOperationCallbackData obj)
		{
		}

		[Token(Token = "0x6002268")]
		[Address(RVA = "0xC2CC24", Offset = "0xC2CC24", VA = "0xC2CC24")]
		private void OnInitialObjectsSpawned()
		{
		}

		[Token(Token = "0x6002269")]
		[Address(RVA = "0xC2CC74", Offset = "0xC2CC74", VA = "0xC2CC74")]
		private void OnRequieredObjectsPreInit()
		{
		}

		[Token(Token = "0x600226A")]
		[Address(RVA = "0xC2CDDC", Offset = "0xC2CDDC", VA = "0xC2CDDC")]
		private void OnRequieredObjectsPostInit()
		{
		}

		[Token(Token = "0x600226B")]
		[Address(RVA = "0xC2CE74", Offset = "0xC2CE74", VA = "0xC2CE74")]
		public void OnPostCollisionHandling()
		{
		}

		[Token(Token = "0x600226C")]
		[Address(RVA = "0xC2CE90", Offset = "0xC2CE90", VA = "0xC2CE90")]
		public HomeManager()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20005BA")]
	public class HomeState : ComponentState
	{
		[Token(Token = "0x4002190")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool HasInitializedHouseholdObjects;

		[Token(Token = "0x600226E")]
		[Address(RVA = "0xC2D170", Offset = "0xC2D170", VA = "0xC2D170")]
		public HomeState(bool hasInitializedHouseholdObjects)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20005BB")]
	public enum HomeType
	{
		[Token(Token = "0x4002192")]
		Unset,
		[Token(Token = "0x4002193")]
		Camp,
		[Token(Token = "0x4002194")]
		Tent,
		[Token(Token = "0x4002195")]
		House,
		[Token(Token = "0x4002196")]
		Mansion,
		[Token(Token = "0x4002197")]
		EndGame
	}
	[Token(Token = "0x20005BC")]
	public struct HouseholdCollision
	{
		[Token(Token = "0x4002198")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Collider Collider;

		[Token(Token = "0x4002199")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Grabbable Grabbable;

		[Token(Token = "0x600226F")]
		[Address(RVA = "0xA43710", Offset = "0xA43710", VA = "0xA43710")]
		public HouseholdCollision(Collider householdObject, Grabbable grabbable)
		{
		}
	}
	[Token(Token = "0x20005BD")]
	public struct GrabbablePhysicsState
	{
		[Token(Token = "0x400219A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Grabbable Grabbable;

		[Token(Token = "0x400219B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public bool KinematicState;

		[Token(Token = "0x400219C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float MaxDepenetrationVelocity;

		[Token(Token = "0x6002270")]
		[Address(RVA = "0xA45B9C", Offset = "0xA45B9C", VA = "0xA45B9C")]
		public GrabbablePhysicsState(Grabbable grabbable)
		{
		}
	}
	[Token(Token = "0x20005BE")]
	public class HomeUpgradePhysics
	{
		[Token(Token = "0x20005BF")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x97481C", Offset = "0x97481C")]
		private sealed class <HandleCollisions>d__22 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40021AB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40021AC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40021AD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public HomeUpgradePhysics <>4__this;

			[Token(Token = "0x40021AE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Home newHome;

			[Token(Token = "0x17000398")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600228A")]
				[Address(RVA = "0xC2F5E8", Offset = "0xC2F5E8", VA = "0xC2F5E8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000399")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600228C")]
				[Address(RVA = "0xC2F650", Offset = "0xC2F650", VA = "0xC2F650", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002287")]
			[Address(RVA = "0xC2DCF4", Offset = "0xC2DCF4", VA = "0xC2DCF4")]
			[DebuggerHidden]
			public <HandleCollisions>d__22(int <>1__state)
			{
			}

			[Token(Token = "0x6002288")]
			[Address(RVA = "0xC2F45C", Offset = "0xC2F45C", VA = "0xC2F45C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002289")]
			[Address(RVA = "0xC2F460", Offset = "0xC2F460", VA = "0xC2F460", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600228B")]
			[Address(RVA = "0xC2F5F0", Offset = "0xC2F5F0", VA = "0xC2F5F0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20005C0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x97482C", Offset = "0x97482C")]
		private sealed class <HandleGrabbableCollision>d__31 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40021AF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40021B0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40021B1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public HomeUpgradePhysics <>4__this;

			[Token(Token = "0x40021B2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public HouseholdCollision[] objectCollisions;

			[Token(Token = "0x40021B3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Vector3 homePosition;

			[Token(Token = "0x40021B4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private int <collidingObjectsCount>5__2;

			[Token(Token = "0x1700039A")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002290")]
				[Address(RVA = "0xC2F764", Offset = "0xC2F764", VA = "0xC2F764", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700039B")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002292")]
				[Address(RVA = "0xC2F7CC", Offset = "0xC2F7CC", VA = "0xC2F7CC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600228D")]
			[Address(RVA = "0xC2EDAC", Offset = "0xC2EDAC", VA = "0xC2EDAC")]
			[DebuggerHidden]
			public <HandleGrabbableCollision>d__31(int <>1__state)
			{
			}

			[Token(Token = "0x600228E")]
			[Address(RVA = "0xC2F658", Offset = "0xC2F658", VA = "0xC2F658", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600228F")]
			[Address(RVA = "0xC2F65C", Offset = "0xC2F65C", VA = "0xC2F65C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002291")]
			[Address(RVA = "0xC2F76C", Offset = "0xC2F76C", VA = "0xC2F76C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400219D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int MaxIterations;

		[Token(Token = "0x400219E")]
		private const bool PlaceWallObjectsInChest = true;

		[Token(Token = "0x400219F")]
		private const float NegativeThreshold = -0.1f;

		[Token(Token = "0x40021A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private HomeManager m_targetBehaviour;

		[Token(Token = "0x40021A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Collider[] m_overlapColliders;

		[Token(Token = "0x40021A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Coroutine m_handleGrabbableCollisionRoutine;

		[Token(Token = "0x40021A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Coroutine m_handleCollisionIterationRoutine;

		[Token(Token = "0x40021A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private List<HouseholdCollision> m_collidingGrabbablesForHouseholdObject;

		[Token(Token = "0x40021A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool m_successfulCollisionIteration;

		[Token(Token = "0x40021A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
		private bool m_isDepenetratingColliders;

		[Token(Token = "0x40021A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x42")]
		private bool m_isCollisionsResolved;

		[Token(Token = "0x40021A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private List<Stashable> m_wallObjects;

		[Token(Token = "0x40021A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private List<GrabbablePhysicsState> m_grabbablesInHouse;

		[Token(Token = "0x40021AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private List<Grabbable> m_collidingGrabbables;

		[Token(Token = "0x6002271")]
		[Address(RVA = "0xC2B85C", Offset = "0xC2B85C", VA = "0xC2B85C")]
		public void ShutDown(MonoBehaviour behaviour)
		{
		}

		[Token(Token = "0x6002272")]
		[Address(RVA = "0xC2D6D0", Offset = "0xC2D6D0", VA = "0xC2D6D0")]
		private Bounds GetHouseBounds(Home homeToReplace)
		{
			return default(Bounds);
		}

		[Token(Token = "0x6002273")]
		[Address(RVA = "0xC2C84C", Offset = "0xC2C84C", VA = "0xC2C84C")]
		public void PrepareForUpgrade(Home currentHome, Home homeToReplace)
		{
		}

		[Token(Token = "0x6002274")]
		[Address(RVA = "0xC2CDFC", Offset = "0xC2CDFC", VA = "0xC2CDFC")]
		public void PlaceWallObjectsInStorage(Home newHome)
		{
		}

		[Token(Token = "0x6002275")]
		[Address(RVA = "0xC2D904", Offset = "0xC2D904", VA = "0xC2D904")]
		public void SetGrabbablePhysics(Grabbable grabbable, bool shouldBeKinematic, float depenetrationVelocityMultiplier)
		{
		}

		[Token(Token = "0x6002276")]
		[Address(RVA = "0xC2DABC", Offset = "0xC2DABC", VA = "0xC2DABC")]
		private void WakeAllGrabbables()
		{
		}

		[Token(Token = "0x6002277")]
		[Address(RVA = "0xC2D4C0", Offset = "0xC2D4C0", VA = "0xC2D4C0")]
		public void ResetAllGrabbablesKinematic()
		{
		}

		[Token(Token = "0x6002278")]
		[Address(RVA = "0xC2D5C8", Offset = "0xC2D5C8", VA = "0xC2D5C8")]
		private void ResetDepenetrationVelocity()
		{
		}

		[Token(Token = "0x6002279")]
		[Address(RVA = "0xC2DC5C", Offset = "0xC2DC5C", VA = "0xC2DC5C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x993184", Offset = "0x993184")]
		private IEnumerator HandleCollisions(Home newHome)
		{
			return null;
		}

		[Token(Token = "0x600227A")]
		[Address(RVA = "0xC2DD20", Offset = "0xC2DD20", VA = "0xC2DD20")]
		private Coroutine HandleObjectCollision(Home home)
		{
			return null;
		}

		[Token(Token = "0x600227B")]
		[Address(RVA = "0xC2DE74", Offset = "0xC2DE74", VA = "0xC2DE74")]
		private void AddHouseholdObjectCollisions(Home home)
		{
		}

		[Token(Token = "0x600227C")]
		[Address(RVA = "0xC2E0C0", Offset = "0xC2E0C0", VA = "0xC2E0C0")]
		private void AddPrefabCollidersCollisions(Home home)
		{
		}

		[Token(Token = "0x600227D")]
		[Address(RVA = "0xC2CD54", Offset = "0xC2CD54", VA = "0xC2CD54")]
		public void StartCollisionHandling(HomeManager behaviour, Home newHome)
		{
		}

		[Token(Token = "0x600227E")]
		[Address(RVA = "0xC2E654", Offset = "0xC2E654", VA = "0xC2E654")]
		private Grabbable[] GetCollisionsForObject(Collider householdObjectCollider)
		{
			return null;
		}

		[Token(Token = "0x600227F")]
		[Address(RVA = "0xC2E8FC", Offset = "0xC2E8FC", VA = "0xC2E8FC")]
		private void GetOverlapBoxProperties(BoxCollider boxCollider, out Vector3 origin, out Vector3 halfExtents)
		{
		}

		[Token(Token = "0x6002280")]
		[Address(RVA = "0xC2ED08", Offset = "0xC2ED08", VA = "0xC2ED08")]
		private Grabbable[] GetCollisionsForBounds(Bounds bounds, Vector3 scale, Quaternion rotation)
		{
			return null;
		}

		[Token(Token = "0x6002281")]
		[Address(RVA = "0xC2EB2C", Offset = "0xC2EB2C", VA = "0xC2EB2C")]
		private Grabbable[] GetOverlapBoxCollisions(Vector3 center, Vector3 size, Quaternion rotation)
		{
			return null;
		}

		[Token(Token = "0x6002282")]
		[Address(RVA = "0xC2E358", Offset = "0xC2E358", VA = "0xC2E358")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9931E8", Offset = "0x9931E8")]
		private IEnumerator HandleGrabbableCollision(Vector3 homePosition, HouseholdCollision[] objectCollisions)
		{
			return null;
		}

		[Token(Token = "0x6002283")]
		[Address(RVA = "0xC2EDD8", Offset = "0xC2EDD8", VA = "0xC2EDD8")]
		private bool TryMoveOutOfCollision(Vector3 homePosition, Collider collider, Grabbable grabbable)
		{
			return default(bool);
		}

		[Token(Token = "0x6002284")]
		[Address(RVA = "0xC2F030", Offset = "0xC2F030", VA = "0xC2F030")]
		private bool ReversedBoxcast(Vector3 origin, Vector3 houseCentreDirection, Collider[] grabbableColliders, out Vector3 depenetration)
		{
			return default(bool);
		}

		[Token(Token = "0x6002285")]
		[Address(RVA = "0xC2D9A4", Offset = "0xC2D9A4", VA = "0xC2D9A4")]
		private void AddObjectToStorageInventory(Home currentHome, List<Stashable> wallObjects)
		{
		}

		[Token(Token = "0x6002286")]
		[Address(RVA = "0xC2CFB0", Offset = "0xC2CFB0", VA = "0xC2CFB0")]
		public HomeUpgradePhysics()
		{
		}
	}
	[Token(Token = "0x20005C1")]
	public class HomeUpgradeQuestState : ComponentState
	{
		[Token(Token = "0x40021B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public HomeType HomeType;

		[Token(Token = "0x6002293")]
		[Address(RVA = "0xC2F7D4", Offset = "0xC2F7D4", VA = "0xC2F7D4")]
		public HomeUpgradeQuestState(HomeType homeType)
		{
		}
	}
	[Token(Token = "0x20005C2")]
	public class HomeUpgradeQuests : SaveableComponent, IInitializable
	{
		[Token(Token = "0x20005C3")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x97483C", Offset = "0x97483C")]
		private sealed class <ShowNewQuestAfterDelay>d__13 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40021BF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40021C0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40021C1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public HomeUpgradeQuests <>4__this;

			[Token(Token = "0x1700039C")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600229D")]
				[Address(RVA = "0xC2FE7C", Offset = "0xC2FE7C", VA = "0xC2FE7C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700039D")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600229F")]
				[Address(RVA = "0xC2FEE4", Offset = "0xC2FEE4", VA = "0xC2FEE4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600229A")]
			[Address(RVA = "0xC2FCB4", Offset = "0xC2FCB4", VA = "0xC2FCB4")]
			[DebuggerHidden]
			public <ShowNewQuestAfterDelay>d__13(int <>1__state)
			{
			}

			[Token(Token = "0x600229B")]
			[Address(RVA = "0xC2FDA0", Offset = "0xC2FDA0", VA = "0xC2FDA0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600229C")]
			[Address(RVA = "0xC2FDA4", Offset = "0xC2FDA4", VA = "0xC2FDA4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600229E")]
			[Address(RVA = "0xC2FE84", Offset = "0xC2FE84", VA = "0xC2FE84", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40021B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private GameObject[] m_upgradeQuests;

		[Token(Token = "0x40021B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private ParticleSystem[] m_glitterParticles;

		[Token(Token = "0x40021B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private PotpotAnimationController m_potpotController;

		[Token(Token = "0x40021B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private SendQuestEvent m_questEvent;

		[Token(Token = "0x40021BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private HomeType m_currentHomeType;

		[Token(Token = "0x40021BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private bool m_initialized;

		[Token(Token = "0x40021BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private WaitForSeconds m_waitForPopOutInstruction;

		[Token(Token = "0x40021BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Coroutine m_showNewQuestRoutine;

		[Token(Token = "0x40021BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private int m_previousHouseUpgradeLevel;

		[Token(Token = "0x6002294")]
		[Address(RVA = "0xC2F800", Offset = "0xC2F800", VA = "0xC2F800")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002295")]
		[Address(RVA = "0xC2F8E8", Offset = "0xC2F8E8", VA = "0xC2F8E8", Slot = "4")]
		public override ComponentState CreateState()
		{
			return null;
		}

		[Token(Token = "0x6002296")]
		[Address(RVA = "0xC2F950", Offset = "0xC2F950", VA = "0xC2F950", Slot = "5")]
		public void Initialize()
		{
		}

		[Token(Token = "0x6002297")]
		[Address(RVA = "0xC2FA40", Offset = "0xC2FA40", VA = "0xC2FA40")]
		public void Performupgrade()
		{
		}

		[Token(Token = "0x6002298")]
		[Address(RVA = "0xC2FC38", Offset = "0xC2FC38", VA = "0xC2FC38")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9932EC", Offset = "0x9932EC")]
		private IEnumerator ShowNewQuestAfterDelay()
		{
			return null;
		}

		[Token(Token = "0x6002299")]
		[Address(RVA = "0xC2FCE0", Offset = "0xC2FCE0", VA = "0xC2FCE0")]
		public HomeUpgradeQuests()
		{
		}
	}
	[Token(Token = "0x20005C4")]
	public class Camp : Home
	{
		[Token(Token = "0x60022A0")]
		[Address(RVA = "0xD4ABFC", Offset = "0xD4ABFC", VA = "0xD4ABFC", Slot = "7")]
		public override void OnInitialized()
		{
		}

		[Token(Token = "0x60022A1")]
		[Address(RVA = "0xD4AC64", Offset = "0xD4AC64", VA = "0xD4AC64", Slot = "6")]
		protected override HomeType GetHomeType()
		{
			return default(HomeType);
		}

		[Token(Token = "0x60022A2")]
		[Address(RVA = "0xD4AC6C", Offset = "0xD4AC6C", VA = "0xD4AC6C")]
		public Camp()
		{
		}
	}
	[Token(Token = "0x20005C5")]
	public class EndGameHome : Home
	{
		[Token(Token = "0x60022A3")]
		[Address(RVA = "0xD4AD14", Offset = "0xD4AD14", VA = "0xD4AD14", Slot = "7")]
		public override void OnInitialized()
		{
		}

		[Token(Token = "0x60022A4")]
		[Address(RVA = "0xD4AD7C", Offset = "0xD4AD7C", VA = "0xD4AD7C", Slot = "6")]
		protected override HomeType GetHomeType()
		{
			return default(HomeType);
		}

		[Token(Token = "0x60022A5")]
		[Address(RVA = "0xD4AD84", Offset = "0xD4AD84", VA = "0xD4AD84")]
		public EndGameHome()
		{
		}
	}
	[Token(Token = "0x20005C6")]
	public enum HouseholdObjectType
	{
		[Token(Token = "0x40021C3")]
		Stove,
		[Token(Token = "0x40021C4")]
		CraftingMachine,
		[Token(Token = "0x40021C5")]
		Chest,
		[Token(Token = "0x40021C6")]
		Clipboard,
		[Token(Token = "0x40021C7")]
		Mailbox,
		[Token(Token = "0x40021C8")]
		Workbench,
		[Token(Token = "0x40021C9")]
		AdvancedStove,
		[Token(Token = "0x40021CA")]
		RecipeBoard
	}
	[Serializable]
	[Token(Token = "0x20005C7")]
	public abstract class Home : SaveableComponent, IInitializable
	{
		[Token(Token = "0x40021CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Transform m_stoveLocation;

		[Token(Token = "0x40021CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Transform m_craftingMachineLocation;

		[Token(Token = "0x40021CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Transform m_chestLocation;

		[Token(Token = "0x40021CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Transform m_clipboardLocation;

		[Token(Token = "0x40021CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private Transform m_mailboxLocation;

		[Token(Token = "0x40021D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private Transform m_workbenchLocation;

		[Token(Token = "0x40021D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private Transform m_advancedStoveLocation;

		[Token(Token = "0x40021D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private Transform m_recipeBoardLocation;

		[Token(Token = "0x40021D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private int m_overrideHomeLevel;

		[Token(Token = "0x40021D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		protected RequieredHouseholdObjects m_requieredHouseholdObjects;

		[Token(Token = "0x40021D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private Collider[] m_prefabColliders;

		[Token(Token = "0x40021D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Storage m_storage;

		[Token(Token = "0x40021D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private HomeState m_currentState;

		[Token(Token = "0x40021D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private bool m_hasInitializedHouseholdObjects;

		[Token(Token = "0x40021D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x91")]
		private bool m_initialized;

		[Token(Token = "0x40021DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private List<HouseholdObjectType> m_spawnedObjectTypes;

		[Token(Token = "0x40021DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private Action m_objectsPreInitCompleteAction;

		[Token(Token = "0x40021DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private Action m_objectsPostInitiCompleteAction;

		[Token(Token = "0x40021DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private MeshRenderer[] disabledRenderers;

		[Token(Token = "0x1700039E")]
		public HomeType HomeType
		{
			[Token(Token = "0x60022A6")]
			[Address(RVA = "0xD4ADEC", Offset = "0xD4ADEC", VA = "0xD4ADEC")]
			get
			{
				return default(HomeType);
			}
		}

		[Token(Token = "0x1700039F")]
		public Storage Storage
		{
			[Token(Token = "0x60022A7")]
			[Address(RVA = "0xD4ADF8", Offset = "0xD4ADF8", VA = "0xD4ADF8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003A0")]
		public Vector3 StorageFullPosition
		{
			[Token(Token = "0x60022A8")]
			[Address(RVA = "0xD4AE00", Offset = "0xD4AE00", VA = "0xD4AE00")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x170003A1")]
		public bool HasInitializedHouseholdObjects
		{
			[Token(Token = "0x60022A9")]
			[Address(RVA = "0xD4AF00", Offset = "0xD4AF00", VA = "0xD4AF00")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170003A2")]
		public HomeState State
		{
			[Token(Token = "0x60022AA")]
			[Address(RVA = "0xD4AF68", Offset = "0xD4AF68", VA = "0xD4AF68")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003A3")]
		public Collider[] PrefabColliders
		{
			[Token(Token = "0x60022AB")]
			[Address(RVA = "0xD4AF70", Offset = "0xD4AF70", VA = "0xD4AF70")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003A4")]
		public int OverrideHomeLevel
		{
			[Token(Token = "0x60022AC")]
			[Address(RVA = "0xD4AF78", Offset = "0xD4AF78", VA = "0xD4AF78")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x60022AD")]
		protected abstract HomeType GetHomeType();

		[Token(Token = "0x60022AE")]
		public abstract void OnInitialized();

		[Token(Token = "0x60022AF")]
		[Address(RVA = "0xD4AF80", Offset = "0xD4AF80", VA = "0xD4AF80")]
		private void Awake()
		{
		}

		[Token(Token = "0x60022B0")]
		[Address(RVA = "0xD4B374", Offset = "0xD4B374", VA = "0xD4B374")]
		public void EnableRenderers()
		{
		}

		[Token(Token = "0x60022B1")]
		[Address(RVA = "0xD4B2A4", Offset = "0xD4B2A4", VA = "0xD4B2A4")]
		public void DisableRenderers()
		{
		}

		[Token(Token = "0x60022B2")]
		[Address(RVA = "0xD4B488", Offset = "0xD4B488", VA = "0xD4B488", Slot = "4")]
		public override ComponentState CreateState()
		{
			return null;
		}

		[Token(Token = "0x60022B3")]
		[Address(RVA = "0xD4B4F8", Offset = "0xD4B4F8", VA = "0xD4B4F8")]
		public void SetStateProperties(HomeState previousHomeState, bool setStateProperties = true)
		{
		}

		[Token(Token = "0x60022B4")]
		[Address(RVA = "0xD4B524", Offset = "0xD4B524", VA = "0xD4B524", Slot = "5")]
		public void Initialize()
		{
		}

		[Token(Token = "0x60022B5")]
		[Address(RVA = "0xD4AF34", Offset = "0xD4AF34", VA = "0xD4AF34")]
		private bool GetHasInitializedHouseholdObjects()
		{
			return default(bool);
		}

		[Token(Token = "0x60022B6")]
		[Address(RVA = "0xD4B5EC", Offset = "0xD4B5EC", VA = "0xD4B5EC")]
		private void SetHouseHoldObjectsInitialized()
		{
		}

		[Token(Token = "0x60022B7")]
		[Address(RVA = "0xD4B610", Offset = "0xD4B610", VA = "0xD4B610")]
		public bool TrySetStorage()
		{
			return default(bool);
		}

		[Token(Token = "0x60022B8")]
		[Address(RVA = "0xD4B718", Offset = "0xD4B718", VA = "0xD4B718")]
		public void RegisterHouseHoldObject(HouseholdObjectType type, Transform houseHoldObjectTransform)
		{
		}

		[Token(Token = "0x60022B9")]
		[Address(RVA = "0xD4AE04", Offset = "0xD4AE04", VA = "0xD4AE04")]
		private Vector3 GetAboveChestFront()
		{
			return default(Vector3);
		}

		[Token(Token = "0x60022BA")]
		[Address(RVA = "0xD4B79C", Offset = "0xD4B79C", VA = "0xD4B79C")]
		public void SpawnInitialObjects(RequieredHouseholdObjects newRequieredObjects, Action objectsPreInitializeAction)
		{
		}

		[Token(Token = "0x60022BB")]
		[Address(RVA = "0xD4BBB8", Offset = "0xD4BBB8", VA = "0xD4BBB8")]
		private void RemoveHouseholdObject(HouseholdObjectType type)
		{
		}

		[Token(Token = "0x60022BC")]
		[Address(RVA = "0xD4BD7C", Offset = "0xD4BD7C", VA = "0xD4BD7C")]
		private bool ShouldRemoveHouseholdObject(AssetReference oldObj, AssetReference newObj)
		{
			return default(bool);
		}

		[Token(Token = "0x60022BD")]
		[Address(RVA = "0xD4BE20", Offset = "0xD4BE20", VA = "0xD4BE20")]
		private bool ShouldSpawnHouseholdObject(AssetReference oldObj, AssetReference newObj)
		{
			return default(bool);
		}

		[Token(Token = "0x60022BE")]
		[Address(RVA = "0xD4BEC4", Offset = "0xD4BEC4", VA = "0xD4BEC4")]
		public void RemoveDeletedObjects(RequieredHouseholdObjects newRequieredObjects)
		{
		}

		[Token(Token = "0x60022BF")]
		[Address(RVA = "0xD4C014", Offset = "0xD4C014", VA = "0xD4C014")]
		public void SpawnMissingObjects(RequieredHouseholdObjects newRequieredObjects, Action objectsPreInitializeAction, Action objectsPostInitializeAction)
		{
		}

		[Token(Token = "0x60022C0")]
		[Address(RVA = "0xD4C468", Offset = "0xD4C468", VA = "0xD4C468")]
		private void SpawnUpgradeGifts(RequieredHouseholdObjects newRequieredObjects)
		{
		}

		[Token(Token = "0x60022C1")]
		[Address(RVA = "0xD4C594", Offset = "0xD4C594", VA = "0xD4C594")]
		private void OnPreInitializeObjects(SpawnOperationCallbackData obj)
		{
		}

		[Token(Token = "0x60022C2")]
		[Address(RVA = "0xD4C728", Offset = "0xD4C728", VA = "0xD4C728")]
		private void OnPostInitializeObjects(SpawnOperationCallbackData obj)
		{
		}

		[Token(Token = "0x60022C3")]
		[Address(RVA = "0xD4C73C", Offset = "0xD4C73C", VA = "0xD4C73C")]
		private void OnPostInitializeGifts(SpawnOperationCallbackData obj)
		{
		}

		[Token(Token = "0x60022C4")]
		[Address(RVA = "0xD4C6A4", Offset = "0xD4C6A4", VA = "0xD4C6A4")]
		private void SetLocationReference(HouseholdObjectType type, Transform spawnedObjectTransform)
		{
		}

		[Token(Token = "0x60022C5")]
		[Address(RVA = "0xD4BCB4", Offset = "0xD4BCB4", VA = "0xD4BCB4")]
		private Transform GetLocationReference(HouseholdObjectType type)
		{
			return null;
		}

		[Token(Token = "0x60022C6")]
		[Address(RVA = "0xD4AFA4", Offset = "0xD4AFA4", VA = "0xD4AFA4")]
		public void RemovePlaceHolderObjects()
		{
		}

		[Token(Token = "0x60022C7")]
		[Address(RVA = "0xD4C7CC", Offset = "0xD4C7CC", VA = "0xD4C7CC")]
		private void RemoveNonTransformComponents(GameObject go)
		{
		}

		[Token(Token = "0x60022C8")]
		[Address(RVA = "0xD4C8E4", Offset = "0xD4C8E4", VA = "0xD4C8E4")]
		public void PlaceObjectsAtLocations(HouseholdObjectLocations newHouseLocations)
		{
		}

		[Token(Token = "0x60022C9")]
		[Address(RVA = "0xD4CB48", Offset = "0xD4CB48", VA = "0xD4CB48")]
		public void ReplaceObjectLocations(HouseholdObjectLocations oldHouseLocations)
		{
		}

		[Token(Token = "0x60022CA")]
		[Address(RVA = "0xD4CC88", Offset = "0xD4CC88", VA = "0xD4CC88")]
		public RequieredHouseholdObjects GetRequieredObjects()
		{
			return null;
		}

		[Token(Token = "0x60022CB")]
		[Address(RVA = "0xD4CA24", Offset = "0xD4CA24", VA = "0xD4CA24")]
		public Transform GetAssignedTransform(Transform target, Transform placeholder)
		{
			return null;
		}

		[Token(Token = "0x60022CC")]
		[Address(RVA = "0xD4CF10", Offset = "0xD4CF10", VA = "0xD4CF10")]
		public void PreUpgrade()
		{
		}

		[Token(Token = "0x60022CD")]
		[Address(RVA = "0xD4D168", Offset = "0xD4D168", VA = "0xD4D168")]
		public void PostCollisionHandling()
		{
		}

		[Token(Token = "0x60022CE")]
		[Address(RVA = "0xD4C740", Offset = "0xD4C740", VA = "0xD4C740")]
		private void OnUpgradeCompleted()
		{
		}

		[Token(Token = "0x60022CF")]
		[Address(RVA = "0xD4CFDC", Offset = "0xD4CFDC", VA = "0xD4CFDC")]
		private void PreUpgrade(Transform target)
		{
		}

		[Token(Token = "0x60022D0")]
		[Address(RVA = "0xD4D170", Offset = "0xD4D170", VA = "0xD4D170")]
		private void PostUpgrade(Transform target)
		{
		}

		[Token(Token = "0x60022D1")]
		[Address(RVA = "0xD4CC90", Offset = "0xD4CC90", VA = "0xD4CC90")]
		private void PreMove(IHouseholdMovable[] movables)
		{
		}

		[Token(Token = "0x60022D2")]
		[Address(RVA = "0xD4CDD0", Offset = "0xD4CDD0", VA = "0xD4CDD0")]
		private void PostMove(IHouseholdMovable[] movables)
		{
		}

		[Token(Token = "0x60022D3")]
		[Address(RVA = "0xD4D300", Offset = "0xD4D300", VA = "0xD4D300")]
		public void DisableCollision()
		{
		}

		[Token(Token = "0x60022D4")]
		[Address(RVA = "0xD4CF9C", Offset = "0xD4CF9C", VA = "0xD4CF9C")]
		public HouseholdObjectLocations GetHouseholdObjectLocations()
		{
			return default(HouseholdObjectLocations);
		}

		[Token(Token = "0x60022D5")]
		[Address(RVA = "0xD4AC70", Offset = "0xD4AC70", VA = "0xD4AC70")]
		protected Home()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20005C8")]
	public class HomeDictionary : SerializableDictionary<HomeType, GameObject>
	{
		[Token(Token = "0x60022D6")]
		[Address(RVA = "0xC2B3B0", Offset = "0xC2B3B0", VA = "0xC2B3B0")]
		public HomeDictionary()
		{
		}
	}
	[Token(Token = "0x20005C9")]
	public class House : Home
	{
		[Token(Token = "0x60022D7")]
		[Address(RVA = "0xC2FEEC", Offset = "0xC2FEEC", VA = "0xC2FEEC", Slot = "7")]
		public override void OnInitialized()
		{
		}

		[Token(Token = "0x60022D8")]
		[Address(RVA = "0xC2FF50", Offset = "0xC2FF50", VA = "0xC2FF50", Slot = "6")]
		protected override HomeType GetHomeType()
		{
			return default(HomeType);
		}

		[Token(Token = "0x60022D9")]
		[Address(RVA = "0xC2FF58", Offset = "0xC2FF58", VA = "0xC2FF58")]
		public House()
		{
		}
	}
	[Token(Token = "0x20005CA")]
	public class Mansion : Home
	{
		[Token(Token = "0x60022DA")]
		[Address(RVA = "0xC30FF4", Offset = "0xC30FF4", VA = "0xC30FF4", Slot = "7")]
		public override void OnInitialized()
		{
		}

		[Token(Token = "0x60022DB")]
		[Address(RVA = "0xC31058", Offset = "0xC31058", VA = "0xC31058", Slot = "6")]
		protected override HomeType GetHomeType()
		{
			return default(HomeType);
		}

		[Token(Token = "0x60022DC")]
		[Address(RVA = "0xC31060", Offset = "0xC31060", VA = "0xC31060")]
		public Mansion()
		{
		}
	}
	[Token(Token = "0x20005CB")]
	public class Tent : Home
	{
		[Token(Token = "0x60022DD")]
		[Address(RVA = "0xC319E4", Offset = "0xC319E4", VA = "0xC319E4", Slot = "7")]
		public override void OnInitialized()
		{
		}

		[Token(Token = "0x60022DE")]
		[Address(RVA = "0xC31A48", Offset = "0xC31A48", VA = "0xC31A48", Slot = "6")]
		protected override HomeType GetHomeType()
		{
			return default(HomeType);
		}

		[Token(Token = "0x60022DF")]
		[Address(RVA = "0xC31A50", Offset = "0xC31A50", VA = "0xC31A50")]
		public Tent()
		{
		}
	}
	[Token(Token = "0x20005CC")]
	public class HouseholdObject : MonoBehaviour
	{
		[Token(Token = "0x40021DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private HouseholdObjectType m_householdObjectType;

		[Token(Token = "0x40021DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Collider m_householdObjectCollider;

		[Token(Token = "0x170003A5")]
		public Collider HouseholdObjectCollider
		{
			[Token(Token = "0x60022E0")]
			[Address(RVA = "0xC2FF60", Offset = "0xC2FF60", VA = "0xC2FF60")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003A6")]
		public HouseholdObjectType Type
		{
			[Token(Token = "0x60022E1")]
			[Address(RVA = "0xC2FF68", Offset = "0xC2FF68", VA = "0xC2FF68")]
			get
			{
				return default(HouseholdObjectType);
			}
		}

		[Token(Token = "0x60022E2")]
		[Address(RVA = "0xC2FF70", Offset = "0xC2FF70", VA = "0xC2FF70")]
		private void Awake()
		{
		}

		[Token(Token = "0x60022E3")]
		[Address(RVA = "0xC2FFD4", Offset = "0xC2FFD4", VA = "0xC2FFD4")]
		public HouseholdObject()
		{
		}
	}
	[Token(Token = "0x20005CD")]
	public struct HouseholdObjectLocations
	{
		[Token(Token = "0x40021E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Transform StoveLocation;

		[Token(Token = "0x40021E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Transform CraftingMachineLocation;

		[Token(Token = "0x40021E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Transform ChestLocation;

		[Token(Token = "0x40021E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform ClipboardLocation;

		[Token(Token = "0x40021E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform MailboxLocation;

		[Token(Token = "0x40021E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform WorkbenchLocation;

		[Token(Token = "0x40021E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Transform AdvancedStoveLocation;

		[Token(Token = "0x40021E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Transform RecipeBoardLocation;

		[Token(Token = "0x60022E4")]
		[Address(RVA = "0xA43780", Offset = "0xA43780", VA = "0xA43780")]
		public HouseholdObjectLocations(Transform stoveLocation, Transform craftingMachineLocation, Transform chestLocation, Transform clipboardLocation, Transform mailboxLocation, Transform workbenchLocation, Transform advancedStoveLocation, Transform recipeBoardLocation)
		{
		}

		[Token(Token = "0x60022E5")]
		[Address(RVA = "0xA43790", Offset = "0xA43790", VA = "0xA43790")]
		public Transform[] GetObjectsAsArray()
		{
			return null;
		}
	}
	[Token(Token = "0x20005CE")]
	public interface IHouseholdMovable
	{
		[Token(Token = "0x60022E6")]
		void OnPreUpgrade(int homeLevel);

		[Token(Token = "0x60022E7")]
		void OnPostUpgrade(int homeLevel);

		[Token(Token = "0x60022E8")]
		void OnBeforeMove(int homeLevel);

		[Token(Token = "0x60022E9")]
		void OnMoved(int homeLevel);
	}
	[Token(Token = "0x20005CF")]
	public class MailBox : MonoBehaviour, IHouseholdMovable
	{
		[Token(Token = "0x20005D0")]
		private enum FlagState
		{
			[Token(Token = "0x40021F2")]
			Empty,
			[Token(Token = "0x40021F3")]
			GotMail
		}

		[Token(Token = "0x40021E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly Vector3 m_upRotation;

		[Token(Token = "0x40021E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private readonly Vector3 m_downRotation;

		[Token(Token = "0x40021EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Transform m_flag;

		[Token(Token = "0x40021EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private BoxCollider m_boxTrigger;

		[Token(Token = "0x40021EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private FlagState m_currentFlagState;

		[Token(Token = "0x40021ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Dictionary<Grabbable, Collider> m_objectsInBox;

		[Token(Token = "0x40021EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Collider[] m_overlappingColliders;

		[Token(Token = "0x40021EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Vector3[] m_positionOffsets;

		[Token(Token = "0x40021F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Transform[] m_transformRefs;

		[Token(Token = "0x60022EA")]
		[Address(RVA = "0xC300A8", Offset = "0xC300A8", VA = "0xC300A8", Slot = "4")]
		public void OnPreUpgrade(int homeLevel)
		{
		}

		[Token(Token = "0x60022EB")]
		[Address(RVA = "0xC30534", Offset = "0xC30534", VA = "0xC30534", Slot = "6")]
		public void OnBeforeMove(int homeLevel)
		{
		}

		[Token(Token = "0x60022EC")]
		[Address(RVA = "0xC30860", Offset = "0xC30860", VA = "0xC30860", Slot = "7")]
		public void OnMoved(int homeLevel)
		{
		}

		[Token(Token = "0x60022ED")]
		[Address(RVA = "0xC30A64", Offset = "0xC30A64", VA = "0xC30A64", Slot = "5")]
		public void OnPostUpgrade(int homeLevel)
		{
		}

		[Token(Token = "0x60022EE")]
		[Address(RVA = "0xC30BC8", Offset = "0xC30BC8", VA = "0xC30BC8")]
		private bool TryAddGrabbableFromCollider(Collider other)
		{
			return default(bool);
		}

		[Token(Token = "0x60022EF")]
		[Address(RVA = "0xC30478", Offset = "0xC30478", VA = "0xC30478")]
		private bool TryAddGrabbableFromCollider(Collider other, out Grabbable grabbable)
		{
			return default(bool);
		}

		[Token(Token = "0x60022F0")]
		[Address(RVA = "0xC30C84", Offset = "0xC30C84", VA = "0xC30C84")]
		private bool TryGetGrabbableFromCollider(Collider other, out Grabbable grabbable, bool includeInactive = false)
		{
			return default(bool);
		}

		[Token(Token = "0x60022F1")]
		[Address(RVA = "0xC30DA8", Offset = "0xC30DA8", VA = "0xC30DA8")]
		private void UpdateFlagState()
		{
		}

		[Token(Token = "0x60022F2")]
		[Address(RVA = "0xC30248", Offset = "0xC30248", VA = "0xC30248")]
		private void GetOverlapBoxProperties(BoxCollider boxCollider, out Vector3 origin, out Vector3 halfExtents)
		{
		}

		[Token(Token = "0x60022F3")]
		[Address(RVA = "0xC30E98", Offset = "0xC30E98", VA = "0xC30E98")]
		public MailBox()
		{
		}
	}
	[Token(Token = "0x20005D1")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x97484C", Offset = "0x97484C")]
	public class RequieredHouseholdObjects : ScriptableObject
	{
		[Token(Token = "0x40021F4")]
		public const int Count = 8;

		[Token(Token = "0x40021F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private AssetReference m_stove;

		[Token(Token = "0x40021F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private AssetReference m_craftingMachine;

		[Token(Token = "0x40021F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private AssetReference m_chest;

		[Token(Token = "0x40021F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private AssetReference m_clipboard;

		[Token(Token = "0x40021F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private AssetReference m_mailbox;

		[Token(Token = "0x40021FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private AssetReference m_workbench;

		[Token(Token = "0x40021FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private AssetReference m_advancedStove;

		[Token(Token = "0x40021FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private AssetReference m_recipeBoard;

		[Token(Token = "0x40021FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x981420", Offset = "0x981420")]
		[SerializeField]
		private AssetReference m_upgradeGifts;

		[Token(Token = "0x170003A7")]
		public AssetReference Stove
		{
			[Token(Token = "0x60022F4")]
			[Address(RVA = "0xC31068", Offset = "0xC31068", VA = "0xC31068")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003A8")]
		public AssetReference CraftingMachine
		{
			[Token(Token = "0x60022F5")]
			[Address(RVA = "0xC31070", Offset = "0xC31070", VA = "0xC31070")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003A9")]
		public AssetReference Chest
		{
			[Token(Token = "0x60022F6")]
			[Address(RVA = "0xC31078", Offset = "0xC31078", VA = "0xC31078")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003AA")]
		public AssetReference Clipboard
		{
			[Token(Token = "0x60022F7")]
			[Address(RVA = "0xC31080", Offset = "0xC31080", VA = "0xC31080")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003AB")]
		public AssetReference Mailbox
		{
			[Token(Token = "0x60022F8")]
			[Address(RVA = "0xC31088", Offset = "0xC31088", VA = "0xC31088")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003AC")]
		public AssetReference Workbench
		{
			[Token(Token = "0x60022F9")]
			[Address(RVA = "0xC31090", Offset = "0xC31090", VA = "0xC31090")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003AD")]
		public AssetReference AdvancedStove
		{
			[Token(Token = "0x60022FA")]
			[Address(RVA = "0xC31098", Offset = "0xC31098", VA = "0xC31098")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003AE")]
		public AssetReference UpgradeGifts
		{
			[Token(Token = "0x60022FB")]
			[Address(RVA = "0xC310A0", Offset = "0xC310A0", VA = "0xC310A0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003AF")]
		public AssetReference RecipeBoard
		{
			[Token(Token = "0x60022FC")]
			[Address(RVA = "0xC310A8", Offset = "0xC310A8", VA = "0xC310A8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60022FD")]
		[Address(RVA = "0xC310B0", Offset = "0xC310B0", VA = "0xC310B0")]
		public AssetReference[] GetAllObjects()
		{
			return null;
		}

		[Token(Token = "0x60022FE")]
		[Address(RVA = "0xC312F0", Offset = "0xC312F0", VA = "0xC312F0")]
		public RequieredHouseholdObjects()
		{
		}
	}
	[Token(Token = "0x20005D2")]
	public class StickyNotePosition : MonoBehaviour
	{
		[Token(Token = "0x40021FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private StickyNote currentSticky;

		[Token(Token = "0x60022FF")]
		[Address(RVA = "0xC312F8", Offset = "0xC312F8", VA = "0xC312F8")]
		public void Init()
		{
		}

		[Token(Token = "0x6002300")]
		[Address(RVA = "0xC315A4", Offset = "0xC315A4", VA = "0xC315A4")]
		public void SetSticky(StickyNote sticky)
		{
		}

		[Token(Token = "0x6002301")]
		[Address(RVA = "0xC31760", Offset = "0xC31760", VA = "0xC31760")]
		private void OnStickyGrabbed()
		{
		}

		[Token(Token = "0x6002302")]
		[Address(RVA = "0xC3185C", Offset = "0xC3185C", VA = "0xC3185C")]
		public bool HasSticky()
		{
			return default(bool);
		}

		[Token(Token = "0x6002303")]
		[Address(RVA = "0xC318D8", Offset = "0xC318D8", VA = "0xC318D8")]
		public void OnMoved()
		{
		}

		[Token(Token = "0x6002304")]
		[Address(RVA = "0xC319DC", Offset = "0xC319DC", VA = "0xC319DC")]
		public StickyNotePosition()
		{
		}
	}
}
namespace NeatCorp.Core
{
	[Token(Token = "0x20005D3")]
	public class AttachSlotEventDispatcher : MonoBehaviour
	{
		[Token(Token = "0x40021FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		protected AttachSlot m_attachSlot;

		[Token(Token = "0x4002200")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		protected bool m_dispatchOnAttached;

		[Token(Token = "0x4002201")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		[SerializeField]
		protected bool m_dispatchOnDetached;

		[Token(Token = "0x6002305")]
		[Address(RVA = "0x1044C5C", Offset = "0x1044C5C", VA = "0x1044C5C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6002306")]
		[Address(RVA = "0x1044D30", Offset = "0x1044D30", VA = "0x1044D30")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6002307")]
		[Address(RVA = "0x1044E04", Offset = "0x1044E04", VA = "0x1044E04", Slot = "4")]
		protected virtual void OnAttached(SaveObjectBase saveObj, Grabbable grabbable)
		{
		}

		[Token(Token = "0x6002308")]
		[Address(RVA = "0x1044F48", Offset = "0x1044F48", VA = "0x1044F48", Slot = "5")]
		protected virtual void OnDetached(SaveObjectBase saveObj, Grabbable grabbable)
		{
		}

		[Token(Token = "0x6002309")]
		[Address(RVA = "0x1044EB8", Offset = "0x1044EB8", VA = "0x1044EB8")]
		protected bool TryGetValidInstance(out EventManager instance)
		{
			return default(bool);
		}

		[Token(Token = "0x600230A")]
		[Address(RVA = "0x1044FFC", Offset = "0x1044FFC", VA = "0x1044FFC")]
		public AttachSlotEventDispatcher()
		{
		}
	}
	[Token(Token = "0x20005D4")]
	public enum HMDActivityStatusType
	{
		[Token(Token = "0x4002203")]
		Aquired,
		[Token(Token = "0x4002204")]
		Lost
	}
	[Token(Token = "0x20005D5")]
	public enum HMDMountStatusType
	{
		[Token(Token = "0x4002206")]
		Mounted,
		[Token(Token = "0x4002207")]
		Unmounted
	}
}
namespace NeatCorp.Core.Platform
{
	[Token(Token = "0x20005D6")]
	public class OculusPlatform : VRPlatform
	{
		[Token(Token = "0x600230B")]
		[Address(RVA = "0x1045004", Offset = "0x1045004", VA = "0x1045004", Slot = "4")]
		protected override void OnInitialized()
		{
		}

		[Token(Token = "0x600230C")]
		[Address(RVA = "0x1045194", Offset = "0x1045194", VA = "0x1045194", Slot = "5")]
		protected override void OnShutDown()
		{
		}

		[Token(Token = "0x600230D")]
		[Address(RVA = "0x1045320", Offset = "0x1045320", VA = "0x1045320")]
		private void OnInputFocusAcquired()
		{
		}

		[Token(Token = "0x600230E")]
		[Address(RVA = "0x1045384", Offset = "0x1045384", VA = "0x1045384")]
		private void OnInputFocusLost()
		{
		}

		[Token(Token = "0x600230F")]
		[Address(RVA = "0x10453E8", Offset = "0x10453E8", VA = "0x10453E8")]
		private void OnHMDAcquired()
		{
		}

		[Token(Token = "0x6002310")]
		[Address(RVA = "0x104544C", Offset = "0x104544C", VA = "0x104544C")]
		private void OnHMDLost()
		{
		}

		[Token(Token = "0x6002311")]
		[Address(RVA = "0x10454B0", Offset = "0x10454B0", VA = "0x10454B0")]
		private void OnHMDMounted()
		{
		}

		[Token(Token = "0x6002312")]
		[Address(RVA = "0x1045514", Offset = "0x1045514", VA = "0x1045514")]
		private void OnHMDUnmounted()
		{
		}

		[Token(Token = "0x6002313")]
		[Address(RVA = "0x1045578", Offset = "0x1045578", VA = "0x1045578", Slot = "6")]
		public override void OnUpdate()
		{
		}

		[Token(Token = "0x6002314")]
		[Address(RVA = "0x104557C", Offset = "0x104557C", VA = "0x104557C")]
		public OculusPlatform()
		{
		}
	}
	[Token(Token = "0x20005D7")]
	public abstract class VRPlatform
	{
		[Token(Token = "0x4002208")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static VRPlatform Instance;

		[Token(Token = "0x4002209")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9814AC", Offset = "0x9814AC")]
		private bool <ShouldUpdate>k__BackingField;

		[Token(Token = "0x170003B0")]
		public bool ShouldUpdate
		{
			[Token(Token = "0x6002315")]
			[Address(RVA = "0x104558C", Offset = "0x104558C", VA = "0x104558C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9933A0", Offset = "0x9933A0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002316")]
			[Address(RVA = "0x1045594", Offset = "0x1045594", VA = "0x1045594")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9933B0", Offset = "0x9933B0")]
			protected set
			{
			}
		}

		[Token(Token = "0x6002317")]
		[Address(RVA = "0x10455A0", Offset = "0x10455A0", VA = "0x10455A0")]
		public static void Initilize()
		{
		}

		[Token(Token = "0x6002318")]
		[Address(RVA = "0x1045638", Offset = "0x1045638", VA = "0x1045638")]
		public static void ShutDown()
		{
		}

		[Token(Token = "0x6002319")]
		protected abstract void OnInitialized();

		[Token(Token = "0x600231A")]
		protected abstract void OnShutDown();

		[Token(Token = "0x600231B")]
		public abstract void OnUpdate();

		[Token(Token = "0x600231C")]
		[Address(RVA = "0x1045584", Offset = "0x1045584", VA = "0x1045584")]
		protected VRPlatform()
		{
		}
	}
}
namespace NeatCorp.Audio
{
	[Token(Token = "0x20005D8")]
	public class ResonanceCoreInitializer : MonoBehaviour
	{
		[Token(Token = "0x400220A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GestrumentCore m_core;

		[Token(Token = "0x600231D")]
		[Address(RVA = "0x10444FC", Offset = "0x10444FC", VA = "0x10444FC")]
		private void Awake()
		{
		}

		[Token(Token = "0x600231E")]
		[Address(RVA = "0x10445B4", Offset = "0x10445B4", VA = "0x10445B4")]
		public ResonanceCoreInitializer()
		{
		}
	}
}
namespace NeatCorp.Animation
{
	[Token(Token = "0x20005D9")]
	public class AnimationPlaybackEventDispatcher
	{
		[Token(Token = "0x400220B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		protected AnimationPlaybackEvent m_stopEvent;

		[Token(Token = "0x400220C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected AnimationPlaybackEvent m_playEvent;

		[Token(Token = "0x400220D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9814CC", Offset = "0x9814CC")]
		private bool <HasStopEvent>k__BackingField;

		[Token(Token = "0x400220E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9814DC", Offset = "0x9814DC")]
		private bool <HasPlayEvent>k__BackingField;

		[Token(Token = "0x170003B1")]
		public bool HasStopEvent
		{
			[Token(Token = "0x600231F")]
			[Address(RVA = "0x1041D34", Offset = "0x1041D34", VA = "0x1041D34")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9933C0", Offset = "0x9933C0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170003B2")]
		public bool HasPlayEvent
		{
			[Token(Token = "0x6002320")]
			[Address(RVA = "0x1041D3C", Offset = "0x1041D3C", VA = "0x1041D3C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9933D0", Offset = "0x9933D0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6002321")]
		[Address(RVA = "0x1041D44", Offset = "0x1041D44", VA = "0x1041D44")]
		public void DispatchPlayEvent(Animator animator)
		{
		}

		[Token(Token = "0x6002322")]
		[Address(RVA = "0x1041E10", Offset = "0x1041E10", VA = "0x1041E10")]
		public void DispatchStopEvent(Animator animator)
		{
		}

		[Token(Token = "0x6002323")]
		[Address(RVA = "0x1041EDC", Offset = "0x1041EDC", VA = "0x1041EDC")]
		public AnimationPlaybackEventDispatcher()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20005DA")]
	public enum AnimationPlaybackEventType
	{
		[Token(Token = "0x4002210")]
		OnPlay,
		[Token(Token = "0x4002211")]
		OnStop
	}
	[Token(Token = "0x20005DB")]
	public class AnimationStateEventDispatcher
	{
		[Token(Token = "0x4002212")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		protected StateMachineBehaviourEvent m_event;

		[Token(Token = "0x4002213")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private AnimationStateEventType m_eventType;

		[Token(Token = "0x4002214")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private bool m_hasEvent;

		[Token(Token = "0x170003B3")]
		public bool HasEvent
		{
			[Token(Token = "0x6002324")]
			[Address(RVA = "0x1041EE4", Offset = "0x1041EE4", VA = "0x1041EE4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002325")]
			[Address(RVA = "0x1041F24", Offset = "0x1041F24", VA = "0x1041F24")]
			private set
			{
			}
		}

		[Token(Token = "0x6002326")]
		[Address(RVA = "0x1041F30", Offset = "0x1041F30", VA = "0x1041F30")]
		public void CreateEvent(StateMachineBehaviourEvent e)
		{
		}

		[Token(Token = "0x6002327")]
		[Address(RVA = "0x1041F70", Offset = "0x1041F70", VA = "0x1041F70")]
		public void UpdateEvent(Animator animator, AnimatorStateInfo stateInfo, int layerIndex)
		{
		}

		[Token(Token = "0x6002328")]
		[Address(RVA = "0x1041FF8", Offset = "0x1041FF8", VA = "0x1041FF8")]
		private void Dispatch()
		{
		}

		[Token(Token = "0x6002329")]
		[Address(RVA = "0x1041F04", Offset = "0x1041F04", VA = "0x1041F04")]
		private bool CheckEvent()
		{
			return default(bool);
		}

		[Token(Token = "0x600232A")]
		[Address(RVA = "0x1042050", Offset = "0x1042050", VA = "0x1042050")]
		public AnimationStateEventDispatcher()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20005DC")]
	public enum AnimationStateEventType
	{
		[Token(Token = "0x4002216")]
		OnEnter,
		[Token(Token = "0x4002217")]
		OnUpdate,
		[Token(Token = "0x4002218")]
		OnExit
	}
	[Token(Token = "0x20005DD")]
	public enum ParticleSystemPlaybackType
	{
		[Token(Token = "0x400221A")]
		Unchanged,
		[Token(Token = "0x400221B")]
		Play,
		[Token(Token = "0x400221C")]
		Pause,
		[Token(Token = "0x400221D")]
		Stop
	}
	[Token(Token = "0x20005DE")]
	public enum ParticleObjectActivation
	{
		[Token(Token = "0x400221F")]
		Unchanged,
		[Token(Token = "0x4002220")]
		Enable,
		[Token(Token = "0x4002221")]
		Disable
	}
	[Serializable]
	[Token(Token = "0x20005DF")]
	public struct AnimationEffectData
	{
		[Token(Token = "0x4002222")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int Index;

		[Token(Token = "0x4002223")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public ParticleObjectActivation Activation;

		[Token(Token = "0x4002224")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public ParticleSystemPlaybackType Playback;

		[Token(Token = "0x4002225")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public ParticleSystem ParticleSystem;
	}
	[Token(Token = "0x20005E0")]
	public class PlayEffectFromAnimation : MonoBehaviour
	{
		[Token(Token = "0x4002226")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private AnimationEffectData[] m_effects;

		[Token(Token = "0x600232B")]
		[Address(RVA = "0x10421BC", Offset = "0x10421BC", VA = "0x10421BC")]
		public void TriggerEffect(int index)
		{
		}

		[Token(Token = "0x600232C")]
		[Address(RVA = "0x10422B4", Offset = "0x10422B4", VA = "0x10422B4")]
		public PlayEffectFromAnimation()
		{
		}
	}
}
namespace NeatCorp.Animation.HandAnimation
{
	[Token(Token = "0x20005E1")]
	public class HandAnimatorHash
	{
		[Token(Token = "0x4002227")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly int Teleporting;

		[Token(Token = "0x4002228")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public static readonly int TeleportInvalid;

		[Token(Token = "0x4002229")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static readonly int ChargingUp;

		[Token(Token = "0x400222A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public static readonly int CancelChargingUp;

		[Token(Token = "0x400222B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static readonly int TriggerReaction;

		[Token(Token = "0x400222C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public static readonly int TeleportSuccessful;

		[Token(Token = "0x400222D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static readonly int CrystalGrabbed;

		[Token(Token = "0x400222E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public static readonly int CrystalReadyToInsert;

		[Token(Token = "0x400222F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public static readonly int CrystalDroppedIn;
	}
}
namespace NeatCorp.Animation.Potpots
{
	[Token(Token = "0x20005E2")]
	public class PotpotAnimationController : MonoBehaviour
	{
		[Token(Token = "0x20005E3")]
		public enum PointDirection
		{
			[Token(Token = "0x4002250")]
			None,
			[Token(Token = "0x4002251")]
			Up,
			[Token(Token = "0x4002252")]
			Down
		}

		[Token(Token = "0x20005E4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9748B8", Offset = "0x9748B8")]
		private sealed class <PlayPoofAndRemoveRoutine>d__41 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002253")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002254")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002255")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public PotpotAnimationController <>4__this;

			[Token(Token = "0x170003B4")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002344")]
				[Address(RVA = "0x1043044", Offset = "0x1043044", VA = "0x1043044", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003B5")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002346")]
				[Address(RVA = "0x10430AC", Offset = "0x10430AC", VA = "0x10430AC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002341")]
			[Address(RVA = "0x1042AC8", Offset = "0x1042AC8", VA = "0x1042AC8")]
			[DebuggerHidden]
			public <PlayPoofAndRemoveRoutine>d__41(int <>1__state)
			{
			}

			[Token(Token = "0x6002342")]
			[Address(RVA = "0x1042E70", Offset = "0x1042E70", VA = "0x1042E70", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002343")]
			[Address(RVA = "0x1042E74", Offset = "0x1042E74", VA = "0x1042E74", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002345")]
			[Address(RVA = "0x104304C", Offset = "0x104304C", VA = "0x104304C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20005E5")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9748C8", Offset = "0x9748C8")]
		private sealed class <PlayTeleportRoutine>d__44 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002256")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002257")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002258")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public PotpotAnimationController <>4__this;

			[Token(Token = "0x4002259")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Transform target;

			[Token(Token = "0x170003B6")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600234A")]
				[Address(RVA = "0x1043364", Offset = "0x1043364", VA = "0x1043364", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003B7")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600234C")]
				[Address(RVA = "0x10433CC", Offset = "0x10433CC", VA = "0x10433CC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002347")]
			[Address(RVA = "0x1042C38", Offset = "0x1042C38", VA = "0x1042C38")]
			[DebuggerHidden]
			public <PlayTeleportRoutine>d__44(int <>1__state)
			{
			}

			[Token(Token = "0x6002348")]
			[Address(RVA = "0x10430B4", Offset = "0x10430B4", VA = "0x10430B4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002349")]
			[Address(RVA = "0x10430B8", Offset = "0x10430B8", VA = "0x10430B8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600234B")]
			[Address(RVA = "0x104336C", Offset = "0x104336C", VA = "0x104336C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20005E6")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9748D8", Offset = "0x9748D8")]
		private sealed class <WaitForLookAt>d__46 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400225A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400225B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400225C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public PotpotAnimationController <>4__this;

			[Token(Token = "0x170003B8")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002350")]
				[Address(RVA = "0x10434CC", Offset = "0x10434CC", VA = "0x10434CC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003B9")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002352")]
				[Address(RVA = "0x1043534", Offset = "0x1043534", VA = "0x1043534", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600234D")]
			[Address(RVA = "0x1042CE0", Offset = "0x1042CE0", VA = "0x1042CE0")]
			[DebuggerHidden]
			public <WaitForLookAt>d__46(int <>1__state)
			{
			}

			[Token(Token = "0x600234E")]
			[Address(RVA = "0x10433D4", Offset = "0x10433D4", VA = "0x10433D4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600234F")]
			[Address(RVA = "0x10433D8", Offset = "0x10433D8", VA = "0x10433D8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002351")]
			[Address(RVA = "0x10434D4", Offset = "0x10434D4", VA = "0x10434D4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4002230")]
		private const float NotificationInterval = 30f;

		[Token(Token = "0x4002231")]
		private const float MinPointInterval = 5f;

		[Token(Token = "0x4002232")]
		private const float MaxPointInterval = 15f;

		[Token(Token = "0x4002233")]
		private const string RootJointName = "potpot_ROOT_jnt";

		[Token(Token = "0x4002234")]
		private const float MinPointDuration = 1f;

		[Token(Token = "0x4002235")]
		private const float MinNotifyDuration = 1f;

		[Token(Token = "0x4002236")]
		private const float MinLookAtFromDistanceDuration = 7f;

		[Token(Token = "0x4002237")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Animator m_animator;

		[Token(Token = "0x4002238")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Transform m_rootJoint;

		[Token(Token = "0x4002239")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private LookAtPlayer m_lookAtPlayer;

		[Token(Token = "0x400223A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private float CloseProximity;

		[Token(Token = "0x400223B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[SerializeField]
		private bool m_canPoint;

		[Token(Token = "0x400223C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private PointDirection m_pointDirection;

		[Token(Token = "0x400223D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[SerializeField]
		private bool m_canWave;

		[Token(Token = "0x400223E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private UnityEvent m_onRemoved;

		[Token(Token = "0x400223F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float m_timeSinceNotified;

		[Token(Token = "0x4002240")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private float m_timeSincePointed;

		[Token(Token = "0x4002241")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private bool m_isPlayerNear;

		[Token(Token = "0x4002242")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
		private bool m_isPlayerClose;

		[Token(Token = "0x4002243")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private float m_currentPointingInterval;

		[Token(Token = "0x4002244")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private int m_pointDirectionParam;

		[Token(Token = "0x4002245")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private WaitForSeconds m_delayDisappearAnim;

		[Token(Token = "0x4002246")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private WaitForSeconds m_waitForDisappearAnim;

		[Token(Token = "0x4002247")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private WaitForSeconds m_waitForLookAtDuration;

		[Token(Token = "0x4002248")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private WaitForSeconds m_waitForHappyAnim;

		[Token(Token = "0x4002249")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private WaitForSeconds m_waitForTeleport;

		[Token(Token = "0x400224A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private bool m_isNotifing;

		[Token(Token = "0x400224B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x89")]
		private bool m_isPointing;

		[Token(Token = "0x400224C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Coroutine m_lookAtRoutine;

		[Token(Token = "0x400224D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private bool m_isWaving;

		[Token(Token = "0x400224E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x99")]
		private bool m_lookingAtPlayer;

		[Token(Token = "0x600232E")]
		[Address(RVA = "0x1042320", Offset = "0x1042320", VA = "0x1042320")]
		private void Awake()
		{
		}

		[Token(Token = "0x600232F")]
		[Address(RVA = "0x10423C0", Offset = "0x10423C0", VA = "0x10423C0")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6002330")]
		[Address(RVA = "0x10423C8", Offset = "0x10423C8", VA = "0x10423C8")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x6002331")]
		[Address(RVA = "0x10424A8", Offset = "0x10424A8", VA = "0x10424A8")]
		private void OnTriggerExit(Collider other)
		{
		}

		[Token(Token = "0x6002332")]
		[Address(RVA = "0x1042584", Offset = "0x1042584", VA = "0x1042584")]
		private void Update()
		{
		}

		[Token(Token = "0x6002333")]
		[Address(RVA = "0x10425E8", Offset = "0x10425E8", VA = "0x10425E8")]
		private void UpdateCloseProximity()
		{
		}

		[Token(Token = "0x6002334")]
		[Address(RVA = "0x1042828", Offset = "0x1042828", VA = "0x1042828")]
		private void UpdateWaving()
		{
		}

		[Token(Token = "0x6002335")]
		[Address(RVA = "0x10426F8", Offset = "0x10426F8", VA = "0x10426F8")]
		private void UpdatePointing()
		{
		}

		[Token(Token = "0x6002336")]
		[Address(RVA = "0x1042A20", Offset = "0x1042A20", VA = "0x1042A20")]
		public void Disappear()
		{
		}

		[Token(Token = "0x6002337")]
		[Address(RVA = "0x1042A4C", Offset = "0x1042A4C", VA = "0x1042A4C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9933E0", Offset = "0x9933E0")]
		private IEnumerator PlayPoofAndRemoveRoutine()
		{
			return null;
		}

		[Token(Token = "0x6002338")]
		[Address(RVA = "0x1042AF4", Offset = "0x1042AF4", VA = "0x1042AF4")]
		public void PlayHappyReaction()
		{
		}

		[Token(Token = "0x6002339")]
		[Address(RVA = "0x1042B74", Offset = "0x1042B74", VA = "0x1042B74")]
		public void TeleportToPosition(Transform target)
		{
		}

		[Token(Token = "0x600233A")]
		[Address(RVA = "0x1042BA0", Offset = "0x1042BA0", VA = "0x1042BA0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x993444", Offset = "0x993444")]
		private IEnumerator PlayTeleportRoutine(Transform target)
		{
			return null;
		}

		[Token(Token = "0x600233B")]
		[Address(RVA = "0x10429A0", Offset = "0x10429A0", VA = "0x10429A0")]
		public void LookAtPlayer()
		{
		}

		[Token(Token = "0x600233C")]
		[Address(RVA = "0x1042C64", Offset = "0x1042C64", VA = "0x1042C64")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9934A8", Offset = "0x9934A8")]
		private IEnumerator WaitForLookAt()
		{
			return null;
		}

		[Token(Token = "0x600233D")]
		[Address(RVA = "0x10427F0", Offset = "0x10427F0", VA = "0x10427F0")]
		public void StopLookingAtPlayer()
		{
		}

		[Token(Token = "0x600233E")]
		[Address(RVA = "0x1042D0C", Offset = "0x1042D0C", VA = "0x1042D0C")]
		public void SetCanWave(bool b)
		{
		}

		[Token(Token = "0x600233F")]
		[Address(RVA = "0x1042D18", Offset = "0x1042D18", VA = "0x1042D18")]
		public void SetCanPoint(bool b)
		{
		}

		[Token(Token = "0x6002340")]
		[Address(RVA = "0x1042D24", Offset = "0x1042D24", VA = "0x1042D24")]
		public PotpotAnimationController()
		{
		}
	}
	[Token(Token = "0x20005E7")]
	public static class PotpotAnimations
	{
		[Token(Token = "0x400225D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly int SpeedParam;

		[Token(Token = "0x400225E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public static readonly int MovingParam;

		[Token(Token = "0x400225F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static readonly int BubbleThingsParam;

		[Token(Token = "0x4002260")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public static readonly int WavingParam;

		[Token(Token = "0x4002261")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static readonly int PointingUpParam;

		[Token(Token = "0x4002262")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public static readonly int PointingDownParam;

		[Token(Token = "0x4002263")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static readonly int DisappearingParam;

		[Token(Token = "0x4002264")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public static readonly int PoofOut;

		[Token(Token = "0x4002265")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public static readonly int ForceIdleParam;

		[Token(Token = "0x4002266")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public static readonly int HappyReactionParam;
	}
}
namespace NeatCorp.Events
{
	[Token(Token = "0x20005E8")]
	public class ImportantItemUsedEvent : GameEvent
	{
		[Token(Token = "0x4002267")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public ImportantItem ItemRef;

		[Token(Token = "0x4002268")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Grabbable GrabbableRef;

		[Token(Token = "0x6002354")]
		[Address(RVA = "0xD419B8", Offset = "0xD419B8", VA = "0xD419B8")]
		public ImportantItemUsedEvent(ImportantItem itemRef, Grabbable grabbableRef)
		{
		}
	}
	[Token(Token = "0x20005E9")]
	public class UnlockMerchantEvent : GameEvent
	{
		[Token(Token = "0x4002269")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public MerchantType MerchantType;

		[Token(Token = "0x400226A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public bool IsQuestCompleted;

		[Token(Token = "0x6002355")]
		[Address(RVA = "0xD41A78", Offset = "0xD41A78", VA = "0xD41A78")]
		public UnlockMerchantEvent(MerchantType merchantType, bool isQuestCompleted)
		{
		}
	}
	[Token(Token = "0x20005EA")]
	public class AttachSlotEvent : GameEvent
	{
		[Token(Token = "0x400226B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public SaveObjectBase SaveObject;

		[Token(Token = "0x400226C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Grabbable Grabbable;

		[Token(Token = "0x6002356")]
		[Address(RVA = "0xD41668", Offset = "0xD41668", VA = "0xD41668")]
		public AttachSlotEvent(SaveObjectBase saveObject, Grabbable grabbable)
		{
		}
	}
	[Token(Token = "0x20005EB")]
	public class AttachSlotDetachedEvent : AttachSlotEvent
	{
		[Token(Token = "0x6002357")]
		[Address(RVA = "0xD41664", Offset = "0xD41664", VA = "0xD41664")]
		public AttachSlotDetachedEvent(SaveObjectBase saveObj, Grabbable grabbable)
		{
		}
	}
}
namespace NeatCorp.Events.Settings
{
	[Token(Token = "0x20005EC")]
	public class SettingsChangedEvent : GameEvent
	{
		[Token(Token = "0x400226D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public GameSettingId Setting;

		[Token(Token = "0x400226E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public bool IsOn;

		[Token(Token = "0x6002358")]
		[Address(RVA = "0xD41A38", Offset = "0xD41A38", VA = "0xD41A38")]
		public SettingsChangedEvent(GameSettingId setting, bool isOn)
		{
		}
	}
}
namespace NeatCorp.Events.Environment
{
	[Token(Token = "0x20005ED")]
	public class IslandStateEvent : GameEvent
	{
		[Token(Token = "0x400226F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public IslandType IslandType;

		[Token(Token = "0x4002270")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public IslandState IslandState;

		[Token(Token = "0x6002359")]
		[Address(RVA = "0xD41854", Offset = "0xD41854", VA = "0xD41854")]
		public IslandStateEvent(IslandType islandType, IslandState islandState)
		{
		}
	}
	[Token(Token = "0x20005EE")]
	public class RecoverEvent : GameEvent
	{
		[Token(Token = "0x4002271")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public RecoverIfLost Recoverable;

		[Token(Token = "0x600235A")]
		[Address(RVA = "0xD4188C", Offset = "0xD4188C", VA = "0xD4188C")]
		public RecoverEvent(RecoverIfLost recoverable)
		{
		}
	}
}
namespace NeatCorp.Events.Puzzles
{
	[Token(Token = "0x20005EF")]
	public class GodStatueStartSpinningEvent : GameEvent
	{
		[Token(Token = "0x600235B")]
		[Address(RVA = "0xD41A30", Offset = "0xD41A30", VA = "0xD41A30")]
		public GodStatueStartSpinningEvent()
		{
		}
	}
}
namespace NeatCorp.Events.Glove
{
	[Token(Token = "0x20005F0")]
	public class GemInfusedEvent : GameEvent
	{
		[Token(Token = "0x4002272")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public GemType GemType;

		[Token(Token = "0x4002273")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public bool IsEquippedInRightGlove;

		[Token(Token = "0x600235C")]
		[Address(RVA = "0xD41978", Offset = "0xD41978", VA = "0xD41978")]
		public GemInfusedEvent(GemType gemType, bool isEquippedInRightGlove)
		{
		}
	}
}
namespace NeatCorp.Events.Glove.GemEvents
{
	[Token(Token = "0x20005F1")]
	public class GemDroppedEvent : GameEvent
	{
		[Token(Token = "0x4002274")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public GemType GemType;

		[Token(Token = "0x4002275")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GloveGem GemReference;

		[Token(Token = "0x4002276")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Grabbable GemGrabbable;

		[Token(Token = "0x600235D")]
		[Address(RVA = "0xD418C8", Offset = "0xD418C8", VA = "0xD418C8")]
		public GemDroppedEvent(GemType gemType, GloveGem gemReference, Grabbable gemGrabbable)
		{
		}
	}
	[Token(Token = "0x20005F2")]
	public class GemGrabbedEvent : GameEvent
	{
		[Token(Token = "0x4002277")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public GemType GemType;

		[Token(Token = "0x4002278")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public PlayerHand PlayerHand;

		[Token(Token = "0x4002279")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GloveGem GemReference;

		[Token(Token = "0x600235E")]
		[Address(RVA = "0xD41920", Offset = "0xD41920", VA = "0xD41920")]
		public GemGrabbedEvent(GemType gemType, PlayerHand playerHand, GloveGem gemReference)
		{
		}
	}
}
namespace NeatCorp.Events.Collection
{
	[Token(Token = "0x20005F3")]
	public class UnlockCollectableAnimalEvent : GameEvent
	{
		[Token(Token = "0x400227A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public PhotographTarget Target;

		[Token(Token = "0x600235F")]
		[Address(RVA = "0xD41720", Offset = "0xD41720", VA = "0xD41720")]
		public UnlockCollectableAnimalEvent(PhotographTarget target)
		{
		}
	}
	[Token(Token = "0x20005F4")]
	public class BookmarkSelectedEvent : GameEvent
	{
		[Token(Token = "0x400227B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public MenuBookmark Bookmark;

		[Token(Token = "0x6002360")]
		[Address(RVA = "0xD416B8", Offset = "0xD416B8", VA = "0xD416B8")]
		public BookmarkSelectedEvent(MenuBookmark bookmark)
		{
		}
	}
	[Token(Token = "0x20005F5")]
	public class CategoryTabSelectedEvent : GameEvent
	{
		[Token(Token = "0x400227C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public MenuCategoryTab Tab;

		[Token(Token = "0x6002361")]
		[Address(RVA = "0xD416EC", Offset = "0xD416EC", VA = "0xD416EC")]
		public CategoryTabSelectedEvent(MenuCategoryTab tab)
		{
		}
	}
	[Token(Token = "0x20005F6")]
	public class UnlockCollectableRecipeEvent : GameEvent
	{
		[Token(Token = "0x400227D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public CraftingRecipe Recipe;

		[Token(Token = "0x6002362")]
		[Address(RVA = "0xD41754", Offset = "0xD41754", VA = "0xD41754")]
		public UnlockCollectableRecipeEvent(CraftingRecipe craftingRecipe)
		{
		}
	}
}
namespace NeatCorp.Events.PolaroidEvents
{
	[Token(Token = "0x20005F7")]
	public class PolaroidGrabbedFromCameraEvent : GameEvent
	{
		[Token(Token = "0x400227E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public PolaroidPicture Polaroid;

		[Token(Token = "0x6002363")]
		[Address(RVA = "0xD41A28", Offset = "0xD41A28", VA = "0xD41A28")]
		public PolaroidGrabbedFromCameraEvent()
		{
		}
	}
}
namespace NeatCorp.Events.Crystals
{
	[Token(Token = "0x20005F8")]
	public class PedestalDroppedEvent : GameEvent
	{
		[Token(Token = "0x400227F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x98157C", Offset = "0x98157C")]
		private CrystalPedestal <Pedestal>k__BackingField;

		[Token(Token = "0x170003BA")]
		public CrystalPedestal Pedestal
		{
			[Token(Token = "0x6002364")]
			[Address(RVA = "0xD41788", Offset = "0xD41788", VA = "0xD41788")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9935FC", Offset = "0x9935FC")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002365")]
			[Address(RVA = "0xD41790", Offset = "0xD41790", VA = "0xD41790")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x99360C", Offset = "0x99360C")]
			private set
			{
			}
		}

		[Token(Token = "0x6002366")]
		[Address(RVA = "0xD41798", Offset = "0xD41798", VA = "0xD41798")]
		public PedestalDroppedEvent(CrystalPedestal pedestal)
		{
		}
	}
	[Token(Token = "0x20005F9")]
	public class PedestalGrabbedEvent : GameEvent
	{
		[Token(Token = "0x4002280")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x98158C", Offset = "0x98158C")]
		private CrystalPedestal <Pedestal>k__BackingField;

		[Token(Token = "0x170003BB")]
		public CrystalPedestal Pedestal
		{
			[Token(Token = "0x6002367")]
			[Address(RVA = "0xD417CC", Offset = "0xD417CC", VA = "0xD417CC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x99361C", Offset = "0x99361C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002368")]
			[Address(RVA = "0xD417D4", Offset = "0xD417D4", VA = "0xD417D4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x99362C", Offset = "0x99362C")]
			private set
			{
			}
		}

		[Token(Token = "0x6002369")]
		[Address(RVA = "0xD417DC", Offset = "0xD417DC", VA = "0xD417DC")]
		public PedestalGrabbedEvent(CrystalPedestal pedestal)
		{
		}
	}
	[Token(Token = "0x20005FA")]
	public class PedestalStashedEvent : GameEvent
	{
		[Token(Token = "0x4002281")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x98159C", Offset = "0x98159C")]
		private CrystalPedestal <Pedestal>k__BackingField;

		[Token(Token = "0x170003BC")]
		public CrystalPedestal Pedestal
		{
			[Token(Token = "0x600236A")]
			[Address(RVA = "0xD41810", Offset = "0xD41810", VA = "0xD41810")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x99363C", Offset = "0x99363C")]
			get
			{
				return null;
			}
			[Token(Token = "0x600236B")]
			[Address(RVA = "0xD41818", Offset = "0xD41818", VA = "0xD41818")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x99364C", Offset = "0x99364C")]
			private set
			{
			}
		}

		[Token(Token = "0x600236C")]
		[Address(RVA = "0xD41820", Offset = "0xD41820", VA = "0xD41820")]
		public PedestalStashedEvent(CrystalPedestal pedestal)
		{
		}
	}
}
namespace NeatCorp.Events.Gardening.Compost
{
	[Token(Token = "0x20005FB")]
	public class ProduceRemovedFromBinEvent : GameEvent
	{
		[Token(Token = "0x4002282")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public CompostProduce Produce;

		[Token(Token = "0x600236D")]
		[Address(RVA = "0xD418C0", Offset = "0xD418C0", VA = "0xD418C0")]
		public ProduceRemovedFromBinEvent()
		{
		}
	}
}
namespace NeatCorp.Events.PlatformEvents
{
	[Token(Token = "0x20005FC")]
	public class HMDActivityStatusChangedEvent : GameEvent
	{
		[Token(Token = "0x4002283")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9815AC", Offset = "0x9815AC")]
		private HMDActivityStatusType <HMDActivityStatus>k__BackingField;

		[Token(Token = "0x170003BD")]
		public HMDActivityStatusType HMDActivityStatus
		{
			[Token(Token = "0x600236E")]
			[Address(RVA = "0xD41A08", Offset = "0xD41A08", VA = "0xD41A08")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x99365C", Offset = "0x99365C")]
			set
			{
			}
		}

		[Token(Token = "0x600236F")]
		[Address(RVA = "0xD41A10", Offset = "0xD41A10", VA = "0xD41A10")]
		public HMDActivityStatusChangedEvent()
		{
		}
	}
	[Token(Token = "0x20005FD")]
	internal class HMDMountStatusChangedEvent : GameEvent
	{
		[Token(Token = "0x4002284")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9815BC", Offset = "0x9815BC")]
		private HMDMountStatusType <HMDMountStatus>k__BackingField;

		[Token(Token = "0x170003BE")]
		public HMDMountStatusType HMDMountStatus
		{
			[Token(Token = "0x6002370")]
			[Address(RVA = "0xD41A18", Offset = "0xD41A18", VA = "0xD41A18")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x99366C", Offset = "0x99366C")]
			set
			{
			}
		}

		[Token(Token = "0x6002371")]
		[Address(RVA = "0xD41A20", Offset = "0xD41A20", VA = "0xD41A20")]
		public HMDMountStatusChangedEvent()
		{
		}
	}
}
namespace NeatCorp.Events.Animation
{
	[Token(Token = "0x20005FE")]
	public class AnimationEvent : GameEvent
	{
		[Token(Token = "0x4002285")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Animator Animator;

		[Token(Token = "0x6002372")]
		[Address(RVA = "0xD40C6C", Offset = "0xD40C6C", VA = "0xD40C6C")]
		public AnimationEvent()
		{
		}
	}
	[Token(Token = "0x20005FF")]
	public class AnimationPlaybackEvent : AnimationEvent
	{
		[Token(Token = "0x4002286")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9815CC", Offset = "0x9815CC")]
		private AnimationPlaybackEventType <AnimationEventType>k__BackingField;

		[Token(Token = "0x170003BF")]
		public AnimationPlaybackEventType AnimationEventType
		{
			[Token(Token = "0x6002373")]
			[Address(RVA = "0xD41034", Offset = "0xD41034", VA = "0xD41034")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x99367C", Offset = "0x99367C")]
			get
			{
				return default(AnimationPlaybackEventType);
			}
			[Token(Token = "0x6002374")]
			[Address(RVA = "0xD4103C", Offset = "0xD4103C", VA = "0xD4103C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x99368C", Offset = "0x99368C")]
			protected set
			{
			}
		}

		[Token(Token = "0x6002375")]
		[Address(RVA = "0xD41044", Offset = "0xD41044", VA = "0xD41044")]
		public AnimationPlaybackEvent(Animator animator, AnimationPlaybackEventType type)
		{
		}
	}
	[Token(Token = "0x2000600")]
	public class StateMachineBehaviourEvent : AnimationEvent
	{
		[Token(Token = "0x4002287")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AnimatorStateInfo StateInfo;

		[Token(Token = "0x4002288")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public int LayerIndex;

		[Token(Token = "0x4002289")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9815DC", Offset = "0x9815DC")]
		private AnimationStateEventType <AnimationEventType>k__BackingField;

		[Token(Token = "0x170003C0")]
		public AnimationStateEventType AnimationEventType
		{
			[Token(Token = "0x6002376")]
			[Address(RVA = "0xD41654", Offset = "0xD41654", VA = "0xD41654")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x99369C", Offset = "0x99369C")]
			get
			{
				return default(AnimationStateEventType);
			}
			[Token(Token = "0x6002377")]
			[Address(RVA = "0xD4165C", Offset = "0xD4165C", VA = "0xD4165C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9936AC", Offset = "0x9936AC")]
			protected set
			{
			}
		}

		[Token(Token = "0x6002378")]
		[Address(RVA = "0xD41100", Offset = "0xD41100", VA = "0xD41100")]
		public StateMachineBehaviourEvent(Animator animator, AnimatorStateInfo stateInfo, int layerIndex)
		{
		}
	}
	[Token(Token = "0x2000601")]
	public class OnAnimationStateEnterEvent : StateMachineBehaviourEvent
	{
		[Token(Token = "0x6002379")]
		[Address(RVA = "0xD4108C", Offset = "0xD4108C", VA = "0xD4108C")]
		public OnAnimationStateEnterEvent(Animator animator, AnimatorStateInfo stateInfo, int layerIndex)
		{
		}
	}
	[Token(Token = "0x2000602")]
	public class OnAnimationStateUpdateEvent : StateMachineBehaviourEvent
	{
		[Token(Token = "0x600237A")]
		[Address(RVA = "0xD411D4", Offset = "0xD411D4", VA = "0xD411D4")]
		public OnAnimationStateUpdateEvent(Animator animator, AnimatorStateInfo stateInfo, int layerIndex)
		{
		}
	}
	[Token(Token = "0x2000603")]
	public class OnAnimationStateExitEvent : StateMachineBehaviourEvent
	{
		[Token(Token = "0x600237B")]
		[Address(RVA = "0xD4115C", Offset = "0xD4115C", VA = "0xD4115C")]
		public OnAnimationStateExitEvent(Animator animator, AnimatorStateInfo stateInfo, int layerIndex)
		{
		}
	}
	[Token(Token = "0x2000604")]
	public class AnimationPlayback : MonoBehaviour
	{
		[Token(Token = "0x400228A")]
		private const float MinEventDuration = 0.1f;

		[Token(Token = "0x400228B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Animator m_animator;

		[Token(Token = "0x400228C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private AnimationPlaybackEventDispatcher m_animationEventDispatcher;

		[Token(Token = "0x400228D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool m_wasRecentlyStarted;

		[Token(Token = "0x400228E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float m_normalizedStartTime;

		[Token(Token = "0x400228F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int m_currentLayer;

		[Token(Token = "0x600237C")]
		[Address(RVA = "0xD40C74", Offset = "0xD40C74", VA = "0xD40C74")]
		public void Activate()
		{
		}

		[Token(Token = "0x600237D")]
		[Address(RVA = "0xD40CA4", Offset = "0xD40CA4", VA = "0xD40CA4")]
		public void Deactivate(bool shouldCheckEvaluation = true)
		{
		}

		[Token(Token = "0x600237E")]
		[Address(RVA = "0xD40D94", Offset = "0xD40D94", VA = "0xD40D94")]
		public void PlayFromTime(int hash, int layer, float time)
		{
		}

		[Token(Token = "0x600237F")]
		[Address(RVA = "0xD40DC4", Offset = "0xD40DC4", VA = "0xD40DC4")]
		public void ActivateAndPlayFromTime(int hash, int layer, float time)
		{
		}

		[Token(Token = "0x6002380")]
		[Address(RVA = "0xD40E10", Offset = "0xD40E10", VA = "0xD40E10")]
		public void ActivateAndPlayFromTimeDispatcher(int hash, int layer, float time)
		{
		}

		[Token(Token = "0x6002381")]
		[Address(RVA = "0xD40E88", Offset = "0xD40E88", VA = "0xD40E88")]
		public void Stop(bool shouldCheckEvaluation = true)
		{
		}

		[Token(Token = "0x6002382")]
		[Address(RVA = "0xD40ED8", Offset = "0xD40ED8", VA = "0xD40ED8")]
		public void StopAndDeactivate(bool shouldCheckEvaluation = true)
		{
		}

		[Token(Token = "0x6002383")]
		[Address(RVA = "0xD40F24", Offset = "0xD40F24", VA = "0xD40F24")]
		public void StopAndDeactivateDispatcher()
		{
		}

		[Token(Token = "0x6002384")]
		[Address(RVA = "0xD40F74", Offset = "0xD40F74", VA = "0xD40F74")]
		public void DispatchStopEvent(bool shouldCheckEvaluation = true)
		{
		}

		[Token(Token = "0x6002385")]
		[Address(RVA = "0xD40E64", Offset = "0xD40E64", VA = "0xD40E64")]
		public void DispatchPlayEvent()
		{
		}

		[Token(Token = "0x6002386")]
		[Address(RVA = "0xD40CFC", Offset = "0xD40CFC", VA = "0xD40CFC")]
		private bool ShouldEvaluateEvent()
		{
			return default(bool);
		}

		[Token(Token = "0x6002387")]
		[Address(RVA = "0xD40FC0", Offset = "0xD40FC0", VA = "0xD40FC0")]
		public AnimationPlayback()
		{
		}
	}
}
namespace NeatCorp.Events.Animation.StateEvents
{
	[Token(Token = "0x2000605")]
	public class AnimationStateEvent : StateMachineBehaviour
	{
		[Token(Token = "0x4002290")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private AnimationStateEventType m_eventType;

		[Token(Token = "0x4002291")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private AnimationStateEventDispatcher m_eventDispatcher;

		[Token(Token = "0x6002388")]
		[Address(RVA = "0xD4124C", Offset = "0xD4124C", VA = "0xD4124C", Slot = "4")]
		public override void OnStateEnter(Animator animator, AnimatorStateInfo stateInfo, int layerIndex)
		{
		}

		[Token(Token = "0x6002389")]
		[Address(RVA = "0xD41378", Offset = "0xD41378", VA = "0xD41378", Slot = "5")]
		public override void OnStateUpdate(Animator animator, AnimatorStateInfo stateInfo, int layerIndex)
		{
		}

		[Token(Token = "0x600238A")]
		[Address(RVA = "0xD414AC", Offset = "0xD414AC", VA = "0xD414AC", Slot = "6")]
		public override void OnStateExit(Animator animator, AnimatorStateInfo stateInfo, int layerIndex)
		{
		}

		[Token(Token = "0x600238B")]
		[Address(RVA = "0xD415E0", Offset = "0xD415E0", VA = "0xD415E0")]
		public AnimationStateEvent()
		{
		}
	}
}
namespace NeatCorp.Achievements
{
	[Token(Token = "0x2000606")]
	public class AchievementProgress
	{
		[Token(Token = "0x4002292")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string Name;

		[Token(Token = "0x4002293")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool IsUnlocked;

		[Token(Token = "0x4002294")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public DateTime UnlockTime;

		[Token(Token = "0x4002295")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public ulong Count;

		[Token(Token = "0x4002296")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string Bitfield;

		[Token(Token = "0x600238C")]
		[Address(RVA = "0x103F868", Offset = "0x103F868", VA = "0x103F868")]
		public AchievementProgress(string name, bool isUnlocked, [Optional] DateTime unlockTime, ulong count = 0uL, [Optional] string bitfield)
		{
		}
	}
	[Token(Token = "0x2000607")]
	public class GotS_Achievements
	{
		[Token(Token = "0x4002297")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static PlatformAchievements sm_instance;

		[Token(Token = "0x4002298")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Dictionary<int, string> AchievementIds;

		[Token(Token = "0x600238D")]
		[Address(RVA = "0x103F8D8", Offset = "0x103F8D8", VA = "0x103F8D8")]
		public static void Initialize()
		{
		}

		[Token(Token = "0x600238E")]
		[Address(RVA = "0x103F9C0", Offset = "0x103F9C0", VA = "0x103F9C0")]
		public static void LoadAllAchievementProgress()
		{
		}

		[Token(Token = "0x600238F")]
		[Address(RVA = "0x103FB68", Offset = "0x103FB68", VA = "0x103FB68")]
		public static void SetUnlockableAchievement(string identifier, bool shouldBeUnlocked)
		{
		}

		[Token(Token = "0x6002390")]
		[Address(RVA = "0x103FA6C", Offset = "0x103FA6C", VA = "0x103FA6C")]
		private static void RegisterEvents()
		{
		}

		[Token(Token = "0x6002391")]
		[Address(RVA = "0x103FCFC", Offset = "0x103FCFC", VA = "0x103FCFC")]
		private static void OnMilestoneEvent(MilestoneEvent e)
		{
		}

		[Token(Token = "0x6002392")]
		[Address(RVA = "0x103FE28", Offset = "0x103FE28", VA = "0x103FE28")]
		public static void CheckMilestoneAchievements(Milestone[] milestones)
		{
		}

		[Token(Token = "0x6002393")]
		[Address(RVA = "0x104015C", Offset = "0x104015C", VA = "0x104015C")]
		private static void OnQuestEvent(QuestEvent e)
		{
		}

		[Token(Token = "0x6002394")]
		[Address(RVA = "0x10401FC", Offset = "0x10401FC", VA = "0x10401FC")]
		public static void UpgradeHomeAchievement(HomeType upgradeLevel)
		{
		}

		[Token(Token = "0x6002395")]
		[Address(RVA = "0x103FFC4", Offset = "0x103FFC4", VA = "0x103FFC4")]
		public static void UnlockRetroactivly(string identifier, bool shouldBeUnlocked)
		{
		}
	}
	[Token(Token = "0x2000608")]
	public class OculusAchievements : PlatformAchievements
	{
		[Token(Token = "0x6002397")]
		[Address(RVA = "0x1040480", Offset = "0x1040480", VA = "0x1040480", Slot = "4")]
		public override void LoadAllAchievementProgress()
		{
		}

		[Token(Token = "0x6002398")]
		[Address(RVA = "0x1040588", Offset = "0x1040588", VA = "0x1040588")]
		private void SetAchievementProgress(int key, Oculus.Platform.Models.AchievementProgress a)
		{
		}

		[Token(Token = "0x6002399")]
		[Address(RVA = "0x10407BC", Offset = "0x10407BC", VA = "0x10407BC", Slot = "5")]
		public override void SetUnlockableAchievement(int key, bool shouldBeUnlocked)
		{
		}

		[Token(Token = "0x600239A")]
		[Address(RVA = "0x103F9BC", Offset = "0x103F9BC", VA = "0x103F9BC")]
		public OculusAchievements()
		{
		}

		[Token(Token = "0x600239B")]
		[Address(RVA = "0x1040BF0", Offset = "0x1040BF0", VA = "0x1040BF0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9936BC", Offset = "0x9936BC")]
		private void <LoadAllAchievementProgress>b__0_0(Message<AchievementDefinitionList> message)
		{
		}

		[Token(Token = "0x600239C")]
		[Address(RVA = "0x1040E00", Offset = "0x1040E00", VA = "0x1040E00")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9936CC", Offset = "0x9936CC")]
		private void <LoadAllAchievementProgress>b__0_1(Message<AchievementProgressList> achievementList)
		{
		}
	}
	[Token(Token = "0x2000609")]
	public abstract class PlatformAchievements
	{
		[Token(Token = "0x4002299")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Dictionary<int, UserAchievementData> UserAchievementData;

		[Token(Token = "0x400229A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Dictionary<string, int> AchievmentKeys;

		[Token(Token = "0x600239D")]
		public abstract void LoadAllAchievementProgress();

		[Token(Token = "0x600239E")]
		public abstract void SetUnlockableAchievement(int key, bool shouldBeUnlocked);

		[Token(Token = "0x600239F")]
		[Address(RVA = "0x10406F0", Offset = "0x10406F0", VA = "0x10406F0")]
		protected void SetAchievementData(int key, UserAchievementData achievementData)
		{
		}

		[Token(Token = "0x60023A0")]
		[Address(RVA = "0x1040F6C", Offset = "0x1040F6C", VA = "0x1040F6C")]
		protected void SetAchievementKeyPair(string key, int value)
		{
		}

		[Token(Token = "0x60023A1")]
		[Address(RVA = "0x103FC60", Offset = "0x103FC60", VA = "0x103FC60")]
		public bool TryGetKeyFromIdentifier(string identifier, out int key)
		{
			return default(bool);
		}

		[Token(Token = "0x60023A2")]
		[Address(RVA = "0x1040A5C", Offset = "0x1040A5C", VA = "0x1040A5C")]
		protected void TrySetAchievementProgress(int key, AchievementProgress a)
		{
		}

		[Token(Token = "0x60023A3")]
		[Address(RVA = "0x10408F0", Offset = "0x10408F0", VA = "0x10408F0")]
		protected bool TryGetAchievementData(int key, out UserAchievementData data)
		{
			return default(bool);
		}

		[Token(Token = "0x60023A4")]
		[Address(RVA = "0x104098C", Offset = "0x104098C", VA = "0x104098C")]
		protected bool TryGetAchievementProgress(int key, out AchievementProgress progress)
		{
			return default(bool);
		}

		[Token(Token = "0x60023A5")]
		[Address(RVA = "0x1040B40", Offset = "0x1040B40", VA = "0x1040B40")]
		protected PlatformAchievements()
		{
		}
	}
	[Token(Token = "0x200060A")]
	public class UserAchievementData
	{
		[Token(Token = "0x400229B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string Identifier;

		[Token(Token = "0x400229C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string Text;

		[Token(Token = "0x400229D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string Description;

		[Token(Token = "0x400229E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public AchievementProgress Progress;

		[Token(Token = "0x60023A6")]
		[Address(RVA = "0x1040670", Offset = "0x1040670", VA = "0x1040670")]
		public UserAchievementData(string identifier, string text, string description, AchievementProgress progress)
		{
		}
	}
}
namespace Reactional
{
	[Token(Token = "0x200060B")]
	public class ReactionalDispatcher : MonoBehaviour
	{
		[Token(Token = "0x400229F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static ReactionalDispatcher instance;

		[Token(Token = "0x40022A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static bool hasLookedForInstance;

		[Token(Token = "0x40022A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private ReactionalTimeline m_timeline;

		[Token(Token = "0x170003C1")]
		public static ReactionalDispatcher Instance
		{
			[Token(Token = "0x60023A7")]
			[Address(RVA = "0xD19CCC", Offset = "0xD19CCC", VA = "0xD19CCC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003C2")]
		public static ReactionalTimeline Timeline
		{
			[Token(Token = "0x60023AA")]
			[Address(RVA = "0xD19C60", Offset = "0xD19C60", VA = "0xD19C60")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60023A8")]
		[Address(RVA = "0xD19D34", Offset = "0xD19D34", VA = "0xD19D34")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60023A9")]
		[Address(RVA = "0xD19EA0", Offset = "0xD19EA0", VA = "0xD19EA0")]
		public static ReactionalDispatcher TryFindInstance()
		{
			return null;
		}

		[Token(Token = "0x60023AB")]
		[Address(RVA = "0xD19FA8", Offset = "0xD19FA8", VA = "0xD19FA8")]
		public ReactionalDispatcher()
		{
		}
	}
	[Token(Token = "0x200060C")]
	public static class Get
	{
		[Token(Token = "0x60023AD")]
		[Address(RVA = "0xD19BF4", Offset = "0xD19BF4", VA = "0xD19BF4")]
		public static Context Context()
		{
			return null;
		}
	}
	[Token(Token = "0x200060D")]
	public static class Set
	{
		[Token(Token = "0x60023AE")]
		[Address(RVA = "0xD19FB4", Offset = "0xD19FB4", VA = "0xD19FB4")]
		public static void Scrub(int laneID, double normPos, int quant, int phase, double fromPos)
		{
		}

		[Token(Token = "0x60023AF")]
		[Address(RVA = "0xD1A058", Offset = "0xD1A058", VA = "0xD1A058")]
		public static void Cursor(int sinkID, int cursorID, double beat, bool gate, double x, double y, double z)
		{
		}
	}
}
namespace Gestrument.Timeline
{
	[Token(Token = "0x200060E")]
	public class Context
	{
		[Token(Token = "0x200060F")]
		public enum LogLevel
		{
			[Token(Token = "0x40022A8")]
			None,
			[Token(Token = "0x40022A9")]
			Critical,
			[Token(Token = "0x40022AA")]
			Error,
			[Token(Token = "0x40022AB")]
			Warning,
			[Token(Token = "0x40022AC")]
			Info,
			[Token(Token = "0x40022AD")]
			Debug,
			[Token(Token = "0x40022AE")]
			Max
		}

		[Token(Token = "0x2000610")]
		public delegate void LogCallback(string message);

		[Token(Token = "0x2000611")]
		public delegate void InternalLogCallback(IntPtr logger, IntPtr message, int size);

		[Token(Token = "0x40022A2")]
		public const string DLL_NAME = "ge_timeline";

		[Token(Token = "0x40022A3")]
		public const int ERROR_BUG = -666;

		[Token(Token = "0x40022A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		protected IntPtr _contextPtr;

		[Token(Token = "0x40022A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected static LogCallback logCallback;

		[Token(Token = "0x40022A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected byte[] buffer;

		[PreserveSig]
		[Token(Token = "0x60023B0")]
		[Address(RVA = "0xE76B78", Offset = "0xE76B78", VA = "0xE76B78")]
		public static extern void ge_timeline_logger_set_log_level(int log_level);

		[PreserveSig]
		[Token(Token = "0x60023B1")]
		[Address(RVA = "0xE76BF8", Offset = "0xE76BF8", VA = "0xE76BF8")]
		public static extern void ge_timeline_logger_set_log_callback(InternalLogCallback callback);

		[PreserveSig]
		[Token(Token = "0x60023B2")]
		[Address(RVA = "0xE76C7C", Offset = "0xE76C7C", VA = "0xE76C7C")]
		public static extern IntPtr ge_timeline_context_new();

		[PreserveSig]
		[Token(Token = "0x60023B3")]
		[Address(RVA = "0xE76CEC", Offset = "0xE76CEC", VA = "0xE76CEC")]
		public static extern void ge_timeline_context_free(IntPtr context);

		[PreserveSig]
		[Token(Token = "0x60023B4")]
		[Address(RVA = "0xE76D6C", Offset = "0xE76D6C", VA = "0xE76D6C")]
		public static extern int ge_timeline_context_process(IntPtr context, long system_time);

		[PreserveSig]
		[Token(Token = "0x60023B5")]
		[Address(RVA = "0xE76DFC", Offset = "0xE76DFC", VA = "0xE76DFC")]
		public static extern void ge_timeline_context_start(IntPtr context, long system_time);

		[PreserveSig]
		[Token(Token = "0x60023B6")]
		[Address(RVA = "0xE76E8C", Offset = "0xE76E8C", VA = "0xE76E8C")]
		public static extern void ge_timeline_context_stop(IntPtr context);

		[PreserveSig]
		[Token(Token = "0x60023B7")]
		[Address(RVA = "0xE76F0C", Offset = "0xE76F0C", VA = "0xE76F0C")]
		public static extern long ge_timeline_context_get_current_beat(IntPtr context);

		[PreserveSig]
		[Token(Token = "0x60023B8")]
		[Address(RVA = "0xE76F8C", Offset = "0xE76F8C", VA = "0xE76F8C")]
		public static extern IntPtr ge_timeline_context_get_clock(IntPtr context);

		[PreserveSig]
		[Token(Token = "0x60023B9")]
		[Address(RVA = "0xE7700C", Offset = "0xE7700C", VA = "0xE7700C")]
		public static extern IntPtr ge_timeline_get_state(IntPtr context, bool pretty);

		[PreserveSig]
		[Token(Token = "0x60023BA")]
		[Address(RVA = "0xE7709C", Offset = "0xE7709C", VA = "0xE7709C")]
		public static extern int ge_timeline_set_state(IntPtr context, string state);

		[PreserveSig]
		[Token(Token = "0x60023BB")]
		[Address(RVA = "0xE77148", Offset = "0xE77148", VA = "0xE77148")]
		public static extern int ge_timeline_context_push_osc_complete(IntPtr context, int size, byte[] data, long offset);

		[PreserveSig]
		[Token(Token = "0x60023BC")]
		[Address(RVA = "0xE771F8", Offset = "0xE771F8", VA = "0xE771F8")]
		public static extern int ge_timeline_context_poll_osc_complete(IntPtr context, int size, byte[] data, ref long offset);

		[PreserveSig]
		[Token(Token = "0x60023BD")]
		[Address(RVA = "0xE772A8", Offset = "0xE772A8", VA = "0xE772A8")]
		public static extern double ge_timeline_clock_get_tempo_bpm(IntPtr clock);

		[PreserveSig]
		[Token(Token = "0x60023BE")]
		[Address(RVA = "0xE77328", Offset = "0xE77328", VA = "0xE77328")]
		public static extern void ge_timeline_free(IntPtr mem);

		[Token(Token = "0x60023BF")]
		[Address(RVA = "0xE76AE0", Offset = "0xE76AE0", VA = "0xE76AE0")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9936DC", Offset = "0x9936DC")]
		protected static void StaticLogCallback(IntPtr logger, IntPtr message, int size)
		{
		}

		[Token(Token = "0x60023C0")]
		[Address(RVA = "0xE7773C", Offset = "0xE7773C", VA = "0xE7773C")]
		public Context()
		{
		}

		[Token(Token = "0x60023C1")]
		[Address(RVA = "0xE777FC", Offset = "0xE777FC", VA = "0xE777FC", Slot = "1")]
		~Context()
		{
		}

		[Token(Token = "0x60023C2")]
		[Address(RVA = "0xE778A4", Offset = "0xE778A4", VA = "0xE778A4")]
		public static void SetLogLevel(LogLevel log_level)
		{
		}

		[Token(Token = "0x60023C3")]
		[Address(RVA = "0xE778A8", Offset = "0xE778A8", VA = "0xE778A8")]
		public static void SetLogCallback(LogCallback callback)
		{
		}

		[Token(Token = "0x60023C4")]
		[Address(RVA = "0xE77960", Offset = "0xE77960", VA = "0xE77960")]
		public int Process(long system_time = -1L)
		{
			return default(int);
		}

		[Token(Token = "0x60023C5")]
		[Address(RVA = "0xE779DC", Offset = "0xE779DC", VA = "0xE779DC")]
		public int StartPlaying(long systemTime = -1L)
		{
			return default(int);
		}

		[Token(Token = "0x60023C6")]
		[Address(RVA = "0xE77A54", Offset = "0xE77A54", VA = "0xE77A54")]
		public int StopPlaying()
		{
			return default(int);
		}

		[Token(Token = "0x60023C7")]
		[Address(RVA = "0xE77ABC", Offset = "0xE77ABC", VA = "0xE77ABC")]
		public long GetCurrentBeat()
		{
			return default(long);
		}

		[Token(Token = "0x60023C8")]
		[Address(RVA = "0xE77B24", Offset = "0xE77B24", VA = "0xE77B24")]
		public double GetTempoBPM()
		{
			return default(double);
		}

		[Token(Token = "0x60023C9")]
		[Address(RVA = "0xE77BAC", Offset = "0xE77BAC", VA = "0xE77BAC")]
		public int PushMessage(OSCMessage message, long offset = -1L)
		{
			return default(int);
		}

		[Token(Token = "0x60023CA")]
		[Address(RVA = "0xE789AC", Offset = "0xE789AC", VA = "0xE789AC")]
		public int PollMessage(ref OSCMessage message)
		{
			return default(int);
		}

		[Token(Token = "0x60023CB")]
		[Address(RVA = "0xE791FC", Offset = "0xE791FC", VA = "0xE791FC")]
		public string GetState(bool pretty = true)
		{
			return null;
		}

		[Token(Token = "0x60023CC")]
		[Address(RVA = "0xE792C8", Offset = "0xE792C8", VA = "0xE792C8")]
		public int SetState(string state)
		{
			return default(int);
		}
	}
	[Token(Token = "0x2000612")]
	public class OSCMessage
	{
		[Token(Token = "0x2000613")]
		protected struct MIDIValue
		{
			[Token(Token = "0x40022B5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public byte byte1;

			[Token(Token = "0x40022B6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
			public byte byte2;

			[Token(Token = "0x40022B7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2")]
			public byte byte3;

			[Token(Token = "0x40022B8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3")]
			public byte byte4;
		}

		[Token(Token = "0x2000614")]
		protected struct StringValue
		{
			[Token(Token = "0x40022B9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int size;

			[Token(Token = "0x40022BA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public IntPtr ptr;
		}

		[Token(Token = "0x2000615")]
		protected struct BLOBValue
		{
			[Token(Token = "0x40022BB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int size;

			[Token(Token = "0x40022BC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public IntPtr ptr;
		}

		[StructLayout(2)]
		[Token(Token = "0x2000616")]
		protected struct ValueUnion
		{
			[Token(Token = "0x40022BD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int i;

			[Token(Token = "0x40022BE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public float f;

			[Token(Token = "0x40022BF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public StringValue s;

			[Token(Token = "0x40022C0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public BLOBValue b;

			[Token(Token = "0x40022C1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public long h;

			[Token(Token = "0x40022C2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ulong t;

			[Token(Token = "0x40022C3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public double d;

			[Token(Token = "0x40022C4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public byte c;

			[Token(Token = "0x40022C5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public uint r;

			[Token(Token = "0x40022C6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public MIDIValue m;

			[Token(Token = "0x40022C7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public bool TF;
		}

		[Token(Token = "0x2000617")]
		public class Symbol
		{
			[Token(Token = "0x40022C8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string str;

			[Token(Token = "0x60023DF")]
			[Address(RVA = "0xE7A058", Offset = "0xE7A058", VA = "0xE7A058")]
			public Symbol(string s = "")
			{
			}

			[Token(Token = "0x60023E0")]
			[Address(RVA = "0xE7A350", Offset = "0xE7A350", VA = "0xE7A350", Slot = "3")]
			public override string ToString()
			{
				return null;
			}
		}

		[Token(Token = "0x2000618")]
		public class MIDI
		{
			[Token(Token = "0x40022C9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public uint Data;

			[Token(Token = "0x60023E1")]
			[Address(RVA = "0xE7A0D8", Offset = "0xE7A0D8", VA = "0xE7A0D8")]
			public MIDI(byte byte1, byte byte2, byte byte3, byte byte4)
			{
			}

			[Token(Token = "0x60023E2")]
			[Address(RVA = "0xE7A17C", Offset = "0xE7A17C", VA = "0xE7A17C", Slot = "3")]
			public override string ToString()
			{
				return null;
			}
		}

		[Token(Token = "0x2000619")]
		public class Infinitum
		{
			[Token(Token = "0x60023E3")]
			[Address(RVA = "0xE7A134", Offset = "0xE7A134", VA = "0xE7A134", Slot = "3")]
			public override string ToString()
			{
				return null;
			}

			[Token(Token = "0x60023E4")]
			[Address(RVA = "0xE7A12C", Offset = "0xE7A12C", VA = "0xE7A12C")]
			public Infinitum()
			{
			}
		}

		[Token(Token = "0x40022AF")]
		private const int ERROR_OSC_VALUES = -56;

		[Token(Token = "0x40022B0")]
		private const int DEFAULT_MAX_VALUES = 16;

		[Token(Token = "0x40022B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		protected ValueUnion[] valueUnions;

		[Token(Token = "0x40022B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected string address;

		[Token(Token = "0x40022B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<object> Values;

		[Token(Token = "0x40022B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public long Offset;

		[Token(Token = "0x170003C3")]
		public string Address
		{
			[Token(Token = "0x60023D7")]
			[Address(RVA = "0xE798D4", Offset = "0xE798D4", VA = "0xE798D4")]
			get
			{
				return null;
			}
			[Token(Token = "0x60023D8")]
			[Address(RVA = "0xE798DC", Offset = "0xE798DC", VA = "0xE798DC")]
			set
			{
			}
		}

		[Token(Token = "0x170003C4")]
		public string Typetag
		{
			[Token(Token = "0x60023D9")]
			[Address(RVA = "0xE7994C", Offset = "0xE7994C", VA = "0xE7994C")]
			get
			{
				return null;
			}
		}

		[PreserveSig]
		[Token(Token = "0x60023D5")]
		[Address(RVA = "0xE796EC", Offset = "0xE796EC", VA = "0xE796EC")]
		protected static extern int ge_timeline_osc_message_encode(IntPtr data, int size, string address, int address_size, string typetag, int typetag_size, IntPtr values, ref int num_values);

		[PreserveSig]
		[Token(Token = "0x60023D6")]
		[Address(RVA = "0xE797F4", Offset = "0xE797F4", VA = "0xE797F4")]
		protected static extern int ge_timeline_osc_message_decode(IntPtr data, int size, ref IntPtr address, ref int address_size, ref IntPtr typetag, ref int typetag_size, int max_values, IntPtr values, ref int num_values);

		[Token(Token = "0x60023DA")]
		[Address(RVA = "0xE79A30", Offset = "0xE79A30", VA = "0xE79A30")]
		public static char GetOSCTypeFromObject(object obj)
		{
			return default(char);
		}

		[Token(Token = "0x60023DB")]
		[Address(RVA = "0xE79EBC", Offset = "0xE79EBC", VA = "0xE79EBC")]
		public OSCMessage(string address = "", [Optional] List<object> values)
		{
		}

		[Token(Token = "0x60023DC")]
		[Address(RVA = "0xE79FB4", Offset = "0xE79FB4", VA = "0xE79FB4")]
		public void AddValues(object obj)
		{
		}

		[Token(Token = "0x60023DD")]
		[Address(RVA = "0xE77C58", Offset = "0xE77C58", VA = "0xE77C58")]
		public int Encode(byte[] buffer)
		{
			return default(int);
		}

		[Token(Token = "0x60023DE")]
		[Address(RVA = "0xE78A64", Offset = "0xE78A64", VA = "0xE78A64")]
		public int Decode(byte[] buffer, int max_values = 16)
		{
			return default(int);
		}
	}
}
namespace OculusSampleFramework
{
	[Token(Token = "0x200061A")]
	public class ColorGrabbable : OVRGrabbable
	{
		[Token(Token = "0x40022CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly Color COLOR_GRAB;

		[Token(Token = "0x40022CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static readonly Color COLOR_HIGHLIGHT;

		[Token(Token = "0x40022CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Color m_color;

		[Token(Token = "0x40022CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private MeshRenderer[] m_meshRenderers;

		[Token(Token = "0x40022CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private bool m_highlight;

		[Token(Token = "0x170003C5")]
		public bool Highlight
		{
			[Token(Token = "0x60023E5")]
			[Address(RVA = "0xD75560", Offset = "0xD75560", VA = "0xD75560")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60023E6")]
			[Address(RVA = "0xD75568", Offset = "0xD75568", VA = "0xD75568")]
			set
			{
			}
		}

		[Token(Token = "0x60023E7")]
		[Address(RVA = "0xD75574", Offset = "0xD75574", VA = "0xD75574")]
		protected void UpdateColor()
		{
		}

		[Token(Token = "0x60023E8")]
		[Address(RVA = "0xD75740", Offset = "0xD75740", VA = "0xD75740", Slot = "4")]
		public override void GrabBegin(OVRGrabber hand, Collider grabPoint)
		{
		}

		[Token(Token = "0x60023E9")]
		[Address(RVA = "0xD75768", Offset = "0xD75768", VA = "0xD75768", Slot = "5")]
		public override void GrabEnd(Vector3 linearVelocity, Vector3 angularVelocity)
		{
		}

		[Token(Token = "0x60023EA")]
		[Address(RVA = "0xD75790", Offset = "0xD75790", VA = "0xD75790")]
		private void Awake()
		{
		}

		[Token(Token = "0x60023EB")]
		[Address(RVA = "0xD75640", Offset = "0xD75640", VA = "0xD75640")]
		private void SetColor(Color color)
		{
		}

		[Token(Token = "0x60023EC")]
		[Address(RVA = "0xD75A20", Offset = "0xD75A20", VA = "0xD75A20")]
		public ColorGrabbable()
		{
		}
	}
	[Token(Token = "0x200061B")]
	public class DistanceGrabbable : OVRGrabbable
	{
		[Token(Token = "0x40022CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public string m_materialColorField;

		[Token(Token = "0x40022D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private GrabbableCrosshair m_crosshair;

		[Token(Token = "0x40022D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private GrabManager m_crosshairManager;

		[Token(Token = "0x40022D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Renderer m_renderer;

		[Token(Token = "0x40022D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private MaterialPropertyBlock m_mpb;

		[Token(Token = "0x40022D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private bool m_inRange;

		[Token(Token = "0x40022D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x71")]
		private bool m_targeted;

		[Token(Token = "0x170003C6")]
		public bool InRange
		{
			[Token(Token = "0x60023EE")]
			[Address(RVA = "0xD75E78", Offset = "0xD75E78", VA = "0xD75E78")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60023EF")]
			[Address(RVA = "0xD75E80", Offset = "0xD75E80", VA = "0xD75E80")]
			set
			{
			}
		}

		[Token(Token = "0x170003C7")]
		public bool Targeted
		{
			[Token(Token = "0x60023F0")]
			[Address(RVA = "0xD75FFC", Offset = "0xD75FFC", VA = "0xD75FFC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60023F1")]
			[Address(RVA = "0xD76004", Offset = "0xD76004", VA = "0xD76004")]
			set
			{
			}
		}

		[Token(Token = "0x60023F2")]
		[Address(RVA = "0xD76010", Offset = "0xD76010", VA = "0xD76010", Slot = "6")]
		protected override void Start()
		{
		}

		[Token(Token = "0x60023F3")]
		[Address(RVA = "0xD75E8C", Offset = "0xD75E8C", VA = "0xD75E8C")]
		private void RefreshCrosshair()
		{
		}

		[Token(Token = "0x60023F4")]
		[Address(RVA = "0xD761EC", Offset = "0xD761EC", VA = "0xD761EC")]
		public DistanceGrabbable()
		{
		}
	}
	[Token(Token = "0x200061C")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x9748E8", Offset = "0x9748E8")]
	public class DistanceGrabber : OVRGrabber
	{
		[Token(Token = "0x40022D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		[SerializeField]
		private float m_spherecastRadius;

		[Token(Token = "0x40022D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[SerializeField]
		private float m_noSnapThreshhold;

		[Token(Token = "0x40022D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		[SerializeField]
		private bool m_useSpherecast;

		[Token(Token = "0x40022D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCD")]
		[SerializeField]
		public bool m_preventGrabThroughWalls;

		[Token(Token = "0x40022DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[SerializeField]
		private float m_objectPullVelocity;

		[Token(Token = "0x40022DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		private float m_objectPullMaxRotationRate;

		[Token(Token = "0x40022DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private bool m_movingObjectToHand;

		[Token(Token = "0x40022DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		[SerializeField]
		private float m_maxGrabDistance;

		[Token(Token = "0x40022DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[SerializeField]
		private int m_grabObjectsInLayer;

		[Token(Token = "0x40022DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		[SerializeField]
		private int m_obstructionLayer;

		[Token(Token = "0x40022E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private DistanceGrabber m_otherHand;

		[Token(Token = "0x40022E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		protected DistanceGrabbable m_target;

		[Token(Token = "0x40022E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		protected Collider m_targetCollider;

		[Token(Token = "0x170003C8")]
		public bool UseSpherecast
		{
			[Token(Token = "0x60023F5")]
			[Address(RVA = "0xD761F4", Offset = "0xD761F4", VA = "0xD761F4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60023F6")]
			[Address(RVA = "0xD761FC", Offset = "0xD761FC", VA = "0xD761FC")]
			set
			{
			}
		}

		[Token(Token = "0x60023F7")]
		[Address(RVA = "0xD76218", Offset = "0xD76218", VA = "0xD76218", Slot = "5")]
		protected override void Start()
		{
		}

		[Token(Token = "0x60023F8")]
		[Address(RVA = "0xD76430", Offset = "0xD76430", VA = "0xD76430", Slot = "6")]
		public override void Update()
		{
		}

		[Token(Token = "0x60023F9")]
		[Address(RVA = "0xD76DA4", Offset = "0xD76DA4", VA = "0xD76DA4", Slot = "7")]
		protected override void GrabBegin()
		{
		}

		[Token(Token = "0x60023FA")]
		[Address(RVA = "0xD7737C", Offset = "0xD7737C", VA = "0xD7737C", Slot = "8")]
		protected override void MoveGrabbedObject(Vector3 pos, Quaternion rot, bool forceTeleport = false)
		{
		}

		[Token(Token = "0x60023FB")]
		[Address(RVA = "0xD7775C", Offset = "0xD7775C", VA = "0xD7775C")]
		private static DistanceGrabbable HitInfoToGrabbable(RaycastHit hitInfo)
		{
			return null;
		}

		[Token(Token = "0x60023FC")]
		[Address(RVA = "0xD7669C", Offset = "0xD7669C", VA = "0xD7669C")]
		protected bool FindTarget(out DistanceGrabbable dgOut, out Collider collOut)
		{
			return default(bool);
		}

		[Token(Token = "0x60023FD")]
		[Address(RVA = "0xD77838", Offset = "0xD77838", VA = "0xD77838")]
		protected bool FindTargetWithSpherecast(out DistanceGrabbable dgOut, out Collider collOut)
		{
			return default(bool);
		}

		[Token(Token = "0x60023FE")]
		[Address(RVA = "0xD77CD4", Offset = "0xD77CD4", VA = "0xD77CD4", Slot = "9")]
		protected override void GrabVolumeEnable(bool enabled)
		{
		}

		[Token(Token = "0x60023FF")]
		[Address(RVA = "0xD77CEC", Offset = "0xD77CEC", VA = "0xD77CEC", Slot = "10")]
		protected override void OffhandGrabbed(OVRGrabbable grabbable)
		{
		}

		[Token(Token = "0x6002400")]
		[Address(RVA = "0xD77CF4", Offset = "0xD77CF4", VA = "0xD77CF4")]
		public DistanceGrabber()
		{
		}
	}
	[Token(Token = "0x200061D")]
	public class GrabManager : MonoBehaviour
	{
		[Token(Token = "0x40022E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Collider m_grabVolume;

		[Token(Token = "0x40022E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Color OutlineColorInRange;

		[Token(Token = "0x40022E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Color OutlineColorHighlighted;

		[Token(Token = "0x40022E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Color OutlineColorOutOfRange;

		[Token(Token = "0x6002401")]
		[Address(RVA = "0xD796D0", Offset = "0xD796D0", VA = "0xD796D0")]
		private void OnTriggerEnter(Collider otherCollider)
		{
		}

		[Token(Token = "0x6002402")]
		[Address(RVA = "0xD79780", Offset = "0xD79780", VA = "0xD79780")]
		private void OnTriggerExit(Collider otherCollider)
		{
		}

		[Token(Token = "0x6002403")]
		[Address(RVA = "0xD7982C", Offset = "0xD7982C", VA = "0xD7982C")]
		public GrabManager()
		{
		}
	}
	[Token(Token = "0x200061E")]
	public class GrabbableCrosshair : MonoBehaviour
	{
		[Token(Token = "0x200061F")]
		public enum CrosshairState
		{
			[Token(Token = "0x40022EC")]
			Disabled,
			[Token(Token = "0x40022ED")]
			Enabled,
			[Token(Token = "0x40022EE")]
			Targeted
		}

		[Token(Token = "0x40022E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private CrosshairState m_state;

		[Token(Token = "0x40022E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Transform m_centerEyeAnchor;

		[Token(Token = "0x40022E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private GameObject m_targetedCrosshair;

		[Token(Token = "0x40022EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private GameObject m_enabledCrosshair;

		[Token(Token = "0x6002404")]
		[Address(RVA = "0xD79834", Offset = "0xD79834", VA = "0xD79834")]
		private void Start()
		{
		}

		[Token(Token = "0x6002405")]
		[Address(RVA = "0xD76150", Offset = "0xD76150", VA = "0xD76150")]
		public void SetState(CrosshairState cs)
		{
		}

		[Token(Token = "0x6002406")]
		[Address(RVA = "0xD798A4", Offset = "0xD798A4", VA = "0xD798A4")]
		private void Update()
		{
		}

		[Token(Token = "0x6002407")]
		[Address(RVA = "0xD798EC", Offset = "0xD798EC", VA = "0xD798EC")]
		public GrabbableCrosshair()
		{
		}
	}
	[Token(Token = "0x2000620")]
	public class PauseOnInputLoss : MonoBehaviour
	{
		[Token(Token = "0x6002408")]
		[Address(RVA = "0xBB0964", Offset = "0xBB0964", VA = "0xBB0964")]
		private void Start()
		{
		}

		[Token(Token = "0x6002409")]
		[Address(RVA = "0xBB0A30", Offset = "0xBB0A30", VA = "0xBB0A30")]
		private void OnInputFocusLost()
		{
		}

		[Token(Token = "0x600240A")]
		[Address(RVA = "0xBB0A3C", Offset = "0xBB0A3C", VA = "0xBB0A3C")]
		private void OnInputFocusAcquired()
		{
		}

		[Token(Token = "0x600240B")]
		[Address(RVA = "0xBB0A48", Offset = "0xBB0A48", VA = "0xBB0A48")]
		public PauseOnInputLoss()
		{
		}
	}
	[Token(Token = "0x2000621")]
	public class BoneCapsuleTriggerLogic : MonoBehaviour
	{
		[Token(Token = "0x40022EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public InteractableToolTags ToolTags;

		[Token(Token = "0x40022F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public HashSet<ColliderZone> CollidersTouchingUs;

		[Token(Token = "0x40022F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private List<ColliderZone> _elementsToCleanUp;

		[Token(Token = "0x600240C")]
		[Address(RVA = "0xD74148", Offset = "0xD74148", VA = "0xD74148")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x600240D")]
		[Address(RVA = "0xD741A0", Offset = "0xD741A0", VA = "0xD741A0")]
		private void Update()
		{
		}

		[Token(Token = "0x600240E")]
		[Address(RVA = "0xD74444", Offset = "0xD74444", VA = "0xD74444")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x600240F")]
		[Address(RVA = "0xD74534", Offset = "0xD74534", VA = "0xD74534")]
		private void OnTriggerExit(Collider other)
		{
		}

		[Token(Token = "0x6002410")]
		[Address(RVA = "0xD741A4", Offset = "0xD741A4", VA = "0xD741A4")]
		private void CleanUpDeadColliders()
		{
		}

		[Token(Token = "0x6002411")]
		[Address(RVA = "0xD74624", Offset = "0xD74624", VA = "0xD74624")]
		public BoneCapsuleTriggerLogic()
		{
		}
	}
	[Token(Token = "0x2000622")]
	public class ButtonController : Interactable
	{
		[Token(Token = "0x2000623")]
		public enum ContactTest
		{
			[Token(Token = "0x4002300")]
			PerpenTest,
			[Token(Token = "0x4002301")]
			BackwardsPress
		}

		[Token(Token = "0x40022F2")]
		private const float ENTRY_DOT_THRESHOLD = 0.8f;

		[Token(Token = "0x40022F3")]
		private const float PERP_DOT_THRESHOLD = 0.5f;

		[Token(Token = "0x40022F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private GameObject _proximityZone;

		[Token(Token = "0x40022F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private GameObject _contactZone;

		[Token(Token = "0x40022F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private GameObject _actionZone;

		[Token(Token = "0x40022F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private ContactTest[] _contactTests;

		[Token(Token = "0x40022F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private Transform _buttonPlaneCenter;

		[Token(Token = "0x40022F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private bool _makeSureToolIsOnPositiveSide;

		[Token(Token = "0x40022FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		[SerializeField]
		private Vector3 _localButtonDirection;

		[Token(Token = "0x40022FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private InteractableToolTags[] _allValidToolsTags;

		[Token(Token = "0x40022FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private int _toolTagsMask;

		[Token(Token = "0x40022FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		private InteractableState _currentButtonState;

		[Token(Token = "0x40022FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Dictionary<InteractableTool, InteractableState> _toolToState;

		[Token(Token = "0x170003C9")]
		public override int ValidToolTagsMask
		{
			[Token(Token = "0x6002412")]
			[Address(RVA = "0xD746D4", Offset = "0xD746D4", VA = "0xD746D4", Slot = "4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170003CA")]
		public Vector3 LocalButtonDirection
		{
			[Token(Token = "0x6002413")]
			[Address(RVA = "0xD746DC", Offset = "0xD746DC", VA = "0xD746DC")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x6002414")]
		[Address(RVA = "0xD746E8", Offset = "0xD746E8", VA = "0xD746E8", Slot = "9")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6002415")]
		[Address(RVA = "0xD74860", Offset = "0xD74860", VA = "0xD74860")]
		private void FireInteractionEventsOnDepth(InteractableCollisionDepth oldDepth, InteractableTool collidingTool, InteractionType interactionType)
		{
		}

		[Token(Token = "0x6002416")]
		[Address(RVA = "0xD74A80", Offset = "0xD74A80", VA = "0xD74A80", Slot = "8")]
		public override void UpdateCollisionDepth(InteractableTool interactableTool, InteractableCollisionDepth oldCollisionDepth, InteractableCollisionDepth newCollisionDepth)
		{
		}

		[Token(Token = "0x6002417")]
		[Address(RVA = "0xD74FC4", Offset = "0xD74FC4", VA = "0xD74FC4")]
		private InteractableState GetUpcomingStateNearField(InteractableState oldState, InteractableCollisionDepth newCollisionDepth, bool toolIsInActionZone, bool toolIsInContactZone, bool toolIsInProximity, bool validContact, bool onPositiveSideOfInteractable)
		{
			return default(InteractableState);
		}

		[Token(Token = "0x6002418")]
		[Address(RVA = "0xD74EDC", Offset = "0xD74EDC", VA = "0xD74EDC")]
		private bool IsValidContact(InteractableTool collidingTool, Vector3 buttonDirection)
		{
			return default(bool);
		}

		[Token(Token = "0x6002419")]
		[Address(RVA = "0xD75138", Offset = "0xD75138", VA = "0xD75138")]
		private bool PassEntryTest(InteractableTool collidingTool, Vector3 buttonDirection)
		{
			return default(bool);
		}

		[Token(Token = "0x600241A")]
		[Address(RVA = "0xD7522C", Offset = "0xD7522C", VA = "0xD7522C")]
		private bool PassPerpTest(InteractableTool collidingTool, Vector3 buttonDirection)
		{
			return default(bool);
		}

		[Token(Token = "0x600241B")]
		[Address(RVA = "0xD75358", Offset = "0xD75358", VA = "0xD75358")]
		public ButtonController()
		{
		}
	}
	[Token(Token = "0x2000624")]
	public class ButtonTriggerZone : MonoBehaviour, ColliderZone
	{
		[Token(Token = "0x4002302")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject _parentInteractableObj;

		[Token(Token = "0x4002303")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x98174C", Offset = "0x98174C")]
		private Collider <Collider>k__BackingField;

		[Token(Token = "0x4002304")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x98175C", Offset = "0x98175C")]
		private Interactable <ParentInteractable>k__BackingField;

		[Token(Token = "0x170003CB")]
		public Collider Collider
		{
			[Token(Token = "0x600241C")]
			[Address(RVA = "0xD7545C", Offset = "0xD7545C", VA = "0xD7545C", Slot = "4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x993740", Offset = "0x993740")]
			get
			{
				return null;
			}
			[Token(Token = "0x600241D")]
			[Address(RVA = "0xD75464", Offset = "0xD75464", VA = "0xD75464")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x993750", Offset = "0x993750")]
			private set
			{
			}
		}

		[Token(Token = "0x170003CC")]
		public Interactable ParentInteractable
		{
			[Token(Token = "0x600241E")]
			[Address(RVA = "0xD7546C", Offset = "0xD7546C", VA = "0xD7546C", Slot = "5")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x993760", Offset = "0x993760")]
			get
			{
				return null;
			}
			[Token(Token = "0x600241F")]
			[Address(RVA = "0xD75474", Offset = "0xD75474", VA = "0xD75474")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x993770", Offset = "0x993770")]
			private set
			{
			}
		}

		[Token(Token = "0x170003CD")]
		public InteractableCollisionDepth CollisionDepth
		{
			[Token(Token = "0x6002420")]
			[Address(RVA = "0xD7547C", Offset = "0xD7547C", VA = "0xD7547C", Slot = "6")]
			get
			{
				return default(InteractableCollisionDepth);
			}
		}

		[Token(Token = "0x6002421")]
		[Address(RVA = "0xD754CC", Offset = "0xD754CC", VA = "0xD754CC")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002422")]
		[Address(RVA = "0xD75558", Offset = "0xD75558", VA = "0xD75558")]
		public ButtonTriggerZone()
		{
		}
	}
	[Token(Token = "0x2000625")]
	public interface ColliderZone
	{
		[Token(Token = "0x170003CE")]
		Collider Collider
		{
			[Token(Token = "0x6002423")]
			get;
		}

		[Token(Token = "0x170003CF")]
		Interactable ParentInteractable
		{
			[Token(Token = "0x6002424")]
			get;
		}

		[Token(Token = "0x170003D0")]
		InteractableCollisionDepth CollisionDepth
		{
			[Token(Token = "0x6002425")]
			get;
		}
	}
	[Token(Token = "0x2000626")]
	public class ColliderZoneArgs : EventArgs
	{
		[Token(Token = "0x4002305")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly ColliderZone Collider;

		[Token(Token = "0x4002306")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly float FrameTime;

		[Token(Token = "0x4002307")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly InteractableTool CollidingTool;

		[Token(Token = "0x4002308")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly InteractionType InteractionT;

		[Token(Token = "0x6002426")]
		[Address(RVA = "0xD749C4", Offset = "0xD749C4", VA = "0xD749C4")]
		public ColliderZoneArgs(ColliderZone collider, float frameTime, InteractableTool collidingTool, InteractionType interactionType)
		{
		}
	}
	[Token(Token = "0x2000627")]
	public enum InteractionType
	{
		[Token(Token = "0x400230A")]
		Enter,
		[Token(Token = "0x400230B")]
		Stay,
		[Token(Token = "0x400230C")]
		Exit
	}
	[Token(Token = "0x2000628")]
	public class HandsManager : MonoBehaviour
	{
		[Token(Token = "0x2000629")]
		public enum HandsVisualMode
		{
			[Token(Token = "0x400231E")]
			Mesh,
			[Token(Token = "0x400231F")]
			Skeleton,
			[Token(Token = "0x4002320")]
			Both
		}

		[Token(Token = "0x200062A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x97494C", Offset = "0x97494C")]
		private sealed class <FindSkeletonVisualGameObjects>d__52 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002321")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002322")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002323")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public HandsManager <>4__this;

			[Token(Token = "0x170003DC")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002448")]
				[Address(RVA = "0xD7A8D0", Offset = "0xD7A8D0", VA = "0xD7A8D0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003DD")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600244A")]
				[Address(RVA = "0xD7A938", Offset = "0xD7A938", VA = "0xD7A938", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002445")]
			[Address(RVA = "0xD7A354", Offset = "0xD7A354", VA = "0xD7A354")]
			[DebuggerHidden]
			public <FindSkeletonVisualGameObjects>d__52(int <>1__state)
			{
			}

			[Token(Token = "0x6002446")]
			[Address(RVA = "0xD7A67C", Offset = "0xD7A67C", VA = "0xD7A67C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002447")]
			[Address(RVA = "0xD7A680", Offset = "0xD7A680", VA = "0xD7A680", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002449")]
			[Address(RVA = "0xD7A8D8", Offset = "0xD7A8D8", VA = "0xD7A8D8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400230D")]
		private const string SKELETON_VISUALIZER_NAME = "SkeletonRenderer";

		[Token(Token = "0x400230E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject _leftHand;

		[Token(Token = "0x400230F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GameObject _rightHand;

		[Token(Token = "0x4002310")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public HandsVisualMode VisualMode;

		[Token(Token = "0x4002311")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private OVRHand[] _hand;

		[Token(Token = "0x4002312")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private OVRSkeleton[] _handSkeleton;

		[Token(Token = "0x4002313")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private OVRSkeletonRenderer[] _handSkeletonRenderer;

		[Token(Token = "0x4002314")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private OVRMesh[] _handMesh;

		[Token(Token = "0x4002315")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private OVRMeshRenderer[] _handMeshRenderer;

		[Token(Token = "0x4002316")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private SkinnedMeshRenderer _leftMeshRenderer;

		[Token(Token = "0x4002317")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private SkinnedMeshRenderer _rightMeshRenderer;

		[Token(Token = "0x4002318")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private GameObject _leftSkeletonVisual;

		[Token(Token = "0x4002319")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private GameObject _rightSkeletonVisual;

		[Token(Token = "0x400231A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private float _currentHandAlpha;

		[Token(Token = "0x400231B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private int HandAlphaId;

		[Token(Token = "0x400231C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x98178C", Offset = "0x98178C")]
		private static HandsManager <Instance>k__BackingField;

		[Token(Token = "0x170003D1")]
		public OVRHand RightHand
		{
			[Token(Token = "0x6002427")]
			[Address(RVA = "0xD78760", Offset = "0xD78760", VA = "0xD78760")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002428")]
			[Address(RVA = "0xD798F4", Offset = "0xD798F4", VA = "0xD798F4")]
			private set
			{
			}
		}

		[Token(Token = "0x170003D2")]
		public OVRSkeleton RightHandSkeleton
		{
			[Token(Token = "0x6002429")]
			[Address(RVA = "0xD79358", Offset = "0xD79358", VA = "0xD79358")]
			get
			{
				return null;
			}
			[Token(Token = "0x600242A")]
			[Address(RVA = "0xD79964", Offset = "0xD79964", VA = "0xD79964")]
			private set
			{
			}
		}

		[Token(Token = "0x170003D3")]
		public OVRSkeletonRenderer RightHandSkeletonRenderer
		{
			[Token(Token = "0x600242B")]
			[Address(RVA = "0xD799D4", Offset = "0xD799D4", VA = "0xD799D4")]
			get
			{
				return null;
			}
			[Token(Token = "0x600242C")]
			[Address(RVA = "0xD79A0C", Offset = "0xD79A0C", VA = "0xD79A0C")]
			private set
			{
			}
		}

		[Token(Token = "0x170003D4")]
		public OVRMesh RightHandMesh
		{
			[Token(Token = "0x600242D")]
			[Address(RVA = "0xD79A7C", Offset = "0xD79A7C", VA = "0xD79A7C")]
			get
			{
				return null;
			}
			[Token(Token = "0x600242E")]
			[Address(RVA = "0xD79AB4", Offset = "0xD79AB4", VA = "0xD79AB4")]
			private set
			{
			}
		}

		[Token(Token = "0x170003D5")]
		public OVRMeshRenderer RightHandMeshRenderer
		{
			[Token(Token = "0x600242F")]
			[Address(RVA = "0xD79B24", Offset = "0xD79B24", VA = "0xD79B24")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002430")]
			[Address(RVA = "0xD79B5C", Offset = "0xD79B5C", VA = "0xD79B5C")]
			private set
			{
			}
		}

		[Token(Token = "0x170003D6")]
		public OVRHand LeftHand
		{
			[Token(Token = "0x6002431")]
			[Address(RVA = "0xD7872C", Offset = "0xD7872C", VA = "0xD7872C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002432")]
			[Address(RVA = "0xD79BCC", Offset = "0xD79BCC", VA = "0xD79BCC")]
			private set
			{
			}
		}

		[Token(Token = "0x170003D7")]
		public OVRSkeleton LeftHandSkeleton
		{
			[Token(Token = "0x6002433")]
			[Address(RVA = "0xD79324", Offset = "0xD79324", VA = "0xD79324")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002434")]
			[Address(RVA = "0xD79C38", Offset = "0xD79C38", VA = "0xD79C38")]
			private set
			{
			}
		}

		[Token(Token = "0x170003D8")]
		public OVRSkeletonRenderer LeftHandSkeletonRenderer
		{
			[Token(Token = "0x6002435")]
			[Address(RVA = "0xD79CA4", Offset = "0xD79CA4", VA = "0xD79CA4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002436")]
			[Address(RVA = "0xD79CD8", Offset = "0xD79CD8", VA = "0xD79CD8")]
			private set
			{
			}
		}

		[Token(Token = "0x170003D9")]
		public OVRMesh LeftHandMesh
		{
			[Token(Token = "0x6002437")]
			[Address(RVA = "0xD79D44", Offset = "0xD79D44", VA = "0xD79D44")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002438")]
			[Address(RVA = "0xD79D78", Offset = "0xD79D78", VA = "0xD79D78")]
			private set
			{
			}
		}

		[Token(Token = "0x170003DA")]
		public OVRMeshRenderer LeftHandMeshRenderer
		{
			[Token(Token = "0x6002439")]
			[Address(RVA = "0xD79DE4", Offset = "0xD79DE4", VA = "0xD79DE4")]
			get
			{
				return null;
			}
			[Token(Token = "0x600243A")]
			[Address(RVA = "0xD79E18", Offset = "0xD79E18", VA = "0xD79E18")]
			private set
			{
			}
		}

		[Token(Token = "0x170003DB")]
		public static HandsManager Instance
		{
			[Token(Token = "0x600243B")]
			[Address(RVA = "0xD79E84", Offset = "0xD79E84", VA = "0xD79E84")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x993780", Offset = "0x993780")]
			get
			{
				return null;
			}
			[Token(Token = "0x600243C")]
			[Address(RVA = "0xD79ED4", Offset = "0xD79ED4", VA = "0xD79ED4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x993790", Offset = "0x993790")]
			private set
			{
			}
		}

		[Token(Token = "0x600243D")]
		[Address(RVA = "0xD79F2C", Offset = "0xD79F2C", VA = "0xD79F2C")]
		private void Awake()
		{
		}

		[Token(Token = "0x600243E")]
		[Address(RVA = "0xD7A2CC", Offset = "0xD7A2CC", VA = "0xD7A2CC")]
		private void Update()
		{
		}

		[Token(Token = "0x600243F")]
		[Address(RVA = "0xD7A250", Offset = "0xD7A250", VA = "0xD7A250")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9937A0", Offset = "0x9937A0")]
		private IEnumerator FindSkeletonVisualGameObjects()
		{
			return null;
		}

		[Token(Token = "0x6002440")]
		[Address(RVA = "0xD75CD0", Offset = "0xD75CD0", VA = "0xD75CD0")]
		public void SwitchVisualization()
		{
		}

		[Token(Token = "0x6002441")]
		[Address(RVA = "0xD7A380", Offset = "0xD7A380", VA = "0xD7A380")]
		private void SetToCurrentVisualMode()
		{
		}

		[Token(Token = "0x6002442")]
		[Address(RVA = "0xD79390", Offset = "0xD79390", VA = "0xD79390")]
		public static List<OVRBoneCapsule> GetCapsulesPerBone(OVRSkeleton skeleton, OVRSkeleton.BoneId boneId)
		{
			return null;
		}

		[Token(Token = "0x6002443")]
		[Address(RVA = "0xD7859C", Offset = "0xD7859C", VA = "0xD7859C")]
		public bool IsInitialized()
		{
			return default(bool);
		}

		[Token(Token = "0x6002444")]
		[Address(RVA = "0xD7A560", Offset = "0xD7A560", VA = "0xD7A560")]
		public HandsManager()
		{
		}
	}
	[Token(Token = "0x200062B")]
	public abstract class Interactable : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x200062C")]
		public class InteractableStateArgsEvent : UnityEvent<InteractableStateArgs>
		{
			[Token(Token = "0x600245C")]
			[Address(RVA = "0xD7B088", Offset = "0xD7B088", VA = "0xD7B088")]
			public InteractableStateArgsEvent()
			{
			}
		}

		[Token(Token = "0x4002324")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected ColliderZone _proximityZoneCollider;

		[Token(Token = "0x4002325")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		protected ColliderZone _contactZoneCollider;

		[Token(Token = "0x4002326")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		protected ColliderZone _actionZoneCollider;

		[Token(Token = "0x400232A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public InteractableStateArgsEvent InteractableStateChanged;

		[Token(Token = "0x170003DE")]
		public ColliderZone ProximityCollider
		{
			[Token(Token = "0x600244B")]
			[Address(RVA = "0xD7A940", Offset = "0xD7A940", VA = "0xD7A940")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003DF")]
		public ColliderZone ContactCollider
		{
			[Token(Token = "0x600244C")]
			[Address(RVA = "0xD7A948", Offset = "0xD7A948", VA = "0xD7A948")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003E0")]
		public ColliderZone ActionCollider
		{
			[Token(Token = "0x600244D")]
			[Address(RVA = "0xD7A950", Offset = "0xD7A950", VA = "0xD7A950")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003E1")]
		public virtual int ValidToolTagsMask
		{
			[Token(Token = "0x600244E")]
			[Address(RVA = "0xD7A958", Offset = "0xD7A958", VA = "0xD7A958", Slot = "4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1400002D")]
		public event Action<ColliderZoneArgs> ProximityZoneEvent
		{
			[Token(Token = "0x600244F")]
			[Address(RVA = "0xD7A960", Offset = "0xD7A960", VA = "0xD7A960")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x993854", Offset = "0x993854")]
			add
			{
			}
			[Token(Token = "0x6002450")]
			[Address(RVA = "0xD7AA04", Offset = "0xD7AA04", VA = "0xD7AA04")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x993864", Offset = "0x993864")]
			remove
			{
			}
		}

		[Token(Token = "0x1400002E")]
		public event Action<ColliderZoneArgs> ContactZoneEvent
		{
			[Token(Token = "0x6002452")]
			[Address(RVA = "0xD7AB1C", Offset = "0xD7AB1C", VA = "0xD7AB1C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x993874", Offset = "0x993874")]
			add
			{
			}
			[Token(Token = "0x6002453")]
			[Address(RVA = "0xD7ABC0", Offset = "0xD7ABC0", VA = "0xD7ABC0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x993884", Offset = "0x993884")]
			remove
			{
			}
		}

		[Token(Token = "0x1400002F")]
		public event Action<ColliderZoneArgs> ActionZoneEvent
		{
			[Token(Token = "0x6002455")]
			[Address(RVA = "0xD7ACD8", Offset = "0xD7ACD8", VA = "0xD7ACD8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x993894", Offset = "0x993894")]
			add
			{
			}
			[Token(Token = "0x6002456")]
			[Address(RVA = "0xD7AD7C", Offset = "0xD7AD7C", VA = "0xD7AD7C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9938A4", Offset = "0x9938A4")]
			remove
			{
			}
		}

		[Token(Token = "0x6002451")]
		[Address(RVA = "0xD7AAA8", Offset = "0xD7AAA8", VA = "0xD7AAA8", Slot = "5")]
		protected virtual void OnProximityZoneEvent(ColliderZoneArgs args)
		{
		}

		[Token(Token = "0x6002454")]
		[Address(RVA = "0xD7AC64", Offset = "0xD7AC64", VA = "0xD7AC64", Slot = "6")]
		protected virtual void OnContactZoneEvent(ColliderZoneArgs args)
		{
		}

		[Token(Token = "0x6002457")]
		[Address(RVA = "0xD7AE20", Offset = "0xD7AE20", VA = "0xD7AE20", Slot = "7")]
		protected virtual void OnActionZoneEvent(ColliderZoneArgs args)
		{
		}

		[Token(Token = "0x6002458")]
		public abstract void UpdateCollisionDepth(InteractableTool interactableTool, InteractableCollisionDepth oldCollisionDepth, InteractableCollisionDepth newCollisionDepth);

		[Token(Token = "0x6002459")]
		[Address(RVA = "0xD747FC", Offset = "0xD747FC", VA = "0xD747FC", Slot = "9")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x600245A")]
		[Address(RVA = "0xD7AF5C", Offset = "0xD7AF5C", VA = "0xD7AF5C", Slot = "10")]
		protected virtual void OnDestroy()
		{
		}

		[Token(Token = "0x600245B")]
		[Address(RVA = "0xD75454", Offset = "0xD75454", VA = "0xD75454")]
		protected Interactable()
		{
		}
	}
	[Token(Token = "0x200062D")]
	public enum InteractableCollisionDepth
	{
		[Token(Token = "0x400232C")]
		None,
		[Token(Token = "0x400232D")]
		Proximity,
		[Token(Token = "0x400232E")]
		Contact,
		[Token(Token = "0x400232F")]
		Action
	}
	[Token(Token = "0x200062E")]
	public enum InteractableState
	{
		[Token(Token = "0x4002331")]
		Default,
		[Token(Token = "0x4002332")]
		ProximityState,
		[Token(Token = "0x4002333")]
		ContactState,
		[Token(Token = "0x4002334")]
		ActionState
	}
	[Token(Token = "0x200062F")]
	public class InteractableStateArgs : EventArgs
	{
		[Token(Token = "0x4002335")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly Interactable Interactable;

		[Token(Token = "0x4002336")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly InteractableTool Tool;

		[Token(Token = "0x4002337")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly InteractableState OldInteractableState;

		[Token(Token = "0x4002338")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public readonly InteractableState NewInteractableState;

		[Token(Token = "0x4002339")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly ColliderZoneArgs ColliderArgs;

		[Token(Token = "0x600245D")]
		[Address(RVA = "0xD75070", Offset = "0xD75070", VA = "0xD75070")]
		public InteractableStateArgs(Interactable interactable, InteractableTool tool, InteractableState newInteractableState, InteractableState oldState, ColliderZoneArgs colliderArgs)
		{
		}
	}
	[Token(Token = "0x2000630")]
	public class InteractableRegistry : MonoBehaviour
	{
		[Token(Token = "0x400233A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static HashSet<Interactable> _interactables;

		[Token(Token = "0x170003E2")]
		public static HashSet<Interactable> Interactables
		{
			[Token(Token = "0x600245E")]
			[Address(RVA = "0xD7B0D8", Offset = "0xD7B0D8", VA = "0xD7B0D8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600245F")]
		[Address(RVA = "0xD7AE94", Offset = "0xD7AE94", VA = "0xD7AE94")]
		public static void RegisterInteractable(Interactable interactable)
		{
		}

		[Token(Token = "0x6002460")]
		[Address(RVA = "0xD7AFC0", Offset = "0xD7AFC0", VA = "0xD7AFC0")]
		public static void UnregisterInteractable(Interactable interactable)
		{
		}

		[Token(Token = "0x6002461")]
		[Address(RVA = "0xD7B140", Offset = "0xD7B140", VA = "0xD7B140")]
		public InteractableRegistry()
		{
		}
	}
	[Token(Token = "0x2000631")]
	public class InteractableToolsCreator : MonoBehaviour
	{
		[Token(Token = "0x2000632")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x97495C", Offset = "0x97495C")]
		private sealed class <AttachToolsToHands>d__3 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400233D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400233E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400233F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Transform[] toolObjects;

			[Token(Token = "0x4002340")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public bool isRightHand;

			[Token(Token = "0x4002341")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public InteractableToolsCreator <>4__this;

			[Token(Token = "0x4002342")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private HandsManager <handsManagerObj>5__2;

			[Token(Token = "0x4002343")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private HashSet<Transform>.Enumerator <>7__wrap2;

			[Token(Token = "0x4002344")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			private Transform <toolObject>5__4;

			[Token(Token = "0x4002345")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			private OVRSkeleton <handSkeletonToAttachTo>5__5;

			[Token(Token = "0x170003E3")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600246B")]
				[Address(RVA = "0xBADFC4", Offset = "0xBADFC4", VA = "0xBADFC4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003E4")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600246D")]
				[Address(RVA = "0xBAE02C", Offset = "0xBAE02C", VA = "0xBAE02C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002467")]
			[Address(RVA = "0xBADAFC", Offset = "0xBADAFC", VA = "0xBADAFC")]
			[DebuggerHidden]
			public <AttachToolsToHands>d__3(int <>1__state)
			{
			}

			[Token(Token = "0x6002468")]
			[Address(RVA = "0xBADB28", Offset = "0xBADB28", VA = "0xBADB28", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002469")]
			[Address(RVA = "0xBADB9C", Offset = "0xBADB9C", VA = "0xBADB9C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600246A")]
			[Address(RVA = "0xBADB44", Offset = "0xBADB44", VA = "0xBADB44")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x600246C")]
			[Address(RVA = "0xBADFCC", Offset = "0xBADFCC", VA = "0xBADFCC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400233B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Transform[] LeftHandTools;

		[Token(Token = "0x400233C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Transform[] RightHandTools;

		[Token(Token = "0x6002463")]
		[Address(RVA = "0xD7BB74", Offset = "0xD7BB74", VA = "0xD7BB74")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002464")]
		[Address(RVA = "0xD7BBF0", Offset = "0xD7BBF0", VA = "0xD7BBF0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9938B4", Offset = "0x9938B4")]
		private IEnumerator AttachToolsToHands(Transform[] toolObjects, bool isRightHand)
		{
			return null;
		}

		[Token(Token = "0x6002465")]
		[Address(RVA = "0xD7BC94", Offset = "0xD7BC94", VA = "0xD7BC94")]
		private void AttachToolToHandTransform(Transform tool, bool isRightHanded)
		{
		}

		[Token(Token = "0x6002466")]
		[Address(RVA = "0xD7BD8C", Offset = "0xD7BD8C", VA = "0xD7BD8C")]
		public InteractableToolsCreator()
		{
		}
	}
	[Token(Token = "0x2000633")]
	public class InteractableToolsInputRouter : MonoBehaviour
	{
		[Token(Token = "0x4002346")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static InteractableToolsInputRouter _instance;

		[Token(Token = "0x4002347")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool _leftPinch;

		[Token(Token = "0x4002348")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		private bool _rightPinch;

		[Token(Token = "0x4002349")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private HashSet<InteractableTool> _leftHandNearTools;

		[Token(Token = "0x400234A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private HashSet<InteractableTool> _leftHandFarTools;

		[Token(Token = "0x400234B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private HashSet<InteractableTool> _rightHandNearTools;

		[Token(Token = "0x400234C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private HashSet<InteractableTool> _rightHandFarTools;

		[Token(Token = "0x170003E5")]
		public static InteractableToolsInputRouter Instance
		{
			[Token(Token = "0x600246E")]
			[Address(RVA = "0xBAE034", Offset = "0xBAE034", VA = "0xBAE034")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600246F")]
		[Address(RVA = "0xBAE1A0", Offset = "0xBAE1A0", VA = "0xBAE1A0")]
		public void RegisterInteractableTool(InteractableTool interactableTool)
		{
		}

		[Token(Token = "0x6002470")]
		[Address(RVA = "0xBAE24C", Offset = "0xBAE24C", VA = "0xBAE24C")]
		public void UnregisterInteractableTool(InteractableTool interactableTool)
		{
		}

		[Token(Token = "0x6002471")]
		[Address(RVA = "0xBAE2F8", Offset = "0xBAE2F8", VA = "0xBAE2F8")]
		private void Update()
		{
		}

		[Token(Token = "0x6002472")]
		[Address(RVA = "0xBAE5DC", Offset = "0xBAE5DC", VA = "0xBAE5DC")]
		private bool UpdateToolsAndEnableState(HashSet<InteractableTool> tools, bool toolsAreEnabledThisFrame)
		{
			return default(bool);
		}

		[Token(Token = "0x6002473")]
		[Address(RVA = "0xBAE624", Offset = "0xBAE624", VA = "0xBAE624")]
		private bool UpdateTools(HashSet<InteractableTool> tools, bool resetCollisionData = false)
		{
			return default(bool);
		}

		[Token(Token = "0x6002474")]
		[Address(RVA = "0xBAE898", Offset = "0xBAE898", VA = "0xBAE898")]
		private void ToggleToolsEnableState(HashSet<InteractableTool> tools, bool enableState)
		{
		}

		[Token(Token = "0x6002475")]
		[Address(RVA = "0xBAE9C4", Offset = "0xBAE9C4", VA = "0xBAE9C4")]
		public InteractableToolsInputRouter()
		{
		}
	}
	[Token(Token = "0x2000634")]
	public class FingerTipPokeTool : InteractableTool
	{
		[Token(Token = "0x2000635")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x97496C", Offset = "0x97496C")]
		private sealed class <AttachTriggerLogic>d__21 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002358")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002359")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400235A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public FingerTipPokeTool <>4__this;

			[Token(Token = "0x170003EA")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002487")]
				[Address(RVA = "0xD795A0", Offset = "0xD795A0", VA = "0xD795A0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003EB")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002489")]
				[Address(RVA = "0xD79608", Offset = "0xD79608", VA = "0xD79608", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002484")]
			[Address(RVA = "0xD7825C", Offset = "0xD7825C", VA = "0xD7825C")]
			[DebuggerHidden]
			public <AttachTriggerLogic>d__21(int <>1__state)
			{
			}

			[Token(Token = "0x6002485")]
			[Address(RVA = "0xD78F9C", Offset = "0xD78F9C", VA = "0xD78F9C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002486")]
			[Address(RVA = "0xD78FA0", Offset = "0xD78FA0", VA = "0xD78FA0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002488")]
			[Address(RVA = "0xD795A8", Offset = "0xD795A8", VA = "0xD795A8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400234D")]
		private const int NUM_VELOCITY_FRAMES = 10;

		[Token(Token = "0x400234E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private FingerTipPokeToolView _fingerTipPokeToolView;

		[Token(Token = "0x400234F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private OVRPlugin.HandFinger _fingerToFollow;

		[Token(Token = "0x4002350")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Vector3[] _velocityFrames;

		[Token(Token = "0x4002351")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private int _currVelocityFrame;

		[Token(Token = "0x4002352")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private bool _sampledMaxFramesAlready;

		[Token(Token = "0x4002353")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Vector3 _position;

		[Token(Token = "0x4002354")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private BoneCapsuleTriggerLogic[] _boneCapsuleTriggerLogic;

		[Token(Token = "0x4002355")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private float _lastScale;

		[Token(Token = "0x4002356")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		private bool _isInitialized;

		[Token(Token = "0x4002357")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private OVRBoneCapsule _capsuleToTrack;

		[Token(Token = "0x170003E6")]
		public override InteractableToolTags ToolTags
		{
			[Token(Token = "0x6002476")]
			[Address(RVA = "0xD780A4", Offset = "0xD780A4", VA = "0xD780A4", Slot = "4")]
			get
			{
				return default(InteractableToolTags);
			}
		}

		[Token(Token = "0x170003E7")]
		public override ToolInputState ToolInputState
		{
			[Token(Token = "0x6002477")]
			[Address(RVA = "0xD780AC", Offset = "0xD780AC", VA = "0xD780AC", Slot = "5")]
			get
			{
				return default(ToolInputState);
			}
		}

		[Token(Token = "0x170003E8")]
		public override bool IsFarFieldTool
		{
			[Token(Token = "0x6002478")]
			[Address(RVA = "0xD780B4", Offset = "0xD780B4", VA = "0xD780B4", Slot = "6")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170003E9")]
		public override bool EnableState
		{
			[Token(Token = "0x6002479")]
			[Address(RVA = "0xD780BC", Offset = "0xD780BC", VA = "0xD780BC", Slot = "10")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600247A")]
			[Address(RVA = "0xD780E8", Offset = "0xD780E8", VA = "0xD780E8", Slot = "11")]
			set
			{
			}
		}

		[Token(Token = "0x600247B")]
		[Address(RVA = "0xD78124", Offset = "0xD78124", VA = "0xD78124", Slot = "12")]
		public override void Initialize()
		{
		}

		[Token(Token = "0x600247C")]
		[Address(RVA = "0xD781E0", Offset = "0xD781E0", VA = "0xD781E0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x993968", Offset = "0x993968")]
		private IEnumerator AttachTriggerLogic()
		{
			return null;
		}

		[Token(Token = "0x600247D")]
		[Address(RVA = "0xD78288", Offset = "0xD78288", VA = "0xD78288")]
		private void Update()
		{
		}

		[Token(Token = "0x600247E")]
		[Address(RVA = "0xD78798", Offset = "0xD78798", VA = "0xD78798")]
		private void UpdateAverageVelocity()
		{
		}

		[Token(Token = "0x600247F")]
		[Address(RVA = "0xD78A10", Offset = "0xD78A10", VA = "0xD78A10")]
		private void CheckAndUpdateScale()
		{
		}

		[Token(Token = "0x6002480")]
		[Address(RVA = "0xD78B50", Offset = "0xD78B50", VA = "0xD78B50", Slot = "7")]
		public override List<InteractableCollisionInfo> GetNextIntersectingObjects()
		{
			return null;
		}

		[Token(Token = "0x6002481")]
		[Address(RVA = "0xD78E28", Offset = "0xD78E28", VA = "0xD78E28", Slot = "8")]
		public override void FocusOnInteractable(Interactable focusedInteractable, ColliderZone colliderZone)
		{
		}

		[Token(Token = "0x6002482")]
		[Address(RVA = "0xD78E2C", Offset = "0xD78E2C", VA = "0xD78E2C", Slot = "9")]
		public override void DeFocus()
		{
		}

		[Token(Token = "0x6002483")]
		[Address(RVA = "0xD78E30", Offset = "0xD78E30", VA = "0xD78E30")]
		public FingerTipPokeTool()
		{
		}
	}
	[Token(Token = "0x2000636")]
	public class FingerTipPokeToolView : MonoBehaviour
	{
		[Token(Token = "0x400235B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private MeshRenderer _sphereMeshRenderer;

		[Token(Token = "0x400235C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x98181C", Offset = "0x98181C")]
		private InteractableTool <InteractableTool>k__BackingField;

		[Token(Token = "0x400235D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x98182C", Offset = "0x98182C")]
		private bool <ToolActivateState>k__BackingField;

		[Token(Token = "0x400235E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x98183C", Offset = "0x98183C")]
		private float <SphereRadius>k__BackingField;

		[Token(Token = "0x170003EC")]
		public InteractableTool InteractableTool
		{
			[Token(Token = "0x600248A")]
			[Address(RVA = "0xD79610", Offset = "0xD79610", VA = "0xD79610", Slot = "4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x993A1C", Offset = "0x993A1C")]
			get
			{
				return null;
			}
			[Token(Token = "0x600248B")]
			[Address(RVA = "0xD79618", Offset = "0xD79618", VA = "0xD79618")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x993A2C", Offset = "0x993A2C")]
			set
			{
			}
		}

		[Token(Token = "0x170003ED")]
		public bool EnableState
		{
			[Token(Token = "0x600248C")]
			[Address(RVA = "0xD79620", Offset = "0xD79620", VA = "0xD79620", Slot = "5")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600248D")]
			[Address(RVA = "0xD7963C", Offset = "0xD7963C", VA = "0xD7963C", Slot = "6")]
			set
			{
			}
		}

		[Token(Token = "0x170003EE")]
		public bool ToolActivateState
		{
			[Token(Token = "0x600248E")]
			[Address(RVA = "0xD7965C", Offset = "0xD7965C", VA = "0xD7965C", Slot = "7")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x993A3C", Offset = "0x993A3C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600248F")]
			[Address(RVA = "0xD79664", Offset = "0xD79664", VA = "0xD79664", Slot = "8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x993A4C", Offset = "0x993A4C")]
			set
			{
			}
		}

		[Token(Token = "0x170003EF")]
		public float SphereRadius
		{
			[Token(Token = "0x6002490")]
			[Address(RVA = "0xD79670", Offset = "0xD79670", VA = "0xD79670")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x993A5C", Offset = "0x993A5C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6002491")]
			[Address(RVA = "0xD79678", Offset = "0xD79678", VA = "0xD79678")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x993A6C", Offset = "0x993A6C")]
			private set
			{
			}
		}

		[Token(Token = "0x6002492")]
		[Address(RVA = "0xD79680", Offset = "0xD79680", VA = "0xD79680")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002493")]
		[Address(RVA = "0xD796C8", Offset = "0xD796C8", VA = "0xD796C8")]
		public FingerTipPokeToolView()
		{
		}
	}
	[Token(Token = "0x2000637")]
	[Flags]
	public enum InteractableToolTags
	{
		[Token(Token = "0x4002360")]
		None = 0,
		[Token(Token = "0x4002361")]
		Ray = 1,
		[Token(Token = "0x4002362")]
		Poke = 4,
		[Token(Token = "0x4002363")]
		All = -1
	}
	[Token(Token = "0x2000638")]
	public enum ToolInputState
	{
		[Token(Token = "0x4002365")]
		Inactive,
		[Token(Token = "0x4002366")]
		PrimaryInputDown,
		[Token(Token = "0x4002367")]
		PrimaryInputDownStay,
		[Token(Token = "0x4002368")]
		PrimaryInputUp
	}
	[Token(Token = "0x2000639")]
	public class InteractableCollisionInfo
	{
		[Token(Token = "0x4002369")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public ColliderZone InteractableCollider;

		[Token(Token = "0x400236A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public InteractableCollisionDepth CollisionDepth;

		[Token(Token = "0x400236B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public InteractableTool CollidingTool;

		[Token(Token = "0x6002494")]
		[Address(RVA = "0xD78DD0", Offset = "0xD78DD0", VA = "0xD78DD0")]
		public InteractableCollisionInfo(ColliderZone collider, InteractableCollisionDepth collisionDepth, InteractableTool collidingTool)
		{
		}
	}
	[Token(Token = "0x200063A")]
	public abstract class InteractableTool : MonoBehaviour
	{
		[Token(Token = "0x400236C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x98184C", Offset = "0x98184C")]
		private bool <IsRightHandedTool>k__BackingField;

		[Token(Token = "0x400236D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x98185C", Offset = "0x98185C")]
		private Vector3 <Velocity>k__BackingField;

		[Token(Token = "0x400236E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x98186C", Offset = "0x98186C")]
		private Vector3 <InteractionPosition>k__BackingField;

		[Token(Token = "0x400236F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		protected List<InteractableCollisionInfo> _currentIntersectingObjects;

		[Token(Token = "0x4002370")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private List<Interactable> _addedInteractables;

		[Token(Token = "0x4002371")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private List<Interactable> _removedInteractables;

		[Token(Token = "0x4002372")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private List<Interactable> _remainingInteractables;

		[Token(Token = "0x4002373")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Dictionary<Interactable, InteractableCollisionInfo> _currInteractableToCollisionInfos;

		[Token(Token = "0x4002374")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Dictionary<Interactable, InteractableCollisionInfo> _prevInteractableToCollisionInfos;

		[Token(Token = "0x170003F0")]
		public Transform ToolTransform
		{
			[Token(Token = "0x6002495")]
			[Address(RVA = "0xD75350", Offset = "0xD75350", VA = "0xD75350")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003F1")]
		public bool IsRightHandedTool
		{
			[Token(Token = "0x6002496")]
			[Address(RVA = "0xD7B1C0", Offset = "0xD7B1C0", VA = "0xD7B1C0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x993A7C", Offset = "0x993A7C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002497")]
			[Address(RVA = "0xD7B1C8", Offset = "0xD7B1C8", VA = "0xD7B1C8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x993A8C", Offset = "0x993A8C")]
			set
			{
			}
		}

		[Token(Token = "0x170003F2")]
		public abstract InteractableToolTags ToolTags
		{
			[Token(Token = "0x6002498")]
			get;
		}

		[Token(Token = "0x170003F3")]
		public abstract ToolInputState ToolInputState
		{
			[Token(Token = "0x6002499")]
			get;
		}

		[Token(Token = "0x170003F4")]
		public abstract bool IsFarFieldTool
		{
			[Token(Token = "0x600249A")]
			get;
		}

		[Token(Token = "0x170003F5")]
		public Vector3 Velocity
		{
			[Token(Token = "0x600249B")]
			[Address(RVA = "0xD7B1D4", Offset = "0xD7B1D4", VA = "0xD7B1D4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x993A9C", Offset = "0x993A9C")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x600249C")]
			[Address(RVA = "0xD7B1E0", Offset = "0xD7B1E0", VA = "0xD7B1E0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x993AAC", Offset = "0x993AAC")]
			protected set
			{
			}
		}

		[Token(Token = "0x170003F6")]
		public Vector3 InteractionPosition
		{
			[Token(Token = "0x600249D")]
			[Address(RVA = "0xD7B1EC", Offset = "0xD7B1EC", VA = "0xD7B1EC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x993ABC", Offset = "0x993ABC")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x600249E")]
			[Address(RVA = "0xD7B1F8", Offset = "0xD7B1F8", VA = "0xD7B1F8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x993ACC", Offset = "0x993ACC")]
			protected set
			{
			}
		}

		[Token(Token = "0x170003F7")]
		public abstract bool EnableState
		{
			[Token(Token = "0x60024A3")]
			get;
			[Token(Token = "0x60024A4")]
			set;
		}

		[Token(Token = "0x600249F")]
		[Address(RVA = "0xD7B204", Offset = "0xD7B204", VA = "0xD7B204")]
		public List<InteractableCollisionInfo> GetCurrentIntersectingObjects()
		{
			return null;
		}

		[Token(Token = "0x60024A0")]
		public abstract List<InteractableCollisionInfo> GetNextIntersectingObjects();

		[Token(Token = "0x60024A1")]
		public abstract void FocusOnInteractable(Interactable focusedInteractable, ColliderZone colliderZone);

		[Token(Token = "0x60024A2")]
		public abstract void DeFocus();

		[Token(Token = "0x60024A5")]
		public abstract void Initialize();

		[Token(Token = "0x60024A6")]
		[Address(RVA = "0xD7B20C", Offset = "0xD7B20C", VA = "0xD7B20C")]
		public KeyValuePair<Interactable, InteractableCollisionInfo> GetFirstCurrentCollisionInfo()
		{
			return default(KeyValuePair<Interactable, InteractableCollisionInfo>);
		}

		[Token(Token = "0x60024A7")]
		[Address(RVA = "0xD7B25C", Offset = "0xD7B25C", VA = "0xD7B25C")]
		public void ClearAllCurrentCollisionInfos()
		{
		}

		[Token(Token = "0x60024A8")]
		[Address(RVA = "0xD7B2B4", Offset = "0xD7B2B4", VA = "0xD7B2B4", Slot = "13")]
		public virtual void UpdateCurrentCollisionsBasedOnDepth()
		{
		}

		[Token(Token = "0x60024A9")]
		[Address(RVA = "0xD7B514", Offset = "0xD7B514", VA = "0xD7B514", Slot = "14")]
		public virtual void UpdateLatestCollisionData()
		{
		}

		[Token(Token = "0x60024AA")]
		[Address(RVA = "0xD78E44", Offset = "0xD78E44", VA = "0xD78E44")]
		protected InteractableTool()
		{
		}
	}
	[Token(Token = "0x200063B")]
	public class PinchStateModule
	{
		[Token(Token = "0x200063C")]
		private enum PinchState
		{
			[Token(Token = "0x4002379")]
			None,
			[Token(Token = "0x400237A")]
			PinchDown,
			[Token(Token = "0x400237B")]
			PinchStay,
			[Token(Token = "0x400237C")]
			PinchUp
		}

		[Token(Token = "0x4002375")]
		private const float PINCH_STRENGTH_THRESHOLD = 1f;

		[Token(Token = "0x4002376")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private PinchState _currPinchState;

		[Token(Token = "0x4002377")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Interactable _firstFocusedInteractable;

		[Token(Token = "0x170003F8")]
		public bool PinchUpAndDownOnFocusedObject
		{
			[Token(Token = "0x60024AB")]
			[Address(RVA = "0xBB0A50", Offset = "0xBB0A50", VA = "0xBB0A50")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170003F9")]
		public bool PinchSteadyOnFocusedObject
		{
			[Token(Token = "0x60024AC")]
			[Address(RVA = "0xBB0ADC", Offset = "0xBB0ADC", VA = "0xBB0ADC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170003FA")]
		public bool PinchDownOnFocusedObject
		{
			[Token(Token = "0x60024AD")]
			[Address(RVA = "0xBB0B68", Offset = "0xBB0B68", VA = "0xBB0B68")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60024AE")]
		[Address(RVA = "0xBB0BF4", Offset = "0xBB0BF4", VA = "0xBB0BF4")]
		public PinchStateModule()
		{
		}

		[Token(Token = "0x60024AF")]
		[Address(RVA = "0xBB0C28", Offset = "0xBB0C28", VA = "0xBB0C28")]
		public void UpdateState(OVRHand hand, Interactable currFocusedInteractable)
		{
		}
	}
	[Token(Token = "0x200063D")]
	public class RayTool : InteractableTool
	{
		[Token(Token = "0x400237D")]
		private const float MINIMUM_RAY_CAST_DISTANCE = 0.8f;

		[Token(Token = "0x400237E")]
		private const float COLLIDER_RADIUS = 0.01f;

		[Token(Token = "0x400237F")]
		private const int NUM_MAX_PRIMARY_HITS = 10;

		[Token(Token = "0x4002380")]
		private const int NUM_MAX_SECONDARY_HITS = 25;

		[Token(Token = "0x4002381")]
		private const int NUM_COLLIDERS_TO_TEST = 20;

		[Token(Token = "0x4002382")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private RayToolView _rayToolView;

		[Token(Token = "0x4002383")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x98188C", Offset = "0x98188C")]
		private float _coneAngleDegrees;

		[Token(Token = "0x4002384")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		[SerializeField]
		private float _farFieldMaxDistance;

		[Token(Token = "0x4002385")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private PinchStateModule _pinchStateModule;

		[Token(Token = "0x4002386")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Interactable _focusedInteractable;

		[Token(Token = "0x4002387")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Collider[] _collidersOverlapped;

		[Token(Token = "0x4002388")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Interactable _currInteractableCastedAgainst;

		[Token(Token = "0x4002389")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private float _coneAngleReleaseDegrees;

		[Token(Token = "0x400238A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private RaycastHit[] _primaryHits;

		[Token(Token = "0x400238B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private Collider[] _secondaryOverlapResults;

		[Token(Token = "0x400238C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private bool _initialized;

		[Token(Token = "0x170003FB")]
		public override InteractableToolTags ToolTags
		{
			[Token(Token = "0x60024B0")]
			[Address(RVA = "0xBB0E88", Offset = "0xBB0E88", VA = "0xBB0E88", Slot = "4")]
			get
			{
				return default(InteractableToolTags);
			}
		}

		[Token(Token = "0x170003FC")]
		public override ToolInputState ToolInputState
		{
			[Token(Token = "0x60024B1")]
			[Address(RVA = "0xBB0E90", Offset = "0xBB0E90", VA = "0xBB0E90", Slot = "5")]
			get
			{
				return default(ToolInputState);
			}
		}

		[Token(Token = "0x170003FD")]
		public override bool IsFarFieldTool
		{
			[Token(Token = "0x60024B2")]
			[Address(RVA = "0xBB0EF8", Offset = "0xBB0EF8", VA = "0xBB0EF8", Slot = "6")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170003FE")]
		public override bool EnableState
		{
			[Token(Token = "0x60024B3")]
			[Address(RVA = "0xBB0F00", Offset = "0xBB0F00", VA = "0xBB0F00", Slot = "10")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60024B4")]
			[Address(RVA = "0xBB0F44", Offset = "0xBB0F44", VA = "0xBB0F44", Slot = "11")]
			set
			{
			}
		}

		[Token(Token = "0x60024B5")]
		[Address(RVA = "0xBB0FB8", Offset = "0xBB0FB8", VA = "0xBB0FB8", Slot = "12")]
		public override void Initialize()
		{
		}

		[Token(Token = "0x60024B6")]
		[Address(RVA = "0xBB1018", Offset = "0xBB1018", VA = "0xBB1018")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60024B7")]
		[Address(RVA = "0xBB10B4", Offset = "0xBB10B4", VA = "0xBB10B4")]
		private void Update()
		{
		}

		[Token(Token = "0x60024B8")]
		[Address(RVA = "0xBB13BC", Offset = "0xBB13BC", VA = "0xBB13BC")]
		private Vector3 GetRayCastOrigin()
		{
			return default(Vector3);
		}

		[Token(Token = "0x60024B9")]
		[Address(RVA = "0xBB14B8", Offset = "0xBB14B8", VA = "0xBB14B8", Slot = "7")]
		public override List<InteractableCollisionInfo> GetNextIntersectingObjects()
		{
			return null;
		}

		[Token(Token = "0x60024BA")]
		[Address(RVA = "0xBB1844", Offset = "0xBB1844", VA = "0xBB1844")]
		private bool HasRayReleasedInteractable(Interactable focusedInteractable)
		{
			return default(bool);
		}

		[Token(Token = "0x60024BB")]
		[Address(RVA = "0xBB19E8", Offset = "0xBB19E8", VA = "0xBB19E8")]
		private Interactable FindTargetInteractable()
		{
			return null;
		}

		[Token(Token = "0x60024BC")]
		[Address(RVA = "0xBB1B10", Offset = "0xBB1B10", VA = "0xBB1B10")]
		private Interactable FindPrimaryRaycastHit(Vector3 rayOrigin, Vector3 rayDirection)
		{
			return null;
		}

		[Token(Token = "0x60024BD")]
		[Address(RVA = "0xBB1E48", Offset = "0xBB1E48", VA = "0xBB1E48")]
		private Interactable FindInteractableViaConeTest(Vector3 rayOrigin, Vector3 rayDirection)
		{
			return null;
		}

		[Token(Token = "0x60024BE")]
		[Address(RVA = "0xBB2258", Offset = "0xBB2258", VA = "0xBB2258", Slot = "8")]
		public override void FocusOnInteractable(Interactable focusedInteractable, ColliderZone colliderZone)
		{
		}

		[Token(Token = "0x60024BF")]
		[Address(RVA = "0xBB2344", Offset = "0xBB2344", VA = "0xBB2344", Slot = "9")]
		public override void DeFocus()
		{
		}

		[Token(Token = "0x60024C0")]
		[Address(RVA = "0xBB2380", Offset = "0xBB2380", VA = "0xBB2380")]
		public RayTool()
		{
		}
	}
	[Token(Token = "0x200063E")]
	public class RayToolView : MonoBehaviour
	{
		[Token(Token = "0x400238D")]
		private const int NUM_RAY_LINE_POSITIONS = 25;

		[Token(Token = "0x400238E")]
		private const float DEFAULT_RAY_CAST_DISTANCE = 3f;

		[Token(Token = "0x400238F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Transform _targetTransform;

		[Token(Token = "0x4002390")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private LineRenderer _lineRenderer;

		[Token(Token = "0x4002391")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool _toolActivateState;

		[Token(Token = "0x4002392")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Transform _focusedTransform;

		[Token(Token = "0x4002393")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Vector3[] linePositions;

		[Token(Token = "0x4002394")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Gradient _oldColorGradient;

		[Token(Token = "0x4002395")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Gradient _highLightColorGradient;

		[Token(Token = "0x4002396")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x981900", Offset = "0x981900")]
		private InteractableTool <InteractableTool>k__BackingField;

		[Token(Token = "0x170003FF")]
		public bool EnableState
		{
			[Token(Token = "0x60024C1")]
			[Address(RVA = "0xBB0F28", Offset = "0xBB0F28", VA = "0xBB0F28", Slot = "4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60024C2")]
			[Address(RVA = "0xBB0F60", Offset = "0xBB0F60", VA = "0xBB0F60", Slot = "5")]
			set
			{
			}
		}

		[Token(Token = "0x17000400")]
		public bool ToolActivateState
		{
			[Token(Token = "0x60024C3")]
			[Address(RVA = "0xBB2478", Offset = "0xBB2478", VA = "0xBB2478", Slot = "6")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60024C4")]
			[Address(RVA = "0xBB1380", Offset = "0xBB1380", VA = "0xBB1380", Slot = "7")]
			set
			{
			}
		}

		[Token(Token = "0x17000401")]
		public InteractableTool InteractableTool
		{
			[Token(Token = "0x60024C6")]
			[Address(RVA = "0xBB26C4", Offset = "0xBB26C4", VA = "0xBB26C4", Slot = "8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x993ADC", Offset = "0x993ADC")]
			get
			{
				return null;
			}
			[Token(Token = "0x60024C7")]
			[Address(RVA = "0xBB26CC", Offset = "0xBB26CC", VA = "0xBB26CC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x993AEC", Offset = "0x993AEC")]
			set
			{
			}
		}

		[Token(Token = "0x60024C5")]
		[Address(RVA = "0xBB2480", Offset = "0xBB2480", VA = "0xBB2480")]
		private void Awake()
		{
		}

		[Token(Token = "0x60024C8")]
		[Address(RVA = "0xBB2294", Offset = "0xBB2294", VA = "0xBB2294", Slot = "9")]
		public void SetFocusedInteractable(Interactable interactable)
		{
		}

		[Token(Token = "0x60024C9")]
		[Address(RVA = "0xBB26D4", Offset = "0xBB26D4", VA = "0xBB26D4")]
		private void Update()
		{
		}

		[Token(Token = "0x60024CA")]
		[Address(RVA = "0xBB2A00", Offset = "0xBB2A00", VA = "0xBB2A00")]
		public static Vector3 GetPointOnBezierCurve(Vector3 p0, Vector3 p1, Vector3 p2, Vector3 p3, float t)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60024CB")]
		[Address(RVA = "0xBB2BF0", Offset = "0xBB2BF0", VA = "0xBB2BF0")]
		public RayToolView()
		{
		}
	}
	[Token(Token = "0x200063F")]
	public class DistanceGrabberSample : MonoBehaviour
	{
		[Token(Token = "0x4002397")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool useSpherecast;

		[Token(Token = "0x4002398")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		private bool allowGrabThroughWalls;

		[Token(Token = "0x4002399")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private DistanceGrabber[] m_grabbers;

		[Token(Token = "0x17000402")]
		public bool UseSpherecast
		{
			[Token(Token = "0x60024CC")]
			[Address(RVA = "0xD77D14", Offset = "0xD77D14", VA = "0xD77D14")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60024CD")]
			[Address(RVA = "0xD77D1C", Offset = "0xD77D1C", VA = "0xD77D1C")]
			set
			{
			}
		}

		[Token(Token = "0x17000403")]
		public bool AllowGrabThroughWalls
		{
			[Token(Token = "0x60024CE")]
			[Address(RVA = "0xD77DA4", Offset = "0xD77DA4", VA = "0xD77DA4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60024CF")]
			[Address(RVA = "0xD77DAC", Offset = "0xD77DAC", VA = "0xD77DAC")]
			set
			{
			}
		}

		[Token(Token = "0x60024D0")]
		[Address(RVA = "0xD77E18", Offset = "0xD77E18", VA = "0xD77E18")]
		private void Start()
		{
		}

		[Token(Token = "0x60024D1")]
		[Address(RVA = "0xD7807C", Offset = "0xD7807C", VA = "0xD7807C")]
		public void ToggleSphereCasting(Toggle t)
		{
		}

		[Token(Token = "0x60024D2")]
		[Address(RVA = "0xD7808C", Offset = "0xD7808C", VA = "0xD7808C")]
		public void ToggleGrabThroughWalls(Toggle t)
		{
		}

		[Token(Token = "0x60024D3")]
		[Address(RVA = "0xD7809C", Offset = "0xD7809C", VA = "0xD7809C")]
		public DistanceGrabberSample()
		{
		}
	}
	[Token(Token = "0x2000640")]
	public class ControllerBoxController : MonoBehaviour
	{
		[Token(Token = "0x400239A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private TrainLocomotive _locomotive;

		[Token(Token = "0x400239B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private CowController _cowController;

		[Token(Token = "0x60024D4")]
		[Address(RVA = "0xD75B0C", Offset = "0xD75B0C", VA = "0xD75B0C")]
		public void StartStopStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x60024D5")]
		[Address(RVA = "0xD75B44", Offset = "0xD75B44", VA = "0xD75B44")]
		public void DecreaseSpeedStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x60024D6")]
		[Address(RVA = "0xD75B7C", Offset = "0xD75B7C", VA = "0xD75B7C")]
		public void IncreaseSpeedStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x60024D7")]
		[Address(RVA = "0xD75BB4", Offset = "0xD75BB4", VA = "0xD75BB4")]
		public void SmokeButtonStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x60024D8")]
		[Address(RVA = "0xD75BEC", Offset = "0xD75BEC", VA = "0xD75BEC")]
		public void WhistleButtonStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x60024D9")]
		[Address(RVA = "0xD75C24", Offset = "0xD75C24", VA = "0xD75C24")]
		public void ReverseButtonStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x60024DA")]
		[Address(RVA = "0xD75C5C", Offset = "0xD75C5C", VA = "0xD75C5C")]
		public void SwitchVisualization(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x60024DB")]
		[Address(RVA = "0xD75DB8", Offset = "0xD75DB8", VA = "0xD75DB8")]
		public void GoMoo(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x60024DC")]
		[Address(RVA = "0xD75E28", Offset = "0xD75E28", VA = "0xD75E28")]
		public ControllerBoxController()
		{
		}
	}
	[Token(Token = "0x2000641")]
	public class CowController : MonoBehaviour
	{
		[Token(Token = "0x400239C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Animation _cowAnimation;

		[Token(Token = "0x400239D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private AudioSource _mooCowAudioSource;

		[Token(Token = "0x60024DD")]
		[Address(RVA = "0xD75E30", Offset = "0xD75E30", VA = "0xD75E30")]
		public void PlayMooSound()
		{
		}

		[Token(Token = "0x60024DE")]
		[Address(RVA = "0xD75DEC", Offset = "0xD75DEC", VA = "0xD75DEC")]
		public void GoMooCowGo()
		{
		}

		[Token(Token = "0x60024DF")]
		[Address(RVA = "0xD75E70", Offset = "0xD75E70", VA = "0xD75E70")]
		public CowController()
		{
		}
	}
	[Token(Token = "0x2000642")]
	public class PanelHMDFollower : MonoBehaviour
	{
		[Token(Token = "0x2000643")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x97498C", Offset = "0x97498C")]
		private sealed class <LerpToHMD>d__13 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40023A8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40023A9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40023AA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public PanelHMDFollower <>4__this;

			[Token(Token = "0x40023AB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private Vector3 <newPanelPosition>5__2;

			[Token(Token = "0x40023AC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private float <startTime>5__3;

			[Token(Token = "0x40023AD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private float <endTime>5__4;

			[Token(Token = "0x17000404")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60024E8")]
				[Address(RVA = "0xBB08F4", Offset = "0xBB08F4", VA = "0xBB08F4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000405")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60024EA")]
				[Address(RVA = "0xBB095C", Offset = "0xBB095C", VA = "0xBB095C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60024E5")]
			[Address(RVA = "0xBB0618", Offset = "0xBB0618", VA = "0xBB0618")]
			[DebuggerHidden]
			public <LerpToHMD>d__13(int <>1__state)
			{
			}

			[Token(Token = "0x60024E6")]
			[Address(RVA = "0xBB06F4", Offset = "0xBB06F4", VA = "0xBB06F4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60024E7")]
			[Address(RVA = "0xBB06F8", Offset = "0xBB06F8", VA = "0xBB06F8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60024E9")]
			[Address(RVA = "0xBB08FC", Offset = "0xBB08FC", VA = "0xBB08FC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400239E")]
		private const float TOTAL_DURATION = 3f;

		[Token(Token = "0x400239F")]
		private const float HMD_MOVEMENT_THRESHOLD = 0.3f;

		[Token(Token = "0x40023A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private float _maxDistance;

		[Token(Token = "0x40023A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private float _minDistance;

		[Token(Token = "0x40023A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float _minZDistance;

		[Token(Token = "0x40023A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private OVRCameraRig _cameraRig;

		[Token(Token = "0x40023A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Vector3 _panelInitialPosition;

		[Token(Token = "0x40023A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Coroutine _coroutine;

		[Token(Token = "0x40023A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Vector3 _prevPos;

		[Token(Token = "0x40023A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private Vector3 _lastMovedToPos;

		[Token(Token = "0x60024E0")]
		[Address(RVA = "0xBB0208", Offset = "0xBB0208", VA = "0xBB0208")]
		private void Awake()
		{
		}

		[Token(Token = "0x60024E1")]
		[Address(RVA = "0xBB02AC", Offset = "0xBB02AC", VA = "0xBB02AC")]
		private void Update()
		{
		}

		[Token(Token = "0x60024E2")]
		[Address(RVA = "0xBB0554", Offset = "0xBB0554", VA = "0xBB0554")]
		private Vector3 CalculateIdealAnchorPosition()
		{
			return default(Vector3);
		}

		[Token(Token = "0x60024E3")]
		[Address(RVA = "0xBB04D8", Offset = "0xBB04D8", VA = "0xBB04D8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x993AFC", Offset = "0x993AFC")]
		private IEnumerator LerpToHMD()
		{
			return null;
		}

		[Token(Token = "0x60024E4")]
		[Address(RVA = "0xBB0644", Offset = "0xBB0644", VA = "0xBB0644")]
		public PanelHMDFollower()
		{
		}
	}
	[Token(Token = "0x2000644")]
	public class SelectionCylinder : MonoBehaviour
	{
		[Token(Token = "0x2000645")]
		public enum SelectionState
		{
			[Token(Token = "0x40023B5")]
			Off,
			[Token(Token = "0x40023B6")]
			Selected,
			[Token(Token = "0x40023B7")]
			Highlighted
		}

		[Token(Token = "0x40023AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private MeshRenderer _selectionMeshRenderer;

		[Token(Token = "0x40023AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static int _colorId;

		[Token(Token = "0x40023B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Material[] _selectionMaterials;

		[Token(Token = "0x40023B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Color[] _defaultSelectionColors;

		[Token(Token = "0x40023B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Color[] _highlightColors;

		[Token(Token = "0x40023B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private SelectionState _currSelectionState;

		[Token(Token = "0x17000406")]
		public SelectionState CurrSelectionState
		{
			[Token(Token = "0x60024EB")]
			[Address(RVA = "0xBB2C5C", Offset = "0xBB2C5C", VA = "0xBB2C5C")]
			get
			{
				return default(SelectionState);
			}
			[Token(Token = "0x60024EC")]
			[Address(RVA = "0xBB2C64", Offset = "0xBB2C64", VA = "0xBB2C64")]
			set
			{
			}
		}

		[Token(Token = "0x60024ED")]
		[Address(RVA = "0xBB2DEC", Offset = "0xBB2DEC", VA = "0xBB2DEC")]
		private void Awake()
		{
		}

		[Token(Token = "0x60024EE")]
		[Address(RVA = "0xBB2FE8", Offset = "0xBB2FE8", VA = "0xBB2FE8")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60024EF")]
		[Address(RVA = "0xBB2CEC", Offset = "0xBB2CEC", VA = "0xBB2CEC")]
		private void AffectSelectionColor(Color[] newColors)
		{
		}

		[Token(Token = "0x60024F0")]
		[Address(RVA = "0xBB30D8", Offset = "0xBB30D8", VA = "0xBB30D8")]
		public SelectionCylinder()
		{
		}
	}
	[Token(Token = "0x2000646")]
	public class TrackSegment : MonoBehaviour
	{
		[Token(Token = "0x2000647")]
		public enum SegmentType
		{
			[Token(Token = "0x40023C6")]
			Straight,
			[Token(Token = "0x40023C7")]
			LeftTurn,
			[Token(Token = "0x40023C8")]
			RightTurn,
			[Token(Token = "0x40023C9")]
			Switch
		}

		[Token(Token = "0x40023B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private SegmentType _segmentType;

		[Token(Token = "0x40023B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private MeshFilter _straight;

		[Token(Token = "0x40023BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private MeshFilter _leftTurn;

		[Token(Token = "0x40023BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private MeshFilter _rightTurn;

		[Token(Token = "0x40023BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float _gridSize;

		[Token(Token = "0x40023BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private int _subDivCount;

		[Token(Token = "0x40023BE")]
		private const float _originalGridSize = 0.8f;

		[Token(Token = "0x40023BF")]
		private const float _trackWidth = 0.15f;

		[Token(Token = "0x40023C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private GameObject _mesh;

		[Token(Token = "0x40023C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9819E0", Offset = "0x9819E0")]
		private float <StartDistance>k__BackingField;

		[Token(Token = "0x40023C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Pose _p1;

		[Token(Token = "0x40023C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Pose _p2;

		[Token(Token = "0x40023C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Pose _endPose;

		[Token(Token = "0x17000407")]
		public float StartDistance
		{
			[Token(Token = "0x60024F2")]
			[Address(RVA = "0xBB3144", Offset = "0xBB3144", VA = "0xBB3144")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x993BB0", Offset = "0x993BB0")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60024F3")]
			[Address(RVA = "0xBB314C", Offset = "0xBB314C", VA = "0xBB314C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x993BC0", Offset = "0x993BC0")]
			set
			{
			}
		}

		[Token(Token = "0x17000408")]
		public float GridSize
		{
			[Token(Token = "0x60024F4")]
			[Address(RVA = "0xBB3154", Offset = "0xBB3154", VA = "0xBB3154")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60024F5")]
			[Address(RVA = "0xBB315C", Offset = "0xBB315C", VA = "0xBB315C")]
			private set
			{
			}
		}

		[Token(Token = "0x17000409")]
		public int SubDivCount
		{
			[Token(Token = "0x60024F6")]
			[Address(RVA = "0xBB3164", Offset = "0xBB3164", VA = "0xBB3164")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60024F7")]
			[Address(RVA = "0xBB316C", Offset = "0xBB316C", VA = "0xBB316C")]
			set
			{
			}
		}

		[Token(Token = "0x1700040A")]
		public SegmentType Type
		{
			[Token(Token = "0x60024F8")]
			[Address(RVA = "0xBB3174", Offset = "0xBB3174", VA = "0xBB3174")]
			get
			{
				return default(SegmentType);
			}
		}

		[Token(Token = "0x1700040B")]
		public Pose EndPose
		{
			[Token(Token = "0x60024F9")]
			[Address(RVA = "0xBB317C", Offset = "0xBB317C", VA = "0xBB317C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700040C")]
		public float Radius
		{
			[Token(Token = "0x60024FA")]
			[Address(RVA = "0xBB3610", Offset = "0xBB3610", VA = "0xBB3610")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700040D")]
		public float SegmentLength
		{
			[Token(Token = "0x60024FC")]
			[Address(RVA = "0xBB31E4", Offset = "0xBB31E4", VA = "0xBB31E4")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x60024FB")]
		[Address(RVA = "0xBB3620", Offset = "0xBB3620", VA = "0xBB3620")]
		public float setGridSize(float size)
		{
			return default(float);
		}

		[Token(Token = "0x60024FD")]
		[Address(RVA = "0xBB3224", Offset = "0xBB3224", VA = "0xBB3224")]
		public void UpdatePose(float distanceIntoSegment, Pose pose)
		{
		}

		[Token(Token = "0x60024FE")]
		[Address(RVA = "0xBB3638", Offset = "0xBB3638", VA = "0xBB3638")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60024FF")]
		[Address(RVA = "0xBB36A4", Offset = "0xBB36A4", VA = "0xBB36A4")]
		private void DrawDebugLines()
		{
		}

		[Token(Token = "0x6002500")]
		[Address(RVA = "0xBB422C", Offset = "0xBB422C", VA = "0xBB422C")]
		public void RegenerateTrackAndMesh()
		{
		}

		[Token(Token = "0x6002501")]
		[Address(RVA = "0xBB4558", Offset = "0xBB4558", VA = "0xBB4558")]
		public TrackSegment()
		{
		}
	}
	[Token(Token = "0x2000648")]
	public class TrainButtonVisualController : MonoBehaviour
	{
		[Token(Token = "0x2000649")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x97499C", Offset = "0x97499C")]
		private sealed class <ResetPosition>d__26 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40023DB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40023DC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40023DD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public TrainButtonVisualController <>4__this;

			[Token(Token = "0x40023DE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <startTime>5__2;

			[Token(Token = "0x40023DF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float <endTime>5__3;

			[Token(Token = "0x1700040E")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002510")]
				[Address(RVA = "0xBB51D4", Offset = "0xBB51D4", VA = "0xBB51D4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700040F")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002512")]
				[Address(RVA = "0xBB523C", Offset = "0xBB523C", VA = "0xBB523C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600250D")]
			[Address(RVA = "0xBB4F3C", Offset = "0xBB4F3C", VA = "0xBB4F3C")]
			[DebuggerHidden]
			public <ResetPosition>d__26(int <>1__state)
			{
			}

			[Token(Token = "0x600250E")]
			[Address(RVA = "0xBB5018", Offset = "0xBB5018", VA = "0xBB5018", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600250F")]
			[Address(RVA = "0xBB501C", Offset = "0xBB501C", VA = "0xBB501C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002511")]
			[Address(RVA = "0xBB51DC", Offset = "0xBB51DC", VA = "0xBB51DC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40023CA")]
		private const float LERP_TO_OLD_POS_DURATION = 1f;

		[Token(Token = "0x40023CB")]
		private const float LOCAL_SIZE_HALVED = 0.5f;

		[Token(Token = "0x40023CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private MeshRenderer _meshRenderer;

		[Token(Token = "0x40023CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private MeshRenderer _glowRenderer;

		[Token(Token = "0x40023CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private ButtonController _buttonController;

		[Token(Token = "0x40023CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Color _buttonContactColor;

		[Token(Token = "0x40023D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Color _buttonActionColor;

		[Token(Token = "0x40023D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private AudioSource _audioSource;

		[Token(Token = "0x40023D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private AudioClip _actionSoundEffect;

		[Token(Token = "0x40023D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private Transform _buttonContactTransform;

		[Token(Token = "0x40023D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private float _contactMaxDisplacementDistance;

		[Token(Token = "0x40023D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Material _buttonMaterial;

		[Token(Token = "0x40023D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Color _buttonDefaultColor;

		[Token(Token = "0x40023D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private int _materialColorId;

		[Token(Token = "0x40023D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private bool _buttonInContactOrActionStates;

		[Token(Token = "0x40023D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Coroutine _lerpToOldPositionCr;

		[Token(Token = "0x40023DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Vector3 _oldPosition;

		[Token(Token = "0x6002502")]
		[Address(RVA = "0xBB4620", Offset = "0xBB4620", VA = "0xBB4620")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002503")]
		[Address(RVA = "0xBB46E0", Offset = "0xBB46E0", VA = "0xBB46E0")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6002504")]
		[Address(RVA = "0xBB4794", Offset = "0xBB4794", VA = "0xBB4794")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6002505")]
		[Address(RVA = "0xBB48C8", Offset = "0xBB48C8", VA = "0xBB48C8")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6002506")]
		[Address(RVA = "0xBB4A40", Offset = "0xBB4A40", VA = "0xBB4A40")]
		private void ActionOrInContactZoneStayEvent(ColliderZoneArgs collisionArgs)
		{
		}

		[Token(Token = "0x6002507")]
		[Address(RVA = "0xBB4BDC", Offset = "0xBB4BDC", VA = "0xBB4BDC")]
		private void InteractableStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x6002508")]
		[Address(RVA = "0xBB4E68", Offset = "0xBB4E68", VA = "0xBB4E68")]
		private void PlaySound(AudioClip clip)
		{
		}

		[Token(Token = "0x6002509")]
		[Address(RVA = "0xBB4CF0", Offset = "0xBB4CF0", VA = "0xBB4CF0")]
		private void StopResetLerping()
		{
		}

		[Token(Token = "0x600250A")]
		[Address(RVA = "0xBB4D04", Offset = "0xBB4D04", VA = "0xBB4D04")]
		private void LerpToOldPosition()
		{
		}

		[Token(Token = "0x600250B")]
		[Address(RVA = "0xBB4EC0", Offset = "0xBB4EC0", VA = "0xBB4EC0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x993BD0", Offset = "0x993BD0")]
		private IEnumerator ResetPosition()
		{
			return null;
		}

		[Token(Token = "0x600250C")]
		[Address(RVA = "0xBB4F68", Offset = "0xBB4F68", VA = "0xBB4F68")]
		public TrainButtonVisualController()
		{
		}
	}
	[Token(Token = "0x200064A")]
	public class TrainCar : TrainCarBase
	{
		[Token(Token = "0x40023E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private TrainCarBase _parentLocomotive;

		[Token(Token = "0x40023E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		protected float _distanceBehindParent;

		[Token(Token = "0x17000410")]
		public float DistanceBehindParentScaled
		{
			[Token(Token = "0x6002513")]
			[Address(RVA = "0xBB5244", Offset = "0xBB5244", VA = "0xBB5244")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6002514")]
		[Address(RVA = "0xBB5254", Offset = "0xBB5254", VA = "0xBB5254", Slot = "4")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6002515")]
		[Address(RVA = "0xBB525C", Offset = "0xBB525C", VA = "0xBB525C", Slot = "5")]
		public override void UpdatePosition()
		{
		}

		[Token(Token = "0x6002516")]
		[Address(RVA = "0xBB56C8", Offset = "0xBB56C8", VA = "0xBB56C8")]
		public TrainCar()
		{
		}
	}
	[Token(Token = "0x200064B")]
	public abstract class TrainCarBase : MonoBehaviour
	{
		[Token(Token = "0x40023E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Vector3 OFFSET;

		[Token(Token = "0x40023E3")]
		private const float WHEEL_RADIUS = 0.027f;

		[Token(Token = "0x40023E4")]
		private const float TWO_PI = (float)Math.PI * 2f;

		[Token(Token = "0x40023E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		protected Transform _frontWheels;

		[Token(Token = "0x40023E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		protected Transform _rearWheels;

		[Token(Token = "0x40023E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		protected TrainTrack _trainTrack;

		[Token(Token = "0x40023E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		protected Transform[] _individualWheels;

		[Token(Token = "0x40023E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x981AE0", Offset = "0x981AE0")]
		private float <Distance>k__BackingField;

		[Token(Token = "0x40023EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		protected float scale;

		[Token(Token = "0x40023EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Pose _frontPose;

		[Token(Token = "0x40023EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Pose _rearPose;

		[Token(Token = "0x17000411")]
		public float Distance
		{
			[Token(Token = "0x6002517")]
			[Address(RVA = "0xBB57D8", Offset = "0xBB57D8", VA = "0xBB57D8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x993C84", Offset = "0x993C84")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6002518")]
			[Address(RVA = "0xBB57E0", Offset = "0xBB57E0", VA = "0xBB57E0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x993C94", Offset = "0x993C94")]
			protected set
			{
			}
		}

		[Token(Token = "0x17000412")]
		public float Scale
		{
			[Token(Token = "0x6002519")]
			[Address(RVA = "0xBB57E8", Offset = "0xBB57E8", VA = "0xBB57E8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600251A")]
			[Address(RVA = "0xBB57F0", Offset = "0xBB57F0", VA = "0xBB57F0")]
			set
			{
			}
		}

		[Token(Token = "0x600251B")]
		[Address(RVA = "0xBB5258", Offset = "0xBB5258", VA = "0xBB5258", Slot = "4")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x600251C")]
		[Address(RVA = "0xBB57F8", Offset = "0xBB57F8", VA = "0xBB57F8")]
		public void UpdatePose(float distance, TrainCarBase train, Pose pose)
		{
		}

		[Token(Token = "0x600251D")]
		[Address(RVA = "0xBB52A4", Offset = "0xBB52A4", VA = "0xBB52A4")]
		protected void UpdateCarPosition()
		{
		}

		[Token(Token = "0x600251E")]
		[Address(RVA = "0xBB557C", Offset = "0xBB557C", VA = "0xBB557C")]
		protected void RotateCarWheels()
		{
		}

		[Token(Token = "0x600251F")]
		public abstract void UpdatePosition();

		[Token(Token = "0x6002520")]
		[Address(RVA = "0xBB5738", Offset = "0xBB5738", VA = "0xBB5738")]
		protected TrainCarBase()
		{
		}
	}
	[Token(Token = "0x200064C")]
	public class TrainCrossingController : MonoBehaviour
	{
		[Token(Token = "0x200064D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9749AC", Offset = "0x9749AC")]
		private sealed class <AnimateCrossing>d__15 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40023F7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40023F8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40023F9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public TrainCrossingController <>4__this;

			[Token(Token = "0x40023FA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float animationLength;

			[Token(Token = "0x40023FB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float <animationEndTime>5__2;

			[Token(Token = "0x40023FC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <lightBlinkDuration>5__3;

			[Token(Token = "0x40023FD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private float <lightBlinkStartTime>5__4;

			[Token(Token = "0x40023FE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private float <lightBlinkEndTime>5__5;

			[Token(Token = "0x40023FF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private Material <lightToBlinkOn>5__6;

			[Token(Token = "0x4002400")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private Material <lightToBlinkOff>5__7;

			[Token(Token = "0x4002401")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private Color <onColor>5__8;

			[Token(Token = "0x4002402")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			private Color <offColor>5__9;

			[Token(Token = "0x17000413")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600252E")]
				[Address(RVA = "0xBB61F0", Offset = "0xBB61F0", VA = "0xBB61F0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000414")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002530")]
				[Address(RVA = "0xBB6258", Offset = "0xBB6258", VA = "0xBB6258", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600252B")]
			[Address(RVA = "0xBB5DF4", Offset = "0xBB5DF4", VA = "0xBB5DF4")]
			[DebuggerHidden]
			public <AnimateCrossing>d__15(int <>1__state)
			{
			}

			[Token(Token = "0x600252C")]
			[Address(RVA = "0xBB5F8C", Offset = "0xBB5F8C", VA = "0xBB5F8C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600252D")]
			[Address(RVA = "0xBB5F90", Offset = "0xBB5F90", VA = "0xBB5F90", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600252F")]
			[Address(RVA = "0xBB61F8", Offset = "0xBB61F8", VA = "0xBB61F8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40023ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private AudioSource _audioSource;

		[Token(Token = "0x40023EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private AudioClip[] _crossingSounds;

		[Token(Token = "0x40023EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private MeshRenderer _lightSide1Renderer;

		[Token(Token = "0x40023F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private MeshRenderer _lightSide2Renderer;

		[Token(Token = "0x40023F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private SelectionCylinder _selectionCylinder;

		[Token(Token = "0x40023F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Material _lightsSide1Mat;

		[Token(Token = "0x40023F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Material _lightsSide2Mat;

		[Token(Token = "0x40023F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private int _colorId;

		[Token(Token = "0x40023F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Coroutine _xingAnimationCr;

		[Token(Token = "0x40023F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private InteractableTool _toolInteractingWithMe;

		[Token(Token = "0x6002522")]
		[Address(RVA = "0xBB59C8", Offset = "0xBB59C8", VA = "0xBB59C8")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002523")]
		[Address(RVA = "0xBB5A28", Offset = "0xBB5A28", VA = "0xBB5A28")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6002524")]
		[Address(RVA = "0xBB5B34", Offset = "0xBB5B34", VA = "0xBB5B34")]
		public void CrossingButtonStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x6002525")]
		[Address(RVA = "0xBB5C8C", Offset = "0xBB5C8C", VA = "0xBB5C8C")]
		private void Update()
		{
		}

		[Token(Token = "0x6002526")]
		[Address(RVA = "0xBB5B94", Offset = "0xBB5B94", VA = "0xBB5B94")]
		private void ActivateTrainCrossing()
		{
		}

		[Token(Token = "0x6002527")]
		[Address(RVA = "0xBB5D68", Offset = "0xBB5D68", VA = "0xBB5D68")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x993CA4", Offset = "0x993CA4")]
		private IEnumerator AnimateCrossing(float animationLength)
		{
			return null;
		}

		[Token(Token = "0x6002528")]
		[Address(RVA = "0xBB5E20", Offset = "0xBB5E20", VA = "0xBB5E20")]
		private void AffectMaterials(Material[] materials, Color newColor)
		{
		}

		[Token(Token = "0x6002529")]
		[Address(RVA = "0xBB5ECC", Offset = "0xBB5ECC", VA = "0xBB5ECC")]
		private void ToggleLightObjects(bool enableState)
		{
		}

		[Token(Token = "0x600252A")]
		[Address(RVA = "0xBB5F2C", Offset = "0xBB5F2C", VA = "0xBB5F2C")]
		public TrainCrossingController()
		{
		}
	}
	[Token(Token = "0x200064E")]
	public class TrainLocomotive : TrainCarBase
	{
		[Token(Token = "0x200064F")]
		private enum EngineSoundState
		{
			[Token(Token = "0x4002421")]
			Start,
			[Token(Token = "0x4002422")]
			AccelerateOrSetProperSpeed,
			[Token(Token = "0x4002423")]
			Stop
		}

		[Token(Token = "0x2000650")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9749BC", Offset = "0x9749BC")]
		private sealed class <StartStopTrain>d__34 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002424")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002425")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002426")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public bool startTrain;

			[Token(Token = "0x4002427")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public TrainLocomotive <>4__this;

			[Token(Token = "0x4002428")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <endSpeed>5__2;

			[Token(Token = "0x4002429")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private float <timePeriodForSpeedChange>5__3;

			[Token(Token = "0x400242A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private float <startTime>5__4;

			[Token(Token = "0x400242B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private float <endTime>5__5;

			[Token(Token = "0x400242C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private float <startSpeed>5__6;

			[Token(Token = "0x17000415")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002543")]
				[Address(RVA = "0xBB6EE0", Offset = "0xBB6EE0", VA = "0xBB6EE0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000416")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002545")]
				[Address(RVA = "0xBB6F48", Offset = "0xBB6F48", VA = "0xBB6F48", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002540")]
			[Address(RVA = "0xBB6590", Offset = "0xBB6590", VA = "0xBB6590")]
			[DebuggerHidden]
			public <StartStopTrain>d__34(int <>1__state)
			{
			}

			[Token(Token = "0x6002541")]
			[Address(RVA = "0xBB6CA4", Offset = "0xBB6CA4", VA = "0xBB6CA4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002542")]
			[Address(RVA = "0xBB6CA8", Offset = "0xBB6CA8", VA = "0xBB6CA8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002544")]
			[Address(RVA = "0xBB6EE8", Offset = "0xBB6EE8", VA = "0xBB6EE8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4002403")]
		private const float MIN_SPEED = 0.2f;

		[Token(Token = "0x4002404")]
		private const float MAX_SPEED = 2.7f;

		[Token(Token = "0x4002405")]
		private const float SMOKE_SPEED_MULTIPLIER = 8f;

		[Token(Token = "0x4002406")]
		private const int MAX_PARTICLES_MULTIPLIER = 3;

		[Token(Token = "0x4002407")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x981B40", Offset = "0x981B40")]
		protected float _initialSpeed;

		[Token(Token = "0x4002408")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private GameObject _startStopButton;

		[Token(Token = "0x4002409")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private GameObject _decreaseSpeedButton;

		[Token(Token = "0x400240A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private GameObject _increaseSpeedButton;

		[Token(Token = "0x400240B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private GameObject _smokeButton;

		[Token(Token = "0x400240C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private GameObject _whistleButton;

		[Token(Token = "0x400240D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private GameObject _reverseButton;

		[Token(Token = "0x400240E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private AudioSource _whistleAudioSource;

		[Token(Token = "0x400240F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private AudioClip _whistleSound;

		[Token(Token = "0x4002410")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		private AudioSource _engineAudioSource;

		[Token(Token = "0x4002411")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		private AudioClip[] _accelerationSounds;

		[Token(Token = "0x4002412")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[SerializeField]
		private AudioClip[] _decelerationSounds;

		[Token(Token = "0x4002413")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[SerializeField]
		private AudioClip _startUpSound;

		[Token(Token = "0x4002414")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[SerializeField]
		private AudioSource _smokeStackAudioSource;

		[Token(Token = "0x4002415")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[SerializeField]
		private AudioClip _smokeSound;

		[Token(Token = "0x4002416")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[SerializeField]
		private ParticleSystem _smoke1;

		[Token(Token = "0x4002417")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[SerializeField]
		private ParticleSystem _smoke2;

		[Token(Token = "0x4002418")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[SerializeField]
		private TrainCarBase[] _childCars;

		[Token(Token = "0x4002419")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private bool _isMoving;

		[Token(Token = "0x400241A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE1")]
		private bool _reverse;

		[Token(Token = "0x400241B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		private float _currentSpeed;

		[Token(Token = "0x400241C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private float _speedDiv;

		[Token(Token = "0x400241D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		private float _standardRateOverTimeMultiplier;

		[Token(Token = "0x400241E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private int _standardMaxParticles;

		[Token(Token = "0x400241F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private Coroutine _startStopTrainCr;

		[Token(Token = "0x6002531")]
		[Address(RVA = "0xBB6260", Offset = "0xBB6260", VA = "0xBB6260")]
		private void Start()
		{
		}

		[Token(Token = "0x6002532")]
		[Address(RVA = "0xBB63D0", Offset = "0xBB63D0", VA = "0xBB63D0")]
		private void Update()
		{
		}

		[Token(Token = "0x6002533")]
		[Address(RVA = "0xBB63DC", Offset = "0xBB63DC", VA = "0xBB63DC", Slot = "5")]
		public override void UpdatePosition()
		{
		}

		[Token(Token = "0x6002534")]
		[Address(RVA = "0xBB6530", Offset = "0xBB6530", VA = "0xBB6530")]
		public void StartStopStateChanged()
		{
		}

		[Token(Token = "0x6002535")]
		[Address(RVA = "0xBB6340", Offset = "0xBB6340", VA = "0xBB6340")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x993D58", Offset = "0x993D58")]
		private IEnumerator StartStopTrain(bool startTrain)
		{
			return null;
		}

		[Token(Token = "0x6002536")]
		[Address(RVA = "0xBB65BC", Offset = "0xBB65BC", VA = "0xBB65BC")]
		private float PlayEngineSound(EngineSoundState engineSoundState)
		{
			return default(float);
		}

		[Token(Token = "0x6002537")]
		[Address(RVA = "0xBB64CC", Offset = "0xBB64CC", VA = "0xBB64CC")]
		private void UpdateDistance()
		{
		}

		[Token(Token = "0x6002538")]
		[Address(RVA = "0xBB67F0", Offset = "0xBB67F0", VA = "0xBB67F0")]
		public void DecreaseSpeedStateChanged()
		{
		}

		[Token(Token = "0x6002539")]
		[Address(RVA = "0xBB699C", Offset = "0xBB699C", VA = "0xBB699C")]
		public void IncreaseSpeedStateChanged()
		{
		}

		[Token(Token = "0x600253A")]
		[Address(RVA = "0xBB68AC", Offset = "0xBB68AC", VA = "0xBB68AC")]
		private void UpdateSmokeEmissionBasedOnSpeed()
		{
		}

		[Token(Token = "0x600253B")]
		[Address(RVA = "0xBB6A58", Offset = "0xBB6A58", VA = "0xBB6A58")]
		private float GetCurrentSmokeEmission()
		{
			return default(float);
		}

		[Token(Token = "0x600253C")]
		[Address(RVA = "0xBB6AE0", Offset = "0xBB6AE0", VA = "0xBB6AE0")]
		public void SmokeButtonStateChanged()
		{
		}

		[Token(Token = "0x600253D")]
		[Address(RVA = "0xBB6B6C", Offset = "0xBB6B6C", VA = "0xBB6B6C")]
		public void WhistleButtonStateChanged()
		{
		}

		[Token(Token = "0x600253E")]
		[Address(RVA = "0xBB6C28", Offset = "0xBB6C28", VA = "0xBB6C28")]
		public void ReverseButtonStateChanged()
		{
		}

		[Token(Token = "0x600253F")]
		[Address(RVA = "0xBB6C38", Offset = "0xBB6C38", VA = "0xBB6C38")]
		public TrainLocomotive()
		{
		}
	}
	[Token(Token = "0x2000651")]
	public class TrainTrack : MonoBehaviour
	{
		[Token(Token = "0x400242D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private float _gridSize;

		[Token(Token = "0x400242E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private int _subDivCount;

		[Token(Token = "0x400242F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Transform _segmentParent;

		[Token(Token = "0x4002430")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Transform _trainParent;

		[Token(Token = "0x4002431")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private bool _regnerateTrackMeshOnAwake;

		[Token(Token = "0x4002432")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float _trainLength;

		[Token(Token = "0x4002433")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private TrackSegment[] _trackSegments;

		[Token(Token = "0x17000417")]
		public float TrackLength
		{
			[Token(Token = "0x6002546")]
			[Address(RVA = "0xBB6F50", Offset = "0xBB6F50", VA = "0xBB6F50")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6002547")]
			[Address(RVA = "0xBB6F58", Offset = "0xBB6F58", VA = "0xBB6F58")]
			private set
			{
			}
		}

		[Token(Token = "0x6002548")]
		[Address(RVA = "0xBB6F60", Offset = "0xBB6F60", VA = "0xBB6F60")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002549")]
		[Address(RVA = "0xBB5878", Offset = "0xBB5878", VA = "0xBB5878")]
		public TrackSegment GetSegment(float distance)
		{
			return null;
		}

		[Token(Token = "0x600254A")]
		[Address(RVA = "0xBB6F64", Offset = "0xBB6F64", VA = "0xBB6F64")]
		public void Regenerate()
		{
		}

		[Token(Token = "0x600254B")]
		[Address(RVA = "0xBB7170", Offset = "0xBB7170", VA = "0xBB7170")]
		private void SetScale(float ratio)
		{
		}

		[Token(Token = "0x600254C")]
		[Address(RVA = "0xBB728C", Offset = "0xBB728C", VA = "0xBB728C")]
		public TrainTrack()
		{
		}
	}
	[Token(Token = "0x2000652")]
	public class Pose
	{
		[Token(Token = "0x4002434")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vector3 Position;

		[Token(Token = "0x4002435")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Quaternion Rotation;

		[Token(Token = "0x600254D")]
		[Address(RVA = "0xBB0DDC", Offset = "0xBB0DDC", VA = "0xBB0DDC")]
		public Pose()
		{
		}
	}
	[Token(Token = "0x2000653")]
	public class WindmillBladesController : MonoBehaviour
	{
		[Token(Token = "0x2000654")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9749CC", Offset = "0x9749CC")]
		private sealed class <LerpToSpeed>d__17 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002441")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002442")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002443")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public WindmillBladesController <>4__this;

			[Token(Token = "0x4002444")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float goalSpeed;

			[Token(Token = "0x4002445")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float <totalTime>5__2;

			[Token(Token = "0x4002446")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <startSpeed>5__3;

			[Token(Token = "0x17000419")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600255A")]
				[Address(RVA = "0xBB78D8", Offset = "0xBB78D8", VA = "0xBB78D8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700041A")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600255C")]
				[Address(RVA = "0xBB7940", Offset = "0xBB7940", VA = "0xBB7940", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002557")]
			[Address(RVA = "0xBB754C", Offset = "0xBB754C", VA = "0xBB754C")]
			[DebuggerHidden]
			public <LerpToSpeed>d__17(int <>1__state)
			{
			}

			[Token(Token = "0x6002558")]
			[Address(RVA = "0xBB76D4", Offset = "0xBB76D4", VA = "0xBB76D4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002559")]
			[Address(RVA = "0xBB76D8", Offset = "0xBB76D8", VA = "0xBB76D8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600255B")]
			[Address(RVA = "0xBB78E0", Offset = "0xBB78E0", VA = "0xBB78E0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000655")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9749DC", Offset = "0x9749DC")]
		private sealed class <PlaySoundDelayed>d__18 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002447")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002448")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002449")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public WindmillBladesController <>4__this;

			[Token(Token = "0x400244A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public AudioClip initial;

			[Token(Token = "0x400244B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public float timeDelayAfterInitial;

			[Token(Token = "0x400244C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public AudioClip clip;

			[Token(Token = "0x1700041B")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002560")]
				[Address(RVA = "0xBB7A20", Offset = "0xBB7A20", VA = "0xBB7A20", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700041C")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002562")]
				[Address(RVA = "0xBB7A88", Offset = "0xBB7A88", VA = "0xBB7A88", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600255D")]
			[Address(RVA = "0xBB7634", Offset = "0xBB7634", VA = "0xBB7634")]
			[DebuggerHidden]
			public <PlaySoundDelayed>d__18(int <>1__state)
			{
			}

			[Token(Token = "0x600255E")]
			[Address(RVA = "0xBB7948", Offset = "0xBB7948", VA = "0xBB7948", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600255F")]
			[Address(RVA = "0xBB794C", Offset = "0xBB794C", VA = "0xBB794C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002561")]
			[Address(RVA = "0xBB7A28", Offset = "0xBB7A28", VA = "0xBB7A28", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4002436")]
		private const float MAX_TIME = 1f;

		[Token(Token = "0x4002437")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private AudioSource _audioSource;

		[Token(Token = "0x4002438")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private AudioClip _windMillRotationSound;

		[Token(Token = "0x4002439")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private AudioClip _windMillStartSound;

		[Token(Token = "0x400243A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private AudioClip _windMillStopSound;

		[Token(Token = "0x400243B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x981D28", Offset = "0x981D28")]
		private bool <IsMoving>k__BackingField;

		[Token(Token = "0x400243C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float _currentSpeed;

		[Token(Token = "0x400243D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Coroutine _lerpSpeedCoroutine;

		[Token(Token = "0x400243E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Coroutine _audioChangeCr;

		[Token(Token = "0x400243F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Quaternion _originalRotation;

		[Token(Token = "0x4002440")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private float _rotAngle;

		[Token(Token = "0x17000418")]
		public bool IsMoving
		{
			[Token(Token = "0x600254E")]
			[Address(RVA = "0xBB72A8", Offset = "0xBB72A8", VA = "0xBB72A8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x993E0C", Offset = "0x993E0C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600254F")]
			[Address(RVA = "0xBB72B0", Offset = "0xBB72B0", VA = "0xBB72B0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x993E1C", Offset = "0x993E1C")]
			private set
			{
			}
		}

		[Token(Token = "0x6002550")]
		[Address(RVA = "0xBB72BC", Offset = "0xBB72BC", VA = "0xBB72BC")]
		private void Start()
		{
		}

		[Token(Token = "0x6002551")]
		[Address(RVA = "0xBB72F8", Offset = "0xBB72F8", VA = "0xBB72F8")]
		private void Update()
		{
		}

		[Token(Token = "0x6002552")]
		[Address(RVA = "0xBB744C", Offset = "0xBB744C", VA = "0xBB744C")]
		public void SetMoveState(bool newMoveState, float goalSpeed)
		{
		}

		[Token(Token = "0x6002553")]
		[Address(RVA = "0xBB74C0", Offset = "0xBB74C0", VA = "0xBB74C0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x993E2C", Offset = "0x993E2C")]
		private IEnumerator LerpToSpeed(float goalSpeed)
		{
			return null;
		}

		[Token(Token = "0x6002554")]
		[Address(RVA = "0xBB7578", Offset = "0xBB7578", VA = "0xBB7578")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x993E90", Offset = "0x993E90")]
		private IEnumerator PlaySoundDelayed(AudioClip initial, AudioClip clip, float timeDelayAfterInitial)
		{
			return null;
		}

		[Token(Token = "0x6002555")]
		[Address(RVA = "0xBB7660", Offset = "0xBB7660", VA = "0xBB7660")]
		private void PlaySound(AudioClip clip, bool loop = false)
		{
		}

		[Token(Token = "0x6002556")]
		[Address(RVA = "0xBB76CC", Offset = "0xBB76CC", VA = "0xBB76CC")]
		public WindmillBladesController()
		{
		}
	}
	[Token(Token = "0x2000656")]
	public class WindmillController : MonoBehaviour
	{
		[Token(Token = "0x400244D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject _startStopButton;

		[Token(Token = "0x400244E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float _maxSpeed;

		[Token(Token = "0x400244F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private SelectionCylinder _selectionCylinder;

		[Token(Token = "0x4002450")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private WindmillBladesController _bladesRotation;

		[Token(Token = "0x4002451")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private InteractableTool _toolInteractingWithMe;

		[Token(Token = "0x6002563")]
		[Address(RVA = "0xBB7A90", Offset = "0xBB7A90", VA = "0xBB7A90")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002564")]
		[Address(RVA = "0xBB7B08", Offset = "0xBB7B08", VA = "0xBB7B08")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6002565")]
		[Address(RVA = "0xBB7BC0", Offset = "0xBB7BC0", VA = "0xBB7BC0")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6002566")]
		[Address(RVA = "0xBB7CC0", Offset = "0xBB7CC0", VA = "0xBB7CC0")]
		private void StartStopStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x6002567")]
		[Address(RVA = "0xBB7D40", Offset = "0xBB7D40", VA = "0xBB7D40")]
		private void Update()
		{
		}

		[Token(Token = "0x6002568")]
		[Address(RVA = "0xBB7E1C", Offset = "0xBB7E1C", VA = "0xBB7E1C")]
		public WindmillController()
		{
		}
	}
	[Token(Token = "0x2000657")]
	public class OVROverlaySample : MonoBehaviour
	{
		[Token(Token = "0x2000658")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9749EC", Offset = "0x9749EC")]
		private sealed class <WaitforOVROverlay>d__30 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400246A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400246B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400246C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public OVROverlaySample <>4__this;

			[Token(Token = "0x1700041D")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600257C")]
				[Address(RVA = "0xBB0198", Offset = "0xBB0198", VA = "0xBB0198", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700041E")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600257E")]
				[Address(RVA = "0xBB0200", Offset = "0xBB0200", VA = "0xBB0200", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002579")]
			[Address(RVA = "0xBAF7EC", Offset = "0xBAF7EC", VA = "0xBAF7EC")]
			[DebuggerHidden]
			public <WaitforOVROverlay>d__30(int <>1__state)
			{
			}

			[Token(Token = "0x600257A")]
			[Address(RVA = "0xBAFF30", Offset = "0xBAFF30", VA = "0xBAFF30", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600257B")]
			[Address(RVA = "0xBAFF34", Offset = "0xBAFF34", VA = "0xBAFF34", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600257D")]
			[Address(RVA = "0xBB01A0", Offset = "0xBB01A0", VA = "0xBB01A0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4002452")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool inMenu;

		[Token(Token = "0x4002453")]
		private const string ovrOverlayID = "OVROverlayID";

		[Token(Token = "0x4002454")]
		private const string applicationID = "ApplicationID";

		[Token(Token = "0x4002455")]
		private const string noneID = "NoneID";

		[Token(Token = "0x4002456")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Toggle applicationRadioButton;

		[Token(Token = "0x4002457")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Toggle noneRadioButton;

		[Token(Token = "0x4002458")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x981D68", Offset = "0x981D68")]
		public GameObject mainCamera;

		[Token(Token = "0x4002459")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public GameObject uiCamera;

		[Token(Token = "0x400245A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public GameObject uiGeoParent;

		[Token(Token = "0x400245B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public GameObject worldspaceGeoParent;

		[Token(Token = "0x400245C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public OVROverlay cameraRenderOverlay;

		[Token(Token = "0x400245D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public OVROverlay renderingLabelOverlay;

		[Token(Token = "0x400245E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Texture applicationLabelTexture;

		[Token(Token = "0x400245F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Texture compositorLabelTexture;

		[Token(Token = "0x4002460")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x981DA0", Offset = "0x981DA0")]
		public GameObject prefabForLevelLoadSim;

		[Token(Token = "0x4002461")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public OVROverlay cubemapOverlay;

		[Token(Token = "0x4002462")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public OVROverlay loadingTextQuadOverlay;

		[Token(Token = "0x4002463")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public float distanceFromCamToLoadText;

		[Token(Token = "0x4002464")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		public float cubeSpawnRadius;

		[Token(Token = "0x4002465")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public float heightBetweenItems;

		[Token(Token = "0x4002466")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		public int numObjectsPerLevel;

		[Token(Token = "0x4002467")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public int numLevels;

		[Token(Token = "0x4002468")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		public int numLoopsTrigger;

		[Token(Token = "0x4002469")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private List<GameObject> spawnedCubes;

		[Token(Token = "0x6002569")]
		[Address(RVA = "0xBAEAB4", Offset = "0xBAEAB4", VA = "0xBAEAB4")]
		private void Start()
		{
		}

		[Token(Token = "0x600256A")]
		[Address(RVA = "0xBAF2F0", Offset = "0xBAF2F0", VA = "0xBAF2F0")]
		private void Update()
		{
		}

		[Token(Token = "0x600256B")]
		[Address(RVA = "0xBAF430", Offset = "0xBAF430", VA = "0xBAF430")]
		private void ActivateWorldGeo()
		{
		}

		[Token(Token = "0x600256C")]
		[Address(RVA = "0xBAF564", Offset = "0xBAF564", VA = "0xBAF564")]
		private void ActivateOVROverlay()
		{
		}

		[Token(Token = "0x600256D")]
		[Address(RVA = "0xBAF698", Offset = "0xBAF698", VA = "0xBAF698")]
		private void ActivateNone()
		{
		}

		[Token(Token = "0x600256E")]
		[Address(RVA = "0xBAF404", Offset = "0xBAF404", VA = "0xBAF404")]
		private void TriggerLoad()
		{
		}

		[Token(Token = "0x600256F")]
		[Address(RVA = "0xBAF770", Offset = "0xBAF770", VA = "0xBAF770")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x993F94", Offset = "0x993F94")]
		private IEnumerator WaitforOVROverlay()
		{
			return null;
		}

		[Token(Token = "0x6002570")]
		[Address(RVA = "0xBAF818", Offset = "0xBAF818", VA = "0xBAF818")]
		private void TriggerUnload()
		{
		}

		[Token(Token = "0x6002571")]
		[Address(RVA = "0xBAEE38", Offset = "0xBAEE38", VA = "0xBAEE38")]
		private void CameraAndRenderTargetSetup()
		{
		}

		[Token(Token = "0x6002572")]
		[Address(RVA = "0xBAF940", Offset = "0xBAF940", VA = "0xBAF940")]
		private void SimulateLevelLoad()
		{
		}

		[Token(Token = "0x6002573")]
		[Address(RVA = "0xBAF84C", Offset = "0xBAF84C", VA = "0xBAF84C")]
		private void ClearObjects()
		{
		}

		[Token(Token = "0x6002574")]
		[Address(RVA = "0xBAFCDC", Offset = "0xBAFCDC", VA = "0xBAFCDC")]
		public void RadioPressed(string radioLabel, string group, Toggle t)
		{
		}

		[Token(Token = "0x6002575")]
		[Address(RVA = "0xBAFDB8", Offset = "0xBAFDB8", VA = "0xBAFDB8")]
		public OVROverlaySample()
		{
		}

		[Token(Token = "0x6002576")]
		[Address(RVA = "0xBAFE40", Offset = "0xBAFE40", VA = "0xBAFE40")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x993FF8", Offset = "0x993FF8")]
		private void <Start>b__24_0(Toggle t)
		{
		}

		[Token(Token = "0x6002577")]
		[Address(RVA = "0xBAFE90", Offset = "0xBAFE90", VA = "0xBAFE90")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x994008", Offset = "0x994008")]
		private void <Start>b__24_1(Toggle t)
		{
		}

		[Token(Token = "0x6002578")]
		[Address(RVA = "0xBAFEE0", Offset = "0xBAFEE0", VA = "0xBAFEE0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x994018", Offset = "0x994018")]
		private void <Start>b__24_2(Toggle t)
		{
		}
	}
}
namespace OVRTouchSample
{
	[Token(Token = "0x2000659")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x9749FC", Offset = "0x9749FC")]
	public class Hand : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x200065A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x974A60", Offset = "0x974A60")]
		private sealed class <>c
		{
			[Token(Token = "0x4002489")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x400248A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<Collider, bool> <>9__28_0;

			[Token(Token = "0x600258C")]
			[Address(RVA = "0xD70C08", Offset = "0xD70C08", VA = "0xD70C08")]
			public <>c()
			{
			}

			[Token(Token = "0x600258D")]
			[Address(RVA = "0xD70C10", Offset = "0xD70C10", VA = "0xD70C10")]
			internal bool <Start>b__28_0(Collider childCollider)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x400246D")]
		public const string ANIM_LAYER_NAME_POINT = "Point Layer";

		[Token(Token = "0x400246E")]
		public const string ANIM_LAYER_NAME_THUMB = "Thumb Layer";

		[Token(Token = "0x400246F")]
		public const string ANIM_PARAM_NAME_FLEX = "Flex";

		[Token(Token = "0x4002470")]
		public const string ANIM_PARAM_NAME_POSE = "Pose";

		[Token(Token = "0x4002471")]
		public const float THRESH_COLLISION_FLEX = 0.9f;

		[Token(Token = "0x4002472")]
		public const float INPUT_RATE_CHANGE = 20f;

		[Token(Token = "0x4002473")]
		public const float COLLIDER_SCALE_MIN = 0.01f;

		[Token(Token = "0x4002474")]
		public const float COLLIDER_SCALE_MAX = 1f;

		[Token(Token = "0x4002475")]
		public const float COLLIDER_SCALE_PER_SECOND = 1f;

		[Token(Token = "0x4002476")]
		public const float TRIGGER_DEBOUNCE_TIME = 0.05f;

		[Token(Token = "0x4002477")]
		public const float THUMB_DEBOUNCE_TIME = 0.15f;

		[Token(Token = "0x4002478")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private OVRInput.Controller m_controller;

		[Token(Token = "0x4002479")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Animator m_animator;

		[Token(Token = "0x400247A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private HandPose m_defaultGrabPose;

		[Token(Token = "0x400247B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Collider[] m_colliders;

		[Token(Token = "0x400247C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool m_collisionEnabled;

		[Token(Token = "0x400247D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private OVRGrabber m_grabber;

		[Token(Token = "0x400247E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private List<Renderer> m_showAfterInputFocusAcquired;

		[Token(Token = "0x400247F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private int m_animLayerIndexThumb;

		[Token(Token = "0x4002480")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private int m_animLayerIndexPoint;

		[Token(Token = "0x4002481")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private int m_animParamIndexFlex;

		[Token(Token = "0x4002482")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private int m_animParamIndexPose;

		[Token(Token = "0x4002483")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private bool m_isPointing;

		[Token(Token = "0x4002484")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
		private bool m_isGivingThumbsUp;

		[Token(Token = "0x4002485")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private float m_pointBlend;

		[Token(Token = "0x4002486")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private float m_thumbsUpBlend;

		[Token(Token = "0x4002487")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private bool m_restoreOnInputAcquired;

		[Token(Token = "0x4002488")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private float m_collisionScaleCurrent;

		[Token(Token = "0x600257F")]
		[Address(RVA = "0xD6FE20", Offset = "0xD6FE20", VA = "0xD6FE20")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002580")]
		[Address(RVA = "0xD6FE80", Offset = "0xD6FE80", VA = "0xD6FE80")]
		private void Start()
		{
		}

		[Token(Token = "0x6002581")]
		[Address(RVA = "0xD702A8", Offset = "0xD702A8", VA = "0xD702A8")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6002582")]
		[Address(RVA = "0xD70374", Offset = "0xD70374", VA = "0xD70374")]
		private void Update()
		{
		}

		[Token(Token = "0x6002583")]
		[Address(RVA = "0xD70480", Offset = "0xD70480", VA = "0xD70480")]
		private void UpdateCapTouchStates()
		{
		}

		[Token(Token = "0x6002584")]
		[Address(RVA = "0xD707B8", Offset = "0xD707B8", VA = "0xD707B8")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6002585")]
		[Address(RVA = "0xD70920", Offset = "0xD70920", VA = "0xD70920")]
		private void OnInputFocusLost()
		{
		}

		[Token(Token = "0x6002586")]
		[Address(RVA = "0xD70A6C", Offset = "0xD70A6C", VA = "0xD70A6C")]
		private void OnInputFocusAcquired()
		{
		}

		[Token(Token = "0x6002587")]
		[Address(RVA = "0xD7051C", Offset = "0xD7051C", VA = "0xD7051C")]
		private float InputValueRateChange(bool isDown, float value)
		{
			return default(float);
		}

		[Token(Token = "0x6002588")]
		[Address(RVA = "0xD705BC", Offset = "0xD705BC", VA = "0xD705BC")]
		private void UpdateAnimStates()
		{
		}

		[Token(Token = "0x6002589")]
		[Address(RVA = "0xD700FC", Offset = "0xD700FC", VA = "0xD700FC")]
		private void CollisionEnable(bool enabled)
		{
		}

		[Token(Token = "0x600258A")]
		[Address(RVA = "0xD70B88", Offset = "0xD70B88", VA = "0xD70B88")]
		public Hand()
		{
		}
	}
	[Token(Token = "0x200065B")]
	public enum HandPoseId
	{
		[Token(Token = "0x400248C")]
		Default,
		[Token(Token = "0x400248D")]
		Generic,
		[Token(Token = "0x400248E")]
		PingPongBall,
		[Token(Token = "0x400248F")]
		Controller
	}
	[Token(Token = "0x200065C")]
	public class HandPose : MonoBehaviour
	{
		[Token(Token = "0x4002490")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private bool m_allowPointing;

		[Token(Token = "0x4002491")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		[SerializeField]
		private bool m_allowThumbsUp;

		[Token(Token = "0x4002492")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private HandPoseId m_poseId;

		[Token(Token = "0x1700041F")]
		public bool AllowPointing
		{
			[Token(Token = "0x600258E")]
			[Address(RVA = "0xD70C3C", Offset = "0xD70C3C", VA = "0xD70C3C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000420")]
		public bool AllowThumbsUp
		{
			[Token(Token = "0x600258F")]
			[Address(RVA = "0xD70C44", Offset = "0xD70C44", VA = "0xD70C44")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000421")]
		public HandPoseId PoseId
		{
			[Token(Token = "0x6002590")]
			[Address(RVA = "0xD70C4C", Offset = "0xD70C4C", VA = "0xD70C4C")]
			get
			{
				return default(HandPoseId);
			}
		}

		[Token(Token = "0x6002591")]
		[Address(RVA = "0xD70C54", Offset = "0xD70C54", VA = "0xD70C54")]
		public HandPose()
		{
		}
	}
	[Token(Token = "0x200065D")]
	public class TouchController : MonoBehaviour
	{
		[Token(Token = "0x4002493")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private OVRInput.Controller m_controller;

		[Token(Token = "0x4002494")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Animator m_animator;

		[Token(Token = "0x4002495")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool m_restoreOnInputAcquired;

		[Token(Token = "0x6002592")]
		[Address(RVA = "0xD70C5C", Offset = "0xD70C5C", VA = "0xD70C5C")]
		private void Update()
		{
		}

		[Token(Token = "0x6002593")]
		[Address(RVA = "0xD70ED0", Offset = "0xD70ED0", VA = "0xD70ED0")]
		private void OnInputFocusLost()
		{
		}

		[Token(Token = "0x6002594")]
		[Address(RVA = "0xD70F2C", Offset = "0xD70F2C", VA = "0xD70F2C")]
		private void OnInputFocusAcquired()
		{
		}

		[Token(Token = "0x6002595")]
		[Address(RVA = "0xD70F70", Offset = "0xD70F70", VA = "0xD70F70")]
		public TouchController()
		{
		}
	}
}
namespace GE_Core
{
	[Token(Token = "0x200065E")]
	public class GE_Control
	{
		[Token(Token = "0x200065F")]
		public enum GenType
		{
			[Token(Token = "0x4002497")]
			None,
			[Token(Token = "0x4002498")]
			Pulse,
			[Token(Token = "0x4002499")]
			Pitch
		}
	}
	[Token(Token = "0x2000660")]
	public class GE_Engine
	{
		[Token(Token = "0x2000661")]
		public enum PulsePlayMode
		{
			[Token(Token = "0x40024A0")]
			None,
			[Token(Token = "0x40024A1")]
			Always,
			[Token(Token = "0x40024A2")]
			GateOn,
			[Token(Token = "0x40024A3")]
			GateStep
		}

		[Token(Token = "0x2000662")]
		public enum PulseGenType
		{
			[Token(Token = "0x40024A5")]
			defaultpulsegen,
			[Token(Token = "0x40024A6")]
			patternpulsegen,
			[Token(Token = "0x40024A7")]
			seqpulsegen
		}

		[Token(Token = "0x2000663")]
		public enum PitchGenType
		{
			[Token(Token = "0x40024A9")]
			defaultpitchgen,
			[Token(Token = "0x40024AA")]
			chordpitchgen,
			[Token(Token = "0x40024AB")]
			seqpitchgen,
			[Token(Token = "0x40024AC")]
			relpitchgen
		}

		[Token(Token = "0x2000664")]
		public delegate void OnNoteOn(GE_Engine engine, int instrument, int voice, double beat, float pitch, float velocity);

		[Token(Token = "0x2000665")]
		public delegate void OnNoteOff(GE_Engine engine, int instrument, int voice, double beat);

		[Token(Token = "0x2000666")]
		public delegate void OnControlChange(GE_Engine engine, int instrument, int soundControl, int index, double newValue, double oldValue);

		[Token(Token = "0x2000667")]
		private delegate void GE_StartNotePtr(IntPtr engine, int instrument, int voice, double beat, float pitch, float velocity);

		[Token(Token = "0x2000668")]
		private delegate void GE_StopNotePtr(IntPtr engine, int instrument, int voice, double beat);

		[Token(Token = "0x2000669")]
		private delegate void GE_SoundControlPtr(IntPtr engine, int instrument, int soundControl, int index, double newValue, double oldValue);

		[Token(Token = "0x400249A")]
		public const string DLL_NAME = "GE_Core";

		[Token(Token = "0x400249E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private IntPtr cPointer;

		[Token(Token = "0x17000422")]
		public int NumInstruments
		{
			[Token(Token = "0x60025C7")]
			[Address(RVA = "0xCA849C", Offset = "0xCA849C", VA = "0xCA849C")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60025C8")]
			[Address(RVA = "0xCA84A4", Offset = "0xCA84A4", VA = "0xCA84A4")]
			set
			{
			}
		}

		[Token(Token = "0x17000423")]
		public int NumCursors
		{
			[Token(Token = "0x60025C9")]
			[Address(RVA = "0xCA84AC", Offset = "0xCA84AC", VA = "0xCA84AC")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60025CA")]
			[Address(RVA = "0xCA84B4", Offset = "0xCA84B4", VA = "0xCA84B4")]
			set
			{
			}
		}

		[Token(Token = "0x14000030")]
		public event OnNoteOn onNoteOn
		{
			[Token(Token = "0x6002596")]
			[Address(RVA = "0xCA5B90", Offset = "0xCA5B90", VA = "0xCA5B90")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x994078", Offset = "0x994078")]
			add
			{
			}
			[Token(Token = "0x6002597")]
			[Address(RVA = "0xCA5C34", Offset = "0xCA5C34", VA = "0xCA5C34")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x994088", Offset = "0x994088")]
			remove
			{
			}
		}

		[Token(Token = "0x14000031")]
		public event OnNoteOff onNoteOff
		{
			[Token(Token = "0x6002598")]
			[Address(RVA = "0xCA5CD8", Offset = "0xCA5CD8", VA = "0xCA5CD8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x994098", Offset = "0x994098")]
			add
			{
			}
			[Token(Token = "0x6002599")]
			[Address(RVA = "0xCA5D7C", Offset = "0xCA5D7C", VA = "0xCA5D7C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9940A8", Offset = "0x9940A8")]
			remove
			{
			}
		}

		[Token(Token = "0x14000032")]
		public event OnControlChange onControlChange
		{
			[Token(Token = "0x600259A")]
			[Address(RVA = "0xCA5E20", Offset = "0xCA5E20", VA = "0xCA5E20")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9940B8", Offset = "0x9940B8")]
			add
			{
			}
			[Token(Token = "0x600259B")]
			[Address(RVA = "0xCA5EC4", Offset = "0xCA5EC4", VA = "0xCA5EC4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9940C8", Offset = "0x9940C8")]
			remove
			{
			}
		}

		[PreserveSig]
		[Token(Token = "0x600259C")]
		[Address(RVA = "0xCA5F68", Offset = "0xCA5F68", VA = "0xCA5F68")]
		public static extern IntPtr GE_Component_GetRef(IntPtr component);

		[PreserveSig]
		[Token(Token = "0x600259D")]
		[Address(RVA = "0xCA5FE8", Offset = "0xCA5FE8", VA = "0xCA5FE8")]
		public static extern void GE_Component_SetRef(IntPtr component, IntPtr refptr);

		[PreserveSig]
		[Token(Token = "0x600259E")]
		[Address(RVA = "0xCA6078", Offset = "0xCA6078", VA = "0xCA6078")]
		private static extern IntPtr GE_Engine_New(IntPtr config);

		[PreserveSig]
		[Token(Token = "0x600259F")]
		[Address(RVA = "0xCA60F8", Offset = "0xCA60F8", VA = "0xCA60F8")]
		private static extern void GE_Engine_Free(IntPtr engine);

		[PreserveSig]
		[Token(Token = "0x60025A0")]
		[Address(RVA = "0xCA6178", Offset = "0xCA6178", VA = "0xCA6178")]
		private static extern int GE_Engine_GetNumInstruments(IntPtr engine);

		[PreserveSig]
		[Token(Token = "0x60025A1")]
		[Address(RVA = "0xCA61F8", Offset = "0xCA61F8", VA = "0xCA61F8")]
		private static extern void GE_Engine_SetNumInstruments(IntPtr engine, int num);

		[PreserveSig]
		[Token(Token = "0x60025A2")]
		[Address(RVA = "0xCA6288", Offset = "0xCA6288", VA = "0xCA6288")]
		private static extern IntPtr GE_Engine_GetInstrument(IntPtr engine, int index);

		[PreserveSig]
		[Token(Token = "0x60025A3")]
		[Address(RVA = "0xCA6318", Offset = "0xCA6318", VA = "0xCA6318")]
		private static extern int GE_Engine_GetNumCursors(IntPtr engine);

		[PreserveSig]
		[Token(Token = "0x60025A4")]
		[Address(RVA = "0xCA6398", Offset = "0xCA6398", VA = "0xCA6398")]
		private static extern void GE_Engine_SetNumCursors(IntPtr engine, int num);

		[PreserveSig]
		[Token(Token = "0x60025A5")]
		[Address(RVA = "0xCA6428", Offset = "0xCA6428", VA = "0xCA6428")]
		private static extern IntPtr GE_Engine_GetCursor(IntPtr engine, int index);

		[PreserveSig]
		[Token(Token = "0x60025A6")]
		[Address(RVA = "0xCA64B8", Offset = "0xCA64B8", VA = "0xCA64B8")]
		private static extern int GE_Engine_FindControlSource(IntPtr engine, string sourceName);

		[PreserveSig]
		[Token(Token = "0x60025A7")]
		[Address(RVA = "0xCA6564", Offset = "0xCA6564", VA = "0xCA6564")]
		private static extern IntPtr GE_Engine_GetControlSource(IntPtr engine, int index);

		[PreserveSig]
		[Token(Token = "0x60025A8")]
		[Address(RVA = "0xCA65F4", Offset = "0xCA65F4", VA = "0xCA65F4")]
		private static extern void GE_Engine_SetStartNoteCallback(IntPtr engine, GE_StartNotePtr callback);

		[PreserveSig]
		[Token(Token = "0x60025A9")]
		[Address(RVA = "0xCA668C", Offset = "0xCA668C", VA = "0xCA668C")]
		private static extern void GE_Engine_SetStopNoteCallback(IntPtr engine, GE_StopNotePtr callback);

		[PreserveSig]
		[Token(Token = "0x60025AA")]
		[Address(RVA = "0xCA6724", Offset = "0xCA6724", VA = "0xCA6724")]
		private static extern void GE_Engine_SetSoundControlCallback(IntPtr engine, GE_SoundControlPtr callback);

		[PreserveSig]
		[Token(Token = "0x60025AB")]
		[Address(RVA = "0xCA67BC", Offset = "0xCA67BC", VA = "0xCA67BC")]
		public static extern bool GE_Engine_Render(IntPtr engine, double sampleRate, int numFrames);

		[PreserveSig]
		[Token(Token = "0x60025AC")]
		[Address(RVA = "0xCA6864", Offset = "0xCA6864", VA = "0xCA6864")]
		public static extern void GE_Engine_SetPlaying(IntPtr engine, bool playing);

		[PreserveSig]
		[Token(Token = "0x60025AD")]
		[Address(RVA = "0xCA68F4", Offset = "0xCA68F4", VA = "0xCA68F4")]
		public static extern bool GE_Engine_LoadG2Preset(IntPtr engine, string path);

		[PreserveSig]
		[Token(Token = "0x60025AE")]
		[Address(RVA = "0xCA69A4", Offset = "0xCA69A4", VA = "0xCA69A4")]
		private static extern IntPtr GE_Instrument_GetCursor(IntPtr instrument);

		[PreserveSig]
		[Token(Token = "0x60025AF")]
		[Address(RVA = "0xCA6A24", Offset = "0xCA6A24", VA = "0xCA6A24")]
		private static extern void GE_Instrument_SetCursor(IntPtr instrument, IntPtr cursor);

		[PreserveSig]
		[Token(Token = "0x60025B0")]
		[Address(RVA = "0xCA6AB4", Offset = "0xCA6AB4", VA = "0xCA6AB4")]
		private static extern IntPtr GE_Instrument_GetPulseGen(IntPtr instrument);

		[PreserveSig]
		[Token(Token = "0x60025B1")]
		[Address(RVA = "0xCA6B34", Offset = "0xCA6B34", VA = "0xCA6B34")]
		private static extern IntPtr GE_Instrument_SetPulseGen(IntPtr instrument, string genspec);

		[PreserveSig]
		[Token(Token = "0x60025B2")]
		[Address(RVA = "0xCA6BE0", Offset = "0xCA6BE0", VA = "0xCA6BE0")]
		private static extern IntPtr GE_Instrument_GetPitchGen(IntPtr instrument);

		[PreserveSig]
		[Token(Token = "0x60025B3")]
		[Address(RVA = "0xCA6C60", Offset = "0xCA6C60", VA = "0xCA6C60")]
		private static extern IntPtr GE_Instrument_SetPitchGen(IntPtr instrument, string genspec);

		[PreserveSig]
		[Token(Token = "0x60025B4")]
		[Address(RVA = "0xCA6D0C", Offset = "0xCA6D0C", VA = "0xCA6D0C")]
		private static extern IntPtr GE_Instrument_GetTitle(IntPtr instrument);

		[PreserveSig]
		[Token(Token = "0x60025B5")]
		[Address(RVA = "0xCA6D8C", Offset = "0xCA6D8C", VA = "0xCA6D8C")]
		private static extern bool GE_Cursor_GetGate(IntPtr cursor);

		[PreserveSig]
		[Token(Token = "0x60025B6")]
		[Address(RVA = "0xCA6E14", Offset = "0xCA6E14", VA = "0xCA6E14")]
		private static extern double GE_Cursor_GetX(IntPtr cursor);

		[PreserveSig]
		[Token(Token = "0x60025B7")]
		[Address(RVA = "0xCA6E94", Offset = "0xCA6E94", VA = "0xCA6E94")]
		private static extern double GE_Cursor_GetY(IntPtr cursor);

		[PreserveSig]
		[Token(Token = "0x60025B8")]
		[Address(RVA = "0xCA6F14", Offset = "0xCA6F14", VA = "0xCA6F14")]
		private static extern double GE_Cursor_GetZ(IntPtr cursor);

		[PreserveSig]
		[Token(Token = "0x60025B9")]
		[Address(RVA = "0xCA6F94", Offset = "0xCA6F94", VA = "0xCA6F94")]
		private static extern IntPtr GE_Generator_GetTypeName(IntPtr generator);

		[PreserveSig]
		[Token(Token = "0x60025BA")]
		[Address(RVA = "0xCA7014", Offset = "0xCA7014", VA = "0xCA7014")]
		private static extern IntPtr GE_Generator_GetControlInput(IntPtr generator, int index);

		[PreserveSig]
		[Token(Token = "0x60025BB")]
		[Address(RVA = "0xCA70A4", Offset = "0xCA70A4", VA = "0xCA70A4")]
		private static extern int GE_Generator_FindControlInput(IntPtr generator, string inputName);

		[PreserveSig]
		[Token(Token = "0x60025BC")]
		[Address(RVA = "0xCA7150", Offset = "0xCA7150", VA = "0xCA7150")]
		private static extern void GE_PulseGen_SetPlayMode(IntPtr generator, int playMode);

		[PreserveSig]
		[Token(Token = "0x60025BD")]
		[Address(RVA = "0xCA71E0", Offset = "0xCA71E0", VA = "0xCA71E0")]
		private static extern double GE_ControlSource_GetValue(IntPtr control);

		[PreserveSig]
		[Token(Token = "0x60025BE")]
		[Address(RVA = "0xCA7260", Offset = "0xCA7260", VA = "0xCA7260")]
		private static extern void GE_ControlSource_SetValue(IntPtr control, double value);

		[PreserveSig]
		[Token(Token = "0x60025BF")]
		[Address(RVA = "0xCA72F0", Offset = "0xCA72F0", VA = "0xCA72F0")]
		private static extern void GE_ControlInput_SetSource(IntPtr input, IntPtr source);

		[PreserveSig]
		[Token(Token = "0x60025C0")]
		[Address(RVA = "0xCA7380", Offset = "0xCA7380", VA = "0xCA7380")]
		private static extern int GE_SeqPulseGen_ReadMIDIPath(IntPtr generator, string path);

		[PreserveSig]
		[Token(Token = "0x60025C1")]
		[Address(RVA = "0xCA742C", Offset = "0xCA742C", VA = "0xCA742C")]
		private static extern int GE_SeqPitchGen_ReadMIDIPath(IntPtr generator, string path);

		[Token(Token = "0x60025C2")]
		[Address(RVA = "0xCA586C", Offset = "0xCA586C", VA = "0xCA586C")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9940D8", Offset = "0x9940D8")]
		private static void StartNoteCallback(IntPtr engine, int instrument, int voice, double beat, float pitch, float velocity)
		{
		}

		[Token(Token = "0x60025C3")]
		[Address(RVA = "0xCA5980", Offset = "0xCA5980", VA = "0xCA5980")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x99413C", Offset = "0x99413C")]
		private static void StopNoteCallback(IntPtr engine, int instrument, int voice, double beat)
		{
		}

		[Token(Token = "0x60025C4")]
		[Address(RVA = "0xCA5A7C", Offset = "0xCA5A7C", VA = "0xCA5A7C")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9941A0", Offset = "0x9941A0")]
		private static void SoundControlCallback(IntPtr engine, int instrument, int soundControl, int index, double newValue, double oldValue)
		{
		}

		[Token(Token = "0x60025C5")]
		[Address(RVA = "0xCA8294", Offset = "0xCA8294", VA = "0xCA8294")]
		public GE_Engine()
		{
		}

		[Token(Token = "0x60025C6")]
		[Address(RVA = "0xCA8430", Offset = "0xCA8430", VA = "0xCA8430", Slot = "1")]
		~GE_Engine()
		{
		}

		[Token(Token = "0x60025CB")]
		[Address(RVA = "0xCA84BC", Offset = "0xCA84BC", VA = "0xCA84BC")]
		public int SetInstrumentCursor(int instrument, int cursor)
		{
			return default(int);
		}

		[Token(Token = "0x60025CC")]
		[Address(RVA = "0xCA856C", Offset = "0xCA856C", VA = "0xCA856C")]
		public string GetInstrumentTitle(int instrument)
		{
			return null;
		}

		[Token(Token = "0x60025CD")]
		[Address(RVA = "0xCA862C", Offset = "0xCA862C", VA = "0xCA862C")]
		public string GetPulseGen(int instrument)
		{
			return null;
		}

		[Token(Token = "0x60025CE")]
		[Address(RVA = "0xCA8714", Offset = "0xCA8714", VA = "0xCA8714")]
		public int SetPulseGen(int instrument, string genspec)
		{
			return default(int);
		}

		[Token(Token = "0x60025CF")]
		[Address(RVA = "0xCA87B0", Offset = "0xCA87B0", VA = "0xCA87B0")]
		public string GetPitchGen(int instrument)
		{
			return null;
		}

		[Token(Token = "0x60025D0")]
		[Address(RVA = "0xCA8898", Offset = "0xCA8898", VA = "0xCA8898")]
		public int SetPitchGen(int instrument, string genspec)
		{
			return default(int);
		}

		[Token(Token = "0x60025D1")]
		[Address(RVA = "0xCA8934", Offset = "0xCA8934", VA = "0xCA8934")]
		public double GetEngineSourceValue(int index)
		{
			return default(double);
		}

		[Token(Token = "0x60025D2")]
		[Address(RVA = "0xCA89B8", Offset = "0xCA89B8", VA = "0xCA89B8")]
		public bool SetInputValue(int instrument, GE_Control.GenType generator, int index, double val)
		{
			return default(bool);
		}

		[Token(Token = "0x60025D3")]
		[Address(RVA = "0xCA8AB0", Offset = "0xCA8AB0", VA = "0xCA8AB0")]
		public bool GetCursorGate(int cursor)
		{
			return default(bool);
		}

		[Token(Token = "0x60025D4")]
		[Address(RVA = "0xCA8B34", Offset = "0xCA8B34", VA = "0xCA8B34")]
		public double GetCursorX(int cursor)
		{
			return default(double);
		}

		[Token(Token = "0x60025D5")]
		[Address(RVA = "0xCA8BB8", Offset = "0xCA8BB8", VA = "0xCA8BB8")]
		public double GetCursorY(int cursor)
		{
			return default(double);
		}

		[Token(Token = "0x60025D6")]
		[Address(RVA = "0xCA8C3C", Offset = "0xCA8C3C", VA = "0xCA8C3C")]
		public double GetCursorZ(int cursor)
		{
			return default(double);
		}

		[Token(Token = "0x60025D7")]
		[Address(RVA = "0xCA8CC0", Offset = "0xCA8CC0", VA = "0xCA8CC0")]
		public bool Render(double sampleRate, int numFrames)
		{
			return default(bool);
		}

		[Token(Token = "0x60025D8")]
		[Address(RVA = "0xCA8CC8", Offset = "0xCA8CC8", VA = "0xCA8CC8")]
		private int SeqGenLoadMIDI(int instrument, GE_Control.GenType generator, string path)
		{
			return default(int);
		}

		[Token(Token = "0x60025D9")]
		[Address(RVA = "0xCA8E10", Offset = "0xCA8E10", VA = "0xCA8E10")]
		public int LoadPulseMIDI(int instrument, string path)
		{
			return default(int);
		}

		[Token(Token = "0x60025DA")]
		[Address(RVA = "0xCA8E1C", Offset = "0xCA8E1C", VA = "0xCA8E1C")]
		public int LoadPitchMIDI(int instrument, string path)
		{
			return default(int);
		}

		[Token(Token = "0x60025DB")]
		[Address(RVA = "0xCA8E28", Offset = "0xCA8E28", VA = "0xCA8E28")]
		public bool SetInputSource(int instrument, GE_Control.GenType genType, string input, string source)
		{
			return default(bool);
		}

		[Token(Token = "0x60025DC")]
		[Address(RVA = "0xCA8F50", Offset = "0xCA8F50", VA = "0xCA8F50")]
		public bool SetPulseInputSource(int instrument, string input, string source)
		{
			return default(bool);
		}

		[Token(Token = "0x60025DD")]
		[Address(RVA = "0xCA8F60", Offset = "0xCA8F60", VA = "0xCA8F60")]
		public bool SetPitchInputSource(int instrument, string input, string source)
		{
			return default(bool);
		}

		[Token(Token = "0x60025DE")]
		[Address(RVA = "0xCA8F70", Offset = "0xCA8F70", VA = "0xCA8F70")]
		public void SetPlaying(bool playing)
		{
		}

		[Token(Token = "0x60025DF")]
		[Address(RVA = "0xCA8F7C", Offset = "0xCA8F7C", VA = "0xCA8F7C")]
		public bool LoadG2Preset(string path)
		{
			return default(bool);
		}

		[Token(Token = "0x60025E0")]
		[Address(RVA = "0xCA8F84", Offset = "0xCA8F84", VA = "0xCA8F84")]
		public bool SetPulsePlayMode(int instrument, PulsePlayMode playMode)
		{
			return default(bool);
		}
	}
}
namespace FIMSpace
{
	[Token(Token = "0x200066A")]
	public static class FEngineering
	{
		[Token(Token = "0x40024AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Plane axis2DProjection;

		[Token(Token = "0x60025F9")]
		[Address(RVA = "0xBFDA28", Offset = "0xBFDA28", VA = "0xBFDA28")]
		public static bool VIsZero(this Vector3 vec)
		{
			return default(bool);
		}

		[Token(Token = "0x60025FA")]
		[Address(RVA = "0xBFDA5C", Offset = "0xBFDA5C", VA = "0xBFDA5C")]
		public static bool VIsSame(this Vector3 vec1, Vector3 vec2)
		{
			return default(bool);
		}

		[Token(Token = "0x60025FB")]
		[Address(RVA = "0xBFDA80", Offset = "0xBFDA80", VA = "0xBFDA80")]
		public static Vector3 TransformVector(this Quaternion parentRot, Vector3 parentLossyScale, Vector3 childLocalPos)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60025FC")]
		[Address(RVA = "0xBFDB84", Offset = "0xBFDB84", VA = "0xBFDB84")]
		public static Vector3 VAxis2DLimit(this Transform parent, Vector3 parentPos, Vector3 childPos, int axis = 3)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60025FD")]
		[Address(RVA = "0xBFDCE0", Offset = "0xBFDCE0", VA = "0xBFDCE0")]
		public static Quaternion QToLocal(this Quaternion parentRotation, Quaternion worldRotation)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x60025FE")]
		[Address(RVA = "0xBFDDA8", Offset = "0xBFDDA8", VA = "0xBFDDA8")]
		public static Quaternion QToWorld(this Quaternion parentRotation, Quaternion localRotation)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x60025FF")]
		[Address(RVA = "0xBFDE68", Offset = "0xBFDE68", VA = "0xBFDE68")]
		public static bool QIsZero(this Quaternion rot)
		{
			return default(bool);
		}

		[Token(Token = "0x6002600")]
		[Address(RVA = "0xBFDE8C", Offset = "0xBFDE8C", VA = "0xBFDE8C")]
		public static bool QIsSame(this Quaternion rot1, Quaternion rot2)
		{
			return default(bool);
		}

		[Token(Token = "0x6002601")]
		[Address(RVA = "0xBFDEB8", Offset = "0xBFDEB8", VA = "0xBFDEB8")]
		public static Quaternion SmoothDampRotation(this Quaternion current, Quaternion target, ref Quaternion velocityRef, float duration, float delta)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6002602")]
		[Address(RVA = "0xBFDEEC", Offset = "0xBFDEEC", VA = "0xBFDEEC")]
		public static Quaternion SmoothDampRotation(this Quaternion current, Quaternion target, ref Quaternion velocityRef, float duration, float maxSpeed, float delta)
		{
			return default(Quaternion);
		}
	}
	[Token(Token = "0x200066B")]
	public static class FLogicMethods
	{
		[Token(Token = "0x6002603")]
		[Address(RVA = "0xC06008", Offset = "0xC06008", VA = "0xC06008")]
		public static float WrapAngle(float angle)
		{
			return default(float);
		}
	}
	[Token(Token = "0x200066C")]
	public abstract class FImp_ColliderData_Base
	{
		[Token(Token = "0x200066D")]
		public enum EFColliderType
		{
			[Token(Token = "0x40024B8")]
			Box,
			[Token(Token = "0x40024B9")]
			Sphere,
			[Token(Token = "0x40024BA")]
			Capsule,
			[Token(Token = "0x40024BB")]
			Mesh,
			[Token(Token = "0x40024BC")]
			Terrain
		}

		[Token(Token = "0x40024AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x981E88", Offset = "0x981E88")]
		private Transform <Transform>k__BackingField;

		[Token(Token = "0x40024AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x981E98", Offset = "0x981E98")]
		private Collider <Collider>k__BackingField;

		[Token(Token = "0x40024B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x981EA8", Offset = "0x981EA8")]
		private Collider2D <Collider2D>k__BackingField;

		[Token(Token = "0x40024B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool Is2D;

		[Token(Token = "0x40024B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x981EB8", Offset = "0x981EB8")]
		private bool <IsStatic>k__BackingField;

		[Token(Token = "0x40024B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x981EC8", Offset = "0x981EC8")]
		private EFColliderType <ColliderType>k__BackingField;

		[Token(Token = "0x40024B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		protected Vector3 previousPosition;

		[Token(Token = "0x40024B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		protected Quaternion previousRotation;

		[Token(Token = "0x40024B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		protected Vector3 previousScale;

		[Token(Token = "0x17000424")]
		public Transform Transform
		{
			[Token(Token = "0x6002604")]
			[Address(RVA = "0xBFE170", Offset = "0xBFE170", VA = "0xBFE170")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9942A4", Offset = "0x9942A4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002605")]
			[Address(RVA = "0xBFE178", Offset = "0xBFE178", VA = "0xBFE178")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9942B4", Offset = "0x9942B4")]
			protected set
			{
			}
		}

		[Token(Token = "0x17000425")]
		public Collider Collider
		{
			[Token(Token = "0x6002606")]
			[Address(RVA = "0xBFE180", Offset = "0xBFE180", VA = "0xBFE180")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9942C4", Offset = "0x9942C4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002607")]
			[Address(RVA = "0xBFE188", Offset = "0xBFE188", VA = "0xBFE188")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9942D4", Offset = "0x9942D4")]
			protected set
			{
			}
		}

		[Token(Token = "0x17000426")]
		public Collider2D Collider2D
		{
			[Token(Token = "0x6002608")]
			[Address(RVA = "0xBFE190", Offset = "0xBFE190", VA = "0xBFE190")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9942E4", Offset = "0x9942E4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002609")]
			[Address(RVA = "0xBFE198", Offset = "0xBFE198", VA = "0xBFE198")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9942F4", Offset = "0x9942F4")]
			protected set
			{
			}
		}

		[Token(Token = "0x17000427")]
		public bool IsStatic
		{
			[Token(Token = "0x600260A")]
			[Address(RVA = "0xBFE1A0", Offset = "0xBFE1A0", VA = "0xBFE1A0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x994304", Offset = "0x994304")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600260B")]
			[Address(RVA = "0xBFE1A8", Offset = "0xBFE1A8", VA = "0xBFE1A8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x994314", Offset = "0x994314")]
			private set
			{
			}
		}

		[Token(Token = "0x17000428")]
		protected EFColliderType ColliderType
		{
			[Token(Token = "0x600260C")]
			[Address(RVA = "0xBFE1B4", Offset = "0xBFE1B4", VA = "0xBFE1B4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x994324", Offset = "0x994324")]
			set
			{
			}
		}

		[Token(Token = "0x600260D")]
		[Address(RVA = "0xBFE1BC", Offset = "0xBFE1BC", VA = "0xBFE1BC")]
		public static FImp_ColliderData_Base GetColliderDataFor(Collider collider)
		{
			return null;
		}

		[Token(Token = "0x600260E")]
		[Address(RVA = "0xBFE8B0", Offset = "0xBFE8B0", VA = "0xBFE8B0")]
		public static FImp_ColliderData_Base GetColliderDataFor(Collider2D collider)
		{
			return null;
		}

		[Token(Token = "0x600260F")]
		[Address(RVA = "0xBFEE54", Offset = "0xBFEE54", VA = "0xBFEE54", Slot = "4")]
		public virtual void RefreshColliderData()
		{
		}

		[Token(Token = "0x6002610")]
		[Address(RVA = "0xBFEE98", Offset = "0xBFEE98", VA = "0xBFEE98", Slot = "5")]
		public virtual bool PushIfInside(ref Vector3 point, float pointRadius, Vector3 pointOffset)
		{
			return default(bool);
		}

		[Token(Token = "0x6002611")]
		[Address(RVA = "0xBFEF88", Offset = "0xBFEF88", VA = "0xBFEF88")]
		protected FImp_ColliderData_Base()
		{
		}
	}
	[Token(Token = "0x200066E")]
	public class FImp_ColliderData_Box : FImp_ColliderData_Base
	{
		[Token(Token = "0x40024BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x981ED8", Offset = "0x981ED8")]
		private BoxCollider <Box>k__BackingField;

		[Token(Token = "0x40024BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x981EE8", Offset = "0x981EE8")]
		private BoxCollider2D <Box2D>k__BackingField;

		[Token(Token = "0x40024BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Vector3 boxCenter;

		[Token(Token = "0x40024C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private Vector3 right;

		[Token(Token = "0x40024C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Vector3 up;

		[Token(Token = "0x40024C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private Vector3 forward;

		[Token(Token = "0x40024C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Vector3 rightN;

		[Token(Token = "0x40024C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		private Vector3 upN;

		[Token(Token = "0x40024C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private Vector3 forwardN;

		[Token(Token = "0x40024C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		private Vector3 scales;

		[Token(Token = "0x17000429")]
		public BoxCollider Box
		{
			[Token(Token = "0x6002612")]
			[Address(RVA = "0xBFF040", Offset = "0xBFF040", VA = "0xBFF040")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x994334", Offset = "0x994334")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002613")]
			[Address(RVA = "0xBFF048", Offset = "0xBFF048", VA = "0xBFF048")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x994344", Offset = "0x994344")]
			private set
			{
			}
		}

		[Token(Token = "0x1700042A")]
		public BoxCollider2D Box2D
		{
			[Token(Token = "0x6002614")]
			[Address(RVA = "0xBFF050", Offset = "0xBFF050", VA = "0xBFF050")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x994354", Offset = "0x994354")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002615")]
			[Address(RVA = "0xBFF058", Offset = "0xBFF058", VA = "0xBFF058")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x994364", Offset = "0x994364")]
			private set
			{
			}
		}

		[Token(Token = "0x6002616")]
		[Address(RVA = "0xBFE5F8", Offset = "0xBFE5F8", VA = "0xBFE5F8")]
		public FImp_ColliderData_Box(BoxCollider collider)
		{
		}

		[Token(Token = "0x6002617")]
		[Address(RVA = "0xBFEBF8", Offset = "0xBFEBF8", VA = "0xBFEBF8")]
		public FImp_ColliderData_Box(BoxCollider2D collider2D)
		{
		}

		[Token(Token = "0x6002618")]
		[Address(RVA = "0xBFF060", Offset = "0xBFF060", VA = "0xBFF060", Slot = "4")]
		public override void RefreshColliderData()
		{
		}

		[Token(Token = "0x6002619")]
		[Address(RVA = "0xBFF8B8", Offset = "0xBFF8B8", VA = "0xBFF8B8", Slot = "5")]
		public override bool PushIfInside(ref Vector3 segmentPosition, float segmentRadius, Vector3 segmentOffset)
		{
			return default(bool);
		}

		[Token(Token = "0x600261A")]
		[Address(RVA = "0xC009CC", Offset = "0xC009CC", VA = "0xC009CC")]
		public static void PushOutFromBoxCollider(BoxCollider box, Collision collision, float segmentColliderRadius, ref Vector3 segmentPosition, bool is2D = false)
		{
		}

		[Token(Token = "0x600261B")]
		[Address(RVA = "0xC012EC", Offset = "0xC012EC", VA = "0xC012EC")]
		public static void PushOutFromBoxCollider(BoxCollider box, float segmentColliderRadius, ref Vector3 segmentPosition, bool is2D = false)
		{
		}

		[Token(Token = "0x600261C")]
		[Address(RVA = "0xC00DB0", Offset = "0xC00DB0", VA = "0xC00DB0")]
		public static void PushOutFromBoxCollider(BoxCollider box, Collision collision, float segmentColliderRadius, ref Vector3 pos, Vector3 right, Vector3 up, Vector3 forward, Vector3 scales, bool is2D = false)
		{
		}

		[Token(Token = "0x600261D")]
		[Address(RVA = "0xC004F0", Offset = "0xC004F0", VA = "0xC004F0")]
		private Vector3 GetNearestPoint(Vector3 point)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600261E")]
		[Address(RVA = "0xC01DEC", Offset = "0xC01DEC", VA = "0xC01DEC")]
		private static Vector3 GetNearestPoint(Vector3 point, Vector3 boxCenter, Vector3 right, Vector3 up, Vector3 forward, bool is2D = false)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600261F")]
		[Address(RVA = "0xC000B8", Offset = "0xC000B8", VA = "0xC000B8")]
		private static float PlaneDistance(Vector3 planeCenter, Vector3 planeNormal, Vector3 point)
		{
			return default(float);
		}

		[Token(Token = "0x6002620")]
		[Address(RVA = "0xC02964", Offset = "0xC02964", VA = "0xC02964")]
		private static Vector3 ProjectPointOnPlane(Vector3 planeNormal, Vector3 point, float distance)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6002621")]
		[Address(RVA = "0xC00184", Offset = "0xC00184", VA = "0xC00184")]
		private static bool SphereInsidePlane(float planeDistance, float pointRadius)
		{
			return default(bool);
		}

		[Token(Token = "0x6002622")]
		[Address(RVA = "0xC00194", Offset = "0xC00194", VA = "0xC00194")]
		private static bool SphereIntersectsPlane(float planeDistance, float pointRadius)
		{
			return default(bool);
		}

		[Token(Token = "0x6002623")]
		[Address(RVA = "0xC0020C", Offset = "0xC0020C", VA = "0xC0020C")]
		public static bool IsInsideBoxCollider(BoxCollider collider, Vector3 point, bool is2D = false)
		{
			return default(bool);
		}

		[Token(Token = "0x6002624")]
		[Address(RVA = "0xC0038C", Offset = "0xC0038C", VA = "0xC0038C")]
		public static bool IsInsideBoxCollider(BoxCollider2D collider, Vector3 point)
		{
			return default(bool);
		}

		[Token(Token = "0x6002625")]
		[Address(RVA = "0xC0237C", Offset = "0xC0237C", VA = "0xC0237C")]
		protected static float GetBoxAverageScale(BoxCollider box)
		{
			return default(float);
		}

		[Token(Token = "0x6002626")]
		[Address(RVA = "0xBFF690", Offset = "0xBFF690", VA = "0xBFF690")]
		protected static Vector3 GetBoxCenter(BoxCollider box)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6002627")]
		[Address(RVA = "0xBFF788", Offset = "0xBFF788", VA = "0xBFF788")]
		protected static Vector3 GetBoxCenter(BoxCollider2D box)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6002628")]
		[Address(RVA = "0xC02468", Offset = "0xC02468", VA = "0xC02468")]
		protected static Vector3 GetTargetPlaneNormal(BoxCollider boxCollider, Vector3 point, Vector3 right, Vector3 up, Vector3 forward, Vector3 scales, bool is2D = false)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6002629")]
		[Address(RVA = "0xC027AC", Offset = "0xC027AC", VA = "0xC027AC")]
		protected static Vector3 GetIntersectOnBoxFromInside(BoxCollider boxCollider, Vector3 from, Vector3 to, Vector3 planeNormal)
		{
			return default(Vector3);
		}
	}
	[Token(Token = "0x200066F")]
	public class FImp_ColliderData_Capsule : FImp_ColliderData_Base
	{
		[Token(Token = "0x40024C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x981EF8", Offset = "0x981EF8")]
		private CapsuleCollider <Capsule>k__BackingField;

		[Token(Token = "0x40024C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x981F08", Offset = "0x981F08")]
		private CapsuleCollider2D <Capsule2D>k__BackingField;

		[Token(Token = "0x40024C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Vector3 Top;

		[Token(Token = "0x40024CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private Vector3 Bottom;

		[Token(Token = "0x40024CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Vector3 Direction;

		[Token(Token = "0x40024CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private float radius;

		[Token(Token = "0x40024CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private float scaleFactor;

		[Token(Token = "0x40024CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		private float preRadius;

		[Token(Token = "0x1700042B")]
		public CapsuleCollider Capsule
		{
			[Token(Token = "0x600262A")]
			[Address(RVA = "0xC02A50", Offset = "0xC02A50", VA = "0xC02A50")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x994374", Offset = "0x994374")]
			get
			{
				return null;
			}
			[Token(Token = "0x600262B")]
			[Address(RVA = "0xC02A58", Offset = "0xC02A58", VA = "0xC02A58")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x994384", Offset = "0x994384")]
			private set
			{
			}
		}

		[Token(Token = "0x1700042C")]
		public CapsuleCollider2D Capsule2D
		{
			[Token(Token = "0x600262C")]
			[Address(RVA = "0xC02A60", Offset = "0xC02A60", VA = "0xC02A60")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x994394", Offset = "0x994394")]
			get
			{
				return null;
			}
			[Token(Token = "0x600262D")]
			[Address(RVA = "0xC02A68", Offset = "0xC02A68", VA = "0xC02A68")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9943A4", Offset = "0x9943A4")]
			private set
			{
			}
		}

		[Token(Token = "0x600262E")]
		[Address(RVA = "0xBFE538", Offset = "0xBFE538", VA = "0xBFE538")]
		public FImp_ColliderData_Capsule(CapsuleCollider collider)
		{
		}

		[Token(Token = "0x600262F")]
		[Address(RVA = "0xBFEB34", Offset = "0xBFEB34", VA = "0xBFEB34")]
		public FImp_ColliderData_Capsule(CapsuleCollider2D collider)
		{
		}

		[Token(Token = "0x6002630")]
		[Address(RVA = "0xC02E64", Offset = "0xC02E64", VA = "0xC02E64", Slot = "4")]
		public override void RefreshColliderData()
		{
		}

		[Token(Token = "0x6002631")]
		[Address(RVA = "0xC036E0", Offset = "0xC036E0", VA = "0xC036E0", Slot = "5")]
		public override bool PushIfInside(ref Vector3 point, float pointRadius, Vector3 pointOffset)
		{
			return default(bool);
		}

		[Token(Token = "0x6002632")]
		[Address(RVA = "0xC03BFC", Offset = "0xC03BFC", VA = "0xC03BFC")]
		public static bool PushOutFromCapsuleCollider(CapsuleCollider capsule, float segmentColliderRadius, ref Vector3 pos, Vector3 segmentOffset)
		{
			return default(bool);
		}

		[Token(Token = "0x6002633")]
		[Address(RVA = "0xC03730", Offset = "0xC03730", VA = "0xC03730")]
		public static bool PushOutFromCapsuleCollider(float segmentColliderRadius, ref Vector3 segmentPos, Vector3 capSphereCenter1, Vector3 capSphereCenter2, float capsuleRadius, Vector3 segmentOffset, bool is2D = false)
		{
			return default(bool);
		}

		[Token(Token = "0x6002634")]
		[Address(RVA = "0xC02A70", Offset = "0xC02A70", VA = "0xC02A70")]
		protected static void CalculateCapsuleParameters(CapsuleCollider capsule, ref Vector3 direction, ref float trueRadius, ref float scalerFactor)
		{
		}

		[Token(Token = "0x6002635")]
		[Address(RVA = "0xC0308C", Offset = "0xC0308C", VA = "0xC0308C")]
		private static float GetCapsule2DRadius(CapsuleCollider2D capsule)
		{
			return default(float);
		}

		[Token(Token = "0x6002636")]
		[Address(RVA = "0xC03D70", Offset = "0xC03D70", VA = "0xC03D70")]
		private static float GetCapsule2DHeight(CapsuleCollider2D capsule)
		{
			return default(float);
		}

		[Token(Token = "0x6002637")]
		[Address(RVA = "0xC02CA4", Offset = "0xC02CA4", VA = "0xC02CA4")]
		protected static void CalculateCapsuleParameters(CapsuleCollider2D capsule, ref Vector3 direction, ref float trueRadius, ref float scalerFactor)
		{
		}

		[Token(Token = "0x6002638")]
		[Address(RVA = "0xC030D8", Offset = "0xC030D8", VA = "0xC030D8")]
		protected static void GetCapsuleHeadsPositions(CapsuleCollider capsule, ref Vector3 upper, ref Vector3 bottom, Vector3 direction, float radius, float scalerFactor)
		{
		}

		[Token(Token = "0x6002639")]
		[Address(RVA = "0xC033C8", Offset = "0xC033C8", VA = "0xC033C8")]
		protected static void GetCapsuleHeadsPositions(CapsuleCollider2D capsule, ref Vector3 upper, ref Vector3 bottom, Vector3 direction, float radius, float scalerFactor)
		{
		}
	}
	[Token(Token = "0x2000670")]
	public class FImp_ColliderData_Mesh : FImp_ColliderData_Base
	{
		[Token(Token = "0x40024CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x981F18", Offset = "0x981F18")]
		private MeshCollider <Mesh>k__BackingField;

		[Token(Token = "0x40024D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x981F28", Offset = "0x981F28")]
		private PolygonCollider2D <Poly2D>k__BackingField;

		[Token(Token = "0x40024D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private ContactFilter2D filter;

		[Token(Token = "0x40024D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private RaycastHit2D[] r;

		[Token(Token = "0x1700042D")]
		public MeshCollider Mesh
		{
			[Token(Token = "0x600263A")]
			[Address(RVA = "0xC03DBC", Offset = "0xC03DBC", VA = "0xC03DBC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9943B4", Offset = "0x9943B4")]
			get
			{
				return null;
			}
			[Token(Token = "0x600263B")]
			[Address(RVA = "0xC03DC4", Offset = "0xC03DC4", VA = "0xC03DC4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9943C4", Offset = "0x9943C4")]
			private set
			{
			}
		}

		[Token(Token = "0x1700042E")]
		public PolygonCollider2D Poly2D
		{
			[Token(Token = "0x600263C")]
			[Address(RVA = "0xC03DCC", Offset = "0xC03DCC", VA = "0xC03DCC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9943D4", Offset = "0x9943D4")]
			get
			{
				return null;
			}
			[Token(Token = "0x600263D")]
			[Address(RVA = "0xC03DD4", Offset = "0xC03DD4", VA = "0xC03DD4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9943E4", Offset = "0x9943E4")]
			private set
			{
			}
		}

		[Token(Token = "0x600263E")]
		[Address(RVA = "0xBFE77C", Offset = "0xBFE77C", VA = "0xBFE77C")]
		public FImp_ColliderData_Mesh(MeshCollider collider)
		{
		}

		[Token(Token = "0x600263F")]
		[Address(RVA = "0xBFED80", Offset = "0xBFED80", VA = "0xBFED80")]
		public FImp_ColliderData_Mesh(PolygonCollider2D collider)
		{
		}

		[Token(Token = "0x6002640")]
		[Address(RVA = "0xC03DDC", Offset = "0xC03DDC", VA = "0xC03DDC", Slot = "5")]
		public override bool PushIfInside(ref Vector3 segmentPosition, float segmentRadius, Vector3 segmentOffset)
		{
			return default(bool);
		}

		[Token(Token = "0x6002641")]
		[Address(RVA = "0xC04C38", Offset = "0xC04C38", VA = "0xC04C38")]
		public static void PushOutFromMeshCollider(MeshCollider mesh, Collision collision, float segmentColliderRadius, ref Vector3 pos)
		{
		}
	}
	[Token(Token = "0x2000671")]
	public class FImp_ColliderData_Sphere : FImp_ColliderData_Base
	{
		[Token(Token = "0x40024D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x981F38", Offset = "0x981F38")]
		private SphereCollider <Sphere>k__BackingField;

		[Token(Token = "0x40024D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x981F48", Offset = "0x981F48")]
		private CircleCollider2D <Sphere2D>k__BackingField;

		[Token(Token = "0x40024D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private float SphereRadius;

		[Token(Token = "0x1700042F")]
		public SphereCollider Sphere
		{
			[Token(Token = "0x6002642")]
			[Address(RVA = "0xC05070", Offset = "0xC05070", VA = "0xC05070")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9943F4", Offset = "0x9943F4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002643")]
			[Address(RVA = "0xC05078", Offset = "0xC05078", VA = "0xC05078")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x994404", Offset = "0x994404")]
			private set
			{
			}
		}

		[Token(Token = "0x17000430")]
		public CircleCollider2D Sphere2D
		{
			[Token(Token = "0x6002644")]
			[Address(RVA = "0xC05080", Offset = "0xC05080", VA = "0xC05080")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x994414", Offset = "0x994414")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002645")]
			[Address(RVA = "0xC05088", Offset = "0xC05088", VA = "0xC05088")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x994424", Offset = "0x994424")]
			private set
			{
			}
		}

		[Token(Token = "0x6002646")]
		[Address(RVA = "0xBFE4B8", Offset = "0xBFE4B8", VA = "0xBFE4B8")]
		public FImp_ColliderData_Sphere(SphereCollider collider)
		{
		}

		[Token(Token = "0x6002647")]
		[Address(RVA = "0xBFEAAC", Offset = "0xBFEAAC", VA = "0xBFEAAC")]
		public FImp_ColliderData_Sphere(CircleCollider2D collider)
		{
		}

		[Token(Token = "0x6002648")]
		[Address(RVA = "0xC05090", Offset = "0xC05090", VA = "0xC05090", Slot = "4")]
		public override void RefreshColliderData()
		{
		}

		[Token(Token = "0x6002649")]
		[Address(RVA = "0xC05250", Offset = "0xC05250", VA = "0xC05250", Slot = "5")]
		public override bool PushIfInside(ref Vector3 point, float pointRadius, Vector3 pointOffset)
		{
			return default(bool);
		}

		[Token(Token = "0x600264A")]
		[Address(RVA = "0xC057AC", Offset = "0xC057AC", VA = "0xC057AC")]
		public static bool PushOutFromSphereCollider(SphereCollider sphere, float segmentColliderRadius, ref Vector3 segmentPos, Vector3 segmentOffset)
		{
			return default(bool);
		}

		[Token(Token = "0x600264B")]
		[Address(RVA = "0xC05284", Offset = "0xC05284", VA = "0xC05284")]
		public static bool PushOutFromSphereCollider(SphereCollider sphere, float segmentColliderRadius, ref Vector3 segmentPos, float collidingSphereRadius, Vector3 segmentOffset)
		{
			return default(bool);
		}

		[Token(Token = "0x600264C")]
		[Address(RVA = "0xC054F0", Offset = "0xC054F0", VA = "0xC054F0")]
		public static bool PushOutFromSphereCollider(CircleCollider2D sphere, float segmentColliderRadius, ref Vector3 segmentPos, float collidingSphereRadius, Vector3 segmentOffset)
		{
			return default(bool);
		}

		[Token(Token = "0x600264D")]
		[Address(RVA = "0xC0580C", Offset = "0xC0580C", VA = "0xC0580C")]
		public static float CalculateTrueRadiusOfSphereCollider(SphereCollider sphere)
		{
			return default(float);
		}

		[Token(Token = "0x600264E")]
		[Address(RVA = "0xC05184", Offset = "0xC05184", VA = "0xC05184")]
		public static float CalculateTrueRadiusOfSphereCollider(Transform transform, float componentRadius)
		{
			return default(float);
		}
	}
	[Token(Token = "0x2000672")]
	public class FImp_ColliderData_Terrain : FImp_ColliderData_Base
	{
		[Token(Token = "0x40024D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x981F58", Offset = "0x981F58")]
		private TerrainCollider <TerrCollider>k__BackingField;

		[Token(Token = "0x40024D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x981F68", Offset = "0x981F68")]
		private Terrain <TerrainComponent>k__BackingField;

		[Token(Token = "0x17000431")]
		public TerrainCollider TerrCollider
		{
			[Token(Token = "0x600264F")]
			[Address(RVA = "0xC0584C", Offset = "0xC0584C", VA = "0xC0584C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x994434", Offset = "0x994434")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002650")]
			[Address(RVA = "0xC05854", Offset = "0xC05854", VA = "0xC05854")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x994444", Offset = "0x994444")]
			private set
			{
			}
		}

		[Token(Token = "0x17000432")]
		public Terrain TerrainComponent
		{
			[Token(Token = "0x6002651")]
			[Address(RVA = "0xC0585C", Offset = "0xC0585C", VA = "0xC0585C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x994454", Offset = "0x994454")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002652")]
			[Address(RVA = "0xC05864", Offset = "0xC05864", VA = "0xC05864")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x994464", Offset = "0x994464")]
			private set
			{
			}
		}

		[Token(Token = "0x6002653")]
		[Address(RVA = "0xBFE7F0", Offset = "0xBFE7F0", VA = "0xBFE7F0")]
		public FImp_ColliderData_Terrain(TerrainCollider collider)
		{
		}

		[Token(Token = "0x6002654")]
		[Address(RVA = "0xC0586C", Offset = "0xC0586C", VA = "0xC0586C", Slot = "5")]
		public override bool PushIfInside(ref Vector3 segmentPosition, float segmentRadius, Vector3 segmentOffset)
		{
			return default(bool);
		}

		[Token(Token = "0x6002655")]
		[Address(RVA = "0xC05C38", Offset = "0xC05C38", VA = "0xC05C38")]
		public static void PushOutFromTerrain(TerrainCollider terrainCollider, float segmentRadius, ref Vector3 point)
		{
		}
	}
}
namespace FIMSpace.FTools
{
	[Serializable]
	[Token(Token = "0x2000673")]
	public abstract class FIK_ProcessorBase
	{
		[Token(Token = "0x40024D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x981F78", Offset = "0x981F78")]
		public float IKWeight;

		[Token(Token = "0x40024D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public Vector3 IKTargetPosition;

		[Token(Token = "0x40024DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Quaternion IKTargetRotation;

		[Token(Token = "0x40024DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Vector3 LastLocalDirection;

		[Token(Token = "0x40024DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public Vector3 LocalDirection;

		[Token(Token = "0x40024DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		protected float fullLength;

		[Token(Token = "0x40024DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x981F90", Offset = "0x981F90")]
		private bool <Initialized>k__BackingField;

		[Token(Token = "0x40024DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x981FA0", Offset = "0x981FA0")]
		private FIK_IKBoneBase[] <Bones>k__BackingField;

		[Token(Token = "0x17000433")]
		public bool Initialized
		{
			[Token(Token = "0x6002656")]
			[Address(RVA = "0xC9A418", Offset = "0xC9A418", VA = "0xC9A418")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x994474", Offset = "0x994474")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002657")]
			[Address(RVA = "0xC9A420", Offset = "0xC9A420", VA = "0xC9A420")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x994484", Offset = "0x994484")]
			protected set
			{
			}
		}

		[Token(Token = "0x17000434")]
		public FIK_IKBoneBase[] Bones
		{
			[Token(Token = "0x6002658")]
			[Address(RVA = "0xC9A42C", Offset = "0xC9A42C", VA = "0xC9A42C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x994494", Offset = "0x994494")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002659")]
			[Address(RVA = "0xC9A434", Offset = "0xC9A434", VA = "0xC9A434")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9944A4", Offset = "0x9944A4")]
			protected set
			{
			}
		}

		[Token(Token = "0x17000435")]
		public FIK_IKBoneBase StartBone
		{
			[Token(Token = "0x600265A")]
			[Address(RVA = "0xC995C4", Offset = "0xC995C4", VA = "0xC995C4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000436")]
		public FIK_IKBoneBase EndBone
		{
			[Token(Token = "0x600265B")]
			[Address(RVA = "0xC97E68", Offset = "0xC97E68", VA = "0xC97E68")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600265C")]
		[Address(RVA = "0xC9A43C", Offset = "0xC9A43C", VA = "0xC9A43C", Slot = "4")]
		public virtual void Init(Transform root)
		{
		}

		[Token(Token = "0x600265D")]
		[Address(RVA = "0xC9A440", Offset = "0xC9A440", VA = "0xC9A440", Slot = "5")]
		public virtual void Update()
		{
		}

		[Token(Token = "0x600265E")]
		[Address(RVA = "0xC97DC4", Offset = "0xC97DC4", VA = "0xC97DC4")]
		protected FIK_ProcessorBase()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000674")]
	public abstract class FIK_IKBoneBase
	{
		[Token(Token = "0x40024E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x981FB0", Offset = "0x981FB0")]
		private FIK_IKBoneBase <Child>k__BackingField;

		[Token(Token = "0x40024E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x981FC0", Offset = "0x981FC0")]
		private Transform <transform>k__BackingField;

		[Token(Token = "0x40024E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float BoneLength;

		[Token(Token = "0x40024E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float MotionWeight;

		[Token(Token = "0x40024E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Vector3 InitialLocalPosition;

		[Token(Token = "0x40024E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public Quaternion InitialLocalRotation;

		[Token(Token = "0x40024E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public Quaternion LastKeyLocalRotation;

		[Token(Token = "0x17000437")]
		private FIK_IKBoneBase Child
		{
			[Token(Token = "0x600265F")]
			[Address(RVA = "0xC9A400", Offset = "0xC9A400", VA = "0xC9A400")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9944B4", Offset = "0x9944B4")]
			set
			{
			}
		}

		[Token(Token = "0x17000438")]
		public Transform transform
		{
			[Token(Token = "0x6002660")]
			[Address(RVA = "0xC9A408", Offset = "0xC9A408", VA = "0xC9A408")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9944C4", Offset = "0x9944C4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002661")]
			[Address(RVA = "0xC9A410", Offset = "0xC9A410", VA = "0xC9A410")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9944D4", Offset = "0x9944D4")]
			protected set
			{
			}
		}

		[Token(Token = "0x6002662")]
		[Address(RVA = "0xC99BBC", Offset = "0xC99BBC", VA = "0xC99BBC")]
		public FIK_IKBoneBase(Transform t)
		{
		}

		[Token(Token = "0x6002663")]
		[Address(RVA = "0xC99C5C", Offset = "0xC99C5C", VA = "0xC99C5C", Slot = "4")]
		public virtual void SetChild(FIK_IKBoneBase child)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000675")]
	public class FIK_CCDProcessor : FIK_ProcessorBase
	{
		[Serializable]
		[Token(Token = "0x2000676")]
		public class CCDIKBone : FIK_IKBoneBase
		{
			[Token(Token = "0x40024F0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x982040", Offset = "0x982040")]
			private CCDIKBone <IKParent>k__BackingField;

			[Token(Token = "0x40024F1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x982050", Offset = "0x982050")]
			private CCDIKBone <IKChild>k__BackingField;

			[Token(Token = "0x40024F2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x982060", Offset = "0x982060")]
			public float AngleLimit;

			[Token(Token = "0x40024F3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x98207C", Offset = "0x98207C")]
			public float TwistAngleLimit;

			[Token(Token = "0x40024F4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			public Vector3 ForwardOrientation;

			[Token(Token = "0x40024F5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
			public float FrameWorldLength;

			[Token(Token = "0x40024F6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
			public Vector2 HingeLimits;

			[Token(Token = "0x40024F7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
			public Quaternion PreviousHingeRotation;

			[Token(Token = "0x40024F8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
			public float PreviousHingeAngle;

			[Token(Token = "0x40024F9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
			public Vector3 LastIKLocPosition;

			[Token(Token = "0x40024FA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
			public Quaternion LastIKLocRotation;

			[Token(Token = "0x1700043A")]
			public CCDIKBone IKParent
			{
				[Token(Token = "0x6002670")]
				[Address(RVA = "0xC99B9C", Offset = "0xC99B9C", VA = "0xC99B9C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x994504", Offset = "0x994504")]
				get
				{
					return null;
				}
				[Token(Token = "0x6002671")]
				[Address(RVA = "0xC99BA4", Offset = "0xC99BA4", VA = "0xC99BA4")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x994514", Offset = "0x994514")]
				private set
				{
				}
			}

			[Token(Token = "0x1700043B")]
			public CCDIKBone IKChild
			{
				[Token(Token = "0x6002672")]
				[Address(RVA = "0xC99BAC", Offset = "0xC99BAC", VA = "0xC99BAC")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x994524", Offset = "0x994524")]
				get
				{
					return null;
				}
				[Token(Token = "0x6002673")]
				[Address(RVA = "0xC99BB4", Offset = "0xC99BB4", VA = "0xC99BB4")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x994534", Offset = "0x994534")]
				private set
				{
				}
			}

			[Token(Token = "0x6002674")]
			[Address(RVA = "0xC97DD4", Offset = "0xC97DD4", VA = "0xC97DD4")]
			public CCDIKBone(Transform t)
			{
			}

			[Token(Token = "0x6002675")]
			[Address(RVA = "0xC98260", Offset = "0xC98260", VA = "0xC98260")]
			public void Init(CCDIKBone child, CCDIKBone parent)
			{
			}

			[Token(Token = "0x6002676")]
			[Address(RVA = "0xC99C58", Offset = "0xC99C58", VA = "0xC99C58", Slot = "4")]
			public override void SetChild(FIK_IKBoneBase child)
			{
			}

			[Token(Token = "0x6002677")]
			[Address(RVA = "0xC99328", Offset = "0xC99328", VA = "0xC99328")]
			public void AngleLimiting()
			{
			}

			[Token(Token = "0x6002678")]
			[Address(RVA = "0xC99D78", Offset = "0xC99D78", VA = "0xC99D78")]
			private Quaternion LimitSpherical(Quaternion rotation)
			{
				return default(Quaternion);
			}

			[Token(Token = "0x6002679")]
			[Address(RVA = "0xC99F28", Offset = "0xC99F28", VA = "0xC99F28")]
			private Quaternion LimitZ(Quaternion currentRotation)
			{
				return default(Quaternion);
			}

			[Token(Token = "0x600267A")]
			[Address(RVA = "0xC9A150", Offset = "0xC9A150", VA = "0xC9A150")]
			private Quaternion LimitHinge(Quaternion rotation)
			{
				return default(Quaternion);
			}
		}

		[Token(Token = "0x40024E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public CCDIKBone[] IKBones;

		[Token(Token = "0x40024E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public bool ContinousSolving;

		[Token(Token = "0x40024E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x981FD0", Offset = "0x981FD0")]
		public float SyncWithAnimator;

		[Token(Token = "0x40024EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x981FE8", Offset = "0x981FE8")]
		public int ReactionQuality;

		[Token(Token = "0x40024EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x982000", Offset = "0x982000")]
		public float Smoothing;

		[Token(Token = "0x40024EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x982018", Offset = "0x982018")]
		public float MaxStretching;

		[Token(Token = "0x40024ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public AnimationCurve StretchCurve;

		[Token(Token = "0x40024EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public bool Use2D;

		[Token(Token = "0x40024EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x982030", Offset = "0x982030")]
		private float <ActiveLength>k__BackingField;

		[Token(Token = "0x17000439")]
		public float ActiveLength
		{
			[Token(Token = "0x6002664")]
			[Address(RVA = "0xC97B64", Offset = "0xC97B64", VA = "0xC97B64")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9944E4", Offset = "0x9944E4")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6002665")]
			[Address(RVA = "0xC97B6C", Offset = "0xC97B6C", VA = "0xC97B6C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9944F4", Offset = "0x9944F4")]
			private set
			{
			}
		}

		[Token(Token = "0x6002666")]
		[Address(RVA = "0xC97B74", Offset = "0xC97B74", VA = "0xC97B74")]
		public FIK_CCDProcessor(Transform[] bonesChain)
		{
		}

		[Token(Token = "0x6002667")]
		[Address(RVA = "0xC97EA8", Offset = "0xC97EA8", VA = "0xC97EA8", Slot = "4")]
		public override void Init(Transform root)
		{
		}

		[Token(Token = "0x6002668")]
		[Address(RVA = "0xC982DC", Offset = "0xC982DC", VA = "0xC982DC", Slot = "5")]
		public override void Update()
		{
		}

		[Token(Token = "0x6002669")]
		[Address(RVA = "0xC98E48", Offset = "0xC98E48", VA = "0xC98E48")]
		protected Vector3 GetGoalPivotOffset()
		{
			return default(Vector3);
		}

		[Token(Token = "0x600266A")]
		[Address(RVA = "0xC995F8", Offset = "0xC995F8", VA = "0xC995F8")]
		private bool GoalPivotOffsetDetected()
		{
			return default(bool);
		}

		[Token(Token = "0x600266B")]
		[Address(RVA = "0xC991E8", Offset = "0xC991E8", VA = "0xC991E8")]
		private Vector3 RefreshLocalDirection()
		{
			return default(Vector3);
		}

		[Token(Token = "0x600266C")]
		[Address(RVA = "0xC99140", Offset = "0xC99140", VA = "0xC99140")]
		private float GetVelocityDifference()
		{
			return default(float);
		}

		[Token(Token = "0x600266D")]
		[Address(RVA = "0xC998AC", Offset = "0xC998AC", VA = "0xC998AC")]
		public void AutoLimitAngle(float angleLimit = 60f, float twistAngleLimit = 50f)
		{
		}

		[Token(Token = "0x600266E")]
		[Address(RVA = "0xC99A14", Offset = "0xC99A14", VA = "0xC99A14")]
		public void AutoWeightBones(float baseValue = 1f)
		{
		}

		[Token(Token = "0x600266F")]
		[Address(RVA = "0xC99A9C", Offset = "0xC99A9C", VA = "0xC99A9C")]
		public void AutoWeightBones(AnimationCurve weightCurve)
		{
		}
	}
}
namespace FIMSpace.Basics
{
	[Token(Token = "0x2000677")]
	public class FBasic_FreeCameraBehaviour : MonoBehaviour
	{
		[Token(Token = "0x40024FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x982098", Offset = "0x982098")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x982098", Offset = "0x982098")]
		public float SpeedMultiplier;

		[Token(Token = "0x40024FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9820F8", Offset = "0x9820F8")]
		public float AccelerationSmothnessValue;

		[Token(Token = "0x40024FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x982130", Offset = "0x982130")]
		public float RotationSmothnessValue;

		[Token(Token = "0x40024FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float MouseSensitivity;

		[Token(Token = "0x40024FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool NeedRMB;

		[Token(Token = "0x4002500")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float turboModeMultiply;

		[Token(Token = "0x4002501")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Vector3 speeds;

		[Token(Token = "0x4002502")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float ySpeed;

		[Token(Token = "0x4002503")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Vector3 rotation;

		[Token(Token = "0x4002504")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private float turbo;

		[Token(Token = "0x600267B")]
		[Address(RVA = "0xBFD2A8", Offset = "0xBFD2A8", VA = "0xBFD2A8")]
		private void Start()
		{
		}

		[Token(Token = "0x600267C")]
		[Address(RVA = "0xBFD360", Offset = "0xBFD360", VA = "0xBFD360")]
		private void Update()
		{
		}

		[Token(Token = "0x600267D")]
		[Address(RVA = "0xBFD994", Offset = "0xBFD994", VA = "0xBFD994")]
		public void FixedUpdate()
		{
		}

		[Token(Token = "0x600267E")]
		[Address(RVA = "0xBFD9FC", Offset = "0xBFD9FC", VA = "0xBFD9FC")]
		public FBasic_FreeCameraBehaviour()
		{
		}
	}
}
namespace FIMSpace.FTail
{
	[Token(Token = "0x2000678")]
	[AttributeAttribute(Name = "DefaultExecutionOrder", RVA = "0x974A90", Offset = "0x974A90")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x974A90", Offset = "0x974A90")]
	public class TailAnimator2 : MonoBehaviour, IDropHandler, IEventSystemHandler, IFHierarchyIcon
	{
		[Serializable]
		[Token(Token = "0x2000679")]
		public class TailSegment
		{
			[Token(Token = "0x40025DE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x983A68", Offset = "0x983A68")]
			private TailSegment <ParentBone>k__BackingField;

			[Token(Token = "0x40025DF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x983A78", Offset = "0x983A78")]
			private TailSegment <ChildBone>k__BackingField;

			[Token(Token = "0x40025E0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x983A88", Offset = "0x983A88")]
			private Transform <transform>k__BackingField;

			[Token(Token = "0x40025E1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x983A98", Offset = "0x983A98")]
			private int <Index>k__BackingField;

			[Token(Token = "0x40025E2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x983AA8", Offset = "0x983AA8")]
			private float <IndexOverlLength>k__BackingField;

			[Token(Token = "0x40025E3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Vector3 ProceduralPosition;

			[Token(Token = "0x40025E4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			public Vector3 ProceduralPositionWeightBlended;

			[Token(Token = "0x40025E5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public Quaternion TrueTargetRotation;

			[Token(Token = "0x40025E6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			public Quaternion PosRefRotation;

			[Token(Token = "0x40025E7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			public Quaternion PreviousPosReferenceRotation;

			[Token(Token = "0x40025E8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
			public Vector3 PreviousPosition;

			[Token(Token = "0x40025E9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
			public float BlendValue;

			[Token(Token = "0x40025EA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x983AB8", Offset = "0x983AB8")]
			private float <BoneLength>k__BackingField;

			[Token(Token = "0x40025EB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
			public Vector3 BoneDimensionsScaled;

			[Token(Token = "0x40025EC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
			public float BoneLengthScaled;

			[Token(Token = "0x40025ED")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
			public Vector3 InitialLocalPosition;

			[Token(Token = "0x40025EE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
			public Vector3 LocalOffset;

			[Token(Token = "0x40025EF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
			public Quaternion InitialLocalRotation;

			[Token(Token = "0x40025F0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
			public float ColliderRadius;

			[Token(Token = "0x40025F1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
			public bool CollisionContactFlag;

			[Token(Token = "0x40025F2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
			public float CollisionContactRelevancy;

			[Token(Token = "0x40025F3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
			public Collision collisionContacts;

			[Token(Token = "0x40025F4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
			public Vector3 VelocityHelper;

			[Token(Token = "0x40025F5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
			public Quaternion QVelocityHelper;

			[Token(Token = "0x40025F6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
			public Vector3 PreviousPush;

			[Token(Token = "0x40025F7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
			public Quaternion Curving;

			[Token(Token = "0x40025F8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
			public Vector3 Gravity;

			[Token(Token = "0x40025F9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
			public Vector3 GravityLookOffset;

			[Token(Token = "0x40025FA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
			public float LengthMultiplier;

			[Token(Token = "0x40025FB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
			public float PositionSpeed;

			[Token(Token = "0x40025FC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
			public float RotationSpeed;

			[Token(Token = "0x40025FD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
			public float Springiness;

			[Token(Token = "0x40025FE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
			public float Slithery;

			[Token(Token = "0x40025FF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x13C")]
			public float Curling;

			[Token(Token = "0x4002600")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
			public float Slippery;

			[Token(Token = "0x4002601")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x983AC8", Offset = "0x983AC8")]
			private TailCollisionHelper <CollisionHelper>k__BackingField;

			[Token(Token = "0x4002602")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x983AD8", Offset = "0x983AD8")]
			private Vector3 <LastFinalPosition>k__BackingField;

			[Token(Token = "0x4002603")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x15C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x983AE8", Offset = "0x983AE8")]
			private Quaternion <LastFinalRotation>k__BackingField;

			[Token(Token = "0x4002604")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x16C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x983AF8", Offset = "0x983AF8")]
			private float <DeflectionFactor>k__BackingField;

			[Token(Token = "0x4002605")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x983B08", Offset = "0x983B08")]
			private Vector3 <Deflection>k__BackingField;

			[Token(Token = "0x4002606")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x17C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x983B18", Offset = "0x983B18")]
			private float <DeflectionSmooth>k__BackingField;

			[Token(Token = "0x4002607")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
			private float deflectionSmoothVelo;

			[Token(Token = "0x4002608")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x184")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x983B28", Offset = "0x983B28")]
			private Vector3 <DeflectionWorldPosition>k__BackingField;

			[Token(Token = "0x4002609")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x983B38", Offset = "0x983B38")]
			private int <DeflectionRelevancy>k__BackingField;

			[Token(Token = "0x400260A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x983B48", Offset = "0x983B48")]
			private FImp_ColliderData_Base <LatestSelectiveCollision>k__BackingField;

			[Token(Token = "0x17000442")]
			public TailSegment ParentBone
			{
				[Token(Token = "0x60026F4")]
				[Address(RVA = "0xC94B20", Offset = "0xC94B20", VA = "0xC94B20")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x994608", Offset = "0x994608")]
				get
				{
					return null;
				}
				[Token(Token = "0x60026F5")]
				[Address(RVA = "0xC94B28", Offset = "0xC94B28", VA = "0xC94B28")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x994618", Offset = "0x994618")]
				private set
				{
				}
			}

			[Token(Token = "0x17000443")]
			public TailSegment ChildBone
			{
				[Token(Token = "0x60026F6")]
				[Address(RVA = "0xC94B30", Offset = "0xC94B30", VA = "0xC94B30")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x994628", Offset = "0x994628")]
				get
				{
					return null;
				}
				[Token(Token = "0x60026F7")]
				[Address(RVA = "0xC94B38", Offset = "0xC94B38", VA = "0xC94B38")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x994638", Offset = "0x994638")]
				private set
				{
				}
			}

			[Token(Token = "0x17000444")]
			public Transform transform
			{
				[Token(Token = "0x60026F8")]
				[Address(RVA = "0xC94B40", Offset = "0xC94B40", VA = "0xC94B40")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x994648", Offset = "0x994648")]
				get
				{
					return null;
				}
				[Token(Token = "0x60026F9")]
				[Address(RVA = "0xC94B48", Offset = "0xC94B48", VA = "0xC94B48")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x994658", Offset = "0x994658")]
				private set
				{
				}
			}

			[Token(Token = "0x17000445")]
			public int Index
			{
				[Token(Token = "0x60026FA")]
				[Address(RVA = "0xC94B50", Offset = "0xC94B50", VA = "0xC94B50")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x994668", Offset = "0x994668")]
				get
				{
					return default(int);
				}
				[Token(Token = "0x60026FB")]
				[Address(RVA = "0xC94B58", Offset = "0xC94B58", VA = "0xC94B58")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x994678", Offset = "0x994678")]
				private set
				{
				}
			}

			[Token(Token = "0x17000446")]
			public float IndexOverlLength
			{
				[Token(Token = "0x60026FC")]
				[Address(RVA = "0xC94B60", Offset = "0xC94B60", VA = "0xC94B60")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x994688", Offset = "0x994688")]
				get
				{
					return default(float);
				}
				[Token(Token = "0x60026FD")]
				[Address(RVA = "0xC94B68", Offset = "0xC94B68", VA = "0xC94B68")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x994698", Offset = "0x994698")]
				private set
				{
				}
			}

			[Token(Token = "0x17000447")]
			public float BoneLength
			{
				[Token(Token = "0x60026FE")]
				[Address(RVA = "0xC94B70", Offset = "0xC94B70", VA = "0xC94B70")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9946A8", Offset = "0x9946A8")]
				get
				{
					return default(float);
				}
				[Token(Token = "0x60026FF")]
				[Address(RVA = "0xC94B78", Offset = "0xC94B78", VA = "0xC94B78")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9946B8", Offset = "0x9946B8")]
				private set
				{
				}
			}

			[Token(Token = "0x17000448")]
			public TailCollisionHelper CollisionHelper
			{
				[Token(Token = "0x6002700")]
				[Address(RVA = "0xC94B80", Offset = "0xC94B80", VA = "0xC94B80")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9946C8", Offset = "0x9946C8")]
				get
				{
					return null;
				}
				[Token(Token = "0x6002701")]
				[Address(RVA = "0xC94B88", Offset = "0xC94B88", VA = "0xC94B88")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9946D8", Offset = "0x9946D8")]
				internal set
				{
				}
			}

			[Token(Token = "0x17000449")]
			public Quaternion LastKeyframeLocalRotation
			{
				[Token(Token = "0x600270B")]
				[Address(RVA = "0xC95128", Offset = "0xC95128", VA = "0xC95128")]
				get
				{
					return default(Quaternion);
				}
			}

			[Token(Token = "0x1700044A")]
			public Vector3 LastKeyframeLocalPosition
			{
				[Token(Token = "0x600270C")]
				[Address(RVA = "0xC951BC", Offset = "0xC951BC", VA = "0xC951BC")]
				get
				{
					return default(Vector3);
				}
			}

			[Token(Token = "0x1700044B")]
			public Vector3 LastFinalPosition
			{
				[Token(Token = "0x600270D")]
				[Address(RVA = "0xC95250", Offset = "0xC95250", VA = "0xC95250")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9946E8", Offset = "0x9946E8")]
				get
				{
					return default(Vector3);
				}
				[Token(Token = "0x600270E")]
				[Address(RVA = "0xC95260", Offset = "0xC95260", VA = "0xC95260")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9946F8", Offset = "0x9946F8")]
				private set
				{
				}
			}

			[Token(Token = "0x1700044C")]
			public Quaternion LastFinalRotation
			{
				[Token(Token = "0x600270F")]
				[Address(RVA = "0xC95270", Offset = "0xC95270", VA = "0xC95270")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x994708", Offset = "0x994708")]
				get
				{
					return default(Quaternion);
				}
				[Token(Token = "0x6002710")]
				[Address(RVA = "0xC95284", Offset = "0xC95284", VA = "0xC95284")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x994718", Offset = "0x994718")]
				private set
				{
				}
			}

			[Token(Token = "0x1700044D")]
			public float DeflectionFactor
			{
				[Token(Token = "0x6002714")]
				[Address(RVA = "0xC95378", Offset = "0xC95378", VA = "0xC95378")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x994728", Offset = "0x994728")]
				get
				{
					return default(float);
				}
				[Token(Token = "0x6002715")]
				[Address(RVA = "0xC95380", Offset = "0xC95380", VA = "0xC95380")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x994738", Offset = "0x994738")]
				private set
				{
				}
			}

			[Token(Token = "0x1700044E")]
			private Vector3 Deflection
			{
				[Token(Token = "0x6002716")]
				[Address(RVA = "0xC95388", Offset = "0xC95388", VA = "0xC95388")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x994748", Offset = "0x994748")]
				set
				{
				}
			}

			[Token(Token = "0x1700044F")]
			public float DeflectionSmooth
			{
				[Token(Token = "0x6002717")]
				[Address(RVA = "0xC95398", Offset = "0xC95398", VA = "0xC95398")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x994758", Offset = "0x994758")]
				get
				{
					return default(float);
				}
				[Token(Token = "0x6002718")]
				[Address(RVA = "0xC953A0", Offset = "0xC953A0", VA = "0xC953A0")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x994768", Offset = "0x994768")]
				private set
				{
				}
			}

			[Token(Token = "0x17000450")]
			public Vector3 DeflectionWorldPosition
			{
				[Token(Token = "0x6002719")]
				[Address(RVA = "0xC953A8", Offset = "0xC953A8", VA = "0xC953A8")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x994778", Offset = "0x994778")]
				get
				{
					return default(Vector3);
				}
				[Token(Token = "0x600271A")]
				[Address(RVA = "0xC953B8", Offset = "0xC953B8", VA = "0xC953B8")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x994788", Offset = "0x994788")]
				private set
				{
				}
			}

			[Token(Token = "0x17000451")]
			public int DeflectionRelevancy
			{
				[Token(Token = "0x600271B")]
				[Address(RVA = "0xC953C8", Offset = "0xC953C8", VA = "0xC953C8")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x994798", Offset = "0x994798")]
				get
				{
					return default(int);
				}
				[Token(Token = "0x600271C")]
				[Address(RVA = "0xC953D0", Offset = "0xC953D0", VA = "0xC953D0")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9947A8", Offset = "0x9947A8")]
				private set
				{
				}
			}

			[Token(Token = "0x17000452")]
			internal FImp_ColliderData_Base LatestSelectiveCollision
			{
				[Token(Token = "0x600271D")]
				[Address(RVA = "0xC953D8", Offset = "0xC953D8", VA = "0xC953D8")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9947B8", Offset = "0x9947B8")]
				set
				{
				}
			}

			[Token(Token = "0x6002702")]
			[Address(RVA = "0xC94B98", Offset = "0xC94B98", VA = "0xC94B98")]
			public TailSegment()
			{
			}

			[Token(Token = "0x6002703")]
			[Address(RVA = "0xC94DA4", Offset = "0xC94DA4", VA = "0xC94DA4")]
			public TailSegment(Transform transform)
			{
			}

			[Token(Token = "0x6002704")]
			[Address(RVA = "0xC94EF4", Offset = "0xC94EF4", VA = "0xC94EF4")]
			public TailSegment(TailSegment copyFrom)
			{
			}

			[Token(Token = "0x6002705")]
			[Address(RVA = "0xC94EE0", Offset = "0xC94EE0", VA = "0xC94EE0")]
			public void ReInitializeLocalPosRot(Vector3 initLocalPos, Quaternion initLocalRot)
			{
			}

			[Token(Token = "0x6002706")]
			[Address(RVA = "0xC94FAC", Offset = "0xC94FAC", VA = "0xC94FAC")]
			public void SetIndex(int i, int tailSegments)
			{
			}

			[Token(Token = "0x6002707")]
			[Address(RVA = "0xC94FD0", Offset = "0xC94FD0", VA = "0xC94FD0")]
			public void SetParentRef(TailSegment parent)
			{
			}

			[Token(Token = "0x6002708")]
			[Address(RVA = "0xC950CC", Offset = "0xC950CC", VA = "0xC950CC")]
			public void SetChildRef(TailSegment child)
			{
			}

			[Token(Token = "0x6002709")]
			[Address(RVA = "0xC950D4", Offset = "0xC950D4", VA = "0xC950D4")]
			public float GetRadiusScaled()
			{
				return default(float);
			}

			[Token(Token = "0x600270A")]
			[Address(RVA = "0xC9510C", Offset = "0xC9510C", VA = "0xC9510C")]
			internal void Validate()
			{
			}

			[Token(Token = "0x6002711")]
			[Address(RVA = "0xC95298", Offset = "0xC95298", VA = "0xC95298")]
			internal Vector3 ParentToFrontOffset()
			{
				return default(Vector3);
			}

			[Token(Token = "0x6002712")]
			[Address(RVA = "0xC95354", Offset = "0xC95354", VA = "0xC95354")]
			public void RefreshFinalPos(Vector3 pos)
			{
			}

			[Token(Token = "0x6002713")]
			[Address(RVA = "0xC95364", Offset = "0xC95364", VA = "0xC95364")]
			public void RefreshFinalRot(Quaternion rot)
			{
			}

			[Token(Token = "0x600271E")]
			[Address(RVA = "0xC953E8", Offset = "0xC953E8", VA = "0xC953E8")]
			public bool CheckDeflectionState(float zeroWhenLower, float smoothTime, float delta)
			{
				return default(bool);
			}

			[Token(Token = "0x600271F")]
			[Address(RVA = "0xC956F0", Offset = "0xC956F0", VA = "0xC956F0")]
			public bool DeflectionRelevant()
			{
				return default(bool);
			}

			[Token(Token = "0x6002720")]
			[Address(RVA = "0xC9570C", Offset = "0xC9570C", VA = "0xC9570C")]
			public bool? DeflectionRestoreState()
			{
				return null;
			}

			[Token(Token = "0x6002721")]
			[Address(RVA = "0xC957B0", Offset = "0xC957B0", VA = "0xC957B0")]
			internal void ParamsFrom(TailSegment other)
			{
			}

			[Token(Token = "0x6002722")]
			[Address(RVA = "0xC95870", Offset = "0xC95870", VA = "0xC95870")]
			internal void ParamsFromAll(TailSegment other)
			{
			}

			[Token(Token = "0x6002723")]
			[Address(RVA = "0xC9598C", Offset = "0xC9598C", VA = "0xC9598C")]
			public void Reset()
			{
			}
		}

		[Token(Token = "0x200067A")]
		public enum ECollisionSpace
		{
			[Token(Token = "0x400260C")]
			World_Slow,
			[Token(Token = "0x400260D")]
			Selective_Fast
		}

		[Token(Token = "0x200067B")]
		public enum ECollisionMode
		{
			[Token(Token = "0x400260F")]
			m_3DCollision,
			[Token(Token = "0x4002610")]
			m_2DCollision
		}

		[Serializable]
		[Token(Token = "0x200067C")]
		public class IKBoneSettings
		{
			[Token(Token = "0x4002611")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x983B58", Offset = "0x983B58")]
			public float AngleLimit;

			[Token(Token = "0x4002612")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x983B74", Offset = "0x983B74")]
			public float TwistAngleLimit;

			[Token(Token = "0x6002724")]
			[Address(RVA = "0xC94B0C", Offset = "0xC94B0C", VA = "0xC94B0C")]
			public IKBoneSettings()
			{
			}
		}

		[Token(Token = "0x200067D")]
		public enum FEWavingType
		{
			[Token(Token = "0x4002614")]
			Simple,
			[Token(Token = "0x4002615")]
			Advanced
		}

		[Token(Token = "0x200067E")]
		public enum EFDeltaType
		{
			[Token(Token = "0x4002617")]
			DeltaTime,
			[Token(Token = "0x4002618")]
			SmoothDeltaTime,
			[Token(Token = "0x4002619")]
			UnscaledDeltaTime,
			[Token(Token = "0x400261A")]
			FixedDeltaTime,
			[Token(Token = "0x400261B")]
			SafeDelta
		}

		[Token(Token = "0x200067F")]
		public enum EAnimationStyle
		{
			[Token(Token = "0x400261D")]
			Quick,
			[Token(Token = "0x400261E")]
			Accelerating,
			[Token(Token = "0x400261F")]
			Linear
		}

		[Token(Token = "0x2000680")]
		public enum ETailCategory
		{
			[Token(Token = "0x4002621")]
			Setup,
			[Token(Token = "0x4002622")]
			Tweak,
			[Token(Token = "0x4002623")]
			Features,
			[Token(Token = "0x4002624")]
			Shaping
		}

		[Token(Token = "0x2000681")]
		public enum ETailFeaturesCategory
		{
			[Token(Token = "0x4002626")]
			Main,
			[Token(Token = "0x4002627")]
			Collisions,
			[Token(Token = "0x4002628")]
			IK,
			[Token(Token = "0x4002629")]
			Experimental
		}

		[Token(Token = "0x2000682")]
		public enum EFixedMode
		{
			[Token(Token = "0x400262B")]
			None,
			[Token(Token = "0x400262C")]
			Basic,
			[Token(Token = "0x400262D")]
			Late
		}

		[Token(Token = "0x2000683")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x974AE0", Offset = "0x974AE0")]
		private sealed class <>c__DisplayClass44_0
		{
			[Token(Token = "0x400262E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Collider col;

			[Token(Token = "0x6002725")]
			[Address(RVA = "0xC94788", Offset = "0xC94788", VA = "0xC94788")]
			public <>c__DisplayClass44_0()
			{
			}

			[Token(Token = "0x6002726")]
			[Address(RVA = "0xC94790", Offset = "0xC94790", VA = "0xC94790")]
			internal bool <CheckForColliderDuplicatesAndNulls>b__0(Collider o)
			{
				return default(bool);
			}

			[Token(Token = "0x6002727")]
			[Address(RVA = "0xC9480C", Offset = "0xC9480C", VA = "0xC9480C")]
			internal bool <CheckForColliderDuplicatesAndNulls>b__1(Collider o)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x2000684")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x974AF0", Offset = "0x974AF0")]
		private sealed class <>c__DisplayClass45_0
		{
			[Token(Token = "0x400262F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Collider2D col;

			[Token(Token = "0x6002728")]
			[Address(RVA = "0xC94888", Offset = "0xC94888", VA = "0xC94888")]
			public <>c__DisplayClass45_0()
			{
			}

			[Token(Token = "0x6002729")]
			[Address(RVA = "0xC94890", Offset = "0xC94890", VA = "0xC94890")]
			internal bool <CheckForColliderDuplicatesAndNulls2D>b__0(Collider2D o)
			{
				return default(bool);
			}

			[Token(Token = "0x600272A")]
			[Address(RVA = "0xC9490C", Offset = "0xC9490C", VA = "0xC9490C")]
			internal bool <CheckForColliderDuplicatesAndNulls2D>b__1(Collider2D o)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x2000685")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x974B00", Offset = "0x974B00")]
		private sealed class <LateFixed>d__265 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002630")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002631")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002632")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public TailAnimator2 <>4__this;

			[Token(Token = "0x4002633")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private WaitForFixedUpdate <fixedWait>5__2;

			[Token(Token = "0x17000453")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600272E")]
				[Address(RVA = "0xC94A9C", Offset = "0xC94A9C", VA = "0xC94A9C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000454")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002730")]
				[Address(RVA = "0xC94B04", Offset = "0xC94B04", VA = "0xC94B04", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600272B")]
			[Address(RVA = "0xC94988", Offset = "0xC94988", VA = "0xC94988")]
			[DebuggerHidden]
			public <LateFixed>d__265(int <>1__state)
			{
			}

			[Token(Token = "0x600272C")]
			[Address(RVA = "0xC949B4", Offset = "0xC949B4", VA = "0xC949B4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600272D")]
			[Address(RVA = "0xC949B8", Offset = "0xC949B8", VA = "0xC949B8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600272F")]
			[Address(RVA = "0xC94AA4", Offset = "0xC94AA4", VA = "0xC94AA4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4002505")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x982168", Offset = "0x982168")]
		public bool UseCollision;

		[Token(Token = "0x4002506")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9821A0", Offset = "0x9821A0")]
		public ECollisionSpace CollisionSpace;

		[Token(Token = "0x4002507")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ECollisionMode CollisionMode;

		[Token(Token = "0x4002508")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9821D8", Offset = "0x9821D8")]
		public bool CheapCollision;

		[Token(Token = "0x4002509")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x982210", Offset = "0x982210")]
		public bool DynamicWorldCollidersInclusion;

		[Token(Token = "0x400250A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x982248", Offset = "0x982248")]
		public float InclusionRadius;

		[Token(Token = "0x400250B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public bool IgnoreMeshColliders;

		[Token(Token = "0x400250C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public List<Collider> IncludedColliders;

		[Token(Token = "0x400250D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public List<Collider2D> IncludedColliders2D;

		[Token(Token = "0x400250E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x982280", Offset = "0x982280")]
		private List<Component> <DynamicAlwaysInclude>k__BackingField;

		[Token(Token = "0x400250F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		protected List<FImp_ColliderData_Base> IncludedCollidersData;

		[Token(Token = "0x4002510")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		protected List<FImp_ColliderData_Base> CollidersDataToCheck;

		[Token(Token = "0x4002511")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x982290", Offset = "0x982290")]
		public int CollidersType;

		[Token(Token = "0x4002512")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public bool CollideWithOtherTails;

		[Token(Token = "0x4002513")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5D")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9822C8", Offset = "0x9822C8")]
		public bool CollideWithDisabledColliders;

		[Token(Token = "0x4002514")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x982300", Offset = "0x982300")]
		public float CollisionSlippery;

		[Token(Token = "0x4002515")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x982318", Offset = "0x982318")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x982318", Offset = "0x982318")]
		public float ReflectCollision;

		[Token(Token = "0x4002516")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public AnimationCurve CollidersScaleCurve;

		[Token(Token = "0x4002517")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public float CollidersScaleMul;

		[Token(Token = "0x4002518")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x98236C", Offset = "0x98236C")]
		public float CollisionsAutoCurve;

		[Token(Token = "0x4002519")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public List<Collider> IgnoredColliders;

		[Token(Token = "0x400251A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public List<Collider2D> IgnoredColliders2D;

		[Token(Token = "0x400251B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public bool CollidersSameLayer;

		[Token(Token = "0x400251C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x89")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x982384", Offset = "0x982384")]
		public bool CollidersAddRigidbody;

		[Token(Token = "0x400251D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		public float RigidbodyMass;

		[Token(Token = "0x400251E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[FPD_Layers]
		public int CollidersLayer;

		[Token(Token = "0x400251F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		public bool UseSlitheryCurve;

		[Token(Token = "0x4002520")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[AttributeAttribute(Name = "FPD_FixedCurveWindowAttribute", RVA = "0x9823CC", Offset = "0x9823CC")]
		public AnimationCurve SlitheryCurve;

		[Token(Token = "0x4002521")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private float lastSlithery;

		[Token(Token = "0x4002522")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private Keyframe[] lastSlitheryCurvKeys;

		[Token(Token = "0x4002523")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public bool UseCurlingCurve;

		[Token(Token = "0x4002524")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[AttributeAttribute(Name = "FPD_FixedCurveWindowAttribute", RVA = "0x98240C", Offset = "0x98240C")]
		public AnimationCurve CurlingCurve;

		[Token(Token = "0x4002525")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private float lastCurling;

		[Token(Token = "0x4002526")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private Keyframe[] lastCurlingCurvKeys;

		[Token(Token = "0x4002527")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		public bool UseSpringCurve;

		[Token(Token = "0x4002528")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[AttributeAttribute(Name = "FPD_FixedCurveWindowAttribute", RVA = "0x982448", Offset = "0x982448")]
		public AnimationCurve SpringCurve;

		[Token(Token = "0x4002529")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private float lastSpringiness;

		[Token(Token = "0x400252A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private Keyframe[] lastSpringCurvKeys;

		[Token(Token = "0x400252B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		public bool UseSlipperyCurve;

		[Token(Token = "0x400252C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		[AttributeAttribute(Name = "FPD_FixedCurveWindowAttribute", RVA = "0x982484", Offset = "0x982484")]
		public AnimationCurve SlipperyCurve;

		[Token(Token = "0x400252D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		private float lastSlippery;

		[Token(Token = "0x400252E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		private Keyframe[] lastSlipperyCurvKeys;

		[Token(Token = "0x400252F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		public bool UsePosSpeedCurve;

		[Token(Token = "0x4002530")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		[AttributeAttribute(Name = "FPD_FixedCurveWindowAttribute", RVA = "0x9824C0", Offset = "0x9824C0")]
		public AnimationCurve PosCurve;

		[Token(Token = "0x4002531")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		private float lastPosSpeeds;

		[Token(Token = "0x4002532")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		private Keyframe[] lastPosCurvKeys;

		[Token(Token = "0x4002533")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		public bool UseRotSpeedCurve;

		[Token(Token = "0x4002534")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		[AttributeAttribute(Name = "FPD_FixedCurveWindowAttribute", RVA = "0x9824FC", Offset = "0x9824FC")]
		public AnimationCurve RotCurve;

		[Token(Token = "0x4002535")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		private float lastRotSpeeds;

		[Token(Token = "0x4002536")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		private Keyframe[] lastRotCurvKeys;

		[Token(Token = "0x4002537")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x982534", Offset = "0x982534")]
		public bool UsePartialBlend;

		[Token(Token = "0x4002538")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		[AttributeAttribute(Name = "FPD_FixedCurveWindowAttribute", RVA = "0x98256C", Offset = "0x98256C")]
		public AnimationCurve BlendCurve;

		[Token(Token = "0x4002539")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		private float lastTailAnimatorAmount;

		[Token(Token = "0x400253A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		private Keyframe[] lastBlendCurvKeys;

		[Token(Token = "0x400253B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		private TailSegment _ex_bone;

		[Token(Token = "0x400253C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		public bool UseIK;

		[Token(Token = "0x400253D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x179")]
		private bool ikInitialized;

		[Token(Token = "0x400253E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		[SerializeField]
		private FIK_CCDProcessor IK;

		[Token(Token = "0x400253F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9825B4", Offset = "0x9825B4")]
		public Transform IKTarget;

		[Token(Token = "0x4002540")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
		public bool IKAutoWeights;

		[Token(Token = "0x4002541")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x194")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9825EC", Offset = "0x9825EC")]
		public float IKBaseReactionWeight;

		[Token(Token = "0x4002542")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
		[AttributeAttribute(Name = "FPD_FixedCurveWindowAttribute", RVA = "0x982604", Offset = "0x982604")]
		public AnimationCurve IKReactionWeightCurve;

		[Token(Token = "0x4002543")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
		public bool IKAutoAngleLimits;

		[Token(Token = "0x4002544")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A4")]
		[AttributeAttribute(Name = "FPD_SuffixAttribute", RVA = "0x98263C", Offset = "0x98263C")]
		public float IKAutoAngleLimit;

		[Token(Token = "0x4002545")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x98268C", Offset = "0x98268C")]
		public bool IKContinousSolve;

		[Token(Token = "0x4002546")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1AC")]
		[AttributeAttribute(Name = "FPD_SuffixAttribute", RVA = "0x9826C4", Offset = "0x9826C4")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9826C4", Offset = "0x9826C4")]
		public float IKBlend;

		[Token(Token = "0x4002547")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
		[AttributeAttribute(Name = "FPD_SuffixAttribute", RVA = "0x982738", Offset = "0x982738")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x982738", Offset = "0x982738")]
		public float IKAnimatorBlend;

		[Token(Token = "0x4002548")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B4")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9827AC", Offset = "0x9827AC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9827AC", Offset = "0x9827AC")]
		public int IKReactionQuality;

		[Token(Token = "0x4002549")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x982804", Offset = "0x982804")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x982804", Offset = "0x982804")]
		public float IKSmoothing;

		[Token(Token = "0x400254A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1BC")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x982858", Offset = "0x982858")]
		public float IKMaxStretching;

		[Token(Token = "0x400254B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
		[AttributeAttribute(Name = "FPD_FixedCurveWindowAttribute", RVA = "0x982870", Offset = "0x982870")]
		public AnimationCurve IKStretchCurve;

		[Token(Token = "0x400254C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
		public List<IKBoneSettings> IKLimitSettings;

		[Token(Token = "0x400254D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
		private List<TailSegment> _pp_reference;

		[Token(Token = "0x400254E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
		private TailSegment _pp_ref_rootParent;

		[Token(Token = "0x400254F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
		private TailSegment _pp_ref_lastChild;

		[Token(Token = "0x4002550")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
		private bool _pp_initialized;

		[Token(Token = "0x4002551")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1EC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9828A8", Offset = "0x9828A8")]
		public Quaternion RotationOffset;

		[Token(Token = "0x4002552")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1FC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9828E0", Offset = "0x9828E0")]
		public Quaternion Curving;

		[Token(Token = "0x4002553")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x982918", Offset = "0x982918")]
		public bool UseCurvingCurve;

		[Token(Token = "0x4002554")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
		[AttributeAttribute(Name = "FPD_FixedCurveWindowAttribute", RVA = "0x982950", Offset = "0x982950")]
		public AnimationCurve CurvCurve;

		[Token(Token = "0x4002555")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
		private Quaternion lastCurving;

		[Token(Token = "0x4002556")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x228")]
		private Keyframe[] lastCurvingKeys;

		[Token(Token = "0x4002557")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x230")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x982984", Offset = "0x982984")]
		public float LengthMultiplier;

		[Token(Token = "0x4002558")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x234")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9829BC", Offset = "0x9829BC")]
		public bool UseLengthMulCurve;

		[Token(Token = "0x4002559")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x238")]
		[AttributeAttribute(Name = "FPD_FixedCurveWindowAttribute", RVA = "0x9829F4", Offset = "0x9829F4")]
		public AnimationCurve LengthMulCurve;

		[Token(Token = "0x400255A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x240")]
		private float lastLengthMul;

		[Token(Token = "0x400255B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x248")]
		private Keyframe[] lastLengthKeys;

		[Token(Token = "0x400255C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x250")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x982A24", Offset = "0x982A24")]
		public bool UseGravityCurve;

		[Token(Token = "0x400255D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x258")]
		[AttributeAttribute(Name = "FPD_FixedCurveWindowAttribute", RVA = "0x982A5C", Offset = "0x982A5C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x982A5C", Offset = "0x982A5C")]
		public AnimationCurve GravityCurve;

		[Token(Token = "0x400255E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x260")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x982AD0", Offset = "0x982AD0")]
		public Vector3 Gravity;

		[Token(Token = "0x400255F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x26C")]
		private Vector3 lastGravity;

		[Token(Token = "0x4002560")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x278")]
		private Keyframe[] lastGravityKeys;

		[Token(Token = "0x4002561")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x280")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x982B08", Offset = "0x982B08")]
		public bool UseWaving;

		[Token(Token = "0x4002562")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x281")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x982B40", Offset = "0x982B40")]
		public bool CosinusAdd;

		[Token(Token = "0x4002563")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x284")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x982B78", Offset = "0x982B78")]
		public float FixedCycle;

		[Token(Token = "0x4002564")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x288")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x982BB0", Offset = "0x982BB0")]
		public float WavingSpeed;

		[Token(Token = "0x4002565")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x982BE8", Offset = "0x982BE8")]
		public float WavingRange;

		[Token(Token = "0x4002566")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x290")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x982C20", Offset = "0x982C20")]
		public Vector3 WavingAxis;

		[Token(Token = "0x4002567")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x982C58", Offset = "0x982C58")]
		private Quaternion <WavingRotationOffset>k__BackingField;

		[Token(Token = "0x4002568")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2AC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x982C68", Offset = "0x982C68")]
		public FEWavingType WavingType;

		[Token(Token = "0x4002569")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2B0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x982CA0", Offset = "0x982CA0")]
		public float AlternateWave;

		[Token(Token = "0x400256A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2B4")]
		private float _waving_waveTime;

		[Token(Token = "0x400256B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2B8")]
		private float _waving_cosTime;

		[Token(Token = "0x400256C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2BC")]
		private Vector3 _waving_sustain;

		[Token(Token = "0x400256D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C8")]
		public bool UseWind;

		[Token(Token = "0x400256E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2CC")]
		[AttributeAttribute(Name = "FPD_SuffixAttribute", RVA = "0x982CD8", Offset = "0x982CD8")]
		public float WindEffectPower;

		[Token(Token = "0x400256F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2D0")]
		[AttributeAttribute(Name = "FPD_SuffixAttribute", RVA = "0x982D24", Offset = "0x982D24")]
		public float WindTurbulencePower;

		[Token(Token = "0x4002570")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2D4")]
		[AttributeAttribute(Name = "FPD_SuffixAttribute", RVA = "0x982D70", Offset = "0x982D70")]
		public float WindWorldNoisePower;

		[Token(Token = "0x4002571")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2D8")]
		public Vector3 WindEffect;

		[Token(Token = "0x4002572")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2E8")]
		public List<TailSegment> TailSegments;

		[Token(Token = "0x4002573")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2F0")]
		[SerializeField]
		private TailSegment GhostParent;

		[Token(Token = "0x4002574")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2F8")]
		[SerializeField]
		private TailSegment GhostChild;

		[Token(Token = "0x4002575")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x300")]
		private Vector3 _limiting_limitPosition;

		[Token(Token = "0x4002576")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30C")]
		private Vector3 _limiting_influenceOffset;

		[Token(Token = "0x4002577")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x318")]
		private float _limiting_stretchingHelperTooLong;

		[Token(Token = "0x4002578")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31C")]
		private float _limiting_stretchingHelperTooShort;

		[Token(Token = "0x4002579")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x320")]
		private Quaternion _limiting_angle_ToTargetRot;

		[Token(Token = "0x400257A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x330")]
		private Quaternion _limiting_angle_targetInLocal;

		[Token(Token = "0x400257B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x340")]
		private Quaternion _limiting_angle_newLocal;

		[Token(Token = "0x400257C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x350")]
		private Vector3 _tc_segmentGravityOffset;

		[Token(Token = "0x400257D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x35C")]
		private Vector3 _tc_segmentGravityToParentDir;

		[Token(Token = "0x400257E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x368")]
		private Vector3 _tc_preGravOff;

		[Token(Token = "0x400257F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x374")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x982DDC", Offset = "0x982DDC")]
		public bool UseMaxDistance;

		[Token(Token = "0x4002580")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x378")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x982E14", Offset = "0x982E14")]
		public Transform DistanceFrom;

		[Token(Token = "0x4002581")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x380")]
		[HideInInspector]
		public Transform _distanceFrom_Auto;

		[Token(Token = "0x4002582")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x388")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x982E5C", Offset = "0x982E5C")]
		public float MaximumDistance;

		[Token(Token = "0x4002583")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x982E94", Offset = "0x982E94")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x982E94", Offset = "0x982E94")]
		public float MaxOutDistanceFactor;

		[Token(Token = "0x4002584")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x390")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x982EE8", Offset = "0x982EE8")]
		public bool DistanceWithoutY;

		[Token(Token = "0x4002585")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x394")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x982F20", Offset = "0x982F20")]
		public Vector3 DistanceMeasurePoint;

		[Token(Token = "0x4002586")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3A0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x982F58", Offset = "0x982F58")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x982F58", Offset = "0x982F58")]
		public float FadeDuration;

		[Token(Token = "0x4002587")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3A4")]
		private bool maxDistanceExceed;

		[Token(Token = "0x4002588")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3A8")]
		private Transform finalDistanceFrom;

		[Token(Token = "0x4002589")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3B0")]
		private bool wasCameraSearch;

		[Token(Token = "0x400258A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3B4")]
		private float distanceWeight;

		[Token(Token = "0x400258B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3B8")]
		private int _tc_startI;

		[Token(Token = "0x400258C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3BC")]
		private int _tc_startII;

		[Token(Token = "0x400258D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x982FAC", Offset = "0x982FAC")]
		private float <_TC_TailLength>k__BackingField;

		[Token(Token = "0x400258E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C8")]
		private TailSegment _tc_rootBone;

		[Token(Token = "0x400258F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3D0")]
		private Quaternion _tc_lookRot;

		[Token(Token = "0x4002590")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3E0")]
		private Quaternion _tc_targetParentRot;

		[Token(Token = "0x4002591")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3F0")]
		private Quaternion _tc_startBoneRotOffset;

		[Token(Token = "0x4002592")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x400")]
		private float _tc_tangle;

		[Token(Token = "0x4002593")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x404")]
		private float _sg_springVelo;

		[Token(Token = "0x4002594")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x408")]
		private float _sg_curly;

		[Token(Token = "0x4002595")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40C")]
		private Vector3 _sg_push;

		[Token(Token = "0x4002596")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x418")]
		private Vector3 _sg_targetPos;

		[Token(Token = "0x4002597")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x424")]
		private Vector3 _sg_targetChildWorldPosInParentFront;

		[Token(Token = "0x4002598")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x430")]
		private Vector3 _sg_dirToTargetParentFront;

		[Token(Token = "0x4002599")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x43C")]
		private Quaternion _sg_orientation;

		[Token(Token = "0x400259A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44C")]
		private float _sg_slitFactor;

		[Token(Token = "0x400259B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x450")]
		private bool wasDisabled;

		[Token(Token = "0x400259C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x454")]
		private float justDelta;

		[Token(Token = "0x400259D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x458")]
		private float secPeriodDelta;

		[Token(Token = "0x400259E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x45C")]
		private float deltaForLerps;

		[Token(Token = "0x400259F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x460")]
		private float rateDelta;

		[Token(Token = "0x40025A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x464")]
		protected float collectedDelta;

		[Token(Token = "0x40025A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x468")]
		protected int framesToSimulate;

		[Token(Token = "0x40025A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x46C")]
		protected int previousframesToSimulate;

		[Token(Token = "0x40025A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x470")]
		private bool updateTailAnimator;

		[Token(Token = "0x40025A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x474")]
		private int startAfterTPoseCounter;

		[Token(Token = "0x40025A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x478")]
		private bool lateFixedIsRunning;

		[Token(Token = "0x40025A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x479")]
		private bool fixedAllow;

		[Token(Token = "0x40025A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x47C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x982FBC", Offset = "0x982FBC")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x982FBC", Offset = "0x982FBC")]
		public float Deflection;

		[Token(Token = "0x40025A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x480")]
		[AttributeAttribute(Name = "FPD_SuffixAttribute", RVA = "0x983010", Offset = "0x983010")]
		public float DeflectionStartAngle;

		[Token(Token = "0x40025A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x484")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x983060", Offset = "0x983060")]
		public float DeflectionSmooth;

		[Token(Token = "0x40025AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x488")]
		[AttributeAttribute(Name = "FPD_FixedCurveWindowAttribute", RVA = "0x983078", Offset = "0x983078")]
		public AnimationCurve DeflectionFalloff;

		[Token(Token = "0x40025AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x490")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9830B4", Offset = "0x9830B4")]
		public bool DeflectOnlyCollisions;

		[Token(Token = "0x40025AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x498")]
		private List<TailSegment> _defl_source;

		[Token(Token = "0x40025AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4A0")]
		private float _defl_treshold;

		[Token(Token = "0x40025AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4A4")]
		public ETailCategory _Editor_Category;

		[Token(Token = "0x40025AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4A8")]
		public ETailFeaturesCategory _Editor_FeaturesCategory;

		[Token(Token = "0x40025B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4AC")]
		public bool DrawGizmos;

		[Token(Token = "0x40025B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4B0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9830EC", Offset = "0x9830EC")]
		public Transform StartBone;

		[Token(Token = "0x40025B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4B8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x983124", Offset = "0x983124")]
		public Transform EndBone;

		[Token(Token = "0x40025B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x98315C", Offset = "0x98315C")]
		public Vector3 EndBoneJointOffset;

		[Token(Token = "0x40025B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4D0")]
		public List<Transform> _TransformsGhostChain;

		[Token(Token = "0x40025B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4D8")]
		public int _GhostChainInitCount;

		[Token(Token = "0x40025B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4DC")]
		protected bool initialized;

		[Token(Token = "0x40025B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4E0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x983194", Offset = "0x983194")]
		public int UpdateRate;

		[Token(Token = "0x40025B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4E4")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9831CC", Offset = "0x9831CC")]
		public EFixedMode AnimatePhysics;

		[Token(Token = "0x40025B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4E8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x983204", Offset = "0x983204")]
		public bool InterpolateRate;

		[Token(Token = "0x40025BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4E9")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x98323C", Offset = "0x98323C")]
		public bool Prewarm;

		[Token(Token = "0x40025BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4EC")]
		internal float OverrideWeight;

		[Token(Token = "0x40025BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4F0")]
		protected float conditionalWeight;

		[Token(Token = "0x40025BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4F4")]
		protected bool collisionInitialized;

		[Token(Token = "0x40025BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4F5")]
		protected bool forceRefreshCollidersData;

		[Token(Token = "0x40025BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4F8")]
		private Vector3 previousWorldPosition;

		[Token(Token = "0x40025C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x508")]
		protected Transform rootTransform;

		[Token(Token = "0x40025C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x510")]
		protected bool preAutoCorrect;

		[Token(Token = "0x40025C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x514")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x983274", Offset = "0x983274")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x983274", Offset = "0x983274")]
		public float Slithery;

		[Token(Token = "0x40025C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x518")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9832CC", Offset = "0x9832CC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9832CC", Offset = "0x9832CC")]
		public float Curling;

		[Token(Token = "0x40025C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x51C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x983320", Offset = "0x983320")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x983320", Offset = "0x983320")]
		public float Springiness;

		[Token(Token = "0x40025C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x520")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x983374", Offset = "0x983374")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x983374", Offset = "0x983374")]
		public float MaxStretching;

		[Token(Token = "0x40025C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x524")]
		[AttributeAttribute(Name = "FPD_SuffixAttribute", RVA = "0x9833C8", Offset = "0x9833C8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9833C8", Offset = "0x9833C8")]
		public float AngleLimit;

		[Token(Token = "0x40025C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x528")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x983440", Offset = "0x983440")]
		public Vector3 AngleLimitAxis;

		[Token(Token = "0x40025C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x534")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x983478", Offset = "0x983478")]
		public Vector2 LimitAxisRange;

		[Token(Token = "0x40025C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x53C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9834B0", Offset = "0x9834B0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9834B0", Offset = "0x9834B0")]
		public float LimitSmoothing;

		[Token(Token = "0x40025CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x540")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x983504", Offset = "0x983504")]
		[AttributeAttribute(Name = "FPD_SuffixAttribute", RVA = "0x983504", Offset = "0x983504")]
		public float MotionInfluence;

		[Token(Token = "0x40025CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x544")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x983578", Offset = "0x983578")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x983578", Offset = "0x983578")]
		public float MotionInfluenceInY;

		[Token(Token = "0x40025CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x548")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9835CC", Offset = "0x9835CC")]
		public bool IncludeParent;

		[Token(Token = "0x40025CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x983604", Offset = "0x983604")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x983604", Offset = "0x983604")]
		public float UnifyBendiness;

		[Token(Token = "0x40025CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x550")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x983658", Offset = "0x983658")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x983658", Offset = "0x983658")]
		public float ReactionSpeed;

		[Token(Token = "0x40025CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x554")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9836AC", Offset = "0x9836AC")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9836AC", Offset = "0x9836AC")]
		public float Sustain;

		[Token(Token = "0x40025D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x558")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x983700", Offset = "0x983700")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x983700", Offset = "0x983700")]
		public float RotationRelevancy;

		[Token(Token = "0x40025D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x55C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x983754", Offset = "0x983754")]
		public EAnimationStyle SmoothingStyle;

		[Token(Token = "0x40025D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x560")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x98378C", Offset = "0x98378C")]
		public EFDeltaType DeltaType;

		[Token(Token = "0x40025D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x564")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9837C4", Offset = "0x9837C4")]
		public bool UpdateAsLast;

		[Token(Token = "0x40025D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x565")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9837FC", Offset = "0x9837FC")]
		public bool DetectZeroKeyframes;

		[Token(Token = "0x40025D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x566")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x983834", Offset = "0x983834")]
		public bool StartAfterTPose;

		[Token(Token = "0x40025D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x568")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x98386C", Offset = "0x98386C")]
		public Renderer OptimizeWithMesh;

		[Token(Token = "0x40025D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x570")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9838A4", Offset = "0x9838A4")]
		[AttributeAttribute(Name = "FPD_SuffixAttribute", RVA = "0x9838A4", Offset = "0x9838A4")]
		public float TailAnimatorAmount;

		[Token(Token = "0x40025D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x574")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x983918", Offset = "0x983918")]
		public bool DetachChildren;

		[Token(Token = "0x40025D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x578")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x983950", Offset = "0x983950")]
		public int Axis2D;

		[Token(Token = "0x40025DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x57C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x983988", Offset = "0x983988")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x983988", Offset = "0x983988")]
		public float Tangle;

		[Token(Token = "0x40025DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x580")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9839DC", Offset = "0x9839DC")]
		public bool AnimateRoll;

		[Token(Token = "0x40025DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x584")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x983A14", Offset = "0x983A14")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x983A14", Offset = "0x983A14")]
		public float OverrideKeyframeAnimation;

		[Token(Token = "0x40025DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x588")]
		private Transform _baseTransform;

		[Token(Token = "0x1700043C")]
		public List<Component> DynamicAlwaysInclude
		{
			[Token(Token = "0x600267F")]
			[Address(RVA = "0x12B45CC", Offset = "0x12B45CC", VA = "0x12B45CC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x994544", Offset = "0x994544")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002680")]
			[Address(RVA = "0x12B45D4", Offset = "0x12B45D4", VA = "0x12B45D4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x994554", Offset = "0x994554")]
			private set
			{
			}
		}

		[Token(Token = "0x1700043D")]
		public Quaternion WavingRotationOffset
		{
			[Token(Token = "0x60026A5")]
			[Address(RVA = "0x12B9B64", Offset = "0x12B9B64", VA = "0x12B9B64")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x994564", Offset = "0x994564")]
			get
			{
				return default(Quaternion);
			}
			[Token(Token = "0x60026A6")]
			[Address(RVA = "0x12B9B78", Offset = "0x12B9B78", VA = "0x12B9B78")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x994574", Offset = "0x994574")]
			private set
			{
			}
		}

		[Token(Token = "0x1700043E")]
		public float _TC_TailLength
		{
			[Token(Token = "0x60026BC")]
			[Address(RVA = "0x12BE32C", Offset = "0x12BE32C", VA = "0x12BE32C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x994584", Offset = "0x994584")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60026BD")]
			[Address(RVA = "0x12BE334", Offset = "0x12BE334", VA = "0x12BE334")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x994594", Offset = "0x994594")]
			private set
			{
			}
		}

		[Token(Token = "0x1700043F")]
		public string EditorIconPath
		{
			[Token(Token = "0x60026E7")]
			[Address(RVA = "0x12C0C08", Offset = "0x12C0C08", VA = "0x12C0C08", Slot = "6")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000440")]
		public bool IsInitialized
		{
			[Token(Token = "0x60026E9")]
			[Address(RVA = "0x12C0C7C", Offset = "0x12C0C7C", VA = "0x12C0C7C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000441")]
		public Transform BaseTransform
		{
			[Token(Token = "0x60026EC")]
			[Address(RVA = "0x12BBB20", Offset = "0x12BBB20", VA = "0x12BBB20")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002681")]
		[Address(RVA = "0x12B45DC", Offset = "0x12B45DC", VA = "0x12B45DC")]
		private void RefreshSegmentsColliders()
		{
		}

		[Token(Token = "0x6002682")]
		[Address(RVA = "0x12B494C", Offset = "0x12B494C", VA = "0x12B494C")]
		private void BeginCollisionsUpdate()
		{
		}

		[Token(Token = "0x6002683")]
		[Address(RVA = "0x12B4E44", Offset = "0x12B4E44", VA = "0x12B4E44")]
		private void SetupSphereColliders()
		{
		}

		[Token(Token = "0x6002684")]
		[Address(RVA = "0x12B5BB0", Offset = "0x12B5BB0", VA = "0x12B5BB0")]
		internal void CollisionDetection(int index, Collision collision)
		{
		}

		[Token(Token = "0x6002685")]
		[Address(RVA = "0x12B5C38", Offset = "0x12B5C38", VA = "0x12B5C38")]
		internal void ExitCollision(int index)
		{
		}

		[Token(Token = "0x6002686")]
		[Address(RVA = "0x12B5CBC", Offset = "0x12B5CBC", VA = "0x12B5CBC")]
		protected bool UseCollisionContact(int index, ref Vector3 pos)
		{
			return default(bool);
		}

		[Token(Token = "0x6002687")]
		[Address(RVA = "0x12B4B80", Offset = "0x12B4B80", VA = "0x12B4B80")]
		public void RefreshIncludedCollidersDataList()
		{
		}

		[Token(Token = "0x6002688")]
		[Address(RVA = "0x12B63A4", Offset = "0x12B63A4", VA = "0x12B63A4")]
		public bool PushIfSegmentInsideCollider(TailSegment bone, ref Vector3 targetPoint)
		{
			return default(bool);
		}

		[Token(Token = "0x6002689")]
		[Address(RVA = "0x12B4694", Offset = "0x12B4694", VA = "0x12B4694")]
		protected float GetColliderSphereRadiusFor(int i)
		{
			return default(float);
		}

		[Token(Token = "0x600268A")]
		[Address(RVA = "0x12B5918", Offset = "0x12B5918", VA = "0x12B5918")]
		protected float GetColliderSphereRadiusFor(List<Transform> transforms, int i)
		{
			return default(float);
		}

		[Token(Token = "0x600268B")]
		[Address(RVA = "0x12B6610", Offset = "0x12B6610", VA = "0x12B6610")]
		public void AddCollider(Collider collider)
		{
		}

		[Token(Token = "0x600268C")]
		[Address(RVA = "0x12B66A8", Offset = "0x12B66A8", VA = "0x12B66A8")]
		public void AddCollider(Collider2D collider)
		{
		}

		[Token(Token = "0x600268D")]
		[Address(RVA = "0x12B6740", Offset = "0x12B6740", VA = "0x12B6740")]
		public void CheckForColliderDuplicatesAndNulls()
		{
		}

		[Token(Token = "0x600268E")]
		[Address(RVA = "0x12B6984", Offset = "0x12B6984", VA = "0x12B6984")]
		public void CheckForColliderDuplicatesAndNulls2D()
		{
		}

		[Token(Token = "0x600268F")]
		[Address(RVA = "0x12B6B2C", Offset = "0x12B6B2C", VA = "0x12B6B2C")]
		private void TailCalculations_ComputeSegmentCollisions(TailSegment bone, ref Vector3 position)
		{
		}

		[Token(Token = "0x6002690")]
		[Address(RVA = "0x12B6C94", Offset = "0x12B6C94", VA = "0x12B6C94")]
		private void ExpertParamsUpdate()
		{
		}

		[Token(Token = "0x6002691")]
		[Address(RVA = "0x12B7568", Offset = "0x12B7568", VA = "0x12B7568")]
		private void ExpertCurvesEndUpdate()
		{
		}

		[Token(Token = "0x6002692")]
		[Address(RVA = "0x12B6CE0", Offset = "0x12B6CE0", VA = "0x12B6CE0")]
		private void Expert_UpdatePosSpeed()
		{
		}

		[Token(Token = "0x6002693")]
		[Address(RVA = "0x12B6E18", Offset = "0x12B6E18", VA = "0x12B6E18")]
		private void Expert_UpdateRotSpeed()
		{
		}

		[Token(Token = "0x6002694")]
		[Address(RVA = "0x12B6F50", Offset = "0x12B6F50", VA = "0x12B6F50")]
		private void Expert_UpdateSpringiness()
		{
		}

		[Token(Token = "0x6002695")]
		[Address(RVA = "0x12B7088", Offset = "0x12B7088", VA = "0x12B7088")]
		private void Expert_UpdateSlithery()
		{
		}

		[Token(Token = "0x6002696")]
		[Address(RVA = "0x12B71C0", Offset = "0x12B71C0", VA = "0x12B71C0")]
		private void Expert_UpdateCurling()
		{
		}

		[Token(Token = "0x6002697")]
		[Address(RVA = "0x12B72F8", Offset = "0x12B72F8", VA = "0x12B72F8")]
		private void Expert_UpdateSlippery()
		{
		}

		[Token(Token = "0x6002698")]
		[Address(RVA = "0x12B7430", Offset = "0x12B7430", VA = "0x12B7430")]
		private void Expert_UpdateBlending()
		{
		}

		[Token(Token = "0x6002699")]
		[Address(RVA = "0x12B7728", Offset = "0x12B7728", VA = "0x12B7728")]
		private void InitIK()
		{
		}

		[Token(Token = "0x600269A")]
		[Address(RVA = "0x12B7AB0", Offset = "0x12B7AB0", VA = "0x12B7AB0")]
		private void UpdateIK()
		{
		}

		[Token(Token = "0x600269B")]
		[Address(RVA = "0x12B7864", Offset = "0x12B7864", VA = "0x12B7864")]
		public void IK_ApplyLimitBoneSettings()
		{
		}

		[Token(Token = "0x600269C")]
		[Address(RVA = "0x12B7C98", Offset = "0x12B7C98", VA = "0x12B7C98")]
		public void IK_RefreshLimitSettingsContainer()
		{
		}

		[Token(Token = "0x600269D")]
		[Address(RVA = "0x12B7D8C", Offset = "0x12B7D8C", VA = "0x12B7D8C")]
		private bool PostProcessingNeeded()
		{
			return default(bool);
		}

		[Token(Token = "0x600269E")]
		[Address(RVA = "0x12B7E0C", Offset = "0x12B7E0C", VA = "0x12B7E0C")]
		private void PostProcessing_Begin()
		{
		}

		[Token(Token = "0x600269F")]
		[Address(RVA = "0x12B82E0", Offset = "0x12B82E0", VA = "0x12B82E0")]
		private void PostProcessing_ReferenceUpdate()
		{
		}

		[Token(Token = "0x60026A0")]
		[Address(RVA = "0x12B9288", Offset = "0x12B9288", VA = "0x12B9288")]
		private void ShapingParamsUpdate()
		{
		}

		[Token(Token = "0x60026A1")]
		[Address(RVA = "0x12B92B4", Offset = "0x12B92B4", VA = "0x12B92B4")]
		private void Shaping_UpdateCurving()
		{
		}

		[Token(Token = "0x60026A2")]
		[Address(RVA = "0x12B9570", Offset = "0x12B9570", VA = "0x12B9570")]
		private void Shaping_UpdateGravity()
		{
		}

		[Token(Token = "0x60026A3")]
		[Address(RVA = "0x12B995C", Offset = "0x12B995C", VA = "0x12B995C")]
		private void Shaping_UpdateLengthMultiplier()
		{
		}

		[Token(Token = "0x60026A4")]
		[Address(RVA = "0x12B9A80", Offset = "0x12B9A80", VA = "0x12B9A80")]
		private void ShapingEndUpdate()
		{
		}

		[Token(Token = "0x60026A7")]
		[Address(RVA = "0x12B9B8C", Offset = "0x12B9B8C", VA = "0x12B9B8C")]
		private void Waving_Initialize()
		{
		}

		[Token(Token = "0x60026A8")]
		[Address(RVA = "0x12B9C6C", Offset = "0x12B9C6C", VA = "0x12B9C6C")]
		private void Waving_AutoSwingUpdate()
		{
		}

		[Token(Token = "0x60026A9")]
		[Address(RVA = "0x12B9FFC", Offset = "0x12B9FFC", VA = "0x12B9FFC")]
		private void Waving_SustainUpdate()
		{
		}

		[Token(Token = "0x60026AA")]
		[Address(RVA = "0x12BA404", Offset = "0x12BA404", VA = "0x12BA404", Slot = "5")]
		protected virtual void Init()
		{
		}

		[Token(Token = "0x60026AB")]
		[Address(RVA = "0x12BBC14", Offset = "0x12BBC14", VA = "0x12BBC14")]
		public void DetachChildrenTransforms()
		{
		}

		[Token(Token = "0x60026AC")]
		[Address(RVA = "0x12BBD34", Offset = "0x12BBD34", VA = "0x12BBD34")]
		private void InitializePostProcessing()
		{
		}

		[Token(Token = "0x60026AD")]
		[Address(RVA = "0x12BC6C4", Offset = "0x12BC6C4", VA = "0x12BC6C4")]
		protected void StretchingLimiting(TailSegment bone)
		{
		}

		[Token(Token = "0x60026AE")]
		[Address(RVA = "0x12BCA68", Offset = "0x12BCA68", VA = "0x12BCA68")]
		protected Vector3 AngleLimiting(TailSegment child, Vector3 targetPos)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60026AF")]
		[Address(RVA = "0x12BD240", Offset = "0x12BD240", VA = "0x12BD240")]
		private void MotionInfluenceLimiting()
		{
		}

		[Token(Token = "0x60026B0")]
		[Address(RVA = "0x12BD4F4", Offset = "0x12BD4F4", VA = "0x12BD4F4")]
		private void CalculateGravityPositionOffsetForSegment(TailSegment bone)
		{
		}

		[Token(Token = "0x60026B1")]
		[Address(RVA = "0x12BD6A0", Offset = "0x12BD6A0", VA = "0x12BD6A0")]
		private void Axis2DLimit(TailSegment child)
		{
		}

		[Token(Token = "0x60026B2")]
		[Address(RVA = "0x12BD794", Offset = "0x12BD794", VA = "0x12BD794")]
		public float GetDistanceMeasure(Vector3 targetPosition)
		{
			return default(float);
		}

		[Token(Token = "0x60026B3")]
		[Address(RVA = "0x12BD960", Offset = "0x12BD960", VA = "0x12BD960")]
		private void MaxDistanceCalculations()
		{
		}

		[Token(Token = "0x60026B4")]
		[Address(RVA = "0x12BDC2C", Offset = "0x12BDC2C", VA = "0x12BDC2C")]
		private Vector3 TailCalculations_SmoothPosition(Vector3 from, Vector3 to, TailSegment bone)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60026B5")]
		[Address(RVA = "0x12BDDC0", Offset = "0x12BDDC0", VA = "0x12BDDC0")]
		private Vector3 TailCalculations_SmoothPositionLerp(Vector3 from, Vector3 to, float speed)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60026B6")]
		[Address(RVA = "0x12BDC74", Offset = "0x12BDC74", VA = "0x12BDC74")]
		private Vector3 TailCalculations_SmoothPositionSmoothDamp(Vector3 from, Vector3 to, ref Vector3 velo, float speed)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60026B7")]
		[Address(RVA = "0x12BDE80", Offset = "0x12BDE80", VA = "0x12BDE80")]
		private Vector3 TailCalculations_SmoothPositionLinear(Vector3 from, Vector3 to, float speed)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60026B8")]
		[Address(RVA = "0x12BDF4C", Offset = "0x12BDF4C", VA = "0x12BDF4C")]
		private Quaternion TailCalculations_SmoothRotation(Quaternion from, Quaternion to, TailSegment bone)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x60026B9")]
		[Address(RVA = "0x12BE0D8", Offset = "0x12BE0D8", VA = "0x12BE0D8")]
		private Quaternion TailCalculations_SmoothRotationLerp(Quaternion from, Quaternion to, float speed)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x60026BA")]
		[Address(RVA = "0x12BDFAC", Offset = "0x12BDFAC", VA = "0x12BDFAC")]
		private Quaternion TailCalculations_SmoothRotationSmoothDamp(Quaternion from, Quaternion to, ref Quaternion velo, float speed)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x60026BB")]
		[Address(RVA = "0x12BE1FC", Offset = "0x12BE1FC", VA = "0x12BE1FC")]
		private Quaternion TailCalculations_SmoothRotationLinear(Quaternion from, Quaternion to, float speed)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x60026BE")]
		[Address(RVA = "0x12BE33C", Offset = "0x12BE33C", VA = "0x12BE33C")]
		private void TailCalculations_Begin()
		{
		}

		[Token(Token = "0x60026BF")]
		[Address(RVA = "0x12BE4E4", Offset = "0x12BE4E4", VA = "0x12BE4E4")]
		private void TailSegments_UpdateRootFeatures()
		{
		}

		[Token(Token = "0x60026C0")]
		[Address(RVA = "0x12B8AFC", Offset = "0x12B8AFC", VA = "0x12B8AFC")]
		private void TailCalculations_SegmentPreProcessingStack(TailSegment child)
		{
		}

		[Token(Token = "0x60026C1")]
		[Address(RVA = "0x12BE648", Offset = "0x12BE648", VA = "0x12BE648")]
		private void TailCalculations_SegmentPostProcessing(TailSegment bone)
		{
		}

		[Token(Token = "0x60026C2")]
		[Address(RVA = "0x12B8F5C", Offset = "0x12B8F5C", VA = "0x12B8F5C")]
		private void TailCalculations_SegmentRotation(TailSegment child, Vector3 localOffset)
		{
		}

		[Token(Token = "0x60026C3")]
		[Address(RVA = "0x12BEA98", Offset = "0x12BEA98", VA = "0x12BEA98")]
		private void TailCalculations_ApplySegmentMotion(TailSegment child)
		{
		}

		[Token(Token = "0x60026C4")]
		[Address(RVA = "0x12B861C", Offset = "0x12B861C", VA = "0x12B861C")]
		private void TailSegment_PrepareMotionParameters(TailSegment child)
		{
		}

		[Token(Token = "0x60026C5")]
		[Address(RVA = "0x12B84B0", Offset = "0x12B84B0", VA = "0x12B84B0")]
		private void TailSegment_PrepareVelocity(TailSegment child)
		{
		}

		[Token(Token = "0x60026C6")]
		[Address(RVA = "0x12B87FC", Offset = "0x12B87FC", VA = "0x12B87FC")]
		private void TailSegment_BaseSwingProcessing(TailSegment child)
		{
		}

		[Token(Token = "0x60026C7")]
		[Address(RVA = "0x12B8C74", Offset = "0x12B8C74", VA = "0x12B8C74")]
		private void TailSegment_PreRotationPositionBlend(TailSegment child)
		{
		}

		[Token(Token = "0x60026C8")]
		[Address(RVA = "0x12BEDBC", Offset = "0x12BEDBC", VA = "0x12BEDBC")]
		private Quaternion TailSegment_RotationSlithery(TailSegment child)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x60026C9")]
		[Address(RVA = "0x12BEF4C", Offset = "0x12BEF4C", VA = "0x12BEF4C")]
		private Quaternion GetSlitheryReferenceRotation(TailSegment child)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x60026CA")]
		[Address(RVA = "0x12BF06C", Offset = "0x12BF06C", VA = "0x12BF06C")]
		private Quaternion TailSegment_RotationStiff(TailSegment child)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x60026CB")]
		[Address(RVA = "0x12BEB1C", Offset = "0x12BEB1C", VA = "0x12BEB1C")]
		private Quaternion TailSegment_GetSwingRotation(TailSegment child, float curlFactor)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x60026CC")]
		[Address(RVA = "0x12BEC8C", Offset = "0x12BEC8C", VA = "0x12BEC8C")]
		private float TailSegment_GetUnifiedBendinessMultiplier(TailSegment child)
		{
			return default(float);
		}

		[Token(Token = "0x60026CD")]
		[Address(RVA = "0x12B7EE4", Offset = "0x12B7EE4", VA = "0x12B7EE4")]
		public void TailSegments_UpdateCoordsForRootBone(TailSegment parent)
		{
		}

		[Token(Token = "0x60026CE")]
		[Address(RVA = "0x12B8D8C", Offset = "0x12B8D8C", VA = "0x12B8D8C")]
		public void TailCalculations_UpdateArtificialChildBone(TailSegment child)
		{
		}

		[Token(Token = "0x60026CF")]
		[Address(RVA = "0x12BF36C", Offset = "0x12BF36C", VA = "0x12BF36C")]
		public void Editor_TailCalculations_RefreshArtificialParentBone()
		{
		}

		[Token(Token = "0x60026D0")]
		[Address(RVA = "0x12BF4CC", Offset = "0x12BF4CC", VA = "0x12BF4CC")]
		private void SimulateTailMotionFrame(bool pp)
		{
		}

		[Token(Token = "0x60026D1")]
		[Address(RVA = "0x12BF660", Offset = "0x12BF660", VA = "0x12BF660")]
		private void UpdateTailAlgorithm()
		{
		}

		[Token(Token = "0x60026D2")]
		[Address(RVA = "0x12BC36C", Offset = "0x12BC36C", VA = "0x12BC36C")]
		private void CheckIfTailAnimatorShouldBeUpdated()
		{
		}

		[Token(Token = "0x60026D3")]
		[Address(RVA = "0x12BFBFC", Offset = "0x12BFBFC", VA = "0x12BFBFC")]
		private void DeltaTimeCalculations()
		{
		}

		[Token(Token = "0x60026D4")]
		[Address(RVA = "0x12BFE64", Offset = "0x12BFE64", VA = "0x12BFE64")]
		private void StableUpdateRateCalculations()
		{
		}

		[Token(Token = "0x60026D5")]
		[Address(RVA = "0x12BC618", Offset = "0x12BC618", VA = "0x12BC618")]
		private void PreCalibrateBones()
		{
		}

		[Token(Token = "0x60026D6")]
		[Address(RVA = "0x12BFF30", Offset = "0x12BFF30", VA = "0x12BFF30")]
		private void CalibrateBones()
		{
		}

		[Token(Token = "0x60026D7")]
		[Address(RVA = "0x12BFFE0", Offset = "0x12BFFE0", VA = "0x12BFFE0")]
		public void CheckForNullsInGhostChain()
		{
		}

		[Token(Token = "0x60026D8")]
		[Address(RVA = "0x12BFEB0", Offset = "0x12BFEB0", VA = "0x12BFEB0")]
		private float GetClampedSmoothDelta()
		{
			return default(float);
		}

		[Token(Token = "0x60026D9")]
		[Address(RVA = "0x12BF1BC", Offset = "0x12BF1BC", VA = "0x12BF1BC")]
		private Quaternion MultiplyQ(Quaternion rotation, float times)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x60026DA")]
		[Address(RVA = "0x12C0118", Offset = "0x12C0118", VA = "0x12C0118")]
		public float GetValueFromCurve(int i, AnimationCurve c)
		{
			return default(float);
		}

		[Token(Token = "0x60026DB")]
		[Address(RVA = "0x12C01D0", Offset = "0x12C01D0", VA = "0x12C01D0")]
		public AnimationCurve ClampCurve(AnimationCurve a, float timeStart, float timeEnd, float lowest, float highest)
		{
			return null;
		}

		[Token(Token = "0x60026DC")]
		[Address(RVA = "0x12C0340", Offset = "0x12C0340", VA = "0x12C0340")]
		public void RefreshTransformsList()
		{
		}

		[Token(Token = "0x60026DD")]
		[Address(RVA = "0x12C0468", Offset = "0x12C0468", VA = "0x12C0468")]
		public TailSegment GetGhostChild()
		{
			return null;
		}

		[Token(Token = "0x60026DE")]
		[Address(RVA = "0x12C0470", Offset = "0x12C0470", VA = "0x12C0470")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9945A4", Offset = "0x9945A4")]
		private IEnumerator LateFixed()
		{
			return null;
		}

		[Token(Token = "0x60026DF")]
		[Address(RVA = "0x12B81C8", Offset = "0x12B81C8", VA = "0x12B81C8")]
		private void Deflection_BeginUpdate()
		{
		}

		[Token(Token = "0x60026E0")]
		[Address(RVA = "0x12C0598", Offset = "0x12C0598", VA = "0x12C0598")]
		private void Deflection_RemoveDeflectionSource(TailSegment child)
		{
		}

		[Token(Token = "0x60026E1")]
		[Address(RVA = "0x12C04EC", Offset = "0x12C04EC", VA = "0x12C04EC")]
		private void Deflection_AddDeflectionSource(TailSegment child)
		{
		}

		[Token(Token = "0x60026E2")]
		[Address(RVA = "0x12BE6F8", Offset = "0x12BE6F8", VA = "0x12BE6F8")]
		private void Deflection_SegmentOffsetSimple(TailSegment child, ref Vector3 position)
		{
		}

		[Token(Token = "0x60026E3")]
		[Address(RVA = "0x12C0648", Offset = "0x12C0648", VA = "0x12C0648")]
		public void User_SetTailTransforms(List<Transform> list)
		{
		}

		[Token(Token = "0x60026E4")]
		[Address(RVA = "0x12C0710", Offset = "0x12C0710", VA = "0x12C0710")]
		public TailSegment User_AddTailTransform(Transform transform)
		{
			return null;
		}

		[Token(Token = "0x60026E5")]
		[Address(RVA = "0x12C0928", Offset = "0x12C0928", VA = "0x12C0928")]
		public void User_CutEndSegmentsTo(int fromLastTo)
		{
		}

		[Token(Token = "0x60026E6")]
		[Address(RVA = "0x12BFB44", Offset = "0x12BFB44", VA = "0x12BFB44")]
		public void User_ReposeTail()
		{
		}

		[Token(Token = "0x60026E8")]
		[Address(RVA = "0x12C0C78", Offset = "0x12C0C78", VA = "0x12C0C78", Slot = "4")]
		public void OnDrop(PointerEventData data)
		{
		}

		[Token(Token = "0x60026EA")]
		[Address(RVA = "0x12C0C84", Offset = "0x12C0C84", VA = "0x12C0C84")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x60026EB")]
		[Address(RVA = "0x12BB458", Offset = "0x12BB458", VA = "0x12BB458")]
		public void GetGhostChain()
		{
		}

		[Token(Token = "0x60026ED")]
		[Address(RVA = "0x12C0D0C", Offset = "0x12C0D0C", VA = "0x12C0D0C")]
		private void Start()
		{
		}

		[Token(Token = "0x60026EE")]
		[Address(RVA = "0x12C0D78", Offset = "0x12C0D78", VA = "0x12C0D78")]
		private void Reset()
		{
		}

		[Token(Token = "0x60026EF")]
		[Address(RVA = "0x12BC080", Offset = "0x12BC080", VA = "0x12BC080")]
		private void Update()
		{
		}

		[Token(Token = "0x60026F0")]
		[Address(RVA = "0x12C0EF4", Offset = "0x12C0EF4", VA = "0x12C0EF4")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x60026F1")]
		[Address(RVA = "0x12BC0D8", Offset = "0x12BC0D8", VA = "0x12BC0D8")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x60026F2")]
		[Address(RVA = "0x12C0F10", Offset = "0x12C0F10", VA = "0x12C0F10")]
		private void EndUpdate()
		{
		}

		[Token(Token = "0x60026F3")]
		[Address(RVA = "0x12C0F5C", Offset = "0x12C0F5C", VA = "0x12C0F5C")]
		public TailAnimator2()
		{
		}
	}
	[Token(Token = "0x2000686")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x974B10", Offset = "0x974B10")]
	public class TailAnimatorWind : MonoBehaviour, IDropHandler, IEventSystemHandler, IFHierarchyIcon
	{
		[Token(Token = "0x4002634")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static TailAnimatorWind _instance;

		[Token(Token = "0x4002635")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x983B90", Offset = "0x983B90")]
		[AttributeAttribute(Name = "FPD_HeaderAttribute", RVA = "0x983B90", Offset = "0x983B90")]
		public Vector3 overrideWind;

		[Token(Token = "0x4002636")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float power;

		[Token(Token = "0x4002637")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float additionalTurbulence;

		[Token(Token = "0x4002638")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float additionalTurbSpeed;

		[Token(Token = "0x4002639")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x983BFC", Offset = "0x983BFC")]
		[AttributeAttribute(Name = "FPD_HeaderAttribute", RVA = "0x983BFC", Offset = "0x983BFC")]
		public float rapidness;

		[Token(Token = "0x400263A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "FPD_SuffixAttribute", RVA = "0x983C60", Offset = "0x983C60")]
		public float changesPower;

		[Token(Token = "0x400263B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x983CB0", Offset = "0x983CB0")]
		public float turbulenceSpeed;

		[Token(Token = "0x400263C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "FPD_HeaderAttribute", RVA = "0x983CC8", Offset = "0x983CC8")]
		public float worldTurb;

		[Token(Token = "0x400263D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x983D0C", Offset = "0x983D0C")]
		public float worldTurbScale;

		[Token(Token = "0x400263E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public float worldTurbSpeed;

		[Token(Token = "0x400263F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "FPD_HeaderAttribute", RVA = "0x983D44", Offset = "0x983D44")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x983D44", Offset = "0x983D44")]
		public bool powerDependOnTailLength;

		[Token(Token = "0x4002640")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x983DB0", Offset = "0x983DB0")]
		public bool collectFromSceneAtStart;

		[Token(Token = "0x4002641")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public List<TailAnimator2> WindAffected;

		[Token(Token = "0x4002642")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Vector3 targetWind;

		[Token(Token = "0x4002643")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private Vector3 smoothWind;

		[Token(Token = "0x4002644")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Vector3 windVeloHelper;

		[Token(Token = "0x4002645")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private Quaternion windOrientation;

		[Token(Token = "0x4002646")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private Quaternion smoothWindOrient;

		[Token(Token = "0x4002647")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		private Quaternion smoothWindOrientHelper;

		[Token(Token = "0x4002648")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private float[] randNumbers;

		[Token(Token = "0x4002649")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private float[] randTimes;

		[Token(Token = "0x400264A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private float[] randSpeeds;

		[Token(Token = "0x400264B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private int frameOffset;

		[Token(Token = "0x400264C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		private Vector3 finalAddTurbulence;

		[Token(Token = "0x400264D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private Vector3 addTurbHelper;

		[Token(Token = "0x400264E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		private Vector3 smoothAddTurbulence;

		[Token(Token = "0x17000455")]
		public string EditorIconPath
		{
			[Token(Token = "0x6002731")]
			[Address(RVA = "0xC95BD8", Offset = "0xC95BD8", VA = "0xC95BD8", Slot = "5")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000456")]
		public static TailAnimatorWind Instance
		{
			[Token(Token = "0x6002733")]
			[Address(RVA = "0xC95C24", Offset = "0xC95C24", VA = "0xC95C24")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002732")]
		[Address(RVA = "0xC95C20", Offset = "0xC95C20", VA = "0xC95C20", Slot = "4")]
		public void OnDrop(PointerEventData data)
		{
		}

		[Token(Token = "0x6002734")]
		[Address(RVA = "0xC95D50", Offset = "0xC95D50", VA = "0xC95D50")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002735")]
		[Address(RVA = "0xC95CB4", Offset = "0xC95CB4", VA = "0xC95CB4")]
		private static void GenerateWindComponentInstance()
		{
		}

		[Token(Token = "0x6002736")]
		[Address(RVA = "0xC95F44", Offset = "0xC95F44", VA = "0xC95F44")]
		public static void Refresh(TailAnimator2 tail)
		{
		}

		[Token(Token = "0x6002737")]
		[Address(RVA = "0xC960C4", Offset = "0xC960C4", VA = "0xC960C4")]
		private void Update()
		{
		}

		[Token(Token = "0x6002738")]
		[Address(RVA = "0xC96B4C", Offset = "0xC96B4C", VA = "0xC96B4C")]
		private void Start()
		{
		}

		[Token(Token = "0x6002739")]
		[Address(RVA = "0xC964F8", Offset = "0xC964F8", VA = "0xC964F8")]
		private void ComputeWind()
		{
		}

		[Token(Token = "0x600273A")]
		[Address(RVA = "0xC96CCC", Offset = "0xC96CCC", VA = "0xC96CCC")]
		private Vector3 GetAddTurbulence()
		{
			return default(Vector3);
		}

		[Token(Token = "0x600273B")]
		[Address(RVA = "0xC963E8", Offset = "0xC963E8", VA = "0xC963E8")]
		public void GetTailAnimatorsFromScene()
		{
		}

		[Token(Token = "0x600273C")]
		[Address(RVA = "0xC96EEC", Offset = "0xC96EEC", VA = "0xC96EEC")]
		public TailAnimatorWind()
		{
		}
	}
	[Token(Token = "0x2000687")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x974B48", Offset = "0x974B48")]
	public class TailCollisionHelper : MonoBehaviour
	{
		[Token(Token = "0x400264F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public TailAnimator2 ParentTail;

		[Token(Token = "0x4002650")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Collider TailCollider;

		[Token(Token = "0x4002651")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Collider2D TailCollider2D;

		[Token(Token = "0x4002652")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public int Index;

		[Token(Token = "0x4002653")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x983DE8", Offset = "0x983DE8")]
		private Rigidbody <RigBody>k__BackingField;

		[Token(Token = "0x4002654")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x983DF8", Offset = "0x983DF8")]
		private Rigidbody2D <RigBody2D>k__BackingField;

		[Token(Token = "0x4002655")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Transform previousCollision;

		[Token(Token = "0x17000457")]
		internal Rigidbody RigBody
		{
			[Token(Token = "0x600273D")]
			[Address(RVA = "0xC97044", Offset = "0xC97044", VA = "0xC97044")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x994818", Offset = "0x994818")]
			get
			{
				return null;
			}
			[Token(Token = "0x600273E")]
			[Address(RVA = "0xC9704C", Offset = "0xC9704C", VA = "0xC9704C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x994828", Offset = "0x994828")]
			private set
			{
			}
		}

		[Token(Token = "0x17000458")]
		internal Rigidbody2D RigBody2D
		{
			[Token(Token = "0x600273F")]
			[Address(RVA = "0xC97054", Offset = "0xC97054", VA = "0xC97054")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x994838", Offset = "0x994838")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002740")]
			[Address(RVA = "0xC9705C", Offset = "0xC9705C", VA = "0xC9705C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x994848", Offset = "0x994848")]
			private set
			{
			}
		}

		[Token(Token = "0x6002741")]
		[Address(RVA = "0xC97064", Offset = "0xC97064", VA = "0xC97064")]
		internal TailCollisionHelper Init(bool addRigidbody = true, float mass = 1f, bool kinematic = false)
		{
			return null;
		}

		[Token(Token = "0x6002742")]
		[Address(RVA = "0xC9734C", Offset = "0xC9734C", VA = "0xC9734C")]
		private void OnCollisionEnter(Collision collision)
		{
		}

		[Token(Token = "0x6002743")]
		[Address(RVA = "0xC9755C", Offset = "0xC9755C", VA = "0xC9755C")]
		private void OnCollisionExit(Collision collision)
		{
		}

		[Token(Token = "0x6002744")]
		[Address(RVA = "0xC97630", Offset = "0xC97630", VA = "0xC97630")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x6002745")]
		[Address(RVA = "0xC977F4", Offset = "0xC977F4", VA = "0xC977F4")]
		private void OnTriggerExit(Collider other)
		{
		}

		[Token(Token = "0x6002746")]
		[Address(RVA = "0xC978C4", Offset = "0xC978C4", VA = "0xC978C4")]
		private void OnTriggerEnter2D(Collider2D other)
		{
		}

		[Token(Token = "0x6002747")]
		[Address(RVA = "0xC97A8C", Offset = "0xC97A8C", VA = "0xC97A8C")]
		private void OnTriggerExit2D(Collider2D other)
		{
		}

		[Token(Token = "0x6002748")]
		[Address(RVA = "0xC97B5C", Offset = "0xC97B5C", VA = "0xC97B5C")]
		public TailCollisionHelper()
		{
		}
	}
}
namespace FIMSpace.FSpine
{
	[Token(Token = "0x2000688")]
	[AttributeAttribute(Name = "DefaultExecutionOrder", RVA = "0x974B80", Offset = "0x974B80")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x974B80", Offset = "0x974B80")]
	public class FSpineAnimator : MonoBehaviour, IDropHandler, IEventSystemHandler, IFHierarchyIcon
	{
		[Token(Token = "0x2000689")]
		public enum EFSpineEditorCategory
		{
			[Token(Token = "0x40026A7")]
			Setup,
			[Token(Token = "0x40026A8")]
			Tweak,
			[Token(Token = "0x40026A9")]
			Adjust,
			[Token(Token = "0x40026AA")]
			Physical
		}

		[Token(Token = "0x200068A")]
		public enum EFDeltaType
		{
			[Token(Token = "0x40026AC")]
			DeltaTime,
			[Token(Token = "0x40026AD")]
			SmoothDeltaTime,
			[Token(Token = "0x40026AE")]
			UnscaledDeltaTime,
			[Token(Token = "0x40026AF")]
			FixedDeltaTime,
			[Token(Token = "0x40026B0")]
			SafeDelta
		}

		[Token(Token = "0x200068B")]
		public class HeadBone
		{
			[Token(Token = "0x40026B1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Transform baseTransform;

			[Token(Token = "0x40026B2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Transform transform;

			[Token(Token = "0x40026B3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x984758", Offset = "0x984758")]
			private Vector3 <InitialLocalPosition>k__BackingField;

			[Token(Token = "0x40026B4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x984768", Offset = "0x984768")]
			private Quaternion <InitialLocalRotation>k__BackingField;

			[Token(Token = "0x40026B5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private Vector3 snapshotPoseBaseTrSpacePosition;

			[Token(Token = "0x40026B6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public Vector3 SnapshotPosition;

			[Token(Token = "0x40026B7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
			private Quaternion snapshotPoseBaseTrSpaceRotationF;

			[Token(Token = "0x40026B8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
			private Quaternion snapshotPoseBaseTrSpaceRotationB;

			[Token(Token = "0x40026B9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
			public Quaternion snapshotPoseLocalRotation;

			[Token(Token = "0x40026BA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
			public Quaternion SnapshotRotation;

			[Token(Token = "0x1700045C")]
			private Vector3 InitialLocalPosition
			{
				[Token(Token = "0x6002786")]
				[Address(RVA = "0x12B3384", Offset = "0x12B3384", VA = "0x12B3384")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x994858", Offset = "0x994858")]
				set
				{
				}
			}

			[Token(Token = "0x1700045D")]
			private Quaternion InitialLocalRotation
			{
				[Token(Token = "0x6002787")]
				[Address(RVA = "0x12B3390", Offset = "0x12B3390", VA = "0x12B3390")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x994868", Offset = "0x994868")]
				set
				{
				}
			}

			[Token(Token = "0x6002788")]
			[Address(RVA = "0x12B0F48", Offset = "0x12B0F48", VA = "0x12B0F48")]
			public HeadBone(Transform t)
			{
			}

			[Token(Token = "0x6002789")]
			[Address(RVA = "0x12B0F7C", Offset = "0x12B0F7C", VA = "0x12B0F7C")]
			public void PrepareBone(Transform baseTransform, List<SpineBone> bones, int index)
			{
			}

			[Token(Token = "0x600278A")]
			[Address(RVA = "0x12AF120", Offset = "0x12AF120", VA = "0x12AF120")]
			internal Quaternion GetLocalRotationDiff()
			{
				return default(Quaternion);
			}

			[Token(Token = "0x600278B")]
			[Address(RVA = "0x12AF024", Offset = "0x12AF024", VA = "0x12AF024")]
			public void SetCoordsForFrameForward()
			{
			}

			[Token(Token = "0x600278C")]
			[Address(RVA = "0x12AEF04", Offset = "0x12AEF04", VA = "0x12AEF04")]
			public void SetCoordsForFrameBackward()
			{
			}

			[Token(Token = "0x600278D")]
			[Address(RVA = "0x12B339C", Offset = "0x12B339C", VA = "0x12B339C")]
			public void TakePoseSnapshot(Transform targetSpace, List<SpineBone> bones, int index)
			{
			}
		}

		[Serializable]
		[Token(Token = "0x200068C")]
		public class SpineBone
		{
			[Token(Token = "0x40026BB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public bool Collide;

			[Token(Token = "0x40026BC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public float CollisionRadius;

			[Token(Token = "0x40026BD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Vector3 ColliderOffset;

			[Token(Token = "0x40026BE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Transform transform;

			[Token(Token = "0x40026BF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Vector3 ProceduralPosition;

			[Token(Token = "0x40026C0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			public Quaternion ProceduralRotation;

			[Token(Token = "0x40026C1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
			public Vector3 HelperDiffPosition;

			[Token(Token = "0x40026C2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			public Quaternion HelperDiffRoation;

			[Token(Token = "0x40026C3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			public Vector3 PreviousPosition;

			[Token(Token = "0x40026C4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
			public Vector3 DefaultForward;

			[Token(Token = "0x40026C5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
			public float StraightenFactor;

			[Token(Token = "0x40026C6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
			public float TargetStraightenFactor;

			[Token(Token = "0x40026C7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x984778", Offset = "0x984778")]
			private float <BoneLength>k__BackingField;

			[Token(Token = "0x40026C8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
			private float boneLengthB;

			[Token(Token = "0x40026C9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
			private float boneLengthF;

			[Token(Token = "0x40026CA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x984788", Offset = "0x984788")]
			private Vector3 <BoneLocalOffset>k__BackingField;

			[Token(Token = "0x40026CB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
			private Vector3 boneLocalOffsetB;

			[Token(Token = "0x40026CC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
			private Vector3 boneLocalOffsetF;

			[Token(Token = "0x40026CD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
			public float MotionWeight;

			[Token(Token = "0x40026CE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
			public Quaternion FinalRotation;

			[Token(Token = "0x40026CF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
			public Vector3 FinalPosition;

			[Token(Token = "0x40026D0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
			public Vector3 ManualPosOffset;

			[Token(Token = "0x40026D1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
			public Quaternion ManualRotOffset;

			[Token(Token = "0x40026D2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x984798", Offset = "0x984798")]
			private Vector3 <InitialLocalPosition>k__BackingField;

			[Token(Token = "0x40026D3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9847A8", Offset = "0x9847A8")]
			private Quaternion <InitialLocalRotation>k__BackingField;

			[Token(Token = "0x40026D4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
			public Vector3 ReferencePosition;

			[Token(Token = "0x40026D5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
			public Vector3 PreviousReferencePosition;

			[Token(Token = "0x40026D6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
			public Quaternion ReferenceRotation;

			[Token(Token = "0x40026D7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
			private Quaternion lastKeyframeRotation;

			[Token(Token = "0x40026D8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
			private Vector3 lastKeyframePosition;

			[Token(Token = "0x40026D9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x154")]
			private Vector3 lastFinalLocalPosition;

			[Token(Token = "0x40026DA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
			private Quaternion lastFinalLocalRotation;

			[Token(Token = "0x40026DB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
			public Vector3 forward;

			[Token(Token = "0x40026DC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x17C")]
			public Vector3 right;

			[Token(Token = "0x40026DD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
			public Vector3 up;

			[Token(Token = "0x1700045E")]
			public float BoneLength
			{
				[Token(Token = "0x600278F")]
				[Address(RVA = "0x12B38D8", Offset = "0x12B38D8", VA = "0x12B38D8")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x994878", Offset = "0x994878")]
				get
				{
					return default(float);
				}
				[Token(Token = "0x6002790")]
				[Address(RVA = "0x12B38E0", Offset = "0x12B38E0", VA = "0x12B38E0")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x994888", Offset = "0x994888")]
				private set
				{
				}
			}

			[Token(Token = "0x1700045F")]
			private Vector3 BoneLocalOffset
			{
				[Token(Token = "0x6002791")]
				[Address(RVA = "0x12B38E8", Offset = "0x12B38E8", VA = "0x12B38E8")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x994898", Offset = "0x994898")]
				set
				{
				}
			}

			[Token(Token = "0x17000460")]
			public Vector3 InitialLocalPosition
			{
				[Token(Token = "0x6002792")]
				[Address(RVA = "0x12B38F4", Offset = "0x12B38F4", VA = "0x12B38F4")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9948A8", Offset = "0x9948A8")]
				get
				{
					return default(Vector3);
				}
				[Token(Token = "0x6002793")]
				[Address(RVA = "0x12B3900", Offset = "0x12B3900", VA = "0x12B3900")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9948B8", Offset = "0x9948B8")]
				private set
				{
				}
			}

			[Token(Token = "0x17000461")]
			public Quaternion InitialLocalRotation
			{
				[Token(Token = "0x6002794")]
				[Address(RVA = "0x12B390C", Offset = "0x12B390C", VA = "0x12B390C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9948C8", Offset = "0x9948C8")]
				get
				{
					return default(Quaternion);
				}
				[Token(Token = "0x6002795")]
				[Address(RVA = "0x12B3920", Offset = "0x12B3920", VA = "0x12B3920")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9948D8", Offset = "0x9948D8")]
				private set
				{
				}
			}

			[Token(Token = "0x600278E")]
			[Address(RVA = "0x12AC880", Offset = "0x12AC880", VA = "0x12AC880")]
			public float GetCollisionRadiusScaled()
			{
				return default(float);
			}

			[Token(Token = "0x6002796")]
			[Address(RVA = "0x12AF000", Offset = "0x12AF000", VA = "0x12AF000")]
			public void UpdateReferencePosition(Vector3 pos)
			{
			}

			[Token(Token = "0x6002797")]
			[Address(RVA = "0x12B20B8", Offset = "0x12B20B8", VA = "0x12B20B8")]
			public void RefreshFinalLocalPose()
			{
			}

			[Token(Token = "0x6002798")]
			[Address(RVA = "0x12B0FD0", Offset = "0x12B0FD0", VA = "0x12B0FD0")]
			public SpineBone(Transform t)
			{
			}

			[Token(Token = "0x6002799")]
			[Address(RVA = "0x12B0A14", Offset = "0x12B0A14", VA = "0x12B0A14")]
			public void PrepareBone(Transform baseTransform, List<SpineBone> bones, int index)
			{
			}

			[Token(Token = "0x600279A")]
			[Address(RVA = "0x12AE328", Offset = "0x12AE328", VA = "0x12AE328")]
			public void SetDistanceForFrameForward()
			{
			}

			[Token(Token = "0x600279B")]
			[Address(RVA = "0x12AE30C", Offset = "0x12AE30C", VA = "0x12AE30C")]
			public void SetDistanceForFrameBackward()
			{
			}

			[Token(Token = "0x600279C")]
			[Address(RVA = "0x12AE084", Offset = "0x12AE084", VA = "0x12AE084")]
			public float GetUnscalledBoneLength()
			{
				return default(float);
			}

			[Token(Token = "0x600279D")]
			[Address(RVA = "0x12B3934", Offset = "0x12B3934", VA = "0x12B3934")]
			private void PrepareAxes(Transform baseTransform, List<SpineBone> bonesList, int index)
			{
			}

			[Token(Token = "0x600279E")]
			[Address(RVA = "0x12ADC9C", Offset = "0x12ADC9C", VA = "0x12ADC9C")]
			internal void CalculateDifferencePose(Vector3 upAxis, Vector3 rightAxis)
			{
			}

			[Token(Token = "0x600279F")]
			[Address(RVA = "0x12ADF3C", Offset = "0x12ADF3C", VA = "0x12ADF3C")]
			internal void ApplyDifferencePose()
			{
			}
		}

		[Token(Token = "0x200068D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x974BD0", Offset = "0x974BD0")]
		private sealed class <>c__DisplayClass20_0
		{
			[Token(Token = "0x40026DE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Collider col;

			[Token(Token = "0x60027A0")]
			[Address(RVA = "0x12AC5E8", Offset = "0x12AC5E8", VA = "0x12AC5E8")]
			public <>c__DisplayClass20_0()
			{
			}

			[Token(Token = "0x60027A1")]
			[Address(RVA = "0x12B328C", Offset = "0x12B328C", VA = "0x12B328C")]
			internal bool <CheckForColliderDuplicates>b__0(Collider o)
			{
				return default(bool);
			}

			[Token(Token = "0x60027A2")]
			[Address(RVA = "0x12B3308", Offset = "0x12B3308", VA = "0x12B3308")]
			internal bool <CheckForColliderDuplicates>b__1(Collider o)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4002656")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool collisionInitialized;

		[Token(Token = "0x4002657")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		private bool forceRefreshCollidersData;

		[Token(Token = "0x4002658")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x983E08", Offset = "0x983E08")]
		[AttributeAttribute(Name = "FPD_PercentageAttribute", RVA = "0x983E08", Offset = "0x983E08")]
		public float SpineAnimatorAmount;

		[Token(Token = "0x4002659")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Quaternion Rotate180;

		[Token(Token = "0x400265A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int initAfterTPoseCounter;

		[Token(Token = "0x400265B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private bool chainReverseFlag;

		[Token(Token = "0x400265C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public EFSpineEditorCategory _Editor_Category;

		[Token(Token = "0x400265D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public bool _Editor_PivotoffsetXYZ;

		[Token(Token = "0x400265E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3D")]
		private bool _editor_isQuitting;

		[Token(Token = "0x400265F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private int leadingBoneIndex;

		[Token(Token = "0x4002660")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private int chainIndexDirection;

		[Token(Token = "0x4002661")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private int chainIndexOffset;

		[Token(Token = "0x4002662")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		protected float delta;

		[Token(Token = "0x4002663")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		protected float unifiedDelta;

		[Token(Token = "0x4002664")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		protected float elapsedDeltaHelper;

		[Token(Token = "0x4002665")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		protected int updateLoops;

		[Token(Token = "0x4002666")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private bool initialized;

		[Token(Token = "0x4002667")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Vector3 previousPos;

		[Token(Token = "0x4002668")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private bool wasBlendedOut;

		[Token(Token = "0x4002669")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private List<FSpineBoneConnector> connectors;

		[Token(Token = "0x400266A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private float referenceDistance;

		[Token(Token = "0x400266B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		public Vector3 ModelForwardAxis;

		[Token(Token = "0x400266C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public Vector3 ModelForwardAxisScaled;

		[Token(Token = "0x400266D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		public Vector3 ModelUpAxis;

		[Token(Token = "0x400266E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public Vector3 ModelUpAxisScaled;

		[Token(Token = "0x400266F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		internal Vector3 ModelRightAxis;

		[Token(Token = "0x4002670")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		internal Vector3 ModelRightAxisScaled;

		[Token(Token = "0x4002671")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public List<SpineBone> SpineBones;

		[Token(Token = "0x4002672")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		public List<Transform> SpineTransforms;

		[Token(Token = "0x4002673")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private HeadBone frontHead;

		[Token(Token = "0x4002674")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private HeadBone backHead;

		[Token(Token = "0x4002675")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private HeadBone headBone;

		[Token(Token = "0x4002676")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x983E7C", Offset = "0x983E7C")]
		public Transform BaseTransform;

		[Token(Token = "0x4002677")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		public Transform ForwardReference;

		[Token(Token = "0x4002678")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x983EB4", Offset = "0x983EB4")]
		public bool LastBoneLeading;

		[Token(Token = "0x4002679")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x101")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x983EEC", Offset = "0x983EEC")]
		public bool ReverseForward;

		[Token(Token = "0x400267A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x102")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x983F24", Offset = "0x983F24")]
		public bool AnimatePhysics;

		[Token(Token = "0x400267B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		public Transform AnchorRoot;

		[Token(Token = "0x400267C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x983F5C", Offset = "0x983F5C")]
		public Transform HeadAnchor;

		[Token(Token = "0x400267D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x983F94", Offset = "0x983F94")]
		public bool AnimateAnchor;

		[Token(Token = "0x400267E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x983FCC", Offset = "0x983FCC")]
		public Vector3 LeadBoneRotationOffset;

		[Token(Token = "0x400267F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x984004", Offset = "0x984004")]
		public bool LeadBoneOffsetReference;

		[Token(Token = "0x4002680")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x98403C", Offset = "0x98403C")]
		public List<SpineAnimator_FixIKControlledBones> BonesFixers;

		[Token(Token = "0x4002681")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x984074", Offset = "0x984074")]
		public bool UpdateAsLast;

		[Token(Token = "0x4002682")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x139")]
		public bool QueueToLastUpdate;

		[Token(Token = "0x4002683")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x13A")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9840AC", Offset = "0x9840AC")]
		public bool ManualAffectChain;

		[Token(Token = "0x4002684")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x13B")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9840E4", Offset = "0x9840E4")]
		public bool StartAfterTPose;

		[Token(Token = "0x4002685")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x98411C", Offset = "0x98411C")]
		public Renderer OptimizeWithMesh;

		[Token(Token = "0x4002686")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x984154", Offset = "0x984154")]
		public EFDeltaType DeltaType;

		[Token(Token = "0x4002687")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x98418C", Offset = "0x98418C")]
		public float UpdateRate;

		[Token(Token = "0x4002688")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9841C4", Offset = "0x9841C4")]
		public bool UseCorrections;

		[Token(Token = "0x4002689")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x154")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9841FC", Offset = "0x9841FC")]
		public Vector3 MainPivotOffset;

		[Token(Token = "0x400268A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x984234", Offset = "0x984234")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x984234", Offset = "0x984234")]
		public float PosSmoother;

		[Token(Token = "0x400268B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x164")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x984288", Offset = "0x984288")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x984288", Offset = "0x984288")]
		public float RotSmoother;

		[Token(Token = "0x400268C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9842DC", Offset = "0x9842DC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9842DC", Offset = "0x9842DC")]
		public float MaxStretching;

		[Token(Token = "0x400268D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x16C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x984330", Offset = "0x984330")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x984330", Offset = "0x984330")]
		public float Slithery;

		[Token(Token = "0x400268E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x984384", Offset = "0x984384")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x984384", Offset = "0x984384")]
		public float AngleLimit;

		[Token(Token = "0x400268F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x174")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9843DC", Offset = "0x9843DC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9843DC", Offset = "0x9843DC")]
		public float LimitSmoother;

		[Token(Token = "0x4002690")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x984430", Offset = "0x984430")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x984430", Offset = "0x984430")]
		public float StraightenSpeed;

		[Token(Token = "0x4002691")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x17C")]
		public bool TurboStraighten;

		[Token(Token = "0x4002692")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x984484", Offset = "0x984484")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x984484", Offset = "0x984484")]
		public float GoBackSpeed;

		[Token(Token = "0x4002693")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x184")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9844D8", Offset = "0x9844D8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9844D8", Offset = "0x9844D8")]
		public float Springiness;

		[Token(Token = "0x4002694")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x98452C", Offset = "0x98452C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x98452C", Offset = "0x98452C")]
		public float MotionInfluence;

		[Token(Token = "0x4002695")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x984580", Offset = "0x984580")]
		public Transform MotionSpace;

		[Token(Token = "0x4002696")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
		[SerializeField]
		[HideInInspector]
		private Transform mainPivotOffsetTransform;

		[Token(Token = "0x4002697")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9845F0", Offset = "0x9845F0")]
		public Vector3 SegmentsPivotOffset;

		[Token(Token = "0x4002698")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1AC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x984628", Offset = "0x984628")]
		public float DistancesMultiplier;

		[Token(Token = "0x4002699")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x984660", Offset = "0x984660")]
		public Vector3 GravityPower;

		[Token(Token = "0x400269A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1BC")]
		protected Vector3 gravityScale;

		[Token(Token = "0x400269B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x984698", Offset = "0x984698")]
		public bool UseCollisions;

		[Token(Token = "0x400269C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
		public List<Collider> IncludedColliders;

		[Token(Token = "0x400269D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
		protected List<FImp_ColliderData_Base> IncludedCollidersData;

		[Token(Token = "0x400269E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
		protected List<FImp_ColliderData_Base> CollidersDataToCheck;

		[Token(Token = "0x400269F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9846D0", Offset = "0x9846D0")]
		public bool UseTruePosition;

		[Token(Token = "0x40026A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1EC")]
		public Vector3 OffsetAllColliders;

		[Token(Token = "0x40026A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
		public AnimationCurve CollidersScale;

		[Token(Token = "0x40026A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
		public float CollidersScaleMul;

		[Token(Token = "0x40026A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x204")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x984708", Offset = "0x984708")]
		public float DifferenceScaleFactor;

		[Token(Token = "0x40026A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x984720", Offset = "0x984720")]
		public bool DetailedCollision;

		[Token(Token = "0x40026A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x209")]
		private bool updateSpineAnimator;

		[Token(Token = "0x17000459")]
		public string EditorIconPath
		{
			[Token(Token = "0x600276F")]
			[Address(RVA = "0x12B257C", Offset = "0x12B257C", VA = "0x12B257C", Slot = "5")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700045A")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x9956C0", Offset = "0x9956C0")]
		public float BlendToOriginal
		{
			[Token(Token = "0x600277C")]
			[Address(RVA = "0x12B2B38", Offset = "0x12B2B38", VA = "0x12B2B38")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600277D")]
			[Address(RVA = "0x12B2B48", Offset = "0x12B2B48", VA = "0x12B2B48")]
			set
			{
			}
		}

		[Token(Token = "0x1700045B")]
		public bool EndBoneIsHead
		{
			[Token(Token = "0x600277E")]
			[Address(RVA = "0x12B2B58", Offset = "0x12B2B58", VA = "0x12B2B58")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600277F")]
			[Address(RVA = "0x12B2B60", Offset = "0x12B2B60", VA = "0x12B2B60")]
			set
			{
			}
		}

		[Token(Token = "0x6002749")]
		[Address(RVA = "0x12AA57C", Offset = "0x12AA57C", VA = "0x12AA57C")]
		private void RemovePivotOffset()
		{
		}

		[Token(Token = "0x600274A")]
		[Address(RVA = "0x12AA728", Offset = "0x12AA728", VA = "0x12AA728")]
		public void UpdatePivotOffsetState()
		{
		}

		[Token(Token = "0x600274B")]
		[Address(RVA = "0x12AA694", Offset = "0x12AA694", VA = "0x12AA694")]
		private void RestoreBasePivotChildren()
		{
		}

		[Token(Token = "0x600274C")]
		[Address(RVA = "0x12AAB40", Offset = "0x12AAB40", VA = "0x12AAB40")]
		private void PreMotionBoneOffsets()
		{
		}

		[Token(Token = "0x600274D")]
		[Address(RVA = "0x12AAB84", Offset = "0x12AAB84", VA = "0x12AAB84")]
		private void PreMotionNoHead()
		{
		}

		[Token(Token = "0x600274E")]
		[Address(RVA = "0x12AAC68", Offset = "0x12AAC68", VA = "0x12AAC68")]
		private void PreMotionHead()
		{
		}

		[Token(Token = "0x600274F")]
		[Address(RVA = "0x12AB100", Offset = "0x12AB100", VA = "0x12AB100")]
		private void SegmentPreOffset(int i)
		{
		}

		[Token(Token = "0x6002750")]
		[Address(RVA = "0x12AACAC", Offset = "0x12AACAC", VA = "0x12AACAC")]
		private void SegmentPreOffsetWithPivot(int i)
		{
		}

		[Token(Token = "0x6002751")]
		[Address(RVA = "0x12AB3E0", Offset = "0x12AB3E0", VA = "0x12AB3E0")]
		private void PostMotionBoneOffsets()
		{
		}

		[Token(Token = "0x6002752")]
		[Address(RVA = "0x12AB468", Offset = "0x12AB468", VA = "0x12AB468")]
		private void PostMotionNoHead()
		{
		}

		[Token(Token = "0x6002753")]
		[Address(RVA = "0x12AB424", Offset = "0x12AB424", VA = "0x12AB424")]
		private void PostMotionHead()
		{
		}

		[Token(Token = "0x6002754")]
		[Address(RVA = "0x12AB94C", Offset = "0x12AB94C", VA = "0x12AB94C")]
		private void SegmentPostOffset(int i)
		{
		}

		[Token(Token = "0x6002755")]
		[Address(RVA = "0x12AB54C", Offset = "0x12AB54C", VA = "0x12AB54C")]
		private void SegmentPostOffsetWithPivot(int i)
		{
		}

		[Token(Token = "0x6002756")]
		[Address(RVA = "0x12ABBF4", Offset = "0x12ABBF4", VA = "0x12ABBF4")]
		private void BeginPhysicsUpdate()
		{
		}

		[Token(Token = "0x6002757")]
		[Address(RVA = "0x12ABF14", Offset = "0x12ABF14", VA = "0x12ABF14")]
		public void RefreshCollidersDataList()
		{
		}

		[Token(Token = "0x6002758")]
		[Address(RVA = "0x12AC0A0", Offset = "0x12AC0A0", VA = "0x12AC0A0")]
		private float GetColliderSphereRadiusFor(int i)
		{
			return default(float);
		}

		[Token(Token = "0x6002759")]
		[Address(RVA = "0x12AC3A8", Offset = "0x12AC3A8", VA = "0x12AC3A8")]
		public void AddCollider(Collider collider)
		{
		}

		[Token(Token = "0x600275A")]
		[Address(RVA = "0x12ABE30", Offset = "0x12ABE30", VA = "0x12ABE30")]
		private void InitColliders()
		{
		}

		[Token(Token = "0x600275B")]
		[Address(RVA = "0x12AC440", Offset = "0x12AC440", VA = "0x12AC440")]
		public void CheckForColliderDuplicates()
		{
		}

		[Token(Token = "0x600275C")]
		[Address(RVA = "0x12AC5F0", Offset = "0x12AC5F0", VA = "0x12AC5F0")]
		public void PushIfSegmentInsideCollider(SpineBone bone, ref Vector3 targetPoint)
		{
		}

		[Token(Token = "0x600275D")]
		[Address(RVA = "0x12AC8B8", Offset = "0x12AC8B8", VA = "0x12AC8B8")]
		private void CalculateBonesCoordinates()
		{
		}

		[Token(Token = "0x600275E")]
		[Address(RVA = "0x12AD39C", Offset = "0x12AD39C", VA = "0x12AD39C")]
		private void CalculateTargetBonePosition(int index)
		{
		}

		[Token(Token = "0x600275F")]
		[Address(RVA = "0x12ACA5C", Offset = "0x12ACA5C", VA = "0x12ACA5C")]
		private void CalculateTargetBoneRotation(int index)
		{
		}

		[Token(Token = "0x6002760")]
		[Address(RVA = "0x12AE17C", Offset = "0x12AE17C", VA = "0x12AE17C")]
		private void UpdateChainIndexHelperVariables()
		{
		}

		[Token(Token = "0x6002761")]
		[Address(RVA = "0x12AE344", Offset = "0x12AE344", VA = "0x12AE344")]
		private void RefreshReferencePose()
		{
		}

		[Token(Token = "0x6002762")]
		[Address(RVA = "0x12AF208", Offset = "0x12AF208", VA = "0x12AF208")]
		private void ReposeSpine()
		{
		}

		[Token(Token = "0x6002763")]
		[Address(RVA = "0x12AF4B8", Offset = "0x12AF4B8", VA = "0x12AF4B8")]
		private void BeginBaseBonesUpdate()
		{
		}

		[Token(Token = "0x6002764")]
		[Address(RVA = "0x12AF830", Offset = "0x12AF830", VA = "0x12AF830")]
		public void OnDestroy()
		{
		}

		[Token(Token = "0x6002765")]
		[Address(RVA = "0x12AF834", Offset = "0x12AF834", VA = "0x12AF834")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x6002766")]
		[Address(RVA = "0x12AF954", Offset = "0x12AF954", VA = "0x12AF954")]
		public void AddConnector(FSpineBoneConnector connector)
		{
		}

		[Token(Token = "0x6002767")]
		[Address(RVA = "0x12AFA28", Offset = "0x12AFA28", VA = "0x12AFA28")]
		public void Init()
		{
		}

		[Token(Token = "0x6002768")]
		[Address(RVA = "0x12B0360", Offset = "0x12B0360", VA = "0x12B0360")]
		public void CreateSpineChain(Transform start, Transform end)
		{
		}

		[Token(Token = "0x6002769")]
		[Address(RVA = "0x12B10C0", Offset = "0x12B10C0", VA = "0x12B10C0")]
		private void PreCalibrateBones()
		{
		}

		[Token(Token = "0x600276A")]
		[Address(RVA = "0x12B12D4", Offset = "0x12B12D4", VA = "0x12B12D4")]
		private void CalibrateBones()
		{
		}

		[Token(Token = "0x600276B")]
		[Address(RVA = "0x12B1684", Offset = "0x12B1684", VA = "0x12B1684")]
		private void DeltaTimeCalculations()
		{
		}

		[Token(Token = "0x600276C")]
		[Address(RVA = "0x12B1834", Offset = "0x12B1834", VA = "0x12B1834")]
		private void StableUpdateRateCalculations()
		{
		}

		[Token(Token = "0x600276D")]
		[Address(RVA = "0x12B1880", Offset = "0x12B1880", VA = "0x12B1880")]
		private void ApplyNewBonesCoordinates()
		{
		}

		[Token(Token = "0x600276E")]
		[Address(RVA = "0x12B2114", Offset = "0x12B2114", VA = "0x12B2114")]
		private void EndUpdate()
		{
		}

		[Token(Token = "0x6002770")]
		[Address(RVA = "0x12B25EC", Offset = "0x12B25EC", VA = "0x12B25EC", Slot = "4")]
		public void OnDrop(PointerEventData data)
		{
		}

		[Token(Token = "0x6002771")]
		[Address(RVA = "0x12AE094", Offset = "0x12AE094", VA = "0x12AE094")]
		private Vector3 RoundPosDiff(Vector3 pos, int digits = 1)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6002772")]
		[Address(RVA = "0x12B25F0", Offset = "0x12B25F0", VA = "0x12B25F0")]
		private Vector3 RoundToBiggestValue(Vector3 vec)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6002773")]
		[Address(RVA = "0x12B17B0", Offset = "0x12B17B0", VA = "0x12B17B0")]
		private float GetClampedSmoothDelta()
		{
			return default(float);
		}

		[Token(Token = "0x6002774")]
		[Address(RVA = "0x12B28B8", Offset = "0x12B28B8", VA = "0x12B28B8")]
		public List<Transform> GetOldSpineTransforms()
		{
			return null;
		}

		[Token(Token = "0x6002775")]
		[Address(RVA = "0x12B28C0", Offset = "0x12B28C0", VA = "0x12B28C0")]
		public void ClearOldSpineTransforms()
		{
		}

		[Token(Token = "0x6002776")]
		[Address(RVA = "0x12B07E4", Offset = "0x12B07E4", VA = "0x12B07E4")]
		public Transform FindBaseTransform()
		{
			return null;
		}

		[Token(Token = "0x6002777")]
		[Address(RVA = "0x12B2920", Offset = "0x12B2920", VA = "0x12B2920")]
		public SpineBone GetLeadingBone()
		{
			return null;
		}

		[Token(Token = "0x6002778")]
		[Address(RVA = "0x12B2998", Offset = "0x12B2998", VA = "0x12B2998")]
		public SpineBone GetEndBone()
		{
			return null;
		}

		[Token(Token = "0x6002779")]
		[Address(RVA = "0x12B2A10", Offset = "0x12B2A10", VA = "0x12B2A10")]
		public Transform GetHeadBone()
		{
			return null;
		}

		[Token(Token = "0x600277A")]
		[Address(RVA = "0x12B2AA4", Offset = "0x12B2AA4", VA = "0x12B2AA4")]
		public SpineBone GetLeadBone()
		{
			return null;
		}

		[Token(Token = "0x600277B")]
		[Address(RVA = "0x12AAAB0", Offset = "0x12AAAB0", VA = "0x12AAAB0")]
		public Transform GetBaseTransform()
		{
			return null;
		}

		[Token(Token = "0x6002780")]
		[Address(RVA = "0x12B2B64", Offset = "0x12B2B64", VA = "0x12B2B64")]
		private void Reset()
		{
		}

		[Token(Token = "0x6002781")]
		[Address(RVA = "0x12B2B90", Offset = "0x12B2B90", VA = "0x12B2B90")]
		private void Start()
		{
		}

		[Token(Token = "0x6002782")]
		[Address(RVA = "0x12B2C7C", Offset = "0x12B2C7C", VA = "0x12B2C7C")]
		internal void Update()
		{
		}

		[Token(Token = "0x6002783")]
		[Address(RVA = "0x12B2E74", Offset = "0x12B2E74", VA = "0x12B2E74")]
		internal void FixedUpdate()
		{
		}

		[Token(Token = "0x6002784")]
		[Address(RVA = "0x12B2E8C", Offset = "0x12B2E8C", VA = "0x12B2E8C")]
		internal void LateUpdate()
		{
		}

		[Token(Token = "0x6002785")]
		[Address(RVA = "0x12B2FE4", Offset = "0x12B2FE4", VA = "0x12B2FE4")]
		public FSpineAnimator()
		{
		}
	}
	[Token(Token = "0x200068E")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x974BE0", Offset = "0x974BE0")]
	public class FSpineBoneConnector : MonoBehaviour, IDropHandler, IEventSystemHandler, IFHierarchyIcon
	{
		[Token(Token = "0x40026DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x9847B8", Offset = "0x9847B8")]
		public FSpineAnimator TargetSpineAnimator;

		[Token(Token = "0x40026E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform TargetBone;

		[Token(Token = "0x40026E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x9847CC", Offset = "0x9847CC")]
		[AttributeAttribute(Name = "FPD_WidthAttribute", RVA = "0x9847CC", Offset = "0x9847CC")]
		public bool PositionAnimated;

		[Token(Token = "0x40026E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		[AttributeAttribute(Name = "FPD_WidthAttribute", RVA = "0x98480C", Offset = "0x98480C")]
		public bool RotationAnimated;

		[Token(Token = "0x40026E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x984820", Offset = "0x984820")]
		public Vector3 RotationCorrection;

		[Token(Token = "0x40026E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public bool Mirror;

		[Token(Token = "0x40026E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private Vector3 animatorStatePosition;

		[Token(Token = "0x40026E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Quaternion animatorStateRotation;

		[Token(Token = "0x40026E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Quaternion targetBoneStateRotation;

		[Token(Token = "0x17000462")]
		public string EditorIconPath
		{
			[Token(Token = "0x60027A3")]
			[Address(RVA = "0x12B3DB0", Offset = "0x12B3DB0", VA = "0x12B3DB0", Slot = "5")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60027A4")]
		[Address(RVA = "0x12B3DF8", Offset = "0x12B3DF8", VA = "0x12B3DF8", Slot = "4")]
		public void OnDrop(PointerEventData data)
		{
		}

		[Token(Token = "0x60027A5")]
		[Address(RVA = "0x12B3DFC", Offset = "0x12B3DFC", VA = "0x12B3DFC")]
		private void Start()
		{
		}

		[Token(Token = "0x60027A6")]
		[Address(RVA = "0x12B155C", Offset = "0x12B155C", VA = "0x12B155C")]
		internal void RememberAnimatorState()
		{
		}

		[Token(Token = "0x60027A7")]
		[Address(RVA = "0x12B2240", Offset = "0x12B2240", VA = "0x12B2240")]
		internal void RefreshAnimatorState()
		{
		}

		[Token(Token = "0x60027A8")]
		[Address(RVA = "0x12B40D0", Offset = "0x12B40D0", VA = "0x12B40D0")]
		public FSpineBoneConnector()
		{
		}
	}
	[Token(Token = "0x200068F")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x974C18", Offset = "0x974C18")]
	public class FSpine_DrawSkeleton : MonoBehaviour
	{
		[Token(Token = "0x60027A9")]
		[Address(RVA = "0x12B40E0", Offset = "0x12B40E0", VA = "0x12B40E0")]
		public FSpine_DrawSkeleton()
		{
		}
	}
	[Token(Token = "0x2000690")]
	public class FSpine_Reference : MonoBehaviour
	{
		[Token(Token = "0x40026E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public FSpineAnimator SpineReference;

		[Token(Token = "0x60027AA")]
		[Address(RVA = "0x12B40E8", Offset = "0x12B40E8", VA = "0x12B40E8")]
		public FSpine_Reference()
		{
		}
	}
	[Token(Token = "0x2000691")]
	[AttributeAttribute(Name = "DefaultExecutionOrder", RVA = "0x974C50", Offset = "0x974C50")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x974C50", Offset = "0x974C50")]
	public class SpineAnimatorQueuer : MonoBehaviour
	{
		[Token(Token = "0x40026E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "FPD_SuffixAttribute", RVA = "0x984834", Offset = "0x984834")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x984834", Offset = "0x984834")]
		public float SpineAnimatorsAmount;

		[Token(Token = "0x40026EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		internal List<FSpineAnimator> updateOrder;

		[Token(Token = "0x60027AB")]
		[Address(RVA = "0x12B40F0", Offset = "0x12B40F0", VA = "0x12B40F0")]
		private void Update()
		{
		}

		[Token(Token = "0x60027AC")]
		[Address(RVA = "0x12B42A8", Offset = "0x12B42A8", VA = "0x12B42A8")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x60027AD")]
		[Address(RVA = "0x12B4470", Offset = "0x12B4470", VA = "0x12B4470")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x60027AE")]
		[Address(RVA = "0x12B4550", Offset = "0x12B4550", VA = "0x12B4550")]
		public SpineAnimatorQueuer()
		{
		}
	}
	[Token(Token = "0x2000692")]
	[AttributeAttribute(Name = "DefaultExecutionOrder", RVA = "0x974CA0", Offset = "0x974CA0")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x974CA0", Offset = "0x974CA0")]
	public class SpineAnimator_FixIKControlledBones : MonoBehaviour
	{
		[Token(Token = "0x40026EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform SkeletonParentBone;

		[Token(Token = "0x40026EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9848B8", Offset = "0x9848B8")]
		public bool Calibrate;

		[Token(Token = "0x40026ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private Quaternion initLocalRot;

		[Token(Token = "0x40026EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private Vector3 initLocalPos;

		[Token(Token = "0x40026EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Quaternion localRotation;

		[Token(Token = "0x40026F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Vector3 localPosition;

		[Token(Token = "0x60027AF")]
		[Address(RVA = "0x12B4560", Offset = "0x12B4560", VA = "0x12B4560")]
		private void Start()
		{
		}

		[Token(Token = "0x60027B0")]
		[Address(RVA = "0x12B1268", Offset = "0x12B1268", VA = "0x12B1268")]
		public void Calibration()
		{
		}

		[Token(Token = "0x60027B1")]
		[Address(RVA = "0x12B1484", Offset = "0x12B1484", VA = "0x12B1484")]
		public void UpdateOnAnimator()
		{
		}

		[Token(Token = "0x60027B2")]
		[Address(RVA = "0x12B24C8", Offset = "0x12B24C8", VA = "0x12B24C8")]
		public void UpdateAfterProcedural()
		{
		}

		[Token(Token = "0x60027B3")]
		[Address(RVA = "0x12B45BC", Offset = "0x12B45BC", VA = "0x12B45BC")]
		public SpineAnimator_FixIKControlledBones()
		{
		}
	}
}
namespace FIMSpace.FLook
{
	[Token(Token = "0x2000693")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x974CF0", Offset = "0x974CF0")]
	[AttributeAttribute(Name = "DefaultExecutionOrder", RVA = "0x974CF0", Offset = "0x974CF0")]
	public class FLookAnimator : MonoBehaviour, IDropHandler, IEventSystemHandler, IFHierarchyIcon
	{
		[Serializable]
		[Token(Token = "0x2000694")]
		public class CompensationBone
		{
			[Token(Token = "0x40027A9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Transform Transform;

			[Token(Token = "0x40027AA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private Vector3 compensatedPosition;

			[Token(Token = "0x40027AB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			private Quaternion compensatedRotation;

			[Token(Token = "0x40027AC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private Quaternion lastFinalLocalRotation;

			[Token(Token = "0x40027AD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			private Quaternion lastKeyframeLocalRotation;

			[Token(Token = "0x40027AE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
			private Vector3 lastFinalLocalPosition;

			[Token(Token = "0x40027AF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			private Vector3 lastKeyframeLocalPosition;

			[Token(Token = "0x6002820")]
			[Address(RVA = "0x12A9B28", Offset = "0x12A9B28", VA = "0x12A9B28")]
			public void RefreshCompensationFrame()
			{
			}

			[Token(Token = "0x6002821")]
			[Address(RVA = "0x12A9B78", Offset = "0x12A9B78", VA = "0x12A9B78")]
			public void CheckForZeroKeyframes()
			{
			}

			[Token(Token = "0x6002822")]
			[Address(RVA = "0x12A9CC8", Offset = "0x12A9CC8", VA = "0x12A9CC8")]
			public void SetRotationCompensation(float weight)
			{
			}

			[Token(Token = "0x6002823")]
			[Address(RVA = "0x12A9DF8", Offset = "0x12A9DF8", VA = "0x12A9DF8")]
			public void SetPositionCompensation(float weight)
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000695")]
		public class LookBone
		{
			[Token(Token = "0x40027B0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Transform Transform;

			[Token(Token = "0x40027B1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Quaternion animatedStaticRotation;

			[Token(Token = "0x40027B2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Quaternion targetStaticRotation;

			[Token(Token = "0x40027B3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public Quaternion localStaticRotation;

			[Token(Token = "0x40027B4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public Quaternion animatedTargetRotation;

			[Token(Token = "0x40027B5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			public Quaternion targetRotation;

			[Token(Token = "0x40027B6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			public Vector3 correctionOffset;

			[Token(Token = "0x40027B7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
			public Quaternion finalRotation;

			[Token(Token = "0x40027B8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
			public Quaternion lastKeyframeRotation;

			[Token(Token = "0x40027B9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
			public Quaternion lastFinalLocalRotation;

			[Token(Token = "0x40027BA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
			public Vector3 forward;

			[Token(Token = "0x40027BB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
			public Vector3 right;

			[Token(Token = "0x40027BC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
			public Vector3 up;

			[Token(Token = "0x40027BD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
			public Vector3 initLocalPos;

			[Token(Token = "0x40027BE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
			public Quaternion initLocalRot;

			[Token(Token = "0x40027BF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
			public Vector3 targetDelayPosition;

			[Token(Token = "0x40027C0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
			public Vector3 animatedDelayPosition;

			[Token(Token = "0x40027C1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
			public float lookWeight;

			[Token(Token = "0x40027C2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
			public float lookWeightB;

			[Token(Token = "0x40027C3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
			public float motionWeight;

			[Token(Token = "0x1700046E")]
			public Quaternion correctionOffsetQ
			{
				[Token(Token = "0x6002824")]
				[Address(RVA = "0x12A9F14", Offset = "0x12A9F14", VA = "0x12A9F14")]
				get
				{
					return default(Quaternion);
				}
			}

			[Token(Token = "0x6002825")]
			[Address(RVA = "0x12A9F9C", Offset = "0x12A9F9C", VA = "0x12A9F9C")]
			public LookBone(Transform t)
			{
			}

			[Token(Token = "0x6002826")]
			[Address(RVA = "0x12AA0EC", Offset = "0x12AA0EC", VA = "0x12AA0EC")]
			public void RefreshBoneDirections(Transform baseTransform)
			{
			}

			[Token(Token = "0x6002827")]
			[Address(RVA = "0x12A95F8", Offset = "0x12A95F8", VA = "0x12A95F8")]
			public void RefreshStaticRotation(bool hard = true)
			{
			}

			[Token(Token = "0x6002828")]
			[Address(RVA = "0x12AA36C", Offset = "0x12AA36C", VA = "0x12AA36C")]
			internal void CalculateMotion(Quaternion targetLook, float overallWeightMultiplier, float delta, float mainWeight)
			{
			}
		}

		[Token(Token = "0x2000696")]
		public enum EFAxisFixOrder
		{
			[Token(Token = "0x40027C5")]
			Parental,
			[Token(Token = "0x40027C6")]
			FromBased,
			[Token(Token = "0x40027C7")]
			FullManual,
			[Token(Token = "0x40027C8")]
			ZYX
		}

		[Token(Token = "0x2000697")]
		public enum EFHeadLookState
		{
			[Token(Token = "0x40027CA")]
			Null,
			[Token(Token = "0x40027CB")]
			Following,
			[Token(Token = "0x40027CC")]
			OutOfMaxRotation,
			[Token(Token = "0x40027CD")]
			ClampedAngle,
			[Token(Token = "0x40027CE")]
			OutOfMaxDistance
		}

		[Token(Token = "0x2000698")]
		public enum EFFollowMode
		{
			[Token(Token = "0x40027D0")]
			FollowObject,
			[Token(Token = "0x40027D1")]
			LocalOffset,
			[Token(Token = "0x40027D2")]
			WorldOffset,
			[Token(Token = "0x40027D3")]
			ToFollowSpaceOffset,
			[Token(Token = "0x40027D4")]
			FollowJustPosition
		}

		[Token(Token = "0x2000699")]
		public enum EFDeltaType
		{
			[Token(Token = "0x40027D6")]
			DeltaTime,
			[Token(Token = "0x40027D7")]
			SmoothDeltaTime,
			[Token(Token = "0x40027D8")]
			UnscaledDeltaTime,
			[Token(Token = "0x40027D9")]
			FixedDeltaTime
		}

		[Token(Token = "0x200069A")]
		public enum EFAnimationStyle
		{
			[Token(Token = "0x40027DB")]
			SmoothDamp,
			[Token(Token = "0x40027DC")]
			FastLerp,
			[Token(Token = "0x40027DD")]
			Linear
		}

		[Token(Token = "0x200069B")]
		public enum EEditorLookCategory
		{
			[Token(Token = "0x40027DF")]
			Setup,
			[Token(Token = "0x40027E0")]
			Tweak,
			[Token(Token = "0x40027E1")]
			Limit,
			[Token(Token = "0x40027E2")]
			Features,
			[Token(Token = "0x40027E3")]
			Corrections
		}

		[Token(Token = "0x200069C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x974D40", Offset = "0x974D40")]
		private sealed class <AnimatePhysicsClock>d__101 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40027E4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40027E5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40027E6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public FLookAnimator <>4__this;

			[Token(Token = "0x1700046F")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600282C")]
				[Address(RVA = "0x12A9100", Offset = "0x12A9100", VA = "0x12A9100", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000470")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600282E")]
				[Address(RVA = "0x12A9168", Offset = "0x12A9168", VA = "0x12A9168", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002829")]
			[Address(RVA = "0x12A9010", Offset = "0x12A9010", VA = "0x12A9010")]
			[DebuggerHidden]
			public <AnimatePhysicsClock>d__101(int <>1__state)
			{
			}

			[Token(Token = "0x600282A")]
			[Address(RVA = "0x12A903C", Offset = "0x12A903C", VA = "0x12A903C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600282B")]
			[Address(RVA = "0x12A9040", Offset = "0x12A9040", VA = "0x12A9040", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600282D")]
			[Address(RVA = "0x12A9108", Offset = "0x12A9108", VA = "0x12A9108", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200069D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x974D50", Offset = "0x974D50")]
		private sealed class <SwitchLookingTransition>d__104 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40027E7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40027E8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40027E9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public FLookAnimator <>4__this;

			[Token(Token = "0x40027EA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float transitionTime;

			[Token(Token = "0x40027EB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public bool enableAnimation;

			[Token(Token = "0x40027EC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Action callback;

			[Token(Token = "0x40027ED")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private float <time>5__2;

			[Token(Token = "0x40027EE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private float <startBlend>5__3;

			[Token(Token = "0x17000471")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002832")]
				[Address(RVA = "0x12A9AB8", Offset = "0x12A9AB8", VA = "0x12A9AB8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000472")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002834")]
				[Address(RVA = "0x12A9B20", Offset = "0x12A9B20", VA = "0x12A9B20", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600282F")]
			[Address(RVA = "0x12A9950", Offset = "0x12A9950", VA = "0x12A9950")]
			[DebuggerHidden]
			public <SwitchLookingTransition>d__104(int <>1__state)
			{
			}

			[Token(Token = "0x6002830")]
			[Address(RVA = "0x12A997C", Offset = "0x12A997C", VA = "0x12A997C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002831")]
			[Address(RVA = "0x12A9980", Offset = "0x12A9980", VA = "0x12A9980", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002833")]
			[Address(RVA = "0x12A9AC0", Offset = "0x12A9AC0", VA = "0x12A9AC0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200069E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x974D60", Offset = "0x974D60")]
		private sealed class <CResetMomentLookTransform>d__105 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40027EF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40027F0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40027F1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float time;

			[Token(Token = "0x40027F2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public FLookAnimator <>4__this;

			[Token(Token = "0x40027F3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Transform transform;

			[Token(Token = "0x17000473")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002838")]
				[Address(RVA = "0x12A98E0", Offset = "0x12A98E0", VA = "0x12A98E0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000474")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600283A")]
				[Address(RVA = "0x12A9948", Offset = "0x12A9948", VA = "0x12A9948", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002835")]
			[Address(RVA = "0x12A9770", Offset = "0x12A9770", VA = "0x12A9770")]
			[DebuggerHidden]
			public <CResetMomentLookTransform>d__105(int <>1__state)
			{
			}

			[Token(Token = "0x6002836")]
			[Address(RVA = "0x12A979C", Offset = "0x12A979C", VA = "0x12A979C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002837")]
			[Address(RVA = "0x12A97A0", Offset = "0x12A97A0", VA = "0x12A97A0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002839")]
			[Address(RVA = "0x12A98E8", Offset = "0x12A98E8", VA = "0x12A98E8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200069F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x974D70", Offset = "0x974D70")]
		private sealed class <CRefreshReferencePose>d__157 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40027F4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40027F5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40027F6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public FLookAnimator <>4__this;

			[Token(Token = "0x40027F7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <elapsed>5__2;

			[Token(Token = "0x17000475")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600283E")]
				[Address(RVA = "0x12A9700", Offset = "0x12A9700", VA = "0x12A9700", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000476")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002840")]
				[Address(RVA = "0x12A9768", Offset = "0x12A9768", VA = "0x12A9768", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600283B")]
			[Address(RVA = "0x12A9170", Offset = "0x12A9170", VA = "0x12A9170")]
			[DebuggerHidden]
			public <CRefreshReferencePose>d__157(int <>1__state)
			{
			}

			[Token(Token = "0x600283C")]
			[Address(RVA = "0x12A919C", Offset = "0x12A919C", VA = "0x12A919C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600283D")]
			[Address(RVA = "0x12A91A0", Offset = "0x12A91A0", VA = "0x12A91A0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600283F")]
			[Address(RVA = "0x12A9708", Offset = "0x12A9708", VA = "0x12A9708", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40026F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9848F0", Offset = "0x9848F0")]
		private Transform <MomentLookTransform>k__BackingField;

		[Token(Token = "0x40026F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private GameObject generatedMomentTarget;

		[Token(Token = "0x40026F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool wasMomentLookTransform;

		[Token(Token = "0x40026F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x984900", Offset = "0x984900")]
		public bool BirdMode;

		[Token(Token = "0x40026F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A")]
		private bool birdModeInitialized;

		[Token(Token = "0x40026F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x984938", Offset = "0x984938")]
		[AttributeAttribute(Name = "FPD_SuffixAttribute", RVA = "0x984938", Offset = "0x984938")]
		public float LagRotation;

		[Token(Token = "0x40026F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "FPD_SuffixAttribute", RVA = "0x9849AC", Offset = "0x9849AC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9849AC", Offset = "0x9849AC")]
		public float LagEvery;

		[Token(Token = "0x40026F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "FPD_PercentageAttribute", RVA = "0x984A24", Offset = "0x984A24")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x984A24", Offset = "0x984A24")]
		public float DelayPosition;

		[Token(Token = "0x40026F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x984A98", Offset = "0x984A98")]
		public float DelayMaxDistance;

		[Token(Token = "0x40026FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x984AD0", Offset = "0x984AD0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x984AD0", Offset = "0x984AD0")]
		public float DelayGoSpeed;

		[Token(Token = "0x40026FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Vector3 BirdTargetPosition;

		[Token(Token = "0x40026FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private Vector3 birdTargetPositionMemory;

		[Token(Token = "0x40026FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private float lagTimer;

		[Token(Token = "0x40026FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private float preWeightFaloff;

		[Token(Token = "0x40026FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private float[] baseWeights;

		[Token(Token = "0x4002700")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private float[] targetWeights;

		[Token(Token = "0x4002701")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public bool UseEyes;

		[Token(Token = "0x4002702")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x984B24", Offset = "0x984B24")]
		public Transform EyesTarget;

		[Token(Token = "0x4002703")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x984B5C", Offset = "0x984B5C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x984B5C", Offset = "0x984B5C")]
		public Transform LeftEye;

		[Token(Token = "0x4002704")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public bool InvertLeftEye;

		[Token(Token = "0x4002705")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x984BAC", Offset = "0x984BAC")]
		public Transform RightEye;

		[Token(Token = "0x4002706")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public bool InvertRightEye;

		[Token(Token = "0x4002707")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x984BE4", Offset = "0x984BE4")]
		public Transform HeadReference;

		[Token(Token = "0x4002708")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public Vector3 EyesOffsetRotation;

		[Token(Token = "0x4002709")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x984C1C", Offset = "0x984C1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x984C1C", Offset = "0x984C1C")]
		public float EyesSpeed;

		[Token(Token = "0x400270A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[AttributeAttribute(Name = "FPD_PercentageAttribute", RVA = "0x984C70", Offset = "0x984C70")]
		public float EyesBlend;

		[Token(Token = "0x400270B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x984CBC", Offset = "0x984CBC")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x984CBC", Offset = "0x984CBC")]
		public Vector2 EyesXRange;

		[Token(Token = "0x400270C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		public Vector2 EyesYRange;

		[Token(Token = "0x400270D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x984D14", Offset = "0x984D14")]
		public bool EyesNoKeyframes;

		[Token(Token = "0x400270E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCD")]
		public bool CustomEyesLogics;

		[Token(Token = "0x400270F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private float EyesOutOfRangeBlend;

		[Token(Token = "0x4002710")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private Transform[] eyes;

		[Token(Token = "0x4002711")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private Vector3[] eyeForwards;

		[Token(Token = "0x4002712")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private Quaternion[] eyesInitLocalRotations;

		[Token(Token = "0x4002713")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private Quaternion[] eyesLerpRotations;

		[Token(Token = "0x4002714")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private float _eyesBlend;

		[Token(Token = "0x4002715")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
		private Vector3 headForward;

		[Token(Token = "0x4002716")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x984D4C", Offset = "0x984D4C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x984D4C", Offset = "0x984D4C")]
		public float NoddingTransitions;

		[Token(Token = "0x4002717")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
		public Vector3 NodAxis;

		[Token(Token = "0x4002718")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x984DA0", Offset = "0x984DA0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x984DA0", Offset = "0x984DA0")]
		public float BackBonesNod;

		[Token(Token = "0x4002719")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
		private float nodProgress;

		[Token(Token = "0x400271A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		private float nodValue;

		[Token(Token = "0x400271B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
		private float nodPower;

		[Token(Token = "0x400271C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		private float nodDuration;

		[Token(Token = "0x400271D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
		private float smoothingTimer;

		[Token(Token = "0x400271E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		private float smoothingPower;

		[Token(Token = "0x400271F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
		private float smoothingTime;

		[Token(Token = "0x4002720")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		private float smoothingEffect;

		[Token(Token = "0x4002721")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x13C")]
		public int ParentalOffsetsV;

		[Token(Token = "0x4002722")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		private Vector3 lookFreezeFocusPoint;

		[Token(Token = "0x4002723")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14C")]
		private Vector3 smoothLookPosition;

		[Token(Token = "0x4002724")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		private Vector3 _velo_smoothLookPosition;

		[Token(Token = "0x4002725")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x164")]
		private Vector3 finalLookPosition;

		[Token(Token = "0x4002726")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		private bool usingAxisCorrection;

		[Token(Token = "0x4002727")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x174")]
		private Matrix4x4 axisCorrectionMatrix;

		[Token(Token = "0x4002728")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B4")]
		private float delta;

		[Token(Token = "0x4002729")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x984DF4", Offset = "0x984DF4")]
		public Transform ParentalReferenceBone;

		[Token(Token = "0x400272A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
		private Quaternion _parentalBackParentRot;

		[Token(Token = "0x400272B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
		private Vector2 _parentalAngles;

		[Token(Token = "0x400272C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
		private bool animatePhysicsWorking;

		[Token(Token = "0x400272D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D9")]
		private bool triggerAnimatePhysics;

		[Token(Token = "0x400272E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1DC")]
		private int startAfterTPoseCounter;

		[Token(Token = "0x400272F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
		private Vector3 unclampedLookAngles;

		[Token(Token = "0x4002730")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1EC")]
		private Vector3 targetLookAngles;

		[Token(Token = "0x4002731")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
		private Vector3 animatedLookAngles;

		[Token(Token = "0x4002732")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x204")]
		private Vector3 finalLookAngles;

		[Token(Token = "0x4002733")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
		private Quaternion lastBaseRotation;

		[Token(Token = "0x4002734")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x220")]
		private Vector3 _preLookAboveLookAngles;

		[Token(Token = "0x4002735")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x22C")]
		private Vector3 _velo_animatedLookAngles;

		[Token(Token = "0x4002736")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x238")]
		private float _rememberSideLookHorizontalAngle;

		[Token(Token = "0x4002737")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x23C")]
		private Vector3 leadBoneInitLocalOffset;

		[Token(Token = "0x4002738")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x248")]
		private EFHeadLookState previousState;

		[Token(Token = "0x4002739")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24C")]
		private bool _stopLooking;

		[Token(Token = "0x400273A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x250")]
		private Transform activeLookTarget;

		[Token(Token = "0x400273B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x258")]
		private Vector3 activeLookPosition;

		[Token(Token = "0x400273C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x268")]
		private Transform preActiveLookTarget;

		[Token(Token = "0x400273D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x270")]
		private bool isLooking;

		[Token(Token = "0x400273E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x271")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x984E2C", Offset = "0x984E2C")]
		public bool DestroyMomentTargetOnMaxDistance;

		[Token(Token = "0x400273F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x274")]
		private float whenAboveGoBackDuration;

		[Token(Token = "0x4002740")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x278")]
		private float whenAboveGoBackTimer;

		[Token(Token = "0x4002741")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x27C")]
		private float _whenAboveGoBackVelo;

		[Token(Token = "0x4002742")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x280")]
		private float _whenAboveGoBackVerticalVelo;

		[Token(Token = "0x4002743")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x284")]
		private Vector2 whenAboveGoBackAngles;

		[Token(Token = "0x4002744")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x984E64", Offset = "0x984E64")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x984E64", Offset = "0x984E64")]
		public float OverrideRotations;

		[Token(Token = "0x4002745")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x290")]
		private int lastClipHash;

		[Token(Token = "0x4002746")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x294")]
		private bool refreshReferencePose;

		[Token(Token = "0x4002747")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x298")]
		private float monitorTransitionTime;

		[Token(Token = "0x4002748")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A0")]
		private List<Quaternion> _monitorTransitionStart;

		[Token(Token = "0x4002749")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A8")]
		public int BackBonesCount;

		[Token(Token = "0x400274A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2AC")]
		public int _preBackBonesCount;

		[Token(Token = "0x400274B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2B0")]
		public List<LookBone> LookBones;

		[Token(Token = "0x400274C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2B8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x984EB8", Offset = "0x984EB8")]
		private EFHeadLookState <LookState>k__BackingField;

		[Token(Token = "0x400274D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2BC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x984EC8", Offset = "0x984EC8")]
		public bool NoTargetHeadStops;

		[Token(Token = "0x400274E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C0")]
		private Quaternion targetLookRotation;

		[Token(Token = "0x400274F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2D0")]
		protected bool initialized;

		[Token(Token = "0x4002750")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2D4")]
		private float finalMotionWeight;

		[Token(Token = "0x4002751")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2D8")]
		private float animatedMotionWeight;

		[Token(Token = "0x4002752")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2DC")]
		private float _velo_animatedMotionWeight;

		[Token(Token = "0x4002753")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2E0")]
		private float changeTargetSmootherWeight;

		[Token(Token = "0x4002754")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2E4")]
		private float changeTargetSmootherBones;

		[Token(Token = "0x4002755")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2E8")]
		private Vector3 preLookDir;

		[Token(Token = "0x4002756")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2F4")]
		public bool _editor_hideEyes;

		[Token(Token = "0x4002757")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2F8")]
		public string _editor_displayName;

		[Token(Token = "0x4002758")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x300")]
		public EEditorLookCategory _Editor_Category;

		[Token(Token = "0x4002759")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x308")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x984F00", Offset = "0x984F00")]
		public Transform LeadBone;

		[Token(Token = "0x400275A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x310")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x984F38", Offset = "0x984F38")]
		public Transform BaseTransform;

		[Token(Token = "0x400275B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x318")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x984F70", Offset = "0x984F70")]
		public float FaloffValue;

		[Token(Token = "0x400275C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31C")]
		public float FaloffValueB;

		[Token(Token = "0x400275D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x320")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x984FA8", Offset = "0x984FA8")]
		public bool BigAngleAutomation;

		[Token(Token = "0x400275E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x321")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x984FE0", Offset = "0x984FE0")]
		public bool BigAngleAutomationCompensation;

		[Token(Token = "0x400275F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x322")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x985018", Offset = "0x985018")]
		public bool AutoBackbonesWeights;

		[Token(Token = "0x4002760")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x323")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x985050", Offset = "0x985050")]
		public bool CurveSpread;

		[Token(Token = "0x4002761")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x328")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x985088", Offset = "0x985088")]
		public AnimationCurve BackBonesFalloff;

		[Token(Token = "0x4002762")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x330")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9850C0", Offset = "0x9850C0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9850C0", Offset = "0x9850C0")]
		public List<CompensationBone> CompensationBones;

		[Token(Token = "0x4002763")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x338")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x985134", Offset = "0x985134")]
		public float CompensationWeight;

		[Token(Token = "0x4002764")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x33C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x98514C", Offset = "0x98514C")]
		public float CompensationWeightB;

		[Token(Token = "0x4002765")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x340")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x985164", Offset = "0x985164")]
		public float CompensatePositions;

		[Token(Token = "0x4002766")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x344")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x98517C", Offset = "0x98517C")]
		public float CompensatePositionsB;

		[Token(Token = "0x4002767")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x348")]
		private float targetCompensationWeight;

		[Token(Token = "0x4002768")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34C")]
		private float targetCompensationPosWeight;

		[Token(Token = "0x4002769")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x350")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x985194", Offset = "0x985194")]
		public bool StartAfterTPose;

		[Token(Token = "0x400276A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x351")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9851CC", Offset = "0x9851CC")]
		public bool AnimatePhysics;

		[Token(Token = "0x400276B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x358")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x985204", Offset = "0x985204")]
		public Renderer OptimizeWithMesh;

		[Token(Token = "0x400276C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x360")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x98523C", Offset = "0x98523C")]
		public Transform ObjectToFollow;

		[Token(Token = "0x400276D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x368")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x985274", Offset = "0x985274")]
		public Vector3 FollowOffset;

		[Token(Token = "0x400276E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x374")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9852AC", Offset = "0x9852AC")]
		public EFFollowMode FollowMode;

		[Token(Token = "0x400276F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x378")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9852E4", Offset = "0x9852E4")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9852E4", Offset = "0x9852E4")]
		public float RotationSpeed;

		[Token(Token = "0x4002770")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x37C")]
		private bool instantRotation;

		[Token(Token = "0x4002771")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x380")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x985338", Offset = "0x985338")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x985338", Offset = "0x985338")]
		public float UltraSmoother;

		[Token(Token = "0x4002772")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x384")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x98538C", Offset = "0x98538C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x98538C", Offset = "0x98538C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x98538C", Offset = "0x98538C")]
		public float StopLookingAbove;

		[Token(Token = "0x4002773")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x388")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x985410", Offset = "0x985410")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x985410", Offset = "0x985410")]
		public float StopLookingAboveFactor;

		[Token(Token = "0x4002774")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x985468", Offset = "0x985468")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x985468", Offset = "0x985468")]
		public float ChangeTargetSmoothing;

		[Token(Token = "0x4002775")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x390")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9854BC", Offset = "0x9854BC")]
		public bool AdvancedFalloff;

		[Token(Token = "0x4002776")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x394")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9854F4", Offset = "0x9854F4")]
		public float MaximumDistance;

		[Token(Token = "0x4002777")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x398")]
		[AttributeAttribute(Name = "FPD_SuffixAttribute", RVA = "0x98552C", Offset = "0x98552C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x98552C", Offset = "0x98552C")]
		public float HoldRotateToOppositeUntil;

		[Token(Token = "0x4002778")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x39C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9855A4", Offset = "0x9855A4")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9855A4", Offset = "0x9855A4")]
		public float MaxOutDistanceFactor;

		[Token(Token = "0x4002779")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3A0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9855F8", Offset = "0x9855F8")]
		public bool Distance2D;

		[Token(Token = "0x400277A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3A4")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x985630", Offset = "0x985630")]
		public Vector3 DistanceMeasurePoint;

		[Token(Token = "0x400277B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3B0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x985668", Offset = "0x985668")]
		[AttributeAttribute(Name = "FPD_SuffixAttribute", RVA = "0x985668", Offset = "0x985668")]
		public float LookWhenAbove;

		[Token(Token = "0x400277C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3B4")]
		private float animatedLookWhenAbove;

		[Token(Token = "0x400277D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3B8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9856E0", Offset = "0x9856E0")]
		[AttributeAttribute(Name = "FPD_SuffixAttribute", RVA = "0x9856E0", Offset = "0x9856E0")]
		public float LookWhenAboveVertical;

		[Token(Token = "0x400277E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3BC")]
		private float animatedLookWhenAboveVertical;

		[Token(Token = "0x400277F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C0")]
		[AttributeAttribute(Name = "FPD_SuffixAttribute", RVA = "0x985758", Offset = "0x985758")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x985758", Offset = "0x985758")]
		public float WhenAboveGoBackAfter;

		[Token(Token = "0x4002780")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C4")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9857CC", Offset = "0x9857CC")]
		[AttributeAttribute(Name = "FPD_SuffixAttribute", RVA = "0x9857CC", Offset = "0x9857CC")]
		public float WhenAboveGoBackAfterVertical;

		[Token(Token = "0x4002781")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x985840", Offset = "0x985840")]
		[AttributeAttribute(Name = "FPD_SuffixAttribute", RVA = "0x985840", Offset = "0x985840")]
		public float WhenAboveGoBackDuration;

		[Token(Token = "0x4002782")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3CC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9858B8", Offset = "0x9858B8")]
		[AttributeAttribute(Name = "FPD_SuffixAttribute", RVA = "0x9858B8", Offset = "0x9858B8")]
		public float StartLookElasticRangeX;

		[Token(Token = "0x4002783")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3D0")]
		[AttributeAttribute(Name = "FPD_SuffixAttribute", RVA = "0x985930", Offset = "0x985930")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x985930", Offset = "0x985930")]
		public float StartLookElasticRangeY;

		[Token(Token = "0x4002784")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3D4")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9859A8", Offset = "0x9859A8")]
		public Vector2 XRotationLimits;

		[Token(Token = "0x4002785")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3DC")]
		[AttributeAttribute(Name = "FPD_SuffixAttribute", RVA = "0x9859E0", Offset = "0x9859E0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9859E0", Offset = "0x9859E0")]
		public float XElasticRange;

		[Token(Token = "0x4002786")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3E0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x985A58", Offset = "0x985A58")]
		public bool LimitHolder;

		[Token(Token = "0x4002787")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3E4")]
		public Vector2 YRotationLimits;

		[Token(Token = "0x4002788")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3EC")]
		[AttributeAttribute(Name = "FPD_SuffixAttribute", RVA = "0x985A90", Offset = "0x985A90")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x985A90", Offset = "0x985A90")]
		public float YElasticRange;

		[Token(Token = "0x4002789")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3F0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x985B08", Offset = "0x985B08")]
		[AttributeAttribute(Name = "FPD_PercentageAttribute", RVA = "0x985B08", Offset = "0x985B08")]
		public float LookAnimatorAmount;

		[Token(Token = "0x400278A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3F4")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x985B7C", Offset = "0x985B7C")]
		public Vector3 StartLookPointOffset;

		[Token(Token = "0x400278B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x400")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x985BB4", Offset = "0x985BB4")]
		public bool AnchorStartLookPoint;

		[Token(Token = "0x400278C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x401")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x985BEC", Offset = "0x985BEC")]
		public bool RefreshStartLookPoint;

		[Token(Token = "0x400278D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x402")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x985C24", Offset = "0x985C24")]
		public bool SyncWithAnimator;

		[Token(Token = "0x400278E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x403")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x985C5C", Offset = "0x985C5C")]
		public bool MonitorAnimator;

		[Token(Token = "0x400278F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x404")]
		private Quaternion rootStaticRotation;

		[Token(Token = "0x4002790")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x414")]
		[AttributeAttribute(Name = "FPD_PercentageAttribute", RVA = "0x985C94", Offset = "0x985C94")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x985C94", Offset = "0x985C94")]
		public float WeightsMultiplier;

		[Token(Token = "0x4002791")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x418")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x985D08", Offset = "0x985D08")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x985D08", Offset = "0x985D08")]
		public float MaxRotationSpeed;

		[Token(Token = "0x4002792")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x41C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x985D60", Offset = "0x985D60")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x985D60", Offset = "0x985D60")]
		public float BaseRotationCompensation;

		[Token(Token = "0x4002793")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x420")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x985DB4", Offset = "0x985DB4")]
		public bool DetectZeroKeyframes;

		[Token(Token = "0x4002794")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x424")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x985DEC", Offset = "0x985DEC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x985DEC", Offset = "0x985DEC")]
		public float LookAtPositionSmoother;

		[Token(Token = "0x4002795")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x428")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x985E40", Offset = "0x985E40")]
		public EFDeltaType DeltaType;

		[Token(Token = "0x4002796")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x42C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x985E78", Offset = "0x985E78")]
		public float SimulationSpeed;

		[Token(Token = "0x4002797")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x430")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x985EB0", Offset = "0x985EB0")]
		public EFAxisFixOrder FixingPreset;

		[Token(Token = "0x4002798")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x434")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x985EE8", Offset = "0x985EE8")]
		public Vector3 ModelForwardAxis;

		[Token(Token = "0x4002799")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x440")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x985F20", Offset = "0x985F20")]
		public Vector3 ModelUpAxis;

		[Token(Token = "0x400279A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x985F58", Offset = "0x985F58")]
		public Vector3 ManualFromAxis;

		[Token(Token = "0x400279B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x458")]
		public Vector3 ManualToAxis;

		[Token(Token = "0x400279C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x464")]
		public Vector3 FromAuto;

		[Token(Token = "0x400279D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x470")]
		public Vector3 OffsetAuto;

		[Token(Token = "0x400279E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x47C")]
		public Vector3 parentalReferenceLookForward;

		[Token(Token = "0x400279F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x488")]
		public Vector3 parentalReferenceUp;

		[Token(Token = "0x40027A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x494")]
		public Vector3 DynamicReferenceUp;

		[Token(Token = "0x40027A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4A0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x985F90", Offset = "0x985F90")]
		public Vector3 RotationOffset;

		[Token(Token = "0x40027A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4AC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x985FC8", Offset = "0x985FC8")]
		public Vector3 BackBonesAddOffset;

		[Token(Token = "0x40027A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4B8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x986000", Offset = "0x986000")]
		public Vector3 RotCorrectionMultiplier;

		[Token(Token = "0x40027A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C4")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x986038", Offset = "0x986038")]
		public bool DebugRays;

		[Token(Token = "0x40027A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x986070", Offset = "0x986070")]
		public EFAnimationStyle AnimationStyle;

		[Token(Token = "0x40027A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4CC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9860A8", Offset = "0x9860A8")]
		public bool ConstantParentalAxisUpdate;

		[Token(Token = "0x40027A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4CD")]
		private bool updateLookAnimator;

		[Token(Token = "0x40027A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4CE")]
		private bool wasUpdating;

		[Token(Token = "0x17000463")]
		public Transform MomentLookTransform
		{
			[Token(Token = "0x60027BD")]
			[Address(RVA = "0xC06AE0", Offset = "0xC06AE0", VA = "0xC06AE0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9948E8", Offset = "0x9948E8")]
			get
			{
				return null;
			}
			[Token(Token = "0x60027BE")]
			[Address(RVA = "0xC06AE8", Offset = "0xC06AE8", VA = "0xC06AE8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9948F8", Offset = "0x9948F8")]
			private set
			{
			}
		}

		[Token(Token = "0x17000464")]
		public EFHeadLookState LookState
		{
			[Token(Token = "0x60027F8")]
			[Address(RVA = "0xC104EC", Offset = "0xC104EC", VA = "0xC104EC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x994AD0", Offset = "0x994AD0")]
			get
			{
				return default(EFHeadLookState);
			}
			[Token(Token = "0x60027F9")]
			[Address(RVA = "0xC104F4", Offset = "0xC104F4", VA = "0xC104F4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x994AE0", Offset = "0x994AE0")]
			protected set
			{
			}
		}

		[Token(Token = "0x17000465")]
		public string EditorIconPath
		{
			[Token(Token = "0x6002802")]
			[Address(RVA = "0xC11310", Offset = "0xC11310", VA = "0xC11310", Slot = "7")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000466")]
		public bool UseBoneOffsetRotation
		{
			[Token(Token = "0x6002808")]
			[Address(RVA = "0xC11384", Offset = "0xC11384", VA = "0xC11384")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000467")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x9956F8", Offset = "0x9956F8")]
		public float BlendToOriginal
		{
			[Token(Token = "0x6002809")]
			[Address(RVA = "0xC1138C", Offset = "0xC1138C", VA = "0xC1138C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600280A")]
			[Address(RVA = "0xC1139C", Offset = "0xC1139C", VA = "0xC1139C")]
			set
			{
			}
		}

		[Token(Token = "0x17000468")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x995730", Offset = "0x995730")]
		public Vector3 LookReferenceOffset
		{
			[Token(Token = "0x600280B")]
			[Address(RVA = "0xC113AC", Offset = "0xC113AC", VA = "0xC113AC")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x600280C")]
			[Address(RVA = "0xC113BC", Offset = "0xC113BC", VA = "0xC113BC")]
			set
			{
			}
		}

		[Token(Token = "0x17000469")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x995768", Offset = "0x995768")]
		public bool AnchorReferencePoint
		{
			[Token(Token = "0x600280D")]
			[Address(RVA = "0xC113CC", Offset = "0xC113CC", VA = "0xC113CC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600280E")]
			[Address(RVA = "0xC113D4", Offset = "0xC113D4", VA = "0xC113D4")]
			set
			{
			}
		}

		[Token(Token = "0x1700046A")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x9957A0", Offset = "0x9957A0")]
		public bool RefreshAnchor
		{
			[Token(Token = "0x600280F")]
			[Address(RVA = "0xC113E0", Offset = "0xC113E0", VA = "0xC113E0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002810")]
			[Address(RVA = "0xC113E8", Offset = "0xC113E8", VA = "0xC113E8")]
			set
			{
			}
		}

		[Token(Token = "0x1700046B")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x9957D8", Offset = "0x9957D8")]
		public float MinHeadLookAngle
		{
			[Token(Token = "0x6002811")]
			[Address(RVA = "0xC113F4", Offset = "0xC113F4", VA = "0xC113F4")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6002812")]
			[Address(RVA = "0xC113FC", Offset = "0xC113FC", VA = "0xC113FC")]
			set
			{
			}
		}

		[Token(Token = "0x1700046C")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x995810", Offset = "0x995810")]
		public float MaxRotationDiffrence
		{
			[Token(Token = "0x6002813")]
			[Address(RVA = "0xC11404", Offset = "0xC11404", VA = "0xC11404")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6002814")]
			[Address(RVA = "0xC1140C", Offset = "0xC1140C", VA = "0xC1140C")]
			set
			{
			}
		}

		[Token(Token = "0x1700046D")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x995848", Offset = "0x995848")]
		public bool AnimateWithSource
		{
			[Token(Token = "0x6002815")]
			[Address(RVA = "0xC11414", Offset = "0xC11414", VA = "0xC11414")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002816")]
			[Address(RVA = "0xC1141C", Offset = "0xC1141C", VA = "0xC1141C")]
			set
			{
			}
		}

		[Token(Token = "0x60027B4")]
		[Address(RVA = "0xC06040", Offset = "0xC06040", VA = "0xC06040")]
		public void SwitchLooking([Optional] bool? enableLooking, float transitionTime = 0.2f, [Optional] Action callback)
		{
		}

		[Token(Token = "0x60027B5")]
		[Address(RVA = "0xC061B0", Offset = "0xC061B0", VA = "0xC061B0")]
		public void SwitchLooking(bool enable = true)
		{
		}

		[Token(Token = "0x60027B6")]
		[Address(RVA = "0xC0622C", Offset = "0xC0622C", VA = "0xC0622C")]
		public void SetLookTarget(Transform transform)
		{
		}

		[Token(Token = "0x60027B7")]
		[Address(RVA = "0xC06260", Offset = "0xC06260", VA = "0xC06260")]
		public void SetLookPosition(Vector3 targetPosition)
		{
		}

		[Token(Token = "0x60027B8")]
		[Address(RVA = "0xC06278", Offset = "0xC06278", VA = "0xC06278")]
		public Vector2 GetUnclampedLookAngles()
		{
			return default(Vector2);
		}

		[Token(Token = "0x60027B9")]
		[Address(RVA = "0xC06304", Offset = "0xC06304", VA = "0xC06304")]
		public Vector2 GetLookAngles()
		{
			return default(Vector2);
		}

		[Token(Token = "0x60027BA")]
		[Address(RVA = "0xC06390", Offset = "0xC06390", VA = "0xC06390")]
		public Vector2 GetTargetLookAngles()
		{
			return default(Vector2);
		}

		[Token(Token = "0x60027BB")]
		[Address(RVA = "0xC0641C", Offset = "0xC0641C", VA = "0xC0641C")]
		public EFHeadLookState GetCurrentLookState()
		{
			return default(EFHeadLookState);
		}

		[Token(Token = "0x60027BC")]
		[Address(RVA = "0xC06424", Offset = "0xC06424", VA = "0xC06424")]
		public Vector2 ComputeAnglesTowards(Vector3 worldPosition)
		{
			return default(Vector2);
		}

		[Token(Token = "0x60027BF")]
		[Address(RVA = "0xC06AF0", Offset = "0xC06AF0", VA = "0xC06AF0")]
		public GameObject SetMomentLookTarget([Optional] Transform parent, [Optional] Vector3? position, [Optional][MetadataOffset(Offset = "0x3CA3FD")] float? destroyTimer, bool worldPosition = false)
		{
			return null;
		}

		[Token(Token = "0x60027C0")]
		[Address(RVA = "0xC073E4", Offset = "0xC073E4", VA = "0xC073E4")]
		public void SetMomentLookTransform(Transform transform, float timeToLeft = 0f)
		{
		}

		[Token(Token = "0x60027C1")]
		[Address(RVA = "0xC07500", Offset = "0xC07500", VA = "0xC07500")]
		public void ForceDestroyMomentTarget()
		{
		}

		[Token(Token = "0x60027C2")]
		[Address(RVA = "0xC075F8", Offset = "0xC075F8", VA = "0xC075F8")]
		private void InitBirdMode()
		{
		}

		[Token(Token = "0x60027C3")]
		[Address(RVA = "0xC07978", Offset = "0xC07978", VA = "0xC07978")]
		private void CalculateBirdMode()
		{
		}

		[Token(Token = "0x60027C4")]
		[Address(RVA = "0xC0802C", Offset = "0xC0802C", VA = "0xC0802C")]
		public void SetAutoWeightsDefault()
		{
		}

		[Token(Token = "0x60027C5")]
		[Address(RVA = "0xC08530", Offset = "0xC08530", VA = "0xC08530")]
		public void UpdateAutomationWeights()
		{
		}

		[Token(Token = "0x60027C6")]
		[Address(RVA = "0xC086D8", Offset = "0xC086D8", VA = "0xC086D8")]
		public void RefreshBoneMotionWeights()
		{
		}

		[Token(Token = "0x60027C7")]
		[Address(RVA = "0xC081B4", Offset = "0xC081B4", VA = "0xC081B4")]
		public float[] CalculateRotationWeights(float falloff)
		{
			return null;
		}

		[Token(Token = "0x60027C8")]
		[Address(RVA = "0xC087C8", Offset = "0xC087C8", VA = "0xC087C8")]
		private void CalculateWeights(float[] weights)
		{
		}

		[Token(Token = "0x60027C9")]
		[Address(RVA = "0xC08864", Offset = "0xC08864", VA = "0xC08864")]
		public Transform GetHeadReference()
		{
			return null;
		}

		[Token(Token = "0x60027CA")]
		[Address(RVA = "0xC088EC", Offset = "0xC088EC", VA = "0xC088EC")]
		public Transform GetEyesTarget()
		{
			return null;
		}

		[Token(Token = "0x60027CB")]
		[Address(RVA = "0xC08AA4", Offset = "0xC08AA4", VA = "0xC08AA4")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x994908", Offset = "0x994908")]
		public Transform GetCurrentTarget()
		{
			return null;
		}

		[Token(Token = "0x60027CC")]
		[Address(RVA = "0xC08AA8", Offset = "0xC08AA8", VA = "0xC08AA8")]
		public Vector3 GetEyesTargetPosition()
		{
			return default(Vector3);
		}

		[Token(Token = "0x60027CD")]
		[Address(RVA = "0xC08B40", Offset = "0xC08B40", VA = "0xC08B40")]
		private void InitEyesModule()
		{
		}

		[Token(Token = "0x60027CE")]
		[Address(RVA = "0xC09220", Offset = "0xC09220", VA = "0xC09220")]
		private void UpdateEyesLogics()
		{
		}

		[Token(Token = "0x60027CF")]
		[Address(RVA = "0xC09C60", Offset = "0xC09C60", VA = "0xC09C60")]
		private void NoddingChangeTargetCalculations(float angleAmount)
		{
		}

		[Token(Token = "0x60027D0")]
		[Address(RVA = "0xC09E04", Offset = "0xC09E04", VA = "0xC09E04")]
		private void NoddingCalculations()
		{
		}

		[Token(Token = "0x60027D1")]
		[Address(RVA = "0xC09EC8", Offset = "0xC09EC8", VA = "0xC09EC8")]
		public void SetRotationSmoothing(float smoothingDuration = 0.5f, float smoothingPower = 2f)
		{
		}

		[Token(Token = "0x60027D2")]
		[Address(RVA = "0xC09EE0", Offset = "0xC09EE0", VA = "0xC09EE0")]
		private void UpdateSmoothing()
		{
		}

		[Token(Token = "0x60027D3")]
		[Address(RVA = "0xC09F20", Offset = "0xC09F20", VA = "0xC09F20")]
		private void AnimateBonesUnsynced(Quaternion diffOnMain, Quaternion backTarget, float d)
		{
		}

		[Token(Token = "0x60027D4")]
		[Address(RVA = "0xC0A530", Offset = "0xC0A530", VA = "0xC0A530")]
		private void AnimateBonesSynced(Quaternion diffOnMain, Quaternion backTarget, float d)
		{
		}

		[Token(Token = "0x60027D5")]
		[Address(RVA = "0xC0AAC4", Offset = "0xC0AAC4", VA = "0xC0AAC4")]
		private void AnimateBonesParental(float d)
		{
		}

		[Token(Token = "0x60027D6")]
		[Address(RVA = "0xC0BB34", Offset = "0xC0BB34", VA = "0xC0BB34")]
		private void CalculateLookAnimation()
		{
		}

		[Token(Token = "0x60027D7")]
		[Address(RVA = "0xC0DBEC", Offset = "0xC0DBEC", VA = "0xC0DBEC")]
		private void SetTargetBonesRotations()
		{
		}

		[Token(Token = "0x60027D8")]
		[Address(RVA = "0xC0D85C", Offset = "0xC0D85C", VA = "0xC0D85C")]
		private Quaternion LookRotationParental(Vector3 direction)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x60027D9")]
		[Address(RVA = "0xC0E0E0", Offset = "0xC0E0E0", VA = "0xC0E0E0")]
		private Quaternion ParentalRotationMaths(Vector3 referenceRightDir, float xAngle, float yAngle)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x60027DA")]
		[Address(RVA = "0xC0E384", Offset = "0xC0E384", VA = "0xC0E384")]
		private void UpdateCorrectionMatrix()
		{
		}

		[Token(Token = "0x60027DB")]
		[Address(RVA = "0xC0E5FC", Offset = "0xC0E5FC", VA = "0xC0E5FC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x994940", Offset = "0x994940")]
		private IEnumerator AnimatePhysicsClock()
		{
			return null;
		}

		[Token(Token = "0x60027DC")]
		[Address(RVA = "0xC060FC", Offset = "0xC060FC", VA = "0xC060FC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9949A4", Offset = "0x9949A4")]
		private IEnumerator SwitchLookingTransition(float transitionTime, bool enableAnimation, [Optional] Action callback)
		{
			return null;
		}

		[Token(Token = "0x60027DD")]
		[Address(RVA = "0xC07458", Offset = "0xC07458", VA = "0xC07458")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x994A08", Offset = "0x994A08")]
		private IEnumerator CResetMomentLookTransform(Transform transform, float time)
		{
			return null;
		}

		[Token(Token = "0x60027DE")]
		[Address(RVA = "0xC0C640", Offset = "0xC0C640", VA = "0xC0C640")]
		public Vector2 LimitAnglesCalculations(Vector2 angles)
		{
			return default(Vector2);
		}

		[Token(Token = "0x60027DF")]
		[Address(RVA = "0xC0CC80", Offset = "0xC0CC80", VA = "0xC0CC80")]
		public Vector2 AnimateAnglesTowards(Vector2 angles)
		{
			return default(Vector2);
		}

		[Token(Token = "0x60027E0")]
		[Address(RVA = "0xC0E6D8", Offset = "0xC0E6D8", VA = "0xC0E6D8")]
		public Vector3 GetDistanceMeasurePosition()
		{
			return default(Vector3);
		}

		[Token(Token = "0x60027E1")]
		[Address(RVA = "0xC066A0", Offset = "0xC066A0", VA = "0xC066A0")]
		public Vector3 GetLookStartMeasurePosition()
		{
			return default(Vector3);
		}

		[Token(Token = "0x60027E2")]
		[Address(RVA = "0xC0E7B8", Offset = "0xC0E7B8", VA = "0xC0E7B8")]
		public void RefreshLookStartPositionAnchor()
		{
		}

		[Token(Token = "0x60027E3")]
		[Address(RVA = "0xC0E868", Offset = "0xC0E868", VA = "0xC0E868")]
		private float GetDistanceMeasure(Vector3 targetPosition)
		{
			return default(float);
		}

		[Token(Token = "0x60027E4")]
		[Address(RVA = "0xC0E9A8", Offset = "0xC0E9A8", VA = "0xC0E9A8")]
		private void UpdateLookAnimatorAmountWeight()
		{
		}

		[Token(Token = "0x60027E5")]
		[Address(RVA = "0xC0EB4C", Offset = "0xC0EB4C", VA = "0xC0EB4C")]
		private void EndUpdate()
		{
		}

		[Token(Token = "0x60027E6")]
		[Address(RVA = "0xC0C288", Offset = "0xC0C288", VA = "0xC0C288")]
		private void LookPositionUpdate()
		{
		}

		[Token(Token = "0x60027E7")]
		[Address(RVA = "0xC0ED18", Offset = "0xC0ED18", VA = "0xC0ED18")]
		private void TargetingUpdate()
		{
		}

		[Token(Token = "0x60027E8")]
		[Address(RVA = "0xC0763C", Offset = "0xC0763C", VA = "0xC0763C")]
		public Vector3 GetLookAtPosition()
		{
			return default(Vector3);
		}

		[Token(Token = "0x60027E9")]
		[Address(RVA = "0xC08978", Offset = "0xC08978", VA = "0xC08978")]
		public Transform GetLookAtTransform()
		{
			return null;
		}

		[Token(Token = "0x60027EA")]
		[Address(RVA = "0xC0EDE4", Offset = "0xC0EDE4", VA = "0xC0EDE4")]
		public Vector3 GetForwardPosition()
		{
			return default(Vector3);
		}

		[Token(Token = "0x60027EB")]
		[Address(RVA = "0xC06F30", Offset = "0xC06F30", VA = "0xC06F30")]
		protected void TargetChangedMeasures()
		{
		}

		[Token(Token = "0x60027EC")]
		[Address(RVA = "0xC0EEC0", Offset = "0xC0EEC0", VA = "0xC0EEC0")]
		private void MaxDistanceCalculations()
		{
		}

		[Token(Token = "0x60027ED")]
		[Address(RVA = "0xC0EFA8", Offset = "0xC0EFA8", VA = "0xC0EFA8", Slot = "5")]
		protected virtual void OnTargetChanged()
		{
		}

		[Token(Token = "0x60027EE")]
		[Address(RVA = "0xC0EFAC", Offset = "0xC0EFAC", VA = "0xC0EFAC", Slot = "6")]
		protected virtual void OnRangeStateChanged()
		{
		}

		[Token(Token = "0x60027EF")]
		[Address(RVA = "0xC0EFB0", Offset = "0xC0EFB0", VA = "0xC0EFB0")]
		private void BeginStateCheck()
		{
		}

		[Token(Token = "0x60027F0")]
		[Address(RVA = "0xC0C398", Offset = "0xC0C398", VA = "0xC0C398")]
		private void LookWhenAboveGoBackCalculations()
		{
		}

		[Token(Token = "0x60027F1")]
		[Address(RVA = "0xC0F05C", Offset = "0xC0F05C", VA = "0xC0F05C")]
		private void PreCalibrateBones()
		{
		}

		[Token(Token = "0x60027F2")]
		[Address(RVA = "0xC0F138", Offset = "0xC0F138", VA = "0xC0F138")]
		private void CalibrateBones()
		{
		}

		[Token(Token = "0x60027F3")]
		[Address(RVA = "0xC0F8E8", Offset = "0xC0F8E8", VA = "0xC0F8E8")]
		private void ChangeBonesRotations()
		{
		}

		[Token(Token = "0x60027F4")]
		[Address(RVA = "0xC0FC5C", Offset = "0xC0FC5C", VA = "0xC0FC5C")]
		private void ResetBones(bool onlyIfNull = false)
		{
		}

		[Token(Token = "0x60027F5")]
		[Address(RVA = "0xC0FF58", Offset = "0xC0FF58", VA = "0xC0FF58")]
		internal void RefreshLookBones()
		{
		}

		[Token(Token = "0x60027F6")]
		[Address(RVA = "0xC0F808", Offset = "0xC0F808", VA = "0xC0F808")]
		private void RefreshReferencePose()
		{
		}

		[Token(Token = "0x60027F7")]
		[Address(RVA = "0xC10470", Offset = "0xC10470", VA = "0xC10470")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x994A6C", Offset = "0x994A6C")]
		private IEnumerator CRefreshReferencePose()
		{
			return null;
		}

		[Token(Token = "0x60027FA")]
		[Address(RVA = "0xC104FC", Offset = "0xC104FC", VA = "0xC104FC")]
		public void InitializeBaseVariables()
		{
		}

		[Token(Token = "0x60027FB")]
		[Address(RVA = "0xC10B90", Offset = "0xC10B90", VA = "0xC10B90")]
		public void FindBaseTransform()
		{
		}

		[Token(Token = "0x60027FC")]
		[Address(RVA = "0xC10D18", Offset = "0xC10D18", VA = "0xC10D18")]
		public Vector3 TryFindHeadPositionInTarget(Transform other)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60027FD")]
		[Address(RVA = "0xC0E7B4", Offset = "0xC0E7B4", VA = "0xC0E7B4")]
		private void _LOG_NoRefs()
		{
		}

		[Token(Token = "0x60027FE")]
		[Address(RVA = "0xC11130", Offset = "0xC11130", VA = "0xC11130")]
		private void _Debug_Rays()
		{
		}

		[Token(Token = "0x60027FF")]
		[Address(RVA = "0xC06A28", Offset = "0xC06A28", VA = "0xC06A28")]
		private Vector3 WrapVector(Vector3 v)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6002800")]
		[Address(RVA = "0xC0D608", Offset = "0xC0D608", VA = "0xC0D608")]
		private Vector3 ConvertFlippedAxes(Vector3 rotations)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6002801")]
		[Address(RVA = "0xC0DF1C", Offset = "0xC0DF1C", VA = "0xC0DF1C")]
		public static float AngleAroundAxis(Vector3 firstDirection, Vector3 secondDirection, Vector3 axis)
		{
			return default(float);
		}

		[Token(Token = "0x6002803")]
		[Address(RVA = "0xC11380", Offset = "0xC11380", VA = "0xC11380", Slot = "4")]
		public void OnDrop(PointerEventData data)
		{
		}

		[Token(Token = "0x6002804")]
		[Address(RVA = "0xC0E678", Offset = "0xC0E678", VA = "0xC0E678")]
		private float GetClampedAngle(float current, float limit, float elastic, float sign = 1f)
		{
			return default(float);
		}

		[Token(Token = "0x6002805")]
		[Address(RVA = "0xC107B4", Offset = "0xC107B4", VA = "0xC107B4")]
		private void ComputeBonesRotationsFixVariables()
		{
		}

		[Token(Token = "0x6002806")]
		[Address(RVA = "0xC0F604", Offset = "0xC0F604", VA = "0xC0F604")]
		private void RefreshParentalLookReferenceAxis()
		{
		}

		[Token(Token = "0x6002807")]
		[Address(RVA = "0xC0EBB8", Offset = "0xC0EBB8", VA = "0xC0EBB8")]
		public Vector3 GetCurrentHeadForwardDirection()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6002817")]
		[Address(RVA = "0xC11428", Offset = "0xC11428", VA = "0xC11428")]
		private void Reset()
		{
		}

		[Token(Token = "0x6002818")]
		[Address(RVA = "0xC1142C", Offset = "0xC1142C", VA = "0xC1142C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002819")]
		[Address(RVA = "0xC11430", Offset = "0xC11430", VA = "0xC11430", Slot = "8")]
		protected virtual void Start()
		{
		}

		[Token(Token = "0x600281A")]
		[Address(RVA = "0xC11448", Offset = "0xC11448", VA = "0xC11448")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x600281B")]
		[Address(RVA = "0xC11450", Offset = "0xC11450", VA = "0xC11450")]
		public void ResetLook()
		{
		}

		[Token(Token = "0x600281C")]
		[Address(RVA = "0xC11484", Offset = "0xC11484", VA = "0xC11484")]
		private void Update()
		{
		}

		[Token(Token = "0x600281D")]
		[Address(RVA = "0xC1162C", Offset = "0xC1162C", VA = "0xC1162C")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x600281E")]
		[Address(RVA = "0xC1164C", Offset = "0xC1164C", VA = "0xC1164C", Slot = "9")]
		public virtual void LateUpdate()
		{
		}

		[Token(Token = "0x600281F")]
		[Address(RVA = "0xC1172C", Offset = "0xC1172C", VA = "0xC1172C")]
		public FLookAnimator()
		{
		}
	}
}
namespace NeatAudio
{
	[Token(Token = "0x20006A0")]
	public class NeatAudioCodeTimer : MonoBehaviour
	{
		[Token(Token = "0x20006A1")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x974D80", Offset = "0x974D80")]
		private sealed class <DelayedCallNextFrameCoroutine>d__14 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40027FB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40027FC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40027FD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public bool errorOnNull;

			[Token(Token = "0x40027FE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Action action;

			[Token(Token = "0x17000479")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002854")]
				[Address(RVA = "0xC27C44", Offset = "0xC27C44", VA = "0xC27C44", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700047A")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002856")]
				[Address(RVA = "0xC27CAC", Offset = "0xC27CAC", VA = "0xC27CAC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002851")]
			[Address(RVA = "0xC278AC", Offset = "0xC278AC", VA = "0xC278AC")]
			[DebuggerHidden]
			public <DelayedCallNextFrameCoroutine>d__14(int <>1__state)
			{
			}

			[Token(Token = "0x6002852")]
			[Address(RVA = "0xC27BB8", Offset = "0xC27BB8", VA = "0xC27BB8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002853")]
			[Address(RVA = "0xC27BBC", Offset = "0xC27BBC", VA = "0xC27BBC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002855")]
			[Address(RVA = "0xC27C4C", Offset = "0xC27C4C", VA = "0xC27C4C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20006A2")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x974D90", Offset = "0x974D90")]
		private sealed class <DelayedCallCoroutine>d__15 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40027FF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002800")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002801")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float delay;

			[Token(Token = "0x4002802")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public bool errorOnNull;

			[Token(Token = "0x4002803")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Action action;

			[Token(Token = "0x1700047B")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600285A")]
				[Address(RVA = "0xC27B48", Offset = "0xC27B48", VA = "0xC27B48", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700047C")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600285C")]
				[Address(RVA = "0xC27BB0", Offset = "0xC27BB0", VA = "0xC27BB0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002857")]
			[Address(RVA = "0xC278D8", Offset = "0xC278D8", VA = "0xC278D8")]
			[DebuggerHidden]
			public <DelayedCallCoroutine>d__15(int <>1__state)
			{
			}

			[Token(Token = "0x6002858")]
			[Address(RVA = "0xC27A6C", Offset = "0xC27A6C", VA = "0xC27A6C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002859")]
			[Address(RVA = "0xC27A70", Offset = "0xC27A70", VA = "0xC27A70", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600285B")]
			[Address(RVA = "0xC27B50", Offset = "0xC27B50", VA = "0xC27B50", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20006A3")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x974DA0", Offset = "0x974DA0")]
		private sealed class <DelayedCallCoroutine>d__16<T> : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002804")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private int <>1__state;

			[Token(Token = "0x4002805")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private object <>2__current;

			[Token(Token = "0x4002806")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public float delay;

			[Token(Token = "0x4002807")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public bool errorOnNull;

			[Token(Token = "0x4002808")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Action<T> action;

			[Token(Token = "0x4002809")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public T obj;

			[Token(Token = "0x1700047D")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002860")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700047E")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002862")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600285D")]
			[DebuggerHidden]
			public <DelayedCallCoroutine>d__16(int <>1__state)
			{
			}

			[Token(Token = "0x600285E")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600285F")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002861")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40027F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static bool hasInstance;

		[Token(Token = "0x40027F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static NeatAudioCodeTimer _instance;

		[Token(Token = "0x40027FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static int disableFrame;

		[Token(Token = "0x17000477")]
		private static NeatAudioCodeTimer Instance
		{
			[Token(Token = "0x6002841")]
			[Address(RVA = "0xC27140", Offset = "0xC27140", VA = "0xC27140")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000478")]
		public static bool HasInstance
		{
			[Token(Token = "0x6002842")]
			[Address(RVA = "0xC27320", Offset = "0xC27320", VA = "0xC27320")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6002843")]
		[Address(RVA = "0xC27388", Offset = "0xC27388", VA = "0xC27388")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6002844")]
		public static Coroutine DelayedCall<T>(float delay, Action<T> action, T obj, bool errorOnNull = true)
		{
			return null;
		}

		[Token(Token = "0x6002845")]
		private Coroutine DelayedCallInstance<T>(float delay, Action<T> action, T obj, bool errorOnNull)
		{
			return null;
		}

		[Token(Token = "0x6002846")]
		[Address(RVA = "0xC27508", Offset = "0xC27508", VA = "0xC27508")]
		public static Coroutine DelayedCall(float delay, Action action, bool errorOnNull = true)
		{
			return null;
		}

		[Token(Token = "0x6002847")]
		[Address(RVA = "0xC2761C", Offset = "0xC2761C", VA = "0xC2761C")]
		private Coroutine DelayedCallInstance(float delay, Action action, bool errorOnNull)
		{
			return null;
		}

		[Token(Token = "0x6002848")]
		[Address(RVA = "0xC276EC", Offset = "0xC276EC", VA = "0xC276EC")]
		public static Coroutine DelayedCallNextFrame(Action action, bool errorOnNull = true)
		{
			return null;
		}

		[Token(Token = "0x6002849")]
		[Address(RVA = "0xC277EC", Offset = "0xC277EC", VA = "0xC277EC")]
		private Coroutine DelayedCallNextFrameInstance(Action action, bool errorOnNull)
		{
			return null;
		}

		[Token(Token = "0x600284A")]
		[Address(RVA = "0xC2781C", Offset = "0xC2781C", VA = "0xC2781C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x994C30", Offset = "0x994C30")]
		private IEnumerator DelayedCallNextFrameCoroutine(Action action, bool errorOnNull)
		{
			return null;
		}

		[Token(Token = "0x600284B")]
		[Address(RVA = "0xC2764C", Offset = "0xC2764C", VA = "0xC2764C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x994C94", Offset = "0x994C94")]
		private IEnumerator DelayedCallCoroutine(float delay, Action action, bool errorOnNull)
		{
			return null;
		}

		[Token(Token = "0x600284C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x994CF8", Offset = "0x994CF8")]
		private IEnumerator DelayedCallCoroutine<T>(float delay, Action<T> action, T obj, bool errorOnNull)
		{
			return null;
		}

		[Token(Token = "0x600284D")]
		[Address(RVA = "0xC27904", Offset = "0xC27904", VA = "0xC27904")]
		public static bool StopDelayedCall(Coroutine routine)
		{
			return default(bool);
		}

		[Token(Token = "0x600284E")]
		[Address(RVA = "0xC27410", Offset = "0xC27410", VA = "0xC27410")]
		public static bool StopAllDelayedCalls()
		{
			return default(bool);
		}

		[Token(Token = "0x600284F")]
		[Address(RVA = "0xC27A10", Offset = "0xC27A10", VA = "0xC27A10")]
		public NeatAudioCodeTimer()
		{
		}
	}
	[Token(Token = "0x20006A4")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x974DB0", Offset = "0x974DB0")]
	public class NeatAudioCue : ScriptableObject
	{
		[Token(Token = "0x400280A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float volume;

		[Token(Token = "0x400280B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public NeatAudioElement[] audioElements;

		[Token(Token = "0x6002863")]
		[Address(RVA = "0xC27CB4", Offset = "0xC27CB4", VA = "0xC27CB4")]
		private static Vector2 UpdateMultOffset(Vector4 remap)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6002864")]
		[Address(RVA = "0xC27CD0", Offset = "0xC27CD0", VA = "0xC27CD0")]
		public void TryInit()
		{
		}

		[Token(Token = "0x6002865")]
		[Address(RVA = "0xC287BC", Offset = "0xC287BC", VA = "0xC287BC")]
		public void SetParameter(int key, float value, float overTime = -1f, float smooth = -1f)
		{
		}

		[Token(Token = "0x6002866")]
		[Address(RVA = "0xC299C0", Offset = "0xC299C0", VA = "0xC299C0")]
		public void Detach()
		{
		}

		[Token(Token = "0x6002867")]
		[Address(RVA = "0xC29DE0", Offset = "0xC29DE0", VA = "0xC29DE0")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6002868")]
		[Address(RVA = "0xC29F1C", Offset = "0xC29F1C", VA = "0xC29F1C")]
		public NeatAudioCue()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20006A5")]
	public class NeatAudioElement
	{
		[Serializable]
		[Token(Token = "0x20006A6")]
		public class AudioClipGroup
		{
			[Token(Token = "0x400287B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public AudioClip[] clips;

			[Token(Token = "0x400287C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public AudioClip[] intros;

			[Token(Token = "0x400287D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public AudioClip[] outros;

			[Token(Token = "0x400287E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float minForSelect;

			[Token(Token = "0x400287F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public float maxForSelect;

			[Token(Token = "0x4002880")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public float reTriggerOffset;

			[Token(Token = "0x4002881")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			public float groupVolume;

			[Token(Token = "0x6002884")]
			[Address(RVA = "0x1039C60", Offset = "0x1039C60", VA = "0x1039C60")]
			public AudioClipGroup()
			{
			}
		}

		[Token(Token = "0x20006A7")]
		public enum Modulation
		{
			[Token(Token = "0x4002883")]
			None,
			[Token(Token = "0x4002884")]
			Sine,
			[Token(Token = "0x4002885")]
			Triangle,
			[Token(Token = "0x4002886")]
			Square,
			[Token(Token = "0x4002887")]
			Saw
		}

		[Token(Token = "0x20006A8")]
		public enum ClipSelectStyle
		{
			[Token(Token = "0x4002889")]
			Sequential,
			[Token(Token = "0x400288A")]
			Random,
			[Token(Token = "0x400288B")]
			RandomAvoidSame
		}

		[Token(Token = "0x20006A9")]
		public enum LoopStyle
		{
			[Token(Token = "0x400288D")]
			OneShot,
			[Token(Token = "0x400288E")]
			Loop
		}

		[Token(Token = "0x20006AA")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x974DC0", Offset = "0x974DC0")]
		private sealed class <>c__DisplayClass18_0
		{
			[Token(Token = "0x400288F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int lambdaSafe;

			[Token(Token = "0x4002890")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public NeatAudioElement <>4__this;

			[Token(Token = "0x6002885")]
			[Address(RVA = "0x103992C", Offset = "0x103992C", VA = "0x103992C")]
			public <>c__DisplayClass18_0()
			{
			}

			[Token(Token = "0x6002886")]
			[Address(RVA = "0x1039934", Offset = "0x1039934", VA = "0x1039934")]
			internal float <UpdateVariables>b__0()
			{
				return default(float);
			}

			[Token(Token = "0x6002887")]
			[Address(RVA = "0x103997C", Offset = "0x103997C", VA = "0x103997C")]
			internal void <UpdateVariables>b__1(float x)
			{
			}
		}

		[Token(Token = "0x20006AB")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x974DD0", Offset = "0x974DD0")]
		private sealed class <>c__DisplayClass18_1
		{
			[Token(Token = "0x4002891")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int lambdaSafe;

			[Token(Token = "0x4002892")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public NeatAudioElement <>4__this;

			[Token(Token = "0x6002888")]
			[Address(RVA = "0x10399D0", Offset = "0x10399D0", VA = "0x10399D0")]
			public <>c__DisplayClass18_1()
			{
			}

			[Token(Token = "0x6002889")]
			[Address(RVA = "0x10399D8", Offset = "0x10399D8", VA = "0x10399D8")]
			internal float <UpdateVariables>b__2()
			{
				return default(float);
			}

			[Token(Token = "0x600288A")]
			[Address(RVA = "0x1039A20", Offset = "0x1039A20", VA = "0x1039A20")]
			internal void <UpdateVariables>b__3(float x)
			{
			}
		}

		[Token(Token = "0x20006AC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x974DE0", Offset = "0x974DE0")]
		private sealed class <>c__DisplayClass18_2
		{
			[Token(Token = "0x4002893")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int lambdaSafe;

			[Token(Token = "0x4002894")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public NeatAudioElement <>4__this;

			[Token(Token = "0x600288B")]
			[Address(RVA = "0x1039A74", Offset = "0x1039A74", VA = "0x1039A74")]
			public <>c__DisplayClass18_2()
			{
			}

			[Token(Token = "0x600288C")]
			[Address(RVA = "0x1039A7C", Offset = "0x1039A7C", VA = "0x1039A7C")]
			internal float <UpdateVariables>b__4()
			{
				return default(float);
			}

			[Token(Token = "0x600288D")]
			[Address(RVA = "0x1039AC4", Offset = "0x1039AC4", VA = "0x1039AC4")]
			internal void <UpdateVariables>b__5(float x)
			{
			}
		}

		[Token(Token = "0x20006AD")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x974DF0", Offset = "0x974DF0")]
		private sealed class <>c__DisplayClass18_3
		{
			[Token(Token = "0x4002895")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int lambdaSafe;

			[Token(Token = "0x4002896")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public NeatAudioElement <>4__this;

			[Token(Token = "0x600288E")]
			[Address(RVA = "0x1039B18", Offset = "0x1039B18", VA = "0x1039B18")]
			public <>c__DisplayClass18_3()
			{
			}

			[Token(Token = "0x600288F")]
			[Address(RVA = "0x1039B20", Offset = "0x1039B20", VA = "0x1039B20")]
			internal float <UpdateVariables>b__6()
			{
				return default(float);
			}

			[Token(Token = "0x6002890")]
			[Address(RVA = "0x1039B68", Offset = "0x1039B68", VA = "0x1039B68")]
			internal void <UpdateVariables>b__7(float x)
			{
			}
		}

		[Token(Token = "0x20006AE")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x974E00", Offset = "0x974E00")]
		private sealed class <>c__DisplayClass18_4
		{
			[Token(Token = "0x4002897")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int lambdaSafe;

			[Token(Token = "0x4002898")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public NeatAudioElement <>4__this;

			[Token(Token = "0x6002891")]
			[Address(RVA = "0x1039BBC", Offset = "0x1039BBC", VA = "0x1039BBC")]
			public <>c__DisplayClass18_4()
			{
			}

			[Token(Token = "0x6002892")]
			[Address(RVA = "0x1039BC4", Offset = "0x1039BC4", VA = "0x1039BC4")]
			internal float <UpdateVariables>b__8()
			{
				return default(float);
			}

			[Token(Token = "0x6002893")]
			[Address(RVA = "0x1039C0C", Offset = "0x1039C0C", VA = "0x1039C0C")]
			internal void <UpdateVariables>b__9(float x)
			{
			}
		}

		[NonSerialized]
		[Token(Token = "0x400280C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public AudioClip selectedClip;

		[NonSerialized]
		[Token(Token = "0x400280D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float selectedDelay;

		[NonSerialized]
		[Token(Token = "0x400280E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float selectedPitch;

		[NonSerialized]
		[Token(Token = "0x400280F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float selectedVolume;

		[NonSerialized]
		[Token(Token = "0x4002810")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float selectedChance;

		[NonSerialized]
		[Token(Token = "0x4002811")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float baseDelay;

		[NonSerialized]
		[Token(Token = "0x4002812")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float basePitch;

		[NonSerialized]
		[Token(Token = "0x4002813")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float baseVolume;

		[NonSerialized]
		[Token(Token = "0x4002814")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float squaredDistanceForOptimizedPlayback;

		[NonSerialized]
		[Token(Token = "0x4002815")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public NeatAudioCue owner;

		[NonSerialized]
		[Token(Token = "0x4002816")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public int indexPreviouslyPlayed;

		[NonSerialized]
		[Token(Token = "0x4002817")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public int clipGroupSelected;

		[NonSerialized]
		[Token(Token = "0x4002818")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public int clipGroupPlaying;

		[NonSerialized]
		[Token(Token = "0x4002819")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public float clipGroupSelectionValue;

		[NonSerialized]
		[Token(Token = "0x400281A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public bool noMansSky;

		[NonSerialized]
		[Token(Token = "0x400281B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public float currentDelay;

		[NonSerialized]
		[Token(Token = "0x400281C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public bool initialized;

		[NonSerialized]
		[Token(Token = "0x400281D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public int clipSelectParamLength;

		[NonSerialized]
		[Token(Token = "0x400281E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public int chanceParamLength;

		[NonSerialized]
		[Token(Token = "0x400281F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public int delayParamLength;

		[NonSerialized]
		[Token(Token = "0x4002820")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public int volumeParamLength;

		[NonSerialized]
		[Token(Token = "0x4002821")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public int pitchParamLength;

		[NonSerialized]
		[Token(Token = "0x4002822")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public Vector2[] clipSelectParameterRemapSimple;

		[NonSerialized]
		[Token(Token = "0x4002823")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public Vector2[] chanceParameterRemapSimple;

		[NonSerialized]
		[Token(Token = "0x4002824")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public Vector2[] delayParameterRemapSimple;

		[NonSerialized]
		[Token(Token = "0x4002825")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public Vector2[] volumeParameterRemapSimple;

		[NonSerialized]
		[Token(Token = "0x4002826")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public Vector2[] pitchParameterRemapSimple;

		[NonSerialized]
		[Token(Token = "0x4002827")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public Tweener[] clipSelectTweeners;

		[NonSerialized]
		[Token(Token = "0x4002828")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public Tweener[] chanceTweeners;

		[NonSerialized]
		[Token(Token = "0x4002829")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public Tweener[] delayTweeners;

		[NonSerialized]
		[Token(Token = "0x400282A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public Tweener[] volumeTweeners;

		[NonSerialized]
		[Token(Token = "0x400282B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public Tweener[] pitchTweeners;

		[NonSerialized]
		[Token(Token = "0x400282C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public float[] clipSelectParameterValues;

		[NonSerialized]
		[Token(Token = "0x400282D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public float[] chanceParameterValues;

		[NonSerialized]
		[Token(Token = "0x400282E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		public float[] delayParameterValues;

		[NonSerialized]
		[Token(Token = "0x400282F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		public float[] volumeParameterValues;

		[NonSerialized]
		[Token(Token = "0x4002830")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		public float[] pitchParameterValues;

		[NonSerialized]
		[Token(Token = "0x4002831")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		public float fadeMultiplier;

		[NonSerialized]
		[Token(Token = "0x4002832")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		public AudioSource attachedToSource;

		[NonSerialized]
		[Token(Token = "0x4002833")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		public NeatAudioPlayer attachedToPlayer;

		[NonSerialized]
		[Token(Token = "0x4002834")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		public NeatPooledAudioSource attachedToPooledSource;

		[Token(Token = "0x4002835")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		private Coroutine disableSourceRoutine;

		[Token(Token = "0x4002836")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		private Coroutine delayedPlaySourceRoutine;

		[Token(Token = "0x4002837")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		private bool hasFadeTweener;

		[Token(Token = "0x4002838")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		private Tweener fadeTweener;

		[Token(Token = "0x4002839")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		private bool attachedToAudioPlayer;

		[Token(Token = "0x400283A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x129")]
		private bool isPlaying;

		[Token(Token = "0x400283B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		[HideInInspector]
		public int[] clipGroupSelectParameterHash;

		[Token(Token = "0x400283C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		[HideInInspector]
		public Vector4[] clipSelectParameterRemapInfo;

		[Token(Token = "0x400283D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		[HideInInspector]
		public bool[] clipSelectParameterShouldRemap;

		[Token(Token = "0x400283E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		[HideInInspector]
		public Vector2[] clipSelectParameterModulationInfo;

		[Token(Token = "0x400283F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		[HideInInspector]
		public Modulation[] clipSelectParameterModulated;

		[Token(Token = "0x4002840")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		[HideInInspector]
		public int[] playChanceParameterHash;

		[Token(Token = "0x4002841")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		[HideInInspector]
		public Vector4[] chanceParameterRemapInfo;

		[Token(Token = "0x4002842")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		[HideInInspector]
		public bool[] chanceParameterShouldRemap;

		[Token(Token = "0x4002843")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		[HideInInspector]
		public Vector2[] chanceParameterModulationInfo;

		[Token(Token = "0x4002844")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		[HideInInspector]
		public Modulation[] chanceParameterModulated;

		[Token(Token = "0x4002845")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		[HideInInspector]
		public int[] delayParameterHash;

		[Token(Token = "0x4002846")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
		[HideInInspector]
		public Vector4[] delayParameterRemapInfo;

		[Token(Token = "0x4002847")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
		[HideInInspector]
		public bool[] delayParameterShouldRemap;

		[Token(Token = "0x4002848")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
		[HideInInspector]
		public Vector2[] delayParameterModulationInfo;

		[Token(Token = "0x4002849")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
		[HideInInspector]
		public Modulation[] delayParameterModulated;

		[Token(Token = "0x400284A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
		[HideInInspector]
		public int[] volumeParameterHash;

		[Token(Token = "0x400284B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
		[HideInInspector]
		public Vector4[] volumeParameterRemapInfo;

		[Token(Token = "0x400284C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
		[HideInInspector]
		public bool[] volumeParameterShouldRemap;

		[Token(Token = "0x400284D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
		[HideInInspector]
		public Vector2[] volumeParameterModulationInfo;

		[Token(Token = "0x400284E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
		[HideInInspector]
		public Modulation[] volumeParameterModulated;

		[Token(Token = "0x400284F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
		[HideInInspector]
		public int[] pitchParameterHash;

		[Token(Token = "0x4002850")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
		[HideInInspector]
		public Vector4[] pitchParameterRemapInfo;

		[Token(Token = "0x4002851")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
		[HideInInspector]
		public bool[] pitchParameterShouldRemap;

		[Token(Token = "0x4002852")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
		[HideInInspector]
		public Vector2[] pitchParameterModulationInfo;

		[Token(Token = "0x4002853")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
		[HideInInspector]
		public Modulation[] pitchParameterModulated;

		[Token(Token = "0x4002854")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
		public string[] parameters;

		[Token(Token = "0x4002855")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
		public bool playAdditive;

		[Token(Token = "0x4002856")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x201")]
		public bool mute;

		[Token(Token = "0x4002857")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x204")]
		public float fadeInTime;

		[Token(Token = "0x4002858")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
		public float fadeOutTime;

		[Token(Token = "0x4002859")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
		public AudioClipGroup[] audioClipGroups;

		[Token(Token = "0x400285A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
		public bool switchClipGroupWhilePlaying;

		[Token(Token = "0x400285B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x219")]
		public bool stopWhenNoGroupSelected;

		[Token(Token = "0x400285C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21A")]
		public bool chanceStart;

		[Token(Token = "0x400285D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21B")]
		public bool chanceIteration;

		[Token(Token = "0x400285E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21C")]
		public float playChance;

		[Token(Token = "0x400285F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x220")]
		public bool delayStart;

		[Token(Token = "0x4002860")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x221")]
		public bool delayIteration;

		[Token(Token = "0x4002861")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x224")]
		public float delay;

		[Token(Token = "0x4002862")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x228")]
		public float delayVariation;

		[Token(Token = "0x4002863")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x22C")]
		public bool clipLengthToDelay;

		[Token(Token = "0x4002864")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x230")]
		public ClipSelectStyle clipSelectStyle;

		[Token(Token = "0x4002865")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x238")]
		public AudioMixerGroup mixerGroup;

		[Token(Token = "0x4002866")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x240")]
		public float volume;

		[Token(Token = "0x4002867")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x244")]
		public float volumeVariation;

		[Token(Token = "0x4002868")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x248")]
		public float pitch;

		[Token(Token = "0x4002869")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24C")]
		public float pitchVariation;

		[Token(Token = "0x400286A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x250")]
		public LoopStyle loopStyle;

		[Token(Token = "0x400286B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x254")]
		public int priority;

		[Token(Token = "0x400286C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x258")]
		public bool spatialize;

		[Token(Token = "0x400286D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x259")]
		public bool spatializePostEffects;

		[Token(Token = "0x400286E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x25C")]
		public float dopplerLevel;

		[Token(Token = "0x400286F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x260")]
		public float maxDistance;

		[Token(Token = "0x4002870")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x264")]
		public float minDistance;

		[Token(Token = "0x4002871")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x268")]
		public float panStereo;

		[Token(Token = "0x4002872")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x26C")]
		public AudioRolloffMode rolloffMode;

		[Token(Token = "0x4002873")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x270")]
		public AnimationCurve customRolloffCurve;

		[Token(Token = "0x4002874")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x278")]
		public float spatialBlend;

		[Token(Token = "0x4002875")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x27C")]
		public bool useUnityFalloff;

		[Token(Token = "0x4002876")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x27D")]
		public bool bypassEffects;

		[Token(Token = "0x4002877")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x27E")]
		public bool bypassListenerEffects;

		[Token(Token = "0x4002878")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x27F")]
		public bool bypassReverbZones;

		[Token(Token = "0x4002879")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x280")]
		public float reverbZoneMix;

		[Token(Token = "0x400287A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x284")]
		public float spread;

		[Token(Token = "0x6002869")]
		[Address(RVA = "0xC29F50", Offset = "0xC29F50", VA = "0xC29F50")]
		public void AttachPooledSource(NeatPooledAudioSource pooledSource)
		{
		}

		[Token(Token = "0x600286A")]
		[Address(RVA = "0xC29F94", Offset = "0xC29F94", VA = "0xC29F94")]
		public void AttachPlayer(NeatAudioPlayer audioPlayer)
		{
		}

		[Token(Token = "0x600286B")]
		[Address(RVA = "0xC29FC4", Offset = "0xC29FC4", VA = "0xC29FC4")]
		public void Attach(NeatAudioPlayer audioPlayer, AudioSource source)
		{
		}

		[Token(Token = "0x600286C")]
		[Address(RVA = "0xC29A28", Offset = "0xC29A28", VA = "0xC29A28")]
		public void Detach()
		{
		}

		[Token(Token = "0x600286D")]
		[Address(RVA = "0xC2A000", Offset = "0xC2A000", VA = "0xC2A000")]
		public void PickClip()
		{
		}

		[Token(Token = "0x600286E")]
		[Address(RVA = "0xC2A064", Offset = "0xC2A064", VA = "0xC2A064")]
		private void PickAudioClip(AudioClip[] clips)
		{
		}

		[Token(Token = "0x600286F")]
		[Address(RVA = "0xC2A170", Offset = "0xC2A170", VA = "0xC2A170")]
		private void UpdateClipGroup()
		{
		}

		[Token(Token = "0x6002870")]
		[Address(RVA = "0xC2A320", Offset = "0xC2A320", VA = "0xC2A320")]
		public void UpdatePlayChance()
		{
		}

		[Token(Token = "0x6002871")]
		[Address(RVA = "0xC2A394", Offset = "0xC2A394", VA = "0xC2A394")]
		public void PickBaseDelay()
		{
		}

		[Token(Token = "0x6002872")]
		[Address(RVA = "0xC2A3CC", Offset = "0xC2A3CC", VA = "0xC2A3CC")]
		public void UpdateDelay()
		{
		}

		[Token(Token = "0x6002873")]
		[Address(RVA = "0xC2A440", Offset = "0xC2A440", VA = "0xC2A440")]
		public void PickBaseVolume()
		{
		}

		[Token(Token = "0x6002874")]
		[Address(RVA = "0xC2A478", Offset = "0xC2A478", VA = "0xC2A478")]
		public void UpdateVolume()
		{
		}

		[Token(Token = "0x6002875")]
		[Address(RVA = "0xC2A5C4", Offset = "0xC2A5C4", VA = "0xC2A5C4")]
		public void PickBasePitch()
		{
		}

		[Token(Token = "0x6002876")]
		[Address(RVA = "0xC2A5FC", Offset = "0xC2A5FC", VA = "0xC2A5FC")]
		public void UpdatePitch()
		{
		}

		[Token(Token = "0x6002877")]
		[Address(RVA = "0xC2885C", Offset = "0xC2885C", VA = "0xC2885C")]
		public void UpdateVariables(int key, float value, float overTime = -1f, float smooth = -1f)
		{
		}

		[Token(Token = "0x6002878")]
		[Address(RVA = "0xC2A6FC", Offset = "0xC2A6FC", VA = "0xC2A6FC")]
		public bool IsPlaying()
		{
			return default(bool);
		}

		[Token(Token = "0x6002879")]
		[Address(RVA = "0xC2A704", Offset = "0xC2A704", VA = "0xC2A704")]
		public void BeginningPlay(float delay = -1f)
		{
		}

		[Token(Token = "0x600287A")]
		[Address(RVA = "0xC2AE5C", Offset = "0xC2AE5C", VA = "0xC2AE5C")]
		private void OnStopPlaying()
		{
		}

		[Token(Token = "0x600287B")]
		[Address(RVA = "0xC2AF94", Offset = "0xC2AF94", VA = "0xC2AF94")]
		public float StoppingPlay()
		{
			return default(float);
		}

		[Token(Token = "0x600287C")]
		[Address(RVA = "0xC2B198", Offset = "0xC2B198", VA = "0xC2B198")]
		private void StopAfterFade()
		{
		}

		[Token(Token = "0x600287D")]
		[Address(RVA = "0xC29E48", Offset = "0xC29E48", VA = "0xC29E48")]
		public void StopThingsNow()
		{
		}

		[Token(Token = "0x600287E")]
		[Address(RVA = "0xC2B2E8", Offset = "0xC2B2E8", VA = "0xC2B2E8")]
		public NeatAudioElement()
		{
		}

		[Token(Token = "0x600287F")]
		[Address(RVA = "0xC2B358", Offset = "0xC2B358", VA = "0xC2B358")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x994E4C", Offset = "0x994E4C")]
		private void <BeginningPlay>b__20_0(float x)
		{
		}

		[Token(Token = "0x6002880")]
		[Address(RVA = "0xC2B360", Offset = "0xC2B360", VA = "0xC2B360")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x994E5C", Offset = "0x994E5C")]
		private void <BeginningPlay>b__20_1(float x)
		{
		}

		[Token(Token = "0x6002881")]
		[Address(RVA = "0xC2B368", Offset = "0xC2B368", VA = "0xC2B368")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x994E6C", Offset = "0x994E6C")]
		private void <BeginningPlay>b__20_2()
		{
		}

		[Token(Token = "0x6002882")]
		[Address(RVA = "0xC2B38C", Offset = "0xC2B38C", VA = "0xC2B38C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x994E7C", Offset = "0x994E7C")]
		private void <BeginningPlay>b__20_3()
		{
		}

		[Token(Token = "0x6002883")]
		[Address(RVA = "0xC2B3A8", Offset = "0xC2B3A8", VA = "0xC2B3A8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x994E8C", Offset = "0x994E8C")]
		private void <StoppingPlay>b__22_0(float x)
		{
		}
	}
	[Token(Token = "0x20006AF")]
	public class NeatAudioDelayedLooper : MonoBehaviour
	{
		[Token(Token = "0x4002899")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public NeatAudioPlayer audioPlayer;

		[Token(Token = "0x6002894")]
		[Address(RVA = "0xC29F2C", Offset = "0xC29F2C", VA = "0xC29F2C")]
		private void Update()
		{
		}

		[Token(Token = "0x6002895")]
		[Address(RVA = "0xC29F48", Offset = "0xC29F48", VA = "0xC29F48")]
		public NeatAudioDelayedLooper()
		{
		}
	}
	[Token(Token = "0x20006B0")]
	public class NeatAudioFollower : MonoBehaviour
	{
		[Token(Token = "0x400289A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform followObject;

		[Token(Token = "0x400289B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform backupFollowObject;

		[Token(Token = "0x6002896")]
		[Address(RVA = "0x1039C74", Offset = "0x1039C74", VA = "0x1039C74")]
		private void Update()
		{
		}

		[Token(Token = "0x6002897")]
		[Address(RVA = "0x1039DC0", Offset = "0x1039DC0", VA = "0x1039DC0")]
		public NeatAudioFollower()
		{
		}
	}
	[Token(Token = "0x20006B1")]
	public class NeatAudioManager : MonoBehaviour
	{
		[Token(Token = "0x400289C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private CullingGroup audioBandsCullingGroup;

		[Token(Token = "0x400289D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private NeatAudioPlayer[] distanceCheckedAudioPlayers;

		[Token(Token = "0x400289E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private BoundingSphere[] audioBoundingSpheres;

		[Token(Token = "0x400289F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int trackedAudioPlayersCount;

		[Token(Token = "0x40028A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Transform trackAudioPlayersAgainst;

		[Token(Token = "0x40028A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool audioPlayerTrackingIsSetup;

		[Token(Token = "0x40028A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static NeatAudioManager inst;

		[Token(Token = "0x40028A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
		private bool musicOff;

		[Token(Token = "0x40028A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private float defaultMusicVolume;

		[Token(Token = "0x40028A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static string MusicVolumeParameter;

		[Token(Token = "0x40028A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private bool hasInitializedVolume;

		[Token(Token = "0x40028A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private int currentUpdateIndex;

		[Token(Token = "0x40028A8")]
		private const int numEntriesToUpdate = 50;

		[Token(Token = "0x1700047F")]
		public static bool HasInstance
		{
			[Token(Token = "0x6002898")]
			[Address(RVA = "0x1039DC8", Offset = "0x1039DC8", VA = "0x1039DC8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6002899")]
		[Address(RVA = "0x1039E60", Offset = "0x1039E60", VA = "0x1039E60")]
		private void Awake()
		{
		}

		[Token(Token = "0x600289A")]
		[Address(RVA = "0x1039F78", Offset = "0x1039F78", VA = "0x1039F78")]
		public static void TrackAudioDistances(Transform trackAgainstTransform, Camera trackAgainstCamera)
		{
		}

		[Token(Token = "0x600289B")]
		[Address(RVA = "0x103A5DC", Offset = "0x103A5DC", VA = "0x103A5DC")]
		public static void AddTrackedPlayer(NeatAudioPlayer aPlayer)
		{
		}

		[Token(Token = "0x600289C")]
		[Address(RVA = "0x103A34C", Offset = "0x103A34C", VA = "0x103A34C")]
		private static void SetTrackingOnPlayer(NeatAudioPlayer aPlayer)
		{
		}

		[Token(Token = "0x600289D")]
		[Address(RVA = "0x103A940", Offset = "0x103A940", VA = "0x103A940")]
		public static void RemoveTrackedPlayer(NeatAudioPlayer aPlayer)
		{
		}

		[Token(Token = "0x600289E")]
		[Address(RVA = "0x103A9F0", Offset = "0x103A9F0", VA = "0x103A9F0")]
		private static void MoveLastTrackedAudioPlayerToIndex(int index)
		{
		}

		[Token(Token = "0x600289F")]
		[Address(RVA = "0x103ABE8", Offset = "0x103ABE8", VA = "0x103ABE8")]
		private void StateChangedForSphere(CullingGroupEvent evt)
		{
		}

		[Token(Token = "0x60028A0")]
		[Address(RVA = "0x103AC84", Offset = "0x103AC84", VA = "0x103AC84")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60028A1")]
		[Address(RVA = "0x103AD88", Offset = "0x103AD88", VA = "0x103AD88")]
		private void Update()
		{
		}

		[Token(Token = "0x60028A2")]
		[Address(RVA = "0x103B1D8", Offset = "0x103B1D8", VA = "0x103B1D8")]
		public static void ToggleMusic()
		{
		}

		[Token(Token = "0x60028A3")]
		[Address(RVA = "0x103B450", Offset = "0x103B450", VA = "0x103B450")]
		public NeatAudioManager()
		{
		}
	}
	[Token(Token = "0x20006B2")]
	public class NeatAudioModulator : NeatAudioParameterFixer
	{
		[Token(Token = "0x20006B3")]
		private class Thingy
		{
			[Token(Token = "0x40028AA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public float freq;

			[Token(Token = "0x40028AB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public float amp;

			[Token(Token = "0x40028AC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public NeatAudioElement.Modulation mod;

			[Token(Token = "0x60028AE")]
			[Address(RVA = "0x103B6FC", Offset = "0x103B6FC", VA = "0x103B6FC")]
			public Thingy(float freq, float amp, NeatAudioElement.Modulation mod)
			{
			}
		}

		[Token(Token = "0x40028A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private List<Thingy> thingies;

		[Token(Token = "0x60028A5")]
		[Address(RVA = "0x103B53C", Offset = "0x103B53C", VA = "0x103B53C")]
		public void Modulate(int key, float freq, float amp, NeatAudioElement.Modulation mod)
		{
		}

		[Token(Token = "0x60028A6")]
		[Address(RVA = "0x103B73C", Offset = "0x103B73C", VA = "0x103B73C")]
		public void UnModulate(int key)
		{
		}

		[Token(Token = "0x60028A7")]
		[Address(RVA = "0x103B814", Offset = "0x103B814", VA = "0x103B814", Slot = "4")]
		public override void Stop()
		{
		}

		[Token(Token = "0x60028A8")]
		[Address(RVA = "0x103B8EC", Offset = "0x103B8EC", VA = "0x103B8EC")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x60028A9")]
		[Address(RVA = "0x103BEA8", Offset = "0x103BEA8", VA = "0x103BEA8")]
		private float Lerp(float a, float b, float t)
		{
			return default(float);
		}

		[Token(Token = "0x60028AA")]
		[Address(RVA = "0x103BEC0", Offset = "0x103BEC0", VA = "0x103BEC0")]
		private float InverseLerp(float a, float b, float v)
		{
			return default(float);
		}

		[Token(Token = "0x60028AB")]
		[Address(RVA = "0x103BE38", Offset = "0x103BE38", VA = "0x103BE38")]
		private float Frac(float value)
		{
			return default(float);
		}

		[Token(Token = "0x60028AC")]
		[Address(RVA = "0x103BE14", Offset = "0x103BE14", VA = "0x103BE14")]
		private float Remap(float value, float iMin, float iMax, float oMin, float oMax)
		{
			return default(float);
		}

		[Token(Token = "0x60028AD")]
		[Address(RVA = "0x103BED0", Offset = "0x103BED0", VA = "0x103BED0")]
		public NeatAudioModulator()
		{
		}
	}
	[Token(Token = "0x20006B4")]
	public class NeatAudioParameterFixer : MonoBehaviour
	{
		[Token(Token = "0x40028AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public NeatAudioPlayer audioPlayer;

		[Token(Token = "0x40028AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		protected int length;

		[Token(Token = "0x40028AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		protected Dictionary<int, int> keysDict;

		[Token(Token = "0x40028B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		protected List<int> keysList;

		[Token(Token = "0x60028AF")]
		[Address(RVA = "0x103B874", Offset = "0x103B874", VA = "0x103B874", Slot = "4")]
		public virtual void Stop()
		{
		}

		[Token(Token = "0x60028B0")]
		[Address(RVA = "0x103BF48", Offset = "0x103BF48", VA = "0x103BF48")]
		public NeatAudioParameterFixer()
		{
		}
	}
	[Token(Token = "0x20006B5")]
	public class NeatAudioParameterSmoother : NeatAudioParameterFixer
	{
		[Token(Token = "0x20006B6")]
		private struct Thingy
		{
			[Token(Token = "0x40028B2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public float value;

			[Token(Token = "0x40028B3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public float smooth;

			[Token(Token = "0x60028B6")]
			[Address(RVA = "0xA4E1BC", Offset = "0xA4E1BC", VA = "0xA4E1BC")]
			public Thingy(float value, float smooth)
			{
			}
		}

		[Token(Token = "0x40028B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private List<Thingy> thingies;

		[Token(Token = "0x60028B1")]
		[Address(RVA = "0x103BFF8", Offset = "0x103BFF8", VA = "0x103BFF8")]
		public void SmoothOperate(int key, float value, float smooth)
		{
		}

		[Token(Token = "0x60028B2")]
		[Address(RVA = "0x103C118", Offset = "0x103C118", VA = "0x103C118")]
		public void UnPutInSmoothingList(int key)
		{
		}

		[Token(Token = "0x60028B3")]
		[Address(RVA = "0x103C1F0", Offset = "0x103C1F0", VA = "0x103C1F0", Slot = "4")]
		public override void Stop()
		{
		}

		[Token(Token = "0x60028B4")]
		[Address(RVA = "0x103C250", Offset = "0x103C250", VA = "0x103C250")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x60028B5")]
		[Address(RVA = "0x103C38C", Offset = "0x103C38C", VA = "0x103C38C")]
		public NeatAudioParameterSmoother()
		{
		}
	}
	[Token(Token = "0x20006B7")]
	public class NeatAudioPlayer : MonoBehaviour, IInitializable
	{
		[Token(Token = "0x20006B8")]
		public enum OptimizationType
		{
			[Token(Token = "0x40028D6")]
			Band7,
			[Token(Token = "0x40028D7")]
			Band15,
			[Token(Token = "0x40028D8")]
			Band25,
			[Token(Token = "0x40028D9")]
			Band40,
			[Token(Token = "0x40028DA")]
			Band70,
			[Token(Token = "0x40028DB")]
			DisableOnStop,
			[Token(Token = "0x40028DC")]
			None
		}

		[Token(Token = "0x20006B9")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x974E10", Offset = "0x974E10")]
		private sealed class <PlayAfterOneFrame>d__58 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40028DD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40028DE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40028DF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public NeatAudioPlayer <>4__this;

			[Token(Token = "0x17000481")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60028DC")]
				[Address(RVA = "0x103F094", Offset = "0x103F094", VA = "0x103F094", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000482")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60028DE")]
				[Address(RVA = "0x103F0FC", Offset = "0x103F0FC", VA = "0x103F0FC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60028D9")]
			[Address(RVA = "0x103E604", Offset = "0x103E604", VA = "0x103E604")]
			[DebuggerHidden]
			public <PlayAfterOneFrame>d__58(int <>1__state)
			{
			}

			[Token(Token = "0x60028DA")]
			[Address(RVA = "0x103EFB8", Offset = "0x103EFB8", VA = "0x103EFB8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60028DB")]
			[Address(RVA = "0x103EFBC", Offset = "0x103EFBC", VA = "0x103EFBC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60028DD")]
			[Address(RVA = "0x103F09C", Offset = "0x103F09C", VA = "0x103F09C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40028B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x986270", Offset = "0x986270")]
		public bool playOnEnable;

		[Token(Token = "0x40028B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		public NeatAudioCue audioCue;

		[NonSerialized]
		[Token(Token = "0x40028B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool usePooling;

		[Token(Token = "0x40028B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static float MIN_DISTANCE;

		[Token(Token = "0x40028B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public static float CLOSE_DISTANCE;

		[Token(Token = "0x40028B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static float MEDIUM_DISTANCE;

		[Token(Token = "0x40028BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public static float FAR_DISTANCE;

		[Token(Token = "0x40028BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static float MAX_DISTANCE;

		[Token(Token = "0x40028BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		private OptimizationType optimizationType;

		[Token(Token = "0x40028BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool playOnBandEnable;

		[Token(Token = "0x40028BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
		public bool debug;

		[Token(Token = "0x40028BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static AudioClip silence;

		[Token(Token = "0x40028C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x32")]
		[HideInInspector]
		public bool baked;

		[Token(Token = "0x40028C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private NeatAudioCue assignedAudioCue;

		[Token(Token = "0x40028C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private NeatAudioCue originalAudioCue;

		[Token(Token = "0x40028C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private bool woke;

		[Token(Token = "0x40028C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private List<AudioSource> audioSources;

		[Token(Token = "0x40028C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private NeatAudioFollower follower;

		[Token(Token = "0x40028C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private bool hasDelayedLooper;

		[Token(Token = "0x40028C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private NeatAudioDelayedLooper delayedLooper;

		[Token(Token = "0x40028C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private bool hasSmoother;

		[Token(Token = "0x40028C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private NeatAudioParameterSmoother smoother;

		[Token(Token = "0x40028CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private bool hasModulator;

		[Token(Token = "0x40028CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private NeatAudioModulator modulator;

		[NonSerialized]
		[Token(Token = "0x40028CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public int optIndex;

		[NonSerialized]
		[Token(Token = "0x40028CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public Transform myTransform;

		[Token(Token = "0x40028CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private Dictionary<NeatAudioCue, NeatAudioCue> instanceDict;

		[NonSerialized]
		[Token(Token = "0x40028CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public bool isBandActive;

		[Token(Token = "0x40028D0")]
		private const float REFLECTION_MIX_ADD = 0f;

		[Token(Token = "0x40028D1")]
		private const float DIRECT_MIX_SUBTRACT = 0f;

		[Token(Token = "0x40028D2")]
		private const float TRANSMISSION_ADD_IF_NO_REFLECTIONS = 0.33f;

		[Token(Token = "0x40028D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private Coroutine playAfterDelayRoutine;

		[Token(Token = "0x40028D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private Coroutine stopRoutine;

		[Token(Token = "0x17000480")]
		public bool Initialized
		{
			[Token(Token = "0x60028B7")]
			[Address(RVA = "0x103C404", Offset = "0x103C404", VA = "0x103C404")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60028B8")]
		[Address(RVA = "0x103C40C", Offset = "0x103C40C", VA = "0x103C40C")]
		public OptimizationType GetOptimizationType()
		{
			return default(OptimizationType);
		}

		[Token(Token = "0x60028B9")]
		[Address(RVA = "0x103C414", Offset = "0x103C414", VA = "0x103C414", Slot = "4")]
		public void Initialize()
		{
		}

		[Token(Token = "0x60028BA")]
		[Address(RVA = "0x103CC44", Offset = "0x103CC44", VA = "0x103CC44")]
		public void UpdateFollowObject(Transform newFollow, Transform backupFollow)
		{
		}

		[Token(Token = "0x60028BB")]
		[Address(RVA = "0x103CE48", Offset = "0x103CE48", VA = "0x103CE48")]
		public void AssignAndPlay(NeatAudioCue cue)
		{
		}

		[Token(Token = "0x60028BC")]
		[Address(RVA = "0x103CE6C", Offset = "0x103CE6C", VA = "0x103CE6C")]
		public void _UpdateModulation(int h, float freq, float amp, NeatAudioElement.Modulation mod)
		{
		}

		[Token(Token = "0x60028BD")]
		[Address(RVA = "0x103CF5C", Offset = "0x103CF5C", VA = "0x103CF5C")]
		public void GetSpectrumDataFirstElement(float[] samples, int channel, FFTWindow window)
		{
		}

		[Token(Token = "0x60028BE")]
		[Address(RVA = "0x103D09C", Offset = "0x103D09C", VA = "0x103D09C")]
		public void SetOptimizationType(OptimizationType type)
		{
		}

		[Token(Token = "0x60028BF")]
		[Address(RVA = "0x103D164", Offset = "0x103D164", VA = "0x103D164")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60028C0")]
		[Address(RVA = "0x103D200", Offset = "0x103D200", VA = "0x103D200")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60028C1")]
		[Address(RVA = "0x103D520", Offset = "0x103D520", VA = "0x103D520")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60028C2")]
		[Address(RVA = "0x103D670", Offset = "0x103D670", VA = "0x103D670")]
		public bool IsPlaying()
		{
			return default(bool);
		}

		[Token(Token = "0x60028C3")]
		[Address(RVA = "0x103D744", Offset = "0x103D744", VA = "0x103D744")]
		public void SetPlaying(bool playing)
		{
		}

		[Token(Token = "0x60028C4")]
		[Address(RVA = "0x103C7F4", Offset = "0x103C7F4", VA = "0x103C7F4")]
		public void AssignAudioCue(NeatAudioCue newAudioCue)
		{
		}

		[Token(Token = "0x60028C5")]
		[Address(RVA = "0x103DC14", Offset = "0x103DC14", VA = "0x103DC14")]
		public NeatAudioCue GetAudioCueOriginal()
		{
			return null;
		}

		[Token(Token = "0x60028C6")]
		[Address(RVA = "0x103DC1C", Offset = "0x103DC1C", VA = "0x103DC1C")]
		public NeatAudioCue GetAudioCueInstance()
		{
			return null;
		}

		[Token(Token = "0x60028C7")]
		[Address(RVA = "0x103DC24", Offset = "0x103DC24", VA = "0x103DC24")]
		public NeatAudioCue GetAudioCueInstanceByOriginal(NeatAudioCue original)
		{
			return null;
		}

		[Token(Token = "0x60028C8")]
		[Address(RVA = "0x103DC9C", Offset = "0x103DC9C", VA = "0x103DC9C")]
		public void SetParameterOverTime(int key, float value, float overTime)
		{
		}

		[Token(Token = "0x60028C9")]
		[Address(RVA = "0x103DD7C", Offset = "0x103DD7C", VA = "0x103DD7C")]
		public void SetParameter(int key, float value)
		{
		}

		[Token(Token = "0x60028CA")]
		[Address(RVA = "0x103DE58", Offset = "0x103DE58", VA = "0x103DE58")]
		public void SetParameterSmooth(int key, float value, float smoothness)
		{
		}

		[Token(Token = "0x60028CB")]
		[Address(RVA = "0x103A7BC", Offset = "0x103A7BC", VA = "0x103A7BC")]
		public void BandActive(bool active)
		{
		}

		[Token(Token = "0x60028CC")]
		[Address(RVA = "0x103D95C", Offset = "0x103D95C", VA = "0x103D95C")]
		private void AddAudioSourcesIfNeeded()
		{
		}

		[Token(Token = "0x60028CD")]
		[Address(RVA = "0x103DF2C", Offset = "0x103DF2C", VA = "0x103DF2C")]
		public void LoadAudioSourceValues(AudioSource audioSource, NeatAudioElement neatElement)
		{
		}

		[Token(Token = "0x60028CE")]
		[Address(RVA = "0x103E108", Offset = "0x103E108", VA = "0x103E108")]
		public void _DelayedLoopPlay()
		{
		}

		[Token(Token = "0x60028CF")]
		[Address(RVA = "0x103E588", Offset = "0x103E588", VA = "0x103E588")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x994E9C", Offset = "0x994E9C")]
		private IEnumerator PlayAfterOneFrame()
		{
			return null;
		}

		[Token(Token = "0x60028D0")]
		[Address(RVA = "0x103CAAC", Offset = "0x103CAAC", VA = "0x103CAAC")]
		public void Play()
		{
		}

		[Token(Token = "0x60028D1")]
		[Address(RVA = "0x103E194", Offset = "0x103E194", VA = "0x103E194")]
		public bool _PlayElement(NeatAudioElement audioElement, bool delayedLoop = false)
		{
			return default(bool);
		}

		[Token(Token = "0x60028D2")]
		[Address(RVA = "0x103D750", Offset = "0x103D750", VA = "0x103D750")]
		public void Stop()
		{
		}

		[Token(Token = "0x60028D3")]
		[Address(RVA = "0x103EDB0", Offset = "0x103EDB0", VA = "0x103EDB0")]
		public float _StopElement(NeatAudioElement audioElement)
		{
			return default(float);
		}

		[Token(Token = "0x60028D4")]
		[Address(RVA = "0x103E630", Offset = "0x103E630", VA = "0x103E630")]
		private void _StopModules()
		{
		}

		[Token(Token = "0x60028D5")]
		[Address(RVA = "0x103D368", Offset = "0x103D368", VA = "0x103D368")]
		private void ForceStopImmediately(NeatAudioElement elementToStop)
		{
		}

		[Token(Token = "0x60028D6")]
		[Address(RVA = "0x103D30C", Offset = "0x103D30C", VA = "0x103D30C")]
		public void AbortAndDetach(NeatAudioElement audioElement)
		{
		}

		[Token(Token = "0x60028D7")]
		[Address(RVA = "0x103EE6C", Offset = "0x103EE6C", VA = "0x103EE6C")]
		public NeatAudioPlayer()
		{
		}
	}
	[Token(Token = "0x20006BA")]
	public class NeatAudioPool : MonoBehaviour
	{
		[Token(Token = "0x40028E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static NeatAudioPool _instance;

		[Token(Token = "0x40028E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private NeatPooledAudioSource[] pooledSources;

		[Token(Token = "0x40028E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int usedSources;

		[Token(Token = "0x40028E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private int maxSources;

		[Token(Token = "0x40028E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private NeatAudioElement[] elementsNeedingSources;

		[Token(Token = "0x60028DF")]
		[Address(RVA = "0x103F104", Offset = "0x103F104", VA = "0x103F104")]
		public static NeatAudioPool GetInstance()
		{
			return null;
		}

		[Token(Token = "0x60028E0")]
		[Address(RVA = "0x103F154", Offset = "0x103F154", VA = "0x103F154")]
		private void Awake()
		{
		}

		[Token(Token = "0x60028E1")]
		[Address(RVA = "0x103F444", Offset = "0x103F444", VA = "0x103F444")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60028E2")]
		[Address(RVA = "0x103C70C", Offset = "0x103C70C", VA = "0x103C70C")]
		public static void Register()
		{
		}

		[Token(Token = "0x60028E3")]
		[Address(RVA = "0x103E6AC", Offset = "0x103E6AC", VA = "0x103E6AC")]
		public static void AssignPooledSources(NeatAudioPlayer aPlayer)
		{
		}

		[Token(Token = "0x60028E4")]
		[Address(RVA = "0x103F500", Offset = "0x103F500", VA = "0x103F500")]
		public static void ReturnToPool(NeatPooledAudioSource pooled)
		{
		}

		[Token(Token = "0x60028E5")]
		[Address(RVA = "0x103F700", Offset = "0x103F700", VA = "0x103F700")]
		private void Update()
		{
		}

		[Token(Token = "0x60028E6")]
		[Address(RVA = "0x103F848", Offset = "0x103F848", VA = "0x103F848")]
		public NeatAudioPool()
		{
		}
	}
	[Token(Token = "0x20006BB")]
	public class NeatPooledAudioSource : MonoBehaviour
	{
		[Token(Token = "0x40028E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AudioSource audioSource;

		[Token(Token = "0x40028E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public NeatAudioElement neatAudioElement;

		[Token(Token = "0x40028E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool markedForRelease;

		[Token(Token = "0x40028E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public int poolIndex;

		[Token(Token = "0x60028E7")]
		[Address(RVA = "0x103F850", Offset = "0x103F850", VA = "0x103F850")]
		public NeatPooledAudioSource()
		{
		}
	}
}
namespace DG.Tweening
{
	[Token(Token = "0x20006BC")]
	public static class DOTweenModulePhysics
	{
		[Token(Token = "0x20006BD")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x974E30", Offset = "0x974E30")]
		private sealed class <>c__DisplayClass9_0
		{
			[Token(Token = "0x40028E9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Rigidbody target;

			[Token(Token = "0x60028EA")]
			[Address(RVA = "0xBF2918", Offset = "0xBF2918", VA = "0xBF2918")]
			public <>c__DisplayClass9_0()
			{
			}

			[Token(Token = "0x60028EB")]
			[Address(RVA = "0xBF2BF0", Offset = "0xBF2BF0", VA = "0xBF2BF0")]
			internal Vector3 <DOPath>b__0()
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x20006BE")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x974E40", Offset = "0x974E40")]
		private sealed class <>c__DisplayClass10_0
		{
			[Token(Token = "0x40028EA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Transform trans;

			[Token(Token = "0x40028EB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Rigidbody target;

			[Token(Token = "0x60028EC")]
			[Address(RVA = "0xBF2AC8", Offset = "0xBF2AC8", VA = "0xBF2AC8")]
			public <>c__DisplayClass10_0()
			{
			}

			[Token(Token = "0x60028ED")]
			[Address(RVA = "0xBF2AD0", Offset = "0xBF2AD0", VA = "0xBF2AD0")]
			internal Vector3 <DOLocalPath>b__0()
			{
				return default(Vector3);
			}

			[Token(Token = "0x60028EE")]
			[Address(RVA = "0xBF2AEC", Offset = "0xBF2AEC", VA = "0xBF2AEC")]
			internal void <DOLocalPath>b__1(Vector3 x)
			{
			}
		}

		[Token(Token = "0x60028E8")]
		[Address(RVA = "0xBF2790", Offset = "0xBF2790", VA = "0xBF2790")]
		internal static TweenerCore<Vector3, DG.Tweening.Plugins.Core.PathCore.Path, PathOptions> DOPath(this Rigidbody target, DG.Tweening.Plugins.Core.PathCore.Path path, float duration, PathMode pathMode = PathMode.Full3D)
		{
			return null;
		}

		[Token(Token = "0x60028E9")]
		[Address(RVA = "0xBF2920", Offset = "0xBF2920", VA = "0xBF2920")]
		internal static TweenerCore<Vector3, DG.Tweening.Plugins.Core.PathCore.Path, PathOptions> DOLocalPath(this Rigidbody target, DG.Tweening.Plugins.Core.PathCore.Path path, float duration, PathMode pathMode = PathMode.Full3D)
		{
			return null;
		}
	}
	[Token(Token = "0x20006BF")]
	public static class DOTweenModuleSprite
	{
		[Token(Token = "0x20006C0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x974E60", Offset = "0x974E60")]
		private sealed class <>c__DisplayClass1_0
		{
			[Token(Token = "0x40028EC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public SpriteRenderer target;

			[Token(Token = "0x60028F0")]
			[Address(RVA = "0xBF2D58", Offset = "0xBF2D58", VA = "0xBF2D58")]
			public <>c__DisplayClass1_0()
			{
			}

			[Token(Token = "0x60028F1")]
			[Address(RVA = "0xBF2D60", Offset = "0xBF2D60", VA = "0xBF2D60")]
			internal Color <DOFade>b__0()
			{
				return default(Color);
			}

			[Token(Token = "0x60028F2")]
			[Address(RVA = "0xBF2D7C", Offset = "0xBF2D7C", VA = "0xBF2D7C")]
			internal void <DOFade>b__1(Color x)
			{
			}
		}

		[Token(Token = "0x60028EF")]
		[Address(RVA = "0xBF2C0C", Offset = "0xBF2C0C", VA = "0xBF2C0C")]
		public static TweenerCore<Color, Color, ColorOptions> DOFade(this SpriteRenderer target, float endValue, float duration)
		{
			return null;
		}
	}
	[Token(Token = "0x20006C1")]
	public static class DOTweenModuleUI
	{
		[Token(Token = "0x20006C2")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x974E80", Offset = "0x974E80")]
		private sealed class <>c__DisplayClass2_0
		{
			[Token(Token = "0x40028ED")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Graphic target;

			[Token(Token = "0x60028F5")]
			[Address(RVA = "0xBF2EE4", Offset = "0xBF2EE4", VA = "0xBF2EE4")]
			public <>c__DisplayClass2_0()
			{
			}

			[Token(Token = "0x60028F6")]
			[Address(RVA = "0xBF3068", Offset = "0xBF3068", VA = "0xBF3068")]
			internal Color <DOFade>b__0()
			{
				return default(Color);
			}

			[Token(Token = "0x60028F7")]
			[Address(RVA = "0xBF308C", Offset = "0xBF308C", VA = "0xBF308C")]
			internal void <DOFade>b__1(Color x)
			{
			}
		}

		[Token(Token = "0x20006C3")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x974E90", Offset = "0x974E90")]
		private sealed class <>c__DisplayClass3_0
		{
			[Token(Token = "0x40028EE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Image target;

			[Token(Token = "0x60028F8")]
			[Address(RVA = "0xBF3060", Offset = "0xBF3060", VA = "0xBF3060")]
			public <>c__DisplayClass3_0()
			{
			}

			[Token(Token = "0x60028F9")]
			[Address(RVA = "0xBF30B0", Offset = "0xBF30B0", VA = "0xBF30B0")]
			internal Color <DOColor>b__0()
			{
				return default(Color);
			}

			[Token(Token = "0x60028FA")]
			[Address(RVA = "0xBF30D4", Offset = "0xBF30D4", VA = "0xBF30D4")]
			internal void <DOColor>b__1(Color x)
			{
			}
		}

		[Token(Token = "0x60028F3")]
		[Address(RVA = "0xBF2D98", Offset = "0xBF2D98", VA = "0xBF2D98")]
		public static TweenerCore<Color, Color, ColorOptions> DOFade(this Graphic target, float endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x60028F4")]
		[Address(RVA = "0xBF2EEC", Offset = "0xBF2EEC", VA = "0xBF2EEC")]
		public static TweenerCore<Color, Color, ColorOptions> DOColor(this Image target, Color endValue, float duration)
		{
			return null;
		}
	}
	[Token(Token = "0x20006C4")]
	public static class DOTweenModuleUtils
	{
		[Token(Token = "0x20006C5")]
		public static class Physics
		{
			[Token(Token = "0x60028FD")]
			[Address(RVA = "0xBF323C", Offset = "0xBF323C", VA = "0xBF323C")]
			public static void SetOrientationOnPath(PathOptions options, Tween t, Quaternion newRot, Transform trans)
			{
			}

			[Token(Token = "0x60028FE")]
			[Address(RVA = "0xBF3344", Offset = "0xBF3344", VA = "0xBF3344")]
			[Preserve]
			public static bool HasRigidbody(Component target)
			{
				return default(bool);
			}

			[Token(Token = "0x60028FF")]
			[Address(RVA = "0xBF33D4", Offset = "0xBF33D4", VA = "0xBF33D4")]
			[Preserve]
			public static TweenerCore<Vector3, DG.Tweening.Plugins.Core.PathCore.Path, PathOptions> CreateDOTweenPathTween(MonoBehaviour target, bool tweenRigidbody, bool isLocal, DG.Tweening.Plugins.Core.PathCore.Path path, float duration, PathMode pathMode)
			{
				return null;
			}
		}

		[Token(Token = "0x40028EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static bool _initialized;

		[Token(Token = "0x60028FB")]
		[Address(RVA = "0xBF30F8", Offset = "0xBF30F8", VA = "0xBF30F8")]
		[Preserve]
		public static void Init()
		{
		}

		[Token(Token = "0x60028FC")]
		[Address(RVA = "0xBF319C", Offset = "0xBF319C", VA = "0xBF319C")]
		[Preserve]
		private static void Preserver()
		{
		}
	}
}
