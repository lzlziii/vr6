using System;
using System.Collections;
using System.Collections.Generic;
using System.Diagnostics;
using System.IO;
using System.Reflection;
using System.Runtime.InteropServices;
using System.Runtime.Serialization;
using System.Runtime.Serialization.Formatters.Binary;
using System.Threading;
using AK.Wwise;
using DG.Tweening;
using Il2CppDummyDll;
using Kino;
using Klak.Motion;
using NewtonVR;
using Oculus.Platform;
using Oculus.Platform.Models;
using SoftMasking;
using TMPro;
using Trebuchet;
using Trebuchet.Contrepoids;
using UnityEngine;
using UnityEngine.AI;
using UnityEngine.EventSystems;
using UnityEngine.Events;
using UnityEngine.Playables;
using UnityEngine.Rendering;
using UnityEngine.SceneManagement;
using UnityEngine.Timeline;
using UnityEngine.UI;
using UnityEngine.Video;

[assembly: AssemblyVersion("0.0.0.0")]
namespace NewtonVR
{
	[Token(Token = "0x2000002")]
	public class NVRCollisionSoundController : MonoBehaviour
	{
		[Token(Token = "0x4000001")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static NVRCollisionSoundController Instance;

		[Token(Token = "0x4000002")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1F1270", Offset = "0x1F1270")]
		public int SoundPoolSize;

		[Token(Token = "0x4000003")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1F12A4", Offset = "0x1F12A4")]
		public bool PitchModulationEnabled;

		[Token(Token = "0x4000004")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x1F12D8", Offset = "0x1F12D8")]
		public float PitchModulationRange;

		[Token(Token = "0x4000005")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1F12F4", Offset = "0x1F12F4")]
		public float MinCollisionVolume;

		[Token(Token = "0x4000006")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float MaxCollisionVelocity;

		[Token(Token = "0x4000007")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[HideInInspector]
		public NVRCollisionSoundProviders SoundEngine;

		[Token(Token = "0x4000008")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private static NVRCollisionSoundProvider Provider;

		[Token(Token = "0x6000001")]
		[Address(RVA = "0xCA09C4", Offset = "0xCA09C4", VA = "0xCA09C4")]
		public NVRCollisionSoundController()
		{
		}

		[Token(Token = "0x6000002")]
		[Address(RVA = "0xCA0A00", Offset = "0xCA0A00", VA = "0xCA0A00")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000003")]
		[Address(RVA = "0xCA0AB0", Offset = "0xCA0AB0", VA = "0xCA0AB0")]
		public static void Play(NVRCollisionSoundMaterials material, Vector3 position, float impactVolume)
		{
		}
	}
	[Token(Token = "0x2000003")]
	public enum NVRCollisionSoundProviders
	{
		[Token(Token = "0x400000A")]
		None,
		[Token(Token = "0x400000B")]
		Unity,
		[Token(Token = "0x400000C")]
		FMOD
	}
	[Token(Token = "0x2000004")]
	public enum NVRCollisionSoundMaterials
	{
		[Token(Token = "0x400000E")]
		none = 0,
		[Token(Token = "0x400000F")]
		_default = 1,
		[Token(Token = "0x4000010")]
		carpet = 2,
		[Token(Token = "0x4000011")]
		wood = 3,
		[Token(Token = "0x4000012")]
		metal = 4,
		[Token(Token = "0x4000013")]
		glass = 5,
		[Token(Token = "0x4000014")]
		plastic = 6,
		[Token(Token = "0x4000015")]
		cardboard = 7,
		[Token(Token = "0x4000016")]
		EndNewtonVRMaterials = 50
	}
	[Token(Token = "0x2000005")]
	public class NVRCollisionSoundMaterialsList
	{
		[Token(Token = "0x4000017")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static Type typeCache;

		[Token(Token = "0x4000018")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private static NVRCollisionSoundMaterials[] list;

		[Token(Token = "0x17000001")]
		public static Type TypeCache
		{
			[Token(Token = "0x6000005")]
			[Address(RVA = "0xCA0BD4", Offset = "0xCA0BD4", VA = "0xCA0BD4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000002")]
		public static NVRCollisionSoundMaterials[] List
		{
			[Token(Token = "0x6000006")]
			[Address(RVA = "0xCA0CAC", Offset = "0xCA0CAC", VA = "0xCA0CAC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000004")]
		[Address(RVA = "0xCA0BCC", Offset = "0xCA0BCC", VA = "0xCA0BCC")]
		public NVRCollisionSoundMaterialsList()
		{
		}

		[Token(Token = "0x6000007")]
		[Address(RVA = "0xCA10F0", Offset = "0xCA10F0", VA = "0xCA10F0")]
		public static NVRCollisionSoundMaterials? Parse(string materialString)
		{
			return null;
		}
	}
	[Token(Token = "0x2000006")]
	public class NVRCollisionSoundObject : MonoBehaviour
	{
		[Token(Token = "0x4000019")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Dictionary<Collider, NVRCollisionSoundObject> SoundObjects;

		[Token(Token = "0x400001A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public NVRCollisionSoundMaterials Material;

		[Token(Token = "0x400001B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Collider[] Colliders;

		[Token(Token = "0x6000008")]
		[Address(RVA = "0xCA12AC", Offset = "0xCA12AC", VA = "0xCA12AC")]
		public NVRCollisionSoundObject()
		{
		}

		[Token(Token = "0x6000009")]
		[Address(RVA = "0xCA12B4", Offset = "0xCA12B4", VA = "0xCA12B4", Slot = "4")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x600000A")]
		[Address(RVA = "0xCA13F8", Offset = "0xCA13F8", VA = "0xCA13F8", Slot = "5")]
		protected virtual void OnDestroy()
		{
		}

		[Token(Token = "0x600000B")]
		[Address(RVA = "0xCA1538", Offset = "0xCA1538", VA = "0xCA1538", Slot = "6")]
		protected virtual void OnCollisionEnter(Collision collision)
		{
		}

		[Token(Token = "0x600000C")]
		[Address(RVA = "0xCA17C4", Offset = "0xCA17C4", VA = "0xCA17C4")]
		private float CalculateImpactVolume(Collision collision)
		{
			return default(float);
		}

		[Token(Token = "0x600000D")]
		[Address(RVA = "0xCA18A0", Offset = "0xCA18A0", VA = "0xCA18A0")]
		public static float CubicEaseOut(float velocity, float startingValue = 0f, float changeInValue = 1f)
		{
			return default(float);
		}
	}
	[Token(Token = "0x2000007")]
	public abstract class NVRCollisionSoundProvider : MonoBehaviour
	{
		[Token(Token = "0x600000F")]
		[Address(RVA = "0xCA19F0", Offset = "0xCA19F0", VA = "0xCA19F0")]
		protected NVRCollisionSoundProvider()
		{
		}

		[Token(Token = "0x6000010")]
		public abstract void Awake();

		[Token(Token = "0x6000011")]
		public abstract void Play(NVRCollisionSoundMaterials material, Vector3 position, float impactVolume);
	}
	[Token(Token = "0x2000008")]
	public class NVRCollisionSoundProviderFMOD : NVRCollisionSoundProvider
	{
		[Token(Token = "0x6000012")]
		[Address(RVA = "0xCA19F8", Offset = "0xCA19F8", VA = "0xCA19F8")]
		public NVRCollisionSoundProviderFMOD()
		{
		}

		[Token(Token = "0x6000013")]
		[Address(RVA = "0xCA1A00", Offset = "0xCA1A00", VA = "0xCA1A00", Slot = "4")]
		public override void Awake()
		{
		}

		[Token(Token = "0x6000014")]
		[Address(RVA = "0xCA1A04", Offset = "0xCA1A04", VA = "0xCA1A04", Slot = "5")]
		public override void Play(NVRCollisionSoundMaterials material, Vector3 position, float impactVolume)
		{
		}
	}
	[Token(Token = "0x2000009")]
	public class NVRCollisionSoundProviderUnity : NVRCollisionSoundProvider
	{
		[Token(Token = "0x400001C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static string AudioSourcePrefabPath;

		[Token(Token = "0x400001D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private static string CollisionSoundsPath;

		[Token(Token = "0x400001E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private GameObject AudioSourcePrefab;

		[Token(Token = "0x400001F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private AudioSource[] AudioPool;

		[Token(Token = "0x4000020")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private int CurrentPoolIndex;

		[Token(Token = "0x4000021")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Dictionary<NVRCollisionSoundMaterials, List<AudioClip>> Clips;

		[Token(Token = "0x6000015")]
		[Address(RVA = "0xCA1A08", Offset = "0xCA1A08", VA = "0xCA1A08")]
		public NVRCollisionSoundProviderUnity()
		{
		}

		[Token(Token = "0x6000016")]
		[Address(RVA = "0xCA1A10", Offset = "0xCA1A10", VA = "0xCA1A10", Slot = "4")]
		public override void Awake()
		{
		}

		[Token(Token = "0x6000017")]
		[Address(RVA = "0xCA2150", Offset = "0xCA2150", VA = "0xCA2150", Slot = "5")]
		public override void Play(NVRCollisionSoundMaterials material, Vector3 position, float impactVolume)
		{
		}

		[Token(Token = "0x6000018")]
		[Address(RVA = "0xCA2484", Offset = "0xCA2484", VA = "0xCA2484")]
		private AudioClip GetClip(NVRCollisionSoundMaterials material)
		{
			return null;
		}
	}
	[Token(Token = "0x200000A")]
	internal struct EnumEqualityComparer<TEnum> : IEqualityComparer<TEnum> where TEnum : struct
	{
		[Token(Token = "0x200000B")]
		private static class BoxAvoidance
		{
			[Token(Token = "0x4000022")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private static readonly Func<TEnum, int> _wrapper;

			[Token(Token = "0x600001C")]
			static BoxAvoidance()
			{
			}

			[Token(Token = "0x600001D")]
			public static int ToInt(TEnum enu)
			{
				return default(int);
			}
		}

		[Token(Token = "0x600001A")]
		public bool Equals(TEnum firstEnum, TEnum secondEnum)
		{
			return default(bool);
		}

		[Token(Token = "0x600001B")]
		public int GetHashCode(TEnum firstEnum)
		{
			return default(int);
		}
	}
}
namespace NewtonVR.Example
{
	[Token(Token = "0x200000C")]
	public class NVRExampleButtonDropSphere : MonoBehaviour
	{
		[Token(Token = "0x600001E")]
		[Address(RVA = "0xC9782C", Offset = "0xC9782C", VA = "0xC9782C")]
		public NVRExampleButtonDropSphere()
		{
		}

		[Token(Token = "0x600001F")]
		[Address(RVA = "0xC97834", Offset = "0xC97834", VA = "0xC97834")]
		public void DropSphere()
		{
		}
	}
	[Token(Token = "0x200000D")]
	public class NVRExampleButtonResetScene : MonoBehaviour
	{
		[Token(Token = "0x6000020")]
		[Address(RVA = "0xC97A04", Offset = "0xC97A04", VA = "0xC97A04")]
		public NVRExampleButtonResetScene()
		{
		}

		[Token(Token = "0x6000021")]
		[Address(RVA = "0xC97A0C", Offset = "0xC97A0C", VA = "0xC97A0C")]
		public void ResetScene()
		{
		}
	}
	[Token(Token = "0x200000E")]
	public class NVRExampleColorLever : MonoBehaviour
	{
		[Token(Token = "0x4000023")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public Color From;

		[Token(Token = "0x4000024")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Color To;

		[Token(Token = "0x4000025")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public Renderer Result;

		[Token(Token = "0x4000026")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public NVRLever Lever;

		[Token(Token = "0x6000022")]
		[Address(RVA = "0xC97A4C", Offset = "0xC97A4C", VA = "0xC97A4C")]
		public NVRExampleColorLever()
		{
		}

		[Token(Token = "0x6000023")]
		[Address(RVA = "0xC97A54", Offset = "0xC97A54", VA = "0xC97A54")]
		private void Update()
		{
		}
	}
	[Token(Token = "0x200000F")]
	public class NVRExampleColorSlider : MonoBehaviour
	{
		[Token(Token = "0x4000027")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public Color From;

		[Token(Token = "0x4000028")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Color To;

		[Token(Token = "0x4000029")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public Renderer Result;

		[Token(Token = "0x400002A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public NVRSlider Slider;

		[Token(Token = "0x6000024")]
		[Address(RVA = "0xC97B28", Offset = "0xC97B28", VA = "0xC97B28")]
		public NVRExampleColorSlider()
		{
		}

		[Token(Token = "0x6000025")]
		[Address(RVA = "0xC97B30", Offset = "0xC97B30", VA = "0xC97B30")]
		private void Update()
		{
		}
	}
	[Token(Token = "0x2000010")]
	public class NVRExampleDegreeResult : MonoBehaviour
	{
		[Token(Token = "0x400002B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public NVRInteractableItem Knob;

		[Token(Token = "0x400002C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private TextMesh Text;

		[Token(Token = "0x6000026")]
		[Address(RVA = "0xC97C04", Offset = "0xC97C04", VA = "0xC97C04")]
		public NVRExampleDegreeResult()
		{
		}

		[Token(Token = "0x6000027")]
		[Address(RVA = "0xC97C0C", Offset = "0xC97C0C", VA = "0xC97C0C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000028")]
		[Address(RVA = "0xC97C74", Offset = "0xC97C74", VA = "0xC97C74")]
		private void Update()
		{
		}
	}
	[Token(Token = "0x2000011")]
	public class NVRExampleEvent : MonoBehaviour
	{
		[Token(Token = "0x6000029")]
		[Address(RVA = "0xC97D08", Offset = "0xC97D08", VA = "0xC97D08")]
		public NVRExampleEvent()
		{
		}

		[Token(Token = "0x600002A")]
		[Address(RVA = "0xC97D10", Offset = "0xC97D10", VA = "0xC97D10")]
		public void Duplicate()
		{
		}
	}
	[Token(Token = "0x2000012")]
	public class NVRExampleGrower : NVRInteractableItem
	{
		[Token(Token = "0x600002B")]
		[Address(RVA = "0xC97E60", Offset = "0xC97E60", VA = "0xC97E60")]
		public NVRExampleGrower()
		{
		}

		[Token(Token = "0x600002C")]
		[Address(RVA = "0xC97E68", Offset = "0xC97E68", VA = "0xC97E68", Slot = "13")]
		public override void InteractingUpdate(NVRHand hand)
		{
		}
	}
	[Token(Token = "0x2000013")]
	public class NVRExampleGun : NVRInteractableItem
	{
		[Token(Token = "0x400002D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public GameObject BulletPrefab;

		[Token(Token = "0x400002E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		public Transform FirePoint;

		[Token(Token = "0x400002F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public Vector3 BulletForce;

		[Token(Token = "0x600002D")]
		[Address(RVA = "0xC983C0", Offset = "0xC983C0", VA = "0xC983C0")]
		public NVRExampleGun()
		{
		}

		[Token(Token = "0x600002E")]
		[Address(RVA = "0xC98420", Offset = "0xC98420", VA = "0xC98420", Slot = "18")]
		public override void UseButtonDown()
		{
		}
	}
	[Token(Token = "0x2000014")]
	public class NVRExampleLaserPointer : MonoBehaviour
	{
		[Token(Token = "0x4000030")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public Color LineColor;

		[Token(Token = "0x4000031")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float LineWidth;

		[Token(Token = "0x4000032")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool ForceLineVisible;

		[Token(Token = "0x4000033")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		public bool OnlyVisibleOnTrigger;

		[Token(Token = "0x4000034")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private LineRenderer Line;

		[Token(Token = "0x4000035")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private NVRHand Hand;

		[Token(Token = "0x600002F")]
		[Address(RVA = "0xC98730", Offset = "0xC98730", VA = "0xC98730")]
		public NVRExampleLaserPointer()
		{
		}

		[Token(Token = "0x6000030")]
		[Address(RVA = "0xC9874C", Offset = "0xC9874C", VA = "0xC9874C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000031")]
		[Address(RVA = "0xC989E4", Offset = "0xC989E4", VA = "0xC989E4")]
		private void LateUpdate()
		{
		}
	}
	[Token(Token = "0x2000015")]
	public class NVRExampleLetterResult : MonoBehaviour
	{
		[Token(Token = "0x4000036")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public NVRLetterSpinner LetterSpinner;

		[Token(Token = "0x4000037")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private TextMesh Text;

		[Token(Token = "0x6000032")]
		[Address(RVA = "0xC98F68", Offset = "0xC98F68", VA = "0xC98F68")]
		public NVRExampleLetterResult()
		{
		}

		[Token(Token = "0x6000033")]
		[Address(RVA = "0xC98F70", Offset = "0xC98F70", VA = "0xC98F70")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000034")]
		[Address(RVA = "0xC98FD8", Offset = "0xC98FD8", VA = "0xC98FD8")]
		private void Update()
		{
		}
	}
	[Token(Token = "0x2000016")]
	public class NVRExampleLeverResultRocket : MonoBehaviour
	{
		[Token(Token = "0x20002E1")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1F1358", Offset = "0x1F1358")]
		private sealed class <DoBlastOff>c__Iterator0 : IEnumerator, IDisposable, IEnumerator<object>
		{
			[Token(Token = "0x400114B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			internal Rigidbody <rb>__0;

			[Token(Token = "0x400114C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			internal NVRExampleLeverResultRocket $this;

			[Token(Token = "0x400114D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal object $current;

			[Token(Token = "0x400114E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			internal bool $disposing;

			[Token(Token = "0x400114F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			internal int $PC;

			[Token(Token = "0x17000241")]
			private object System.Collections.Generic.IEnumerator<object>.Current
			{
				[Token(Token = "0x60016AA")]
				[Address(RVA = "0xC9934C", Offset = "0xC9934C", VA = "0xC9934C", Slot = "8")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000242")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60016AB")]
				[Address(RVA = "0xC99354", Offset = "0xC99354", VA = "0xC99354", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60016A8")]
			[Address(RVA = "0xC99194", Offset = "0xC99194", VA = "0xC99194")]
			[DebuggerHidden]
			public <DoBlastOff>c__Iterator0()
			{
			}

			[Token(Token = "0x60016A9")]
			[Address(RVA = "0xC991A4", Offset = "0xC991A4", VA = "0xC991A4", Slot = "5")]
			public bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60016AC")]
			[Address(RVA = "0xC9935C", Offset = "0xC9935C", VA = "0xC9935C", Slot = "7")]
			[DebuggerHidden]
			public void Dispose()
			{
			}

			[Token(Token = "0x60016AD")]
			[Address(RVA = "0xC99370", Offset = "0xC99370", VA = "0xC99370", Slot = "6")]
			[DebuggerHidden]
			public void Reset()
			{
			}
		}

		[Token(Token = "0x20002E2")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1F13B8", Offset = "0x1F13B8")]
		private sealed class <DoSpawnShip>c__Iterator1 : IEnumerator, IDisposable, IEnumerator<object>
		{
			[Token(Token = "0x4001150")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			internal Vector3 <startScale>__0;

			[Token(Token = "0x4001151")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			internal Vector3 <endScale>__0;

			[Token(Token = "0x4001152")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			internal float <startTime>__0;

			[Token(Token = "0x4001153")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			internal float <overTime>__0;

			[Token(Token = "0x4001154")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			internal float <stopTime>__0;

			[Token(Token = "0x4001155")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			internal NVRExampleLeverResultRocket $this;

			[Token(Token = "0x4001156")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			internal object $current;

			[Token(Token = "0x4001157")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			internal bool $disposing;

			[Token(Token = "0x4001158")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			internal int $PC;

			[Token(Token = "0x17000243")]
			private object System.Collections.Generic.IEnumerator<object>.Current
			{
				[Token(Token = "0x60016B0")]
				[Address(RVA = "0xC998D4", Offset = "0xC998D4", VA = "0xC998D4", Slot = "8")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000244")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60016B1")]
				[Address(RVA = "0xC998DC", Offset = "0xC998DC", VA = "0xC998DC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60016AE")]
			[Address(RVA = "0xC9919C", Offset = "0xC9919C", VA = "0xC9919C")]
			[DebuggerHidden]
			public <DoSpawnShip>c__Iterator1()
			{
			}

			[Token(Token = "0x60016AF")]
			[Address(RVA = "0xC993F4", Offset = "0xC993F4", VA = "0xC993F4", Slot = "5")]
			public bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60016B2")]
			[Address(RVA = "0xC998E4", Offset = "0xC998E4", VA = "0xC998E4", Slot = "7")]
			[DebuggerHidden]
			public void Dispose()
			{
			}

			[Token(Token = "0x60016B3")]
			[Address(RVA = "0xC998F8", Offset = "0xC998F8", VA = "0xC998F8", Slot = "6")]
			[DebuggerHidden]
			public void Reset()
			{
			}
		}

		[Token(Token = "0x4000038")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public GameObject RocketPrefab;

		[Token(Token = "0x4000039")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public NVRLever Control;

		[Token(Token = "0x400003A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private GameObject RocketInstance;

		[Token(Token = "0x6000035")]
		[Address(RVA = "0xC99024", Offset = "0xC99024", VA = "0xC99024")]
		public NVRExampleLeverResultRocket()
		{
		}

		[Token(Token = "0x6000036")]
		[Address(RVA = "0xC9902C", Offset = "0xC9902C", VA = "0xC9902C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000037")]
		[Address(RVA = "0xC990D0", Offset = "0xC990D0", VA = "0xC990D0")]
		private void Update()
		{
		}

		[Token(Token = "0x6000038")]
		[Address(RVA = "0xC99114", Offset = "0xC99114", VA = "0xC99114")]
		[DebuggerHidden]
		public IEnumerator DoBlastOff()
		{
			return null;
		}

		[Token(Token = "0x6000039")]
		[Address(RVA = "0xC99050", Offset = "0xC99050", VA = "0xC99050")]
		[DebuggerHidden]
		private IEnumerator DoSpawnShip()
		{
			return null;
		}
	}
	[Token(Token = "0x2000017")]
	public class NVRExampleRGBResult : MonoBehaviour
	{
		[Token(Token = "0x400003B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public NVRSlider SliderRed;

		[Token(Token = "0x400003C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public NVRSlider SliderGreen;

		[Token(Token = "0x400003D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public NVRSlider SliderBlue;

		[Token(Token = "0x400003E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Renderer Result;

		[Token(Token = "0x600003A")]
		[Address(RVA = "0xC9997C", Offset = "0xC9997C", VA = "0xC9997C")]
		public NVRExampleRGBResult()
		{
		}

		[Token(Token = "0x600003B")]
		[Address(RVA = "0xC99984", Offset = "0xC99984", VA = "0xC99984")]
		private void Update()
		{
		}
	}
	[Token(Token = "0x2000018")]
	public class NVRExampleSpawner : MonoBehaviour
	{
		[Token(Token = "0x400003F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public NVRButton Button;

		[Token(Token = "0x4000040")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public GameObject ToCopy;

		[Token(Token = "0x600003C")]
		[Address(RVA = "0xC99A4C", Offset = "0xC99A4C", VA = "0xC99A4C")]
		public NVRExampleSpawner()
		{
		}

		[Token(Token = "0x600003D")]
		[Address(RVA = "0xC99A54", Offset = "0xC99A54", VA = "0xC99A54")]
		private void Update()
		{
		}
	}
	[Token(Token = "0x2000019")]
	public class NVRExampleSwitchResult : MonoBehaviour
	{
		[Token(Token = "0x4000041")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public NVRSwitch Switch;

		[Token(Token = "0x4000042")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Light SpotLight;

		[Token(Token = "0x600003E")]
		[Address(RVA = "0xC99C80", Offset = "0xC99C80", VA = "0xC99C80")]
		public NVRExampleSwitchResult()
		{
		}

		[Token(Token = "0x600003F")]
		[Address(RVA = "0xC99C88", Offset = "0xC99C88", VA = "0xC99C88")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000040")]
		[Address(RVA = "0xC99CF0", Offset = "0xC99CF0", VA = "0xC99CF0")]
		private void Update()
		{
		}
	}
	[Token(Token = "0x200001A")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x1F1418", Offset = "0x1F1418")]
	public class NVRExampleTeleporter : MonoBehaviour
	{
		[Token(Token = "0x4000043")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public Color LineColor;

		[Token(Token = "0x4000044")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float LineWidth;

		[Token(Token = "0x4000045")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private LineRenderer Line;

		[Token(Token = "0x4000046")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private NVRHand Hand;

		[Token(Token = "0x4000047")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private NVRPlayer Player;

		[Token(Token = "0x6000041")]
		[Address(RVA = "0xC99D38", Offset = "0xC99D38", VA = "0xC99D38")]
		public NVRExampleTeleporter()
		{
		}

		[Token(Token = "0x6000042")]
		[Address(RVA = "0xC99D4C", Offset = "0xC99D4C", VA = "0xC99D4C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000043")]
		[Address(RVA = "0xC99FE4", Offset = "0xC99FE4", VA = "0xC99FE4")]
		private void Start()
		{
		}

		[Token(Token = "0x6000044")]
		[Address(RVA = "0xC9A00C", Offset = "0xC9A00C", VA = "0xC9A00C")]
		private void LateUpdate()
		{
		}
	}
}
namespace NewtonVR
{
	[Token(Token = "0x200001B")]
	public class NVRAttachJoint : MonoBehaviour
	{
		[Token(Token = "0x4000048")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public NVRInteractableItem AttachedItem;

		[Token(Token = "0x4000049")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public NVRAttachPoint AttachedPoint;

		[Token(Token = "0x400004A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float PullRange;

		[Token(Token = "0x400004B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float AttachRange;

		[Token(Token = "0x400004C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float DropDistance;

		[Token(Token = "0x400004D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool MatchRotation;

		[Token(Token = "0x17000003")]
		public bool IsAttached
		{
			[Token(Token = "0x6000046")]
			[Address(RVA = "0xC9AA60", Offset = "0xC9AA60", VA = "0xC9AA60")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000045")]
		[Address(RVA = "0xC9AA30", Offset = "0xC9AA30", VA = "0xC9AA30")]
		public NVRAttachJoint()
		{
		}

		[Token(Token = "0x6000047")]
		[Address(RVA = "0xC9AAF0", Offset = "0xC9AAF0", VA = "0xC9AAF0", Slot = "4")]
		protected virtual void OnTriggerStay(Collider col)
		{
		}

		[Token(Token = "0x6000048")]
		[Address(RVA = "0xC9ACAC", Offset = "0xC9ACAC", VA = "0xC9ACAC", Slot = "5")]
		protected virtual void FixedUpdate()
		{
		}

		[Token(Token = "0x6000049")]
		[Address(RVA = "0xC9ACDC", Offset = "0xC9ACDC", VA = "0xC9ACDC", Slot = "6")]
		protected virtual void FixedUpdateAttached()
		{
		}

		[Token(Token = "0x600004A")]
		[Address(RVA = "0xC9AE38", Offset = "0xC9AE38", VA = "0xC9AE38", Slot = "7")]
		protected virtual void Attach(NVRAttachPoint point)
		{
		}

		[Token(Token = "0x600004B")]
		[Address(RVA = "0xC9AE80", Offset = "0xC9AE80", VA = "0xC9AE80", Slot = "8")]
		protected virtual void Detach()
		{
		}
	}
	[Token(Token = "0x200001C")]
	public class NVRAttachPoint : MonoBehaviour
	{
		[Token(Token = "0x400004E")]
		private const float MaxVelocityChange = 5f;

		[Token(Token = "0x400004F")]
		private const float MaxAngularVelocityChange = 10f;

		[Token(Token = "0x4000050")]
		private const float VelocityMagic = 3000f;

		[Token(Token = "0x4000051")]
		private const float AngularVelocityMagic = 25f;

		[Token(Token = "0x4000052")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		[HideInInspector]
		public Rigidbody Rigidbody;

		[Token(Token = "0x4000053")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[HideInInspector]
		public NVRInteractableItem Item;

		[Token(Token = "0x4000054")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public bool IsAttached;

		[Token(Token = "0x600004C")]
		[Address(RVA = "0xC9AEC4", Offset = "0xC9AEC4", VA = "0xC9AEC4")]
		public NVRAttachPoint()
		{
		}

		[Token(Token = "0x600004D")]
		[Address(RVA = "0xC9AECC", Offset = "0xC9AECC", VA = "0xC9AECC", Slot = "4")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x600004E")]
		[Address(RVA = "0xC9B258", Offset = "0xC9B258", VA = "0xC9B258", Slot = "5")]
		protected virtual void Start()
		{
		}

		[Token(Token = "0x600004F")]
		[Address(RVA = "0xC9B0A8", Offset = "0xC9B0A8", VA = "0xC9B0A8")]
		private NVRInteractableItem FindNVRItem(GameObject gameobject)
		{
			return null;
		}

		[Token(Token = "0x6000050")]
		[Address(RVA = "0xC9B280", Offset = "0xC9B280", VA = "0xC9B280", Slot = "6")]
		public virtual void Attached(NVRAttachJoint joint)
		{
		}

		[Token(Token = "0x6000051")]
		[Address(RVA = "0xC9B5C0", Offset = "0xC9B5C0", VA = "0xC9B5C0", Slot = "7")]
		public virtual void Detached(NVRAttachJoint joint)
		{
		}

		[Token(Token = "0x6000052")]
		[Address(RVA = "0xC9B614", Offset = "0xC9B614", VA = "0xC9B614", Slot = "8")]
		public virtual void PullTowards(NVRAttachJoint joint)
		{
		}
	}
	[Token(Token = "0x200001D")]
	public class AttachPointMapper
	{
		[Token(Token = "0x4000055")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Dictionary<Collider, NVRAttachPoint> Colliders;

		[Token(Token = "0x6000053")]
		[Address(RVA = "0xC9754C", Offset = "0xC9754C", VA = "0xC9754C")]
		public AttachPointMapper()
		{
		}

		[Token(Token = "0x6000054")]
		[Address(RVA = "0xC97554", Offset = "0xC97554", VA = "0xC97554")]
		public static void Register(Collider col, NVRAttachPoint point)
		{
		}

		[Token(Token = "0x6000055")]
		[Address(RVA = "0xC97614", Offset = "0xC97614", VA = "0xC97614")]
		public static void Deregister(Collider col)
		{
		}

		[Token(Token = "0x6000056")]
		[Address(RVA = "0xC976CC", Offset = "0xC976CC", VA = "0xC976CC")]
		public static NVRAttachPoint GetAttachPoint(Collider col)
		{
			return null;
		}
	}
	[Token(Token = "0x200001E")]
	public class NVRButton : MonoBehaviour
	{
		[Token(Token = "0x4000056")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public Rigidbody Rigidbody;

		[Token(Token = "0x4000057")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1F14B0", Offset = "0x1F14B0")]
		public float DistanceToEngage;

		[Token(Token = "0x4000058")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1F14E4", Offset = "0x1F14E4")]
		public bool ButtonDown;

		[Token(Token = "0x4000059")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x15")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1F1518", Offset = "0x1F1518")]
		public bool ButtonUp;

		[Token(Token = "0x400005A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x16")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1F154C", Offset = "0x1F154C")]
		public bool ButtonIsPushed;

		[Token(Token = "0x400005B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x17")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1F1580", Offset = "0x1F1580")]
		public bool ButtonWasPushed;

		[Token(Token = "0x400005C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected Transform InitialPosition;

		[Token(Token = "0x400005D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		protected float MinDistance;

		[Token(Token = "0x400005E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		protected float PositionMagic;

		[Token(Token = "0x400005F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		protected float CurrentDistance;

		[Token(Token = "0x4000060")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Vector3 InitialLocalPosition;

		[Token(Token = "0x4000061")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private Vector3 ConstrainedPosition;

		[Token(Token = "0x4000062")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Quaternion InitialLocalRotation;

		[Token(Token = "0x4000063")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Quaternion ConstrainedRotation;

		[Token(Token = "0x6000058")]
		[Address(RVA = "0xC9BC0C", Offset = "0xC9BC0C", VA = "0xC9BC0C")]
		public NVRButton()
		{
		}

		[Token(Token = "0x6000059")]
		[Address(RVA = "0xC9BC40", Offset = "0xC9BC40", VA = "0xC9BC40")]
		private void Awake()
		{
		}

		[Token(Token = "0x600005A")]
		[Address(RVA = "0xC9BFF4", Offset = "0xC9BFF4", VA = "0xC9BFF4")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x600005B")]
		[Address(RVA = "0xC9C2B8", Offset = "0xC9C2B8", VA = "0xC9C2B8")]
		private void Update()
		{
		}

		[Token(Token = "0x600005C")]
		[Address(RVA = "0xC9C1E8", Offset = "0xC9C1E8", VA = "0xC9C1E8")]
		private void ConstrainPosition()
		{
		}

		[Token(Token = "0x600005D")]
		[Address(RVA = "0xC9C320", Offset = "0xC9C320", VA = "0xC9C320")]
		private void LateUpdate()
		{
		}
	}
	[Token(Token = "0x200001F")]
	public class NVRButtonInputs
	{
		[Token(Token = "0x4000064")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private bool PressDownCached;

		[Token(Token = "0x4000065")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9")]
		private bool PressDownExpired;

		[Token(Token = "0x4000066")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA")]
		private bool PressUpCached;

		[Token(Token = "0x4000067")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB")]
		private bool PressUpExpired;

		[Token(Token = "0x4000068")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private bool IsPressedCached;

		[Token(Token = "0x4000069")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD")]
		private bool IsPressedExpired;

		[Token(Token = "0x400006A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE")]
		private bool TouchDownCached;

		[Token(Token = "0x400006B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF")]
		private bool TouchDownExpired;

		[Token(Token = "0x400006C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private bool TouchUpCached;

		[Token(Token = "0x400006D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		private bool TouchUpExpired;

		[Token(Token = "0x400006E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12")]
		private bool IsTouchedCached;

		[Token(Token = "0x400006F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x13")]
		private bool IsTouchedExpired;

		[Token(Token = "0x4000070")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private bool NearTouchDownCached;

		[Token(Token = "0x4000071")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x15")]
		private bool NearTouchDownExpired;

		[Token(Token = "0x4000072")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x16")]
		private bool NearTouchUpCached;

		[Token(Token = "0x4000073")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x17")]
		private bool NearTouchUpExpired;

		[Token(Token = "0x4000074")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool IsNearTouchedCached;

		[Token(Token = "0x4000075")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		private bool IsNearTouchedExpired;

		[Token(Token = "0x4000076")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private Vector2 AxisCached;

		[Token(Token = "0x4000077")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private bool AxisExpired;

		[Token(Token = "0x4000078")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float SingleAxisCached;

		[Token(Token = "0x4000079")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private bool SingleAxisExpired;

		[Token(Token = "0x400007A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private NVRInputDevice InputDevice;

		[Token(Token = "0x400007B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private NVRButtons nvrbutton;

		[Token(Token = "0x17000004")]
		public bool PressDown
		{
			[Token(Token = "0x600005F")]
			[Address(RVA = "0xC9A950", Offset = "0xC9A950", VA = "0xC9A950")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000005")]
		public bool PressUp
		{
			[Token(Token = "0x6000060")]
			[Address(RVA = "0xC982E0", Offset = "0xC982E0", VA = "0xC982E0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000006")]
		public bool IsPressed
		{
			[Token(Token = "0x6000061")]
			[Address(RVA = "0xC98E88", Offset = "0xC98E88", VA = "0xC98E88")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000007")]
		public bool TouchDown
		{
			[Token(Token = "0x6000062")]
			[Address(RVA = "0xC9C35C", Offset = "0xC9C35C", VA = "0xC9C35C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000008")]
		public bool TouchUp
		{
			[Token(Token = "0x6000063")]
			[Address(RVA = "0xC9C43C", Offset = "0xC9C43C", VA = "0xC9C43C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000009")]
		public bool IsTouched
		{
			[Token(Token = "0x6000064")]
			[Address(RVA = "0xC9C51C", Offset = "0xC9C51C", VA = "0xC9C51C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700000A")]
		public bool NearTouchDown
		{
			[Token(Token = "0x6000065")]
			[Address(RVA = "0xC9C5FC", Offset = "0xC9C5FC", VA = "0xC9C5FC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700000B")]
		public bool NearTouchUp
		{
			[Token(Token = "0x6000066")]
			[Address(RVA = "0xC9C6DC", Offset = "0xC9C6DC", VA = "0xC9C6DC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700000C")]
		public bool IsNearTouched
		{
			[Token(Token = "0x6000067")]
			[Address(RVA = "0xC9C7BC", Offset = "0xC9C7BC", VA = "0xC9C7BC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700000D")]
		public Vector2 Axis
		{
			[Token(Token = "0x6000068")]
			[Address(RVA = "0xC9C89C", Offset = "0xC9C89C", VA = "0xC9C89C")]
			get
			{
				return default(Vector2);
			}
		}

		[Token(Token = "0x1700000E")]
		public float SingleAxis
		{
			[Token(Token = "0x6000069")]
			[Address(RVA = "0xC9A870", Offset = "0xC9A870", VA = "0xC9A870")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x600005E")]
		[Address(RVA = "0xC9C324", Offset = "0xC9C324", VA = "0xC9C324")]
		public NVRButtonInputs()
		{
		}

		[Token(Token = "0x600006A")]
		[Address(RVA = "0xC9C99C", Offset = "0xC9C99C", VA = "0xC9C99C")]
		public void FrameReset(NVRInputDevice inputDevice, NVRButtons button)
		{
		}
	}
	[Token(Token = "0x2000020")]
	public enum NVRButtons
	{
		[Token(Token = "0x400007D")]
		System,
		[Token(Token = "0x400007E")]
		ApplicationMenu,
		[Token(Token = "0x400007F")]
		Grip,
		[Token(Token = "0x4000080")]
		DPad_Left,
		[Token(Token = "0x4000081")]
		DPad_Up,
		[Token(Token = "0x4000082")]
		DPad_Right,
		[Token(Token = "0x4000083")]
		DPad_Down,
		[Token(Token = "0x4000084")]
		A,
		[Token(Token = "0x4000085")]
		B,
		[Token(Token = "0x4000086")]
		X,
		[Token(Token = "0x4000087")]
		Y,
		[Token(Token = "0x4000088")]
		Axis0,
		[Token(Token = "0x4000089")]
		Axis1,
		[Token(Token = "0x400008A")]
		Axis2,
		[Token(Token = "0x400008B")]
		Axis3,
		[Token(Token = "0x400008C")]
		Axis4,
		[Token(Token = "0x400008D")]
		Touchpad,
		[Token(Token = "0x400008E")]
		Trigger,
		[Token(Token = "0x400008F")]
		Back,
		[Token(Token = "0x4000090")]
		Stick
	}
	[Token(Token = "0x2000021")]
	public class NVRButtonsHelper
	{
		[Token(Token = "0x4000091")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static NVRButtons[] array;

		[Token(Token = "0x1700000F")]
		public static NVRButtons[] Array
		{
			[Token(Token = "0x600006C")]
			[Address(RVA = "0xC9C9F8", Offset = "0xC9C9F8", VA = "0xC9C9F8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600006B")]
		[Address(RVA = "0xC9C9F0", Offset = "0xC9C9F0", VA = "0xC9C9F0")]
		public NVRButtonsHelper()
		{
		}
	}
	[Token(Token = "0x2000022")]
	public struct NVRButtonsComparer : IEqualityComparer<NVRButtons>
	{
		[Token(Token = "0x600006E")]
		[Address(RVA = "0xC9C9D8", Offset = "0xC9C9D8", VA = "0xC9C9D8", Slot = "4")]
		public bool Equals(NVRButtons x, NVRButtons y)
		{
			return default(bool);
		}

		[Token(Token = "0x600006F")]
		[Address(RVA = "0xC9C9E8", Offset = "0xC9C9E8", VA = "0xC9C9E8", Slot = "5")]
		public int GetHashCode(NVRButtons obj)
		{
			return default(int);
		}
	}
	[Token(Token = "0x2000023")]
	public class NVRCanvasInput : BaseInputModule
	{
		[Token(Token = "0x20002E3")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1F15C4", Offset = "0x1F15C4")]
		private sealed class <TryInitialize>c__Iterator0 : IEnumerator, IDisposable, IEnumerator<object>
		{
			[Token(Token = "0x4001159")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			internal NVRCanvasInput $this;

			[Token(Token = "0x400115A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			internal object $current;

			[Token(Token = "0x400115B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal bool $disposing;

			[Token(Token = "0x400115C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			internal int $PC;

			[Token(Token = "0x17000245")]
			private object System.Collections.Generic.IEnumerator<object>.Current
			{
				[Token(Token = "0x60016B6")]
				[Address(RVA = "0xCA091C", Offset = "0xCA091C", VA = "0xCA091C", Slot = "8")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000246")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60016B7")]
				[Address(RVA = "0xCA0924", Offset = "0xCA0924", VA = "0xCA0924", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60016B4")]
			[Address(RVA = "0xC9CD5C", Offset = "0xC9CD5C", VA = "0xC9CD5C")]
			[DebuggerHidden]
			public <TryInitialize>c__Iterator0()
			{
			}

			[Token(Token = "0x60016B5")]
			[Address(RVA = "0xCA084C", Offset = "0xCA084C", VA = "0xCA084C", Slot = "5")]
			public bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60016B8")]
			[Address(RVA = "0xCA092C", Offset = "0xCA092C", VA = "0xCA092C", Slot = "7")]
			[DebuggerHidden]
			public void Dispose()
			{
			}

			[Token(Token = "0x60016B9")]
			[Address(RVA = "0xCA0940", Offset = "0xCA0940", VA = "0xCA0940", Slot = "6")]
			[DebuggerHidden]
			public void Reset()
			{
			}
		}

		[Token(Token = "0x4000092")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public bool GeometryBlocksLaser;

		[Token(Token = "0x4000093")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public LayerMask LayersThatBlockLaser;

		[Token(Token = "0x4000094")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public Sprite CursorSprite;

		[Token(Token = "0x4000095")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Material CursorMaterial;

		[Token(Token = "0x4000096")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float NormalCursorScale;

		[Token(Token = "0x4000097")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public bool LaserEnabled;

		[Token(Token = "0x4000098")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public Color LaserColor;

		[Token(Token = "0x4000099")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public AnimationCurve widthCurve;

		[Token(Token = "0x400009A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Material laserMaterial;

		[Token(Token = "0x400009B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public float width;

		[Token(Token = "0x400009C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public bool OnCanvas;

		[Token(Token = "0x400009D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
		public bool CanvasUsed;

		[NonSerialized]
		[Token(Token = "0x400009E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5A")]
		public bool Disabled;

		[Token(Token = "0x400009F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private RaycastResult raycastNone;

		[Token(Token = "0x40000A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		private RectTransform[] Cursors;

		[Token(Token = "0x40000A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private LineRenderer[] Lasers;

		[Token(Token = "0x40000A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		private GameObject[] CurrentPoint;

		[Token(Token = "0x40000A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private GameObject[] CurrentPressed;

		[Token(Token = "0x40000A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		private GameObject[] CurrentDragging;

		[Token(Token = "0x40000A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private PointerEventData[] PointEvents;

		[Token(Token = "0x40000A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		private bool Initialized;

		[Token(Token = "0x40000A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB5")]
		private bool DelayedInitialized;

		[Token(Token = "0x40000A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private Camera ControllerCamera;

		[Token(Token = "0x40000A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		private NVRPlayer Player;

		[Token(Token = "0x6000070")]
		[Address(RVA = "0xC9CC28", Offset = "0xC9CC28", VA = "0xC9CC28")]
		public NVRCanvasInput()
		{
		}

		[Token(Token = "0x6000071")]
		[Address(RVA = "0xC9CCAC", Offset = "0xC9CCAC", VA = "0xC9CCAC", Slot = "6")]
		protected override void Start()
		{
		}

		[Token(Token = "0x6000072")]
		[Address(RVA = "0xC9CCDC", Offset = "0xC9CCDC", VA = "0xC9CCDC")]
		[DebuggerHidden]
		private IEnumerator TryInitialize()
		{
			return null;
		}

		[Token(Token = "0x6000073")]
		[Address(RVA = "0xC9CD64", Offset = "0xC9CD64", VA = "0xC9CD64")]
		private bool Initialize()
		{
			return default(bool);
		}

		[Token(Token = "0x6000074")]
		[Address(RVA = "0xC9D9BC", Offset = "0xC9D9BC", VA = "0xC9D9BC")]
		protected void DelayedCameraInit()
		{
		}

		[Token(Token = "0x6000075")]
		[Address(RVA = "0xC9DB60", Offset = "0xC9DB60", VA = "0xC9DB60")]
		private bool GetLookPointerEventData(int index)
		{
			return default(bool);
		}

		[Token(Token = "0x6000076")]
		[Address(RVA = "0xC9E234", Offset = "0xC9E234", VA = "0xC9E234")]
		private bool UpdateCursor(int index, PointerEventData pointData)
		{
			return default(bool);
		}

		[Token(Token = "0x6000077")]
		[Address(RVA = "0xC9ED84", Offset = "0xC9ED84", VA = "0xC9ED84")]
		public void ClearSelection()
		{
		}

		[Token(Token = "0x6000078")]
		[Address(RVA = "0xC9EE6C", Offset = "0xC9EE6C", VA = "0xC9EE6C")]
		private void Select(GameObject go)
		{
		}

		[Token(Token = "0x6000079")]
		[Address(RVA = "0xC9EF80", Offset = "0xC9EF80", VA = "0xC9EF80")]
		private bool SendUpdateEventToSelectedObject()
		{
			return default(bool);
		}

		[Token(Token = "0x600007A")]
		[Address(RVA = "0xC9F118", Offset = "0xC9F118", VA = "0xC9F118")]
		private void UpdateCameraPosition(int index)
		{
		}

		[Token(Token = "0x600007B")]
		[Address(RVA = "0xC9F2AC", Offset = "0xC9F2AC", VA = "0xC9F2AC", Slot = "17")]
		public override void Process()
		{
		}

		[Token(Token = "0x600007C")]
		[Address(RVA = "0xC9F2B0", Offset = "0xC9F2B0", VA = "0xC9F2B0")]
		private void Update()
		{
		}

		[Token(Token = "0x600007D")]
		[Address(RVA = "0xCA068C", Offset = "0xCA068C", VA = "0xCA068C")]
		private bool ButtonDown(int index)
		{
			return default(bool);
		}

		[Token(Token = "0x600007E")]
		[Address(RVA = "0xCA076C", Offset = "0xCA076C", VA = "0xCA076C")]
		private bool ButtonUp(int index)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000024")]
	public class NVRHand : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000025")]
		public class NVRInteractableEvent : UnityEvent<NVRInteractable>
		{
			[Token(Token = "0x60000BC")]
			[Address(RVA = "0x241370", Offset = "0x241370", VA = "0x241370")]
			public NVRInteractableEvent()
			{
			}
		}

		[Token(Token = "0x20002E4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1F16F4", Offset = "0x1F16F4")]
		private sealed class <DoLongHapticPulse>c__Iterator0 : IEnumerator, IDisposable, IEnumerator<object>
		{
			[Token(Token = "0x400115D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			internal float <startTime>__0;

			[Token(Token = "0x400115E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			internal float seconds;

			[Token(Token = "0x400115F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal float <endTime>__0;

			[Token(Token = "0x4001160")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			internal NVRButtons button;

			[Token(Token = "0x4001161")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			internal NVRHand $this;

			[Token(Token = "0x4001162")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			internal object $current;

			[Token(Token = "0x4001163")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			internal bool $disposing;

			[Token(Token = "0x4001164")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			internal int $PC;

			[Token(Token = "0x17000247")]
			private object System.Collections.Generic.IEnumerator<object>.Current
			{
				[Token(Token = "0x60016BC")]
				[Address(RVA = "0x2412C8", Offset = "0x2412C8", VA = "0x2412C8", Slot = "8")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000248")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60016BD")]
				[Address(RVA = "0x2412D0", Offset = "0x2412D0", VA = "0x2412D0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60016BA")]
			[Address(RVA = "0x2411DC", Offset = "0x2411DC", VA = "0x2411DC")]
			[DebuggerHidden]
			public <DoLongHapticPulse>c__Iterator0()
			{
			}

			[Token(Token = "0x60016BB")]
			[Address(RVA = "0x2411E4", Offset = "0x2411E4", VA = "0x2411E4", Slot = "5")]
			public bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60016BE")]
			[Address(RVA = "0x2412D8", Offset = "0x2412D8", VA = "0x2412D8", Slot = "7")]
			[DebuggerHidden]
			public void Dispose()
			{
			}

			[Token(Token = "0x60016BF")]
			[Address(RVA = "0x2412EC", Offset = "0x2412EC", VA = "0x2412EC", Slot = "6")]
			[DebuggerHidden]
			public void Reset()
			{
			}
		}

		[Token(Token = "0x40000AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public NVRButtons HoldButton;

		[Token(Token = "0x40000AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public NVRButtons OculusHoldButton;

		[Token(Token = "0x40000AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public NVRButtons SecondaryHoldButton;

		[Token(Token = "0x40000AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public NVRButtons UseButton;

		[Token(Token = "0x40000AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public NVRButtons OculusUseButton;

		[Token(Token = "0x40000AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public NVRButtons SecondaryButton;

		[Token(Token = "0x40000B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public NVRButtons SecondaryButtonBis;

		[Token(Token = "0x40000B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public NVRButtons SecondaryButtonTer;

		[Token(Token = "0x40000B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[HideInInspector]
		public bool IsRight;

		[Token(Token = "0x40000B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2D")]
		[HideInInspector]
		public bool IsLeft;

		[Token(Token = "0x40000B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[HideInInspector]
		public NVRPlayer Player;

		[Token(Token = "0x40000B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public Dictionary<NVRButtons, NVRButtonInputs> Inputs;

		[Token(Token = "0x40000B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[HideInInspector]
		public InterationStyle CurrentInteractionStyle;

		[Token(Token = "0x40000B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public Rigidbody Rigidbody;

		[Token(Token = "0x40000B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[HideInInspector]
		public GameObject CustomModel;

		[Token(Token = "0x40000B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[HideInInspector]
		public GameObject CustomPhysicalColliders;

		[Token(Token = "0x40000BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private VisibilityLevel CurrentVisibility;

		[Token(Token = "0x40000BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private bool VisibilityLocked;

		[Token(Token = "0x40000BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[HideInInspector]
		public HandState CurrentHandState;

		[Token(Token = "0x40000BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		internal Dictionary<NVRInteractable, Dictionary<Collider, float>> CurrentlyHoveringOver;

		[Token(Token = "0x40000BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public NVRInteractable CurrentlyInteracting;

		[Token(Token = "0x40000BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public NVRInteractableEvent OnBeginInteraction;

		[Token(Token = "0x40000C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public NVRInteractableEvent OnEndInteraction;

		[Token(Token = "0x40000C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private int EstimationSampleIndex;

		[Token(Token = "0x40000C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Vector3[] LastPositions;

		[Token(Token = "0x40000C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private Quaternion[] LastRotations;

		[Token(Token = "0x40000C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private float[] LastDeltas;

		[Token(Token = "0x40000C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private int EstimationSamples;

		[Token(Token = "0x40000C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[HideInInspector]
		public NVRPhysicalController PhysicalController;

		[Token(Token = "0x40000C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private Collider[] GhostColliders;

		[Token(Token = "0x40000C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Renderer[] GhostRenderers;

		[Token(Token = "0x40000C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		internal NVRInputDevice InputDevice;

		[Token(Token = "0x40000CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private GameObject RenderModel;

		[Token(Token = "0x40000CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private GameObject furnitureAim;

		[Token(Token = "0x40000CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		internal bool IsAiming;

		[Token(Token = "0x40000CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x91")]
		internal bool IsHinting;

		[Token(Token = "0x40000CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		private DistanceGrab _distanceGrab;

		[Token(Token = "0x40000CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1F16A4", Offset = "0x1F16A4")]
		private static Func<KeyValuePair<NVRInteractable, Dictionary<Collider, float>>, bool> <>f__am$cache0;

		[Token(Token = "0x40000D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1F16B4", Offset = "0x1F16B4")]
		private static Func<KeyValuePair<Collider, float>, float> <>f__am$cache1;

		[Token(Token = "0x17000010")]
		private NVRButtons usedHoldButton
		{
			[Token(Token = "0x6000080")]
			[Address(RVA = "0xCA2890", Offset = "0xCA2890", VA = "0xCA2890")]
			get
			{
				return default(NVRButtons);
			}
		}

		[Token(Token = "0x17000011")]
		public bool HoldButtonDown
		{
			[Token(Token = "0x6000081")]
			[Address(RVA = "0xCA2898", Offset = "0xCA2898", VA = "0xCA2898")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000012")]
		public bool HoldButtonUp
		{
			[Token(Token = "0x6000082")]
			[Address(RVA = "0xCA292C", Offset = "0xCA292C", VA = "0xCA292C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000013")]
		public bool HoldButtonPressed
		{
			[Token(Token = "0x6000083")]
			[Address(RVA = "0xC86560", Offset = "0xC86560", VA = "0xC86560")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000014")]
		public float HoldButtonAxis
		{
			[Token(Token = "0x6000084")]
			[Address(RVA = "0xCA29C0", Offset = "0xCA29C0", VA = "0xCA29C0")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000015")]
		public bool SecondaryHoldButtonDown
		{
			[Token(Token = "0x6000085")]
			[Address(RVA = "0xCA2A54", Offset = "0xCA2A54", VA = "0xCA2A54")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000016")]
		public bool SecondaryHoldButtonUp
		{
			[Token(Token = "0x6000086")]
			[Address(RVA = "0xCA2AE8", Offset = "0xCA2AE8", VA = "0xCA2AE8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000017")]
		public bool SecondaryHoldButtonPressed
		{
			[Token(Token = "0x6000087")]
			[Address(RVA = "0xCA2B7C", Offset = "0xCA2B7C", VA = "0xCA2B7C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000018")]
		public float SecondaryHoldButtonAxis
		{
			[Token(Token = "0x6000088")]
			[Address(RVA = "0xCA2C10", Offset = "0xCA2C10", VA = "0xCA2C10")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000019")]
		private NVRButtons usedUseButton
		{
			[Token(Token = "0x6000089")]
			[Address(RVA = "0xCA2CA4", Offset = "0xCA2CA4", VA = "0xCA2CA4")]
			get
			{
				return default(NVRButtons);
			}
		}

		[Token(Token = "0x1700001A")]
		public bool UseButtonDown
		{
			[Token(Token = "0x600008A")]
			[Address(RVA = "0xCA2CAC", Offset = "0xCA2CAC", VA = "0xCA2CAC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700001B")]
		public bool UseButtonUp
		{
			[Token(Token = "0x600008B")]
			[Address(RVA = "0xCA2D40", Offset = "0xCA2D40", VA = "0xCA2D40")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700001C")]
		public bool UseButtonPressed
		{
			[Token(Token = "0x600008C")]
			[Address(RVA = "0xCA2DD4", Offset = "0xCA2DD4", VA = "0xCA2DD4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700001D")]
		public float UseButtonAxis
		{
			[Token(Token = "0x600008D")]
			[Address(RVA = "0xCA2E68", Offset = "0xCA2E68", VA = "0xCA2E68")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700001E")]
		public bool SecondaryButtonDown
		{
			[Token(Token = "0x600008E")]
			[Address(RVA = "0xC948A8", Offset = "0xC948A8", VA = "0xC948A8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700001F")]
		public bool SecondaryButtonUp
		{
			[Token(Token = "0x600008F")]
			[Address(RVA = "0xCA2EFC", Offset = "0xCA2EFC", VA = "0xCA2EFC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000020")]
		public bool SecondaryButtonPressed
		{
			[Token(Token = "0x6000090")]
			[Address(RVA = "0xC92A5C", Offset = "0xC92A5C", VA = "0xC92A5C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000021")]
		public float SecondaryButtonSimpleAxis
		{
			[Token(Token = "0x6000091")]
			[Address(RVA = "0xCA2FE8", Offset = "0xCA2FE8", VA = "0xCA2FE8")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000022")]
		public Vector2 SecondaryButtonAxis
		{
			[Token(Token = "0x6000092")]
			[Address(RVA = "0xC87D80", Offset = "0xC87D80", VA = "0xC87D80")]
			get
			{
				return default(Vector2);
			}
		}

		[Token(Token = "0x17000023")]
		internal DistanceGrab distanceGrab
		{
			[Token(Token = "0x6000093")]
			[Address(RVA = "0xCA30E0", Offset = "0xCA30E0", VA = "0xCA30E0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000024")]
		public bool IsHovering
		{
			[Token(Token = "0x6000094")]
			[Address(RVA = "0xCA3154", Offset = "0xCA3154", VA = "0xCA3154")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000025")]
		public bool IsInteracting
		{
			[Token(Token = "0x6000095")]
			[Address(RVA = "0xC8ABCC", Offset = "0xC8ABCC", VA = "0xC8ABCC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000026")]
		public bool HasCustomModel
		{
			[Token(Token = "0x6000096")]
			[Address(RVA = "0xCA324C", Offset = "0xCA324C", VA = "0xCA324C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000027")]
		public bool IsCurrentlyTracked
		{
			[Token(Token = "0x6000097")]
			[Address(RVA = "0xCA32DC", Offset = "0xCA32DC", VA = "0xCA32DC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000028")]
		public Vector3 CurrentForward
		{
			[Token(Token = "0x6000098")]
			[Address(RVA = "0xCA33A4", Offset = "0xCA33A4", VA = "0xCA33A4")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x17000029")]
		public Vector3 CurrentPosition
		{
			[Token(Token = "0x6000099")]
			[Address(RVA = "0xCA34B8", Offset = "0xCA34B8", VA = "0xCA34B8")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x600007F")]
		[Address(RVA = "0xCA27BC", Offset = "0xCA27BC", VA = "0xCA27BC")]
		public NVRHand()
		{
		}

		[Token(Token = "0x600009A")]
		[Address(RVA = "0xC9484C", Offset = "0xC9484C", VA = "0xC9484C")]
		public void showAim()
		{
		}

		[Token(Token = "0x600009B")]
		[Address(RVA = "0xCA35CC", Offset = "0xCA35CC", VA = "0xCA35CC")]
		public void HideAim()
		{
		}

		[Token(Token = "0x600009C")]
		[Address(RVA = "0xC864AC", Offset = "0xC864AC", VA = "0xC864AC")]
		public void ShowHint(string s, HintAnim anim)
		{
		}

		[Token(Token = "0x600009D")]
		[Address(RVA = "0xCA3620", Offset = "0xCA3620", VA = "0xCA3620")]
		public void getHandReference()
		{
		}

		[Token(Token = "0x600009E")]
		[Address(RVA = "0xCA371C", Offset = "0xCA371C", VA = "0xCA371C")]
		public void HideHint()
		{
		}

		[Token(Token = "0x600009F")]
		[Address(RVA = "0xCA37A4", Offset = "0xCA37A4", VA = "0xCA37A4", Slot = "4")]
		public virtual void PreInitialize(NVRPlayer player)
		{
		}

		[Token(Token = "0x60000A0")]
		[Address(RVA = "0xCA42B0", Offset = "0xCA42B0", VA = "0xCA42B0", Slot = "5")]
		protected virtual void Update()
		{
		}

		[Token(Token = "0x60000A1")]
		[Address(RVA = "0xCA4DBC", Offset = "0xCA4DBC", VA = "0xCA4DBC")]
		protected void UpdateHovering()
		{
		}

		[Token(Token = "0x60000A2")]
		[Address(RVA = "0xCA49A8", Offset = "0xCA49A8", VA = "0xCA49A8")]
		protected void UpdateButtonStates()
		{
		}

		[Token(Token = "0x60000A3")]
		[Address(RVA = "0xCA4B40", Offset = "0xCA4B40", VA = "0xCA4B40")]
		protected void UpdateInteractions()
		{
		}

		[Token(Token = "0x60000A4")]
		[Address(RVA = "0xCA52B4", Offset = "0xCA52B4", VA = "0xCA52B4")]
		private void UpdateVisibilityAndColliders()
		{
		}

		[Token(Token = "0x60000A5")]
		[Address(RVA = "0xC9860C", Offset = "0xC9860C", VA = "0xC9860C")]
		public void TriggerHapticPulse(ushort durationMicroSec = 500, NVRButtons button = NVRButtons.Grip)
		{
		}

		[Token(Token = "0x60000A6")]
		[Address(RVA = "0xCA5DB0", Offset = "0xCA5DB0", VA = "0xCA5DB0")]
		public void LongHapticPulse(float seconds, NVRButtons button = NVRButtons.Grip)
		{
		}

		[Token(Token = "0x60000A7")]
		[Address(RVA = "0xCA5DD4", Offset = "0xCA5DD4", VA = "0xCA5DD4")]
		[DebuggerHidden]
		private IEnumerator DoLongHapticPulse(float seconds, NVRButtons button)
		{
			return null;
		}

		[Token(Token = "0x60000A8")]
		[Address(RVA = "0xCA5E8C", Offset = "0xCA5E8C", VA = "0xCA5E8C")]
		public Vector3 GetVelocityEstimation()
		{
			return default(Vector3);
		}

		[Token(Token = "0x60000A9")]
		[Address(RVA = "0xCA6108", Offset = "0xCA6108", VA = "0xCA6108")]
		public Vector3 GetAngularVelocityEstimation()
		{
			return default(Vector3);
		}

		[Token(Token = "0x60000AA")]
		[Address(RVA = "0xCA6370", Offset = "0xCA6370", VA = "0xCA6370")]
		public Vector3 GetPositionDelta()
		{
			return default(Vector3);
		}

		[Token(Token = "0x60000AB")]
		[Address(RVA = "0xCA64C0", Offset = "0xCA64C0", VA = "0xCA64C0")]
		public Quaternion GetRotationDelta()
		{
			return default(Quaternion);
		}

		[Token(Token = "0x60000AC")]
		[Address(RVA = "0xCA6624", Offset = "0xCA6624", VA = "0xCA6624", Slot = "6")]
		protected virtual void FixedUpdate()
		{
		}

		[Token(Token = "0x60000AD")]
		[Address(RVA = "0xCA6890", Offset = "0xCA6890", VA = "0xCA6890", Slot = "7")]
		public virtual void BeginInteraction(NVRInteractable interactable)
		{
		}

		[Token(Token = "0x60000AE")]
		[Address(RVA = "0xCA69B8", Offset = "0xCA69B8", VA = "0xCA69B8", Slot = "8")]
		public virtual void EndInteraction(NVRInteractable item)
		{
		}

		[Token(Token = "0x60000AF")]
		[Address(RVA = "0xCA54F4", Offset = "0xCA54F4", VA = "0xCA54F4")]
		private bool PickupClosest()
		{
			return default(bool);
		}

		[Token(Token = "0x60000B0")]
		[Address(RVA = "0xCA6B68", Offset = "0xCA6B68", VA = "0xCA6B68", Slot = "9")]
		public virtual void OnTriggerEnter(Collider collider)
		{
		}

		[Token(Token = "0x60000B1")]
		[Address(RVA = "0xCA6DC4", Offset = "0xCA6DC4", VA = "0xCA6DC4", Slot = "10")]
		public virtual void OnTriggerStay(Collider collider)
		{
		}

		[Token(Token = "0x60000B2")]
		[Address(RVA = "0xCA7020", Offset = "0xCA7020", VA = "0xCA7020", Slot = "11")]
		public virtual void OnTriggerExit(Collider collider)
		{
		}

		[Token(Token = "0x60000B3")]
		[Address(RVA = "0xCA7270", Offset = "0xCA7270", VA = "0xCA7270")]
		public string GetDeviceName()
		{
			return null;
		}

		[Token(Token = "0x60000B4")]
		[Address(RVA = "0xCA7330", Offset = "0xCA7330", VA = "0xCA7330")]
		public Collider[] SetupDefaultPhysicalColliders(Transform ModelParent)
		{
			return null;
		}

		[Token(Token = "0x60000B5")]
		[Address(RVA = "0xCA7368", Offset = "0xCA7368", VA = "0xCA7368")]
		public void DeregisterInteractable(NVRInteractable interactable, bool full = true)
		{
		}

		[Token(Token = "0x60000B6")]
		[Address(RVA = "0xCA58C8", Offset = "0xCA58C8", VA = "0xCA58C8")]
		private void SetVisibility(VisibilityLevel visibility)
		{
		}

		[Token(Token = "0x60000B7")]
		[Address(RVA = "0xCA3FC4", Offset = "0xCA3FC4", VA = "0xCA3FC4")]
		protected void InitializeRenderModel()
		{
		}

		[Token(Token = "0x60000B8")]
		[Address(RVA = "0xCA43FC", Offset = "0xCA43FC", VA = "0xCA43FC")]
		public void Initialize()
		{
		}

		[Token(Token = "0x60000B9")]
		[Address(RVA = "0xCA7470", Offset = "0xCA7470", VA = "0xCA7470")]
		public void ForceGhost()
		{
		}

		[Token(Token = "0x60000BA")]
		[Address(RVA = "0xCA74A4", Offset = "0xCA74A4", VA = "0xCA74A4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1F16D4", Offset = "0x1F16D4")]
		private static bool <get_IsHovering>m__0(KeyValuePair<NVRInteractable, Dictionary<Collider, float>> kvp)
		{
			return default(bool);
		}

		[Token(Token = "0x60000BB")]
		[Address(RVA = "0xCA7548", Offset = "0xCA7548", VA = "0xCA7548")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1F16E4", Offset = "0x1F16E4")]
		private static float <UpdateHovering>m__1(KeyValuePair<Collider, float> colliderTime)
		{
			return default(float);
		}
	}
	[Token(Token = "0x2000026")]
	public enum VisibilityLevel
	{
		[Token(Token = "0x40000D2")]
		Invisible = 0,
		[Token(Token = "0x40000D3")]
		Ghost = 70,
		[Token(Token = "0x40000D4")]
		Visible = 100
	}
	[Token(Token = "0x2000027")]
	public enum HandState
	{
		[Token(Token = "0x40000D6")]
		Uninitialized,
		[Token(Token = "0x40000D7")]
		Idle,
		[Token(Token = "0x40000D8")]
		GripDownNotInteracting,
		[Token(Token = "0x40000D9")]
		GripDownInteracting,
		[Token(Token = "0x40000DA")]
		GripToggleOnNotInteracting,
		[Token(Token = "0x40000DB")]
		GripToggleOnInteracting,
		[Token(Token = "0x40000DC")]
		GripToggleOff
	}
	[Token(Token = "0x2000028")]
	public enum InterationStyle
	{
		[Token(Token = "0x40000DE")]
		Hold,
		[Token(Token = "0x40000DF")]
		Toggle,
		[Token(Token = "0x40000E0")]
		ByScript
	}
	[Token(Token = "0x2000029")]
	public class NVRHead : MonoBehaviour
	{
		[Token(Token = "0x60000BD")]
		[Address(RVA = "0x2413D4", Offset = "0x2413D4", VA = "0x2413D4")]
		public NVRHead()
		{
		}

		[Token(Token = "0x60000BE")]
		[Address(RVA = "0x2413DC", Offset = "0x2413DC", VA = "0x2413DC")]
		public void Initialize()
		{
		}
	}
	[Token(Token = "0x200002A")]
	public class NVRHelpers
	{
		[Token(Token = "0x40000E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Shader standardShader;

		[Token(Token = "0x1700002A")]
		private static Shader StandardShader
		{
			[Token(Token = "0x60000C0")]
			[Address(RVA = "0x2413E8", Offset = "0x2413E8", VA = "0x2413E8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60000BF")]
		[Address(RVA = "0x2413E0", Offset = "0x2413E0", VA = "0x2413E0")]
		public NVRHelpers()
		{
		}

		[Token(Token = "0x60000C1")]
		[Address(RVA = "0x2414DC", Offset = "0x2414DC", VA = "0x2414DC")]
		public static void SetTransparent(Material material, [Optional] Color? newcolor)
		{
		}

		[Token(Token = "0x60000C2")]
		[Address(RVA = "0x24190C", Offset = "0x24190C", VA = "0x24190C")]
		public static void SetOpaque(Material material)
		{
		}

		[Token(Token = "0x60000C3")]
		[Address(RVA = "0x241C34", Offset = "0x241C34", VA = "0x241C34")]
		public static void SetProperty(object obj, string propertyName, object value, bool isPublic)
		{
		}

		[Token(Token = "0x60000C4")]
		[Address(RVA = "0x241CD4", Offset = "0x241CD4", VA = "0x241CD4")]
		public static void SetField(object obj, string fieldName, object value, bool isPublic)
		{
		}

		[Token(Token = "0x60000C5")]
		[Address(RVA = "0x241D64", Offset = "0x241D64", VA = "0x241D64")]
		public static void LineRendererSetColor(LineRenderer lineRenderer, Color startColor, Color endColor)
		{
		}

		[Token(Token = "0x60000C6")]
		[Address(RVA = "0x241E04", Offset = "0x241E04", VA = "0x241E04")]
		public static void LineRendererSetWidth(LineRenderer lineRenderer, float startWidth, float endWidth)
		{
		}
	}
	[Token(Token = "0x200002B")]
	public abstract class NVRInputDevice : MonoBehaviour
	{
		[Token(Token = "0x40000E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		protected NVRHand Hand;

		[Token(Token = "0x1700002B")]
		public abstract bool IsCurrentlyTracked
		{
			[Token(Token = "0x60000C9")]
			get;
		}

		[Token(Token = "0x60000C7")]
		[Address(RVA = "0x241E60", Offset = "0x241E60", VA = "0x241E60")]
		protected NVRInputDevice()
		{
		}

		[Token(Token = "0x60000C8")]
		[Address(RVA = "0x241E68", Offset = "0x241E68", VA = "0x241E68", Slot = "4")]
		public virtual void Initialize(NVRHand hand)
		{
		}

		[Token(Token = "0x60000CA")]
		public abstract Collider[] SetupDefaultPhysicalColliders(Transform ModelParent);

		[Token(Token = "0x60000CB")]
		public abstract GameObject SetupDefaultRenderModel();

		[Token(Token = "0x60000CC")]
		public abstract bool ReadyToInitialize();

		[Token(Token = "0x60000CD")]
		public abstract Collider[] SetupDefaultColliders();

		[Token(Token = "0x60000CE")]
		public abstract string GetDeviceName();

		[Token(Token = "0x60000CF")]
		public abstract void TriggerHapticPulse(ushort durationMicroSec = 500, NVRButtons button = NVRButtons.Touchpad);

		[Token(Token = "0x60000D0")]
		public abstract float GetAxis1D(NVRButtons button);

		[Token(Token = "0x60000D1")]
		public abstract Vector2 GetAxis2D(NVRButtons button);

		[Token(Token = "0x60000D2")]
		public abstract bool GetPressDown(NVRButtons button);

		[Token(Token = "0x60000D3")]
		public abstract bool GetPressUp(NVRButtons button);

		[Token(Token = "0x60000D4")]
		public abstract bool GetPress(NVRButtons button);

		[Token(Token = "0x60000D5")]
		public abstract bool GetTouchDown(NVRButtons button);

		[Token(Token = "0x60000D6")]
		public abstract bool GetTouchUp(NVRButtons button);

		[Token(Token = "0x60000D7")]
		public abstract bool GetTouch(NVRButtons button);

		[Token(Token = "0x60000D8")]
		public abstract bool GetNearTouchDown(NVRButtons button);

		[Token(Token = "0x60000D9")]
		public abstract bool GetNearTouchUp(NVRButtons button);

		[Token(Token = "0x60000DA")]
		public abstract bool GetNearTouch(NVRButtons button);
	}
	[Token(Token = "0x200002C")]
	public abstract class NVRIntegration
	{
		[Token(Token = "0x40000E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		protected NVRPlayer Player;

		[Token(Token = "0x60000DB")]
		[Address(RVA = "0x241E70", Offset = "0x241E70", VA = "0x241E70")]
		protected NVRIntegration()
		{
		}

		[Token(Token = "0x60000DC")]
		public abstract void Initialize(NVRPlayer player);

		[Token(Token = "0x60000DD")]
		public abstract Vector3 GetPlayspaceBounds();

		[Token(Token = "0x60000DE")]
		public abstract bool IsHmdPresent();

		[Token(Token = "0x60000DF")]
		[Address(RVA = "0x241E78", Offset = "0x241E78", VA = "0x241E78", Slot = "7")]
		public virtual Vector3 GetCenterOffset()
		{
			return default(Vector3);
		}
	}
	[Token(Token = "0x200002D")]
	public abstract class NVRInteractable : MonoBehaviour
	{
		[Token(Token = "0x40000E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public Rigidbody Rigidbody;

		[Token(Token = "0x40000E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool Secondary;

		[Token(Token = "0x40000E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		public bool SecondaryHold;

		[Token(Token = "0x40000E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12")]
		public bool CanAttach;

		[Token(Token = "0x40000E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x13")]
		public bool DisableKinematicOnAttach;

		[Token(Token = "0x40000E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public bool EnableKinematicOnDetach;

		[Token(Token = "0x40000EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float DropDistance;

		[Token(Token = "0x40000EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public bool EnableGravityOnDetach;

		[Token(Token = "0x40000EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal NVRHand AttachedHand;

		[Token(Token = "0x40000ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		internal NVRHand HoveringHand;

		[Token(Token = "0x40000EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		protected Collider[] Colliders;

		[Token(Token = "0x40000EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		protected Vector3 ClosestHeldPoint;

		[Token(Token = "0x40000F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		protected bool IsInit;

		[Token(Token = "0x1700002C")]
		public virtual bool IsAttached
		{
			[Token(Token = "0x60000E1")]
			[Address(RVA = "0x241F20", Offset = "0x241F20", VA = "0x241F20", Slot = "4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60000E0")]
		[Address(RVA = "0x241F00", Offset = "0x241F00", VA = "0x241F00")]
		protected NVRInteractable()
		{
		}

		[Token(Token = "0x60000E2")]
		[Address(RVA = "0x241FCC", Offset = "0x241FCC", VA = "0x241FCC", Slot = "5")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x60000E3")]
		[Address(RVA = "0x242124", Offset = "0x242124", VA = "0x242124", Slot = "6")]
		protected virtual void Start()
		{
		}

		[Token(Token = "0x60000E4")]
		[Address(RVA = "0x242134", Offset = "0x242134", VA = "0x242134", Slot = "7")]
		public virtual void ShowHighlight()
		{
		}

		[Token(Token = "0x60000E5")]
		[Address(RVA = "0x242138", Offset = "0x242138", VA = "0x242138", Slot = "8")]
		public virtual void ResetInteractable()
		{
		}

		[Token(Token = "0x60000E6")]
		[Address(RVA = "0x242178", Offset = "0x242178", VA = "0x242178", Slot = "9")]
		public virtual void UpdateColliders()
		{
		}

		[Token(Token = "0x60000E7")]
		[Address(RVA = "0x242438", Offset = "0x242438", VA = "0x242438", Slot = "10")]
		protected virtual bool CheckForDrop()
		{
			return default(bool);
		}

		[Token(Token = "0x60000E8")]
		[Address(RVA = "0x242680", Offset = "0x242680", VA = "0x242680", Slot = "11")]
		protected virtual void Update()
		{
		}

		[Token(Token = "0x60000E9")]
		[Address(RVA = "0x2427D0", Offset = "0x2427D0", VA = "0x2427D0", Slot = "12")]
		public virtual void BeginInteraction(NVRHand hand)
		{
		}

		[Token(Token = "0x60000EA")]
		[Address(RVA = "0x24280C", Offset = "0x24280C", VA = "0x24280C", Slot = "13")]
		public virtual void InteractingUpdate(NVRHand hand)
		{
		}

		[Token(Token = "0x60000EB")]
		[Address(RVA = "0x242888", Offset = "0x242888", VA = "0x242888", Slot = "14")]
		public virtual void HoveringUpdate(NVRHand hand, float forTime)
		{
		}

		[Token(Token = "0x60000EC")]
		[Address(RVA = "0x242890", Offset = "0x242890", VA = "0x242890")]
		public void ForceDetach()
		{
		}

		[Token(Token = "0x60000ED")]
		[Address(RVA = "0x2429B0", Offset = "0x2429B0", VA = "0x2429B0", Slot = "15")]
		public virtual void EndInteraction()
		{
		}

		[Token(Token = "0x60000EE")]
		[Address(RVA = "0x242AAC", Offset = "0x242AAC", VA = "0x242AAC", Slot = "16")]
		protected virtual void DroppedBecauseOfDistance()
		{
		}

		[Token(Token = "0x60000EF")]
		[Address(RVA = "0x242AE4", Offset = "0x242AE4", VA = "0x242AE4", Slot = "17")]
		public virtual void UseButtonUp()
		{
		}

		[Token(Token = "0x60000F0")]
		[Address(RVA = "0x242AE8", Offset = "0x242AE8", VA = "0x242AE8", Slot = "18")]
		public virtual void UseButtonDown()
		{
		}

		[Token(Token = "0x60000F1")]
		[Address(RVA = "0x242AEC", Offset = "0x242AEC", VA = "0x242AEC", Slot = "19")]
		public virtual void AddExternalVelocity(Vector3 velocity)
		{
		}

		[Token(Token = "0x60000F2")]
		[Address(RVA = "0x242B40", Offset = "0x242B40", VA = "0x242B40", Slot = "20")]
		public virtual void AddExternalAngularVelocity(Vector3 angularVelocity)
		{
		}

		[Token(Token = "0x60000F3")]
		[Address(RVA = "0x242B94", Offset = "0x242B94", VA = "0x242B94", Slot = "21")]
		protected virtual void OnDestroy()
		{
		}

		[Token(Token = "0x60000F4")]
		[Address(RVA = "0x243078", Offset = "0x243078", VA = "0x243078", Slot = "22")]
		protected virtual void OnDisable()
		{
		}

		[Token(Token = "0x60000F5")]
		[Address(RVA = "0x243108", Offset = "0x243108", VA = "0x243108", Slot = "23")]
		protected virtual void OnEnable()
		{
		}
	}
	[Token(Token = "0x200002E")]
	public enum SoundMaterial
	{
		[Token(Token = "0x40000F2")]
		Null,
		[Token(Token = "0x40000F3")]
		Metal,
		[Token(Token = "0x40000F4")]
		Heavy,
		[Token(Token = "0x40000F5")]
		Glass,
		[Token(Token = "0x40000F6")]
		Light,
		[Token(Token = "0x40000F7")]
		Tap,
		[Token(Token = "0x40000F8")]
		Drawer,
		[Token(Token = "0x40000F9")]
		FurnitureDoor,
		[Token(Token = "0x40000FA")]
		Hammer,
		[Token(Token = "0x40000FB")]
		Lever,
		[Token(Token = "0x40000FC")]
		Fruit
	}
	[Token(Token = "0x200002F")]
	public enum HintType
	{
		[Token(Token = "0x40000FE")]
		Null,
		[Token(Token = "0x40000FF")]
		Craft,
		[Token(Token = "0x4000100")]
		Meuble,
		[Token(Token = "0x4000101")]
		Bobby,
		[Token(Token = "0x4000102")]
		Gift,
		[Token(Token = "0x4000103")]
		BigHammer,
		[Token(Token = "0x4000104")]
		TutorialLoader,
		[Token(Token = "0x4000105")]
		Skillpoint
	}
	[Token(Token = "0x2000030")]
	public class NVRInteractableItem : NVRInteractable
	{
		[Token(Token = "0x4000106")]
		private const float MaxVelocityChange = 10f;

		[Token(Token = "0x4000107")]
		private const float MaxAngularVelocityChange = 20f;

		[Token(Token = "0x4000108")]
		private const float VelocityMagic = 6000f;

		[Token(Token = "0x4000109")]
		private const float AngularVelocityMagic = 50f;

		[Token(Token = "0x400010A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
		public bool DisablePhysicalMaterialsOnAttach;

		[Token(Token = "0x400010B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1F1754", Offset = "0x1F1754")]
		public Transform InteractionPoint;

		[Token(Token = "0x400010C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private uint BeginInteractionFeedback;

		[Token(Token = "0x400010D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private uint EndInteractionFeedback;

		[Token(Token = "0x400010E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private uint Collisionfeedback;

		[Token(Token = "0x400010F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private uint CollisionMetalfeedback;

		[Token(Token = "0x4000110")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private uint CollisionFruitfeedback;

		[Token(Token = "0x4000111")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private float soundtimer;

		[Token(Token = "0x4000112")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private bool surfaceSpecific;

		[Token(Token = "0x4000113")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[HideInInspector]
		public string HintTxt;

		[Token(Token = "0x4000114")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public SoundMaterial Mat;

		[Token(Token = "0x4000115")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public HintType Hint;

		[Token(Token = "0x4000116")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public UnityEvent OnUseButtonDown;

		[Token(Token = "0x4000117")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public UnityEvent OnUseButtonUp;

		[Token(Token = "0x4000118")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public UnityEvent OnHovering;

		[Token(Token = "0x4000119")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		public UnityEvent OnHighlight;

		[Token(Token = "0x400011A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public UnityEvent OnBeginInteraction;

		[Token(Token = "0x400011B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		public UnityEvent OnEndInteraction;

		[Token(Token = "0x400011C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		protected Transform PickupTransform;

		[Token(Token = "0x400011D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		protected Vector3 ExternalVelocity;

		[Token(Token = "0x400011E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		protected Vector3 ExternalAngularVelocity;

		[Token(Token = "0x400011F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		protected Vector3?[] VelocityHistory;

		[Token(Token = "0x4000120")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		protected Vector3?[] AngularVelocityHistory;

		[Token(Token = "0x4000121")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		protected int CurrentVelocityHistoryStep;

		[Token(Token = "0x4000122")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		protected float StartingDrag;

		[Token(Token = "0x4000123")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		protected float StartingAngularDrag;

		[Token(Token = "0x4000124")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		protected Dictionary<Collider, PhysicMaterial> MaterialCache;

		[Token(Token = "0x4000125")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		[HideInInspector]
		public HintAnim anim;

		[Token(Token = "0x60000F6")]
		[Address(RVA = "0x243140", Offset = "0x243140", VA = "0x243140")]
		public NVRInteractableItem()
		{
		}

		[Token(Token = "0x60000F7")]
		[Address(RVA = "0x243204", Offset = "0x243204", VA = "0x243204", Slot = "5")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x60000F8")]
		[Address(RVA = "0x24323C", Offset = "0x24323C", VA = "0x24323C", Slot = "6")]
		protected override void Start()
		{
		}

		[Token(Token = "0x60000F9")]
		[Address(RVA = "0x243888", Offset = "0x243888", VA = "0x243888")]
		public void setTutorialLoaderHint(string type)
		{
		}

		[Token(Token = "0x60000FA")]
		[Address(RVA = "0x243A80", Offset = "0x243A80", VA = "0x243A80", Slot = "24")]
		protected virtual void FixedUpdate()
		{
		}

		[Token(Token = "0x60000FB")]
		[Address(RVA = "0x243D68", Offset = "0x243D68", VA = "0x243D68", Slot = "7")]
		public override void ShowHighlight()
		{
		}

		[Token(Token = "0x60000FC")]
		[Address(RVA = "0x243D90", Offset = "0x243D90", VA = "0x243D90", Slot = "25")]
		protected virtual void UpdateVelocities()
		{
		}

		[Token(Token = "0x60000FD")]
		[Address(RVA = "0x244658", Offset = "0x244658", VA = "0x244658", Slot = "26")]
		protected virtual void AddExternalVelocities()
		{
		}

		[Token(Token = "0x60000FE")]
		[Address(RVA = "0x24492C", Offset = "0x24492C", VA = "0x24492C", Slot = "19")]
		public override void AddExternalVelocity(Vector3 velocity)
		{
		}

		[Token(Token = "0x60000FF")]
		[Address(RVA = "0x244A88", Offset = "0x244A88", VA = "0x244A88", Slot = "20")]
		public override void AddExternalAngularVelocity(Vector3 angularVelocity)
		{
		}

		[Token(Token = "0x6000100")]
		[Address(RVA = "0x244BE4", Offset = "0x244BE4", VA = "0x244BE4", Slot = "12")]
		public override void BeginInteraction(NVRHand hand)
		{
		}

		[Token(Token = "0x6000101")]
		[Address(RVA = "0x2450D4", Offset = "0x2450D4", VA = "0x2450D4", Slot = "15")]
		public override void EndInteraction()
		{
		}

		[Token(Token = "0x6000102")]
		[Address(RVA = "0x2452C4", Offset = "0x2452C4", VA = "0x2452C4", Slot = "14")]
		public override void HoveringUpdate(NVRHand hand, float forTime)
		{
		}

		[Token(Token = "0x6000103")]
		[Address(RVA = "0x2452DC", Offset = "0x2452DC", VA = "0x2452DC", Slot = "8")]
		public override void ResetInteractable()
		{
		}

		[Token(Token = "0x6000104")]
		[Address(RVA = "0x245330", Offset = "0x245330", VA = "0x245330", Slot = "18")]
		public override void UseButtonDown()
		{
		}

		[Token(Token = "0x6000105")]
		[Address(RVA = "0x245344", Offset = "0x245344", VA = "0x245344", Slot = "17")]
		public override void UseButtonUp()
		{
		}

		[Token(Token = "0x6000106")]
		[Address(RVA = "0x245358", Offset = "0x245358", VA = "0x245358", Slot = "27")]
		protected virtual void ApplyVelocityHistory()
		{
		}

		[Token(Token = "0x6000107")]
		[Address(RVA = "0x24574C", Offset = "0x24574C", VA = "0x24574C", Slot = "28")]
		protected virtual void ResetVelocityHistory()
		{
		}

		[Token(Token = "0x6000108")]
		[Address(RVA = "0x2454D8", Offset = "0x2454D8", VA = "0x2454D8")]
		protected Vector3? GetMeanVector(Vector3?[] positions)
		{
			return null;
		}

		[Token(Token = "0x6000109")]
		[Address(RVA = "0x2450D0", Offset = "0x2450D0", VA = "0x2450D0")]
		protected void DisablePhysicalMaterials()
		{
		}

		[Token(Token = "0x600010A")]
		[Address(RVA = "0x2452C0", Offset = "0x2452C0", VA = "0x2452C0")]
		protected void EnablePhysicalMaterials()
		{
		}

		[Token(Token = "0x600010B")]
		[Address(RVA = "0x245A1C", Offset = "0x245A1C", VA = "0x245A1C", Slot = "9")]
		public override void UpdateColliders()
		{
		}

		[Token(Token = "0x600010C")]
		[Address(RVA = "0x245C24", Offset = "0x245C24", VA = "0x245C24")]
		private void OnCollisionEnter(Collision col)
		{
		}
	}
	[Token(Token = "0x2000031")]
	public class NVRInteractableItemAutoAttach : NVRInteractableItem
	{
		[Token(Token = "0x4000126")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public float PickupAfterSeconds;

		[Token(Token = "0x600010D")]
		[Address(RVA = "0x245F4C", Offset = "0x245F4C", VA = "0x245F4C")]
		public NVRInteractableItemAutoAttach()
		{
		}

		[Token(Token = "0x600010E")]
		[Address(RVA = "0x245F58", Offset = "0x245F58", VA = "0x245F58", Slot = "14")]
		public override void HoveringUpdate(NVRHand hand, float forTime)
		{
		}
	}
	[Token(Token = "0x2000032")]
	public class NVRInteractableItemClippable : NVRInteractable
	{
		[Token(Token = "0x4000127")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1F17A8", Offset = "0x1F17A8")]
		public Transform InteractionPoint;

		[Token(Token = "0x4000128")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		protected Transform PickupTransform;

		[Token(Token = "0x600010F")]
		[Address(RVA = "0x245FE0", Offset = "0x245FE0", VA = "0x245FE0")]
		public NVRInteractableItemClippable()
		{
		}

		[Token(Token = "0x6000110")]
		[Address(RVA = "0x246000", Offset = "0x246000", VA = "0x246000", Slot = "5")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6000111")]
		[Address(RVA = "0x246038", Offset = "0x246038", VA = "0x246038")]
		protected void FixedUpdate()
		{
		}

		[Token(Token = "0x6000112")]
		[Address(RVA = "0x2463CC", Offset = "0x2463CC", VA = "0x2463CC", Slot = "12")]
		public override void BeginInteraction(NVRHand hand)
		{
		}

		[Token(Token = "0x6000113")]
		[Address(RVA = "0x2465F4", Offset = "0x2465F4", VA = "0x2465F4", Slot = "15")]
		public override void EndInteraction()
		{
		}
	}
	[Token(Token = "0x2000033")]
	public class NVRInteractableRotator : NVRInteractable
	{
		[Token(Token = "0x4000129")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float CurrentAngle;

		[Token(Token = "0x400012A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		protected Transform InitialAttachPoint;

		[Token(Token = "0x1700002D")]
		protected virtual float DeltaMagic
		{
			[Token(Token = "0x6000115")]
			[Address(RVA = "0x246730", Offset = "0x246730", VA = "0x246730", Slot = "24")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6000114")]
		[Address(RVA = "0x246710", Offset = "0x246710", VA = "0x246710")]
		public NVRInteractableRotator()
		{
		}

		[Token(Token = "0x6000116")]
		[Address(RVA = "0x246738", Offset = "0x246738", VA = "0x246738", Slot = "5")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6000117")]
		[Address(RVA = "0x246770", Offset = "0x246770", VA = "0x246770", Slot = "25")]
		protected virtual void FixedUpdate()
		{
		}

		[Token(Token = "0x6000118")]
		[Address(RVA = "0x2469DC", Offset = "0x2469DC", VA = "0x2469DC", Slot = "12")]
		public override void BeginInteraction(NVRHand hand)
		{
		}

		[Token(Token = "0x6000119")]
		[Address(RVA = "0x246C74", Offset = "0x246C74", VA = "0x246C74", Slot = "15")]
		public override void EndInteraction()
		{
		}
	}
	[Token(Token = "0x2000034")]
	public class NVRInteractables : MonoBehaviour
	{
		[Token(Token = "0x20002E5")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1F181C", Offset = "0x1F181C")]
		private sealed class <Deregister>c__AnonStorey0
		{
			[Token(Token = "0x4001165")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			internal NVRInteractable interactable;

			[Token(Token = "0x60016C0")]
			[Address(RVA = "0x246E8C", Offset = "0x246E8C", VA = "0x246E8C")]
			public <Deregister>c__AnonStorey0()
			{
			}

			[Token(Token = "0x60016C1")]
			[Address(RVA = "0x247584", Offset = "0x247584", VA = "0x247584")]
			internal bool <>m__0(KeyValuePair<Collider, NVRInteractable> mapping)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x400012B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Dictionary<Collider, NVRInteractable> ColliderMapping;

		[Token(Token = "0x400012C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private static Dictionary<NVRInteractable, Collider[]> NVRInteractableMapping;

		[Token(Token = "0x400012D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static bool Initialized;

		[Token(Token = "0x400012E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1F17DC", Offset = "0x1F17DC")]
		private static Func<KeyValuePair<Collider, NVRInteractable>, Collider> <>f__am$cache0;

		[Token(Token = "0x400012F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1F17EC", Offset = "0x1F17EC")]
		private static Func<KeyValuePair<Collider, NVRInteractable>, NVRInteractable> <>f__am$cache1;

		[Token(Token = "0x600011A")]
		[Address(RVA = "0x246D70", Offset = "0x246D70", VA = "0x246D70")]
		public NVRInteractables()
		{
		}

		[Token(Token = "0x600011B")]
		[Address(RVA = "0x246D78", Offset = "0x246D78", VA = "0x246D78")]
		public static void Initialize()
		{
		}

		[Token(Token = "0x600011C")]
		[Address(RVA = "0x24221C", Offset = "0x24221C", VA = "0x24221C")]
		public static void Register(NVRInteractable interactable, Collider[] colliders)
		{
		}

		[Token(Token = "0x600011D")]
		[Address(RVA = "0x242C1C", Offset = "0x242C1C", VA = "0x242C1C")]
		public static void Deregister(NVRInteractable interactable)
		{
		}

		[Token(Token = "0x600011E")]
		[Address(RVA = "0x247344", Offset = "0x247344", VA = "0x247344")]
		public static NVRInteractable GetInteractable(Collider collider)
		{
			return null;
		}

		[Token(Token = "0x6000120")]
		[Address(RVA = "0x2474AC", Offset = "0x2474AC", VA = "0x2474AC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1F17FC", Offset = "0x1F17FC")]
		private static Collider <Deregister>m__0(KeyValuePair<Collider, NVRInteractable> mapping)
		{
			return null;
		}

		[Token(Token = "0x6000121")]
		[Address(RVA = "0x247518", Offset = "0x247518", VA = "0x247518")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1F180C", Offset = "0x1F180C")]
		private static NVRInteractable <Deregister>m__1(KeyValuePair<Collider, NVRInteractable> mapping)
		{
			return null;
		}
	}
	[Token(Token = "0x2000035")]
	public class NVRLetterSpinner : NVRInteractableRotator
	{
		[Token(Token = "0x4000130")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static string LETTERLIST;

		[Token(Token = "0x4000131")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private float SnapDistance;

		[Token(Token = "0x4000132")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float RungAngleInterval;

		[Token(Token = "0x4000133")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private Vector3 LastAngularVelocity;

		[Token(Token = "0x6000122")]
		[Address(RVA = "0x24763C", Offset = "0x24763C", VA = "0x24763C")]
		public NVRLetterSpinner()
		{
		}

		[Token(Token = "0x6000123")]
		[Address(RVA = "0x247700", Offset = "0x247700", VA = "0x247700", Slot = "5")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6000124")]
		[Address(RVA = "0x2477C8", Offset = "0x2477C8", VA = "0x2477C8", Slot = "25")]
		protected override void FixedUpdate()
		{
		}

		[Token(Token = "0x6000125")]
		[Address(RVA = "0x247AE4", Offset = "0x247AE4", VA = "0x247AE4", Slot = "12")]
		public override void BeginInteraction(NVRHand hand)
		{
		}

		[Token(Token = "0x6000126")]
		[Address(RVA = "0x247B28", Offset = "0x247B28", VA = "0x247B28")]
		public string GetLetter()
		{
			return null;
		}
	}
	[Token(Token = "0x2000036")]
	public class NVRLever : NVRInteractableItem
	{
		[Token(Token = "0x2000037")]
		public enum LeverPosition
		{
			[Token(Token = "0x4000142")]
			Off,
			[Token(Token = "0x4000143")]
			Mid,
			[Token(Token = "0x4000144")]
			On
		}

		[Token(Token = "0x2000038")]
		public enum RotationAxis
		{
			[Token(Token = "0x4000146")]
			XAxis,
			[Token(Token = "0x4000147")]
			YAxis,
			[Token(Token = "0x4000148")]
			ZAxis
		}

		[Token(Token = "0x20002E6")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1F183C", Offset = "0x1F183C")]
		private sealed class <HoldPosition>c__Iterator0 : IEnumerator, IDisposable, IEnumerator<object>
		{
			[Token(Token = "0x4001166")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			internal float time;

			[Token(Token = "0x4001167")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			internal NVRLever $this;

			[Token(Token = "0x4001168")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal object $current;

			[Token(Token = "0x4001169")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			internal bool $disposing;

			[Token(Token = "0x400116A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			internal int $PC;

			[Token(Token = "0x17000249")]
			private object System.Collections.Generic.IEnumerator<object>.Current
			{
				[Token(Token = "0x60016C4")]
				[Address(RVA = "0x248BB0", Offset = "0x248BB0", VA = "0x248BB0", Slot = "8")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700024A")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60016C5")]
				[Address(RVA = "0x248BB8", Offset = "0x248BB8", VA = "0x248BB8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60016C2")]
			[Address(RVA = "0x248688", Offset = "0x248688", VA = "0x248688")]
			[DebuggerHidden]
			public <HoldPosition>c__Iterator0()
			{
			}

			[Token(Token = "0x60016C3")]
			[Address(RVA = "0x248A64", Offset = "0x248A64", VA = "0x248A64", Slot = "5")]
			public bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60016C6")]
			[Address(RVA = "0x248BC0", Offset = "0x248BC0", VA = "0x248BC0", Slot = "7")]
			[DebuggerHidden]
			public void Dispose()
			{
			}

			[Token(Token = "0x60016C7")]
			[Address(RVA = "0x248BD4", Offset = "0x248BD4", VA = "0x248BD4", Slot = "6")]
			[DebuggerHidden]
			public void Reset()
			{
			}
		}

		[Token(Token = "0x4000134")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public float LastValue;

		[Token(Token = "0x4000135")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		public float CurrentValue;

		[Token(Token = "0x4000136")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public LeverPosition LastLeverPosition;

		[Token(Token = "0x4000137")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		public LeverPosition CurrentLeverPosition;

		[Token(Token = "0x4000138")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public bool LeverEngaged;

		[Token(Token = "0x4000139")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		public float EngageWaitTime;

		[Token(Token = "0x400013A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		protected Transform InitialAttachPoint;

		[Token(Token = "0x400013B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		protected HingeJoint HingeJoint;

		[Token(Token = "0x400013C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		protected bool UseMotor;

		[Token(Token = "0x400013D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		protected Quaternion Max;

		[Token(Token = "0x400013E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		protected Quaternion Mid;

		[Token(Token = "0x400013F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
		protected Quaternion Min;

		[Token(Token = "0x4000140")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
		protected float AngleRange;

		[Token(Token = "0x1700002E")]
		protected virtual float DeltaMagic
		{
			[Token(Token = "0x6000129")]
			[Address(RVA = "0x247DA0", Offset = "0x247DA0", VA = "0x247DA0", Slot = "29")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6000128")]
		[Address(RVA = "0x247D94", Offset = "0x247D94", VA = "0x247D94")]
		public NVRLever()
		{
		}

		[Token(Token = "0x600012A")]
		[Address(RVA = "0x247DA8", Offset = "0x247DA8", VA = "0x247DA8", Slot = "5")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x600012B")]
		[Address(RVA = "0x248320", Offset = "0x248320", VA = "0x248320", Slot = "11")]
		protected override void Update()
		{
		}

		[Token(Token = "0x600012C")]
		[Address(RVA = "0x248500", Offset = "0x248500", VA = "0x248500", Slot = "30")]
		protected virtual void Engage()
		{
		}

		[Token(Token = "0x600012D")]
		[Address(RVA = "0x2485E4", Offset = "0x2485E4", VA = "0x2485E4")]
		[DebuggerHidden]
		private IEnumerator HoldPosition(float time)
		{
			return null;
		}

		[Token(Token = "0x600012E")]
		[Address(RVA = "0x248690", Offset = "0x248690", VA = "0x248690", Slot = "12")]
		public override void BeginInteraction(NVRHand hand)
		{
		}

		[Token(Token = "0x600012F")]
		[Address(RVA = "0x248948", Offset = "0x248948", VA = "0x248948", Slot = "15")]
		public override void EndInteraction()
		{
		}

		[Token(Token = "0x6000130")]
		[Address(RVA = "0x2483D0", Offset = "0x2483D0", VA = "0x2483D0")]
		private float GetValue()
		{
			return default(float);
		}

		[Token(Token = "0x6000131")]
		[Address(RVA = "0x2484B8", Offset = "0x2484B8", VA = "0x2484B8")]
		private LeverPosition GetPosition()
		{
			return default(LeverPosition);
		}
	}
	[Token(Token = "0x2000039")]
	public class NVRPhysicalController : MonoBehaviour
	{
		[Token(Token = "0x20002E7")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1F18AC", Offset = "0x1F18AC")]
		private sealed class <Initialize>c__AnonStorey0
		{
			[Token(Token = "0x400116B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			internal Type componentType;

			[Token(Token = "0x60016C8")]
			[Address(RVA = "0x24C968", Offset = "0x24C968", VA = "0x24C968")]
			public <Initialize>c__AnonStorey0()
			{
			}

			[Token(Token = "0x60016C9")]
			[Address(RVA = "0x24D6E4", Offset = "0x24D6E4", VA = "0x24D6E4")]
			internal bool <>m__0(Type keepType)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4000149")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private NVRHand Hand;

		[Token(Token = "0x400014A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool State;

		[Token(Token = "0x400014B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private Rigidbody Rigidbody;

		[Token(Token = "0x400014C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[HideInInspector]
		public GameObject PhysicalController;

		[Token(Token = "0x400014D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private Collider[] Colliders;

		[Token(Token = "0x400014E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		protected Vector3 ClosestHeldPoint;

		[Token(Token = "0x400014F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		protected float AttachedRotationMagic;

		[Token(Token = "0x4000150")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		protected float AttachedPositionMagic;

		[Token(Token = "0x4000151")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private Type[] KeepTypes;

		[Token(Token = "0x1700002F")]
		protected float DropDistance
		{
			[Token(Token = "0x6000133")]
			[Address(RVA = "0x24C134", Offset = "0x24C134", VA = "0x24C134")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6000132")]
		[Address(RVA = "0x24BEBC", Offset = "0x24BEBC", VA = "0x24BEBC")]
		public NVRPhysicalController()
		{
		}

		[Token(Token = "0x6000134")]
		[Address(RVA = "0x24C13C", Offset = "0x24C13C", VA = "0x24C13C")]
		public void Initialize(NVRHand trackingHand, bool initialState)
		{
		}

		[Token(Token = "0x6000135")]
		[Address(RVA = "0x24D084", Offset = "0x24D084", VA = "0x24D084")]
		public void Kill()
		{
		}

		[Token(Token = "0x6000136")]
		[Address(RVA = "0x24D120", Offset = "0x24D120", VA = "0x24D120")]
		private bool CheckForDrop()
		{
			return default(bool);
		}

		[Token(Token = "0x6000137")]
		[Address(RVA = "0x24D268", Offset = "0x24D268", VA = "0x24D268")]
		private void UpdatePosition()
		{
		}

		[Token(Token = "0x6000138")]
		[Address(RVA = "0x24D684", Offset = "0x24D684", VA = "0x24D684", Slot = "4")]
		protected virtual void FixedUpdate()
		{
		}

		[Token(Token = "0x6000139")]
		[Address(RVA = "0x24D6BC", Offset = "0x24D6BC", VA = "0x24D6BC", Slot = "5")]
		protected virtual void DroppedBecauseOfDistance()
		{
		}

		[Token(Token = "0x600013A")]
		[Address(RVA = "0x24CF40", Offset = "0x24CF40", VA = "0x24CF40")]
		public void On()
		{
		}

		[Token(Token = "0x600013B")]
		[Address(RVA = "0x24CF08", Offset = "0x24CF08", VA = "0x24CF08")]
		public void Off()
		{
		}

		[Token(Token = "0x600013C")]
		[Address(RVA = "0x24C970", Offset = "0x24C970", VA = "0x24C970")]
		protected void SetupCustomModel()
		{
		}
	}
	[Token(Token = "0x200003A")]
	public class NVRPlayer : MonoBehaviour
	{
		[Token(Token = "0x4000152")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "DecimalConstantAttribute", RVA = "0x1F18BC", Offset = "0x1F18BC")]
		public static readonly decimal NewtonVRVersion;

		[Token(Token = "0x4000153")]
		public const float NewtonVRExpectedDeltaTime = 0.0111f;

		[Token(Token = "0x4000154")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static List<NVRPlayer> Instances;

		[Token(Token = "0x4000155")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		[HideInInspector]
		public bool SteamVREnabled;

		[Token(Token = "0x4000156")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD")]
		[HideInInspector]
		public bool OculusSDKEnabled;

		[Token(Token = "0x4000157")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public InterationStyle InteractionStyle;

		[Token(Token = "0x4000158")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public bool PhysicalHands;

		[Token(Token = "0x4000159")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x15")]
		public bool MakeControllerInvisibleOnInteraction;

		[Token(Token = "0x400015A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x16")]
		public bool AutomaticallySetControllerTransparency;

		[Token(Token = "0x400015B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x17")]
		public bool VibrateOnHover;

		[Token(Token = "0x400015C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int VelocityHistorySteps;

		[Token(Token = "0x400015D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public UnityEvent OnInitialized;

		[Token(Token = "0x400015E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x1F1918", Offset = "0x1F1918")]
		public bool EnableEditorPlayerPreview;

		[Token(Token = "0x400015F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public Mesh EditorPlayerPreview;

		[Token(Token = "0x4000160")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Mesh EditorPlayspacePreview;

		[Token(Token = "0x4000161")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public bool EditorPlayspaceOverride;

		[Token(Token = "0x4000162")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Vector2 EditorPlayspaceDefault;

		[Token(Token = "0x4000163")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x1F1928", Offset = "0x1F1928")]
		[HideInInspector]
		public bool OverrideAll;

		[Token(Token = "0x4000164")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[HideInInspector]
		public GameObject OverrideAllLeftHand;

		[Token(Token = "0x4000165")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[HideInInspector]
		public GameObject OverrideAllLeftHandPhysicalColliders;

		[Token(Token = "0x4000166")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[HideInInspector]
		public GameObject OverrideAllRightHand;

		[Token(Token = "0x4000167")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[HideInInspector]
		public GameObject OverrideAllRightHandPhysicalColliders;

		[Token(Token = "0x4000168")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[HideInInspector]
		public bool OverrideSteamVR;

		[Token(Token = "0x4000169")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[HideInInspector]
		public GameObject OverrideSteamVRLeftHand;

		[Token(Token = "0x400016A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[HideInInspector]
		public GameObject OverrideSteamVRLeftHandPhysicalColliders;

		[Token(Token = "0x400016B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[HideInInspector]
		public GameObject OverrideSteamVRRightHand;

		[Token(Token = "0x400016C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[HideInInspector]
		public GameObject OverrideSteamVRRightHandPhysicalColliders;

		[Token(Token = "0x400016D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[HideInInspector]
		public bool OverrideOculus;

		[Token(Token = "0x400016E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		[HideInInspector]
		public GameObject OverrideOculusLeftHand;

		[Token(Token = "0x400016F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[HideInInspector]
		public GameObject OverrideOculusLeftHandPhysicalColliders;

		[Token(Token = "0x4000170")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		[HideInInspector]
		public GameObject OverrideOculusRightHand;

		[Token(Token = "0x4000171")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[HideInInspector]
		public GameObject OverrideOculusRightHandPhysicalColliders;

		[Token(Token = "0x4000172")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x1F1A38", Offset = "0x1F1A38")]
		public NVRHead Head;

		[Token(Token = "0x4000173")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public NVRHand LeftHand;

		[Token(Token = "0x4000174")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		public NVRHand RightHand;

		[Token(Token = "0x4000175")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[HideInInspector]
		public NVRHand[] Hands;

		[Token(Token = "0x4000176")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		[HideInInspector]
		public NVRSDKIntegrations CurrentIntegrationType;

		[Token(Token = "0x4000177")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[HideInInspector]
		public NVRIntegration Integration;

		[Token(Token = "0x4000178")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private Dictionary<Collider, NVRHand> ColliderToHandMapping;

		[Token(Token = "0x4000179")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x1F1A78", Offset = "0x1F1A78")]
		public bool DEBUGEnableFallback2D;

		[Token(Token = "0x400017A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x91")]
		public bool DEBUGDropFrames;

		[Token(Token = "0x400017B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		public int DEBUGSleepPerFrame;

		[Token(Token = "0x400017C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public bool AutoSetFixedDeltaTime;

		[Token(Token = "0x400017D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x99")]
		public bool NotifyOnVersionUpdate;

		[Token(Token = "0x400017E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1F1A88", Offset = "0x1F1A88")]
		private static Func<NVRPlayer, bool> <>f__am$cache0;

		[Token(Token = "0x17000030")]
		public static NVRPlayer Instance
		{
			[Token(Token = "0x600013E")]
			[Address(RVA = "0x245898", Offset = "0x245898", VA = "0x245898")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000031")]
		public Vector3 PlayspaceSize
		{
			[Token(Token = "0x600013F")]
			[Address(RVA = "0x24D7A4", Offset = "0x24D7A4", VA = "0x24D7A4")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x600013D")]
		[Address(RVA = "0x24D728", Offset = "0x24D728", VA = "0x24D728")]
		public NVRPlayer()
		{
		}

		[Token(Token = "0x6000140")]
		[Address(RVA = "0x24D944", Offset = "0x24D944", VA = "0x24D944")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000141")]
		[Address(RVA = "0x24DD80", Offset = "0x24DD80", VA = "0x24DD80")]
		private void SetupIntegration(bool logOutput = true)
		{
		}

		[Token(Token = "0x6000142")]
		[Address(RVA = "0x24DED4", Offset = "0x24DED4", VA = "0x24DED4")]
		private NVRSDKIntegrations DetermineCurrentIntegration(bool logOutput = true)
		{
			return default(NVRSDKIntegrations);
		}

		[Token(Token = "0x6000143")]
		[Address(RVA = "0x24E1C0", Offset = "0x24E1C0", VA = "0x24E1C0")]
		public void RegisterHand(NVRHand hand)
		{
		}

		[Token(Token = "0x6000144")]
		[Address(RVA = "0x24E31C", Offset = "0x24E31C", VA = "0x24E31C")]
		public NVRHand GetHand(Collider collider)
		{
			return null;
		}

		[Token(Token = "0x6000145")]
		[Address(RVA = "0x246E94", Offset = "0x246E94", VA = "0x246E94")]
		public static void DeregisterInteractable(NVRInteractable interactable, bool full = true)
		{
		}

		[Token(Token = "0x6000146")]
		[Address(RVA = "0x24E398", Offset = "0x24E398", VA = "0x24E398")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000147")]
		[Address(RVA = "0x24E450", Offset = "0x24E450", VA = "0x24E450")]
		private void Update()
		{
		}

		[Token(Token = "0x6000149")]
		[Address(RVA = "0x24E5D0", Offset = "0x24E5D0", VA = "0x24E5D0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1F1A98", Offset = "0x1F1A98")]
		private static bool <get_Instance>m__0(NVRPlayer player)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x200003B")]
	public enum NVRSDKIntegrations
	{
		[Token(Token = "0x4000180")]
		None,
		[Token(Token = "0x4000181")]
		FallbackNonVR,
		[Token(Token = "0x4000182")]
		SteamVR,
		[Token(Token = "0x4000183")]
		Oculus
	}
	[Token(Token = "0x200003C")]
	public class NVRSlider : NVRInteractable
	{
		[Token(Token = "0x4000184")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1F1AA8", Offset = "0x1F1AA8")]
		public float CurrentValue;

		[Token(Token = "0x4000185")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1F1ADC", Offset = "0x1F1ADC")]
		public Transform StartPoint;

		[Token(Token = "0x4000186")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1F1B10", Offset = "0x1F1B10")]
		public Transform EndPoint;

		[Token(Token = "0x4000187")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		protected float AttachedPositionMagic;

		[Token(Token = "0x4000188")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		protected Transform PickupTransform;

		[Token(Token = "0x4000189")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		protected Vector3 SliderPath;

		[Token(Token = "0x600014A")]
		[Address(RVA = "0x24E6CC", Offset = "0x24E6CC", VA = "0x24E6CC")]
		public NVRSlider()
		{
		}

		[Token(Token = "0x600014B")]
		[Address(RVA = "0x24E6F8", Offset = "0x24E6F8", VA = "0x24E6F8", Slot = "5")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x600014C")]
		[Address(RVA = "0x24E9DC", Offset = "0x24E9DC", VA = "0x24E9DC", Slot = "24")]
		protected virtual void FixedUpdate()
		{
		}

		[Token(Token = "0x600014D")]
		[Address(RVA = "0x24EDEC", Offset = "0x24EDEC", VA = "0x24EDEC", Slot = "12")]
		public override void BeginInteraction(NVRHand hand)
		{
		}

		[Token(Token = "0x600014E")]
		[Address(RVA = "0x24EFF4", Offset = "0x24EFF4", VA = "0x24EFF4", Slot = "15")]
		public override void EndInteraction()
		{
		}

		[Token(Token = "0x600014F")]
		[Address(RVA = "0x24ED2C", Offset = "0x24ED2C", VA = "0x24ED2C")]
		protected Vector3 ProjectVelocityOnPath(Vector3 velocity, Vector3 path)
		{
			return default(Vector3);
		}
	}
	[Token(Token = "0x200003D")]
	public class NVRSwitch : MonoBehaviour
	{
		[Token(Token = "0x400018A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public bool CurrentState;

		[Token(Token = "0x400018B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD")]
		public bool LastState;

		[Token(Token = "0x400018C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE")]
		private bool FixedState;

		[Token(Token = "0x400018D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Transform OnButton;

		[Token(Token = "0x400018E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public Renderer OnButtonRenderer;

		[Token(Token = "0x400018F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform OffButton;

		[Token(Token = "0x4000190")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Renderer OffButtonRenderer;

		[Token(Token = "0x4000191")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Rigidbody Rigidbody;

		[Token(Token = "0x4000192")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private float ForceMagic;

		[Token(Token = "0x6000150")]
		[Address(RVA = "0x24F468", Offset = "0x24F468", VA = "0x24F468")]
		public NVRSwitch()
		{
		}

		[Token(Token = "0x6000151")]
		[Address(RVA = "0x24F48C", Offset = "0x24F48C", VA = "0x24F48C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000152")]
		[Address(RVA = "0x24F808", Offset = "0x24F808", VA = "0x24F808")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6000153")]
		[Address(RVA = "0x24FB4C", Offset = "0x24FB4C", VA = "0x24FB4C")]
		private void Update()
		{
		}

		[Token(Token = "0x6000154")]
		[Address(RVA = "0x24F500", Offset = "0x24F500", VA = "0x24F500")]
		private void SetRotation(bool forState)
		{
		}
	}
	[Token(Token = "0x200003E")]
	public class NVRUIIgnoreRaycast : MonoBehaviour, ICanvasRaycastFilter
	{
		[Token(Token = "0x6000155")]
		[Address(RVA = "0x24FB60", Offset = "0x24FB60", VA = "0x24FB60")]
		public NVRUIIgnoreRaycast()
		{
		}

		[Token(Token = "0x6000156")]
		[Address(RVA = "0x24FB68", Offset = "0x24FB68", VA = "0x24FB68", Slot = "4")]
		public bool IsRaycastLocationValid(Vector2 sp, Camera eventCamera)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x200003F")]
	public class NVROculusInputDevice : NVRInputDevice
	{
		[Token(Token = "0x20002E8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1F1B54", Offset = "0x1F1B54")]
		private sealed class <DoHapticPulse>c__Iterator0 : IEnumerator, IDisposable, IEnumerator<object>
		{
			[Token(Token = "0x400116C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			internal ushort durationMicroSec;

			[Token(Token = "0x400116D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			internal float <endTime>__0;

			[Token(Token = "0x400116E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal NVROculusInputDevice $this;

			[Token(Token = "0x400116F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			internal object $current;

			[Token(Token = "0x4001170")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			internal bool $disposing;

			[Token(Token = "0x4001171")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			internal int $PC;

			[Token(Token = "0x1700024B")]
			private object System.Collections.Generic.IEnumerator<object>.Current
			{
				[Token(Token = "0x60016CC")]
				[Address(RVA = "0x24ABC4", Offset = "0x24ABC4", VA = "0x24ABC4", Slot = "8")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700024C")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60016CD")]
				[Address(RVA = "0x24ABCC", Offset = "0x24ABCC", VA = "0x24ABCC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60016CA")]
			[Address(RVA = "0x249F30", Offset = "0x249F30", VA = "0x249F30")]
			[DebuggerHidden]
			public <DoHapticPulse>c__Iterator0()
			{
			}

			[Token(Token = "0x60016CB")]
			[Address(RVA = "0x24AA00", Offset = "0x24AA00", VA = "0x24AA00", Slot = "5")]
			public bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60016CE")]
			[Address(RVA = "0x24ABD4", Offset = "0x24ABD4", VA = "0x24ABD4", Slot = "7")]
			[DebuggerHidden]
			public void Dispose()
			{
			}

			[Token(Token = "0x60016CF")]
			[Address(RVA = "0x24ABE8", Offset = "0x24ABE8", VA = "0x24ABE8", Slot = "6")]
			[DebuggerHidden]
			public void Reset()
			{
			}
		}

		[Token(Token = "0x4000193")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private GameObject RenderModel;

		[Token(Token = "0x4000194")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private OVRInput.Controller Controller;

		[Token(Token = "0x4000195")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Dictionary<NVRButtons, OVRInput.Button> ButtonMapping;

		[Token(Token = "0x4000196")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private Dictionary<NVRButtons, OVRInput.Touch> TouchMapping;

		[Token(Token = "0x4000197")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Dictionary<NVRButtons, OVRInput.NearTouch> NearTouchMapping;

		[Token(Token = "0x4000198")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private Dictionary<NVRButtons, OVRInput.Axis1D> TriggerMapping;

		[Token(Token = "0x4000199")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Dictionary<NVRButtons, OVRInput.Axis2D> StickMapping;

		[Token(Token = "0x17000032")]
		public override bool IsCurrentlyTracked
		{
			[Token(Token = "0x600016C")]
			[Address(RVA = "0x249F38", Offset = "0x249F38", VA = "0x249F38", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000157")]
		[Address(RVA = "0x248C58", Offset = "0x248C58", VA = "0x248C58")]
		public NVROculusInputDevice()
		{
		}

		[Token(Token = "0x6000158")]
		[Address(RVA = "0x248E44", Offset = "0x248E44", VA = "0x248E44", Slot = "4")]
		public override void Initialize(NVRHand hand)
		{
		}

		[Token(Token = "0x6000159")]
		[Address(RVA = "0x248F20", Offset = "0x248F20", VA = "0x248F20", Slot = "23")]
		protected virtual void SetupButtonMapping()
		{
		}

		[Token(Token = "0x600015A")]
		[Address(RVA = "0x2493BC", Offset = "0x2493BC", VA = "0x2493BC")]
		private OVRInput.Button GetButtonMap(NVRButtons button)
		{
			return default(OVRInput.Button);
		}

		[Token(Token = "0x600015B")]
		[Address(RVA = "0x249474", Offset = "0x249474", VA = "0x249474")]
		private OVRInput.Touch GetTouchMap(NVRButtons button)
		{
			return default(OVRInput.Touch);
		}

		[Token(Token = "0x600015C")]
		[Address(RVA = "0x24952C", Offset = "0x24952C", VA = "0x24952C")]
		private OVRInput.NearTouch GetNearTouchMap(NVRButtons button)
		{
			return default(OVRInput.NearTouch);
		}

		[Token(Token = "0x600015D")]
		[Address(RVA = "0x2495E4", Offset = "0x2495E4", VA = "0x2495E4")]
		private OVRInput.Axis1D GetTriggerMap(NVRButtons button)
		{
			return default(OVRInput.Axis1D);
		}

		[Token(Token = "0x600015E")]
		[Address(RVA = "0x24969C", Offset = "0x24969C", VA = "0x24969C")]
		private OVRInput.Axis2D GetStickMap(NVRButtons button)
		{
			return default(OVRInput.Axis2D);
		}

		[Token(Token = "0x600015F")]
		[Address(RVA = "0x249754", Offset = "0x249754", VA = "0x249754", Slot = "12")]
		public override float GetAxis1D(NVRButtons button)
		{
			return default(float);
		}

		[Token(Token = "0x6000160")]
		[Address(RVA = "0x2497F8", Offset = "0x2497F8", VA = "0x2497F8", Slot = "13")]
		public override Vector2 GetAxis2D(NVRButtons button)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6000161")]
		[Address(RVA = "0x2498B0", Offset = "0x2498B0", VA = "0x2498B0", Slot = "14")]
		public override bool GetPressDown(NVRButtons button)
		{
			return default(bool);
		}

		[Token(Token = "0x6000162")]
		[Address(RVA = "0x249954", Offset = "0x249954", VA = "0x249954", Slot = "15")]
		public override bool GetPressUp(NVRButtons button)
		{
			return default(bool);
		}

		[Token(Token = "0x6000163")]
		[Address(RVA = "0x2499F8", Offset = "0x2499F8", VA = "0x2499F8", Slot = "16")]
		public override bool GetPress(NVRButtons button)
		{
			return default(bool);
		}

		[Token(Token = "0x6000164")]
		[Address(RVA = "0x249A9C", Offset = "0x249A9C", VA = "0x249A9C", Slot = "17")]
		public override bool GetTouchDown(NVRButtons button)
		{
			return default(bool);
		}

		[Token(Token = "0x6000165")]
		[Address(RVA = "0x249B40", Offset = "0x249B40", VA = "0x249B40", Slot = "18")]
		public override bool GetTouchUp(NVRButtons button)
		{
			return default(bool);
		}

		[Token(Token = "0x6000166")]
		[Address(RVA = "0x249BE4", Offset = "0x249BE4", VA = "0x249BE4", Slot = "19")]
		public override bool GetTouch(NVRButtons button)
		{
			return default(bool);
		}

		[Token(Token = "0x6000167")]
		[Address(RVA = "0x249C88", Offset = "0x249C88", VA = "0x249C88", Slot = "20")]
		public override bool GetNearTouchDown(NVRButtons button)
		{
			return default(bool);
		}

		[Token(Token = "0x6000168")]
		[Address(RVA = "0x249D2C", Offset = "0x249D2C", VA = "0x249D2C", Slot = "21")]
		public override bool GetNearTouchUp(NVRButtons button)
		{
			return default(bool);
		}

		[Token(Token = "0x6000169")]
		[Address(RVA = "0x249DD0", Offset = "0x249DD0", VA = "0x249DD0", Slot = "22")]
		public override bool GetNearTouch(NVRButtons button)
		{
			return default(bool);
		}

		[Token(Token = "0x600016A")]
		[Address(RVA = "0x249E74", Offset = "0x249E74", VA = "0x249E74", Slot = "11")]
		public override void TriggerHapticPulse(ushort durationMicroSec = 500, NVRButtons button = NVRButtons.Touchpad)
		{
		}

		[Token(Token = "0x600016B")]
		[Address(RVA = "0x249E98", Offset = "0x249E98", VA = "0x249E98")]
		[DebuggerHidden]
		private IEnumerator DoHapticPulse(ushort durationMicroSec)
		{
			return null;
		}

		[Token(Token = "0x600016D")]
		[Address(RVA = "0x249FC4", Offset = "0x249FC4", VA = "0x249FC4", Slot = "7")]
		public override GameObject SetupDefaultRenderModel()
		{
			return null;
		}

		[Token(Token = "0x600016E")]
		[Address(RVA = "0x24A37C", Offset = "0x24A37C", VA = "0x24A37C", Slot = "8")]
		public override bool ReadyToInitialize()
		{
			return default(bool);
		}

		[Token(Token = "0x600016F")]
		[Address(RVA = "0x24A384", Offset = "0x24A384", VA = "0x24A384", Slot = "10")]
		public override string GetDeviceName()
		{
			return null;
		}

		[Token(Token = "0x6000170")]
		[Address(RVA = "0x24A4B4", Offset = "0x24A4B4", VA = "0x24A4B4", Slot = "6")]
		public override Collider[] SetupDefaultPhysicalColliders(Transform ModelParent)
		{
			return null;
		}

		[Token(Token = "0x6000171")]
		[Address(RVA = "0x24A8B8", Offset = "0x24A8B8", VA = "0x24A8B8", Slot = "9")]
		public override Collider[] SetupDefaultColliders()
		{
			return null;
		}
	}
	[Token(Token = "0x2000040")]
	public class NVROculusIntegration : NVRIntegration
	{
		[Token(Token = "0x400019A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private OVRBoundary boundary;

		[Token(Token = "0x400019B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private OVRDisplay display;

		[Token(Token = "0x400019C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private OVRTracker tracker;

		[Token(Token = "0x400019D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private OVRCameraRig rig;

		[Token(Token = "0x400019E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private Vector3 PlayspaceBounds;

		[Token(Token = "0x17000033")]
		private OVRBoundary Boundary
		{
			[Token(Token = "0x6000173")]
			[Address(RVA = "0x24AD14", Offset = "0x24AD14", VA = "0x24AD14")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000034")]
		private OVRDisplay Display
		{
			[Token(Token = "0x6000174")]
			[Address(RVA = "0x24AD94", Offset = "0x24AD94", VA = "0x24AD94")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000035")]
		private OVRTracker Tracker
		{
			[Token(Token = "0x6000175")]
			[Address(RVA = "0x24AE14", Offset = "0x24AE14", VA = "0x24AE14")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000172")]
		[Address(RVA = "0x24AC6C", Offset = "0x24AC6C", VA = "0x24AC6C")]
		public NVROculusIntegration()
		{
		}

		[Token(Token = "0x6000176")]
		[Address(RVA = "0x24AE94", Offset = "0x24AE94", VA = "0x24AE94", Slot = "4")]
		public override void Initialize(NVRPlayer player)
		{
		}

		[Token(Token = "0x6000177")]
		[Address(RVA = "0x24B150", Offset = "0x24B150", VA = "0x24B150", Slot = "5")]
		public override Vector3 GetPlayspaceBounds()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000178")]
		[Address(RVA = "0x24B2D8", Offset = "0x24B2D8", VA = "0x24B2D8", Slot = "7")]
		public override Vector3 GetCenterOffset()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000179")]
		[Address(RVA = "0x24B6EC", Offset = "0x24B6EC", VA = "0x24B6EC")]
		public Quaternion GetBestRotation(Vector3 Dimension, out Vector3 offset)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x600017A")]
		[Address(RVA = "0x24BDD4", Offset = "0x24BDD4", VA = "0x24BDD4", Slot = "6")]
		public override bool IsHmdPresent()
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000041")]
	public class NVRSteamVRInputDevice : NVRInputDevice
	{
		[Token(Token = "0x17000036")]
		public override bool IsCurrentlyTracked
		{
			[Token(Token = "0x600017C")]
			[Address(RVA = "0x24F0F8", Offset = "0x24F0F8", VA = "0x24F0F8", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x600017B")]
		[Address(RVA = "0x24F0F0", Offset = "0x24F0F0", VA = "0x24F0F0")]
		public NVRSteamVRInputDevice()
		{
		}

		[Token(Token = "0x600017D")]
		[Address(RVA = "0x24F19C", Offset = "0x24F19C", VA = "0x24F19C", Slot = "12")]
		public override float GetAxis1D(NVRButtons button)
		{
			return default(float);
		}

		[Token(Token = "0x600017E")]
		[Address(RVA = "0x24F1B0", Offset = "0x24F1B0", VA = "0x24F1B0", Slot = "13")]
		public override Vector2 GetAxis2D(NVRButtons button)
		{
			return default(Vector2);
		}

		[Token(Token = "0x600017F")]
		[Address(RVA = "0x24F23C", Offset = "0x24F23C", VA = "0x24F23C", Slot = "10")]
		public override string GetDeviceName()
		{
			return null;
		}

		[Token(Token = "0x6000180")]
		[Address(RVA = "0x24F2CC", Offset = "0x24F2CC", VA = "0x24F2CC", Slot = "22")]
		public override bool GetNearTouch(NVRButtons button)
		{
			return default(bool);
		}

		[Token(Token = "0x6000181")]
		[Address(RVA = "0x24F2E0", Offset = "0x24F2E0", VA = "0x24F2E0", Slot = "20")]
		public override bool GetNearTouchDown(NVRButtons button)
		{
			return default(bool);
		}

		[Token(Token = "0x6000182")]
		[Address(RVA = "0x24F2F4", Offset = "0x24F2F4", VA = "0x24F2F4", Slot = "21")]
		public override bool GetNearTouchUp(NVRButtons button)
		{
			return default(bool);
		}

		[Token(Token = "0x6000183")]
		[Address(RVA = "0x24F308", Offset = "0x24F308", VA = "0x24F308", Slot = "16")]
		public override bool GetPress(NVRButtons button)
		{
			return default(bool);
		}

		[Token(Token = "0x6000184")]
		[Address(RVA = "0x24F31C", Offset = "0x24F31C", VA = "0x24F31C", Slot = "14")]
		public override bool GetPressDown(NVRButtons button)
		{
			return default(bool);
		}

		[Token(Token = "0x6000185")]
		[Address(RVA = "0x24F330", Offset = "0x24F330", VA = "0x24F330", Slot = "15")]
		public override bool GetPressUp(NVRButtons button)
		{
			return default(bool);
		}

		[Token(Token = "0x6000186")]
		[Address(RVA = "0x24F344", Offset = "0x24F344", VA = "0x24F344", Slot = "19")]
		public override bool GetTouch(NVRButtons button)
		{
			return default(bool);
		}

		[Token(Token = "0x6000187")]
		[Address(RVA = "0x24F358", Offset = "0x24F358", VA = "0x24F358", Slot = "17")]
		public override bool GetTouchDown(NVRButtons button)
		{
			return default(bool);
		}

		[Token(Token = "0x6000188")]
		[Address(RVA = "0x24F36C", Offset = "0x24F36C", VA = "0x24F36C", Slot = "18")]
		public override bool GetTouchUp(NVRButtons button)
		{
			return default(bool);
		}

		[Token(Token = "0x6000189")]
		[Address(RVA = "0x24F380", Offset = "0x24F380", VA = "0x24F380", Slot = "8")]
		public override bool ReadyToInitialize()
		{
			return default(bool);
		}

		[Token(Token = "0x600018A")]
		[Address(RVA = "0x24F394", Offset = "0x24F394", VA = "0x24F394", Slot = "9")]
		public override Collider[] SetupDefaultColliders()
		{
			return null;
		}

		[Token(Token = "0x600018B")]
		[Address(RVA = "0x24F3A8", Offset = "0x24F3A8", VA = "0x24F3A8", Slot = "6")]
		public override Collider[] SetupDefaultPhysicalColliders(Transform ModelParent)
		{
			return null;
		}

		[Token(Token = "0x600018C")]
		[Address(RVA = "0x24F3BC", Offset = "0x24F3BC", VA = "0x24F3BC", Slot = "7")]
		public override GameObject SetupDefaultRenderModel()
		{
			return null;
		}

		[Token(Token = "0x600018D")]
		[Address(RVA = "0x24F3D0", Offset = "0x24F3D0", VA = "0x24F3D0", Slot = "11")]
		public override void TriggerHapticPulse(ushort durationMicroSec = 500, NVRButtons button = NVRButtons.Touchpad)
		{
		}

		[Token(Token = "0x600018E")]
		[Address(RVA = "0x24F10C", Offset = "0x24F10C", VA = "0x24F10C")]
		private void PrintNotEnabledError()
		{
		}
	}
	[Token(Token = "0x2000042")]
	public class NVRSteamVRIntegration : NVRIntegration
	{
		[Token(Token = "0x600018F")]
		[Address(RVA = "0x24D93C", Offset = "0x24D93C", VA = "0x24D93C")]
		public NVRSteamVRIntegration()
		{
		}

		[Token(Token = "0x6000190")]
		[Address(RVA = "0x24F3D4", Offset = "0x24F3D4", VA = "0x24F3D4", Slot = "4")]
		public override void Initialize(NVRPlayer player)
		{
		}

		[Token(Token = "0x6000191")]
		[Address(RVA = "0x24F3D8", Offset = "0x24F3D8", VA = "0x24F3D8", Slot = "5")]
		public override Vector3 GetPlayspaceBounds()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000192")]
		[Address(RVA = "0x24F460", Offset = "0x24F460", VA = "0x24F460", Slot = "6")]
		public override bool IsHmdPresent()
		{
			return default(bool);
		}
	}
}
[Token(Token = "0x2000043")]
public class OculusAchievementsManager : AchievementsManager
{
	[Token(Token = "0x400019F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1F1BB4", Offset = "0x1F1BB4")]
	private static Message<AchievementProgressList>.Callback <>f__am$cache0;

	[Token(Token = "0x6000193")]
	[Address(RVA = "0x2583A4", Offset = "0x2583A4", VA = "0x2583A4")]
	public OculusAchievementsManager()
	{
	}

	[Token(Token = "0x6000194")]
	[Address(RVA = "0x2583AC", Offset = "0x2583AC", VA = "0x2583AC", Slot = "6")]
	public override void AddOneToStat(string name)
	{
	}

	[Token(Token = "0x6000195")]
	[Address(RVA = "0x258640", Offset = "0x258640", VA = "0x258640", Slot = "7")]
	public override void TriggerAchievement(string name)
	{
	}

	[Token(Token = "0x6000196")]
	[Address(RVA = "0x258740", Offset = "0x258740", VA = "0x258740", Slot = "8")]
	public override void AddOneToCollection(string name, string field)
	{
	}

	[Token(Token = "0x6000197")]
	[Address(RVA = "0x25894C", Offset = "0x25894C", VA = "0x25894C", Slot = "9")]
	protected override void CheckFullCompletion()
	{
	}

	[Token(Token = "0x6000198")]
	[Address(RVA = "0x258A58", Offset = "0x258A58", VA = "0x258A58")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1F1BC4", Offset = "0x1F1BC4")]
	private static void <CheckFullCompletion>m__0(Message<AchievementProgressList> msg)
	{
	}
}
[Token(Token = "0x2000044")]
public class OculusPlatformManager : PlatformManager
{
	[Token(Token = "0x20002E9")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1F1BE4", Offset = "0x1F1BE4")]
	private sealed class <EntitlementFailMessage>c__Iterator0 : IEnumerator, IDisposable, IEnumerator<object>
	{
		[Token(Token = "0x4001172")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal OculusPlatformManager $this;

		[Token(Token = "0x4001173")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		internal object $current;

		[Token(Token = "0x4001174")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal bool $disposing;

		[Token(Token = "0x4001175")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		internal int $PC;

		[Token(Token = "0x1700024D")]
		private object System.Collections.Generic.IEnumerator<object>.Current
		{
			[Token(Token = "0x60016D2")]
			[Address(RVA = "0x25952C", Offset = "0x25952C", VA = "0x25952C", Slot = "8")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700024E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60016D3")]
			[Address(RVA = "0x259534", Offset = "0x259534", VA = "0x259534", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60016D0")]
		[Address(RVA = "0x259394", Offset = "0x259394", VA = "0x259394")]
		[DebuggerHidden]
		public <EntitlementFailMessage>c__Iterator0()
		{
		}

		[Token(Token = "0x60016D1")]
		[Address(RVA = "0x25939C", Offset = "0x25939C", VA = "0x25939C", Slot = "5")]
		public bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60016D4")]
		[Address(RVA = "0x25953C", Offset = "0x25953C", VA = "0x25953C", Slot = "7")]
		[DebuggerHidden]
		public void Dispose()
		{
		}

		[Token(Token = "0x60016D5")]
		[Address(RVA = "0x259550", Offset = "0x259550", VA = "0x259550", Slot = "6")]
		[DebuggerHidden]
		public void Reset()
		{
		}
	}

	[Token(Token = "0x40001A0")]
	public const string OCULUS_APP_ID = "1879234558760878";

	[Token(Token = "0x40001A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private OculusEntitlementWarning _oculusEntitlementWarning;

	[Token(Token = "0x6000199")]
	[Address(RVA = "0x258D4C", Offset = "0x258D4C", VA = "0x258D4C")]
	public OculusPlatformManager()
	{
	}

	[Token(Token = "0x600019A")]
	[Address(RVA = "0x258D54", Offset = "0x258D54", VA = "0x258D54", Slot = "4")]
	public override void Init()
	{
	}

	[Token(Token = "0x600019B")]
	[Address(RVA = "0x258EF4", Offset = "0x258EF4", VA = "0x258EF4")]
	private void SubscribeEvents()
	{
	}

	[Token(Token = "0x600019C")]
	[Address(RVA = "0x258EF8", Offset = "0x258EF8", VA = "0x258EF8")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600019D")]
	[Address(RVA = "0x258EFC", Offset = "0x258EFC", VA = "0x258EFC", Slot = "5")]
	public override string GetDefaultLangagueString()
	{
		return null;
	}

	[Token(Token = "0x600019E")]
	[Address(RVA = "0x258F7C", Offset = "0x258F7C", VA = "0x258F7C")]
	private void OnOculusMounted()
	{
	}

	[Token(Token = "0x600019F")]
	[Address(RVA = "0x2590FC", Offset = "0x2590FC", VA = "0x2590FC")]
	private void OnOculusUnmounted()
	{
	}

	[Token(Token = "0x60001A0")]
	[Address(RVA = "0x258E44", Offset = "0x258E44", VA = "0x258E44")]
	private void EntitleUser()
	{
	}

	[Token(Token = "0x60001A1")]
	[Address(RVA = "0x259228", Offset = "0x259228", VA = "0x259228")]
	private void EntitleUserCallback(Message msg)
	{
	}

	[Token(Token = "0x60001A2")]
	[Address(RVA = "0x259314", Offset = "0x259314", VA = "0x259314")]
	[DebuggerHidden]
	private IEnumerator EntitlementFailMessage()
	{
		return null;
	}
}
[Token(Token = "0x2000045")]
public class OculusQuestFocusAware : MonoBehaviour
{
	[Token(Token = "0x20002EA")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1F1C54", Offset = "0x1F1C54")]
	private sealed class <Start>c__Iterator0 : IEnumerator, IDisposable, IEnumerator<object>
	{
		[Token(Token = "0x4001176")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal NVRHand <gauche>__0;

		[Token(Token = "0x4001177")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		internal NVRHand <droite>__0;

		[Token(Token = "0x4001178")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal OculusQuestFocusAware $this;

		[Token(Token = "0x4001179")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		internal object $current;

		[Token(Token = "0x400117A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal bool $disposing;

		[Token(Token = "0x400117B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		internal int $PC;

		[Token(Token = "0x1700024F")]
		private object System.Collections.Generic.IEnumerator<object>.Current
		{
			[Token(Token = "0x60016D8")]
			[Address(RVA = "0x259AA4", Offset = "0x259AA4", VA = "0x259AA4", Slot = "8")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000250")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60016D9")]
			[Address(RVA = "0x259AAC", Offset = "0x259AAC", VA = "0x259AAC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60016D6")]
		[Address(RVA = "0x259664", Offset = "0x259664", VA = "0x259664")]
		[DebuggerHidden]
		public <Start>c__Iterator0()
		{
		}

		[Token(Token = "0x60016D7")]
		[Address(RVA = "0x2597E4", Offset = "0x2597E4", VA = "0x2597E4", Slot = "5")]
		public bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60016DA")]
		[Address(RVA = "0x259AB4", Offset = "0x259AB4", VA = "0x259AB4", Slot = "7")]
		[DebuggerHidden]
		public void Dispose()
		{
		}

		[Token(Token = "0x60016DB")]
		[Address(RVA = "0x259AC8", Offset = "0x259AC8", VA = "0x259AC8", Slot = "6")]
		[DebuggerHidden]
		public void Reset()
		{
		}
	}

	[Token(Token = "0x40001A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private bool menuOuvert;

	[Token(Token = "0x60001A3")]
	[Address(RVA = "0x2595D4", Offset = "0x2595D4", VA = "0x2595D4")]
	public OculusQuestFocusAware()
	{
	}

	[Token(Token = "0x60001A4")]
	[Address(RVA = "0x2595E4", Offset = "0x2595E4", VA = "0x2595E4")]
	[DebuggerHidden]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x60001A5")]
	[Address(RVA = "0x25966C", Offset = "0x25966C", VA = "0x25966C")]
	private void OnApplicationFocus(bool focus)
	{
	}
}
[Token(Token = "0x2000046")]
public class NoSteamPlatformManager : PlatformManager
{
	[Token(Token = "0x20002EB")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1F1CC4", Offset = "0x1F1CC4")]
	private sealed class <NoSteamMessage>c__Iterator0 : IEnumerator, IDisposable, IEnumerator<object>
	{
		[Token(Token = "0x400117C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal OculusEntitlementWarning <_oculusEntitlementWarning>__0;

		[Token(Token = "0x400117D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		internal TextMeshProUGUI <text>__0;

		[Token(Token = "0x400117E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal NoSteamPlatformManager $this;

		[Token(Token = "0x400117F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		internal object $current;

		[Token(Token = "0x4001180")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal bool $disposing;

		[Token(Token = "0x4001181")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		internal int $PC;

		[Token(Token = "0x17000251")]
		private object System.Collections.Generic.IEnumerator<object>.Current
		{
			[Token(Token = "0x60016DE")]
			[Address(RVA = "0x24FEC8", Offset = "0x24FEC8", VA = "0x24FEC8", Slot = "8")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000252")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60016DF")]
			[Address(RVA = "0x24FED0", Offset = "0x24FED0", VA = "0x24FED0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60016DC")]
		[Address(RVA = "0x24FC24", Offset = "0x24FC24", VA = "0x24FC24")]
		[DebuggerHidden]
		public <NoSteamMessage>c__Iterator0()
		{
		}

		[Token(Token = "0x60016DD")]
		[Address(RVA = "0x24FC2C", Offset = "0x24FC2C", VA = "0x24FC2C", Slot = "5")]
		public bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60016E0")]
		[Address(RVA = "0x24FED8", Offset = "0x24FED8", VA = "0x24FED8", Slot = "7")]
		[DebuggerHidden]
		public void Dispose()
		{
		}

		[Token(Token = "0x60016E1")]
		[Address(RVA = "0x24FEEC", Offset = "0x24FEEC", VA = "0x24FEEC", Slot = "6")]
		[DebuggerHidden]
		public void Reset()
		{
		}
	}

	[Token(Token = "0x60001A6")]
	[Address(RVA = "0x24FB70", Offset = "0x24FB70", VA = "0x24FB70")]
	public NoSteamPlatformManager()
	{
	}

	[Token(Token = "0x60001A7")]
	[Address(RVA = "0x24FB80", Offset = "0x24FB80", VA = "0x24FB80", Slot = "4")]
	public override void Init()
	{
	}

	[Token(Token = "0x60001A8")]
	[Address(RVA = "0x24FBA4", Offset = "0x24FBA4", VA = "0x24FBA4")]
	[DebuggerHidden]
	private IEnumerator NoSteamMessage()
	{
		return null;
	}
}
[Token(Token = "0x2000047")]
public class VROnlineAchievementManager : AchievementsManager
{
	[Token(Token = "0x60001A9")]
	[Address(RVA = "0x41AC58", Offset = "0x41AC58", VA = "0x41AC58")]
	public VROnlineAchievementManager()
	{
	}
}
[Token(Token = "0x2000048")]
public class MenuManager : MonoBehaviour
{
	[Token(Token = "0x40001A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static MenuManager Instance;

	[Token(Token = "0x40001A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public DataToLoad[] BaseLevel;

	[Token(Token = "0x40001A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public GameObject LoadingDataPrefab;

	[Token(Token = "0x40001A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public BaseShaderValue StaticShaderValues;

	[Token(Token = "0x40001A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public static int PrisonUnlock;

	[Token(Token = "0x40001A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int ArcadeHighScore;

	[Token(Token = "0x40001A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[HideInInspector]
	public bool loading;

	[Token(Token = "0x60001AA")]
	[Address(RVA = "0xC8F024", Offset = "0xC8F024", VA = "0xC8F024")]
	public MenuManager()
	{
	}

	[Token(Token = "0x60001AB")]
	[Address(RVA = "0xC8F02C", Offset = "0xC8F02C", VA = "0xC8F02C")]
	private void Awake()
	{
	}

	[Token(Token = "0x60001AC")]
	[Address(RVA = "0xC8F42C", Offset = "0xC8F42C", VA = "0xC8F42C")]
	private void Start()
	{
	}

	[Token(Token = "0x60001AD")]
	[Address(RVA = "0xC8F430", Offset = "0xC8F430", VA = "0xC8F430")]
	public void LoadGlobalProgression()
	{
	}

	[Token(Token = "0x60001AE")]
	[Address(RVA = "0xC8F71C", Offset = "0xC8F71C", VA = "0xC8F71C")]
	public void LoadLevel(int ID)
	{
	}

	[Token(Token = "0x60001AF")]
	[Address(RVA = "0xC8FBF0", Offset = "0xC8FBF0", VA = "0xC8FBF0")]
	public void loadTutorial()
	{
	}

	[Token(Token = "0x60001B0")]
	[Address(RVA = "0xC8FCD8", Offset = "0xC8FCD8", VA = "0xC8FCD8")]
	public void loadOption()
	{
	}

	[Token(Token = "0x60001B1")]
	[Address(RVA = "0xC8FD74", Offset = "0xC8FD74", VA = "0xC8FD74")]
	public void LoadSandbox()
	{
	}

	[Token(Token = "0x60001B2")]
	[Address(RVA = "0xC8FEC4", Offset = "0xC8FEC4", VA = "0xC8FEC4")]
	public void LoadArcade()
	{
	}

	[Token(Token = "0x60001B3")]
	[Address(RVA = "0xC903C8", Offset = "0xC903C8", VA = "0xC903C8")]
	public void FirstLoad()
	{
	}

	[Token(Token = "0x60001B4")]
	[Address(RVA = "0xC90618", Offset = "0xC90618", VA = "0xC90618")]
	public void LoadSave(DataToLoad datapkg)
	{
	}
}
[Token(Token = "0x2000049")]
public class GuidanceManager : MonoBehaviour
{
	[Token(Token = "0x40001AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static GuidanceManager Instance;

	[Token(Token = "0x40001AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public bool FirstLoad;

	[Token(Token = "0x40001AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD")]
	public bool foundOldSetting;

	[Token(Token = "0x40001AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE")]
	public bool confortChanged;

	[Token(Token = "0x40001AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string TutorialsDone;

	[Token(Token = "0x40001AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public bool HadSearchTutorial;

	[Token(Token = "0x40001B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x15")]
	private bool fileUpgraded;

	[Token(Token = "0x60001B6")]
	[Address(RVA = "0xC69400", Offset = "0xC69400", VA = "0xC69400")]
	public GuidanceManager()
	{
	}

	[Token(Token = "0x60001B7")]
	[Address(RVA = "0xC69408", Offset = "0xC69408", VA = "0xC69408")]
	private void Awake()
	{
	}

	[Token(Token = "0x60001B8")]
	[Address(RVA = "0xC695D0", Offset = "0xC695D0", VA = "0xC695D0")]
	private void Init()
	{
	}

	[Token(Token = "0x60001B9")]
	[Address(RVA = "0xC69A2C", Offset = "0xC69A2C", VA = "0xC69A2C")]
	private GlobalProgressionDataV2 UpgradeGlobalData(GlobalProgressionData GPD)
	{
		return null;
	}
}
[Token(Token = "0x200004A")]
public class PreloadingManager : PreloadingManagerCommon
{
	[Token(Token = "0x17000037")]
	public override string ConfigDirectoryPath
	{
		[Token(Token = "0x60001BB")]
		[Address(RVA = "0x26663C", Offset = "0x26663C", VA = "0x26663C", Slot = "4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000038")]
	public override string SavesDirectoryPath
	{
		[Token(Token = "0x60001BC")]
		[Address(RVA = "0x2666BC", Offset = "0x2666BC", VA = "0x2666BC", Slot = "5")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60001BA")]
	[Address(RVA = "0x26662C", Offset = "0x26662C", VA = "0x26662C")]
	public PreloadingManager()
	{
	}

	[Token(Token = "0x60001BD")]
	[Address(RVA = "0x26673C", Offset = "0x26673C", VA = "0x26673C", Slot = "6")]
	public override Stream GetReadStream(string path)
	{
		return null;
	}

	[Token(Token = "0x60001BE")]
	[Address(RVA = "0x26676C", Offset = "0x26676C", VA = "0x26676C", Slot = "7")]
	public override Stream GetWriteStream(string path)
	{
		return null;
	}

	[Token(Token = "0x60001BF")]
	[Address(RVA = "0x26679C", Offset = "0x26679C", VA = "0x26679C", Slot = "9")]
	public override bool Exists(string path)
	{
		return default(bool);
	}

	[Token(Token = "0x60001C0")]
	[Address(RVA = "0x2667A8", Offset = "0x2667A8", VA = "0x2667A8", Slot = "10")]
	public override void Delete(string path)
	{
	}

	[Token(Token = "0x60001C1")]
	[Address(RVA = "0x2667B4", Offset = "0x2667B4", VA = "0x2667B4", Slot = "8")]
	public override string[] GetDirectoryFiles(string path)
	{
		return null;
	}
}
[Token(Token = "0x200004B")]
public class SaveManager : SaveManagerCommon
{
	[Token(Token = "0x17000039")]
	public override string ConfigDirectoryPath
	{
		[Token(Token = "0x60001C3")]
		[Address(RVA = "0xCAC4B8", Offset = "0xCAC4B8", VA = "0xCAC4B8", Slot = "4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700003A")]
	public override string GlobalConfigPath
	{
		[Token(Token = "0x60001C4")]
		[Address(RVA = "0xCAC538", Offset = "0xCAC538", VA = "0xCAC538", Slot = "5")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60001C2")]
	[Address(RVA = "0xCAC4A8", Offset = "0xCAC4A8", VA = "0xCAC4A8")]
	public SaveManager()
	{
	}

	[Token(Token = "0x60001C5")]
	[Address(RVA = "0xCAC608", Offset = "0xCAC608", VA = "0xCAC608", Slot = "6")]
	public override string GetSaveIDPath(int saveIDToSave)
	{
		return null;
	}

	[Token(Token = "0x60001C6")]
	[Address(RVA = "0xCAC75C", Offset = "0xCAC75C", VA = "0xCAC75C", Slot = "7")]
	public override Stream GetReadStream(string path)
	{
		return null;
	}

	[Token(Token = "0x60001C7")]
	[Address(RVA = "0xCAC78C", Offset = "0xCAC78C", VA = "0xCAC78C", Slot = "8")]
	public override Stream GetWriteStream(string path)
	{
		return null;
	}

	[Token(Token = "0x60001C8")]
	[Address(RVA = "0xCAC7BC", Offset = "0xCAC7BC", VA = "0xCAC7BC", Slot = "9")]
	public override bool Exists(string path)
	{
		return default(bool);
	}

	[Token(Token = "0x60001C9")]
	[Address(RVA = "0xCAC7C8", Offset = "0xCAC7C8", VA = "0xCAC7C8", Slot = "10")]
	public override void Delete(string path)
	{
	}
}
namespace UnityToolbag
{
	[Token(Token = "0x200004C")]
	public static class StandardPaths
	{
		[Token(Token = "0x200004D")]
		public static class Windows
		{
			[Token(Token = "0x60001D3")]
			[Address(RVA = "0x4195A4", Offset = "0x4195A4", VA = "0x4195A4")]
			public static string GetPath(string subdirectory)
			{
				return null;
			}

			[Token(Token = "0x60001D4")]
			[Address(RVA = "0x419694", Offset = "0x419694", VA = "0x419694")]
			public static string GetPath()
			{
				return null;
			}
		}

		[Token(Token = "0x200004E")]
		private static class OSX
		{
			[Token(Token = "0x60001D5")]
			[Address(RVA = "0x418AE4", Offset = "0x418AE4", VA = "0x418AE4")]
			public static string GetApplicationSupportPath(string subdirectory)
			{
				return null;
			}

			[Token(Token = "0x60001D6")]
			[Address(RVA = "0x419220", Offset = "0x419220", VA = "0x419220")]
			public static string GetLogsPath()
			{
				return null;
			}
		}

		[Token(Token = "0x200004F")]
		private static class Linux
		{
			[Token(Token = "0x60001D7")]
			[Address(RVA = "0x418BE0", Offset = "0x418BE0", VA = "0x418BE0")]
			public static string GetSaveDirectory()
			{
				return null;
			}

			[Token(Token = "0x60001D8")]
			[Address(RVA = "0x418F08", Offset = "0x418F08", VA = "0x418F08")]
			public static string GetConfigDirectory()
			{
				return null;
			}

			[Token(Token = "0x60001D9")]
			[Address(RVA = "0x41930C", Offset = "0x41930C", VA = "0x41930C")]
			public static string GetLogDirectory()
			{
				return null;
			}
		}

		[Token(Token = "0x40001B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1F1D34", Offset = "0x1F1D34")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0x1F1D34", Offset = "0x1F1D34")]
		private static bool <includeCompanyName>k__BackingField;

		[Token(Token = "0x1700003B")]
		public static bool includeCompanyName
		{
			[Token(Token = "0x60001CB")]
			[Address(RVA = "0x418770", Offset = "0x418770", VA = "0x418770")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1F1D68", Offset = "0x1F1D68")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60001CC")]
			[Address(RVA = "0x4186E0", Offset = "0x4186E0", VA = "0x4186E0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1F1D78", Offset = "0x1F1D78")]
			set
			{
			}
		}

		[Token(Token = "0x1700003C")]
		public static string saveDataDirectory
		{
			[Token(Token = "0x60001CD")]
			[Address(RVA = "0x4187FC", Offset = "0x4187FC", VA = "0x4187FC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700003D")]
		public static string configDirectory
		{
			[Token(Token = "0x60001CE")]
			[Address(RVA = "0x418D30", Offset = "0x418D30", VA = "0x418D30")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700003E")]
		public static string logDirectory
		{
			[Token(Token = "0x60001CF")]
			[Address(RVA = "0x419058", Offset = "0x419058", VA = "0x419058")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60001CA")]
		[Address(RVA = "0x4186D8", Offset = "0x4186D8", VA = "0x4186D8")]
		static StandardPaths()
		{
		}

		[Token(Token = "0x60001D0")]
		[Address(RVA = "0x419394", Offset = "0x419394", VA = "0x419394")]
		private static string AppendProductPath(string path)
		{
			return null;
		}

		[Token(Token = "0x60001D1")]
		[Address(RVA = "0x4189D4", Offset = "0x4189D4", VA = "0x4189D4")]
		private static string AppendDirectory(string path, string dir)
		{
			return null;
		}

		[Token(Token = "0x60001D2")]
		[Address(RVA = "0x4194AC", Offset = "0x4194AC", VA = "0x4194AC")]
		private static string CleanForPath(string str)
		{
			return null;
		}
	}
}
[Token(Token = "0x2000050")]
public class AkSoundEngine
{
	[Token(Token = "0x200028D")]
	public delegate ulong GameObjectHashFunction(GameObject gameObject);

	[Token(Token = "0x40001B2")]
	public const int AK_SIMD_ALIGNMENT = 16;

	[Token(Token = "0x40001B3")]
	public const int AK_BUFFER_ALIGNMENT = 16;

	[Token(Token = "0x40001B4")]
	public const int AK_MAX_PATH = 260;

	[Token(Token = "0x40001B5")]
	public const int AK_BANK_PLATFORM_DATA_ALIGNMENT = 16;

	[Token(Token = "0x40001B6")]
	public const uint AK_INVALID_PLUGINID = uint.MaxValue;

	[Token(Token = "0x40001B7")]
	public const ulong AK_INVALID_GAME_OBJECT = ulong.MaxValue;

	[Token(Token = "0x40001B8")]
	public const uint AK_INVALID_UNIQUE_ID = 0u;

	[Token(Token = "0x40001B9")]
	public const uint AK_INVALID_RTPC_ID = 0u;

	[Token(Token = "0x40001BA")]
	public const uint AK_INVALID_LISTENER_INDEX = uint.MaxValue;

	[Token(Token = "0x40001BB")]
	public const uint AK_INVALID_PLAYING_ID = 0u;

	[Token(Token = "0x40001BC")]
	public const uint AK_DEFAULT_SWITCH_STATE = 0u;

	[Token(Token = "0x40001BD")]
	public const int AK_INVALID_POOL_ID = -1;

	[Token(Token = "0x40001BE")]
	public const int AK_DEFAULT_POOL_ID = -1;

	[Token(Token = "0x40001BF")]
	public const uint AK_INVALID_AUX_ID = 0u;

	[Token(Token = "0x40001C0")]
	public const uint AK_INVALID_FILE_ID = uint.MaxValue;

	[Token(Token = "0x40001C1")]
	public const uint AK_INVALID_DEVICE_ID = uint.MaxValue;

	[Token(Token = "0x40001C2")]
	public const uint AK_INVALID_BANK_ID = 0u;

	[Token(Token = "0x40001C3")]
	public const uint AK_FALLBACK_ARGUMENTVALUE_ID = 0u;

	[Token(Token = "0x40001C4")]
	public const uint AK_INVALID_CHANNELMASK = 0u;

	[Token(Token = "0x40001C5")]
	public const uint AK_INVALID_OUTPUT_DEVICE_ID = 0u;

	[Token(Token = "0x40001C6")]
	public const uint AK_MIXER_FX_SLOT = uint.MaxValue;

	[Token(Token = "0x40001C7")]
	public const ulong AK_DEFAULT_LISTENER_OBJ = 0uL;

	[Token(Token = "0x40001C8")]
	public const uint AK_DEFAULT_PRIORITY = 50u;

	[Token(Token = "0x40001C9")]
	public const uint AK_MIN_PRIORITY = 0u;

	[Token(Token = "0x40001CA")]
	public const uint AK_MAX_PRIORITY = 100u;

	[Token(Token = "0x40001CB")]
	public const uint AK_DEFAULT_BANK_IO_PRIORITY = 50u;

	[Token(Token = "0x40001CC")]
	public const double AK_DEFAULT_BANK_THROUGHPUT = 1048.576;

	[Token(Token = "0x40001CD")]
	public const uint AKCOMPANYID_AUDIOKINETIC = 0u;

	[Token(Token = "0x40001CE")]
	public const uint AK_LISTENERS_MASK_ALL = uint.MaxValue;

	[Token(Token = "0x40001CF")]
	public const int NULL = 0;

	[Token(Token = "0x40001D0")]
	public const int AKCURVEINTERPOLATION_NUM_STORAGE_BIT = 5;

	[Token(Token = "0x40001D1")]
	public const int AK_MAX_LANGUAGE_NAME_SIZE = 32;

	[Token(Token = "0x40001D2")]
	public const int AKCOMPANYID_AUDIOKINETIC_EXTERNAL = 1;

	[Token(Token = "0x40001D3")]
	public const int AKCOMPANYID_MCDSP = 256;

	[Token(Token = "0x40001D4")]
	public const int AKCOMPANYID_WAVEARTS = 257;

	[Token(Token = "0x40001D5")]
	public const int AKCOMPANYID_PHONETICARTS = 258;

	[Token(Token = "0x40001D6")]
	public const int AKCOMPANYID_IZOTOPE = 259;

	[Token(Token = "0x40001D7")]
	public const int AKCOMPANYID_CRANKCASEAUDIO = 261;

	[Token(Token = "0x40001D8")]
	public const int AKCOMPANYID_IOSONO = 262;

	[Token(Token = "0x40001D9")]
	public const int AKCOMPANYID_AUROTECHNOLOGIES = 263;

	[Token(Token = "0x40001DA")]
	public const int AKCOMPANYID_DOLBY = 264;

	[Token(Token = "0x40001DB")]
	public const int AKCOMPANYID_TWOBIGEARS = 265;

	[Token(Token = "0x40001DC")]
	public const int AKCOMPANYID_OCULUS = 266;

	[Token(Token = "0x40001DD")]
	public const int AKCOMPANYID_BLUERIPPLESOUND = 267;

	[Token(Token = "0x40001DE")]
	public const int AKCOMPANYID_ENZIEN = 268;

	[Token(Token = "0x40001DF")]
	public const int AKCOMPANYID_KROTOS = 269;

	[Token(Token = "0x40001E0")]
	public const int AKCOMPANYID_NURULIZE = 270;

	[Token(Token = "0x40001E1")]
	public const int AKCOMPANYID_SUPERPOWERED = 271;

	[Token(Token = "0x40001E2")]
	public const int AKCOMPANYID_GOOGLE = 272;

	[Token(Token = "0x40001E3")]
	public const int AKCOMPANYID_VISISONICS = 277;

	[Token(Token = "0x40001E4")]
	public const int AKCODECID_BANK = 0;

	[Token(Token = "0x40001E5")]
	public const int AKCODECID_PCM = 1;

	[Token(Token = "0x40001E6")]
	public const int AKCODECID_ADPCM = 2;

	[Token(Token = "0x40001E7")]
	public const int AKCODECID_XMA = 3;

	[Token(Token = "0x40001E8")]
	public const int AKCODECID_VORBIS = 4;

	[Token(Token = "0x40001E9")]
	public const int AKCODECID_WIIADPCM = 5;

	[Token(Token = "0x40001EA")]
	public const int AKCODECID_PCMEX = 7;

	[Token(Token = "0x40001EB")]
	public const int AKCODECID_EXTERNAL_SOURCE = 8;

	[Token(Token = "0x40001EC")]
	public const int AKCODECID_XWMA = 9;

	[Token(Token = "0x40001ED")]
	public const int AKCODECID_AAC = 10;

	[Token(Token = "0x40001EE")]
	public const int AKCODECID_FILE_PACKAGE = 11;

	[Token(Token = "0x40001EF")]
	public const int AKCODECID_ATRAC9 = 12;

	[Token(Token = "0x40001F0")]
	public const int AKCODECID_VAG = 13;

	[Token(Token = "0x40001F1")]
	public const int AKCODECID_PROFILERCAPTURE = 14;

	[Token(Token = "0x40001F2")]
	public const int AKCODECID_ANALYSISFILE = 15;

	[Token(Token = "0x40001F3")]
	public const int AKCODECID_MIDI = 16;

	[Token(Token = "0x40001F4")]
	public const int AKCODECID_OPUSNX = 17;

	[Token(Token = "0x40001F5")]
	public const int AKCODECID_CAF = 18;

	[Token(Token = "0x40001F6")]
	public const int AKCODECID_AKOPUS = 19;

	[Token(Token = "0x40001F7")]
	public const int AKPLUGINID_METER = 129;

	[Token(Token = "0x40001F8")]
	public const int AKPLUGINID_RECORDER = 132;

	[Token(Token = "0x40001F9")]
	public const int AKEXTENSIONID_SPATIALAUDIO = 800;

	[Token(Token = "0x40001FA")]
	public const int AKEXTENSIONID_INTERACTIVEMUSIC = 801;

	[Token(Token = "0x40001FB")]
	public const int AK_WAVE_FORMAT_VAG = 65531;

	[Token(Token = "0x40001FC")]
	public const int AK_WAVE_FORMAT_AT9 = 65532;

	[Token(Token = "0x40001FD")]
	public const int AK_WAVE_FORMAT_VORBIS = 65535;

	[Token(Token = "0x40001FE")]
	public const int AK_WAVE_FORMAT_AAC = 43712;

	[Token(Token = "0x40001FF")]
	public const int AK_WAVE_FORMAT_OPUSNX = 12345;

	[Token(Token = "0x4000200")]
	public const int AK_WAVE_FORMAT_OPUS = 12352;

	[Token(Token = "0x4000201")]
	public const int WAVE_FORMAT_XMA2 = 358;

	[Token(Token = "0x4000202")]
	public const int AK_PANNER_NUM_STORAGE_BITS = 3;

	[Token(Token = "0x4000203")]
	public const int AK_POSSOURCE_NUM_STORAGE_BITS = 3;

	[Token(Token = "0x4000204")]
	public const int AK_SPAT_NUM_STORAGE_BITS = 3;

	[Token(Token = "0x4000205")]
	public const int AK_MAX_BITS_METERING_FLAGS = 5;

	[Token(Token = "0x4000206")]
	public const int AK_OS_STRUCT_ALIGN = 4;

	[Token(Token = "0x4000207")]
	public const int AK_64B_OS_STRUCT_ALIGN = 8;

	[Token(Token = "0x4000208")]
	public const bool AK_ASYNC_OPEN_DEFAULT = false;

	[Token(Token = "0x4000209")]
	public const int AK_COMM_DEFAULT_DISCOVERY_PORT = 24024;

	[Token(Token = "0x400020A")]
	public const int AK_MIDI_EVENT_TYPE_INVALID = 0;

	[Token(Token = "0x400020B")]
	public const int AK_MIDI_EVENT_TYPE_NOTE_OFF = 128;

	[Token(Token = "0x400020C")]
	public const int AK_MIDI_EVENT_TYPE_NOTE_ON = 144;

	[Token(Token = "0x400020D")]
	public const int AK_MIDI_EVENT_TYPE_NOTE_AFTERTOUCH = 160;

	[Token(Token = "0x400020E")]
	public const int AK_MIDI_EVENT_TYPE_CONTROLLER = 176;

	[Token(Token = "0x400020F")]
	public const int AK_MIDI_EVENT_TYPE_PROGRAM_CHANGE = 192;

	[Token(Token = "0x4000210")]
	public const int AK_MIDI_EVENT_TYPE_CHANNEL_AFTERTOUCH = 208;

	[Token(Token = "0x4000211")]
	public const int AK_MIDI_EVENT_TYPE_PITCH_BEND = 224;

	[Token(Token = "0x4000212")]
	public const int AK_MIDI_EVENT_TYPE_SYSEX = 240;

	[Token(Token = "0x4000213")]
	public const int AK_MIDI_EVENT_TYPE_ESCAPE = 247;

	[Token(Token = "0x4000214")]
	public const int AK_MIDI_EVENT_TYPE_META = 255;

	[Token(Token = "0x4000215")]
	public const int AK_MIDI_CC_BANK_SELECT_COARSE = 0;

	[Token(Token = "0x4000216")]
	public const int AK_MIDI_CC_MOD_WHEEL_COARSE = 1;

	[Token(Token = "0x4000217")]
	public const int AK_MIDI_CC_BREATH_CTRL_COARSE = 2;

	[Token(Token = "0x4000218")]
	public const int AK_MIDI_CC_CTRL_3_COARSE = 3;

	[Token(Token = "0x4000219")]
	public const int AK_MIDI_CC_FOOT_PEDAL_COARSE = 4;

	[Token(Token = "0x400021A")]
	public const int AK_MIDI_CC_PORTAMENTO_COARSE = 5;

	[Token(Token = "0x400021B")]
	public const int AK_MIDI_CC_DATA_ENTRY_COARSE = 6;

	[Token(Token = "0x400021C")]
	public const int AK_MIDI_CC_VOLUME_COARSE = 7;

	[Token(Token = "0x400021D")]
	public const int AK_MIDI_CC_BALANCE_COARSE = 8;

	[Token(Token = "0x400021E")]
	public const int AK_MIDI_CC_CTRL_9_COARSE = 9;

	[Token(Token = "0x400021F")]
	public const int AK_MIDI_CC_PAN_POSITION_COARSE = 10;

	[Token(Token = "0x4000220")]
	public const int AK_MIDI_CC_EXPRESSION_COARSE = 11;

	[Token(Token = "0x4000221")]
	public const int AK_MIDI_CC_EFFECT_CTRL_1_COARSE = 12;

	[Token(Token = "0x4000222")]
	public const int AK_MIDI_CC_EFFECT_CTRL_2_COARSE = 13;

	[Token(Token = "0x4000223")]
	public const int AK_MIDI_CC_CTRL_14_COARSE = 14;

	[Token(Token = "0x4000224")]
	public const int AK_MIDI_CC_CTRL_15_COARSE = 15;

	[Token(Token = "0x4000225")]
	public const int AK_MIDI_CC_GEN_SLIDER_1 = 16;

	[Token(Token = "0x4000226")]
	public const int AK_MIDI_CC_GEN_SLIDER_2 = 17;

	[Token(Token = "0x4000227")]
	public const int AK_MIDI_CC_GEN_SLIDER_3 = 18;

	[Token(Token = "0x4000228")]
	public const int AK_MIDI_CC_GEN_SLIDER_4 = 19;

	[Token(Token = "0x4000229")]
	public const int AK_MIDI_CC_CTRL_20_COARSE = 20;

	[Token(Token = "0x400022A")]
	public const int AK_MIDI_CC_CTRL_21_COARSE = 21;

	[Token(Token = "0x400022B")]
	public const int AK_MIDI_CC_CTRL_22_COARSE = 22;

	[Token(Token = "0x400022C")]
	public const int AK_MIDI_CC_CTRL_23_COARSE = 23;

	[Token(Token = "0x400022D")]
	public const int AK_MIDI_CC_CTRL_24_COARSE = 24;

	[Token(Token = "0x400022E")]
	public const int AK_MIDI_CC_CTRL_25_COARSE = 25;

	[Token(Token = "0x400022F")]
	public const int AK_MIDI_CC_CTRL_26_COARSE = 26;

	[Token(Token = "0x4000230")]
	public const int AK_MIDI_CC_CTRL_27_COARSE = 27;

	[Token(Token = "0x4000231")]
	public const int AK_MIDI_CC_CTRL_28_COARSE = 28;

	[Token(Token = "0x4000232")]
	public const int AK_MIDI_CC_CTRL_29_COARSE = 29;

	[Token(Token = "0x4000233")]
	public const int AK_MIDI_CC_CTRL_30_COARSE = 30;

	[Token(Token = "0x4000234")]
	public const int AK_MIDI_CC_CTRL_31_COARSE = 31;

	[Token(Token = "0x4000235")]
	public const int AK_MIDI_CC_BANK_SELECT_FINE = 32;

	[Token(Token = "0x4000236")]
	public const int AK_MIDI_CC_MOD_WHEEL_FINE = 33;

	[Token(Token = "0x4000237")]
	public const int AK_MIDI_CC_BREATH_CTRL_FINE = 34;

	[Token(Token = "0x4000238")]
	public const int AK_MIDI_CC_CTRL_3_FINE = 35;

	[Token(Token = "0x4000239")]
	public const int AK_MIDI_CC_FOOT_PEDAL_FINE = 36;

	[Token(Token = "0x400023A")]
	public const int AK_MIDI_CC_PORTAMENTO_FINE = 37;

	[Token(Token = "0x400023B")]
	public const int AK_MIDI_CC_DATA_ENTRY_FINE = 38;

	[Token(Token = "0x400023C")]
	public const int AK_MIDI_CC_VOLUME_FINE = 39;

	[Token(Token = "0x400023D")]
	public const int AK_MIDI_CC_BALANCE_FINE = 40;

	[Token(Token = "0x400023E")]
	public const int AK_MIDI_CC_CTRL_9_FINE = 41;

	[Token(Token = "0x400023F")]
	public const int AK_MIDI_CC_PAN_POSITION_FINE = 42;

	[Token(Token = "0x4000240")]
	public const int AK_MIDI_CC_EXPRESSION_FINE = 43;

	[Token(Token = "0x4000241")]
	public const int AK_MIDI_CC_EFFECT_CTRL_1_FINE = 44;

	[Token(Token = "0x4000242")]
	public const int AK_MIDI_CC_EFFECT_CTRL_2_FINE = 45;

	[Token(Token = "0x4000243")]
	public const int AK_MIDI_CC_CTRL_14_FINE = 46;

	[Token(Token = "0x4000244")]
	public const int AK_MIDI_CC_CTRL_15_FINE = 47;

	[Token(Token = "0x4000245")]
	public const int AK_MIDI_CC_CTRL_20_FINE = 52;

	[Token(Token = "0x4000246")]
	public const int AK_MIDI_CC_CTRL_21_FINE = 53;

	[Token(Token = "0x4000247")]
	public const int AK_MIDI_CC_CTRL_22_FINE = 54;

	[Token(Token = "0x4000248")]
	public const int AK_MIDI_CC_CTRL_23_FINE = 55;

	[Token(Token = "0x4000249")]
	public const int AK_MIDI_CC_CTRL_24_FINE = 56;

	[Token(Token = "0x400024A")]
	public const int AK_MIDI_CC_CTRL_25_FINE = 57;

	[Token(Token = "0x400024B")]
	public const int AK_MIDI_CC_CTRL_26_FINE = 58;

	[Token(Token = "0x400024C")]
	public const int AK_MIDI_CC_CTRL_27_FINE = 59;

	[Token(Token = "0x400024D")]
	public const int AK_MIDI_CC_CTRL_28_FINE = 60;

	[Token(Token = "0x400024E")]
	public const int AK_MIDI_CC_CTRL_29_FINE = 61;

	[Token(Token = "0x400024F")]
	public const int AK_MIDI_CC_CTRL_30_FINE = 62;

	[Token(Token = "0x4000250")]
	public const int AK_MIDI_CC_CTRL_31_FINE = 63;

	[Token(Token = "0x4000251")]
	public const int AK_MIDI_CC_HOLD_PEDAL = 64;

	[Token(Token = "0x4000252")]
	public const int AK_MIDI_CC_PORTAMENTO_ON_OFF = 65;

	[Token(Token = "0x4000253")]
	public const int AK_MIDI_CC_SUSTENUTO_PEDAL = 66;

	[Token(Token = "0x4000254")]
	public const int AK_MIDI_CC_SOFT_PEDAL = 67;

	[Token(Token = "0x4000255")]
	public const int AK_MIDI_CC_LEGATO_PEDAL = 68;

	[Token(Token = "0x4000256")]
	public const int AK_MIDI_CC_HOLD_PEDAL_2 = 69;

	[Token(Token = "0x4000257")]
	public const int AK_MIDI_CC_SOUND_VARIATION = 70;

	[Token(Token = "0x4000258")]
	public const int AK_MIDI_CC_SOUND_TIMBRE = 71;

	[Token(Token = "0x4000259")]
	public const int AK_MIDI_CC_SOUND_RELEASE_TIME = 72;

	[Token(Token = "0x400025A")]
	public const int AK_MIDI_CC_SOUND_ATTACK_TIME = 73;

	[Token(Token = "0x400025B")]
	public const int AK_MIDI_CC_SOUND_BRIGHTNESS = 74;

	[Token(Token = "0x400025C")]
	public const int AK_MIDI_CC_SOUND_CTRL_6 = 75;

	[Token(Token = "0x400025D")]
	public const int AK_MIDI_CC_SOUND_CTRL_7 = 76;

	[Token(Token = "0x400025E")]
	public const int AK_MIDI_CC_SOUND_CTRL_8 = 77;

	[Token(Token = "0x400025F")]
	public const int AK_MIDI_CC_SOUND_CTRL_9 = 78;

	[Token(Token = "0x4000260")]
	public const int AK_MIDI_CC_SOUND_CTRL_10 = 79;

	[Token(Token = "0x4000261")]
	public const int AK_MIDI_CC_GENERAL_BUTTON_1 = 80;

	[Token(Token = "0x4000262")]
	public const int AK_MIDI_CC_GENERAL_BUTTON_2 = 81;

	[Token(Token = "0x4000263")]
	public const int AK_MIDI_CC_GENERAL_BUTTON_3 = 82;

	[Token(Token = "0x4000264")]
	public const int AK_MIDI_CC_GENERAL_BUTTON_4 = 83;

	[Token(Token = "0x4000265")]
	public const int AK_MIDI_CC_REVERB_LEVEL = 91;

	[Token(Token = "0x4000266")]
	public const int AK_MIDI_CC_TREMOLO_LEVEL = 92;

	[Token(Token = "0x4000267")]
	public const int AK_MIDI_CC_CHORUS_LEVEL = 93;

	[Token(Token = "0x4000268")]
	public const int AK_MIDI_CC_CELESTE_LEVEL = 94;

	[Token(Token = "0x4000269")]
	public const int AK_MIDI_CC_PHASER_LEVEL = 95;

	[Token(Token = "0x400026A")]
	public const int AK_MIDI_CC_DATA_BUTTON_P1 = 96;

	[Token(Token = "0x400026B")]
	public const int AK_MIDI_CC_DATA_BUTTON_M1 = 97;

	[Token(Token = "0x400026C")]
	public const int AK_MIDI_CC_NON_REGISTER_COARSE = 98;

	[Token(Token = "0x400026D")]
	public const int AK_MIDI_CC_NON_REGISTER_FINE = 99;

	[Token(Token = "0x400026E")]
	public const int AK_MIDI_CC_ALL_SOUND_OFF = 120;

	[Token(Token = "0x400026F")]
	public const int AK_MIDI_CC_ALL_CONTROLLERS_OFF = 121;

	[Token(Token = "0x4000270")]
	public const int AK_MIDI_CC_LOCAL_KEYBOARD = 122;

	[Token(Token = "0x4000271")]
	public const int AK_MIDI_CC_ALL_NOTES_OFF = 123;

	[Token(Token = "0x4000272")]
	public const int AK_MIDI_CC_OMNI_MODE_OFF = 124;

	[Token(Token = "0x4000273")]
	public const int AK_MIDI_CC_OMNI_MODE_ON = 125;

	[Token(Token = "0x4000274")]
	public const int AK_MIDI_CC_OMNI_MONOPHONIC_ON = 126;

	[Token(Token = "0x4000275")]
	public const int AK_MIDI_CC_OMNI_POLYPHONIC_ON = 127;

	[Token(Token = "0x4000276")]
	public const int AK_SPEAKER_FRONT_LEFT = 1;

	[Token(Token = "0x4000277")]
	public const int AK_SPEAKER_FRONT_RIGHT = 2;

	[Token(Token = "0x4000278")]
	public const int AK_SPEAKER_FRONT_CENTER = 4;

	[Token(Token = "0x4000279")]
	public const int AK_SPEAKER_LOW_FREQUENCY = 8;

	[Token(Token = "0x400027A")]
	public const int AK_SPEAKER_BACK_LEFT = 16;

	[Token(Token = "0x400027B")]
	public const int AK_SPEAKER_BACK_RIGHT = 32;

	[Token(Token = "0x400027C")]
	public const int AK_SPEAKER_BACK_CENTER = 256;

	[Token(Token = "0x400027D")]
	public const int AK_SPEAKER_SIDE_LEFT = 512;

	[Token(Token = "0x400027E")]
	public const int AK_SPEAKER_SIDE_RIGHT = 1024;

	[Token(Token = "0x400027F")]
	public const int AK_SPEAKER_TOP = 2048;

	[Token(Token = "0x4000280")]
	public const int AK_SPEAKER_HEIGHT_FRONT_LEFT = 4096;

	[Token(Token = "0x4000281")]
	public const int AK_SPEAKER_HEIGHT_FRONT_CENTER = 8192;

	[Token(Token = "0x4000282")]
	public const int AK_SPEAKER_HEIGHT_FRONT_RIGHT = 16384;

	[Token(Token = "0x4000283")]
	public const int AK_SPEAKER_HEIGHT_BACK_LEFT = 32768;

	[Token(Token = "0x4000284")]
	public const int AK_SPEAKER_HEIGHT_BACK_CENTER = 65536;

	[Token(Token = "0x4000285")]
	public const int AK_SPEAKER_HEIGHT_BACK_RIGHT = 131072;

	[Token(Token = "0x4000286")]
	public const int AK_SPEAKER_SETUP_MONO = 4;

	[Token(Token = "0x4000287")]
	public const int AK_SPEAKER_SETUP_0POINT1 = 8;

	[Token(Token = "0x4000288")]
	public const int AK_SPEAKER_SETUP_1POINT1 = 12;

	[Token(Token = "0x4000289")]
	public const int AK_SPEAKER_SETUP_STEREO = 3;

	[Token(Token = "0x400028A")]
	public const int AK_SPEAKER_SETUP_2POINT1 = 11;

	[Token(Token = "0x400028B")]
	public const int AK_SPEAKER_SETUP_3STEREO = 7;

	[Token(Token = "0x400028C")]
	public const int AK_SPEAKER_SETUP_3POINT1 = 15;

	[Token(Token = "0x400028D")]
	public const int AK_SPEAKER_SETUP_4 = 1539;

	[Token(Token = "0x400028E")]
	public const int AK_SPEAKER_SETUP_4POINT1 = 1547;

	[Token(Token = "0x400028F")]
	public const int AK_SPEAKER_SETUP_5 = 1543;

	[Token(Token = "0x4000290")]
	public const int AK_SPEAKER_SETUP_5POINT1 = 1551;

	[Token(Token = "0x4000291")]
	public const int AK_SPEAKER_SETUP_6 = 1587;

	[Token(Token = "0x4000292")]
	public const int AK_SPEAKER_SETUP_6POINT1 = 1595;

	[Token(Token = "0x4000293")]
	public const int AK_SPEAKER_SETUP_7 = 1591;

	[Token(Token = "0x4000294")]
	public const int AK_SPEAKER_SETUP_7POINT1 = 1599;

	[Token(Token = "0x4000295")]
	public const int AK_SPEAKER_SETUP_SURROUND = 259;

	[Token(Token = "0x4000296")]
	public const int AK_SPEAKER_SETUP_DPL2 = 1539;

	[Token(Token = "0x4000297")]
	public const int AK_SPEAKER_SETUP_HEIGHT_4 = 184320;

	[Token(Token = "0x4000298")]
	public const int AK_SPEAKER_SETUP_HEIGHT_5 = 192512;

	[Token(Token = "0x4000299")]
	public const int AK_SPEAKER_SETUP_HEIGHT_ALL = 258048;

	[Token(Token = "0x400029A")]
	public const int AK_SPEAKER_SETUP_AURO_222 = 22019;

	[Token(Token = "0x400029B")]
	public const int AK_SPEAKER_SETUP_AURO_8 = 185859;

	[Token(Token = "0x400029C")]
	public const int AK_SPEAKER_SETUP_AURO_9 = 185863;

	[Token(Token = "0x400029D")]
	public const int AK_SPEAKER_SETUP_AURO_9POINT1 = 185871;

	[Token(Token = "0x400029E")]
	public const int AK_SPEAKER_SETUP_AURO_10 = 187911;

	[Token(Token = "0x400029F")]
	public const int AK_SPEAKER_SETUP_AURO_10POINT1 = 187919;

	[Token(Token = "0x40002A0")]
	public const int AK_SPEAKER_SETUP_AURO_11 = 196103;

	[Token(Token = "0x40002A1")]
	public const int AK_SPEAKER_SETUP_AURO_11POINT1 = 196111;

	[Token(Token = "0x40002A2")]
	public const int AK_SPEAKER_SETUP_AURO_11_740 = 185911;

	[Token(Token = "0x40002A3")]
	public const int AK_SPEAKER_SETUP_AURO_11POINT1_740 = 185919;

	[Token(Token = "0x40002A4")]
	public const int AK_SPEAKER_SETUP_AURO_13_751 = 196151;

	[Token(Token = "0x40002A5")]
	public const int AK_SPEAKER_SETUP_AURO_13POINT1_751 = 196159;

	[Token(Token = "0x40002A6")]
	public const int AK_SPEAKER_SETUP_DOLBY_5_0_2 = 22023;

	[Token(Token = "0x40002A7")]
	public const int AK_SPEAKER_SETUP_DOLBY_5_1_2 = 22031;

	[Token(Token = "0x40002A8")]
	public const int AK_SPEAKER_SETUP_DOLBY_6_0_2 = 22067;

	[Token(Token = "0x40002A9")]
	public const int AK_SPEAKER_SETUP_DOLBY_6_1_2 = 22075;

	[Token(Token = "0x40002AA")]
	public const int AK_SPEAKER_SETUP_DOLBY_6_0_4 = 185907;

	[Token(Token = "0x40002AB")]
	public const int AK_SPEAKER_SETUP_DOLBY_6_1_4 = 185915;

	[Token(Token = "0x40002AC")]
	public const int AK_SPEAKER_SETUP_DOLBY_7_0_2 = 22071;

	[Token(Token = "0x40002AD")]
	public const int AK_SPEAKER_SETUP_DOLBY_7_1_2 = 22079;

	[Token(Token = "0x40002AE")]
	public const int AK_SPEAKER_SETUP_DOLBY_7_0_4 = 185911;

	[Token(Token = "0x40002AF")]
	public const int AK_SPEAKER_SETUP_DOLBY_7_1_4 = 185919;

	[Token(Token = "0x40002B0")]
	public const int AK_SPEAKER_SETUP_ALL_SPEAKERS = 261951;

	[Token(Token = "0x40002B1")]
	public const int AK_IDX_SETUP_FRONT_LEFT = 0;

	[Token(Token = "0x40002B2")]
	public const int AK_IDX_SETUP_FRONT_RIGHT = 1;

	[Token(Token = "0x40002B3")]
	public const int AK_IDX_SETUP_CENTER = 2;

	[Token(Token = "0x40002B4")]
	public const int AK_IDX_SETUP_NOCENTER_BACK_LEFT = 2;

	[Token(Token = "0x40002B5")]
	public const int AK_IDX_SETUP_NOCENTER_BACK_RIGHT = 3;

	[Token(Token = "0x40002B6")]
	public const int AK_IDX_SETUP_NOCENTER_SIDE_LEFT = 4;

	[Token(Token = "0x40002B7")]
	public const int AK_IDX_SETUP_NOCENTER_SIDE_RIGHT = 5;

	[Token(Token = "0x40002B8")]
	public const int AK_IDX_SETUP_WITHCENTER_BACK_LEFT = 3;

	[Token(Token = "0x40002B9")]
	public const int AK_IDX_SETUP_WITHCENTER_BACK_RIGHT = 4;

	[Token(Token = "0x40002BA")]
	public const int AK_IDX_SETUP_WITHCENTER_SIDE_LEFT = 5;

	[Token(Token = "0x40002BB")]
	public const int AK_IDX_SETUP_WITHCENTER_SIDE_RIGHT = 6;

	[Token(Token = "0x40002BC")]
	public const int AK_IDX_SETUP_0_LFE = 0;

	[Token(Token = "0x40002BD")]
	public const int AK_IDX_SETUP_1_CENTER = 0;

	[Token(Token = "0x40002BE")]
	public const int AK_IDX_SETUP_1_LFE = 1;

	[Token(Token = "0x40002BF")]
	public const int AK_IDX_SETUP_2_LEFT = 0;

	[Token(Token = "0x40002C0")]
	public const int AK_IDX_SETUP_2_RIGHT = 1;

	[Token(Token = "0x40002C1")]
	public const int AK_IDX_SETUP_2_LFE = 2;

	[Token(Token = "0x40002C2")]
	public const int AK_IDX_SETUP_3_LEFT = 0;

	[Token(Token = "0x40002C3")]
	public const int AK_IDX_SETUP_3_RIGHT = 1;

	[Token(Token = "0x40002C4")]
	public const int AK_IDX_SETUP_3_CENTER = 2;

	[Token(Token = "0x40002C5")]
	public const int AK_IDX_SETUP_3_LFE = 3;

	[Token(Token = "0x40002C6")]
	public const int AK_IDX_SETUP_4_FRONTLEFT = 0;

	[Token(Token = "0x40002C7")]
	public const int AK_IDX_SETUP_4_FRONTRIGHT = 1;

	[Token(Token = "0x40002C8")]
	public const int AK_IDX_SETUP_4_REARLEFT = 2;

	[Token(Token = "0x40002C9")]
	public const int AK_IDX_SETUP_4_REARRIGHT = 3;

	[Token(Token = "0x40002CA")]
	public const int AK_IDX_SETUP_4_LFE = 4;

	[Token(Token = "0x40002CB")]
	public const int AK_IDX_SETUP_5_FRONTLEFT = 0;

	[Token(Token = "0x40002CC")]
	public const int AK_IDX_SETUP_5_FRONTRIGHT = 1;

	[Token(Token = "0x40002CD")]
	public const int AK_IDX_SETUP_5_CENTER = 2;

	[Token(Token = "0x40002CE")]
	public const int AK_IDX_SETUP_5_REARLEFT = 3;

	[Token(Token = "0x40002CF")]
	public const int AK_IDX_SETUP_5_REARRIGHT = 4;

	[Token(Token = "0x40002D0")]
	public const int AK_IDX_SETUP_5_LFE = 5;

	[Token(Token = "0x40002D1")]
	public const int AK_IDX_SETUP_6_FRONTLEFT = 0;

	[Token(Token = "0x40002D2")]
	public const int AK_IDX_SETUP_6_FRONTRIGHT = 1;

	[Token(Token = "0x40002D3")]
	public const int AK_IDX_SETUP_6_REARLEFT = 2;

	[Token(Token = "0x40002D4")]
	public const int AK_IDX_SETUP_6_REARRIGHT = 3;

	[Token(Token = "0x40002D5")]
	public const int AK_IDX_SETUP_6_SIDELEFT = 4;

	[Token(Token = "0x40002D6")]
	public const int AK_IDX_SETUP_6_SIDERIGHT = 5;

	[Token(Token = "0x40002D7")]
	public const int AK_IDX_SETUP_6_LFE = 6;

	[Token(Token = "0x40002D8")]
	public const int AK_IDX_SETUP_7_FRONTLEFT = 0;

	[Token(Token = "0x40002D9")]
	public const int AK_IDX_SETUP_7_FRONTRIGHT = 1;

	[Token(Token = "0x40002DA")]
	public const int AK_IDX_SETUP_7_CENTER = 2;

	[Token(Token = "0x40002DB")]
	public const int AK_IDX_SETUP_7_REARLEFT = 3;

	[Token(Token = "0x40002DC")]
	public const int AK_IDX_SETUP_7_REARRIGHT = 4;

	[Token(Token = "0x40002DD")]
	public const int AK_IDX_SETUP_7_SIDELEFT = 5;

	[Token(Token = "0x40002DE")]
	public const int AK_IDX_SETUP_7_SIDERIGHT = 6;

	[Token(Token = "0x40002DF")]
	public const int AK_IDX_SETUP_7_LFE = 7;

	[Token(Token = "0x40002E0")]
	public const int AK_SPEAKER_SETUP_0_1 = 8;

	[Token(Token = "0x40002E1")]
	public const int AK_SPEAKER_SETUP_1_0_CENTER = 4;

	[Token(Token = "0x40002E2")]
	public const int AK_SPEAKER_SETUP_1_1_CENTER = 12;

	[Token(Token = "0x40002E3")]
	public const int AK_SPEAKER_SETUP_2_0 = 3;

	[Token(Token = "0x40002E4")]
	public const int AK_SPEAKER_SETUP_2_1 = 11;

	[Token(Token = "0x40002E5")]
	public const int AK_SPEAKER_SETUP_3_0 = 7;

	[Token(Token = "0x40002E6")]
	public const int AK_SPEAKER_SETUP_3_1 = 15;

	[Token(Token = "0x40002E7")]
	public const int AK_SPEAKER_SETUP_FRONT = 7;

	[Token(Token = "0x40002E8")]
	public const int AK_SPEAKER_SETUP_4_0 = 1539;

	[Token(Token = "0x40002E9")]
	public const int AK_SPEAKER_SETUP_4_1 = 1547;

	[Token(Token = "0x40002EA")]
	public const int AK_SPEAKER_SETUP_5_0 = 1543;

	[Token(Token = "0x40002EB")]
	public const int AK_SPEAKER_SETUP_5_1 = 1551;

	[Token(Token = "0x40002EC")]
	public const int AK_SPEAKER_SETUP_6_0 = 1587;

	[Token(Token = "0x40002ED")]
	public const int AK_SPEAKER_SETUP_6_1 = 1595;

	[Token(Token = "0x40002EE")]
	public const int AK_SPEAKER_SETUP_7_0 = 1591;

	[Token(Token = "0x40002EF")]
	public const int AK_SPEAKER_SETUP_7_1 = 1599;

	[Token(Token = "0x40002F0")]
	public const int AK_SPEAKER_SETUP_DEFAULT_PLANE = 1599;

	[Token(Token = "0x40002F1")]
	public const int AK_SUPPORTED_STANDARD_CHANNEL_MASK = 261951;

	[Token(Token = "0x40002F2")]
	public const int AK_STANDARD_MAX_NUM_CHANNELS = 8;

	[Token(Token = "0x40002F3")]
	public const int AK_NUM_SAMPLED_SPHERE_POINTS = 32;

	[Token(Token = "0x40002F4")]
	public const int AK_MAX_NUM_TEXTURE = 4;

	[Token(Token = "0x40002F5")]
	public const int AK_MAX_REFLECT_ORDER = 4;

	[Token(Token = "0x40002F6")]
	public const int AK_MAX_REFLECTION_PATH_LENGTH = 6;

	[Token(Token = "0x40002F7")]
	public const int AK_MAX_SOUND_PROPAGATION_DEPTH = 8;

	[Token(Token = "0x40002F8")]
	public const double AK_DEFAULT_DIFFR_SHADOW_DEGREES = 30.0;

	[Token(Token = "0x40002F9")]
	public const double AK_DEFAULT_DIFFR_SHADOW_ATTEN = 2.0;

	[Token(Token = "0x40002FA")]
	public const double AK_SA_EPSILON = 0.001;

	[Token(Token = "0x40002FB")]
	public const double AK_SA_PLANARITY_EPSILON = 0.01;

	[Token(Token = "0x40002FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static GameObjectHashFunction gameObjectHash;

	[Token(Token = "0x40002FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1F1D88", Offset = "0x1F1D88")]
	private static GameObjectHashFunction <>f__mg$cache0;

	[Token(Token = "0x40002FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1F1D98", Offset = "0x1F1D98")]
	private static GameObjectHashFunction <>f__mg$cache1;

	[Token(Token = "0x1700003F")]
	public static uint AK_SOUNDBANK_VERSION
	{
		[Token(Token = "0x60001DE")]
		[Address(RVA = "0x292438", Offset = "0x292438", VA = "0x292438")]
		get
		{
			return default(uint);
		}
	}

	[Token(Token = "0x17000040")]
	public static ushort AK_INT
	{
		[Token(Token = "0x60001DF")]
		[Address(RVA = "0x292560", Offset = "0x292560", VA = "0x292560")]
		get
		{
			return default(ushort);
		}
	}

	[Token(Token = "0x17000041")]
	public static ushort AK_FLOAT
	{
		[Token(Token = "0x60001E0")]
		[Address(RVA = "0x292688", Offset = "0x292688", VA = "0x292688")]
		get
		{
			return default(ushort);
		}
	}

	[Token(Token = "0x17000042")]
	public static byte AK_INTERLEAVED
	{
		[Token(Token = "0x60001E1")]
		[Address(RVA = "0x2927B0", Offset = "0x2927B0", VA = "0x2927B0")]
		get
		{
			return default(byte);
		}
	}

	[Token(Token = "0x17000043")]
	public static byte AK_NONINTERLEAVED
	{
		[Token(Token = "0x60001E2")]
		[Address(RVA = "0x2928D8", Offset = "0x2928D8", VA = "0x2928D8")]
		get
		{
			return default(byte);
		}
	}

	[Token(Token = "0x17000044")]
	public static uint AK_LE_NATIVE_BITSPERSAMPLE
	{
		[Token(Token = "0x60001E3")]
		[Address(RVA = "0x292A00", Offset = "0x292A00", VA = "0x292A00")]
		get
		{
			return default(uint);
		}
	}

	[Token(Token = "0x17000045")]
	public static uint AK_LE_NATIVE_SAMPLETYPE
	{
		[Token(Token = "0x60001E4")]
		[Address(RVA = "0x292B28", Offset = "0x292B28", VA = "0x292B28")]
		get
		{
			return default(uint);
		}
	}

	[Token(Token = "0x17000046")]
	public static uint AK_LE_NATIVE_INTERLEAVE
	{
		[Token(Token = "0x60001E5")]
		[Address(RVA = "0x292C50", Offset = "0x292C50", VA = "0x292C50")]
		get
		{
			return default(uint);
		}
	}

	[Token(Token = "0x17000047")]
	public static byte AK_INVALID_MIDI_CHANNEL
	{
		[Token(Token = "0x60002B5")]
		[Address(RVA = "0x2A8130", Offset = "0x2A8130", VA = "0x2A8130")]
		get
		{
			return default(byte);
		}
	}

	[Token(Token = "0x17000048")]
	public static byte AK_INVALID_MIDI_NOTE
	{
		[Token(Token = "0x60002B6")]
		[Address(RVA = "0x2A8258", Offset = "0x2A8258", VA = "0x2A8258")]
		get
		{
			return default(byte);
		}
	}

	[Token(Token = "0x17000049")]
	public static float kDefaultMaxPathLength
	{
		[Token(Token = "0x60002EA")]
		[Address(RVA = "0x2AD280", Offset = "0x2AD280", VA = "0x2AD280")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x1700004A")]
	public static float kMaxDiffraction
	{
		[Token(Token = "0x60002EB")]
		[Address(RVA = "0x2AD3A8", Offset = "0x2AD3A8", VA = "0x2AD3A8")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x1700004B")]
	public static int g_SpatialAudioPoolId
	{
		[Token(Token = "0x60002ED")]
		[Address(RVA = "0x2AD610", Offset = "0x2AD610", VA = "0x2AD610")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60002EC")]
		[Address(RVA = "0x2AD4D0", Offset = "0x2AD4D0", VA = "0x2AD4D0")]
		set
		{
		}
	}

	[Token(Token = "0x1700004C")]
	public static GameObjectHashFunction GameObjectHash
	{
		[Token(Token = "0x600032B")]
		[Address(RVA = "0x2B2F2C", Offset = "0x2B2F2C", VA = "0x2B2F2C")]
		set
		{
		}
	}

	[Token(Token = "0x60001DA")]
	[Address(RVA = "0x291C98", Offset = "0x291C98", VA = "0x291C98")]
	public AkSoundEngine()
	{
	}

	[Token(Token = "0x60001DB")]
	[Address(RVA = "0x291CA0", Offset = "0x291CA0", VA = "0x291CA0")]
	public static uint _PostEvent(uint in_eventID, GameObject in_gameObjectID)
	{
		return default(uint);
	}

	[Token(Token = "0x60001DC")]
	[Address(RVA = "0x291F38", Offset = "0x291F38", VA = "0x291F38")]
	public static uint _PostEvent(string in_pszEventName, GameObject in_gameObjectID)
	{
		return default(uint);
	}

	[Token(Token = "0x60001DD")]
	[Address(RVA = "0x2921D0", Offset = "0x2921D0", VA = "0x2921D0")]
	public static AKRESULT _ExecuteActionOnEvent(uint in_eventID, AkActionOnEventType in_ActionType, GameObject in_gameObjectID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60001E6")]
	[Address(RVA = "0x292D78", Offset = "0x292D78", VA = "0x292D78")]
	public static uint DynamicSequenceOpen(GameObject in_gameObjectID, uint in_uFlags, AkCallbackManager.EventCallback in_pfnCallback, object in_pCookie, AkDynamicSequenceType in_eDynamicSequenceType)
	{
		return default(uint);
	}

	[Token(Token = "0x60001E7")]
	[Address(RVA = "0x292FFC", Offset = "0x292FFC", VA = "0x292FFC")]
	public static uint DynamicSequenceOpen(GameObject in_gameObjectID, uint in_uFlags, AkCallbackManager.EventCallback in_pfnCallback, object in_pCookie)
	{
		return default(uint);
	}

	[Token(Token = "0x60001E8")]
	[Address(RVA = "0x293270", Offset = "0x293270", VA = "0x293270")]
	public static uint DynamicSequenceOpen(GameObject in_gameObjectID, uint in_uFlags)
	{
		return default(uint);
	}

	[Token(Token = "0x60001E9")]
	[Address(RVA = "0x293450", Offset = "0x293450", VA = "0x293450")]
	public static uint DynamicSequenceOpen(GameObject in_gameObjectID)
	{
		return default(uint);
	}

	[Token(Token = "0x60001EA")]
	[Address(RVA = "0x293624", Offset = "0x293624", VA = "0x293624")]
	public static AKRESULT DynamicSequenceClose(uint in_playingID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60001EB")]
	[Address(RVA = "0x293764", Offset = "0x293764", VA = "0x293764")]
	public static AKRESULT DynamicSequencePlay(uint in_playingID, int in_uTransitionDuration, AkCurveInterpolation in_eFadeCurve)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60001EC")]
	[Address(RVA = "0x2938CC", Offset = "0x2938CC", VA = "0x2938CC")]
	public static AKRESULT DynamicSequencePlay(uint in_playingID, int in_uTransitionDuration)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60001ED")]
	[Address(RVA = "0x293A1C", Offset = "0x293A1C", VA = "0x293A1C")]
	public static AKRESULT DynamicSequencePlay(uint in_playingID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60001EE")]
	[Address(RVA = "0x293B5C", Offset = "0x293B5C", VA = "0x293B5C")]
	public static AKRESULT DynamicSequencePause(uint in_playingID, int in_uTransitionDuration, AkCurveInterpolation in_eFadeCurve)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60001EF")]
	[Address(RVA = "0x293CC4", Offset = "0x293CC4", VA = "0x293CC4")]
	public static AKRESULT DynamicSequencePause(uint in_playingID, int in_uTransitionDuration)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60001F0")]
	[Address(RVA = "0x293E14", Offset = "0x293E14", VA = "0x293E14")]
	public static AKRESULT DynamicSequencePause(uint in_playingID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60001F1")]
	[Address(RVA = "0x293F54", Offset = "0x293F54", VA = "0x293F54")]
	public static AKRESULT DynamicSequenceResume(uint in_playingID, int in_uTransitionDuration, AkCurveInterpolation in_eFadeCurve)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60001F2")]
	[Address(RVA = "0x2940BC", Offset = "0x2940BC", VA = "0x2940BC")]
	public static AKRESULT DynamicSequenceResume(uint in_playingID, int in_uTransitionDuration)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60001F3")]
	[Address(RVA = "0x29420C", Offset = "0x29420C", VA = "0x29420C")]
	public static AKRESULT DynamicSequenceResume(uint in_playingID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60001F4")]
	[Address(RVA = "0x29434C", Offset = "0x29434C", VA = "0x29434C")]
	public static AKRESULT DynamicSequenceStop(uint in_playingID, int in_uTransitionDuration, AkCurveInterpolation in_eFadeCurve)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60001F5")]
	[Address(RVA = "0x2944B4", Offset = "0x2944B4", VA = "0x2944B4")]
	public static AKRESULT DynamicSequenceStop(uint in_playingID, int in_uTransitionDuration)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60001F6")]
	[Address(RVA = "0x294604", Offset = "0x294604", VA = "0x294604")]
	public static AKRESULT DynamicSequenceStop(uint in_playingID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60001F7")]
	[Address(RVA = "0x294744", Offset = "0x294744", VA = "0x294744")]
	public static AKRESULT DynamicSequenceBreak(uint in_playingID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60001F8")]
	[Address(RVA = "0x294884", Offset = "0x294884", VA = "0x294884")]
	public static AKRESULT DynamicSequenceGetPauseTimes(uint in_playingID, out uint out_uTime, out uint out_uDuration)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60001F9")]
	[Address(RVA = "0x294A08", Offset = "0x294A08", VA = "0x294A08")]
	public static AkPlaylist DynamicSequenceLockPlaylist(uint in_playingID)
	{
		return null;
	}

	[Token(Token = "0x60001FA")]
	[Address(RVA = "0x294B94", Offset = "0x294B94", VA = "0x294B94")]
	public static AKRESULT DynamicSequenceUnlockPlaylist(uint in_playingID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60001FB")]
	[Address(RVA = "0x294CD4", Offset = "0x294CD4", VA = "0x294CD4")]
	public static bool IsInitialized()
	{
		return default(bool);
	}

	[Token(Token = "0x60001FC")]
	[Address(RVA = "0x294E04", Offset = "0x294E04", VA = "0x294E04")]
	public static AKRESULT GetAudioSettings(AkAudioSettings out_audioSettings)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60001FD")]
	[Address(RVA = "0x294F58", Offset = "0x294F58", VA = "0x294F58")]
	public static AkChannelConfig GetSpeakerConfiguration(ulong in_idOutput)
	{
		return null;
	}

	[Token(Token = "0x60001FE")]
	[Address(RVA = "0x2950E0", Offset = "0x2950E0", VA = "0x2950E0")]
	public static AkChannelConfig GetSpeakerConfiguration()
	{
		return null;
	}

	[Token(Token = "0x60001FF")]
	[Address(RVA = "0x295238", Offset = "0x295238", VA = "0x295238")]
	public static AKRESULT GetPanningRule(out int out_ePanningRule, ulong in_idOutput)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000200")]
	[Address(RVA = "0x2953B0", Offset = "0x2953B0", VA = "0x2953B0")]
	public static AKRESULT GetPanningRule(out int out_ePanningRule)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000201")]
	[Address(RVA = "0x295500", Offset = "0x295500", VA = "0x295500")]
	public static AKRESULT SetPanningRule(AkPanningRule in_ePanningRule, ulong in_idOutput)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000202")]
	[Address(RVA = "0x295668", Offset = "0x295668", VA = "0x295668")]
	public static AKRESULT SetPanningRule(AkPanningRule in_ePanningRule)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000203")]
	[Address(RVA = "0x2957A8", Offset = "0x2957A8", VA = "0x2957A8")]
	public static AKRESULT GetSpeakerAngles(float[] io_pfSpeakerAngles, ref uint io_uNumAngles, out float out_fHeightAngle, ulong in_idOutput)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000204")]
	[Address(RVA = "0x295940", Offset = "0x295940", VA = "0x295940")]
	public static AKRESULT GetSpeakerAngles(float[] io_pfSpeakerAngles, ref uint io_uNumAngles, out float out_fHeightAngle)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000205")]
	[Address(RVA = "0x295AC0", Offset = "0x295AC0", VA = "0x295AC0")]
	public static AKRESULT SetSpeakerAngles(float[] in_pfSpeakerAngles, uint in_uNumAngles, float in_fHeightAngle, ulong in_idOutput)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000206")]
	[Address(RVA = "0x295C4C", Offset = "0x295C4C", VA = "0x295C4C")]
	public static AKRESULT SetSpeakerAngles(float[] in_pfSpeakerAngles, uint in_uNumAngles, float in_fHeightAngle)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000207")]
	[Address(RVA = "0x295DBC", Offset = "0x295DBC", VA = "0x295DBC")]
	public static AKRESULT SetVolumeThreshold(float in_fVolumeThresholdDB)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000208")]
	[Address(RVA = "0x295EFC", Offset = "0x295EFC", VA = "0x295EFC")]
	public static AKRESULT SetMaxNumVoicesLimit(ushort in_maxNumberVoices)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000209")]
	[Address(RVA = "0x29603C", Offset = "0x29603C", VA = "0x29603C")]
	public static AKRESULT RenderAudio(bool in_bAllowSyncRender)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600020A")]
	[Address(RVA = "0x29617C", Offset = "0x29617C", VA = "0x29617C")]
	public static AKRESULT RenderAudio()
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600020B")]
	[Address(RVA = "0x2962A4", Offset = "0x2962A4", VA = "0x2962A4")]
	public static AKRESULT RegisterPluginDLL(string in_DllName)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600020C")]
	[Address(RVA = "0x296408", Offset = "0x296408", VA = "0x296408")]
	public static uint GetIDFromString(string in_pszString)
	{
		return default(uint);
	}

	[Token(Token = "0x600020D")]
	[Address(RVA = "0x29656C", Offset = "0x29656C", VA = "0x29656C")]
	public static uint PostEvent(uint in_eventID, GameObject in_gameObjectID, uint in_uFlags, AkCallbackManager.EventCallback in_pfnCallback, object in_pCookie, uint in_cExternals, AkExternalSourceInfo in_pExternalSources, uint in_PlayingID)
	{
		return default(uint);
	}

	[Token(Token = "0x600020E")]
	[Address(RVA = "0x296834", Offset = "0x296834", VA = "0x296834")]
	public static uint PostEvent(uint in_eventID, GameObject in_gameObjectID, uint in_uFlags, AkCallbackManager.EventCallback in_pfnCallback, object in_pCookie, uint in_cExternals, AkExternalSourceInfo in_pExternalSources)
	{
		return default(uint);
	}

	[Token(Token = "0x600020F")]
	[Address(RVA = "0x296AF0", Offset = "0x296AF0", VA = "0x296AF0")]
	public static uint PostEvent(uint in_eventID, GameObject in_gameObjectID, uint in_uFlags, AkCallbackManager.EventCallback in_pfnCallback, object in_pCookie, uint in_cExternals)
	{
		return default(uint);
	}

	[Token(Token = "0x6000210")]
	[Address(RVA = "0x296D8C", Offset = "0x296D8C", VA = "0x296D8C")]
	public static uint PostEvent(uint in_eventID, GameObject in_gameObjectID, uint in_uFlags, AkCallbackManager.EventCallback in_pfnCallback, object in_pCookie)
	{
		return default(uint);
	}

	[Token(Token = "0x6000211")]
	[Address(RVA = "0x297014", Offset = "0x297014", VA = "0x297014")]
	public static uint PostEvent(uint in_eventID, GameObject in_gameObjectID, uint in_uFlags)
	{
		return default(uint);
	}

	[Token(Token = "0x6000212")]
	[Address(RVA = "0x291E24", Offset = "0x291E24", VA = "0x291E24")]
	public static uint PostEvent(uint in_eventID, GameObject in_gameObjectID)
	{
		return default(uint);
	}

	[Token(Token = "0x6000213")]
	[Address(RVA = "0x2972D8", Offset = "0x2972D8", VA = "0x2972D8")]
	public static uint PostEvent(string in_pszEventName, GameObject in_gameObjectID, uint in_uFlags, AkCallbackManager.EventCallback in_pfnCallback, object in_pCookie, uint in_cExternals, AkExternalSourceInfo in_pExternalSources, uint in_PlayingID)
	{
		return default(uint);
	}

	[Token(Token = "0x6000214")]
	[Address(RVA = "0x2975C8", Offset = "0x2975C8", VA = "0x2975C8")]
	public static uint PostEvent(string in_pszEventName, GameObject in_gameObjectID, uint in_uFlags, AkCallbackManager.EventCallback in_pfnCallback, object in_pCookie, uint in_cExternals, AkExternalSourceInfo in_pExternalSources)
	{
		return default(uint);
	}

	[Token(Token = "0x6000215")]
	[Address(RVA = "0x29789C", Offset = "0x29789C", VA = "0x29789C")]
	public static uint PostEvent(string in_pszEventName, GameObject in_gameObjectID, uint in_uFlags, AkCallbackManager.EventCallback in_pfnCallback, object in_pCookie, uint in_cExternals)
	{
		return default(uint);
	}

	[Token(Token = "0x6000216")]
	[Address(RVA = "0x297B58", Offset = "0x297B58", VA = "0x297B58")]
	public static uint PostEvent(string in_pszEventName, GameObject in_gameObjectID, uint in_uFlags, AkCallbackManager.EventCallback in_pfnCallback, object in_pCookie)
	{
		return default(uint);
	}

	[Token(Token = "0x6000217")]
	[Address(RVA = "0x297DF8", Offset = "0x297DF8", VA = "0x297DF8")]
	public static uint PostEvent(string in_pszEventName, GameObject in_gameObjectID, uint in_uFlags)
	{
		return default(uint);
	}

	[Token(Token = "0x6000218")]
	[Address(RVA = "0x2920BC", Offset = "0x2920BC", VA = "0x2920BC")]
	public static uint PostEvent(string in_pszEventName, GameObject in_gameObjectID)
	{
		return default(uint);
	}

	[Token(Token = "0x6000219")]
	[Address(RVA = "0x298104", Offset = "0x298104", VA = "0x298104")]
	public static AKRESULT ExecuteActionOnEvent(uint in_eventID, AkActionOnEventType in_ActionType, GameObject in_gameObjectID, int in_uTransitionDuration, AkCurveInterpolation in_eFadeCurve, uint in_PlayingID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600021A")]
	[Address(RVA = "0x2982D0", Offset = "0x2982D0", VA = "0x2982D0")]
	public static AKRESULT ExecuteActionOnEvent(uint in_eventID, AkActionOnEventType in_ActionType, GameObject in_gameObjectID, int in_uTransitionDuration, AkCurveInterpolation in_eFadeCurve)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600021B")]
	[Address(RVA = "0x298490", Offset = "0x298490", VA = "0x298490")]
	public static AKRESULT ExecuteActionOnEvent(uint in_eventID, AkActionOnEventType in_ActionType, GameObject in_gameObjectID, int in_uTransitionDuration)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600021C")]
	[Address(RVA = "0x292364", Offset = "0x292364", VA = "0x292364")]
	public static AKRESULT ExecuteActionOnEvent(uint in_eventID, AkActionOnEventType in_ActionType, GameObject in_gameObjectID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600021D")]
	[Address(RVA = "0x298710", Offset = "0x298710", VA = "0x298710")]
	public static AKRESULT ExecuteActionOnEvent(uint in_eventID, AkActionOnEventType in_ActionType)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600021E")]
	[Address(RVA = "0x298860", Offset = "0x298860", VA = "0x298860")]
	public static AKRESULT ExecuteActionOnEvent(string in_pszEventName, AkActionOnEventType in_ActionType, GameObject in_gameObjectID, int in_uTransitionDuration, AkCurveInterpolation in_eFadeCurve, uint in_PlayingID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600021F")]
	[Address(RVA = "0x298A4C", Offset = "0x298A4C", VA = "0x298A4C")]
	public static AKRESULT ExecuteActionOnEvent(string in_pszEventName, AkActionOnEventType in_ActionType, GameObject in_gameObjectID, int in_uTransitionDuration, AkCurveInterpolation in_eFadeCurve)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000220")]
	[Address(RVA = "0x298C38", Offset = "0x298C38", VA = "0x298C38")]
	public static AKRESULT ExecuteActionOnEvent(string in_pszEventName, AkActionOnEventType in_ActionType, GameObject in_gameObjectID, int in_uTransitionDuration)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000221")]
	[Address(RVA = "0x298E14", Offset = "0x298E14", VA = "0x298E14")]
	public static AKRESULT ExecuteActionOnEvent(string in_pszEventName, AkActionOnEventType in_ActionType, GameObject in_gameObjectID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000222")]
	[Address(RVA = "0x298FE4", Offset = "0x298FE4", VA = "0x298FE4")]
	public static AKRESULT ExecuteActionOnEvent(string in_pszEventName, AkActionOnEventType in_ActionType)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000223")]
	[Address(RVA = "0x299158", Offset = "0x299158", VA = "0x299158")]
	public static AKRESULT PostMIDIOnEvent(uint in_eventID, GameObject in_gameObjectID, AkMIDIPostArray in_pPosts, ushort in_uNumPosts)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000224")]
	[Address(RVA = "0x299328", Offset = "0x299328", VA = "0x299328")]
	public static AKRESULT StopMIDIOnEvent(uint in_eventID, GameObject in_gameObjectID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000225")]
	[Address(RVA = "0x2994C8", Offset = "0x2994C8", VA = "0x2994C8")]
	public static AKRESULT StopMIDIOnEvent(uint in_eventID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000226")]
	[Address(RVA = "0x299608", Offset = "0x299608", VA = "0x299608")]
	public static AKRESULT StopMIDIOnEvent()
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000227")]
	[Address(RVA = "0x299730", Offset = "0x299730", VA = "0x299730")]
	public static AKRESULT PinEventInStreamCache(uint in_eventID, sbyte in_uActivePriority, sbyte in_uInactivePriority)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000228")]
	[Address(RVA = "0x299898", Offset = "0x299898", VA = "0x299898")]
	public static AKRESULT PinEventInStreamCache(string in_pszEventName, sbyte in_uActivePriority, sbyte in_uInactivePriority)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000229")]
	[Address(RVA = "0x299A24", Offset = "0x299A24", VA = "0x299A24")]
	public static AKRESULT UnpinEventInStreamCache(uint in_eventID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600022A")]
	[Address(RVA = "0x299B64", Offset = "0x299B64", VA = "0x299B64")]
	public static AKRESULT UnpinEventInStreamCache(string in_pszEventName)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600022B")]
	[Address(RVA = "0x299CC8", Offset = "0x299CC8", VA = "0x299CC8")]
	public static AKRESULT GetBufferStatusForPinnedEvent(uint in_eventID, out float out_fPercentBuffered, out int out_bCachePinnedMemoryFull)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600022C")]
	[Address(RVA = "0x299E4C", Offset = "0x299E4C", VA = "0x299E4C")]
	public static AKRESULT GetBufferStatusForPinnedEvent(string in_pszEventName, out float out_fPercentBuffered, out int out_bCachePinnedMemoryFull)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600022D")]
	[Address(RVA = "0x299FF4", Offset = "0x299FF4", VA = "0x299FF4")]
	public static AKRESULT SeekOnEvent(uint in_eventID, GameObject in_gameObjectID, int in_iPosition, bool in_bSeekToNearestMarker, uint in_PlayingID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600022E")]
	[Address(RVA = "0x29A1C0", Offset = "0x29A1C0", VA = "0x29A1C0")]
	public static AKRESULT SeekOnEvent(uint in_eventID, GameObject in_gameObjectID, int in_iPosition, bool in_bSeekToNearestMarker)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600022F")]
	[Address(RVA = "0x29A37C", Offset = "0x29A37C", VA = "0x29A37C")]
	public static AKRESULT SeekOnEvent(uint in_eventID, GameObject in_gameObjectID, int in_iPosition)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000230")]
	[Address(RVA = "0x29A52C", Offset = "0x29A52C", VA = "0x29A52C")]
	public static AKRESULT SeekOnEvent(string in_pszEventName, GameObject in_gameObjectID, int in_iPosition, bool in_bSeekToNearestMarker, uint in_PlayingID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000231")]
	[Address(RVA = "0x29A710", Offset = "0x29A710", VA = "0x29A710")]
	public static AKRESULT SeekOnEvent(string in_pszEventName, GameObject in_gameObjectID, int in_iPosition, bool in_bSeekToNearestMarker)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000232")]
	[Address(RVA = "0x29A8EC", Offset = "0x29A8EC", VA = "0x29A8EC")]
	public static AKRESULT SeekOnEvent(string in_pszEventName, GameObject in_gameObjectID, int in_iPosition)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000233")]
	[Address(RVA = "0x29AAC0", Offset = "0x29AAC0", VA = "0x29AAC0")]
	public static AKRESULT SeekOnEvent(uint in_eventID, GameObject in_gameObjectID, float in_fPercent, bool in_bSeekToNearestMarker, uint in_PlayingID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000234")]
	[Address(RVA = "0x29AC98", Offset = "0x29AC98", VA = "0x29AC98")]
	public static AKRESULT SeekOnEvent(uint in_eventID, GameObject in_gameObjectID, float in_fPercent, bool in_bSeekToNearestMarker)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000235")]
	[Address(RVA = "0x29AE64", Offset = "0x29AE64", VA = "0x29AE64")]
	public static AKRESULT SeekOnEvent(uint in_eventID, GameObject in_gameObjectID, float in_fPercent)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000236")]
	[Address(RVA = "0x29B020", Offset = "0x29B020", VA = "0x29B020")]
	public static AKRESULT SeekOnEvent(string in_pszEventName, GameObject in_gameObjectID, float in_fPercent, bool in_bSeekToNearestMarker, uint in_PlayingID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000237")]
	[Address(RVA = "0x29B220", Offset = "0x29B220", VA = "0x29B220")]
	public static AKRESULT SeekOnEvent(string in_pszEventName, GameObject in_gameObjectID, float in_fPercent, bool in_bSeekToNearestMarker)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000238")]
	[Address(RVA = "0x29B418", Offset = "0x29B418", VA = "0x29B418")]
	public static AKRESULT SeekOnEvent(string in_pszEventName, GameObject in_gameObjectID, float in_fPercent)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000239")]
	[Address(RVA = "0x29B600", Offset = "0x29B600", VA = "0x29B600")]
	public static void CancelEventCallbackCookie(object in_pCookie)
	{
	}

	[Token(Token = "0x600023A")]
	[Address(RVA = "0x29B688", Offset = "0x29B688", VA = "0x29B688")]
	public static void CancelEventCallbackGameObject(GameObject in_gameObjectID)
	{
	}

	[Token(Token = "0x600023B")]
	[Address(RVA = "0x29B818", Offset = "0x29B818", VA = "0x29B818")]
	public static void CancelEventCallback(uint in_playingID)
	{
	}

	[Token(Token = "0x600023C")]
	[Address(RVA = "0x29B8A0", Offset = "0x29B8A0", VA = "0x29B8A0")]
	public static AKRESULT GetSourcePlayPosition(uint in_PlayingID, out int out_puPosition, bool in_bExtrapolate)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600023D")]
	[Address(RVA = "0x29BA18", Offset = "0x29BA18", VA = "0x29BA18")]
	public static AKRESULT GetSourcePlayPosition(uint in_PlayingID, out int out_puPosition)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600023E")]
	[Address(RVA = "0x29BB78", Offset = "0x29BB78", VA = "0x29BB78")]
	public static AKRESULT GetSourceStreamBuffering(uint in_PlayingID, out int out_buffering, out int out_bIsBuffering)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600023F")]
	[Address(RVA = "0x29BCFC", Offset = "0x29BCFC", VA = "0x29BCFC")]
	public static void StopAll(GameObject in_gameObjectID)
	{
	}

	[Token(Token = "0x6000240")]
	[Address(RVA = "0x29BE8C", Offset = "0x29BE8C", VA = "0x29BE8C")]
	public static void StopAll()
	{
	}

	[Token(Token = "0x6000241")]
	[Address(RVA = "0x29BFB4", Offset = "0x29BFB4", VA = "0x29BFB4")]
	public static void StopPlayingID(uint in_playingID, int in_uTransitionDuration, AkCurveInterpolation in_eFadeCurve)
	{
	}

	[Token(Token = "0x6000242")]
	[Address(RVA = "0x29C11C", Offset = "0x29C11C", VA = "0x29C11C")]
	public static void StopPlayingID(uint in_playingID, int in_uTransitionDuration)
	{
	}

	[Token(Token = "0x6000243")]
	[Address(RVA = "0x29C26C", Offset = "0x29C26C", VA = "0x29C26C")]
	public static void StopPlayingID(uint in_playingID)
	{
	}

	[Token(Token = "0x6000244")]
	[Address(RVA = "0x29C3AC", Offset = "0x29C3AC", VA = "0x29C3AC")]
	public static void SetRandomSeed(uint in_uSeed)
	{
	}

	[Token(Token = "0x6000245")]
	[Address(RVA = "0x29C4EC", Offset = "0x29C4EC", VA = "0x29C4EC")]
	public static void MuteBackgroundMusic(bool in_bMute)
	{
	}

	[Token(Token = "0x6000246")]
	[Address(RVA = "0x29C62C", Offset = "0x29C62C", VA = "0x29C62C")]
	public static bool GetBackgroundMusicMute()
	{
		return default(bool);
	}

	[Token(Token = "0x6000247")]
	[Address(RVA = "0x29C75C", Offset = "0x29C75C", VA = "0x29C75C")]
	public static AKRESULT SendPluginCustomGameData(uint in_busID, GameObject in_busObjectID, AkPluginType in_eType, uint in_uCompanyID, uint in_uPluginID, IntPtr in_pData, uint in_uSizeInBytes)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000248")]
	[Address(RVA = "0x29C944", Offset = "0x29C944", VA = "0x29C944")]
	public static AKRESULT UnregisterAllGameObj()
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000249")]
	[Address(RVA = "0x29CA6C", Offset = "0x29CA6C", VA = "0x29CA6C")]
	public static AKRESULT SetMultiplePositions(GameObject in_GameObjectID, AkPositionArray in_pPositions, ushort in_NumPositions, AkMultiPositionType in_eMultiPositionType)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600024A")]
	[Address(RVA = "0x29CC30", Offset = "0x29CC30", VA = "0x29CC30")]
	public static AKRESULT SetMultiplePositions(GameObject in_GameObjectID, AkPositionArray in_pPositions, ushort in_NumPositions)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600024B")]
	[Address(RVA = "0x29CDE8", Offset = "0x29CDE8", VA = "0x29CDE8")]
	public static AKRESULT SetMultiplePositions(GameObject in_GameObjectID, AkChannelEmitterArray in_pPositions, ushort in_NumPositions, AkMultiPositionType in_eMultiPositionType)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600024C")]
	[Address(RVA = "0x29CFAC", Offset = "0x29CFAC", VA = "0x29CFAC")]
	public static AKRESULT SetMultiplePositions(GameObject in_GameObjectID, AkChannelEmitterArray in_pPositions, ushort in_NumPositions)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600024D")]
	[Address(RVA = "0x29D164", Offset = "0x29D164", VA = "0x29D164")]
	public static AKRESULT SetScalingFactor(GameObject in_GameObjectID, float in_fAttenuationScalingFactor)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600024E")]
	[Address(RVA = "0x29D310", Offset = "0x29D310", VA = "0x29D310")]
	public static AKRESULT ClearBanks()
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600024F")]
	[Address(RVA = "0x29D438", Offset = "0x29D438", VA = "0x29D438")]
	public static AKRESULT SetBankLoadIOSettings(float in_fThroughput, sbyte in_priority)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000250")]
	[Address(RVA = "0x29D588", Offset = "0x29D588", VA = "0x29D588")]
	public static AKRESULT LoadBank(string in_pszString, int in_memPoolId, out uint out_bankID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000251")]
	[Address(RVA = "0x29D724", Offset = "0x29D724", VA = "0x29D724")]
	public static AKRESULT LoadBank(uint in_bankID, int in_memPoolId)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000252")]
	[Address(RVA = "0x29D874", Offset = "0x29D874", VA = "0x29D874")]
	public static AKRESULT LoadBank(IntPtr in_pInMemoryBankPtr, uint in_uInMemoryBankSize, out uint out_bankID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000253")]
	[Address(RVA = "0x29D9EC", Offset = "0x29D9EC", VA = "0x29D9EC")]
	public static AKRESULT LoadBank(IntPtr in_pInMemoryBankPtr, uint in_uInMemoryBankSize, int in_uPoolForBankMedia, out uint out_bankID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000254")]
	[Address(RVA = "0x29DB74", Offset = "0x29DB74", VA = "0x29DB74")]
	public static AKRESULT LoadBank(string in_pszString, AkCallbackManager.BankCallback in_pfnBankCallback, object in_pCookie, int in_memPoolId, out uint out_bankID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000255")]
	[Address(RVA = "0x29DD90", Offset = "0x29DD90", VA = "0x29DD90")]
	public static AKRESULT LoadBank(uint in_bankID, AkCallbackManager.BankCallback in_pfnBankCallback, object in_pCookie, int in_memPoolId)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000256")]
	[Address(RVA = "0x29DF60", Offset = "0x29DF60", VA = "0x29DF60")]
	public static AKRESULT LoadBank(IntPtr in_pInMemoryBankPtr, uint in_uInMemoryBankSize, AkCallbackManager.BankCallback in_pfnBankCallback, object in_pCookie, out uint out_bankID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000257")]
	[Address(RVA = "0x29E154", Offset = "0x29E154", VA = "0x29E154")]
	public static AKRESULT LoadBank(IntPtr in_pInMemoryBankPtr, uint in_uInMemoryBankSize, AkCallbackManager.BankCallback in_pfnBankCallback, object in_pCookie, int in_uPoolForBankMedia, out uint out_bankID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000258")]
	[Address(RVA = "0x29E354", Offset = "0x29E354", VA = "0x29E354")]
	public static AKRESULT UnloadBank(string in_pszString, IntPtr in_pInMemoryBankPtr, out int out_pMemPoolId)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000259")]
	[Address(RVA = "0x29E4F0", Offset = "0x29E4F0", VA = "0x29E4F0")]
	public static AKRESULT UnloadBank(string in_pszString, IntPtr in_pInMemoryBankPtr)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600025A")]
	[Address(RVA = "0x29E664", Offset = "0x29E664", VA = "0x29E664")]
	public static AKRESULT UnloadBank(uint in_bankID, IntPtr in_pInMemoryBankPtr, out int out_pMemPoolId)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600025B")]
	[Address(RVA = "0x29E7DC", Offset = "0x29E7DC", VA = "0x29E7DC")]
	public static AKRESULT UnloadBank(uint in_bankID, IntPtr in_pInMemoryBankPtr)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600025C")]
	[Address(RVA = "0x29E92C", Offset = "0x29E92C", VA = "0x29E92C")]
	public static AKRESULT UnloadBank(string in_pszString, IntPtr in_pInMemoryBankPtr, AkCallbackManager.BankCallback in_pfnBankCallback, object in_pCookie)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600025D")]
	[Address(RVA = "0x29EB24", Offset = "0x29EB24", VA = "0x29EB24")]
	public static AKRESULT UnloadBank(uint in_bankID, IntPtr in_pInMemoryBankPtr, AkCallbackManager.BankCallback in_pfnBankCallback, object in_pCookie)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600025E")]
	[Address(RVA = "0x29ECF4", Offset = "0x29ECF4", VA = "0x29ECF4")]
	public static void CancelBankCallbackCookie(object in_pCookie)
	{
	}

	[Token(Token = "0x600025F")]
	[Address(RVA = "0x29ED7C", Offset = "0x29ED7C", VA = "0x29ED7C")]
	public static AKRESULT PrepareBank(AkPreparationType in_PreparationType, string in_pszString, AkBankContent in_uFlags)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000260")]
	[Address(RVA = "0x29EF08", Offset = "0x29EF08", VA = "0x29EF08")]
	public static AKRESULT PrepareBank(AkPreparationType in_PreparationType, string in_pszString)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000261")]
	[Address(RVA = "0x29F07C", Offset = "0x29F07C", VA = "0x29F07C")]
	public static AKRESULT PrepareBank(AkPreparationType in_PreparationType, uint in_bankID, AkBankContent in_uFlags)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000262")]
	[Address(RVA = "0x29F1E4", Offset = "0x29F1E4", VA = "0x29F1E4")]
	public static AKRESULT PrepareBank(AkPreparationType in_PreparationType, uint in_bankID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000263")]
	[Address(RVA = "0x29F334", Offset = "0x29F334", VA = "0x29F334")]
	public static AKRESULT PrepareBank(AkPreparationType in_PreparationType, string in_pszString, AkCallbackManager.BankCallback in_pfnBankCallback, object in_pCookie, AkBankContent in_uFlags)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000264")]
	[Address(RVA = "0x29F53C", Offset = "0x29F53C", VA = "0x29F53C")]
	public static AKRESULT PrepareBank(AkPreparationType in_PreparationType, string in_pszString, AkCallbackManager.BankCallback in_pfnBankCallback, object in_pCookie)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000265")]
	[Address(RVA = "0x29F734", Offset = "0x29F734", VA = "0x29F734")]
	public static AKRESULT PrepareBank(AkPreparationType in_PreparationType, uint in_bankID, AkCallbackManager.BankCallback in_pfnBankCallback, object in_pCookie, AkBankContent in_uFlags)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000266")]
	[Address(RVA = "0x29F914", Offset = "0x29F914", VA = "0x29F914")]
	public static AKRESULT PrepareBank(AkPreparationType in_PreparationType, uint in_bankID, AkCallbackManager.BankCallback in_pfnBankCallback, object in_pCookie)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000267")]
	[Address(RVA = "0x29FAE4", Offset = "0x29FAE4", VA = "0x29FAE4")]
	public static AKRESULT ClearPreparedEvents()
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000268")]
	[Address(RVA = "0x29FC0C", Offset = "0x29FC0C", VA = "0x29FC0C")]
	public static AKRESULT PrepareEvent(AkPreparationType in_PreparationType, string[] in_ppszString, uint in_uNumEvent)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000269")]
	[Address(RVA = "0x2A0050", Offset = "0x2A0050", VA = "0x2A0050")]
	public static AKRESULT PrepareEvent(AkPreparationType in_PreparationType, uint[] in_pEventID, uint in_uNumEvent)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600026A")]
	[Address(RVA = "0x2A01C0", Offset = "0x2A01C0", VA = "0x2A01C0")]
	public static AKRESULT PrepareEvent(AkPreparationType in_PreparationType, string[] in_ppszString, uint in_uNumEvent, AkCallbackManager.BankCallback in_pfnBankCallback, object in_pCookie)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600026B")]
	[Address(RVA = "0x2A0688", Offset = "0x2A0688", VA = "0x2A0688")]
	public static AKRESULT PrepareEvent(AkPreparationType in_PreparationType, uint[] in_pEventID, uint in_uNumEvent, AkCallbackManager.BankCallback in_pfnBankCallback, object in_pCookie)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600026C")]
	[Address(RVA = "0x2A0870", Offset = "0x2A0870", VA = "0x2A0870")]
	public static AKRESULT SetMedia(AkSourceSettings in_pSourceSettings, uint in_uNumSourceSettings)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600026D")]
	[Address(RVA = "0x2A09D4", Offset = "0x2A09D4", VA = "0x2A09D4")]
	public static AKRESULT UnsetMedia(AkSourceSettings in_pSourceSettings, uint in_uNumSourceSettings)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600026E")]
	[Address(RVA = "0x2A0B38", Offset = "0x2A0B38", VA = "0x2A0B38")]
	public static AKRESULT PrepareGameSyncs(AkPreparationType in_PreparationType, AkGroupType in_eGameSyncType, string in_pszGroupName, string[] in_ppszGameSyncName, uint in_uNumGameSyncs)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600026F")]
	[Address(RVA = "0x2A0FB8", Offset = "0x2A0FB8", VA = "0x2A0FB8")]
	public static AKRESULT PrepareGameSyncs(AkPreparationType in_PreparationType, AkGroupType in_eGameSyncType, uint in_GroupID, uint[] in_paGameSyncID, uint in_uNumGameSyncs)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000270")]
	[Address(RVA = "0x2A1140", Offset = "0x2A1140", VA = "0x2A1140")]
	public static AKRESULT PrepareGameSyncs(AkPreparationType in_PreparationType, AkGroupType in_eGameSyncType, string in_pszGroupName, string[] in_ppszGameSyncName, uint in_uNumGameSyncs, AkCallbackManager.BankCallback in_pfnBankCallback, object in_pCookie)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000271")]
	[Address(RVA = "0x2A1630", Offset = "0x2A1630", VA = "0x2A1630")]
	public static AKRESULT PrepareGameSyncs(AkPreparationType in_PreparationType, AkGroupType in_eGameSyncType, uint in_GroupID, uint[] in_paGameSyncID, uint in_uNumGameSyncs, AkCallbackManager.BankCallback in_pfnBankCallback, object in_pCookie)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000272")]
	[Address(RVA = "0x2A183C", Offset = "0x2A183C", VA = "0x2A183C")]
	public static AKRESULT AddListener(GameObject in_emitterGameObj, GameObject in_listenerGameObj)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000273")]
	[Address(RVA = "0x2A19EC", Offset = "0x2A19EC", VA = "0x2A19EC")]
	public static AKRESULT RemoveListener(GameObject in_emitterGameObj, GameObject in_listenerGameObj)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000274")]
	[Address(RVA = "0x2A1B9C", Offset = "0x2A1B9C", VA = "0x2A1B9C")]
	public static AKRESULT AddDefaultListener(GameObject in_listenerGameObj)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000275")]
	[Address(RVA = "0x2A1D2C", Offset = "0x2A1D2C", VA = "0x2A1D2C")]
	public static AKRESULT RemoveDefaultListener(GameObject in_listenerGameObj)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000276")]
	[Address(RVA = "0x2A1EBC", Offset = "0x2A1EBC", VA = "0x2A1EBC")]
	public static AKRESULT ResetListenersToDefault(GameObject in_emitterGameObj)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000277")]
	[Address(RVA = "0x2A204C", Offset = "0x2A204C", VA = "0x2A204C")]
	public static AKRESULT SetListenerSpatialization(GameObject in_uListenerID, bool in_bSpatialized, AkChannelConfig in_channelConfig, float[] in_pVolumeOffsets)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000278")]
	[Address(RVA = "0x2A2218", Offset = "0x2A2218", VA = "0x2A2218")]
	public static AKRESULT SetListenerSpatialization(GameObject in_uListenerID, bool in_bSpatialized, AkChannelConfig in_channelConfig)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000279")]
	[Address(RVA = "0x2A23D0", Offset = "0x2A23D0", VA = "0x2A23D0")]
	public static AKRESULT SetRTPCValue(uint in_rtpcID, float in_value, GameObject in_gameObjectID, int in_uValueChangeDuration, AkCurveInterpolation in_eFadeCurve, bool in_bBypassInternalValueInterpolation)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600027A")]
	[Address(RVA = "0x2A259C", Offset = "0x2A259C", VA = "0x2A259C")]
	public static AKRESULT SetRTPCValue(uint in_rtpcID, float in_value, GameObject in_gameObjectID, int in_uValueChangeDuration, AkCurveInterpolation in_eFadeCurve)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600027B")]
	[Address(RVA = "0x2A275C", Offset = "0x2A275C", VA = "0x2A275C")]
	public static AKRESULT SetRTPCValue(uint in_rtpcID, float in_value, GameObject in_gameObjectID, int in_uValueChangeDuration)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600027C")]
	[Address(RVA = "0x2A290C", Offset = "0x2A290C", VA = "0x2A290C")]
	public static AKRESULT SetRTPCValue(uint in_rtpcID, float in_value, GameObject in_gameObjectID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600027D")]
	[Address(RVA = "0x2A2AB0", Offset = "0x2A2AB0", VA = "0x2A2AB0")]
	public static AKRESULT SetRTPCValue(uint in_rtpcID, float in_value)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600027E")]
	[Address(RVA = "0x2A2C00", Offset = "0x2A2C00", VA = "0x2A2C00")]
	public static AKRESULT SetRTPCValue(string in_pszRtpcName, float in_value, GameObject in_gameObjectID, int in_uValueChangeDuration, AkCurveInterpolation in_eFadeCurve, bool in_bBypassInternalValueInterpolation)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600027F")]
	[Address(RVA = "0x2A2DEC", Offset = "0x2A2DEC", VA = "0x2A2DEC")]
	public static AKRESULT SetRTPCValue(string in_pszRtpcName, float in_value, GameObject in_gameObjectID, int in_uValueChangeDuration, AkCurveInterpolation in_eFadeCurve)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000280")]
	[Address(RVA = "0x2A2FD8", Offset = "0x2A2FD8", VA = "0x2A2FD8")]
	public static AKRESULT SetRTPCValue(string in_pszRtpcName, float in_value, GameObject in_gameObjectID, int in_uValueChangeDuration)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000281")]
	[Address(RVA = "0x2A31B4", Offset = "0x2A31B4", VA = "0x2A31B4")]
	public static AKRESULT SetRTPCValue(string in_pszRtpcName, float in_value, GameObject in_gameObjectID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000282")]
	[Address(RVA = "0x2A3384", Offset = "0x2A3384", VA = "0x2A3384")]
	public static AKRESULT SetRTPCValue(string in_pszRtpcName, float in_value)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000283")]
	[Address(RVA = "0x2A34F8", Offset = "0x2A34F8", VA = "0x2A34F8")]
	public static AKRESULT SetRTPCValueByPlayingID(uint in_rtpcID, float in_value, uint in_playingID, int in_uValueChangeDuration, AkCurveInterpolation in_eFadeCurve, bool in_bBypassInternalValueInterpolation)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000284")]
	[Address(RVA = "0x2A3688", Offset = "0x2A3688", VA = "0x2A3688")]
	public static AKRESULT SetRTPCValueByPlayingID(uint in_rtpcID, float in_value, uint in_playingID, int in_uValueChangeDuration, AkCurveInterpolation in_eFadeCurve)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000285")]
	[Address(RVA = "0x2A3808", Offset = "0x2A3808", VA = "0x2A3808")]
	public static AKRESULT SetRTPCValueByPlayingID(uint in_rtpcID, float in_value, uint in_playingID, int in_uValueChangeDuration)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000286")]
	[Address(RVA = "0x2A397C", Offset = "0x2A397C", VA = "0x2A397C")]
	public static AKRESULT SetRTPCValueByPlayingID(uint in_rtpcID, float in_value, uint in_playingID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000287")]
	[Address(RVA = "0x2A3AE4", Offset = "0x2A3AE4", VA = "0x2A3AE4")]
	public static AKRESULT SetRTPCValueByPlayingID(string in_pszRtpcName, float in_value, uint in_playingID, int in_uValueChangeDuration, AkCurveInterpolation in_eFadeCurve, bool in_bBypassInternalValueInterpolation)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000288")]
	[Address(RVA = "0x2A3C98", Offset = "0x2A3C98", VA = "0x2A3C98")]
	public static AKRESULT SetRTPCValueByPlayingID(string in_pszRtpcName, float in_value, uint in_playingID, int in_uValueChangeDuration, AkCurveInterpolation in_eFadeCurve)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000289")]
	[Address(RVA = "0x2A3E40", Offset = "0x2A3E40", VA = "0x2A3E40")]
	public static AKRESULT SetRTPCValueByPlayingID(string in_pszRtpcName, float in_value, uint in_playingID, int in_uValueChangeDuration)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600028A")]
	[Address(RVA = "0x2A3FDC", Offset = "0x2A3FDC", VA = "0x2A3FDC")]
	public static AKRESULT SetRTPCValueByPlayingID(string in_pszRtpcName, float in_value, uint in_playingID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600028B")]
	[Address(RVA = "0x2A4168", Offset = "0x2A4168", VA = "0x2A4168")]
	public static AKRESULT ResetRTPCValue(uint in_rtpcID, GameObject in_gameObjectID, int in_uValueChangeDuration, AkCurveInterpolation in_eFadeCurve, bool in_bBypassInternalValueInterpolation)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600028C")]
	[Address(RVA = "0x2A4334", Offset = "0x2A4334", VA = "0x2A4334")]
	public static AKRESULT ResetRTPCValue(uint in_rtpcID, GameObject in_gameObjectID, int in_uValueChangeDuration, AkCurveInterpolation in_eFadeCurve)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600028D")]
	[Address(RVA = "0x2A44F0", Offset = "0x2A44F0", VA = "0x2A44F0")]
	public static AKRESULT ResetRTPCValue(uint in_rtpcID, GameObject in_gameObjectID, int in_uValueChangeDuration)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600028E")]
	[Address(RVA = "0x2A46A0", Offset = "0x2A46A0", VA = "0x2A46A0")]
	public static AKRESULT ResetRTPCValue(uint in_rtpcID, GameObject in_gameObjectID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600028F")]
	[Address(RVA = "0x2A4840", Offset = "0x2A4840", VA = "0x2A4840")]
	public static AKRESULT ResetRTPCValue(uint in_rtpcID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000290")]
	[Address(RVA = "0x2A4980", Offset = "0x2A4980", VA = "0x2A4980")]
	public static AKRESULT ResetRTPCValue(string in_pszRtpcName, GameObject in_gameObjectID, int in_uValueChangeDuration, AkCurveInterpolation in_eFadeCurve, bool in_bBypassInternalValueInterpolation)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000291")]
	[Address(RVA = "0x2A4B64", Offset = "0x2A4B64", VA = "0x2A4B64")]
	public static AKRESULT ResetRTPCValue(string in_pszRtpcName, GameObject in_gameObjectID, int in_uValueChangeDuration, AkCurveInterpolation in_eFadeCurve)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000292")]
	[Address(RVA = "0x2A4D40", Offset = "0x2A4D40", VA = "0x2A4D40")]
	public static AKRESULT ResetRTPCValue(string in_pszRtpcName, GameObject in_gameObjectID, int in_uValueChangeDuration)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000293")]
	[Address(RVA = "0x2A4F14", Offset = "0x2A4F14", VA = "0x2A4F14")]
	public static AKRESULT ResetRTPCValue(string in_pszRtpcName, GameObject in_gameObjectID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000294")]
	[Address(RVA = "0x2A50D8", Offset = "0x2A50D8", VA = "0x2A50D8")]
	public static AKRESULT ResetRTPCValue(string in_pszRtpcName)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000295")]
	[Address(RVA = "0x2A523C", Offset = "0x2A523C", VA = "0x2A523C")]
	public static AKRESULT SetSwitch(uint in_switchGroup, uint in_switchState, GameObject in_gameObjectID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000296")]
	[Address(RVA = "0x2A53E0", Offset = "0x2A53E0", VA = "0x2A53E0")]
	public static AKRESULT SetSwitch(string in_pszSwitchGroup, string in_pszSwitchState, GameObject in_gameObjectID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000297")]
	[Address(RVA = "0x2A55C4", Offset = "0x2A55C4", VA = "0x2A55C4")]
	public static AKRESULT PostTrigger(uint in_triggerID, GameObject in_gameObjectID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000298")]
	[Address(RVA = "0x2A5764", Offset = "0x2A5764", VA = "0x2A5764")]
	public static AKRESULT PostTrigger(string in_pszTrigger, GameObject in_gameObjectID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000299")]
	[Address(RVA = "0x2A5928", Offset = "0x2A5928", VA = "0x2A5928")]
	public static AKRESULT SetState(uint in_stateGroup, uint in_state)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600029A")]
	[Address(RVA = "0x2A5A78", Offset = "0x2A5A78", VA = "0x2A5A78")]
	public static AKRESULT SetState(string in_pszStateGroup, string in_pszState)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600029B")]
	[Address(RVA = "0x2A5C00", Offset = "0x2A5C00", VA = "0x2A5C00")]
	public static AKRESULT SetGameObjectAuxSendValues(GameObject in_gameObjectID, AkAuxSendArray in_aAuxSendValues, uint in_uNumSendValues)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600029C")]
	[Address(RVA = "0x2A5DC4", Offset = "0x2A5DC4", VA = "0x2A5DC4")]
	public static AKRESULT SetGameObjectOutputBusVolume(GameObject in_emitterObjID, GameObject in_listenerObjID, float in_fControlValue)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600029D")]
	[Address(RVA = "0x2A5F90", Offset = "0x2A5F90", VA = "0x2A5F90")]
	public static AKRESULT SetActorMixerEffect(uint in_audioNodeID, uint in_uFXIndex, uint in_shareSetID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600029E")]
	[Address(RVA = "0x2A60F8", Offset = "0x2A60F8", VA = "0x2A60F8")]
	public static AKRESULT SetBusEffect(uint in_audioNodeID, uint in_uFXIndex, uint in_shareSetID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600029F")]
	[Address(RVA = "0x2A6260", Offset = "0x2A6260", VA = "0x2A6260")]
	public static AKRESULT SetBusEffect(string in_pszBusName, uint in_uFXIndex, uint in_shareSetID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60002A0")]
	[Address(RVA = "0x2A63EC", Offset = "0x2A63EC", VA = "0x2A63EC")]
	public static AKRESULT SetMixer(uint in_audioNodeID, uint in_shareSetID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60002A1")]
	[Address(RVA = "0x2A653C", Offset = "0x2A653C", VA = "0x2A653C")]
	public static AKRESULT SetMixer(string in_pszBusName, uint in_shareSetID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60002A2")]
	[Address(RVA = "0x2A66B0", Offset = "0x2A66B0", VA = "0x2A66B0")]
	public static AKRESULT SetBusConfig(uint in_audioNodeID, AkChannelConfig in_channelConfig)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60002A3")]
	[Address(RVA = "0x2A6814", Offset = "0x2A6814", VA = "0x2A6814")]
	public static AKRESULT SetBusConfig(string in_pszBusName, AkChannelConfig in_channelConfig)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60002A4")]
	[Address(RVA = "0x2A699C", Offset = "0x2A699C", VA = "0x2A699C")]
	public static AKRESULT SetObjectObstructionAndOcclusion(GameObject in_EmitterID, GameObject in_ListenerID, float in_fObstructionLevel, float in_fOcclusionLevel)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60002A5")]
	[Address(RVA = "0x2A6B78", Offset = "0x2A6B78", VA = "0x2A6B78")]
	public static AKRESULT SetMultipleObstructionAndOcclusion(GameObject in_EmitterID, GameObject in_uListenerID, AkObstructionOcclusionValues in_fObstructionOcclusionValues, uint in_uNumOcclusionObstruction)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60002A6")]
	[Address(RVA = "0x2A6D90", Offset = "0x2A6D90", VA = "0x2A6D90")]
	public static AKRESULT StartOutputCapture(string in_CaptureFileName)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60002A7")]
	[Address(RVA = "0x2A6EF4", Offset = "0x2A6EF4", VA = "0x2A6EF4")]
	public static AKRESULT StopOutputCapture()
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60002A8")]
	[Address(RVA = "0x2A701C", Offset = "0x2A701C", VA = "0x2A701C")]
	public static AKRESULT AddOutputCaptureMarker(string in_MarkerText)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60002A9")]
	[Address(RVA = "0x2A7180", Offset = "0x2A7180", VA = "0x2A7180")]
	public static AKRESULT StartProfilerCapture(string in_CaptureFileName)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60002AA")]
	[Address(RVA = "0x2A72E4", Offset = "0x2A72E4", VA = "0x2A72E4")]
	public static AKRESULT StopProfilerCapture()
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60002AB")]
	[Address(RVA = "0x2A740C", Offset = "0x2A740C", VA = "0x2A740C")]
	public static AKRESULT RemoveOutput(ulong in_idOutput)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60002AC")]
	[Address(RVA = "0x2A7564", Offset = "0x2A7564", VA = "0x2A7564")]
	public static ulong GetOutputID(uint in_idShareset, uint in_idDevice)
	{
		return default(ulong);
	}

	[Token(Token = "0x60002AD")]
	[Address(RVA = "0x2A76B4", Offset = "0x2A76B4", VA = "0x2A76B4")]
	public static ulong GetOutputID(string in_szShareSet, uint in_idDevice)
	{
		return default(ulong);
	}

	[Token(Token = "0x60002AE")]
	[Address(RVA = "0x2A7830", Offset = "0x2A7830", VA = "0x2A7830")]
	public static AKRESULT SetBusDevice(uint in_idBus, uint in_idNewDevice)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60002AF")]
	[Address(RVA = "0x2A7980", Offset = "0x2A7980", VA = "0x2A7980")]
	public static AKRESULT SetBusDevice(string in_BusName, string in_DeviceName)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60002B0")]
	[Address(RVA = "0x2A7B08", Offset = "0x2A7B08", VA = "0x2A7B08")]
	public static AKRESULT SetOutputVolume(ulong in_idOutput, float in_fVolume)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60002B1")]
	[Address(RVA = "0x2A7C78", Offset = "0x2A7C78", VA = "0x2A7C78")]
	public static AKRESULT Suspend(bool in_bRenderAnyway)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60002B2")]
	[Address(RVA = "0x2A7DB8", Offset = "0x2A7DB8", VA = "0x2A7DB8")]
	public static AKRESULT Suspend()
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60002B3")]
	[Address(RVA = "0x2A7EE0", Offset = "0x2A7EE0", VA = "0x2A7EE0")]
	public static AKRESULT WakeupFromSuspend()
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60002B4")]
	[Address(RVA = "0x2A8008", Offset = "0x2A8008", VA = "0x2A8008")]
	public static uint GetBufferTick()
	{
		return default(uint);
	}

	[Token(Token = "0x60002B7")]
	[Address(RVA = "0x2A8380", Offset = "0x2A8380", VA = "0x2A8380")]
	public static AKRESULT GetPlayingSegmentInfo(uint in_PlayingID, AkSegmentInfo out_segmentInfo, bool in_bExtrapolate)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60002B8")]
	[Address(RVA = "0x2A8530", Offset = "0x2A8530", VA = "0x2A8530")]
	public static AKRESULT GetPlayingSegmentInfo(uint in_PlayingID, AkSegmentInfo out_segmentInfo)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60002B9")]
	[Address(RVA = "0x2A86C8", Offset = "0x2A86C8", VA = "0x2A86C8")]
	public static AKRESULT PostCode(AkMonitorErrorCode in_eError, AkMonitorErrorLevel in_eErrorLevel, uint in_playingID, GameObject in_gameObjID, uint in_audioNodeID, bool in_bIsBus)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60002BA")]
	[Address(RVA = "0x2A88A0", Offset = "0x2A88A0", VA = "0x2A88A0")]
	public static AKRESULT PostCode(AkMonitorErrorCode in_eError, AkMonitorErrorLevel in_eErrorLevel, uint in_playingID, GameObject in_gameObjID, uint in_audioNodeID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60002BB")]
	[Address(RVA = "0x2A8A68", Offset = "0x2A8A68", VA = "0x2A8A68")]
	public static AKRESULT PostCode(AkMonitorErrorCode in_eError, AkMonitorErrorLevel in_eErrorLevel, uint in_playingID, GameObject in_gameObjID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60002BC")]
	[Address(RVA = "0x2A8C28", Offset = "0x2A8C28", VA = "0x2A8C28")]
	public static AKRESULT PostCode(AkMonitorErrorCode in_eError, AkMonitorErrorLevel in_eErrorLevel, uint in_playingID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60002BD")]
	[Address(RVA = "0x2A8D90", Offset = "0x2A8D90", VA = "0x2A8D90")]
	public static AKRESULT PostCode(AkMonitorErrorCode in_eError, AkMonitorErrorLevel in_eErrorLevel)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60002BE")]
	[Address(RVA = "0x2A8EE0", Offset = "0x2A8EE0", VA = "0x2A8EE0")]
	public static AKRESULT PostString(string in_pszError, AkMonitorErrorLevel in_eErrorLevel, uint in_playingID, GameObject in_gameObjID, uint in_audioNodeID, bool in_bIsBus)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60002BF")]
	[Address(RVA = "0x2A90DC", Offset = "0x2A90DC", VA = "0x2A90DC")]
	public static AKRESULT PostString(string in_pszError, AkMonitorErrorLevel in_eErrorLevel, uint in_playingID, GameObject in_gameObjID, uint in_audioNodeID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60002C0")]
	[Address(RVA = "0x2A92C8", Offset = "0x2A92C8", VA = "0x2A92C8")]
	public static AKRESULT PostString(string in_pszError, AkMonitorErrorLevel in_eErrorLevel, uint in_playingID, GameObject in_gameObjID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60002C1")]
	[Address(RVA = "0x2A94A8", Offset = "0x2A94A8", VA = "0x2A94A8")]
	public static AKRESULT PostString(string in_pszError, AkMonitorErrorLevel in_eErrorLevel, uint in_playingID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60002C2")]
	[Address(RVA = "0x2A9634", Offset = "0x2A9634", VA = "0x2A9634")]
	public static AKRESULT PostString(string in_pszError, AkMonitorErrorLevel in_eErrorLevel)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60002C3")]
	[Address(RVA = "0x2A97A8", Offset = "0x2A97A8", VA = "0x2A97A8")]
	public static int GetTimeStamp()
	{
		return default(int);
	}

	[Token(Token = "0x60002C4")]
	[Address(RVA = "0x2A98D0", Offset = "0x2A98D0", VA = "0x2A98D0")]
	public static uint GetNumNonZeroBits(uint in_uWord)
	{
		return default(uint);
	}

	[Token(Token = "0x60002C5")]
	[Address(RVA = "0x2A9A10", Offset = "0x2A9A10", VA = "0x2A9A10")]
	public static uint ResolveDialogueEvent(uint in_eventID, uint[] in_aArgumentValues, uint in_uNumArguments, uint in_idSequence)
	{
		return default(uint);
	}

	[Token(Token = "0x60002C6")]
	[Address(RVA = "0x2A9B8C", Offset = "0x2A9B8C", VA = "0x2A9B8C")]
	public static uint ResolveDialogueEvent(uint in_eventID, uint[] in_aArgumentValues, uint in_uNumArguments)
	{
		return default(uint);
	}

	[Token(Token = "0x60002C7")]
	[Address(RVA = "0x2A9CFC", Offset = "0x2A9CFC", VA = "0x2A9CFC")]
	public static AKRESULT GetDialogueEventCustomPropertyValue(uint in_eventID, uint in_uPropID, out int out_iValue)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60002C8")]
	[Address(RVA = "0x2A9E74", Offset = "0x2A9E74", VA = "0x2A9E74")]
	public static AKRESULT GetDialogueEventCustomPropertyValue(uint in_eventID, uint in_uPropID, out float out_fValue)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60002C9")]
	[Address(RVA = "0x2A9FEC", Offset = "0x2A9FEC", VA = "0x2A9FEC")]
	public static AKRESULT GetPosition(GameObject in_GameObjectID, AkTransform out_rPosition)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60002CA")]
	[Address(RVA = "0x2AA19C", Offset = "0x2AA19C", VA = "0x2AA19C")]
	public static AKRESULT GetListenerPosition(GameObject in_uIndex, AkTransform out_rPosition)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60002CB")]
	[Address(RVA = "0x2AA34C", Offset = "0x2AA34C", VA = "0x2AA34C")]
	public static AKRESULT GetRTPCValue(uint in_rtpcID, GameObject in_gameObjectID, uint in_playingID, out float out_rValue, ref int io_rValueType)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60002CC")]
	[Address(RVA = "0x2AA528", Offset = "0x2AA528", VA = "0x2AA528")]
	public static AKRESULT GetRTPCValue(string in_pszRtpcName, GameObject in_gameObjectID, uint in_playingID, out float out_rValue, ref int io_rValueType)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60002CD")]
	[Address(RVA = "0x2AA724", Offset = "0x2AA724", VA = "0x2AA724")]
	public static AKRESULT GetSwitch(uint in_switchGroup, GameObject in_gameObjectID, out uint out_rSwitchState)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60002CE")]
	[Address(RVA = "0x2AA8E8", Offset = "0x2AA8E8", VA = "0x2AA8E8")]
	public static AKRESULT GetSwitch(string in_pstrSwitchGroupName, GameObject in_GameObj, out uint out_rSwitchState)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60002CF")]
	[Address(RVA = "0x2AAAD0", Offset = "0x2AAAD0", VA = "0x2AAAD0")]
	public static AKRESULT GetState(uint in_stateGroup, out uint out_rState)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60002D0")]
	[Address(RVA = "0x2AAC30", Offset = "0x2AAC30", VA = "0x2AAC30")]
	public static AKRESULT GetState(string in_pstrStateGroupName, out uint out_rState)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60002D1")]
	[Address(RVA = "0x2AADB4", Offset = "0x2AADB4", VA = "0x2AADB4")]
	public static AKRESULT GetGameObjectAuxSendValues(GameObject in_gameObjectID, AkAuxSendArray out_paAuxSendValues, ref uint io_ruNumSendValues)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60002D2")]
	[Address(RVA = "0x2AAF78", Offset = "0x2AAF78", VA = "0x2AAF78")]
	public static AKRESULT GetGameObjectDryLevelValue(GameObject in_EmitterID, GameObject in_ListenerID, out float out_rfControlValue)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60002D3")]
	[Address(RVA = "0x2AB148", Offset = "0x2AB148", VA = "0x2AB148")]
	public static AKRESULT GetObjectObstructionAndOcclusion(GameObject in_EmitterID, GameObject in_ListenerID, out float out_rfObstructionLevel, out float out_rfOcclusionLevel)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60002D4")]
	[Address(RVA = "0x2AB330", Offset = "0x2AB330", VA = "0x2AB330")]
	public static AKRESULT QueryAudioObjectIDs(uint in_eventID, ref uint io_ruNumItems, AkObjectInfo out_aObjectInfos)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60002D5")]
	[Address(RVA = "0x2AB4E0", Offset = "0x2AB4E0", VA = "0x2AB4E0")]
	public static AKRESULT QueryAudioObjectIDs(string in_pszEventName, ref uint io_ruNumItems, AkObjectInfo out_aObjectInfos)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60002D6")]
	[Address(RVA = "0x2AB6B4", Offset = "0x2AB6B4", VA = "0x2AB6B4")]
	public static AKRESULT GetPositioningInfo(uint in_ObjectID, AkPositioningInfo out_rPositioningInfo)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60002D7")]
	[Address(RVA = "0x2AB84C", Offset = "0x2AB84C", VA = "0x2AB84C")]
	public static bool GetIsGameObjectActive(GameObject in_GameObjId)
	{
		return default(bool);
	}

	[Token(Token = "0x60002D8")]
	[Address(RVA = "0x2AB9E4", Offset = "0x2AB9E4", VA = "0x2AB9E4")]
	public static float GetMaxRadius(GameObject in_GameObjId)
	{
		return default(float);
	}

	[Token(Token = "0x60002D9")]
	[Address(RVA = "0x2ABB74", Offset = "0x2ABB74", VA = "0x2ABB74")]
	public static uint GetEventIDFromPlayingID(uint in_playingID)
	{
		return default(uint);
	}

	[Token(Token = "0x60002DA")]
	[Address(RVA = "0x2ABCB4", Offset = "0x2ABCB4", VA = "0x2ABCB4")]
	public static ulong GetGameObjectFromPlayingID(uint in_playingID)
	{
		return default(ulong);
	}

	[Token(Token = "0x60002DB")]
	[Address(RVA = "0x2ABDF4", Offset = "0x2ABDF4", VA = "0x2ABDF4")]
	public static AKRESULT GetPlayingIDsFromGameObject(GameObject in_GameObjId, ref uint io_ruNumIDs, uint[] out_aPlayingIDs)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60002DC")]
	[Address(RVA = "0x2AC038", Offset = "0x2AC038", VA = "0x2AC038")]
	public static AKRESULT GetCustomPropertyValue(uint in_ObjectID, uint in_uPropID, out int out_iValue)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60002DD")]
	[Address(RVA = "0x2AC1B0", Offset = "0x2AC1B0", VA = "0x2AC1B0")]
	public static AKRESULT GetCustomPropertyValue(uint in_ObjectID, uint in_uPropID, out float out_fValue)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60002DE")]
	[Address(RVA = "0x2AC328", Offset = "0x2AC328", VA = "0x2AC328")]
	public static void AK_SPEAKER_SETUP_FIX_LEFT_TO_CENTER(ref uint io_uChannelMask)
	{
	}

	[Token(Token = "0x60002DF")]
	[Address(RVA = "0x2AC468", Offset = "0x2AC468", VA = "0x2AC468")]
	public static void AK_SPEAKER_SETUP_FIX_REAR_TO_SIDE(ref uint io_uChannelMask)
	{
	}

	[Token(Token = "0x60002E0")]
	[Address(RVA = "0x2AC5A8", Offset = "0x2AC5A8", VA = "0x2AC5A8")]
	public static void AK_SPEAKER_SETUP_CONVERT_TO_SUPPORTED(ref uint io_uChannelMask)
	{
	}

	[Token(Token = "0x60002E1")]
	[Address(RVA = "0x2AC6E8", Offset = "0x2AC6E8", VA = "0x2AC6E8")]
	public static byte ChannelMaskToNumChannels(uint in_uChannelMask)
	{
		return default(byte);
	}

	[Token(Token = "0x60002E2")]
	[Address(RVA = "0x2AC828", Offset = "0x2AC828", VA = "0x2AC828")]
	public static uint ChannelMaskFromNumChannels(uint in_uNumChannels)
	{
		return default(uint);
	}

	[Token(Token = "0x60002E3")]
	[Address(RVA = "0x2AC968", Offset = "0x2AC968", VA = "0x2AC968")]
	public static byte ChannelBitToIndex(uint in_uChannelBit, uint in_uChannelMask)
	{
		return default(byte);
	}

	[Token(Token = "0x60002E4")]
	[Address(RVA = "0x2ACAB8", Offset = "0x2ACAB8", VA = "0x2ACAB8")]
	public static bool HasSurroundChannels(uint in_uChannelMask)
	{
		return default(bool);
	}

	[Token(Token = "0x60002E5")]
	[Address(RVA = "0x2ACC00", Offset = "0x2ACC00", VA = "0x2ACC00")]
	public static bool HasStrictlyOnePairOfSurroundChannels(uint in_uChannelMask)
	{
		return default(bool);
	}

	[Token(Token = "0x60002E6")]
	[Address(RVA = "0x2ACD48", Offset = "0x2ACD48", VA = "0x2ACD48")]
	public static bool HasSideAndRearChannels(uint in_uChannelMask)
	{
		return default(bool);
	}

	[Token(Token = "0x60002E7")]
	[Address(RVA = "0x2ACE90", Offset = "0x2ACE90", VA = "0x2ACE90")]
	public static bool HasHeightChannels(uint in_uChannelMask)
	{
		return default(bool);
	}

	[Token(Token = "0x60002E8")]
	[Address(RVA = "0x2ACFD8", Offset = "0x2ACFD8", VA = "0x2ACFD8")]
	public static uint BackToSideChannels(uint in_uChannelMask)
	{
		return default(uint);
	}

	[Token(Token = "0x60002E9")]
	[Address(RVA = "0x2AD118", Offset = "0x2AD118", VA = "0x2AD118")]
	public static uint StdChannelIndexToDisplayIndex(AkChannelOrdering in_eOrdering, uint in_uChannelMask, uint in_uChannelIdx)
	{
		return default(uint);
	}

	[Token(Token = "0x60002EE")]
	[Address(RVA = "0x2AD738", Offset = "0x2AD738", VA = "0x2AD738")]
	public static int GetPoolID()
	{
		return default(int);
	}

	[Token(Token = "0x60002EF")]
	[Address(RVA = "0x2AD860", Offset = "0x2AD860", VA = "0x2AD860")]
	public static AKRESULT RegisterEmitter(GameObject in_gameObjectID, AkEmitterSettings in_settings)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60002F0")]
	[Address(RVA = "0x2ADA10", Offset = "0x2ADA10", VA = "0x2ADA10")]
	public static AKRESULT UnregisterEmitter(GameObject in_gameObjectID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60002F1")]
	[Address(RVA = "0x2ADBA0", Offset = "0x2ADBA0", VA = "0x2ADBA0")]
	public static AKRESULT SetEmitterAuxSendValues(GameObject in_gameObjectID, AkAuxSendArray in_pAuxSends, uint in_uNumAux)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60002F2")]
	[Address(RVA = "0x2ADD64", Offset = "0x2ADD64", VA = "0x2ADD64")]
	public static AKRESULT SetImageSource(uint in_srcID, AkImageSourceSettings in_info, uint in_AuxBusID, ulong in_roomID, GameObject in_gameObjectID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60002F3")]
	[Address(RVA = "0x2ADF58", Offset = "0x2ADF58", VA = "0x2ADF58")]
	public static AKRESULT SetImageSource(uint in_srcID, AkImageSourceSettings in_info, uint in_AuxBusID, ulong in_roomID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60002F4")]
	[Address(RVA = "0x2AE0F0", Offset = "0x2AE0F0", VA = "0x2AE0F0")]
	public static AKRESULT RemoveImageSource(uint in_srcID, uint in_AuxBusID, GameObject in_gameObjectID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60002F5")]
	[Address(RVA = "0x2AE294", Offset = "0x2AE294", VA = "0x2AE294")]
	public static AKRESULT RemoveImageSource(uint in_srcID, uint in_AuxBusID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60002F6")]
	[Address(RVA = "0x2AE3E4", Offset = "0x2AE3E4", VA = "0x2AE3E4")]
	public static AKRESULT RemoveGeometry(ulong in_SetID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60002F7")]
	[Address(RVA = "0x2AE53C", Offset = "0x2AE53C", VA = "0x2AE53C")]
	public static AKRESULT QueryReflectionPaths(GameObject in_gameObjectID, AkVector out_listenerPos, AkVector out_emitterPos, AkReflectionPathInfoArray out_aPaths, out uint io_uArraySize)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60002F8")]
	[Address(RVA = "0x28B0A4", Offset = "0x28B0A4", VA = "0x28B0A4")]
	public static AKRESULT RemoveRoom(ulong in_RoomID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60002F9")]
	[Address(RVA = "0x2AE828", Offset = "0x2AE828", VA = "0x2AE828")]
	public static AKRESULT RemovePortal(ulong in_PortalID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60002FA")]
	[Address(RVA = "0x2AE980", Offset = "0x2AE980", VA = "0x2AE980")]
	public static AKRESULT SetGameObjectInRoom(GameObject in_gameObjectID, ulong in_CurrentRoomID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60002FB")]
	[Address(RVA = "0x2AEB28", Offset = "0x2AEB28", VA = "0x2AEB28")]
	public static AKRESULT SetEmitterObstructionAndOcclusion(GameObject in_gameObjectID, float in_fObstruction, float in_fOcclusion)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60002FC")]
	[Address(RVA = "0x28E988", Offset = "0x28E988", VA = "0x28E988")]
	public static AKRESULT SetPortalObstructionAndOcclusion(ulong in_PortalID, float in_fObstruction, float in_fOcclusion)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60002FD")]
	[Address(RVA = "0x2AEDC0", Offset = "0x2AEDC0", VA = "0x2AEDC0")]
	public static AKRESULT GetFastPathSettings(AkInitSettings in_settings, AkPlatformInitSettings in_pfSettings)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60002FE")]
	[Address(RVA = "0x2AEF6C", Offset = "0x2AEF6C", VA = "0x2AEF6C")]
	public static void SetErrorLogger(AkLogger.ErrorLoggerInteropDelegate logger)
	{
	}

	[Token(Token = "0x60002FF")]
	[Address(RVA = "0x2AF0B8", Offset = "0x2AF0B8", VA = "0x2AF0B8")]
	public static void SetErrorLogger()
	{
	}

	[Token(Token = "0x6000300")]
	[Address(RVA = "0x2AF1E0", Offset = "0x2AF1E0", VA = "0x2AF1E0")]
	public static void SetAudioInputCallbacks(AkAudioInputManager.AudioSamplesInteropDelegate getAudioSamples, AkAudioInputManager.AudioFormatInteropDelegate getAudioFormat)
	{
	}

	[Token(Token = "0x6000301")]
	[Address(RVA = "0x2AF34C", Offset = "0x2AF34C", VA = "0x2AF34C")]
	public static AKRESULT Init(AkInitializationSettings settings)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000302")]
	[Address(RVA = "0x2AF4A0", Offset = "0x2AF4A0", VA = "0x2AF4A0")]
	public static AKRESULT InitSpatialAudio(AkSpatialAudioInitSettings settings)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000303")]
	[Address(RVA = "0x2AF5F4", Offset = "0x2AF5F4", VA = "0x2AF5F4")]
	public static AKRESULT InitCommunication(AkCommunicationSettings settings)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000304")]
	[Address(RVA = "0x2AF748", Offset = "0x2AF748", VA = "0x2AF748")]
	public static void Term()
	{
	}

	[Token(Token = "0x6000305")]
	[Address(RVA = "0x2AF870", Offset = "0x2AF870", VA = "0x2AF870")]
	public static AKRESULT RegisterGameObjInternal(GameObject in_GameObj)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000306")]
	[Address(RVA = "0x2AFA00", Offset = "0x2AFA00", VA = "0x2AFA00")]
	public static AKRESULT UnregisterGameObjInternal(GameObject in_GameObj)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000307")]
	[Address(RVA = "0x2AFB90", Offset = "0x2AFB90", VA = "0x2AFB90")]
	public static AKRESULT RegisterGameObjInternal_WithName(GameObject in_GameObj, string in_pszObjName)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000308")]
	[Address(RVA = "0x2AFD50", Offset = "0x2AFD50", VA = "0x2AFD50")]
	public static AKRESULT SetBasePath(string in_pszBasePath)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000309")]
	[Address(RVA = "0x2AFEB4", Offset = "0x2AFEB4", VA = "0x2AFEB4")]
	public static AKRESULT SetCurrentLanguage(string in_pszAudioSrcPath)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600030A")]
	[Address(RVA = "0x2B0018", Offset = "0x2B0018", VA = "0x2B0018")]
	public static AKRESULT LoadFilePackage(string in_pszFilePackageName, out uint out_uPackageID, int in_memPoolID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600030B")]
	[Address(RVA = "0x2B01B4", Offset = "0x2B01B4", VA = "0x2B01B4")]
	public static AKRESULT AddBasePath(string in_pszBasePath)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600030C")]
	[Address(RVA = "0x2B0318", Offset = "0x2B0318", VA = "0x2B0318")]
	public static AKRESULT SetGameName(string in_GameName)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600030D")]
	[Address(RVA = "0x2B047C", Offset = "0x2B047C", VA = "0x2B047C")]
	public static AKRESULT SetDecodedBankPath(string in_DecodedPath)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600030E")]
	[Address(RVA = "0x2B05E0", Offset = "0x2B05E0", VA = "0x2B05E0")]
	public static AKRESULT LoadAndDecodeBank(string in_pszString, bool in_bSaveDecodedBank, out uint out_bankID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600030F")]
	[Address(RVA = "0x2B077C", Offset = "0x2B077C", VA = "0x2B077C")]
	public static AKRESULT LoadAndDecodeBankFromMemory(IntPtr in_BankData, uint in_BankDataSize, bool in_bSaveDecodedBank, string in_DecodedBankName, bool in_bIsLanguageSpecific, out uint out_bankID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000310")]
	[Address(RVA = "0x2B0940", Offset = "0x2B0940", VA = "0x2B0940")]
	public static string GetCurrentLanguage()
	{
		return null;
	}

	[Token(Token = "0x6000311")]
	[Address(RVA = "0x2B0AA0", Offset = "0x2B0AA0", VA = "0x2B0AA0")]
	public static AKRESULT UnloadFilePackage(uint in_uPackageID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000312")]
	[Address(RVA = "0x2B0BE0", Offset = "0x2B0BE0", VA = "0x2B0BE0")]
	public static AKRESULT UnloadAllFilePackages()
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000313")]
	[Address(RVA = "0x2B0D08", Offset = "0x2B0D08", VA = "0x2B0D08")]
	public static AKRESULT SetObjectPosition(GameObject in_GameObjectID, float PosX, float PosY, float PosZ, float FrontX, float FrontY, float FrontZ, float TopX, float TopY, float TopZ)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000314")]
	[Address(RVA = "0x2B0F38", Offset = "0x2B0F38", VA = "0x2B0F38")]
	public static AKRESULT GetSourceMultiplePlayPositions(uint in_PlayingID, uint[] out_audioNodeID, uint[] out_mediaID, int[] out_msTime, ref uint io_pcPositions, bool in_bExtrapolate)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000315")]
	[Address(RVA = "0x2B11FC", Offset = "0x2B11FC", VA = "0x2B11FC")]
	public static AKRESULT SetListeners(GameObject in_emitterGameObj, ulong[] in_pListenerGameObjs, uint in_uNumListeners)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000316")]
	[Address(RVA = "0x2B13AC", Offset = "0x2B13AC", VA = "0x2B13AC")]
	public static AKRESULT SetDefaultListeners(ulong[] in_pListenerObjs, uint in_uNumListeners)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000317")]
	[Address(RVA = "0x2B1504", Offset = "0x2B1504", VA = "0x2B1504")]
	public static AKRESULT AddOutput(AkOutputSettings in_Settings, out ulong out_pDeviceID, ulong[] in_pListenerIDs, uint in_uNumListeners)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000318")]
	[Address(RVA = "0x2B16D8", Offset = "0x2B16D8", VA = "0x2B16D8")]
	public static void GetDefaultStreamSettings(AkStreamMgrSettings out_settings)
	{
	}

	[Token(Token = "0x6000319")]
	[Address(RVA = "0x2B182C", Offset = "0x2B182C", VA = "0x2B182C")]
	public static void GetDefaultDeviceSettings(AkDeviceSettings out_settings)
	{
	}

	[Token(Token = "0x600031A")]
	[Address(RVA = "0x2B1980", Offset = "0x2B1980", VA = "0x2B1980")]
	public static void GetDefaultMusicSettings(AkMusicSettings out_settings)
	{
	}

	[Token(Token = "0x600031B")]
	[Address(RVA = "0x2B1B08", Offset = "0x2B1B08", VA = "0x2B1B08")]
	public static void GetDefaultInitSettings(AkInitSettings out_settings)
	{
	}

	[Token(Token = "0x600031C")]
	[Address(RVA = "0x2B1C5C", Offset = "0x2B1C5C", VA = "0x2B1C5C")]
	public static void GetDefaultPlatformInitSettings(AkPlatformInitSettings out_settings)
	{
	}

	[Token(Token = "0x600031D")]
	[Address(RVA = "0x2B1DE4", Offset = "0x2B1DE4", VA = "0x2B1DE4")]
	public static uint GetMajorMinorVersion()
	{
		return default(uint);
	}

	[Token(Token = "0x600031E")]
	[Address(RVA = "0x2B1F0C", Offset = "0x2B1F0C", VA = "0x2B1F0C")]
	public static uint GetSubminorBuildVersion()
	{
		return default(uint);
	}

	[Token(Token = "0x600031F")]
	[Address(RVA = "0x2B2034", Offset = "0x2B2034", VA = "0x2B2034")]
	public static AKRESULT QueryIndirectPaths(GameObject in_gameObjectID, AkPathParams arg1, AkReflectionPathInfoArray paths, uint numPaths)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000320")]
	[Address(RVA = "0x2B2258", Offset = "0x2B2258", VA = "0x2B2258")]
	public static AKRESULT QuerySoundPropagationPaths(GameObject in_gameObjectID, AkPathParams arg1, AkPropagationPathInfoArray paths, uint numPaths)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000321")]
	[Address(RVA = "0x2B247C", Offset = "0x2B247C", VA = "0x2B247C")]
	public static AKRESULT QueryDiffractionPaths(GameObject in_gameObjectID, AkPathParams arg1, AkDiffractionPathInfoArray paths, uint numPaths)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000322")]
	[Address(RVA = "0x28D884", Offset = "0x28D884", VA = "0x28D884")]
	public static AKRESULT SetRoomPortal(ulong in_PortalID, AkTransform Transform, AkVector Extent, bool bEnabled, ulong FrontRoom, ulong BackRoom)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000323")]
	[Address(RVA = "0x28AE98", Offset = "0x28AE98", VA = "0x28AE98")]
	public static AKRESULT SetRoom(ulong in_RoomID, AkRoomParams in_roomParams, string in_pName)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000324")]
	[Address(RVA = "0x2B288C", Offset = "0x2B288C", VA = "0x2B288C")]
	public static AKRESULT RegisterSpatialAudioListener(GameObject in_gameObjectID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000325")]
	[Address(RVA = "0x2B2A1C", Offset = "0x2B2A1C", VA = "0x2B2A1C")]
	public static AKRESULT UnregisterSpatialAudioListener(GameObject in_gameObjectID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000326")]
	[Address(RVA = "0x2B2BAC", Offset = "0x2B2BAC", VA = "0x2B2BAC")]
	public static AKRESULT SetGeometry(ulong in_GeomSetID, AkTriangleArray Triangles, uint NumTriangles, AkVertexArray Vertices, uint NumVertices, AkAcousticSurfaceArray Surfaces, uint NumSurfaces, bool EnableDiffraction, bool EnableDiffractionOnBoundaryEdges)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000327")]
	[Address(RVA = "0x277410", Offset = "0x277410", VA = "0x277410")]
	public static string StringFromIntPtrString(IntPtr ptr)
	{
		return null;
	}

	[Token(Token = "0x6000328")]
	[Address(RVA = "0x2B2DE8", Offset = "0x2B2DE8", VA = "0x2B2DE8")]
	public static string StringFromIntPtrWString(IntPtr ptr)
	{
		return null;
	}

	[Token(Token = "0x6000329")]
	[Address(RVA = "0x274BF8", Offset = "0x274BF8", VA = "0x274BF8")]
	public static string StringFromIntPtrOSString(IntPtr ptr)
	{
		return null;
	}

	[Token(Token = "0x600032A")]
	[Address(RVA = "0x2B2E70", Offset = "0x2B2E70", VA = "0x2B2E70")]
	private static ulong InternalGameObjectHash(GameObject gameObject)
	{
		return default(ulong);
	}

	[Token(Token = "0x600032C")]
	[Address(RVA = "0x273638", Offset = "0x273638", VA = "0x273638")]
	public static ulong GetAkGameObjectID(GameObject gameObject)
	{
		return default(ulong);
	}

	[Token(Token = "0x600032D")]
	[Address(RVA = "0x2B3478", Offset = "0x2B3478", VA = "0x2B3478")]
	public static AKRESULT RegisterGameObj(GameObject gameObject)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600032E")]
	[Address(RVA = "0x2B3540", Offset = "0x2B3540", VA = "0x2B3540")]
	public static AKRESULT RegisterGameObj(GameObject gameObject, string name)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600032F")]
	[Address(RVA = "0x2B3610", Offset = "0x2B3610", VA = "0x2B3610")]
	public static AKRESULT UnregisterGameObj(GameObject gameObject)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000330")]
	[Address(RVA = "0x2B36D8", Offset = "0x2B36D8", VA = "0x2B36D8")]
	public static AKRESULT SetObjectPosition(GameObject gameObject, Transform transform)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000331")]
	[Address(RVA = "0x2B38F0", Offset = "0x2B38F0", VA = "0x2B38F0")]
	public static AKRESULT SetObjectPosition(GameObject gameObject, Vector3 position, Vector3 forward, Vector3 up)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000332")]
	[Address(RVA = "0x2736E4", Offset = "0x2736E4", VA = "0x2736E4")]
	public static void PreGameObjectAPICall(GameObject gameObject, ulong id)
	{
	}
}
[Token(Token = "0x2000051")]
public class ChangeMat : MonoBehaviour
{
	[Token(Token = "0x40002FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Material material;

	[Token(Token = "0x6000334")]
	[Address(RVA = "0xCF32B8", Offset = "0xCF32B8", VA = "0xCF32B8")]
	public ChangeMat()
	{
	}

	[Token(Token = "0x6000335")]
	[Address(RVA = "0xCF32C0", Offset = "0xCF32C0", VA = "0xCF32C0")]
	public void ChangeMaterial()
	{
	}
}
[Token(Token = "0x2000052")]
public class ChangeName : MonoBehaviour
{
	[Token(Token = "0x4000300")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public string NewName;

	[Token(Token = "0x4000301")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public bool DestroyAfterUse;

	[Token(Token = "0x6000336")]
	[Address(RVA = "0xCF338C", Offset = "0xCF338C", VA = "0xCF338C")]
	public ChangeName()
	{
	}

	[Token(Token = "0x6000337")]
	[Address(RVA = "0xCF3400", Offset = "0xCF3400", VA = "0xCF3400")]
	public void ChangeNames()
	{
	}
}
[Token(Token = "0x2000053")]
[ExecuteInEditMode]
public class DrawingShader : MonoBehaviour
{
	[Token(Token = "0x4000302")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private Material _material;

	[Token(Token = "0x4000303")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Color _Color;

	[Token(Token = "0x4000304")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x1F1DB8", Offset = "0x1F1DB8")]
	public float Offset;

	[Token(Token = "0x4000305")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x1F1DD4", Offset = "0x1F1DD4")]
	public float Palier1;

	[Token(Token = "0x4000306")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x1F1DEC", Offset = "0x1F1DEC")]
	public float Palier2;

	[Token(Token = "0x4000307")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x1F1E04", Offset = "0x1F1E04")]
	public float Palier3;

	[Token(Token = "0x4000308")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x1F1E1C", Offset = "0x1F1E1C")]
	public float Palier4;

	[Token(Token = "0x4000309")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x1F1E34", Offset = "0x1F1E34")]
	public float Mix;

	[Token(Token = "0x400030A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x1F1E4C", Offset = "0x1F1E4C")]
	public float MixFilter;

	[NonSerialized]
	[Token(Token = "0x400030B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public Action<DrawingShader> _updateCallback;

	[Token(Token = "0x400030C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private RenderTexture tempRT;

	[Token(Token = "0x6000338")]
	[Address(RVA = "0xC520C0", Offset = "0xC520C0", VA = "0xC520C0")]
	public DrawingShader()
	{
	}

	[Token(Token = "0x6000339")]
	[Address(RVA = "0xC520C8", Offset = "0xC520C8", VA = "0xC520C8")]
	private void Awake()
	{
	}

	[Token(Token = "0x600033A")]
	[Address(RVA = "0xC523A4", Offset = "0xC523A4", VA = "0xC523A4")]
	private void Start()
	{
	}

	[Token(Token = "0x600033B")]
	[Address(RVA = "0xC52164", Offset = "0xC52164", VA = "0xC52164")]
	public void ApplyChange()
	{
	}

	[Token(Token = "0x600033C")]
	[Address(RVA = "0xC523A8", Offset = "0xC523A8", VA = "0xC523A8")]
	private void OnPreRender()
	{
	}

	[Token(Token = "0x600033D")]
	[Address(RVA = "0xC52428", Offset = "0xC52428", VA = "0xC52428")]
	private void OnPostRender()
	{
	}
}
[Token(Token = "0x2000054")]
public class Fade
{
	[Token(Token = "0x400030D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public string ID;

	[Token(Token = "0x400030E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public float fade;

	[Token(Token = "0x400030F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public bool isActive;

	[Token(Token = "0x4000310")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private float _fadeBegin;

	[Token(Token = "0x4000311")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float _fadeEnd;

	[Token(Token = "0x4000312")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private float _fadeSpeed;

	[Token(Token = "0x4000313")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float _timer;

	[Token(Token = "0x600033E")]
	[Address(RVA = "0xC53550", Offset = "0xC53550", VA = "0xC53550")]
	public Fade(string id)
	{
	}

	[Token(Token = "0x600033F")]
	[Address(RVA = "0xC53584", Offset = "0xC53584", VA = "0xC53584")]
	public void Update(float temps)
	{
	}

	[Token(Token = "0x6000340")]
	[Address(RVA = "0xC535E4", Offset = "0xC535E4", VA = "0xC535E4")]
	public void Blink(float value, float speed)
	{
	}

	[Token(Token = "0x6000341")]
	[Address(RVA = "0xC53610", Offset = "0xC53610", VA = "0xC53610")]
	public void StartFade(float value, float speed)
	{
	}
}
[Token(Token = "0x2000055")]
public class FadeManager : MonoBehaviour
{
	[Token(Token = "0x4000314")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1F1E64", Offset = "0x1F1E64")]
	[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0x1F1E64", Offset = "0x1F1E64")]
	private static FadeManager <Instance>k__BackingField;

	[Token(Token = "0x4000315")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x1F1E98", Offset = "0x1F1E98")]
	public float fade;

	[Token(Token = "0x4000316")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Color color;

	[Token(Token = "0x4000317")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool fadeActive;

	[NonSerialized]
	[Token(Token = "0x4000318")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	public bool TimeScale;

	[Token(Token = "0x4000319")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Material _material;

	[Token(Token = "0x400031A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	private static List<Fade> fades;

	[Token(Token = "0x400031B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[HideInInspector]
	public Action<FadeManager> _updateCallback;

	[Token(Token = "0x1700004D")]
	public static FadeManager Instance
	{
		[Token(Token = "0x6000343")]
		[Address(RVA = "0xC53138", Offset = "0xC53138", VA = "0xC53138")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1F1EC0", Offset = "0x1F1EC0")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000344")]
		[Address(RVA = "0xC53658", Offset = "0xC53658", VA = "0xC53658")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1F1ED0", Offset = "0x1F1ED0")]
		private set
		{
		}
	}

	[Token(Token = "0x6000342")]
	[Address(RVA = "0xC53648", Offset = "0xC53648", VA = "0xC53648")]
	public FadeManager()
	{
	}

	[Token(Token = "0x6000345")]
	[Address(RVA = "0xC536E8", Offset = "0xC536E8", VA = "0xC536E8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000346")]
	[Address(RVA = "0xC53824", Offset = "0xC53824", VA = "0xC53824")]
	private void Start()
	{
	}

	[Token(Token = "0x6000347")]
	[Address(RVA = "0xC5392C", Offset = "0xC5392C", VA = "0xC5392C")]
	private Material CreateMaterial(string shaderName)
	{
		return null;
	}

	[Token(Token = "0x6000348")]
	[Address(RVA = "0xC53B8C", Offset = "0xC53B8C", VA = "0xC53B8C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000349")]
	[Address(RVA = "0xC53C08", Offset = "0xC53C08", VA = "0xC53C08")]
	private void Update()
	{
	}

	[Token(Token = "0x600034A")]
	[Address(RVA = "0xC53EE4", Offset = "0xC53EE4", VA = "0xC53EE4")]
	public void KeepOnlyFade(string name)
	{
	}

	[Token(Token = "0x600034B")]
	[Address(RVA = "0xC531C4", Offset = "0xC531C4", VA = "0xC531C4")]
	public void StartFade(float value, float speed, string ID, bool blink = false)
	{
	}
}
[Token(Token = "0x2000056")]
[ExecuteInEditMode]
public class FlipYShader : MonoBehaviour
{
	[Token(Token = "0x400031C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public bool flip;

	[Token(Token = "0x400031D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private Material _materialFlipY;

	[Token(Token = "0x400031E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private Material _materialPassthrough;

	[Token(Token = "0x600034D")]
	[Address(RVA = "0xC57288", Offset = "0xC57288", VA = "0xC57288")]
	public FlipYShader()
	{
	}

	[Token(Token = "0x600034E")]
	[Address(RVA = "0xC57290", Offset = "0xC57290", VA = "0xC57290")]
	private void Awake()
	{
	}

	[Token(Token = "0x600034F")]
	[Address(RVA = "0xC57360", Offset = "0xC57360", VA = "0xC57360")]
	private void OnRenderImage(RenderTexture source, RenderTexture destination)
	{
	}
}
[Token(Token = "0x2000057")]
public class FlipYSwitch : MonoBehaviour
{
	[Token(Token = "0x6000350")]
	[Address(RVA = "0xC57474", Offset = "0xC57474", VA = "0xC57474")]
	public FlipYSwitch()
	{
	}
}
[Token(Token = "0x2000058")]
public class MaskedItem : MonoBehaviour
{
	[Token(Token = "0x400031F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public int Queue;

	[Token(Token = "0x6000351")]
	[Address(RVA = "0xC8EEE0", Offset = "0xC8EEE0", VA = "0xC8EEE0")]
	public MaskedItem()
	{
	}

	[Token(Token = "0x6000352")]
	[Address(RVA = "0xC8EEE8", Offset = "0xC8EEE8", VA = "0xC8EEE8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000353")]
	[Address(RVA = "0xC8EEEC", Offset = "0xC8EEEC", VA = "0xC8EEEC")]
	public void ChangeRenderQueue()
	{
	}
}
[Token(Token = "0x2000059")]
[ExecuteInEditMode]
public class PostProcessing : MonoBehaviour
{
	[Token(Token = "0x4000320")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Material material;

	[Token(Token = "0x4000321")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x1F1F00", Offset = "0x1F1F00")]
	public float Offset;

	[Token(Token = "0x4000322")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float StrenghR;

	[Token(Token = "0x4000323")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float StrenghG;

	[Token(Token = "0x4000324")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float StrenghB;

	[Token(Token = "0x6000354")]
	[Address(RVA = "0x265E4C", Offset = "0x265E4C", VA = "0x265E4C")]
	public PostProcessing()
	{
	}

	[Token(Token = "0x6000355")]
	[Address(RVA = "0x265E54", Offset = "0x265E54", VA = "0x265E54")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000356")]
	[Address(RVA = "0x265EE8", Offset = "0x265EE8", VA = "0x265EE8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000357")]
	[Address(RVA = "0x26600C", Offset = "0x26600C", VA = "0x26600C")]
	private void OnRenderImage(RenderTexture source, RenderTexture destination)
	{
	}
}
[Token(Token = "0x200005A")]
public class TestParse : MonoBehaviour
{
	[Token(Token = "0x4000325")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public string text;

	[Token(Token = "0x4000326")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public char separator;

	[Token(Token = "0x4000327")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public string[] tab;

	[Token(Token = "0x6000358")]
	[Address(RVA = "0xCBE280", Offset = "0xCBE280", VA = "0xCBE280")]
	public TestParse()
	{
	}

	[Token(Token = "0x6000359")]
	[Address(RVA = "0xCBE288", Offset = "0xCBE288", VA = "0xCBE288")]
	public void Go()
	{
	}
}
[Token(Token = "0x200005B")]
[ExecuteInEditMode]
public class UberShader : MonoBehaviour
{
	[Token(Token = "0x4000328")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Material _material;

	[Token(Token = "0x4000329")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private RenderTextureDescriptor _textureDesc;

	[Token(Token = "0x400032A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Camera _camera;

	[Token(Token = "0x400032B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public Camera _uiCamera;

	[Token(Token = "0x400032C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private RenderTexture cameraRT;

	[Token(Token = "0x400032D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private RenderTexture textureRT;

	[Token(Token = "0x400032E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Texture3D _lutTexture;

	[Token(Token = "0x400032F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static RenderTargetIdentifier texID;

	[Token(Token = "0x4000330")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private static RenderTargetIdentifier lutID;

	[Token(Token = "0x4000331")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private CommandBuffer cbRenderUber;

	[Token(Token = "0x4000332")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private CommandBuffer cbFinalBlit;

	[Token(Token = "0x4000333")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private static readonly int ID_Drawing_Color;

	[Token(Token = "0x4000334")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private static readonly int ID_Drawing_Palier1;

	[Token(Token = "0x4000335")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private static readonly int ID_Drawing_Palier2;

	[Token(Token = "0x4000336")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private static readonly int ID_Drawing_Palier3;

	[Token(Token = "0x4000337")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private static readonly int ID_Drawing_Palier4;

	[Token(Token = "0x4000338")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private static readonly int ID_Drawing_Mix;

	[Token(Token = "0x4000339")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private static readonly int ID_Drawing_MixFilter;

	[Token(Token = "0x400033A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private static readonly int ID_Drawing_ColorPreMul;

	[Token(Token = "0x400033B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private static readonly int ID_Drawing_Palier_RangeFactor;

	[Token(Token = "0x400033C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private static readonly int ID_Drawing_Palier1_Offset;

	[Token(Token = "0x400033D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private static readonly int ID_Drawing_Palier2_Offset;

	[Token(Token = "0x400033E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private static readonly int ID_Drawing_Palier3_Offset;

	[Token(Token = "0x400033F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private static readonly int ID_Drawing_Palier4_Offset;

	[Token(Token = "0x4000340")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private static readonly int ID_Color_Curves;

	[Token(Token = "0x4000341")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private static readonly int ID_Color_Saturation;

	[Token(Token = "0x4000342")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private static readonly int ID_Contour_Color;

	[Token(Token = "0x4000343")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private static readonly int ID_Contour_BgColor;

	[Token(Token = "0x4000344")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private static readonly int ID_Contour_LowThreshold;

	[Token(Token = "0x4000345")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private static readonly int ID_Contour_HighThreshold;

	[Token(Token = "0x4000346")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private static readonly int ID_Contour_DepthSensitivity;

	[Token(Token = "0x4000347")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private static readonly int ID_Contour_FallOffDepth;

	[Token(Token = "0x4000348")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private static readonly int ID_Fade_Color;

	[Token(Token = "0x4000349")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private static readonly int ID_Fade_Value;

	[Token(Token = "0x400034A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private static readonly int ID_Fade_ColorPreMul;

	[Token(Token = "0x400034B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private static readonly int ID_Color;

	[Token(Token = "0x400034C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	private static readonly int ID_BgColor;

	[Token(Token = "0x400034D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private static readonly int ID_LowThreshold;

	[Token(Token = "0x400034E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	private static readonly int ID_HighThreshold;

	[Token(Token = "0x400034F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private static readonly int ID_DepthSensitivity;

	[Token(Token = "0x4000350")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private static readonly int ID_FallOffDepth;

	[Token(Token = "0x600035A")]
	[Address(RVA = "0x3FE0F4", Offset = "0x3FE0F4", VA = "0x3FE0F4")]
	public UberShader()
	{
	}

	[Token(Token = "0x600035B")]
	[Address(RVA = "0x3FE0FC", Offset = "0x3FE0FC", VA = "0x3FE0FC")]
	private void Awake()
	{
	}

	[Token(Token = "0x600035C")]
	[Address(RVA = "0x3FE9E4", Offset = "0x3FE9E4", VA = "0x3FE9E4")]
	private void Start()
	{
	}

	[Token(Token = "0x600035D")]
	[Address(RVA = "0x3FED98", Offset = "0x3FED98", VA = "0x3FED98")]
	private void InitTextureDesc()
	{
	}

	[Token(Token = "0x600035E")]
	[Address(RVA = "0x3FEEC4", Offset = "0x3FEEC4", VA = "0x3FEEC4")]
	private void InitRendering()
	{
	}

	[Token(Token = "0x600035F")]
	[Address(RVA = "0x3FF01C", Offset = "0x3FF01C", VA = "0x3FF01C")]
	private RenderTexture CreateRT(string name)
	{
		return null;
	}

	[Token(Token = "0x6000360")]
	[Address(RVA = "0x3FF0A8", Offset = "0x3FF0A8", VA = "0x3FF0A8")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000361")]
	[Address(RVA = "0x3FE7D8", Offset = "0x3FE7D8", VA = "0x3FE7D8")]
	private Material CreateMaterial(string shaderName)
	{
		return null;
	}

	[Token(Token = "0x6000362")]
	[Address(RVA = "0x3FF118", Offset = "0x3FF118", VA = "0x3FF118")]
	public void ApplyDrawingChanges(DrawingShader input)
	{
	}

	[Token(Token = "0x6000363")]
	[Address(RVA = "0x3FF5B8", Offset = "0x3FF5B8", VA = "0x3FF5B8")]
	public void ApplyColorChanges(ColorSuite input)
	{
	}

	[Token(Token = "0x6000364")]
	[Address(RVA = "0x3FF9D4", Offset = "0x3FF9D4", VA = "0x3FF9D4")]
	private void ApplyContourChanges(Contour input)
	{
	}

	[Token(Token = "0x6000365")]
	[Address(RVA = "0x3FFE44", Offset = "0x3FFE44", VA = "0x3FFE44")]
	private void ApplyFadeChanges(FadeManager input)
	{
	}

	[Token(Token = "0x6000366")]
	[Address(RVA = "0x40007C", Offset = "0x40007C", VA = "0x40007C")]
	private void OnPreRender()
	{
	}

	[Token(Token = "0x6000367")]
	[Address(RVA = "0x4000D4", Offset = "0x4000D4", VA = "0x4000D4")]
	private void OnPostRender()
	{
	}
}
namespace Kino
{
	[Token(Token = "0x200005C")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x1F1F28", Offset = "0x1F1F28")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x1F1F28", Offset = "0x1F1F28")]
	public class Contour : MonoBehaviour
	{
		[Token(Token = "0x4000351")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		[SerializeField]
		private Color _lineColor;

		[Token(Token = "0x4000352")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private Color _backgroundColor;

		[Token(Token = "0x4000353")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x1F1FF8", Offset = "0x1F1FF8")]
		private float _lowThreshold;

		[Token(Token = "0x4000354")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x1F2030", Offset = "0x1F2030")]
		private float _highThreshold;

		[Token(Token = "0x4000355")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x1F2068", Offset = "0x1F2068")]
		private float _depthSensitivity;

		[Token(Token = "0x4000356")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x1F20A0", Offset = "0x1F20A0")]
		private float _normalSensitivity;

		[Token(Token = "0x4000357")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[SerializeField]
		private float _fallOffDepth;

		[Token(Token = "0x4000358")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[HideInInspector]
		public Action<Contour> _updateCallback;

		[Token(Token = "0x4000359")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[HideInInspector]
		public Material _material;

		[Token(Token = "0x400035A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private Shader _shader;

		[Token(Token = "0x400035B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private RenderTexture tempRT;

		[Token(Token = "0x1700004E")]
		public Color lineColor
		{
			[Token(Token = "0x600036A")]
			[Address(RVA = "0xC79FA8", Offset = "0xC79FA8", VA = "0xC79FA8")]
			get
			{
				return default(Color);
			}
			[Token(Token = "0x600036B")]
			[Address(RVA = "0xC79FBC", Offset = "0xC79FBC", VA = "0xC79FBC")]
			set
			{
			}
		}

		[Token(Token = "0x1700004F")]
		public Color backgroundColor
		{
			[Token(Token = "0x600036C")]
			[Address(RVA = "0xC79FCC", Offset = "0xC79FCC", VA = "0xC79FCC")]
			get
			{
				return default(Color);
			}
			[Token(Token = "0x600036D")]
			[Address(RVA = "0xC79FE0", Offset = "0xC79FE0", VA = "0xC79FE0")]
			set
			{
			}
		}

		[Token(Token = "0x17000050")]
		public float lowThreshold
		{
			[Token(Token = "0x600036E")]
			[Address(RVA = "0xC79FF0", Offset = "0xC79FF0", VA = "0xC79FF0")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600036F")]
			[Address(RVA = "0xC79FF8", Offset = "0xC79FF8", VA = "0xC79FF8")]
			set
			{
			}
		}

		[Token(Token = "0x17000051")]
		public float highThreshold
		{
			[Token(Token = "0x6000370")]
			[Address(RVA = "0xC7A000", Offset = "0xC7A000", VA = "0xC7A000")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000371")]
			[Address(RVA = "0xC7A008", Offset = "0xC7A008", VA = "0xC7A008")]
			set
			{
			}
		}

		[Token(Token = "0x17000052")]
		public float depthSensitivity
		{
			[Token(Token = "0x6000372")]
			[Address(RVA = "0xC7A010", Offset = "0xC7A010", VA = "0xC7A010")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000373")]
			[Address(RVA = "0xC7A018", Offset = "0xC7A018", VA = "0xC7A018")]
			set
			{
			}
		}

		[Token(Token = "0x17000053")]
		public float normalSensitivity
		{
			[Token(Token = "0x6000374")]
			[Address(RVA = "0xC7A020", Offset = "0xC7A020", VA = "0xC7A020")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000375")]
			[Address(RVA = "0xC7A028", Offset = "0xC7A028", VA = "0xC7A028")]
			set
			{
			}
		}

		[Token(Token = "0x17000054")]
		public float fallOffDepth
		{
			[Token(Token = "0x6000376")]
			[Address(RVA = "0xC7A030", Offset = "0xC7A030", VA = "0xC7A030")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000377")]
			[Address(RVA = "0xC7A038", Offset = "0xC7A038", VA = "0xC7A038")]
			set
			{
			}
		}

		[Token(Token = "0x6000369")]
		[Address(RVA = "0xC79F08", Offset = "0xC79F08", VA = "0xC79F08")]
		public Contour()
		{
		}

		[Token(Token = "0x6000378")]
		[Address(RVA = "0xC7A040", Offset = "0xC7A040", VA = "0xC7A040")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000379")]
		[Address(RVA = "0xC7A0F4", Offset = "0xC7A0F4", VA = "0xC7A0F4")]
		private void ApplyChanges()
		{
		}

		[Token(Token = "0x600037A")]
		[Address(RVA = "0xC7A480", Offset = "0xC7A480", VA = "0xC7A480")]
		private void OnPreRender()
		{
		}

		[Token(Token = "0x600037B")]
		[Address(RVA = "0xC7A504", Offset = "0xC7A504", VA = "0xC7A504")]
		private void OnPostRender()
		{
		}
	}
	[Token(Token = "0x200005D")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x1F2118", Offset = "0x1F2118")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x1F2118", Offset = "0x1F2118")]
	public class Fog : MonoBehaviour
	{
		[Token(Token = "0x400035C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		[SerializeField]
		private float _startDistance;

		[Token(Token = "0x400035D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		private bool _useRadialDistance;

		[Token(Token = "0x400035E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		[SerializeField]
		private bool _fadeToSkybox;

		[Token(Token = "0x400035F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[SerializeField]
		private Shader _shader;

		[Token(Token = "0x4000360")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Material _material;

		[Token(Token = "0x17000055")]
		public float startDistance
		{
			[Token(Token = "0x600037D")]
			[Address(RVA = "0xC7A604", Offset = "0xC7A604", VA = "0xC7A604")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600037E")]
			[Address(RVA = "0xC7A60C", Offset = "0xC7A60C", VA = "0xC7A60C")]
			set
			{
			}
		}

		[Token(Token = "0x17000056")]
		public bool useRadialDistance
		{
			[Token(Token = "0x600037F")]
			[Address(RVA = "0xC7A614", Offset = "0xC7A614", VA = "0xC7A614")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000380")]
			[Address(RVA = "0xC7A61C", Offset = "0xC7A61C", VA = "0xC7A61C")]
			set
			{
			}
		}

		[Token(Token = "0x17000057")]
		public bool fadeToSkybox
		{
			[Token(Token = "0x6000381")]
			[Address(RVA = "0xC7A624", Offset = "0xC7A624", VA = "0xC7A624")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000382")]
			[Address(RVA = "0xC7A62C", Offset = "0xC7A62C", VA = "0xC7A62C")]
			set
			{
			}
		}

		[Token(Token = "0x600037C")]
		[Address(RVA = "0xC7A5F4", Offset = "0xC7A5F4", VA = "0xC7A5F4")]
		public Fog()
		{
		}

		[Token(Token = "0x6000383")]
		[Address(RVA = "0xC7A634", Offset = "0xC7A634", VA = "0xC7A634")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000384")]
		[Address(RVA = "0xC7A6E0", Offset = "0xC7A6E0", VA = "0xC7A6E0")]
		[ImageEffectOpaque]
		private void OnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}
	}
}
namespace UnityStandardAssets.CinematicEffects
{
	[Token(Token = "0x200005E")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x1F2218", Offset = "0x1F2218")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x1F2218", Offset = "0x1F2218")]
	[ImageEffectAllowedInSceneView]
	public class AmbientOcclusion : MonoBehaviour
	{
		[Token(Token = "0x200005F")]
		private class PropertyObserver
		{
			[Token(Token = "0x400036C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			private bool _downsampling;

			[Token(Token = "0x400036D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			private OcclusionSource _occlusionSource;

			[Token(Token = "0x400036E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private bool _ambientOnly;

			[Token(Token = "0x400036F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
			private bool _debug;

			[Token(Token = "0x4000370")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			private int _pixelWidth;

			[Token(Token = "0x4000371")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private int _pixelHeight;

			[Token(Token = "0x600039E")]
			[Address(RVA = "0x4048B4", Offset = "0x4048B4", VA = "0x4048B4")]
			public PropertyObserver()
			{
			}

			[Token(Token = "0x600039F")]
			[Address(RVA = "0x406320", Offset = "0x406320", VA = "0x406320")]
			public bool CheckNeedsReset(Settings setting, Camera camera)
			{
				return default(bool);
			}

			[Token(Token = "0x60003A0")]
			[Address(RVA = "0x406410", Offset = "0x406410", VA = "0x406410")]
			public void Update(Settings setting, Camera camera)
			{
			}
		}

		[Token(Token = "0x2000060")]
		public enum SampleCount
		{
			[Token(Token = "0x4000373")]
			Lowest,
			[Token(Token = "0x4000374")]
			Low,
			[Token(Token = "0x4000375")]
			Medium,
			[Token(Token = "0x4000376")]
			High,
			[Token(Token = "0x4000377")]
			Custom
		}

		[Token(Token = "0x2000061")]
		public enum OcclusionSource
		{
			[Token(Token = "0x4000379")]
			DepthTexture,
			[Token(Token = "0x400037A")]
			DepthNormalsTexture,
			[Token(Token = "0x400037B")]
			GBuffer
		}

		[Serializable]
		[Token(Token = "0x2000062")]
		public class Settings
		{
			[Token(Token = "0x400037C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[SerializeField]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x1F2318", Offset = "0x1F2318")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1F2318", Offset = "0x1F2318")]
			public float intensity;

			[Token(Token = "0x400037D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			[SerializeField]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1F237C", Offset = "0x1F237C")]
			public float radius;

			[Token(Token = "0x400037E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[SerializeField]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1F23C4", Offset = "0x1F23C4")]
			public SampleCount sampleCount;

			[Token(Token = "0x400037F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			[SerializeField]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1F240C", Offset = "0x1F240C")]
			public int sampleCountValue;

			[Token(Token = "0x4000380")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[SerializeField]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1F2454", Offset = "0x1F2454")]
			public bool downsampling;

			[Token(Token = "0x4000381")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
			[SerializeField]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1F249C", Offset = "0x1F249C")]
			public bool ambientOnly;

			[Token(Token = "0x4000382")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			[SerializeField]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1F24E4", Offset = "0x1F24E4")]
			public OcclusionSource occlusionSource;

			[Token(Token = "0x4000383")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[SerializeField]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1F252C", Offset = "0x1F252C")]
			public bool debug;

			[Token(Token = "0x17000067")]
			public static Settings defaultSettings
			{
				[Token(Token = "0x60003A2")]
				[Address(RVA = "0x4047B8", Offset = "0x4047B8", VA = "0x4047B8")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60003A1")]
			[Address(RVA = "0x40658C", Offset = "0x40658C", VA = "0x40658C")]
			public Settings()
			{
			}
		}

		[Token(Token = "0x4000361")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		[SerializeField]
		public Settings settings;

		[Token(Token = "0x4000362")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		private Shader _aoShader;

		[Token(Token = "0x4000363")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private Material _aoMaterial;

		[Token(Token = "0x4000364")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private CommandBuffer _aoCommands;

		[Token(Token = "0x4000365")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private PropertyObserver _propertyObserver;

		[Token(Token = "0x4000366")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Mesh _quadMesh;

		[Token(Token = "0x4000367")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private int _OcclusionTexture;

		[Token(Token = "0x4000368")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int _Intensity;

		[Token(Token = "0x4000369")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private int _Radius;

		[Token(Token = "0x400036A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int _Downsample;

		[Token(Token = "0x400036B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private int _SampleCount;

		[Token(Token = "0x17000058")]
		public bool isAmbientOnlySupported
		{
			[Token(Token = "0x6000386")]
			[Address(RVA = "0x4048BC", Offset = "0x4048BC", VA = "0x4048BC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000059")]
		public bool isGBufferAvailable
		{
			[Token(Token = "0x6000387")]
			[Address(RVA = "0x4049CC", Offset = "0x4049CC", VA = "0x4049CC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700005A")]
		private float intensity
		{
			[Token(Token = "0x6000388")]
			[Address(RVA = "0x404A08", Offset = "0x404A08", VA = "0x404A08")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700005B")]
		private float radius
		{
			[Token(Token = "0x6000389")]
			[Address(RVA = "0x404A28", Offset = "0x404A28", VA = "0x404A28")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700005C")]
		private SampleCount sampleCount
		{
			[Token(Token = "0x600038A")]
			[Address(RVA = "0x404AD4", Offset = "0x404AD4", VA = "0x404AD4")]
			get
			{
				return default(SampleCount);
			}
		}

		[Token(Token = "0x1700005D")]
		private int sampleCountValue
		{
			[Token(Token = "0x600038B")]
			[Address(RVA = "0x404AF4", Offset = "0x404AF4", VA = "0x404AF4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700005E")]
		private OcclusionSource occlusionSource
		{
			[Token(Token = "0x600038C")]
			[Address(RVA = "0x404974", Offset = "0x404974", VA = "0x404974")]
			get
			{
				return default(OcclusionSource);
			}
		}

		[Token(Token = "0x1700005F")]
		private bool downsampling
		{
			[Token(Token = "0x600038D")]
			[Address(RVA = "0x404C14", Offset = "0x404C14", VA = "0x404C14")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000060")]
		private bool ambientOnly
		{
			[Token(Token = "0x600038E")]
			[Address(RVA = "0x404C34", Offset = "0x404C34", VA = "0x404C34")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000061")]
		private Shader aoShader
		{
			[Token(Token = "0x600038F")]
			[Address(RVA = "0x404C90", Offset = "0x404C90", VA = "0x404C90")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000062")]
		private Material aoMaterial
		{
			[Token(Token = "0x6000390")]
			[Address(RVA = "0x404D4C", Offset = "0x404D4C", VA = "0x404D4C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000063")]
		private CommandBuffer aoCommands
		{
			[Token(Token = "0x6000391")]
			[Address(RVA = "0x404EFC", Offset = "0x404EFC", VA = "0x404EFC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000064")]
		private Camera targetCamera
		{
			[Token(Token = "0x6000392")]
			[Address(RVA = "0x404910", Offset = "0x404910", VA = "0x404910")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000065")]
		private PropertyObserver propertyObserver
		{
			[Token(Token = "0x6000393")]
			[Address(RVA = "0x404FA4", Offset = "0x404FA4", VA = "0x404FA4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000066")]
		private Mesh quadMesh
		{
			[Token(Token = "0x6000394")]
			[Address(RVA = "0x404FAC", Offset = "0x404FAC", VA = "0x404FAC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000385")]
		[Address(RVA = "0x404734", Offset = "0x404734", VA = "0x404734")]
		public AmbientOcclusion()
		{
		}

		[Token(Token = "0x6000395")]
		[Address(RVA = "0x404FB4", Offset = "0x404FB4", VA = "0x404FB4")]
		private void BuildAOCommands()
		{
		}

		[Token(Token = "0x6000396")]
		[Address(RVA = "0x40569C", Offset = "0x40569C", VA = "0x40569C")]
		private void ExecuteAOPass(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x6000397")]
		[Address(RVA = "0x4059C0", Offset = "0x4059C0", VA = "0x4059C0")]
		private void UpdateMaterialProperties()
		{
		}

		[Token(Token = "0x6000398")]
		[Address(RVA = "0x405AC8", Offset = "0x405AC8", VA = "0x405AC8")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000399")]
		[Address(RVA = "0x405BB4", Offset = "0x405BB4", VA = "0x405BB4")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600039A")]
		[Address(RVA = "0x406120", Offset = "0x406120", VA = "0x406120")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x600039B")]
		[Address(RVA = "0x40616C", Offset = "0x40616C", VA = "0x40616C")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x600039C")]
		[Address(RVA = "0x406248", Offset = "0x406248", VA = "0x406248")]
		private void OnPreRender()
		{
		}

		[Token(Token = "0x600039D")]
		[Address(RVA = "0x4064CC", Offset = "0x4064CC", VA = "0x4064CC")]
		[ImageEffectOpaque]
		private void OnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}
	}
	[Token(Token = "0x2000063")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x1F2574", Offset = "0x1F2574")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x1F2574", Offset = "0x1F2574")]
	[ImageEffectAllowedInSceneView]
	public class Bloom : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000064")]
		public struct Settings
		{
			[Token(Token = "0x4000392")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[SerializeField]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1F2674", Offset = "0x1F2674")]
			public float threshold;

			[Token(Token = "0x4000393")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			[SerializeField]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x1F26BC", Offset = "0x1F26BC")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1F26BC", Offset = "0x1F26BC")]
			public float softKnee;

			[Token(Token = "0x4000394")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[SerializeField]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x1F271C", Offset = "0x1F271C")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1F271C", Offset = "0x1F271C")]
			public float radius;

			[Token(Token = "0x4000395")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			[SerializeField]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1F2780", Offset = "0x1F2780")]
			public float intensity;

			[Token(Token = "0x4000396")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[SerializeField]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1F27C8", Offset = "0x1F27C8")]
			public bool highQuality;

			[Token(Token = "0x4000397")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
			[SerializeField]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1F2810", Offset = "0x1F2810")]
			public bool antiFlicker;

			[Token(Token = "0x4000398")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1F2858", Offset = "0x1F2858")]
			public Texture dirtTexture;

			[Token(Token = "0x4000399")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "MinAttribute", RVA = "0x1F288C", Offset = "0x1F288C")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1F288C", Offset = "0x1F288C")]
			public float dirtIntensity;

			[Token(Token = "0x1700006A")]
			public float thresholdGamma
			{
				[Token(Token = "0x60003AB")]
				[Address(RVA = "0x4077B0", Offset = "0x4077B0", VA = "0x4077B0")]
				get
				{
					return default(float);
				}
				[Token(Token = "0x60003AA")]
				[Address(RVA = "0x407710", Offset = "0x407710", VA = "0x407710")]
				set
				{
				}
			}

			[Token(Token = "0x1700006B")]
			public float thresholdLinear
			{
				[Token(Token = "0x60003AD")]
				[Address(RVA = "0x407850", Offset = "0x407850", VA = "0x407850")]
				get
				{
					return default(float);
				}
				[Token(Token = "0x60003AC")]
				[Address(RVA = "0x407848", Offset = "0x407848", VA = "0x407848")]
				set
				{
				}
			}

			[Token(Token = "0x1700006C")]
			public static Settings defaultSettings
			{
				[Token(Token = "0x60003AE")]
				[Address(RVA = "0x406674", Offset = "0x406674", VA = "0x406674")]
				get
				{
					return default(Settings);
				}
			}
		}

		[Token(Token = "0x4000384")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		[SerializeField]
		public Settings settings;

		[Token(Token = "0x4000385")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		[HideInInspector]
		private Shader m_Shader;

		[Token(Token = "0x4000386")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private Material m_Material;

		[Token(Token = "0x4000387")]
		private const int kMaxIterations = 16;

		[Token(Token = "0x4000388")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private RenderTexture[] m_blurBuffer1;

		[Token(Token = "0x4000389")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private RenderTexture[] m_blurBuffer2;

		[Token(Token = "0x400038A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private int m_Threshold;

		[Token(Token = "0x400038B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private int m_Curve;

		[Token(Token = "0x400038C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private int m_PrefilterOffs;

		[Token(Token = "0x400038D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private int m_SampleScale;

		[Token(Token = "0x400038E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private int m_Intensity;

		[Token(Token = "0x400038F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private int m_DirtTex;

		[Token(Token = "0x4000390")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private int m_DirtIntensity;

		[Token(Token = "0x4000391")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private int m_BaseTex;

		[Token(Token = "0x17000068")]
		public Shader shader
		{
			[Token(Token = "0x60003A4")]
			[Address(RVA = "0x4066C4", Offset = "0x4066C4", VA = "0x4066C4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000069")]
		public Material material
		{
			[Token(Token = "0x60003A5")]
			[Address(RVA = "0x406780", Offset = "0x406780", VA = "0x406780")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60003A3")]
		[Address(RVA = "0x406594", Offset = "0x406594", VA = "0x406594")]
		public Bloom()
		{
		}

		[Token(Token = "0x60003A6")]
		[Address(RVA = "0x406830", Offset = "0x406830", VA = "0x406830")]
		private void Awake()
		{
		}

		[Token(Token = "0x60003A7")]
		[Address(RVA = "0x40697C", Offset = "0x40697C", VA = "0x40697C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60003A8")]
		[Address(RVA = "0x4069C8", Offset = "0x4069C8", VA = "0x4069C8")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60003A9")]
		[Address(RVA = "0x406AA8", Offset = "0x406AA8", VA = "0x406AA8")]
		private void OnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}
	}
	[Token(Token = "0x2000065")]
	public static class ImageEffectHelper
	{
		[Token(Token = "0x1700006D")]
		public static bool supportsDX11
		{
			[Token(Token = "0x60003B1")]
			[Address(RVA = "0x408388", Offset = "0x408388", VA = "0x408388")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60003AF")]
		[Address(RVA = "0x405D10", Offset = "0x405D10", VA = "0x405D10")]
		public static bool IsSupported(Shader s, bool needDepth, bool needHdr, MonoBehaviour effect)
		{
			return default(bool);
		}

		[Token(Token = "0x60003B0")]
		[Address(RVA = "0x404DFC", Offset = "0x404DFC", VA = "0x404DFC")]
		public static Material CheckShaderAndCreateMaterial(Shader s)
		{
			return null;
		}
	}
	[Token(Token = "0x2000066")]
	public sealed class MinAttribute : PropertyAttribute
	{
		[Token(Token = "0x400039A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public readonly float min;

		[Token(Token = "0x60003B2")]
		[Address(RVA = "0x40CBC4", Offset = "0x40CBC4", VA = "0x40CBC4")]
		public MinAttribute(float min)
		{
		}
	}
	[Token(Token = "0x2000067")]
	public class RenderTextureUtility
	{
		[Token(Token = "0x400039B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private List<RenderTexture> m_TemporaryRTs;

		[Token(Token = "0x60003B3")]
		[Address(RVA = "0x407A1C", Offset = "0x407A1C", VA = "0x407A1C")]
		public RenderTextureUtility()
		{
		}

		[Token(Token = "0x60003B4")]
		[Address(RVA = "0x40A2F8", Offset = "0x40A2F8", VA = "0x40A2F8")]
		public RenderTexture GetTemporaryRenderTexture(int width, int height, int depthBuffer = 0, RenderTextureFormat format = RenderTextureFormat.ARGBHalf, FilterMode filterMode = FilterMode.Bilinear)
		{
			return null;
		}

		[Token(Token = "0x60003B5")]
		[Address(RVA = "0x40A538", Offset = "0x40A538", VA = "0x40A538")]
		public void ReleaseTemporaryRenderTexture(RenderTexture rt)
		{
		}

		[Token(Token = "0x60003B6")]
		[Address(RVA = "0x408A0C", Offset = "0x408A0C", VA = "0x408A0C")]
		public void ReleaseAllTemporaryRenderTextures()
		{
		}
	}
	[Token(Token = "0x2000068")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x1F28D8", Offset = "0x1F28D8")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x1F28D8", Offset = "0x1F28D8")]
	public class DepthOfField : MonoBehaviour
	{
		[Token(Token = "0x2000069")]
		private enum Passes
		{
			[Token(Token = "0x40003BE")]
			BlurAlphaWeighted,
			[Token(Token = "0x40003BF")]
			BoxBlur,
			[Token(Token = "0x40003C0")]
			DilateFgCocFromColor,
			[Token(Token = "0x40003C1")]
			DilateFgCoc,
			[Token(Token = "0x40003C2")]
			CaptureCocExplicit,
			[Token(Token = "0x40003C3")]
			VisualizeCocExplicit,
			[Token(Token = "0x40003C4")]
			CocPrefilter,
			[Token(Token = "0x40003C5")]
			CircleBlur,
			[Token(Token = "0x40003C6")]
			CircleBlurWithDilatedFg,
			[Token(Token = "0x40003C7")]
			CircleBlurLowQuality,
			[Token(Token = "0x40003C8")]
			CircleBlowLowQualityWithDilatedFg,
			[Token(Token = "0x40003C9")]
			MergeExplicit,
			[Token(Token = "0x40003CA")]
			ShapeLowQuality,
			[Token(Token = "0x40003CB")]
			ShapeLowQualityDilateFg,
			[Token(Token = "0x40003CC")]
			ShapeLowQualityMerge,
			[Token(Token = "0x40003CD")]
			ShapeLowQualityMergeDilateFg,
			[Token(Token = "0x40003CE")]
			ShapeMediumQuality,
			[Token(Token = "0x40003CF")]
			ShapeMediumQualityDilateFg,
			[Token(Token = "0x40003D0")]
			ShapeMediumQualityMerge,
			[Token(Token = "0x40003D1")]
			ShapeMediumQualityMergeDilateFg,
			[Token(Token = "0x40003D2")]
			ShapeHighQuality,
			[Token(Token = "0x40003D3")]
			ShapeHighQualityDilateFg,
			[Token(Token = "0x40003D4")]
			ShapeHighQualityMerge,
			[Token(Token = "0x40003D5")]
			ShapeHighQualityMergeDilateFg
		}

		[Token(Token = "0x200006A")]
		private enum MedianPasses
		{
			[Token(Token = "0x40003D7")]
			Median3,
			[Token(Token = "0x40003D8")]
			Median3X3
		}

		[Token(Token = "0x200006B")]
		private enum BokehTexturesPasses
		{
			[Token(Token = "0x40003DA")]
			Apply,
			[Token(Token = "0x40003DB")]
			Collect
		}

		[Token(Token = "0x200006C")]
		public enum TweakMode
		{
			[Token(Token = "0x40003DD")]
			Range,
			[Token(Token = "0x40003DE")]
			Explicit
		}

		[Token(Token = "0x200006D")]
		public enum ApertureShape
		{
			[Token(Token = "0x40003E0")]
			Circular,
			[Token(Token = "0x40003E1")]
			Hexagonal,
			[Token(Token = "0x40003E2")]
			Octogonal
		}

		[Token(Token = "0x200006E")]
		public enum QualityPreset
		{
			[Token(Token = "0x40003E4")]
			Low,
			[Token(Token = "0x40003E5")]
			Medium,
			[Token(Token = "0x40003E6")]
			High
		}

		[Token(Token = "0x200006F")]
		public enum FilterQuality
		{
			[Token(Token = "0x40003E8")]
			None,
			[Token(Token = "0x40003E9")]
			Normal,
			[Token(Token = "0x40003EA")]
			High
		}

		[Serializable]
		[Token(Token = "0x2000070")]
		public struct GlobalSettings
		{
			[Token(Token = "0x40003EB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1F29C8", Offset = "0x1F29C8")]
			public bool visualizeFocus;

			[Token(Token = "0x40003EC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1F29FC", Offset = "0x1F29FC")]
			public TweakMode tweakMode;

			[Token(Token = "0x40003ED")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1F2A30", Offset = "0x1F2A30")]
			public QualityPreset filteringQuality;

			[Token(Token = "0x40003EE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1F2A64", Offset = "0x1F2A64")]
			public ApertureShape apertureShape;

			[Token(Token = "0x40003EF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x1F2A98", Offset = "0x1F2A98")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1F2A98", Offset = "0x1F2A98")]
			public float apertureOrientation;

			[Token(Token = "0x17000077")]
			public static GlobalSettings defaultSettings
			{
				[Token(Token = "0x60003CF")]
				[Address(RVA = "0x407964", Offset = "0x407964", VA = "0x407964")]
				get
				{
					return default(GlobalSettings);
				}
			}
		}

		[Serializable]
		[Token(Token = "0x2000071")]
		public struct QualitySettings
		{
			[Token(Token = "0x40003F0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1F2AEC", Offset = "0x1F2AEC")]
			public bool prefilterBlur;

			[Token(Token = "0x40003F1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1F2B20", Offset = "0x1F2B20")]
			public FilterQuality medianFilter;

			[Token(Token = "0x40003F2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1F2B54", Offset = "0x1F2B54")]
			public bool dilateNearBlur;

			[Token(Token = "0x40003F3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static QualitySettings[] presetQualitySettings;
		}

		[Serializable]
		[Token(Token = "0x2000072")]
		public struct FocusSettings
		{
			[Token(Token = "0x40003F4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1F2B88", Offset = "0x1F2B88")]
			public Transform transform;

			[Token(Token = "0x40003F5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			[AttributeAttribute(Name = "MinAttribute", RVA = "0x1F2BBC", Offset = "0x1F2BBC")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1F2BBC", Offset = "0x1F2BBC")]
			public float focusPlane;

			[Token(Token = "0x40003F6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[AttributeAttribute(Name = "MinAttribute", RVA = "0x1F2C08", Offset = "0x1F2C08")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1F2C08", Offset = "0x1F2C08")]
			public float range;

			[Token(Token = "0x40003F7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			[AttributeAttribute(Name = "MinAttribute", RVA = "0x1F2C58", Offset = "0x1F2C58")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1F2C58", Offset = "0x1F2C58")]
			public float nearPlane;

			[Token(Token = "0x40003F8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "MinAttribute", RVA = "0x1F2CA4", Offset = "0x1F2CA4")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1F2CA4", Offset = "0x1F2CA4")]
			public float nearFalloff;

			[Token(Token = "0x40003F9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			[AttributeAttribute(Name = "MinAttribute", RVA = "0x1F2CF0", Offset = "0x1F2CF0")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1F2CF0", Offset = "0x1F2CF0")]
			public float farPlane;

			[Token(Token = "0x40003FA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "MinAttribute", RVA = "0x1F2D3C", Offset = "0x1F2D3C")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1F2D3C", Offset = "0x1F2D3C")]
			public float farFalloff;

			[Token(Token = "0x40003FB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x1F2D88", Offset = "0x1F2D88")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1F2D88", Offset = "0x1F2D88")]
			public float nearBlurRadius;

			[Token(Token = "0x40003FC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x1F2DDC", Offset = "0x1F2DDC")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1F2DDC", Offset = "0x1F2DDC")]
			public float farBlurRadius;

			[Token(Token = "0x17000078")]
			public static FocusSettings defaultSettings
			{
				[Token(Token = "0x60003D1")]
				[Address(RVA = "0x4079A0", Offset = "0x4079A0", VA = "0x4079A0")]
				get
				{
					return default(FocusSettings);
				}
			}
		}

		[Serializable]
		[Token(Token = "0x2000073")]
		public struct BokehTextureSettings
		{
			[Token(Token = "0x40003FD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1F2E30", Offset = "0x1F2E30")]
			public Texture2D texture;

			[Token(Token = "0x40003FE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x1F2E64", Offset = "0x1F2E64")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1F2E64", Offset = "0x1F2E64")]
			public float scale;

			[Token(Token = "0x40003FF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x1F2EBC", Offset = "0x1F2EBC")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1F2EBC", Offset = "0x1F2EBC")]
			public float intensity;

			[Token(Token = "0x4000400")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x1F2F14", Offset = "0x1F2F14")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1F2F14", Offset = "0x1F2F14")]
			public float threshold;

			[Token(Token = "0x4000401")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x1F2F6C", Offset = "0x1F2F6C")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1F2F6C", Offset = "0x1F2F6C")]
			public float spawnHeuristic;

			[Token(Token = "0x17000079")]
			public static BokehTextureSettings defaultSettings
			{
				[Token(Token = "0x60003D2")]
				[Address(RVA = "0x4079F4", Offset = "0x4079F4", VA = "0x4079F4")]
				get
				{
					return default(BokehTextureSettings);
				}
			}
		}

		[Token(Token = "0x400039C")]
		private const float kMaxBlur = 40f;

		[Token(Token = "0x400039D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public GlobalSettings settings;

		[Token(Token = "0x400039E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public FocusSettings focus;

		[Token(Token = "0x400039F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public BokehTextureSettings bokehTexture;

		[Token(Token = "0x40003A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private Shader m_FilmicDepthOfFieldShader;

		[Token(Token = "0x40003A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[SerializeField]
		private Shader m_MedianFilterShader;

		[Token(Token = "0x40003A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private Shader m_TextureBokehShader;

		[Token(Token = "0x40003A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private RenderTextureUtility m_RTU;

		[Token(Token = "0x40003A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Material m_FilmicDepthOfFieldMaterial;

		[Token(Token = "0x40003A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private Material m_MedianFilterMaterial;

		[Token(Token = "0x40003A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Material m_TextureBokehMaterial;

		[Token(Token = "0x40003A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private ComputeBuffer m_ComputeBufferDrawArgs;

		[Token(Token = "0x40003A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private ComputeBuffer m_ComputeBufferPoints;

		[Token(Token = "0x40003A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private QualitySettings m_CurrentQualitySettings;

		[Token(Token = "0x40003AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private float m_LastApertureOrientation;

		[Token(Token = "0x40003AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private Vector4 m_OctogonalBokehDirection1;

		[Token(Token = "0x40003AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		private Vector4 m_OctogonalBokehDirection2;

		[Token(Token = "0x40003AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		private Vector4 m_OctogonalBokehDirection3;

		[Token(Token = "0x40003AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		private Vector4 m_OctogonalBokehDirection4;

		[Token(Token = "0x40003AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		private Vector4 m_HexagonalBokehDirection1;

		[Token(Token = "0x40003B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		private Vector4 m_HexagonalBokehDirection2;

		[Token(Token = "0x40003B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		private Vector4 m_HexagonalBokehDirection3;

		[Token(Token = "0x40003B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
		private int m_BlurParams;

		[Token(Token = "0x40003B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		private int m_BlurCoe;

		[Token(Token = "0x40003B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
		private int m_Offsets;

		[Token(Token = "0x40003B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		private int m_BlurredColor;

		[Token(Token = "0x40003B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
		private int m_SpawnHeuristic;

		[Token(Token = "0x40003B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		private int m_BokehParams;

		[Token(Token = "0x40003B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
		private int m_Convolved_TexelSize;

		[Token(Token = "0x40003B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		private int m_SecondTex;

		[Token(Token = "0x40003BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
		private int m_ThirdTex;

		[Token(Token = "0x40003BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		private int m_MainTex;

		[Token(Token = "0x40003BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
		private int m_Screen;

		[Token(Token = "0x1700006E")]
		public Shader filmicDepthOfFieldShader
		{
			[Token(Token = "0x60003B8")]
			[Address(RVA = "0x407AA8", Offset = "0x407AA8", VA = "0x407AA8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700006F")]
		public Shader medianFilterShader
		{
			[Token(Token = "0x60003B9")]
			[Address(RVA = "0x407B64", Offset = "0x407B64", VA = "0x407B64")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000070")]
		public Shader textureBokehShader
		{
			[Token(Token = "0x60003BA")]
			[Address(RVA = "0x407C20", Offset = "0x407C20", VA = "0x407C20")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000071")]
		public Material filmicDepthOfFieldMaterial
		{
			[Token(Token = "0x60003BB")]
			[Address(RVA = "0x407CDC", Offset = "0x407CDC", VA = "0x407CDC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000072")]
		public Material medianFilterMaterial
		{
			[Token(Token = "0x60003BC")]
			[Address(RVA = "0x407D8C", Offset = "0x407D8C", VA = "0x407D8C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000073")]
		public Material textureBokehMaterial
		{
			[Token(Token = "0x60003BD")]
			[Address(RVA = "0x407E3C", Offset = "0x407E3C", VA = "0x407E3C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000074")]
		public ComputeBuffer computeBufferDrawArgs
		{
			[Token(Token = "0x60003BE")]
			[Address(RVA = "0x407EEC", Offset = "0x407EEC", VA = "0x407EEC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000075")]
		public ComputeBuffer computeBufferPoints
		{
			[Token(Token = "0x60003BF")]
			[Address(RVA = "0x407FEC", Offset = "0x407FEC", VA = "0x407FEC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000076")]
		private bool shouldPerformBokeh
		{
			[Token(Token = "0x60003CB")]
			[Address(RVA = "0x40A428", Offset = "0x40A428", VA = "0x40A428")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60003B7")]
		[Address(RVA = "0x407858", Offset = "0x407858", VA = "0x407858")]
		public DepthOfField()
		{
		}

		[Token(Token = "0x60003C0")]
		[Address(RVA = "0x40808C", Offset = "0x40808C", VA = "0x40808C")]
		private void Awake()
		{
		}

		[Token(Token = "0x60003C1")]
		[Address(RVA = "0x408238", Offset = "0x408238", VA = "0x408238")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60003C2")]
		[Address(RVA = "0x4087A8", Offset = "0x4087A8", VA = "0x4087A8")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60003C3")]
		[Address(RVA = "0x408AEC", Offset = "0x408AEC", VA = "0x408AEC")]
		[ImageEffectOpaque]
		private void OnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x60003C4")]
		[Address(RVA = "0x4090B4", Offset = "0x4090B4", VA = "0x4090B4")]
		private void DoDepthOfField(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x60003C5")]
		[Address(RVA = "0x40A898", Offset = "0x40A898", VA = "0x40A898")]
		private void DoHexagonalBlur(RenderTexture blurredFgCoc, ref RenderTexture src, ref RenderTexture dst, float maxRadius)
		{
		}

		[Token(Token = "0x60003C6")]
		[Address(RVA = "0x40AC20", Offset = "0x40AC20", VA = "0x40AC20")]
		private void DoOctogonalBlur(RenderTexture blurredFgCoc, ref RenderTexture src, ref RenderTexture dst, float maxRadius)
		{
		}

		[Token(Token = "0x60003C7")]
		[Address(RVA = "0x40A70C", Offset = "0x40A70C", VA = "0x40A70C")]
		private void DoCircularBlur(RenderTexture blurredFgCoc, ref RenderTexture src, ref RenderTexture dst, float maxRadius)
		{
		}

		[Token(Token = "0x60003C8")]
		[Address(RVA = "0x408D9C", Offset = "0x408D9C", VA = "0x408D9C")]
		private void ComputeCocParameters(out Vector4 blurParams, out Vector4 blurCoe)
		{
		}

		[Token(Token = "0x60003C9")]
		[Address(RVA = "0x4089C8", Offset = "0x4089C8", VA = "0x4089C8")]
		private void ReleaseComputeResources()
		{
		}

		[Token(Token = "0x60003CA")]
		[Address(RVA = "0x4083C0", Offset = "0x4083C0", VA = "0x4083C0")]
		private void ComputeBlurDirections(bool force)
		{
		}

		[Token(Token = "0x60003CC")]
		[Address(RVA = "0x40B168", Offset = "0x40B168", VA = "0x40B168")]
		private static void Rotate2D(ref Vector4 direction, float cosinus, float sinus)
		{
		}

		[Token(Token = "0x60003CD")]
		[Address(RVA = "0x40A524", Offset = "0x40A524", VA = "0x40A524")]
		private static void SwapRenderTexture(ref RenderTexture src, ref RenderTexture dst)
		{
		}

		[Token(Token = "0x60003CE")]
		[Address(RVA = "0x40B01C", Offset = "0x40B01C", VA = "0x40B01C")]
		private static void GetDirectionalBlurPassesFromRadius(RenderTexture blurredFgCoc, float maxRadius, out int blurPass, out int blurAndMergePass)
		{
		}
	}
	[Token(Token = "0x2000074")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x1F2FC0", Offset = "0x1F2FC0")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x1F2FC0", Offset = "0x1F2FC0")]
	public class LensAberrations : MonoBehaviour
	{
		[Token(Token = "0x2000075")]
		[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0x1F30B0", Offset = "0x1F30B0")]
		public class SettingsGroup : Attribute
		{
			[Token(Token = "0x60003DA")]
			[Address(RVA = "0x40CAFC", Offset = "0x40CAFC", VA = "0x40CAFC")]
			public SettingsGroup()
			{
			}
		}

		[Token(Token = "0x2000076")]
		[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0x1F30C4", Offset = "0x1F30C4")]
		public class AdvancedSetting : Attribute
		{
			[Token(Token = "0x60003DB")]
			[Address(RVA = "0x40CA10", Offset = "0x40CA10", VA = "0x40CA10")]
			public AdvancedSetting()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000077")]
		public struct DistortionSettings
		{
			[Token(Token = "0x4000412")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public bool enabled;

			[Token(Token = "0x4000413")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x1F30D8", Offset = "0x1F30D8")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1F30D8", Offset = "0x1F30D8")]
			public float amount;

			[Token(Token = "0x4000414")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x1F3130", Offset = "0x1F3130")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1F3130", Offset = "0x1F3130")]
			public float centerX;

			[Token(Token = "0x4000415")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x1F3184", Offset = "0x1F3184")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1F3184", Offset = "0x1F3184")]
			public float centerY;

			[Token(Token = "0x4000416")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x1F31D8", Offset = "0x1F31D8")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1F31D8", Offset = "0x1F31D8")]
			public float amountX;

			[Token(Token = "0x4000417")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x1F3228", Offset = "0x1F3228")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1F3228", Offset = "0x1F3228")]
			public float amountY;

			[Token(Token = "0x4000418")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x1F3278", Offset = "0x1F3278")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1F3278", Offset = "0x1F3278")]
			public float scale;

			[Token(Token = "0x1700007C")]
			public static DistortionSettings defaultSettings
			{
				[Token(Token = "0x60003DC")]
				[Address(RVA = "0x40B564", Offset = "0x40B564", VA = "0x40B564")]
				get
				{
					return default(DistortionSettings);
				}
			}
		}

		[Serializable]
		[Token(Token = "0x2000078")]
		public struct VignetteSettings
		{
			[Token(Token = "0x4000419")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public bool enabled;

			[Token(Token = "0x400041A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			[AttributeAttribute(Name = "ColorUsageAttribute", RVA = "0x1F32D0", Offset = "0x1F32D0")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1F32D0", Offset = "0x1F32D0")]
			public Color color;

			[Token(Token = "0x400041B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1F331C", Offset = "0x1F331C")]
			public Vector2 center;

			[Token(Token = "0x400041C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x1F3350", Offset = "0x1F3350")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1F3350", Offset = "0x1F3350")]
			public float intensity;

			[Token(Token = "0x400041D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x1F33A4", Offset = "0x1F33A4")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1F33A4", Offset = "0x1F33A4")]
			public float smoothness;

			[Token(Token = "0x400041E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			[AdvancedSetting]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x1F33FC", Offset = "0x1F33FC")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1F33FC", Offset = "0x1F33FC")]
			public float roundness;

			[Token(Token = "0x400041F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x1F345C", Offset = "0x1F345C")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1F345C", Offset = "0x1F345C")]
			public float blur;

			[Token(Token = "0x4000420")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x1F34AC", Offset = "0x1F34AC")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1F34AC", Offset = "0x1F34AC")]
			public float desaturate;

			[Token(Token = "0x1700007D")]
			public static VignetteSettings defaultSettings
			{
				[Token(Token = "0x60003DD")]
				[Address(RVA = "0x40B5AC", Offset = "0x40B5AC", VA = "0x40B5AC")]
				get
				{
					return default(VignetteSettings);
				}
			}
		}

		[Serializable]
		[Token(Token = "0x2000079")]
		public struct ChromaticAberrationSettings
		{
			[Token(Token = "0x4000421")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public bool enabled;

			[Token(Token = "0x4000422")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			[AttributeAttribute(Name = "ColorUsageAttribute", RVA = "0x1F34FC", Offset = "0x1F34FC")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1F34FC", Offset = "0x1F34FC")]
			public Color color;

			[Token(Token = "0x4000423")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x1F3548", Offset = "0x1F3548")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1F3548", Offset = "0x1F3548")]
			public float amount;

			[Token(Token = "0x1700007E")]
			public static ChromaticAberrationSettings defaultSettings
			{
				[Token(Token = "0x60003DE")]
				[Address(RVA = "0x40B67C", Offset = "0x40B67C", VA = "0x40B67C")]
				get
				{
					return default(ChromaticAberrationSettings);
				}
			}
		}

		[Token(Token = "0x200007A")]
		private enum Pass
		{
			[Token(Token = "0x4000425")]
			BlurPrePass,
			[Token(Token = "0x4000426")]
			Chroma,
			[Token(Token = "0x4000427")]
			Distort,
			[Token(Token = "0x4000428")]
			Vignette,
			[Token(Token = "0x4000429")]
			ChromaDistort,
			[Token(Token = "0x400042A")]
			ChromaVignette,
			[Token(Token = "0x400042B")]
			DistortVignette,
			[Token(Token = "0x400042C")]
			ChromaDistortVignette
		}

		[Token(Token = "0x4000402")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		[SettingsGroup]
		public DistortionSettings distortion;

		[Token(Token = "0x4000403")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SettingsGroup]
		public VignetteSettings vignette;

		[Token(Token = "0x4000404")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SettingsGroup]
		public ChromaticAberrationSettings chromaticAberration;

		[Token(Token = "0x4000405")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private Shader m_Shader;

		[Token(Token = "0x4000406")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private Material m_Material;

		[Token(Token = "0x4000407")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private RenderTextureUtility m_RTU;

		[Token(Token = "0x4000408")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private int m_DistCenterScale;

		[Token(Token = "0x4000409")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private int m_DistAmount;

		[Token(Token = "0x400040A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private int m_ChromaticAberration;

		[Token(Token = "0x400040B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private int m_VignetteColor;

		[Token(Token = "0x400040C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private int m_BlurPass;

		[Token(Token = "0x400040D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private int m_BlurTex;

		[Token(Token = "0x400040E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		private int m_VignetteBlur;

		[Token(Token = "0x400040F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private int m_VignetteDesat;

		[Token(Token = "0x4000410")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		private int m_VignetteCenter;

		[Token(Token = "0x4000411")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private int m_VignetteSettings;

		[Token(Token = "0x1700007A")]
		public Shader shader
		{
			[Token(Token = "0x60003D4")]
			[Address(RVA = "0x40B6CC", Offset = "0x40B6CC", VA = "0x40B6CC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700007B")]
		public Material material
		{
			[Token(Token = "0x60003D5")]
			[Address(RVA = "0x40B788", Offset = "0x40B788", VA = "0x40B788")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60003D3")]
		[Address(RVA = "0x40B49C", Offset = "0x40B49C", VA = "0x40B49C")]
		public LensAberrations()
		{
		}

		[Token(Token = "0x60003D6")]
		[Address(RVA = "0x40B838", Offset = "0x40B838", VA = "0x40B838")]
		private void Awake()
		{
		}

		[Token(Token = "0x60003D7")]
		[Address(RVA = "0x40B9C4", Offset = "0x40B9C4", VA = "0x40B9C4")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60003D8")]
		[Address(RVA = "0x40BA6C", Offset = "0x40BA6C", VA = "0x40BA6C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60003D9")]
		[Address(RVA = "0x40BB64", Offset = "0x40BB64", VA = "0x40BB64")]
		private void OnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}
	}
	[Token(Token = "0x200007B")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x1F35A0", Offset = "0x1F35A0")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x1F35A0", Offset = "0x1F35A0")]
	public class MotionBlur : MonoBehaviour
	{
		[Token(Token = "0x200007C")]
		private class FrameBlendingFilter
		{
			[Token(Token = "0x200007D")]
			private struct Frame
			{
				[Token(Token = "0x4000443")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
				public RenderTexture lumaTexture;

				[Token(Token = "0x4000444")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
				public RenderTexture chromaTexture;

				[Token(Token = "0x4000445")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
				public float time;

				[Token(Token = "0x4000446")]
				[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
				private RenderBuffer[] _mrt;

				[Token(Token = "0x60003EE")]
				[Address(RVA = "0x40EAA8", Offset = "0x40EAA8", VA = "0x40EAA8")]
				public float CalculateWeight(float strength, float currentTime)
				{
					return default(float);
				}

				[Token(Token = "0x60003EF")]
				[Address(RVA = "0x40EAB0", Offset = "0x40EAB0", VA = "0x40EAB0")]
				public void Release()
				{
				}

				[Token(Token = "0x60003F0")]
				[Address(RVA = "0x40EAB8", Offset = "0x40EAB8", VA = "0x40EAB8")]
				public void MakeRecord(RenderTexture source, Material material)
				{
				}

				[Token(Token = "0x60003F1")]
				[Address(RVA = "0x40EAC0", Offset = "0x40EAC0", VA = "0x40EAC0")]
				public void MakeRecordRaw(RenderTexture source, RenderTextureFormat format)
				{
				}
			}

			[Token(Token = "0x4000432")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			private bool _useCompression;

			[Token(Token = "0x4000433")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			private RenderTextureFormat _rawTextureFormat;

			[Token(Token = "0x4000434")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private Material _material;

			[Token(Token = "0x4000435")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			private Frame[] _frameList;

			[Token(Token = "0x4000436")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private int _lastFrameCount;

			[Token(Token = "0x4000437")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			private int _History1LumaTex;

			[Token(Token = "0x4000438")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private int _History2LumaTex;

			[Token(Token = "0x4000439")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			private int _History3LumaTex;

			[Token(Token = "0x400043A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private int _History4LumaTex;

			[Token(Token = "0x400043B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private int _History1ChromaTex;

			[Token(Token = "0x400043C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private int _History2ChromaTex;

			[Token(Token = "0x400043D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private int _History3ChromaTex;

			[Token(Token = "0x400043E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private int _History4ChromaTex;

			[Token(Token = "0x400043F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private int _History1Weight;

			[Token(Token = "0x4000440")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private int _History2Weight;

			[Token(Token = "0x4000441")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			private int _History3Weight;

			[Token(Token = "0x4000442")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private int _History4Weight;

			[Token(Token = "0x60003E6")]
			[Address(RVA = "0x40CEA0", Offset = "0x40CEA0", VA = "0x40CEA0")]
			public FrameBlendingFilter()
			{
			}

			[Token(Token = "0x60003E7")]
			[Address(RVA = "0x40D0C8", Offset = "0x40D0C8", VA = "0x40D0C8")]
			public void Release()
			{
			}

			[Token(Token = "0x60003E8")]
			[Address(RVA = "0x40DF90", Offset = "0x40DF90", VA = "0x40DF90")]
			public void PushFrame(RenderTexture source)
			{
			}

			[Token(Token = "0x60003E9")]
			[Address(RVA = "0x40DBF0", Offset = "0x40DBF0", VA = "0x40DBF0")]
			public void BlendFrames(float strength, RenderTexture source, RenderTexture destination)
			{
			}

			[Token(Token = "0x60003EA")]
			[Address(RVA = "0x40E070", Offset = "0x40E070", VA = "0x40E070")]
			private static bool CheckSupportCompression()
			{
				return default(bool);
			}

			[Token(Token = "0x60003EB")]
			[Address(RVA = "0x40E0CC", Offset = "0x40E0CC", VA = "0x40E0CC")]
			private static RenderTextureFormat GetPreferredRenderTextureFormat()
			{
				return default(RenderTextureFormat);
			}

			[Token(Token = "0x60003EC")]
			[Address(RVA = "0x40E8CC", Offset = "0x40E8CC", VA = "0x40E8CC")]
			private Frame GetFrameRelative(int offset)
			{
				return default(Frame);
			}

			[Token(Token = "0x60003ED")]
			[Address(RVA = "0x40E1B8", Offset = "0x40E1B8", VA = "0x40E1B8")]
			private void FetchUniformLocations()
			{
			}
		}

		[Token(Token = "0x200007E")]
		private class ReconstructionFilter
		{
			[Token(Token = "0x4000447")]
			private const float kMaxBlurRadius = 5f;

			[Token(Token = "0x4000448")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			private Material _material;

			[Token(Token = "0x4000449")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			private bool _unroll;

			[Token(Token = "0x400044A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private RenderTextureFormat _vectorRTFormat;

			[Token(Token = "0x400044B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			private RenderTextureFormat _packedRTFormat;

			[Token(Token = "0x400044C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private int _VelocityScale;

			[Token(Token = "0x400044D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			private int _MaxBlurRadius;

			[Token(Token = "0x400044E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private int _TileMaxOffs;

			[Token(Token = "0x400044F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			private int _TileMaxLoop;

			[Token(Token = "0x4000450")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private int _LoopCount;

			[Token(Token = "0x4000451")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private int _NeighborMaxTex;

			[Token(Token = "0x4000452")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private int _VelocityTex;

			[Token(Token = "0x60003F2")]
			[Address(RVA = "0x40CD60", Offset = "0x40CD60", VA = "0x40CD60")]
			public ReconstructionFilter()
			{
			}

			[Token(Token = "0x60003F3")]
			[Address(RVA = "0x40CFE8", Offset = "0x40CFE8", VA = "0x40CFE8")]
			public void Release()
			{
			}

			[Token(Token = "0x60003F4")]
			[Address(RVA = "0x40D5E0", Offset = "0x40D5E0", VA = "0x40D5E0")]
			public void ProcessImage(float shutterAngle, int sampleCount, RenderTexture source, RenderTexture destination)
			{
			}

			[Token(Token = "0x60003F5")]
			[Address(RVA = "0x40EAC8", Offset = "0x40EAC8", VA = "0x40EAC8")]
			private bool CheckTextureFormatSupport()
			{
				return default(bool);
			}

			[Token(Token = "0x60003F6")]
			[Address(RVA = "0x40EC44", Offset = "0x40EC44", VA = "0x40EC44")]
			private RenderTexture GetTemporaryRT(Texture source, int divider, RenderTextureFormat format)
			{
				return null;
			}

			[Token(Token = "0x60003F7")]
			[Address(RVA = "0x40ECFC", Offset = "0x40ECFC", VA = "0x40ECFC")]
			private void ReleaseTemporaryRT(RenderTexture rt)
			{
			}

			[Token(Token = "0x60003F8")]
			[Address(RVA = "0x40EB18", Offset = "0x40EB18", VA = "0x40EB18")]
			private void FetchUniformLocations()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x200007F")]
		public class Settings
		{
			[Token(Token = "0x4000453")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[SerializeField]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x1F3670", Offset = "0x1F3670")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1F3670", Offset = "0x1F3670")]
			public float shutterAngle;

			[Token(Token = "0x4000454")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			[SerializeField]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1F36D4", Offset = "0x1F36D4")]
			public int sampleCount;

			[Token(Token = "0x4000455")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[SerializeField]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x1F371C", Offset = "0x1F371C")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1F371C", Offset = "0x1F371C")]
			public float frameBlending;

			[Token(Token = "0x17000080")]
			public static Settings defaultSettings
			{
				[Token(Token = "0x60003FA")]
				[Address(RVA = "0x40CC08", Offset = "0x40CC08", VA = "0x40CC08")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60003F9")]
			[Address(RVA = "0x40ED08", Offset = "0x40ED08", VA = "0x40ED08")]
			public Settings()
			{
			}
		}

		[Token(Token = "0x400042D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		[SerializeField]
		private Settings _settings;

		[Token(Token = "0x400042E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		private Shader _reconstructionShader;

		[Token(Token = "0x400042F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[SerializeField]
		private Shader _frameBlendingShader;

		[Token(Token = "0x4000430")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private ReconstructionFilter _reconstructionFilter;

		[Token(Token = "0x4000431")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private FrameBlendingFilter _frameBlendingFilter;

		[Token(Token = "0x1700007F")]
		public Settings settings
		{
			[Token(Token = "0x60003E0")]
			[Address(RVA = "0x40CCC4", Offset = "0x40CCC4", VA = "0x40CCC4")]
			get
			{
				return null;
			}
			[Token(Token = "0x60003E1")]
			[Address(RVA = "0x40CCCC", Offset = "0x40CCCC", VA = "0x40CCCC")]
			set
			{
			}
		}

		[Token(Token = "0x60003DF")]
		[Address(RVA = "0x40CBE4", Offset = "0x40CBE4", VA = "0x40CBE4")]
		public MotionBlur()
		{
		}

		[Token(Token = "0x60003E2")]
		[Address(RVA = "0x40CCD4", Offset = "0x40CCD4", VA = "0x40CCD4")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60003E3")]
		[Address(RVA = "0x40CF9C", Offset = "0x40CF9C", VA = "0x40CF9C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60003E4")]
		[Address(RVA = "0x40D1DC", Offset = "0x40D1DC", VA = "0x40D1DC")]
		private void Update()
		{
		}

		[Token(Token = "0x60003E5")]
		[Address(RVA = "0x40D2A8", Offset = "0x40D2A8", VA = "0x40D2A8")]
		private void OnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}
	}
	[Token(Token = "0x2000080")]
	[ExecuteInEditMode]
	[ImageEffectAllowedInSceneView]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x1F377C", Offset = "0x1F377C")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x1F377C", Offset = "0x1F377C")]
	public class ScreenSpaceReflection : MonoBehaviour
	{
		[Token(Token = "0x2000081")]
		public enum SSRResolution
		{
			[Token(Token = "0x4000484")]
			High = 0,
			[Token(Token = "0x4000485")]
			Low = 2
		}

		[Token(Token = "0x2000082")]
		public enum SSRReflectionBlendType
		{
			[Token(Token = "0x4000487")]
			PhysicallyBased,
			[Token(Token = "0x4000488")]
			Additive
		}

		[Serializable]
		[Token(Token = "0x2000083")]
		public struct SSRSettings
		{
			[Token(Token = "0x2000084")]
			[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0x1F395C", Offset = "0x1F395C")]
			public class LayoutAttribute : PropertyAttribute
			{
				[Token(Token = "0x6000405")]
				[Address(RVA = "0x411F44", Offset = "0x411F44", VA = "0x411F44")]
				public LayoutAttribute()
				{
				}
			}

			[Token(Token = "0x4000489")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[Layout]
			public ReflectionSettings reflectionSettings;

			[Token(Token = "0x400048A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[Layout]
			public IntensitySettings intensitySettings;

			[Token(Token = "0x400048B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			[Layout]
			public ScreenEdgeMask screenEdgeMask;

			[Token(Token = "0x400048C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private static readonly SSRSettings s_Default;

			[Token(Token = "0x17000084")]
			public static SSRSettings defaultSettings
			{
				[Token(Token = "0x6000403")]
				[Address(RVA = "0x40EE10", Offset = "0x40EE10", VA = "0x40EE10")]
				get
				{
					return default(SSRSettings);
				}
			}
		}

		[Serializable]
		[Token(Token = "0x2000085")]
		public struct IntensitySettings
		{
			[Token(Token = "0x400048D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1F3970", Offset = "0x1F3970")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x1F3970", Offset = "0x1F3970")]
			public float reflectionMultiplier;

			[Token(Token = "0x400048E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1F39C0", Offset = "0x1F39C0")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x1F39C0", Offset = "0x1F39C0")]
			public float fadeDistance;

			[Token(Token = "0x400048F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1F3A14", Offset = "0x1F3A14")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x1F3A14", Offset = "0x1F3A14")]
			public float fresnelFade;

			[Token(Token = "0x4000490")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1F3A64", Offset = "0x1F3A64")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x1F3A64", Offset = "0x1F3A64")]
			public float fresnelFadePower;
		}

		[Serializable]
		[Token(Token = "0x2000086")]
		public struct ReflectionSettings
		{
			[Token(Token = "0x4000491")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1F3ABC", Offset = "0x1F3ABC")]
			public SSRReflectionBlendType blendType;

			[Token(Token = "0x4000492")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1F3AF0", Offset = "0x1F3AF0")]
			public SSRResolution reflectionQuality;

			[Token(Token = "0x4000493")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1F3B24", Offset = "0x1F3B24")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x1F3B24", Offset = "0x1F3B24")]
			public float maxDistance;

			[Token(Token = "0x4000494")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1F3B7C", Offset = "0x1F3B7C")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x1F3B7C", Offset = "0x1F3B7C")]
			public int iterationCount;

			[Token(Token = "0x4000495")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1F3BD4", Offset = "0x1F3BD4")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x1F3BD4", Offset = "0x1F3BD4")]
			public int stepSize;

			[Token(Token = "0x4000496")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1F3C28", Offset = "0x1F3C28")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x1F3C28", Offset = "0x1F3C28")]
			public float widthModifier;

			[Token(Token = "0x4000497")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1F3C80", Offset = "0x1F3C80")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x1F3C80", Offset = "0x1F3C80")]
			public float reflectionBlur;

			[Token(Token = "0x4000498")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1F3CD4", Offset = "0x1F3CD4")]
			public bool reflectBackfaces;
		}

		[Serializable]
		[Token(Token = "0x2000087")]
		public struct ScreenEdgeMask
		{
			[Token(Token = "0x4000499")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1F3D08", Offset = "0x1F3D08")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x1F3D08", Offset = "0x1F3D08")]
			public float intensity;
		}

		[Token(Token = "0x2000088")]
		private enum PassIndex
		{
			[Token(Token = "0x400049B")]
			RayTraceStep,
			[Token(Token = "0x400049C")]
			CompositeFinal,
			[Token(Token = "0x400049D")]
			Blur,
			[Token(Token = "0x400049E")]
			CompositeSSR,
			[Token(Token = "0x400049F")]
			MinMipGeneration,
			[Token(Token = "0x40004A0")]
			HitPointToReflections,
			[Token(Token = "0x40004A1")]
			BilateralKeyPack,
			[Token(Token = "0x40004A2")]
			BlitDepthAsCSZ,
			[Token(Token = "0x40004A3")]
			PoissonBlur
		}

		[Token(Token = "0x4000456")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		[SerializeField]
		public SSRSettings settings;

		[Token(Token = "0x4000457")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1F384C", Offset = "0x1F384C")]
		private bool highlightSuppression;

		[Token(Token = "0x4000458")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1F3880", Offset = "0x1F3880")]
		private bool traceBehindObjects;

		[Token(Token = "0x4000459")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x42")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1F38B4", Offset = "0x1F38B4")]
		private bool treatBackfaceHitAsMiss;

		[Token(Token = "0x400045A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x43")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1F38E8", Offset = "0x1F38E8")]
		private bool bilateralUpsample;

		[Token(Token = "0x400045B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[SerializeField]
		private Shader m_Shader;

		[Token(Token = "0x400045C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Material m_Material;

		[Token(Token = "0x400045D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private Camera m_Camera;

		[Token(Token = "0x400045E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private CommandBuffer m_CommandBuffer;

		[Token(Token = "0x400045F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static int kNormalAndRoughnessTexture;

		[Token(Token = "0x4000460")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private static int kHitPointTexture;

		[Token(Token = "0x4000461")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static int[] kReflectionTextures;

		[Token(Token = "0x4000462")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private static int kFilteredReflections;

		[Token(Token = "0x4000463")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static int kBlurTexture;

		[Token(Token = "0x4000464")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private static int kFinalReflectionTexture;

		[Token(Token = "0x4000465")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static int kTempTexture;

		[Token(Token = "0x4000466")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private static int kRayStepSize;

		[Token(Token = "0x4000467")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static int kAdditiveReflection;

		[Token(Token = "0x4000468")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private static int kBilateralUpsampling;

		[Token(Token = "0x4000469")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static int kTreatBackfaceHitAsMiss;

		[Token(Token = "0x400046A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private static int kAllowBackwardsRays;

		[Token(Token = "0x400046B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private static int kTraceBehindObjects;

		[Token(Token = "0x400046C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private static int kMaxSteps;

		[Token(Token = "0x400046D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private static int kFullResolutionFiltering;

		[Token(Token = "0x400046E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private static int kHalfResolution;

		[Token(Token = "0x400046F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private static int kHighlightSuppression;

		[Token(Token = "0x4000470")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private static int kPixelsPerMeterAtOneMeter;

		[Token(Token = "0x4000471")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private static int kScreenEdgeFading;

		[Token(Token = "0x4000472")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private static int kReflectionBlur;

		[Token(Token = "0x4000473")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private static int kMaxRayTraceDistance;

		[Token(Token = "0x4000474")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private static int kFadeDistance;

		[Token(Token = "0x4000475")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private static int kLayerThickness;

		[Token(Token = "0x4000476")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private static int kSSRMultiplier;

		[Token(Token = "0x4000477")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private static int kFresnelFade;

		[Token(Token = "0x4000478")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private static int kFresnelFadePower;

		[Token(Token = "0x4000479")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private static int kReflectionBufferSize;

		[Token(Token = "0x400047A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private static int kScreenSize;

		[Token(Token = "0x400047B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private static int kInvScreenSize;

		[Token(Token = "0x400047C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private static int kProjInfo;

		[Token(Token = "0x400047D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private static int kCameraClipInfo;

		[Token(Token = "0x400047E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private static int kProjectToPixelMatrix;

		[Token(Token = "0x400047F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private static int kWorldToCameraMatrix;

		[Token(Token = "0x4000480")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private static int kCameraToWorldMatrix;

		[Token(Token = "0x4000481")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private static int kAxis;

		[Token(Token = "0x4000482")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private static int kCurrentMipLevel;

		[Token(Token = "0x17000081")]
		public Shader shader
		{
			[Token(Token = "0x60003FC")]
			[Address(RVA = "0x40EEB4", Offset = "0x40EEB4", VA = "0x40EEB4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000082")]
		public Material material
		{
			[Token(Token = "0x60003FD")]
			[Address(RVA = "0x40EF70", Offset = "0x40EF70", VA = "0x40EF70")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000083")]
		public Camera camera_
		{
			[Token(Token = "0x60003FE")]
			[Address(RVA = "0x40F020", Offset = "0x40F020", VA = "0x40F020")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60003FB")]
		[Address(RVA = "0x40ED10", Offset = "0x40ED10", VA = "0x40ED10")]
		public ScreenSpaceReflection()
		{
		}

		[Token(Token = "0x60003FF")]
		[Address(RVA = "0x40F0D8", Offset = "0x40F0D8", VA = "0x40F0D8")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000400")]
		[Address(RVA = "0x40F8B4", Offset = "0x40F8B4", VA = "0x40F8B4")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000401")]
		[Address(RVA = "0x40F954", Offset = "0x40F954", VA = "0x40F954")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000402")]
		[Address(RVA = "0x40FAC8", Offset = "0x40FAC8", VA = "0x40FAC8")]
		public void OnPreRender()
		{
		}
	}
	[Token(Token = "0x2000089")]
	[ExecuteInEditMode]
	[ImageEffectAllowedInSceneView]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x1F3D58", Offset = "0x1F3D58")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x1F3D58", Offset = "0x1F3D58")]
	public class TemporalAntiAliasing : MonoBehaviour
	{
		[Token(Token = "0x200008A")]
		public enum Sequence
		{
			[Token(Token = "0x40004AB")]
			Halton
		}

		[Serializable]
		[Token(Token = "0x200008B")]
		public struct JitterSettings
		{
			[Token(Token = "0x40004AC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1F3E38", Offset = "0x1F3E38")]
			public Sequence sequence;

			[Token(Token = "0x40004AD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1F3E6C", Offset = "0x1F3E6C")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x1F3E6C", Offset = "0x1F3E6C")]
			public float spread;

			[Token(Token = "0x40004AE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1F3EC4", Offset = "0x1F3EC4")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x1F3EC4", Offset = "0x1F3EC4")]
			public int sampleCount;
		}

		[Serializable]
		[Token(Token = "0x200008C")]
		public struct SharpenFilterSettings
		{
			[Token(Token = "0x40004AF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1F3F1C", Offset = "0x1F3F1C")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x1F3F1C", Offset = "0x1F3F1C")]
			public float amount;
		}

		[Serializable]
		[Token(Token = "0x200008D")]
		public struct BlendSettings
		{
			[Token(Token = "0x40004B0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1F3F70", Offset = "0x1F3F70")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x1F3F70", Offset = "0x1F3F70")]
			public float stationary;

			[Token(Token = "0x40004B1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1F3FC4", Offset = "0x1F3FC4")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x1F3FC4", Offset = "0x1F3FC4")]
			public float moving;

			[Token(Token = "0x40004B2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1F4018", Offset = "0x1F4018")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x1F4018", Offset = "0x1F4018")]
			public float motionAmplification;
		}

		[Serializable]
		[Token(Token = "0x200008E")]
		public struct DebugSettings
		{
			[Token(Token = "0x40004B3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1F4070", Offset = "0x1F4070")]
			public bool forceRepaint;
		}

		[Serializable]
		[Token(Token = "0x200008F")]
		public class Settings
		{
			[Token(Token = "0x2000090")]
			[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0x1F40E4", Offset = "0x1F40E4")]
			public class LayoutAttribute : PropertyAttribute
			{
				[Token(Token = "0x6000416")]
				[Address(RVA = "0x413C48", Offset = "0x413C48", VA = "0x413C48")]
				public LayoutAttribute()
				{
				}
			}

			[Token(Token = "0x40004B4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[Layout]
			public JitterSettings jitterSettings;

			[Token(Token = "0x40004B5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			[Layout]
			public SharpenFilterSettings sharpenFilterSettings;

			[Token(Token = "0x40004B6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[Layout]
			public BlendSettings blendSettings;

			[Token(Token = "0x40004B7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			[Layout]
			public DebugSettings debugSettings;

			[Token(Token = "0x17000088")]
			public static Settings defaultSettings
			{
				[Token(Token = "0x6000415")]
				[Address(RVA = "0x411F70", Offset = "0x411F70", VA = "0x411F70")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000414")]
			[Address(RVA = "0x413C40", Offset = "0x413C40", VA = "0x413C40")]
			public Settings()
			{
			}
		}

		[Token(Token = "0x40004A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		[SerializeField]
		public Settings settings;

		[Token(Token = "0x40004A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Shader m_Shader;

		[Token(Token = "0x40004A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private Material m_Material;

		[Token(Token = "0x40004A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Camera m_Camera;

		[Token(Token = "0x40004A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private RenderTexture m_History;

		[Token(Token = "0x40004A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int m_SampleIndex;

		[Token(Token = "0x17000085")]
		public Shader shader
		{
			[Token(Token = "0x6000407")]
			[Address(RVA = "0x41209C", Offset = "0x41209C", VA = "0x41209C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000086")]
		public Material material
		{
			[Token(Token = "0x6000408")]
			[Address(RVA = "0x412158", Offset = "0x412158", VA = "0x412158")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000087")]
		public Camera camera_
		{
			[Token(Token = "0x6000409")]
			[Address(RVA = "0x4122B8", Offset = "0x4122B8", VA = "0x4122B8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000406")]
		[Address(RVA = "0x411F4C", Offset = "0x411F4C", VA = "0x411F4C")]
		public TemporalAntiAliasing()
		{
		}

		[Token(Token = "0x600040A")]
		[Address(RVA = "0x412370", Offset = "0x412370", VA = "0x412370")]
		private void RenderFullScreenQuad(int pass)
		{
		}

		[Token(Token = "0x600040B")]
		[Address(RVA = "0x4124B0", Offset = "0x4124B0", VA = "0x4124B0")]
		private float GetHaltonValue(int index, int radix)
		{
			return default(float);
		}

		[Token(Token = "0x600040C")]
		[Address(RVA = "0x412514", Offset = "0x412514", VA = "0x412514")]
		private Vector2 GenerateRandomOffset()
		{
			return default(Vector2);
		}

		[Token(Token = "0x600040D")]
		[Address(RVA = "0x41263C", Offset = "0x41263C", VA = "0x41263C")]
		private Matrix4x4 GetPerspectiveProjectionMatrix(Vector2 offset)
		{
			return default(Matrix4x4);
		}

		[Token(Token = "0x600040E")]
		[Address(RVA = "0x412C64", Offset = "0x412C64", VA = "0x412C64")]
		private Matrix4x4 GetOrthographicProjectionMatrix(Vector2 offset)
		{
			return default(Matrix4x4);
		}

		[Token(Token = "0x600040F")]
		[Address(RVA = "0x412E64", Offset = "0x412E64", VA = "0x412E64")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000410")]
		[Address(RVA = "0x412EC0", Offset = "0x412EC0", VA = "0x412EC0")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000411")]
		[Address(RVA = "0x412FCC", Offset = "0x412FCC", VA = "0x412FCC")]
		private void OnPreCull()
		{
		}

		[Token(Token = "0x6000412")]
		[Address(RVA = "0x413408", Offset = "0x413408", VA = "0x413408")]
		[ImageEffectOpaque]
		private void OnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x6000413")]
		[Address(RVA = "0x413BF0", Offset = "0x413BF0", VA = "0x413BF0")]
		public void OnPostRender()
		{
		}
	}
	[Token(Token = "0x2000091")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x1F40F8", Offset = "0x1F40F8")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x1F40F8", Offset = "0x1F40F8")]
	[ImageEffectAllowedInSceneView]
	public class TonemappingColorGrading : MonoBehaviour
	{
		[Token(Token = "0x2000092")]
		[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0x1F4340", Offset = "0x1F4340")]
		public class SettingsGroup : Attribute
		{
			[Token(Token = "0x600043E")]
			[Address(RVA = "0x41858C", Offset = "0x41858C", VA = "0x41858C")]
			public SettingsGroup()
			{
			}
		}

		[Token(Token = "0x2000093")]
		public class IndentedGroup : PropertyAttribute
		{
			[Token(Token = "0x600043F")]
			[Address(RVA = "0x418530", Offset = "0x418530", VA = "0x418530")]
			public IndentedGroup()
			{
			}
		}

		[Token(Token = "0x2000094")]
		public class ChannelMixer : PropertyAttribute
		{
			[Token(Token = "0x6000440")]
			[Address(RVA = "0x417A90", Offset = "0x417A90", VA = "0x417A90")]
			public ChannelMixer()
			{
			}
		}

		[Token(Token = "0x2000095")]
		public class ColorWheelGroup : PropertyAttribute
		{
			[Token(Token = "0x40004E3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public int minSizePerWheel;

			[Token(Token = "0x40004E4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public int maxSizePerWheel;

			[Token(Token = "0x6000441")]
			[Address(RVA = "0x418230", Offset = "0x418230", VA = "0x418230")]
			public ColorWheelGroup()
			{
			}

			[Token(Token = "0x6000442")]
			[Address(RVA = "0x418248", Offset = "0x418248", VA = "0x418248")]
			public ColorWheelGroup(int minSizePerWheel, int maxSizePerWheel)
			{
			}
		}

		[Token(Token = "0x2000096")]
		public class Curve : PropertyAttribute
		{
			[Token(Token = "0x40004E5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public Color color;

			[Token(Token = "0x6000443")]
			[Address(RVA = "0x418284", Offset = "0x418284", VA = "0x418284")]
			public Curve()
			{
			}

			[Token(Token = "0x6000444")]
			[Address(RVA = "0x4182C4", Offset = "0x4182C4", VA = "0x4182C4")]
			public Curve(float r, float g, float b, float a)
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000097")]
		public struct EyeAdaptationSettings
		{
			[Token(Token = "0x40004E6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public bool enabled;

			[Token(Token = "0x40004E7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			[AttributeAttribute(Name = "MinAttribute", RVA = "0x1F4354", Offset = "0x1F4354")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1F4354", Offset = "0x1F4354")]
			public float middleGrey;

			[Token(Token = "0x40004E8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1F43A0", Offset = "0x1F43A0")]
			public float min;

			[Token(Token = "0x40004E9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1F43D4", Offset = "0x1F43D4")]
			public float max;

			[Token(Token = "0x40004EA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "MinAttribute", RVA = "0x1F4408", Offset = "0x1F4408")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1F4408", Offset = "0x1F4408")]
			public float speed;

			[Token(Token = "0x40004EB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1F4454", Offset = "0x1F4454")]
			public bool showDebug;

			[Token(Token = "0x17000097")]
			public static EyeAdaptationSettings defaultSettings
			{
				[Token(Token = "0x6000445")]
				[Address(RVA = "0x413D18", Offset = "0x413D18", VA = "0x413D18")]
				get
				{
					return default(EyeAdaptationSettings);
				}
			}
		}

		[Token(Token = "0x2000098")]
		public enum Tonemapper
		{
			[Token(Token = "0x40004ED")]
			ACES,
			[Token(Token = "0x40004EE")]
			Curve,
			[Token(Token = "0x40004EF")]
			Hable,
			[Token(Token = "0x40004F0")]
			HejlDawson,
			[Token(Token = "0x40004F1")]
			Photographic,
			[Token(Token = "0x40004F2")]
			Reinhard,
			[Token(Token = "0x40004F3")]
			Neutral
		}

		[Serializable]
		[Token(Token = "0x2000099")]
		public struct TonemappingSettings
		{
			[Token(Token = "0x40004F4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public bool enabled;

			[Token(Token = "0x40004F5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1F4488", Offset = "0x1F4488")]
			public Tonemapper tonemapper;

			[Token(Token = "0x40004F6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[AttributeAttribute(Name = "MinAttribute", RVA = "0x1F44BC", Offset = "0x1F44BC")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1F44BC", Offset = "0x1F44BC")]
			public float exposure;

			[Token(Token = "0x40004F7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1F4508", Offset = "0x1F4508")]
			public AnimationCurve curve;

			[Token(Token = "0x40004F8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x1F453C", Offset = "0x1F453C")]
			public float neutralBlackIn;

			[Token(Token = "0x40004F9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x1F455C", Offset = "0x1F455C")]
			public float neutralWhiteIn;

			[Token(Token = "0x40004FA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x1F4578", Offset = "0x1F4578")]
			public float neutralBlackOut;

			[Token(Token = "0x40004FB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x1F4598", Offset = "0x1F4598")]
			public float neutralWhiteOut;

			[Token(Token = "0x40004FC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x1F45B4", Offset = "0x1F45B4")]
			public float neutralWhiteLevel;

			[Token(Token = "0x40004FD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x1F45D4", Offset = "0x1F45D4")]
			public float neutralWhiteClip;

			[Token(Token = "0x17000098")]
			public static TonemappingSettings defaultSettings
			{
				[Token(Token = "0x6000446")]
				[Address(RVA = "0x413D4C", Offset = "0x413D4C", VA = "0x413D4C")]
				get
				{
					return default(TonemappingSettings);
				}
			}
		}

		[Serializable]
		[Token(Token = "0x200009A")]
		public struct LUTSettings
		{
			[Token(Token = "0x40004FE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public bool enabled;

			[Token(Token = "0x40004FF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1F45F0", Offset = "0x1F45F0")]
			public Texture texture;

			[Token(Token = "0x4000500")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x1F4624", Offset = "0x1F4624")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1F4624", Offset = "0x1F4624")]
			public float contribution;

			[Token(Token = "0x17000099")]
			public static LUTSettings defaultSettings
			{
				[Token(Token = "0x6000447")]
				[Address(RVA = "0x413F10", Offset = "0x413F10", VA = "0x413F10")]
				get
				{
					return default(LUTSettings);
				}
			}
		}

		[Serializable]
		[Token(Token = "0x200009B")]
		public struct ColorWheelsSettings
		{
			[Token(Token = "0x4000501")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[AttributeAttribute(Name = "ColorUsageAttribute", RVA = "0x1F4674", Offset = "0x1F4674")]
			public Color shadows;

			[Token(Token = "0x4000502")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "ColorUsageAttribute", RVA = "0x1F4688", Offset = "0x1F4688")]
			public Color midtones;

			[Token(Token = "0x4000503")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "ColorUsageAttribute", RVA = "0x1F469C", Offset = "0x1F469C")]
			public Color highlights;

			[Token(Token = "0x1700009A")]
			public static ColorWheelsSettings defaultSettings
			{
				[Token(Token = "0x6000448")]
				[Address(RVA = "0x418134", Offset = "0x418134", VA = "0x418134")]
				get
				{
					return default(ColorWheelsSettings);
				}
			}
		}

		[Serializable]
		[Token(Token = "0x200009C")]
		public struct BasicsSettings
		{
			[Token(Token = "0x4000504")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x1F46B0", Offset = "0x1F46B0")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1F46B0", Offset = "0x1F46B0")]
			public float temperatureShift;

			[Token(Token = "0x4000505")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x1F4700", Offset = "0x1F4700")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1F4700", Offset = "0x1F4700")]
			public float tint;

			[Token(Token = "0x4000506")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x1F4750", Offset = "0x1F4750")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x1F4750", Offset = "0x1F4750")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1F4750", Offset = "0x1F4750")]
			public float hue;

			[Token(Token = "0x4000507")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x1F47B0", Offset = "0x1F47B0")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1F47B0", Offset = "0x1F47B0")]
			public float saturation;

			[Token(Token = "0x4000508")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x1F4800", Offset = "0x1F4800")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1F4800", Offset = "0x1F4800")]
			public float vibrance;

			[Token(Token = "0x4000509")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x1F4854", Offset = "0x1F4854")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1F4854", Offset = "0x1F4854")]
			public float value;

			[Token(Token = "0x400050A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x1F48A8", Offset = "0x1F48A8")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x1F48A8", Offset = "0x1F48A8")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1F48A8", Offset = "0x1F48A8")]
			public float contrast;

			[Token(Token = "0x400050B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x1F4908", Offset = "0x1F4908")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1F4908", Offset = "0x1F4908")]
			public float gain;

			[Token(Token = "0x400050C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x1F4960", Offset = "0x1F4960")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1F4960", Offset = "0x1F4960")]
			public float gamma;

			[Token(Token = "0x1700009B")]
			public static BasicsSettings defaultSettings
			{
				[Token(Token = "0x6000449")]
				[Address(RVA = "0x417A60", Offset = "0x417A60", VA = "0x417A60")]
				get
				{
					return default(BasicsSettings);
				}
			}
		}

		[Serializable]
		[Token(Token = "0x200009D")]
		public struct ChannelMixerSettings
		{
			[Token(Token = "0x400050D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int currentChannel;

			[Token(Token = "0x400050E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public Vector3[] channels;

			[Token(Token = "0x1700009C")]
			public static ChannelMixerSettings defaultSettings
			{
				[Token(Token = "0x600044A")]
				[Address(RVA = "0x417C58", Offset = "0x417C58", VA = "0x417C58")]
				get
				{
					return default(ChannelMixerSettings);
				}
			}
		}

		[Serializable]
		[Token(Token = "0x200009E")]
		public struct CurvesSettings
		{
			[Token(Token = "0x400050F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[AttributeAttribute(Name = "Curve", RVA = "0x1F49B8", Offset = "0x1F49B8")]
			public AnimationCurve master;

			[Token(Token = "0x4000510")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			[AttributeAttribute(Name = "Curve", RVA = "0x1F49C8", Offset = "0x1F49C8")]
			public AnimationCurve red;

			[Token(Token = "0x4000511")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[AttributeAttribute(Name = "Curve", RVA = "0x1F4A04", Offset = "0x1F4A04")]
			public AnimationCurve green;

			[Token(Token = "0x4000512")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			[AttributeAttribute(Name = "Curve", RVA = "0x1F4A40", Offset = "0x1F4A40")]
			public AnimationCurve blue;

			[Token(Token = "0x1700009D")]
			public static CurvesSettings defaultSettings
			{
				[Token(Token = "0x600044B")]
				[Address(RVA = "0x4181D0", Offset = "0x4181D0", VA = "0x4181D0")]
				get
				{
					return default(CurvesSettings);
				}
			}

			[Token(Token = "0x1700009E")]
			public static AnimationCurve defaultCurve
			{
				[Token(Token = "0x600044C")]
				[Address(RVA = "0x418358", Offset = "0x418358", VA = "0x418358")]
				get
				{
					return null;
				}
			}
		}

		[Token(Token = "0x200009F")]
		public enum ColorGradingPrecision
		{
			[Token(Token = "0x4000514")]
			Normal = 0x10,
			[Token(Token = "0x4000515")]
			High = 0x20
		}

		[Serializable]
		[Token(Token = "0x20000A0")]
		public struct ColorGradingSettings
		{
			[Token(Token = "0x4000516")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public bool enabled;

			[Token(Token = "0x4000517")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1F4A7C", Offset = "0x1F4A7C")]
			public ColorGradingPrecision precision;

			[Token(Token = "0x4000518")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x1F4AB0", Offset = "0x1F4AB0")]
			[AttributeAttribute(Name = "ColorWheelGroup", RVA = "0x1F4AB0", Offset = "0x1F4AB0")]
			public ColorWheelsSettings colorWheels;

			[Token(Token = "0x4000519")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x1F4AE0", Offset = "0x1F4AE0")]
			[IndentedGroup]
			public BasicsSettings basics;

			[Token(Token = "0x400051A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
			[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x1F4B10", Offset = "0x1F4B10")]
			[ChannelMixer]
			public ChannelMixerSettings channelMixer;

			[Token(Token = "0x400051B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
			[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x1F4B40", Offset = "0x1F4B40")]
			[IndentedGroup]
			public CurvesSettings curves;

			[Token(Token = "0x400051C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
			[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x1F4B70", Offset = "0x1F4B70")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1F4B70", Offset = "0x1F4B70")]
			public bool useDithering;

			[Token(Token = "0x400051D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x75")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1F4BB8", Offset = "0x1F4BB8")]
			public bool showDebug;

			[Token(Token = "0x1700009F")]
			public static ColorGradingSettings defaultSettings
			{
				[Token(Token = "0x600044D")]
				[Address(RVA = "0x413DC8", Offset = "0x413DC8", VA = "0x413DC8")]
				get
				{
					return default(ColorGradingSettings);
				}
			}

			[Token(Token = "0x600044E")]
			[Address(RVA = "0x418204", Offset = "0x418204", VA = "0x418204")]
			internal void Reset()
			{
			}
		}

		[Token(Token = "0x20000A1")]
		private enum Pass
		{
			[Token(Token = "0x400051F")]
			LutGen,
			[Token(Token = "0x4000520")]
			AdaptationLog,
			[Token(Token = "0x4000521")]
			AdaptationExpBlend,
			[Token(Token = "0x4000522")]
			AdaptationExp,
			[Token(Token = "0x4000523")]
			TonemappingOff,
			[Token(Token = "0x4000524")]
			TonemappingACES,
			[Token(Token = "0x4000525")]
			TonemappingCurve,
			[Token(Token = "0x4000526")]
			TonemappingHable,
			[Token(Token = "0x4000527")]
			TonemappingHejlDawson,
			[Token(Token = "0x4000528")]
			TonemappingPhotographic,
			[Token(Token = "0x4000529")]
			TonemappingReinhard,
			[Token(Token = "0x400052A")]
			TonemappingNeutral,
			[Token(Token = "0x400052B")]
			AdaptationDebug
		}

		[Token(Token = "0x40004B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		[SerializeField]
		[SettingsGroup]
		private EyeAdaptationSettings m_EyeAdaptation;

		[Token(Token = "0x40004B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		[SettingsGroup]
		private TonemappingSettings m_Tonemapping;

		[Token(Token = "0x40004BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[SerializeField]
		[SettingsGroup]
		private ColorGradingSettings m_ColorGrading;

		[Token(Token = "0x40004BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		[SerializeField]
		[SettingsGroup]
		private LUTSettings m_Lut;

		[Token(Token = "0x40004BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private Texture2D m_IdentityLut;

		[Token(Token = "0x40004BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		private RenderTexture m_InternalLut;

		[Token(Token = "0x40004BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private Texture2D m_CurveTexture;

		[Token(Token = "0x40004BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		private Texture2D m_TonemapperCurve;

		[Token(Token = "0x40004C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private float m_TonemapperCurveRange;

		[Token(Token = "0x40004C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		[SerializeField]
		private Shader m_Shader;

		[Token(Token = "0x40004C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private Material m_Material;

		[Token(Token = "0x40004C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1F4288", Offset = "0x1F4288")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0x1F4288", Offset = "0x1F4288")]
		private bool <validRenderTextureFormat>k__BackingField;

		[Token(Token = "0x40004C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xED")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1F42BC", Offset = "0x1F42BC")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0x1F42BC", Offset = "0x1F42BC")]
		private bool <validUserLutSize>k__BackingField;

		[Token(Token = "0x40004C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEE")]
		private bool m_Dirty;

		[Token(Token = "0x40004C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEF")]
		private bool m_TonemapperDirty;

		[Token(Token = "0x40004C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private RenderTexture m_SmallAdaptiveRt;

		[Token(Token = "0x40004C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
		private RenderTextureFormat m_AdaptiveRtFormat;

		[Token(Token = "0x40004C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private int m_AdaptationSpeed;

		[Token(Token = "0x40004CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
		private int m_MiddleGrey;

		[Token(Token = "0x40004CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		private int m_AdaptationMin;

		[Token(Token = "0x40004CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
		private int m_AdaptationMax;

		[Token(Token = "0x40004CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		private int m_LumTex;

		[Token(Token = "0x40004CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
		private int m_ToneCurveRange;

		[Token(Token = "0x40004CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		private int m_ToneCurve;

		[Token(Token = "0x40004D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
		private int m_Exposure;

		[Token(Token = "0x40004D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		private int m_NeutralTonemapperParams1;

		[Token(Token = "0x40004D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
		private int m_NeutralTonemapperParams2;

		[Token(Token = "0x40004D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		private int m_WhiteBalance;

		[Token(Token = "0x40004D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
		private int m_Lift;

		[Token(Token = "0x40004D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		private int m_Gamma;

		[Token(Token = "0x40004D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
		private int m_Gain;

		[Token(Token = "0x40004D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		private int m_ContrastGainGamma;

		[Token(Token = "0x40004D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
		private int m_Vibrance;

		[Token(Token = "0x40004D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		private int m_HSV;

		[Token(Token = "0x40004DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x13C")]
		private int m_ChannelMixerRed;

		[Token(Token = "0x40004DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		private int m_ChannelMixerGreen;

		[Token(Token = "0x40004DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
		private int m_ChannelMixerBlue;

		[Token(Token = "0x40004DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		private int m_CurveTex;

		[Token(Token = "0x40004DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14C")]
		private int m_InternalLutTex;

		[Token(Token = "0x40004DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		private int m_InternalLutParams;

		[Token(Token = "0x40004E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x154")]
		private int m_UserLutTex;

		[Token(Token = "0x40004E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		private int m_UserLutParams;

		[Token(Token = "0x40004E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x15C")]
		private RenderTexture[] m_AdaptRts;

		[Token(Token = "0x17000089")]
		public EyeAdaptationSettings eyeAdaptation
		{
			[Token(Token = "0x6000418")]
			[Address(RVA = "0x413F44", Offset = "0x413F44", VA = "0x413F44")]
			get
			{
				return default(EyeAdaptationSettings);
			}
			[Token(Token = "0x6000419")]
			[Address(RVA = "0x413F58", Offset = "0x413F58", VA = "0x413F58")]
			set
			{
			}
		}

		[Token(Token = "0x1700008A")]
		public TonemappingSettings tonemapping
		{
			[Token(Token = "0x600041A")]
			[Address(RVA = "0x413F70", Offset = "0x413F70", VA = "0x413F70")]
			get
			{
				return default(TonemappingSettings);
			}
			[Token(Token = "0x600041B")]
			[Address(RVA = "0x413F8C", Offset = "0x413F8C", VA = "0x413F8C")]
			set
			{
			}
		}

		[Token(Token = "0x1700008B")]
		public ColorGradingSettings colorGrading
		{
			[Token(Token = "0x600041C")]
			[Address(RVA = "0x413FE0", Offset = "0x413FE0", VA = "0x413FE0")]
			get
			{
				return default(ColorGradingSettings);
			}
			[Token(Token = "0x600041D")]
			[Address(RVA = "0x413FF8", Offset = "0x413FF8", VA = "0x413FF8")]
			set
			{
			}
		}

		[Token(Token = "0x1700008C")]
		public LUTSettings lut
		{
			[Token(Token = "0x600041E")]
			[Address(RVA = "0x414048", Offset = "0x414048", VA = "0x414048")]
			get
			{
				return default(LUTSettings);
			}
			[Token(Token = "0x600041F")]
			[Address(RVA = "0x414058", Offset = "0x414058", VA = "0x414058")]
			set
			{
			}
		}

		[Token(Token = "0x1700008D")]
		private Texture2D identityLut
		{
			[Token(Token = "0x6000420")]
			[Address(RVA = "0x414064", Offset = "0x414064", VA = "0x414064")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700008E")]
		private RenderTexture internalLutRt
		{
			[Token(Token = "0x6000421")]
			[Address(RVA = "0x4144C0", Offset = "0x4144C0", VA = "0x4144C0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700008F")]
		private Texture2D curveTexture
		{
			[Token(Token = "0x6000422")]
			[Address(RVA = "0x4146E4", Offset = "0x4146E4", VA = "0x4146E4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000090")]
		private Texture2D tonemapperCurve
		{
			[Token(Token = "0x6000423")]
			[Address(RVA = "0x4148A0", Offset = "0x4148A0", VA = "0x4148A0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000091")]
		public Shader shader
		{
			[Token(Token = "0x6000424")]
			[Address(RVA = "0x414A94", Offset = "0x414A94", VA = "0x414A94")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000092")]
		public Material material
		{
			[Token(Token = "0x6000425")]
			[Address(RVA = "0x414B50", Offset = "0x414B50", VA = "0x414B50")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000093")]
		public bool isGammaColorSpace
		{
			[Token(Token = "0x6000426")]
			[Address(RVA = "0x414C00", Offset = "0x414C00", VA = "0x414C00")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000094")]
		public int lutSize
		{
			[Token(Token = "0x6000427")]
			[Address(RVA = "0x41417C", Offset = "0x41417C", VA = "0x41417C")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000095")]
		public bool validRenderTextureFormat
		{
			[Token(Token = "0x6000428")]
			[Address(RVA = "0x414C28", Offset = "0x414C28", VA = "0x414C28")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1F42F0", Offset = "0x1F42F0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000429")]
			[Address(RVA = "0x414C30", Offset = "0x414C30", VA = "0x414C30")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1F4300", Offset = "0x1F4300")]
			private set
			{
			}
		}

		[Token(Token = "0x17000096")]
		public bool validUserLutSize
		{
			[Token(Token = "0x600042A")]
			[Address(RVA = "0x414C38", Offset = "0x414C38", VA = "0x414C38")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1F4310", Offset = "0x1F4310")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600042B")]
			[Address(RVA = "0x414C40", Offset = "0x414C40", VA = "0x414C40")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1F4320", Offset = "0x1F4320")]
			private set
			{
			}
		}

		[Token(Token = "0x6000417")]
		[Address(RVA = "0x413C50", Offset = "0x413C50", VA = "0x413C50")]
		public TonemappingColorGrading()
		{
		}

		[Token(Token = "0x600042C")]
		[Address(RVA = "0x41403C", Offset = "0x41403C", VA = "0x41403C")]
		public void SetDirty()
		{
		}

		[Token(Token = "0x600042D")]
		[Address(RVA = "0x413FD4", Offset = "0x413FD4", VA = "0x413FD4")]
		public void SetTonemapperDirty()
		{
		}

		[Token(Token = "0x600042E")]
		[Address(RVA = "0x414C48", Offset = "0x414C48", VA = "0x414C48")]
		private void Awake()
		{
		}

		[Token(Token = "0x600042F")]
		[Address(RVA = "0x414FB4", Offset = "0x414FB4", VA = "0x414FB4")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000430")]
		[Address(RVA = "0x41500C", Offset = "0x41500C", VA = "0x41500C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000431")]
		[Address(RVA = "0x4153C8", Offset = "0x4153C8", VA = "0x4153C8")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x6000432")]
		[Address(RVA = "0x414184", Offset = "0x414184", VA = "0x414184")]
		private static Texture2D GenerateIdentityLut(int dim)
		{
			return null;
		}

		[Token(Token = "0x6000433")]
		[Address(RVA = "0x4153D4", Offset = "0x4153D4", VA = "0x4153D4")]
		private float StandardIlluminantY(float x)
		{
			return default(float);
		}

		[Token(Token = "0x6000434")]
		[Address(RVA = "0x41540C", Offset = "0x41540C", VA = "0x41540C")]
		private Vector3 CIExyToLMS(float x, float y)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000435")]
		[Address(RVA = "0x4154DC", Offset = "0x4154DC", VA = "0x4154DC")]
		private Vector3 GetWhiteBalance()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000436")]
		[Address(RVA = "0x4155F8", Offset = "0x4155F8", VA = "0x4155F8")]
		private static Color NormalizeColor(Color c)
		{
			return default(Color);
		}

		[Token(Token = "0x6000437")]
		[Address(RVA = "0x41571C", Offset = "0x41571C", VA = "0x41571C")]
		private void GenerateLiftGammaGain(out Color lift, out Color gamma, out Color gain)
		{
		}

		[Token(Token = "0x6000438")]
		[Address(RVA = "0x4159B4", Offset = "0x4159B4", VA = "0x4159B4")]
		private void GenCurveTexture()
		{
		}

		[Token(Token = "0x6000439")]
		[Address(RVA = "0x415CA0", Offset = "0x415CA0", VA = "0x415CA0")]
		private bool CheckUserLut()
		{
			return default(bool);
		}

		[Token(Token = "0x600043A")]
		[Address(RVA = "0x415DA4", Offset = "0x415DA4", VA = "0x415DA4")]
		private bool CheckSmallAdaptiveRt()
		{
			return default(bool);
		}

		[Token(Token = "0x600043B")]
		[Address(RVA = "0x415ED0", Offset = "0x415ED0", VA = "0x415ED0")]
		private void OnGUI()
		{
		}

		[Token(Token = "0x600043C")]
		[Address(RVA = "0x416168", Offset = "0x416168", VA = "0x416168")]
		[ImageEffectTransformsToLDR]
		private void OnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x600043D")]
		[Address(RVA = "0x417894", Offset = "0x417894", VA = "0x417894")]
		public Texture2D BakeLUT()
		{
			return null;
		}
	}
}
[Token(Token = "0x20000A2")]
public class AchievementsManager : MonoBehaviour
{
	[Token(Token = "0x400052C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1F4BEC", Offset = "0x1F4BEC")]
	[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0x1F4BEC", Offset = "0x1F4BEC")]
	private static AchievementsManager <Instance>k__BackingField;

	[Token(Token = "0x170000A0")]
	public static AchievementsManager Instance
	{
		[Token(Token = "0x6000450")]
		[Address(RVA = "0x464698", Offset = "0x464698", VA = "0x464698")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1F4C20", Offset = "0x1F4C20")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000451")]
		[Address(RVA = "0x4646FC", Offset = "0x4646FC", VA = "0x4646FC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1F4C30", Offset = "0x1F4C30")]
		private set
		{
		}
	}

	[Token(Token = "0x600044F")]
	[Address(RVA = "0x464690", Offset = "0x464690", VA = "0x464690")]
	public AchievementsManager()
	{
	}

	[Token(Token = "0x6000452")]
	[Address(RVA = "0x464760", Offset = "0x464760", VA = "0x464760")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000453")]
	[Address(RVA = "0x4649D4", Offset = "0x4649D4", VA = "0x4649D4", Slot = "4")]
	public virtual void Init()
	{
	}

	[Token(Token = "0x6000454")]
	[Address(RVA = "0x4649D8", Offset = "0x4649D8", VA = "0x4649D8", Slot = "5")]
	public virtual void ResetAllAchievements()
	{
	}

	[Token(Token = "0x6000455")]
	[Address(RVA = "0x4649DC", Offset = "0x4649DC", VA = "0x4649DC", Slot = "6")]
	public virtual void AddOneToStat(string name)
	{
	}

	[Token(Token = "0x6000456")]
	[Address(RVA = "0x464AF0", Offset = "0x464AF0", VA = "0x464AF0", Slot = "7")]
	public virtual void TriggerAchievement(string name)
	{
	}

	[Token(Token = "0x6000457")]
	[Address(RVA = "0x464C04", Offset = "0x464C04", VA = "0x464C04", Slot = "8")]
	public virtual void AddOneToCollection(string name, string field)
	{
	}

	[Token(Token = "0x6000458")]
	[Address(RVA = "0x464D64", Offset = "0x464D64", VA = "0x464D64", Slot = "9")]
	protected virtual void CheckFullCompletion()
	{
	}
}
[Token(Token = "0x20000A3")]
public class OculusEntitlementWarning : MonoBehaviour
{
	[Token(Token = "0x6000459")]
	[Address(RVA = "0x258D10", Offset = "0x258D10", VA = "0x258D10")]
	public OculusEntitlementWarning()
	{
	}

	[Token(Token = "0x600045A")]
	[Address(RVA = "0x258D18", Offset = "0x258D18", VA = "0x258D18")]
	private void Start()
	{
	}
}
[Token(Token = "0x20000A4")]
public class PlatformInitializer : MonoBehaviour
{
	[Token(Token = "0x400052D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public string[] platformData;

	[Token(Token = "0x600045B")]
	[Address(RVA = "0x262B58", Offset = "0x262B58", VA = "0x262B58")]
	public PlatformInitializer()
	{
	}

	[Token(Token = "0x600045C")]
	[Address(RVA = "0x262B60", Offset = "0x262B60", VA = "0x262B60")]
	public void ChoosePlatform()
	{
	}

	[Token(Token = "0x600045D")]
	[Address(RVA = "0x262E60", Offset = "0x262E60", VA = "0x262E60")]
	private void LoadPlatformConfig()
	{
	}
}
[Token(Token = "0x20000A5")]
public class PlatformManager : MonoBehaviour
{
	[Token(Token = "0x400052E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1F4C40", Offset = "0x1F4C40")]
	[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0x1F4C40", Offset = "0x1F4C40")]
	private static PlatformManager <Instance>k__BackingField;

	[Token(Token = "0x400052F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private LogoManager _logoManager;

	[Token(Token = "0x4000530")]
	public const string version = "1.6.0.0";

	[Token(Token = "0x170000A1")]
	public static PlatformManager Instance
	{
		[Token(Token = "0x600045F")]
		[Address(RVA = "0x262F3C", Offset = "0x262F3C", VA = "0x262F3C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1F4C74", Offset = "0x1F4C74")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000460")]
		[Address(RVA = "0x262FA0", Offset = "0x262FA0", VA = "0x262FA0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1F4C84", Offset = "0x1F4C84")]
		private set
		{
		}
	}

	[Token(Token = "0x600045E")]
	[Address(RVA = "0x24FB78", Offset = "0x24FB78", VA = "0x24FB78")]
	public PlatformManager()
	{
	}

	[Token(Token = "0x6000461")]
	[Address(RVA = "0x263004", Offset = "0x263004", VA = "0x263004")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000462")]
	[Address(RVA = "0x263294", Offset = "0x263294", VA = "0x263294", Slot = "4")]
	public virtual void Init()
	{
	}

	[Token(Token = "0x6000463")]
	[Address(RVA = "0x24FEA4", Offset = "0x24FEA4", VA = "0x24FEA4")]
	protected void LaunchLogoSequence()
	{
	}

	[Token(Token = "0x6000464")]
	[Address(RVA = "0x2632B8", Offset = "0x2632B8", VA = "0x2632B8", Slot = "5")]
	public virtual string GetDefaultLangagueString()
	{
		return null;
	}
}
[Token(Token = "0x20000A6")]
public class Aim : MonoBehaviour
{
	[Token(Token = "0x4000531")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private Transform target;

	[Token(Token = "0x6000465")]
	[Address(RVA = "0x46575C", Offset = "0x46575C", VA = "0x46575C")]
	public Aim()
	{
	}

	[Token(Token = "0x6000466")]
	[Address(RVA = "0x465764", Offset = "0x465764", VA = "0x465764")]
	private void OnEnable()
	{
	}
}
[Token(Token = "0x20000A7")]
public class AlarmeScript : MonoBehaviour
{
	[Token(Token = "0x4000532")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public float speed;

	[Token(Token = "0x4000533")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private Light _light;

	[Token(Token = "0x6000467")]
	[Address(RVA = "0xCE1A30", Offset = "0xCE1A30", VA = "0xCE1A30")]
	public AlarmeScript()
	{
	}

	[Token(Token = "0x6000468")]
	[Address(RVA = "0xCE1A38", Offset = "0xCE1A38", VA = "0xCE1A38")]
	private void Start()
	{
	}

	[Token(Token = "0x6000469")]
	[Address(RVA = "0xCE1ADC", Offset = "0xCE1ADC", VA = "0xCE1ADC")]
	private void Update()
	{
	}

	[Token(Token = "0x600046A")]
	[Address(RVA = "0xCE1B48", Offset = "0xCE1B48", VA = "0xCE1B48")]
	public void SetAlarme()
	{
	}

	[Token(Token = "0x600046B")]
	[Address(RVA = "0xCE1B90", Offset = "0xCE1B90", VA = "0xCE1B90")]
	public void UnsetAlarme()
	{
	}
}
[Serializable]
[Token(Token = "0x20000A8")]
public class ArcadeSubBank
{
	[Token(Token = "0x4000534")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public string Name;

	[Token(Token = "0x4000535")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public ToolNeeded Tool;

	[Token(Token = "0x4000536")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public GameObject[] SubBank;

	[Token(Token = "0x600046C")]
	[Address(RVA = "0xCE4A34", Offset = "0xCE4A34", VA = "0xCE4A34")]
	public ArcadeSubBank()
	{
	}
}
[Serializable]
[Token(Token = "0x20000A9")]
public class ToolNeeded
{
	[Token(Token = "0x4000537")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public bool hammer;

	[Token(Token = "0x4000538")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9")]
	public bool tap;

	[Token(Token = "0x4000539")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA")]
	public bool pen;

	[Token(Token = "0x400053A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB")]
	public bool bowl;

	[Token(Token = "0x400053B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public bool oven;

	[Token(Token = "0x600046D")]
	[Address(RVA = "0xCBFA08", Offset = "0xCBFA08", VA = "0xCBFA08")]
	public ToolNeeded()
	{
	}

	[Token(Token = "0x600046E")]
	[Address(RVA = "0xCBFA10", Offset = "0xCBFA10", VA = "0xCBFA10")]
	public void addTools(ToolNeeded tools)
	{
	}

	[Token(Token = "0x600046F")]
	[Address(RVA = "0xCBFA98", Offset = "0xCBFA98", VA = "0xCBFA98")]
	public int MeublerNumber()
	{
		return default(int);
	}

	[Token(Token = "0x6000470")]
	[Address(RVA = "0xCBFAA8", Offset = "0xCBFAA8", VA = "0xCBFAA8")]
	public string[] GetMeubledata()
	{
		return null;
	}

	[Token(Token = "0x6000471")]
	[Address(RVA = "0xCBFC2C", Offset = "0xCBFC2C", VA = "0xCBFC2C")]
	public int CraftrNumber()
	{
		return default(int);
	}

	[Token(Token = "0x6000472")]
	[Address(RVA = "0xCBFC44", Offset = "0xCBFC44", VA = "0xCBFC44")]
	public string[] GetCraftdata()
	{
		return null;
	}
}
[Token(Token = "0x20000AA")]
public class AdaptativeArcadeCarier : MonoBehaviour
{
	[Token(Token = "0x400053C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static AdaptativeArcadeCarier Instance;

	[Token(Token = "0x400053D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public DataToLoad arcadeData;

	[Token(Token = "0x400053E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ToolNeeded requiredTools;

	[Token(Token = "0x400053F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public GameObject[] arcadeBank;

	[Token(Token = "0x4000540")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ArcadeSubBank[] subBanks;

	[Token(Token = "0x4000541")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private string[] availableItems;

	[Token(Token = "0x6000473")]
	[Address(RVA = "0x464D68", Offset = "0x464D68", VA = "0x464D68")]
	public AdaptativeArcadeCarier()
	{
	}

	[Token(Token = "0x6000474")]
	[Address(RVA = "0x464D70", Offset = "0x464D70", VA = "0x464D70")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000475")]
	[Address(RVA = "0x464EFC", Offset = "0x464EFC", VA = "0x464EFC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000476")]
	[Address(RVA = "0x4650E8", Offset = "0x4650E8", VA = "0x4650E8")]
	private void OnSceneLoaded(Scene scene, LoadSceneMode loadMode)
	{
	}

	[Token(Token = "0x6000477")]
	[Address(RVA = "0x464FA8", Offset = "0x464FA8", VA = "0x464FA8")]
	private void Init()
	{
	}

	[Token(Token = "0x6000478")]
	[Address(RVA = "0x4656AC", Offset = "0x4656AC", VA = "0x4656AC")]
	public void Spread(ArcadeBank Bank)
	{
	}

	[Token(Token = "0x6000479")]
	[Address(RVA = "0x46533C", Offset = "0x46533C", VA = "0x46533C")]
	public void AddTools()
	{
	}

	[Token(Token = "0x600047A")]
	[Address(RVA = "0x46511C", Offset = "0x46511C", VA = "0x46511C")]
	private void AddSubBank(string subBankName)
	{
	}
}
[Token(Token = "0x20000AB")]
public class ArcadeBank : MonoBehaviour
{
	[Token(Token = "0x20002EF")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1F4CB4", Offset = "0x1F4CB4")]
	private sealed class <DelayedStartArcade>c__Iterator0 : IEnumerator, IDisposable, IEnumerator<object>
	{
		[Token(Token = "0x4001187")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal ArcadeBank $this;

		[Token(Token = "0x4001188")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		internal object $current;

		[Token(Token = "0x4001189")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal bool $disposing;

		[Token(Token = "0x400118A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		internal int $PC;

		[Token(Token = "0x17000253")]
		private object System.Collections.Generic.IEnumerator<object>.Current
		{
			[Token(Token = "0x60016E4")]
			[Address(RVA = "0xCE34CC", Offset = "0xCE34CC", VA = "0xCE34CC", Slot = "8")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000254")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60016E5")]
			[Address(RVA = "0xCE34D4", Offset = "0xCE34D4", VA = "0xCE34D4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60016E2")]
		[Address(RVA = "0xCE3368", Offset = "0xCE3368", VA = "0xCE3368")]
		[DebuggerHidden]
		public <DelayedStartArcade>c__Iterator0()
		{
		}

		[Token(Token = "0x60016E3")]
		[Address(RVA = "0xCE3370", Offset = "0xCE3370", VA = "0xCE3370", Slot = "5")]
		public bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60016E6")]
		[Address(RVA = "0xCE34DC", Offset = "0xCE34DC", VA = "0xCE34DC", Slot = "7")]
		[DebuggerHidden]
		public void Dispose()
		{
		}

		[Token(Token = "0x60016E7")]
		[Address(RVA = "0xCE34F0", Offset = "0xCE34F0", VA = "0xCE34F0", Slot = "6")]
		[DebuggerHidden]
		public void Reset()
		{
		}
	}

	[Token(Token = "0x4000542")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public int numberPerPulledLever;

	[Token(Token = "0x4000543")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public GameObject[] bank;

	[Token(Token = "0x4000544")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	[HideInInspector]
	public bool hasStarted;

	[Token(Token = "0x4000545")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x15")]
	private bool Spawning;

	[Token(Token = "0x600047B")]
	[Address(RVA = "0xCE2FE4", Offset = "0xCE2FE4", VA = "0xCE2FE4")]
	public ArcadeBank()
	{
	}

	[Token(Token = "0x600047C")]
	[Address(RVA = "0xCE2FF4", Offset = "0xCE2FF4", VA = "0xCE2FF4")]
	private void Start()
	{
	}

	[Token(Token = "0x600047D")]
	[Address(RVA = "0xCE31D4", Offset = "0xCE31D4", VA = "0xCE31D4")]
	private void OnSpawningObjectHandler()
	{
	}

	[Token(Token = "0x600047E")]
	[Address(RVA = "0xCE31E0", Offset = "0xCE31E0", VA = "0xCE31E0")]
	private void OnFinishedSpawningObjectHandler()
	{
	}

	[Token(Token = "0x600047F")]
	[Address(RVA = "0xCE31EC", Offset = "0xCE31EC", VA = "0xCE31EC")]
	public void StartArcade()
	{
	}

	[Token(Token = "0x6000480")]
	[Address(RVA = "0xCE3290", Offset = "0xCE3290", VA = "0xCE3290")]
	public void AskForStock()
	{
	}

	[Token(Token = "0x6000481")]
	[Address(RVA = "0xCE3210", Offset = "0xCE3210", VA = "0xCE3210")]
	[DebuggerHidden]
	private IEnumerator DelayedStartArcade()
	{
		return null;
	}
}
[Token(Token = "0x20000AC")]
public class ArcadeLock : MonoBehaviour
{
	[Token(Token = "0x6000482")]
	[Address(RVA = "0xCE3818", Offset = "0xCE3818", VA = "0xCE3818")]
	public ArcadeLock()
	{
	}

	[Token(Token = "0x6000483")]
	[Address(RVA = "0xCE3820", Offset = "0xCE3820", VA = "0xCE3820")]
	private void Start()
	{
	}
}
[Token(Token = "0x20000AD")]
public class ArcadeSellingBox : MonoBehaviour
{
	[Token(Token = "0x4000546")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private string[] typeObjetsCompletes;

	[Token(Token = "0x4000547")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float forceDeMultiplierDeRejet;

	[Token(Token = "0x4000548")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private bool jeLacheteTu;

	[Token(Token = "0x4000549")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private BuyingData soldWhat;

	[Token(Token = "0x6000484")]
	[Address(RVA = "0xCE39C0", Offset = "0xCE39C0", VA = "0xCE39C0")]
	public ArcadeSellingBox()
	{
	}

	[Token(Token = "0x6000485")]
	[Address(RVA = "0xCE3A68", Offset = "0xCE3A68", VA = "0xCE3A68")]
	private void Start()
	{
	}

	[Token(Token = "0x6000486")]
	[Address(RVA = "0xCE3CE0", Offset = "0xCE3CE0", VA = "0xCE3CE0")]
	private void OnTriggerEnter(Collider col)
	{
	}

	[Token(Token = "0x6000487")]
	[Address(RVA = "0xCE4360", Offset = "0xCE4360", VA = "0xCE4360")]
	private void regardeSiJeLacheteTu(string res)
	{
	}

	[Token(Token = "0x6000488")]
	[Address(RVA = "0xCE4550", Offset = "0xCE4550", VA = "0xCE4550")]
	private void particulesSellSpawn(GameObject item, int valeur, bool skipDestroy = false)
	{
	}
}
[Token(Token = "0x20000AE")]
public class BobbySellingBox : MonoBehaviour
{
	[Token(Token = "0x400054A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public float forceDeMultiplierDeRejet;

	[Token(Token = "0x6000489")]
	[Address(RVA = "0xCEB1F4", Offset = "0xCEB1F4", VA = "0xCEB1F4")]
	public BobbySellingBox()
	{
	}

	[Token(Token = "0x600048A")]
	[Address(RVA = "0xCEB1FC", Offset = "0xCEB1FC", VA = "0xCEB1FC")]
	private void OnTriggerEnter(Collider col)
	{
	}

	[Token(Token = "0x600048B")]
	[Address(RVA = "0xCEB754", Offset = "0xCEB754", VA = "0xCEB754")]
	public void tellMasterScriptToStopMe()
	{
	}
}
[Token(Token = "0x20000AF")]
public class FirstDayTutorial : MonoBehaviour
{
	[Token(Token = "0x400054B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public GameObject target;

	[Token(Token = "0x600048C")]
	[Address(RVA = "0xC55758", Offset = "0xC55758", VA = "0xC55758")]
	public FirstDayTutorial()
	{
	}

	[Token(Token = "0x600048D")]
	[Address(RVA = "0xC55760", Offset = "0xC55760", VA = "0xC55760")]
	private void Start()
	{
	}

	[Token(Token = "0x600048E")]
	[Address(RVA = "0xC55974", Offset = "0xC55974", VA = "0xC55974")]
	public void StopHelper()
	{
	}
}
[Token(Token = "0x20000B0")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x1F4D14", Offset = "0x1F4D14")]
public class HaloScript : SpawnableObject
{
	[Token(Token = "0x20002F0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1F4D9C", Offset = "0x1F4D9C")]
	private sealed class <Stop>c__Iterator0 : IEnumerator, IDisposable, IEnumerator<object>
	{
		[Token(Token = "0x400118B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal HaloScript $this;

		[Token(Token = "0x400118C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		internal object $current;

		[Token(Token = "0x400118D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal bool $disposing;

		[Token(Token = "0x400118E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		internal int $PC;

		[Token(Token = "0x17000255")]
		private object System.Collections.Generic.IEnumerator<object>.Current
		{
			[Token(Token = "0x60016EA")]
			[Address(RVA = "0xC6A76C", Offset = "0xC6A76C", VA = "0xC6A76C", Slot = "8")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000256")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60016EB")]
			[Address(RVA = "0xC6A774", Offset = "0xC6A774", VA = "0xC6A774", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60016E8")]
		[Address(RVA = "0xC6A4B4", Offset = "0xC6A4B4", VA = "0xC6A4B4")]
		[DebuggerHidden]
		public <Stop>c__Iterator0()
		{
		}

		[Token(Token = "0x60016E9")]
		[Address(RVA = "0xC6A4BC", Offset = "0xC6A4BC", VA = "0xC6A4BC", Slot = "5")]
		public bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60016EC")]
		[Address(RVA = "0xC6A77C", Offset = "0xC6A77C", VA = "0xC6A77C", Slot = "7")]
		[DebuggerHidden]
		public void Dispose()
		{
		}

		[Token(Token = "0x60016ED")]
		[Address(RVA = "0xC6A790", Offset = "0xC6A790", VA = "0xC6A790", Slot = "6")]
		[DebuggerHidden]
		public void Reset()
		{
		}
	}

	[Token(Token = "0x400054C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Rigidbody rb;

	[Token(Token = "0x400054D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private BrownianMotion motion;

	[Token(Token = "0x400054E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private ParticleSystem particle;

	[Token(Token = "0x600048F")]
	[Address(RVA = "0xC6A42C", Offset = "0xC6A42C", VA = "0xC6A42C")]
	public HaloScript()
	{
	}

	[Token(Token = "0x6000490")]
	[Address(RVA = "0xC4BE50", Offset = "0xC4BE50", VA = "0xC4BE50")]
	public void Init(Rigidbody rigid)
	{
	}

	[Token(Token = "0x6000491")]
	[Address(RVA = "0xC6A434", Offset = "0xC6A434", VA = "0xC6A434")]
	[DebuggerHidden]
	private IEnumerator Stop()
	{
		return null;
	}
}
[Token(Token = "0x20000B1")]
public class ShowScore : MonoBehaviour
{
	[Token(Token = "0x400054F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private TextMeshProUGUI scoreTxt;

	[Token(Token = "0x6000492")]
	[Address(RVA = "0xCB6930", Offset = "0xCB6930", VA = "0xCB6930")]
	public ShowScore()
	{
	}

	[Token(Token = "0x6000493")]
	[Address(RVA = "0xCB6938", Offset = "0xCB6938", VA = "0xCB6938")]
	private void Start()
	{
	}

	[Token(Token = "0x6000494")]
	[Address(RVA = "0xCB6A58", Offset = "0xCB6A58", VA = "0xCB6A58")]
	private void Update()
	{
	}
}
[Token(Token = "0x20000B2")]
public class TutorialBank : MonoBehaviour
{
	[Token(Token = "0x4000550")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Tutorial[] TutorialDatabase;

	[Token(Token = "0x6000495")]
	[Address(RVA = "0xCCDFCC", Offset = "0xCCDFCC", VA = "0xCCDFCC")]
	public TutorialBank()
	{
	}
}
[Token(Token = "0x20000B3")]
public class TutorialButton : MonoBehaviour
{
	[Token(Token = "0x20002F1")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1F4E0C", Offset = "0x1F4E0C")]
	private sealed class <delayUnactive>c__Iterator0 : IEnumerator, IDisposable, IEnumerator<object>
	{
		[Token(Token = "0x400118F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal TutorialButton $this;

		[Token(Token = "0x4001190")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		internal object $current;

		[Token(Token = "0x4001191")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal bool $disposing;

		[Token(Token = "0x4001192")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		internal int $PC;

		[Token(Token = "0x17000257")]
		private object System.Collections.Generic.IEnumerator<object>.Current
		{
			[Token(Token = "0x60016F0")]
			[Address(RVA = "0xCCEA28", Offset = "0xCCEA28", VA = "0xCCEA28", Slot = "8")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000258")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60016F1")]
			[Address(RVA = "0xCCEA30", Offset = "0xCCEA30", VA = "0xCCEA30", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60016EE")]
		[Address(RVA = "0xCCE680", Offset = "0xCCE680", VA = "0xCCE680")]
		[DebuggerHidden]
		public <delayUnactive>c__Iterator0()
		{
		}

		[Token(Token = "0x60016EF")]
		[Address(RVA = "0xCCE7E0", Offset = "0xCCE7E0", VA = "0xCCE7E0", Slot = "5")]
		public bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60016F2")]
		[Address(RVA = "0xCCEA38", Offset = "0xCCEA38", VA = "0xCCEA38", Slot = "7")]
		[DebuggerHidden]
		public void Dispose()
		{
		}

		[Token(Token = "0x60016F3")]
		[Address(RVA = "0xCCEA4C", Offset = "0xCCEA4C", VA = "0xCCEA4C", Slot = "6")]
		[DebuggerHidden]
		public void Reset()
		{
		}
	}

	[Token(Token = "0x4000551")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private NVRHand hand;

	[Token(Token = "0x4000552")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private Animator anim;

	[Token(Token = "0x4000553")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private GameObject hl;

	[Token(Token = "0x4000554")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool hovering;

	[Token(Token = "0x4000555")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private TutorialManager AT;

	[Token(Token = "0x4000556")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool pressing;

	[Token(Token = "0x4000557")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private BoxCollider col;

	[Token(Token = "0x4000558")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private GameObject next;

	[Token(Token = "0x4000559")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private GameObject exit;

	[Token(Token = "0x6000496")]
	[Address(RVA = "0xCCDFD4", Offset = "0xCCDFD4", VA = "0xCCDFD4")]
	public TutorialButton()
	{
	}

	[Token(Token = "0x6000497")]
	[Address(RVA = "0xCCDFDC", Offset = "0xCCDFDC", VA = "0xCCDFDC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000498")]
	[Address(RVA = "0xCCE280", Offset = "0xCCE280", VA = "0xCCE280")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000499")]
	[Address(RVA = "0xCCE630", Offset = "0xCCE630", VA = "0xCCE630")]
	public void changeText()
	{
	}

	[Token(Token = "0x600049A")]
	[Address(RVA = "0xCCE5B0", Offset = "0xCCE5B0", VA = "0xCCE5B0")]
	[DebuggerHidden]
	private IEnumerator delayUnactive()
	{
		return null;
	}

	[Token(Token = "0x600049B")]
	[Address(RVA = "0xCCE688", Offset = "0xCCE688", VA = "0xCCE688")]
	private void OnTriggerStay(Collider col)
	{
	}
}
[Serializable]
[Token(Token = "0x20000B4")]
public class Tutorial
{
	[Token(Token = "0x400055A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public string Name;

	[Token(Token = "0x400055B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public string[] Steps;

	[Token(Token = "0x400055C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public GameObject[] Resources;

	[Token(Token = "0x400055D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public string[] Triggers;

	[Token(Token = "0x400055E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float IntroDuration;

	[Token(Token = "0x400055F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public string[] videos;

	[Token(Token = "0x600049C")]
	[Address(RVA = "0xCCDFC4", Offset = "0xCCDFC4", VA = "0xCCDFC4")]
	public Tutorial()
	{
	}
}
[Token(Token = "0x20000B5")]
public class TutorialManager : MonoBehaviour
{
	[Token(Token = "0x20002F2")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1F4EFC", Offset = "0x1F4EFC")]
	private sealed class <DesactivationDelayee>c__Iterator0 : IEnumerator, IDisposable, IEnumerator<object>
	{
		[Token(Token = "0x4001193")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal bool activer;

		[Token(Token = "0x4001194")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		internal TutorialManager $this;

		[Token(Token = "0x4001195")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal object $current;

		[Token(Token = "0x4001196")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		internal bool $disposing;

		[Token(Token = "0x4001197")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal int $PC;

		[Token(Token = "0x17000259")]
		private object System.Collections.Generic.IEnumerator<object>.Current
		{
			[Token(Token = "0x60016F6")]
			[Address(RVA = "0xCD3888", Offset = "0xCD3888", VA = "0xCD3888", Slot = "8")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700025A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60016F7")]
			[Address(RVA = "0xCD3890", Offset = "0xCD3890", VA = "0xCD3890", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60016F4")]
		[Address(RVA = "0xCD0528", Offset = "0xCD0528", VA = "0xCD0528")]
		[DebuggerHidden]
		public <DesactivationDelayee>c__Iterator0()
		{
		}

		[Token(Token = "0x60016F5")]
		[Address(RVA = "0xCD3244", Offset = "0xCD3244", VA = "0xCD3244", Slot = "5")]
		public bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60016F8")]
		[Address(RVA = "0xCD3898", Offset = "0xCD3898", VA = "0xCD3898", Slot = "7")]
		[DebuggerHidden]
		public void Dispose()
		{
		}

		[Token(Token = "0x60016F9")]
		[Address(RVA = "0xCD38AC", Offset = "0xCD38AC", VA = "0xCD38AC", Slot = "6")]
		[DebuggerHidden]
		public void Reset()
		{
		}
	}

	[Token(Token = "0x20002F3")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1F4F5C", Offset = "0x1F4F5C")]
	private sealed class <LateStart>c__Iterator1 : IEnumerator, IDisposable, IEnumerator<object>
	{
		[Token(Token = "0x4001198")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal TutorialManager $this;

		[Token(Token = "0x4001199")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		internal object $current;

		[Token(Token = "0x400119A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal bool $disposing;

		[Token(Token = "0x400119B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		internal int $PC;

		[Token(Token = "0x1700025B")]
		private object System.Collections.Generic.IEnumerator<object>.Current
		{
			[Token(Token = "0x60016FC")]
			[Address(RVA = "0xCD3C24", Offset = "0xCD3C24", VA = "0xCD3C24", Slot = "8")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700025C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60016FD")]
			[Address(RVA = "0xCD3C2C", Offset = "0xCD3C2C", VA = "0xCD3C2C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60016FA")]
		[Address(RVA = "0xCD07EC", Offset = "0xCD07EC", VA = "0xCD07EC")]
		[DebuggerHidden]
		public <LateStart>c__Iterator1()
		{
		}

		[Token(Token = "0x60016FB")]
		[Address(RVA = "0xCD3B08", Offset = "0xCD3B08", VA = "0xCD3B08", Slot = "5")]
		public bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60016FE")]
		[Address(RVA = "0xCD3C34", Offset = "0xCD3C34", VA = "0xCD3C34", Slot = "7")]
		[DebuggerHidden]
		public void Dispose()
		{
		}

		[Token(Token = "0x60016FF")]
		[Address(RVA = "0xCD3C48", Offset = "0xCD3C48", VA = "0xCD3C48", Slot = "6")]
		[DebuggerHidden]
		public void Reset()
		{
		}
	}

	[Token(Token = "0x20002F4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1F4FBC", Offset = "0x1F4FBC")]
	private sealed class <GoToNextStep>c__Iterator2 : IEnumerator, IDisposable, IEnumerator<object>
	{
		[Token(Token = "0x400119C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal TutorialManager $this;

		[Token(Token = "0x400119D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		internal object $current;

		[Token(Token = "0x400119E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal bool $disposing;

		[Token(Token = "0x400119F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		internal int $PC;

		[Token(Token = "0x1700025D")]
		private object System.Collections.Generic.IEnumerator<object>.Current
		{
			[Token(Token = "0x6001702")]
			[Address(RVA = "0xCD3A60", Offset = "0xCD3A60", VA = "0xCD3A60", Slot = "8")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700025E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001703")]
			[Address(RVA = "0xCD3A68", Offset = "0xCD3A68", VA = "0xCD3A68", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001700")]
		[Address(RVA = "0xCD1624", Offset = "0xCD1624", VA = "0xCD1624")]
		[DebuggerHidden]
		public <GoToNextStep>c__Iterator2()
		{
		}

		[Token(Token = "0x6001701")]
		[Address(RVA = "0xCD3930", Offset = "0xCD3930", VA = "0xCD3930", Slot = "5")]
		public bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001704")]
		[Address(RVA = "0xCD3A70", Offset = "0xCD3A70", VA = "0xCD3A70", Slot = "7")]
		[DebuggerHidden]
		public void Dispose()
		{
		}

		[Token(Token = "0x6001705")]
		[Address(RVA = "0xCD3A84", Offset = "0xCD3A84", VA = "0xCD3A84", Slot = "6")]
		[DebuggerHidden]
		public void Reset()
		{
		}
	}

	[Token(Token = "0x20002F5")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1F501C", Offset = "0x1F501C")]
	private sealed class <SkipTutorial_Coroutine>c__Iterator3 : IEnumerator, IDisposable, IEnumerator<object>
	{
		[Token(Token = "0x40011A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal TutorialManager $this;

		[Token(Token = "0x40011A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		internal object $current;

		[Token(Token = "0x40011A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal bool $disposing;

		[Token(Token = "0x40011A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		internal int $PC;

		[Token(Token = "0x1700025F")]
		private object System.Collections.Generic.IEnumerator<object>.Current
		{
			[Token(Token = "0x6001708")]
			[Address(RVA = "0xCD53E8", Offset = "0xCD53E8", VA = "0xCD53E8", Slot = "8")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000260")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001709")]
			[Address(RVA = "0xCD53F0", Offset = "0xCD53F0", VA = "0xCD53F0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001706")]
		[Address(RVA = "0xCD285C", Offset = "0xCD285C", VA = "0xCD285C")]
		[DebuggerHidden]
		public <SkipTutorial_Coroutine>c__Iterator3()
		{
		}

		[Token(Token = "0x6001707")]
		[Address(RVA = "0xCD52CC", Offset = "0xCD52CC", VA = "0xCD52CC", Slot = "5")]
		public bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600170A")]
		[Address(RVA = "0xCD53F8", Offset = "0xCD53F8", VA = "0xCD53F8", Slot = "7")]
		[DebuggerHidden]
		public void Dispose()
		{
		}

		[Token(Token = "0x600170B")]
		[Address(RVA = "0xCD540C", Offset = "0xCD540C", VA = "0xCD540C", Slot = "6")]
		[DebuggerHidden]
		public void Reset()
		{
		}
	}

	[Token(Token = "0x20002F6")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1F507C", Offset = "0x1F507C")]
	private sealed class <delayUnactive>c__Iterator4 : IEnumerator, IDisposable, IEnumerator<object>
	{
		[Token(Token = "0x40011A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal bool isReset;

		[Token(Token = "0x40011A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		internal TutorialManager $this;

		[Token(Token = "0x40011A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal object $current;

		[Token(Token = "0x40011A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		internal bool $disposing;

		[Token(Token = "0x40011A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal int $PC;

		[Token(Token = "0x17000261")]
		private object System.Collections.Generic.IEnumerator<object>.Current
		{
			[Token(Token = "0x600170E")]
			[Address(RVA = "0xCD319C", Offset = "0xCD319C", VA = "0xCD319C", Slot = "8")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000262")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600170F")]
			[Address(RVA = "0xCD31A4", Offset = "0xCD31A4", VA = "0xCD31A4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600170C")]
		[Address(RVA = "0xCD2864", Offset = "0xCD2864", VA = "0xCD2864")]
		[DebuggerHidden]
		public <delayUnactive>c__Iterator4()
		{
		}

		[Token(Token = "0x600170D")]
		[Address(RVA = "0xCD3094", Offset = "0xCD3094", VA = "0xCD3094", Slot = "5")]
		public bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001710")]
		[Address(RVA = "0xCD31AC", Offset = "0xCD31AC", VA = "0xCD31AC", Slot = "7")]
		[DebuggerHidden]
		public void Dispose()
		{
		}

		[Token(Token = "0x6001711")]
		[Address(RVA = "0xCD31C0", Offset = "0xCD31C0", VA = "0xCD31C0", Slot = "6")]
		[DebuggerHidden]
		public void Reset()
		{
		}
	}

	[Token(Token = "0x20002F7")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1F50DC", Offset = "0x1F50DC")]
	private sealed class <SetTutorial>c__Iterator5 : IEnumerator, IDisposable, IEnumerator<object>
	{
		[Token(Token = "0x40011A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal bool isReset;

		[Token(Token = "0x40011AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		internal TutorialManager $this;

		[Token(Token = "0x40011AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal object $current;

		[Token(Token = "0x40011AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		internal bool $disposing;

		[Token(Token = "0x40011AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal int $PC;

		[Token(Token = "0x17000263")]
		private object System.Collections.Generic.IEnumerator<object>.Current
		{
			[Token(Token = "0x6001714")]
			[Address(RVA = "0xCD5224", Offset = "0xCD5224", VA = "0xCD5224", Slot = "8")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000264")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001715")]
			[Address(RVA = "0xCD522C", Offset = "0xCD522C", VA = "0xCD522C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001712")]
		[Address(RVA = "0xCD286C", Offset = "0xCD286C", VA = "0xCD286C")]
		[DebuggerHidden]
		public <SetTutorial>c__Iterator5()
		{
		}

		[Token(Token = "0x6001713")]
		[Address(RVA = "0xCD3CCC", Offset = "0xCD3CCC", VA = "0xCD3CCC", Slot = "5")]
		public bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001716")]
		[Address(RVA = "0xCD5234", Offset = "0xCD5234", VA = "0xCD5234", Slot = "7")]
		[DebuggerHidden]
		public void Dispose()
		{
		}

		[Token(Token = "0x6001717")]
		[Address(RVA = "0xCD5248", Offset = "0xCD5248", VA = "0xCD5248", Slot = "6")]
		[DebuggerHidden]
		public void Reset()
		{
		}
	}

	[NonSerialized]
	[Token(Token = "0x4000560")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static TutorialManager Instance;

	[Token(Token = "0x4000561")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public GameObject halo;

	[Token(Token = "0x4000562")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float offset;

	[Token(Token = "0x4000563")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public string[] Tutorials;

	[Token(Token = "0x4000564")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[HideInInspector]
	public int tutorialIndex;

	[Token(Token = "0x4000565")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[HideInInspector]
	public bool OneShot;

	[Token(Token = "0x4000566")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int stepIndex;

	[Token(Token = "0x4000567")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private List<string> StepsToReach;

	[Token(Token = "0x4000568")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private List<int> TimeToReach;

	[Token(Token = "0x4000569")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private List<GameObject> trackedResources;

	[Token(Token = "0x400056A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private GameObject resetButton;

	[Token(Token = "0x400056B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private GameObject skipButton;

	[Token(Token = "0x400056C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private GameObject AnimCanvas;

	[Token(Token = "0x400056D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private GameObject projecteur;

	[Token(Token = "0x400056E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Animator Anim;

	[Token(Token = "0x400056F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private TutorialBank bank;

	[Token(Token = "0x4000570")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private string[] rawData;

	[Token(Token = "0x4000571")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private Tutorial[] ActualTutorials;

	[Token(Token = "0x4000572")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool tutorialLoading;

	[Token(Token = "0x4000573")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
	private bool alreadyDone;

	[Token(Token = "0x4000574")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x52")]
	private bool ProjecteurSoundPlaying;

	[Token(Token = "0x4000575")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private Transform videos;

	[Token(Token = "0x4000576")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Video videoPlaying;

	[Token(Token = "0x4000577")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private Video videoPlayed;

	[Token(Token = "0x4000578")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private Material videoMaterial;

	[Token(Token = "0x4000579")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public UnityEvent OnStepChange;

	[Token(Token = "0x400057A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public UnityEvent OnTutorialChange;

	[Token(Token = "0x400057B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public UnityEvent OnResetTutorial;

	[Token(Token = "0x400057C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private GameObject prisonExt;

	[Token(Token = "0x400057D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private GameObject tablet;

	[Token(Token = "0x400057E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private GameObject tutoLand;

	[Token(Token = "0x400057F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private GameObject jail;

	[Token(Token = "0x4000580")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private GameObject furniture;

	[Token(Token = "0x4000581")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private List<Ressource> ressources;

	[Token(Token = "0x4000582")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private Dude[] dudes;

	[Token(Token = "0x4000583")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private Coroutine desactivationDelayee;

	[Token(Token = "0x170000A2")]
	public Tutorial currentTutorial
	{
		[Token(Token = "0x600049E")]
		[Address(RVA = "0xCCF350", Offset = "0xCCF350", VA = "0xCCF350")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600049D")]
	[Address(RVA = "0xCCF2C4", Offset = "0xCCF2C4", VA = "0xCCF2C4")]
	public TutorialManager()
	{
	}

	[Token(Token = "0x600049F")]
	[Address(RVA = "0xCCF390", Offset = "0xCCF390", VA = "0xCCF390")]
	private void Awake()
	{
	}

	[Token(Token = "0x60004A0")]
	[Address(RVA = "0xCCFEC4", Offset = "0xCCFEC4", VA = "0xCCFEC4")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60004A1")]
	[Address(RVA = "0xCCF540", Offset = "0xCCF540", VA = "0xCCF540")]
	private void TrouverReferences()
	{
	}

	[Token(Token = "0x60004A2")]
	[Address(RVA = "0xCCFBEC", Offset = "0xCCFBEC", VA = "0xCCFBEC")]
	private void ActivationTutoland(bool activer)
	{
	}

	[Token(Token = "0x60004A3")]
	[Address(RVA = "0xCD0490", Offset = "0xCD0490", VA = "0xCD0490")]
	[DebuggerHidden]
	private IEnumerator DesactivationDelayee(bool activer)
	{
		return null;
	}

	[Token(Token = "0x60004A4")]
	[Address(RVA = "0xCD0530", Offset = "0xCD0530", VA = "0xCD0530")]
	private void Start()
	{
	}

	[Token(Token = "0x60004A5")]
	[Address(RVA = "0xCD076C", Offset = "0xCD076C", VA = "0xCD076C")]
	[DebuggerHidden]
	private IEnumerator LateStart()
	{
		return null;
	}

	[Token(Token = "0x60004A6")]
	[Address(RVA = "0xCD07F4", Offset = "0xCD07F4", VA = "0xCD07F4")]
	private void Update()
	{
	}

	[Token(Token = "0x60004A7")]
	[Address(RVA = "0xCD09DC", Offset = "0xCD09DC", VA = "0xCD09DC")]
	public void ReceiveStep(string s, GameObject go)
	{
	}

	[Token(Token = "0x60004A8")]
	[Address(RVA = "0xCD15A4", Offset = "0xCD15A4", VA = "0xCD15A4")]
	[DebuggerHidden]
	private IEnumerator GoToNextStep()
	{
		return null;
	}

	[Token(Token = "0x60004A9")]
	[Address(RVA = "0xCD162C", Offset = "0xCD162C", VA = "0xCD162C")]
	public void LoadTutorial(int i, bool subTuto = false)
	{
	}

	[Token(Token = "0x60004AA")]
	[Address(RVA = "0xCD2598", Offset = "0xCD2598", VA = "0xCD2598")]
	public void loadNextTutorial()
	{
	}

	[Token(Token = "0x60004AB")]
	[Address(RVA = "0xCD25F4", Offset = "0xCD25F4", VA = "0xCD25F4")]
	public void resetTutorial()
	{
	}

	[Token(Token = "0x60004AC")]
	[Address(RVA = "0xCD09A8", Offset = "0xCD09A8", VA = "0xCD09A8")]
	public void SkipTutorial()
	{
	}

	[Token(Token = "0x60004AD")]
	[Address(RVA = "0xCD27DC", Offset = "0xCD27DC", VA = "0xCD27DC")]
	[DebuggerHidden]
	private IEnumerator SkipTutorial_Coroutine()
	{
		return null;
	}

	[Token(Token = "0x60004AE")]
	[Address(RVA = "0xCD2744", Offset = "0xCD2744", VA = "0xCD2744")]
	[DebuggerHidden]
	private IEnumerator delayUnactive(bool isReset)
	{
		return null;
	}

	[Token(Token = "0x60004AF")]
	[Address(RVA = "0xCCE518", Offset = "0xCCE518", VA = "0xCCE518")]
	[DebuggerHidden]
	public IEnumerator SetTutorial(bool isReset)
	{
		return null;
	}

	[Token(Token = "0x60004B0")]
	[Address(RVA = "0xCD2874", Offset = "0xCD2874", VA = "0xCD2874")]
	public bool CheckTutorialDone(string tutorial, bool addMissing = true)
	{
		return default(bool);
	}

	[Token(Token = "0x60004B1")]
	[Address(RVA = "0xCD21E8", Offset = "0xCD21E8", VA = "0xCD21E8")]
	public bool CheckTutorialDone(string[] tutorials, bool addMissing = true)
	{
		return default(bool);
	}

	[Token(Token = "0x60004B2")]
	[Address(RVA = "0xCD1E44", Offset = "0xCD1E44", VA = "0xCD1E44")]
	private Video VideoAdd(string name)
	{
		return null;
	}

	[Token(Token = "0x60004B3")]
	[Address(RVA = "0xCD2B48", Offset = "0xCD2B48", VA = "0xCD2B48")]
	private Video VideoFind(string name)
	{
		return null;
	}

	[Token(Token = "0x60004B4")]
	[Address(RVA = "0xCD030C", Offset = "0xCD030C", VA = "0xCD030C")]
	private void VideosRemove()
	{
	}

	[Token(Token = "0x60004B5")]
	[Address(RVA = "0xCD2C34", Offset = "0xCD2C34", VA = "0xCD2C34")]
	public void VideoPreload(string name)
	{
	}

	[Token(Token = "0x60004B6")]
	[Address(RVA = "0xCD2254", Offset = "0xCD2254", VA = "0xCD2254")]
	public void VideoPlay(string name)
	{
	}

	[Token(Token = "0x60004B7")]
	[Address(RVA = "0xCD2C60", Offset = "0xCD2C60", VA = "0xCD2C60")]
	public void VideoPause(string name = "")
	{
	}

	[Token(Token = "0x60004B8")]
	[Address(RVA = "0xCD2D50", Offset = "0xCD2D50", VA = "0xCD2D50")]
	public void VideoPauseQuest()
	{
	}

	[Token(Token = "0x60004B9")]
	[Address(RVA = "0xCCFFD8", Offset = "0xCCFFD8", VA = "0xCCFFD8")]
	private void VideoPauseAll()
	{
	}

	[Token(Token = "0x60004BA")]
	[Address(RVA = "0xCD2E04", Offset = "0xCD2E04", VA = "0xCD2E04")]
	public void VideoUnpause(string name)
	{
	}

	[Token(Token = "0x60004BB")]
	[Address(RVA = "0xCD2F7C", Offset = "0xCD2F7C", VA = "0xCD2F7C")]
	public void VideoUnpauseQuest()
	{
	}

	[Token(Token = "0x60004BC")]
	[Address(RVA = "0xCD3030", Offset = "0xCD3030", VA = "0xCD3030")]
	public void VideoLoop(string name)
	{
	}
}
[Token(Token = "0x20000B6")]
public class ArcadeTimer : MonoBehaviour
{
	[Token(Token = "0x4000584")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public float tempsRestant;

	[Token(Token = "0x4000585")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int tempsMinutes;

	[Token(Token = "0x4000586")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public int tempsSecondes;

	[Token(Token = "0x4000587")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private TextMeshProUGUI timer;

	[Token(Token = "0x4000588")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private float totalTime;

	[Token(Token = "0x60004BD")]
	[Address(RVA = "0xCE4A3C", Offset = "0xCE4A3C", VA = "0xCE4A3C")]
	public ArcadeTimer()
	{
	}

	[Token(Token = "0x60004BE")]
	[Address(RVA = "0xCE4A44", Offset = "0xCE4A44", VA = "0xCE4A44")]
	private void Start()
	{
	}

	[Token(Token = "0x60004BF")]
	[Address(RVA = "0xCE4B10", Offset = "0xCE4B10", VA = "0xCE4B10")]
	private void Update()
	{
	}
}
[Token(Token = "0x20000B7")]
public class AudioPlayer : MonoBehaviour
{
	[Token(Token = "0x20002F8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1F514C", Offset = "0x1F514C")]
	private sealed class <playerAudioRandom>c__Iterator0 : IEnumerator, IDisposable, IEnumerator<object>
	{
		[Token(Token = "0x40011AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal AudioPlayer $this;

		[Token(Token = "0x40011AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		internal object $current;

		[Token(Token = "0x40011B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal bool $disposing;

		[Token(Token = "0x40011B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		internal int $PC;

		[Token(Token = "0x17000265")]
		private object System.Collections.Generic.IEnumerator<object>.Current
		{
			[Token(Token = "0x600171A")]
			[Address(RVA = "0xCE6550", Offset = "0xCE6550", VA = "0xCE6550", Slot = "8")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000266")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600171B")]
			[Address(RVA = "0xCE6558", Offset = "0xCE6558", VA = "0xCE6558", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001718")]
		[Address(RVA = "0xCE60F4", Offset = "0xCE60F4", VA = "0xCE60F4")]
		[DebuggerHidden]
		public <playerAudioRandom>c__Iterator0()
		{
		}

		[Token(Token = "0x6001719")]
		[Address(RVA = "0xCE60FC", Offset = "0xCE60FC", VA = "0xCE60FC", Slot = "5")]
		public bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600171C")]
		[Address(RVA = "0xCE6560", Offset = "0xCE6560", VA = "0xCE6560", Slot = "7")]
		[DebuggerHidden]
		public void Dispose()
		{
		}

		[Token(Token = "0x600171D")]
		[Address(RVA = "0xCE6574", Offset = "0xCE6574", VA = "0xCE6574", Slot = "6")]
		[DebuggerHidden]
		public void Reset()
		{
		}
	}

	[Token(Token = "0x4000589")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public bool ambianceLoop;

	[Token(Token = "0x400058A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD")]
	private bool ambiancePlaying;

	[Token(Token = "0x400058B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE")]
	public bool nighttimeAudio;

	[Token(Token = "0x400058C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float delaiEntreAudioRandoms;

	[Token(Token = "0x400058D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float pitchMin;

	[Token(Token = "0x400058E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float pitchMax;

	[Token(Token = "0x400058F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float volumeMin;

	[Token(Token = "0x4000590")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float volumeMax;

	[Token(Token = "0x4000591")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private AudioSource audiosource;

	[Token(Token = "0x4000592")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AudioClip[] leCLip;

	[Token(Token = "0x4000593")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private Coroutine playerCoroutine;

	[Token(Token = "0x60004C0")]
	[Address(RVA = "0xCE5DA8", Offset = "0xCE5DA8", VA = "0xCE5DA8")]
	public AudioPlayer()
	{
	}

	[Token(Token = "0x60004C1")]
	[Address(RVA = "0xCE5DB0", Offset = "0xCE5DB0", VA = "0xCE5DB0")]
	private void Start()
	{
	}

	[Token(Token = "0x60004C2")]
	[Address(RVA = "0xCE5EC0", Offset = "0xCE5EC0", VA = "0xCE5EC0")]
	private void Update()
	{
	}

	[Token(Token = "0x60004C3")]
	[Address(RVA = "0xCE5E40", Offset = "0xCE5E40", VA = "0xCE5E40")]
	[DebuggerHidden]
	private IEnumerator playerAudioRandom()
	{
		return null;
	}
}
[Token(Token = "0x20000B8")]
public class AutoDestroy : SpawnableObject
{
	[Token(Token = "0x4000594")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float timeBeforeDestroy;

	[Token(Token = "0x4000595")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public string Event;

	[Token(Token = "0x4000596")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool scaleDestroy;

	[Token(Token = "0x4000597")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	private bool goingUp;

	[Token(Token = "0x4000598")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private Vector3 baseScale;

	[Token(Token = "0x4000599")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Vector3 upScale;

	[Token(Token = "0x400059A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float timer;

	[Token(Token = "0x60004C4")]
	[Address(RVA = "0xCE65F8", Offset = "0xCE65F8", VA = "0xCE65F8")]
	public AutoDestroy()
	{
	}

	[Token(Token = "0x60004C5")]
	[Address(RVA = "0xCE6608", Offset = "0xCE6608", VA = "0xCE6608")]
	private void Start()
	{
	}

	[Token(Token = "0x60004C6")]
	[Address(RVA = "0xCE6730", Offset = "0xCE6730", VA = "0xCE6730", Slot = "4")]
	public override void Reset()
	{
	}

	[Token(Token = "0x60004C7")]
	[Address(RVA = "0xCE678C", Offset = "0xCE678C", VA = "0xCE678C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60004C8")]
	[Address(RVA = "0xCE688C", Offset = "0xCE688C", VA = "0xCE688C")]
	private void Update()
	{
	}

	[Token(Token = "0x60004C9")]
	[Address(RVA = "0xCE69E4", Offset = "0xCE69E4", VA = "0xCE69E4")]
	private void ScalingToDie()
	{
	}
}
[Token(Token = "0x20000B9")]
public class BasicAnimation : MonoBehaviour
{
	[Token(Token = "0x400059B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public bool basicRandomRotation;

	[Token(Token = "0x400059C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float rotationForce;

	[Token(Token = "0x400059D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float rotationSpeedBase1;

	[Token(Token = "0x400059E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Quaternion initialRotation;

	[Token(Token = "0x400059F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float monPetitPerlin1;

	[Token(Token = "0x40005A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float monPetitPerlin2;

	[Token(Token = "0x40005A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float monPetitPerlin3;

	[Token(Token = "0x60004CA")]
	[Address(RVA = "0xCE6CEC", Offset = "0xCE6CEC", VA = "0xCE6CEC")]
	public BasicAnimation()
	{
	}

	[Token(Token = "0x60004CB")]
	[Address(RVA = "0xCE6CF4", Offset = "0xCE6CF4", VA = "0xCE6CF4")]
	private void Start()
	{
	}

	[Token(Token = "0x60004CC")]
	[Address(RVA = "0xCE6D40", Offset = "0xCE6D40", VA = "0xCE6D40")]
	private void Update()
	{
	}
}
[Token(Token = "0x20000BA")]
public class BerthaAnimator : CharacterAnimator
{
	[Token(Token = "0x60004CD")]
	[Address(RVA = "0xCE70E0", Offset = "0xCE70E0", VA = "0xCE70E0")]
	public BerthaAnimator()
	{
	}
}
[Token(Token = "0x20000BB")]
public class BlinkScript : MonoBehaviour
{
	[Token(Token = "0x40005A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private bool IsBlink;

	[Token(Token = "0x40005A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD")]
	private bool Blinking;

	[Token(Token = "0x60004CE")]
	[Address(RVA = "0xCE8D50", Offset = "0xCE8D50", VA = "0xCE8D50")]
	public BlinkScript()
	{
	}

	[Token(Token = "0x60004CF")]
	[Address(RVA = "0xCE8D58", Offset = "0xCE8D58", VA = "0xCE8D58")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x60004D0")]
	[Address(RVA = "0xCE8EDC", Offset = "0xCE8EDC", VA = "0xCE8EDC")]
	private void OnCollisionStay(Collision col)
	{
	}
}
[Serializable]
[Token(Token = "0x20000BC")]
public class ColliderParam
{
	[Token(Token = "0x40005A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public Vector3 center;

	[Token(Token = "0x40005A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public Vector3 size;

	[Token(Token = "0x60004D1")]
	[Address(RVA = "0xCF84B0", Offset = "0xCF84B0", VA = "0xCF84B0")]
	public ColliderParam()
	{
	}
}
[Token(Token = "0x20000BD")]
public class BoxScript : MonoBehaviour
{
	[Token(Token = "0x20002F9")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1F51FC", Offset = "0x1F51FC")]
	private sealed class <Unactive>c__Iterator0 : IEnumerator, IDisposable, IEnumerator<object>
	{
		[Token(Token = "0x40011B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal BoxScript $this;

		[Token(Token = "0x40011B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		internal object $current;

		[Token(Token = "0x40011B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal bool $disposing;

		[Token(Token = "0x40011B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		internal int $PC;

		[Token(Token = "0x17000267")]
		private object System.Collections.Generic.IEnumerator<object>.Current
		{
			[Token(Token = "0x6001720")]
			[Address(RVA = "0xCED854", Offset = "0xCED854", VA = "0xCED854", Slot = "8")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000268")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001721")]
			[Address(RVA = "0xCED85C", Offset = "0xCED85C", VA = "0xCED85C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600171E")]
		[Address(RVA = "0xCED56C", Offset = "0xCED56C", VA = "0xCED56C")]
		[DebuggerHidden]
		public <Unactive>c__Iterator0()
		{
		}

		[Token(Token = "0x600171F")]
		[Address(RVA = "0xCED758", Offset = "0xCED758", VA = "0xCED758", Slot = "5")]
		public bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001722")]
		[Address(RVA = "0xCED864", Offset = "0xCED864", VA = "0xCED864", Slot = "7")]
		[DebuggerHidden]
		public void Dispose()
		{
		}

		[Token(Token = "0x6001723")]
		[Address(RVA = "0xCED878", Offset = "0xCED878", VA = "0xCED878", Slot = "6")]
		[DebuggerHidden]
		public void Reset()
		{
		}
	}

	[Token(Token = "0x40005A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public int MaxCapacity;

	[Token(Token = "0x40005A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Vector3 centerOverlap;

	[Token(Token = "0x40005A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Vector3 sizeOverlap;

	[Token(Token = "0x40005A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[HideInInspector]
	public int capacity;

	[Token(Token = "0x40005AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[HideInInspector]
	public string TypeToStock;

	[Token(Token = "0x40005AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[HideInInspector]
	public List<int> objectsCapacity;

	[Token(Token = "0x40005AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[HideInInspector]
	public int TotalCapacity;

	[Token(Token = "0x40005AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool active;

	[Token(Token = "0x40005AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float spawnTimer;

	[Token(Token = "0x40005AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Image[] imgs;

	[Token(Token = "0x40005B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private TextMeshProUGUI[] txts;

	[Token(Token = "0x40005B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private NVRHand hand;

	[Token(Token = "0x40005B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private GameObject HighlightTop;

	[Token(Token = "0x40005B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Transform trigger;

	[Token(Token = "0x40005B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private NVRInteractableItem obj;

	[Token(Token = "0x40005B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private BoxMatChange randomTextureSprite;

	[Token(Token = "0x60004D2")]
	[Address(RVA = "0xCEBCD8", Offset = "0xCEBCD8", VA = "0xCEBCD8")]
	public BoxScript()
	{
	}

	[Token(Token = "0x60004D3")]
	[Address(RVA = "0xCEBD88", Offset = "0xCEBD88", VA = "0xCEBD88")]
	private void Start()
	{
	}

	[Token(Token = "0x60004D4")]
	[Address(RVA = "0xCEC2E0", Offset = "0xCEC2E0", VA = "0xCEC2E0")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x60004D5")]
	[Address(RVA = "0xCED024", Offset = "0xCED024", VA = "0xCED024")]
	public void refreshNumber()
	{
	}

	[Token(Token = "0x60004D6")]
	[Address(RVA = "0xCEBF98", Offset = "0xCEBF98", VA = "0xCEBF98")]
	public void setBox(string NewType)
	{
	}

	[Token(Token = "0x60004D7")]
	[Address(RVA = "0xCED1CC", Offset = "0xCED1CC", VA = "0xCED1CC")]
	public void RemoveOneObject()
	{
	}

	[Token(Token = "0x60004D8")]
	[Address(RVA = "0xCECA28", Offset = "0xCECA28", VA = "0xCECA28")]
	public void spawnObject(bool AttachToHand)
	{
	}

	[Token(Token = "0x60004D9")]
	[Address(RVA = "0xCED4EC", Offset = "0xCED4EC", VA = "0xCED4EC")]
	[DebuggerHidden]
	private IEnumerator Unactive()
	{
		return null;
	}

	[Token(Token = "0x60004DA")]
	[Address(RVA = "0xCEC700", Offset = "0xCEC700", VA = "0xCEC700")]
	public void ObjectManagement(Collider col)
	{
	}

	[Token(Token = "0x60004DB")]
	[Address(RVA = "0xCED32C", Offset = "0xCED32C", VA = "0xCED32C")]
	public void ResetBoxType()
	{
	}

	[Token(Token = "0x60004DC")]
	[Address(RVA = "0xCED574", Offset = "0xCED574", VA = "0xCED574")]
	public void SetNewBoxType(string type, int capacityWanted)
	{
	}
}
[Token(Token = "0x20000BE")]
public enum Triggers
{
	[Token(Token = "0x40005B7")]
	HandEnter,
	[Token(Token = "0x40005B8")]
	HandExit,
	[Token(Token = "0x40005B9")]
	ParticulesClick,
	[Token(Token = "0x40005BA")]
	MakeNull
}
[Token(Token = "0x20000BF")]
public class ButtonAnimator : MonoBehaviour
{
	[Token(Token = "0x20000C0")]
	public enum ButtonAnimType
	{
		[Token(Token = "0x40005C4")]
		ColorAndMotion,
		[Token(Token = "0x40005C5")]
		ColorOnly,
		[Token(Token = "0x40005C6")]
		MotionOnly,
		[Token(Token = "0x40005C7")]
		Nothing
	}

	[Token(Token = "0x20002FA")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1F527C", Offset = "0x1F527C")]
	private sealed class <FadeCoroutine>c__Iterator0 : IEnumerator, IDisposable, IEnumerator<object>
	{
		[Token(Token = "0x40011B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal Color <startColor>__0;

		[Token(Token = "0x40011B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal float <f>__0;

		[Token(Token = "0x40011B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		internal Color c;

		[Token(Token = "0x40011B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		internal ButtonAnimator $this;

		[Token(Token = "0x40011BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		internal object $current;

		[Token(Token = "0x40011BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		internal bool $disposing;

		[Token(Token = "0x40011BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		internal int $PC;

		[Token(Token = "0x17000269")]
		private object System.Collections.Generic.IEnumerator<object>.Current
		{
			[Token(Token = "0x6001726")]
			[Address(RVA = "0xCEE284", Offset = "0xCEE284", VA = "0xCEE284", Slot = "8")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700026A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001727")]
			[Address(RVA = "0xCEE28C", Offset = "0xCEE28C", VA = "0xCEE28C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001724")]
		[Address(RVA = "0xCEDFD8", Offset = "0xCEDFD8", VA = "0xCEDFD8")]
		[DebuggerHidden]
		public <FadeCoroutine>c__Iterator0()
		{
		}

		[Token(Token = "0x6001725")]
		[Address(RVA = "0xCEE0E4", Offset = "0xCEE0E4", VA = "0xCEE0E4", Slot = "5")]
		public bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001728")]
		[Address(RVA = "0xCEE294", Offset = "0xCEE294", VA = "0xCEE294", Slot = "7")]
		[DebuggerHidden]
		public void Dispose()
		{
		}

		[Token(Token = "0x6001729")]
		[Address(RVA = "0xCEE2A8", Offset = "0xCEE2A8", VA = "0xCEE2A8", Slot = "6")]
		[DebuggerHidden]
		public void Reset()
		{
		}
	}

	[Token(Token = "0x40005BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public ButtonAnimType buttonAnimType;

	[Token(Token = "0x40005BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[HideInInspector]
	public Animator anim;

	[Token(Token = "0x40005BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private BrownianMotion brown;

	[Token(Token = "0x40005BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private ButtonScript bttn;

	[Token(Token = "0x40005BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private bool isColor;

	[Token(Token = "0x40005C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Image colorImage;

	[Token(Token = "0x40005C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Coroutine currentFade;

	[Token(Token = "0x40005C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool isMotion;

	[Token(Token = "0x60004DD")]
	[Address(RVA = "0xCED8FC", Offset = "0xCED8FC", VA = "0xCED8FC")]
	public ButtonAnimator()
	{
	}

	[Token(Token = "0x60004DE")]
	[Address(RVA = "0xCED90C", Offset = "0xCED90C", VA = "0xCED90C")]
	private void Start()
	{
	}

	[Token(Token = "0x60004DF")]
	[Address(RVA = "0xCED910", Offset = "0xCED910", VA = "0xCED910")]
	private void Initialize()
	{
	}

	[Token(Token = "0x60004E0")]
	[Address(RVA = "0xCEDB48", Offset = "0xCEDB48", VA = "0xCEDB48")]
	public void SetAnimTrigger(Triggers action)
	{
	}

	[Token(Token = "0x60004E1")]
	[Address(RVA = "0xCEDEC0", Offset = "0xCEDEC0", VA = "0xCEDEC0")]
	public void FadeToColor(Color c)
	{
	}

	[Token(Token = "0x60004E2")]
	[Address(RVA = "0xCEDF2C", Offset = "0xCEDF2C", VA = "0xCEDF2C")]
	[DebuggerHidden]
	private IEnumerator FadeCoroutine(Color c)
	{
		return null;
	}

	[Token(Token = "0x60004E3")]
	[Address(RVA = "0xCEDFE0", Offset = "0xCEDFE0", VA = "0xCEDFE0")]
	public void SkipToBaseColor()
	{
	}
}
[Token(Token = "0x20000C1")]
public class ButtonLeverEngagedResult : MonoBehaviour
{
	[Token(Token = "0x40005C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public bool buttonObj;

	[Token(Token = "0x40005C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private NVRLever lever;

	[Token(Token = "0x40005CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private NVRButton button;

	[Token(Token = "0x40005CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool singleCall;

	[Token(Token = "0x40005CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	private bool calledOnce;

	[Token(Token = "0x40005CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public string queFaire;

	[Token(Token = "0x60004E4")]
	[Address(RVA = "0xCEE32C", Offset = "0xCEE32C", VA = "0xCEE32C")]
	public ButtonLeverEngagedResult()
	{
	}

	[Token(Token = "0x60004E5")]
	[Address(RVA = "0xCEE334", Offset = "0xCEE334", VA = "0xCEE334")]
	private void Awake()
	{
	}

	[Token(Token = "0x60004E6")]
	[Address(RVA = "0xCEE420", Offset = "0xCEE420", VA = "0xCEE420")]
	private void Start()
	{
	}

	[Token(Token = "0x60004E7")]
	[Address(RVA = "0xCEE424", Offset = "0xCEE424", VA = "0xCEE424")]
	private void Update()
	{
	}

	[Token(Token = "0x60004E8")]
	[Address(RVA = "0xCEE510", Offset = "0xCEE510", VA = "0xCEE510")]
	private void Result()
	{
	}
}
namespace Trebuchet.Contrepoids
{
	[Token(Token = "0x20000C2")]
	public class CalibratorPBvr : Calibrator
	{
		[Token(Token = "0x40005CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		private Transform childToAlignTransform;

		[Token(Token = "0x40005CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Vector3 offset;

		[Token(Token = "0x170000A3")]
		protected override Transform ChildToAlign
		{
			[Token(Token = "0x60004EB")]
			[Address(RVA = "0xCC0EE4", Offset = "0xCC0EE4", VA = "0xCC0EE4", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60004E9")]
		[Address(RVA = "0xCC0EA4", Offset = "0xCC0EA4", VA = "0xCC0EA4")]
		public CalibratorPBvr()
		{
		}

		[Token(Token = "0x60004EA")]
		[Address(RVA = "0xCC0EAC", Offset = "0xCC0EAC", VA = "0xCC0EAC")]
		private new void Start()
		{
		}
	}
}
[Token(Token = "0x20000C3")]
public class CalibratorUI : MonoBehaviour
{
	[Token(Token = "0x40005D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public string SceneToLoadAfterCalibration;

	[Token(Token = "0x40005D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private NVRPlayer player;

	[Token(Token = "0x40005D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private Calibrator calibrator;

	[Token(Token = "0x40005D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Image timer;

	[Token(Token = "0x40005D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private Image validation;

	[Token(Token = "0x40005D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool isCalibrated;

	[Token(Token = "0x40005D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Option option;

	[Token(Token = "0x60004EC")]
	[Address(RVA = "0xCF169C", Offset = "0xCF169C", VA = "0xCF169C")]
	public CalibratorUI()
	{
	}

	[Token(Token = "0x60004ED")]
	[Address(RVA = "0xCF16A4", Offset = "0xCF16A4", VA = "0xCF16A4")]
	private void Awake()
	{
	}

	[Token(Token = "0x60004EE")]
	[Address(RVA = "0xCF1748", Offset = "0xCF1748", VA = "0xCF1748")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60004EF")]
	[Address(RVA = "0xCF17EC", Offset = "0xCF17EC", VA = "0xCF17EC")]
	private void Start()
	{
	}

	[Token(Token = "0x60004F0")]
	[Address(RVA = "0xCF1E24", Offset = "0xCF1E24", VA = "0xCF1E24")]
	private void Update()
	{
	}

	[Token(Token = "0x60004F1")]
	[Address(RVA = "0xCF236C", Offset = "0xCF236C", VA = "0xCF236C")]
	private void OnSceneUnloaded(Scene scene)
	{
	}

	[Token(Token = "0x60004F2")]
	[Address(RVA = "0xCF1E68", Offset = "0xCF1E68", VA = "0xCF1E68")]
	private void FollowTheHead(float lerp)
	{
	}

	[Token(Token = "0x60004F3")]
	[Address(RVA = "0xCF212C", Offset = "0xCF212C", VA = "0xCF212C")]
	private void Calibration()
	{
	}

	[Token(Token = "0x60004F4")]
	[Address(RVA = "0xCF2518", Offset = "0xCF2518", VA = "0xCF2518")]
	private void saveCalibration()
	{
	}

	[Token(Token = "0x60004F5")]
	[Address(RVA = "0xCF2494", Offset = "0xCF2494", VA = "0xCF2494")]
	private void EndCalibration()
	{
	}
}
[Token(Token = "0x20000C4")]
public class StandingChoiceUI : MonoBehaviour
{
	[Token(Token = "0x40005D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public TextMeshProUGUI AccessibilityLabel;

	[Token(Token = "0x40005D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private NVRPlayer player;

	[Token(Token = "0x40005D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private Option option;

	[Token(Token = "0x60004F6")]
	[Address(RVA = "0xCB7DC8", Offset = "0xCB7DC8", VA = "0xCB7DC8")]
	public StandingChoiceUI()
	{
	}

	[Token(Token = "0x60004F7")]
	[Address(RVA = "0xCB7DD0", Offset = "0xCB7DD0", VA = "0xCB7DD0")]
	private void Start()
	{
	}

	[Token(Token = "0x60004F8")]
	[Address(RVA = "0xCB7FA4", Offset = "0xCB7FA4", VA = "0xCB7FA4")]
	private void Update()
	{
	}

	[Token(Token = "0x60004F9")]
	[Address(RVA = "0xCB7FD4", Offset = "0xCB7FD4", VA = "0xCB7FD4")]
	private void FollowTheHead(float lerp)
	{
	}

	[Token(Token = "0x60004FA")]
	[Address(RVA = "0xCB8298", Offset = "0xCB8298", VA = "0xCB8298")]
	public void ChangeStanding(int icr)
	{
	}

	[Token(Token = "0x60004FB")]
	[Address(RVA = "0xCB8404", Offset = "0xCB8404", VA = "0xCB8404")]
	public void Apply()
	{
	}
}
[Token(Token = "0x20000C5")]
public class CancelButtonTrack : MonoBehaviour
{
	[Token(Token = "0x40005DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private TextMeshProUGUI doneText;

	[Token(Token = "0x60004FC")]
	[Address(RVA = "0xCF2FBC", Offset = "0xCF2FBC", VA = "0xCF2FBC")]
	public CancelButtonTrack()
	{
	}

	[Token(Token = "0x60004FD")]
	[Address(RVA = "0xCF2FC4", Offset = "0xCF2FC4", VA = "0xCF2FC4")]
	private void Start()
	{
	}

	[Token(Token = "0x60004FE")]
	[Address(RVA = "0xCF302C", Offset = "0xCF302C", VA = "0xCF302C")]
	private void Update()
	{
	}
}
[Token(Token = "0x20000C6")]
public class CanvasDisabler : MonoBehaviour
{
	[Token(Token = "0x60004FF")]
	[Address(RVA = "0xCF31F8", Offset = "0xCF31F8", VA = "0xCF31F8")]
	public CanvasDisabler()
	{
	}

	[Token(Token = "0x6000500")]
	[Address(RVA = "0xCF3200", Offset = "0xCF3200", VA = "0xCF3200")]
	public void disableMe()
	{
	}
}
[Token(Token = "0x20000C7")]
public class Cheater : MonoBehaviour
{
	[Token(Token = "0x20002FB")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1F530C", Offset = "0x1F530C")]
	private sealed class <TesterBoutons>c__Iterator0 : IEnumerator, IDisposable, IEnumerator<object>
	{
		[Token(Token = "0x40011BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal List<string> <liste>__0;

		[Token(Token = "0x40011BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		internal NVRPlayer <player>__0;

		[Token(Token = "0x40011BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal int <Iterations>__0;

		[Token(Token = "0x40011C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		internal string <s>__0;

		[Token(Token = "0x40011C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal List<string>.Enumerator $locvar0;

		[Token(Token = "0x40011C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		internal Cheater $this;

		[Token(Token = "0x40011C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		internal object $current;

		[Token(Token = "0x40011C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		internal bool $disposing;

		[Token(Token = "0x40011C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		internal int $PC;

		[Token(Token = "0x1700026B")]
		private object System.Collections.Generic.IEnumerator<object>.Current
		{
			[Token(Token = "0x600172C")]
			[Address(RVA = "0xCF734C", Offset = "0xCF734C", VA = "0xCF734C", Slot = "8")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700026C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600172D")]
			[Address(RVA = "0xCF7354", Offset = "0xCF7354", VA = "0xCF7354", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600172A")]
		[Address(RVA = "0xCF66B0", Offset = "0xCF66B0", VA = "0xCF66B0")]
		[DebuggerHidden]
		public <TesterBoutons>c__Iterator0()
		{
		}

		[Token(Token = "0x600172B")]
		[Address(RVA = "0xCF66B8", Offset = "0xCF66B8", VA = "0xCF66B8", Slot = "5")]
		public bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600172E")]
		[Address(RVA = "0xCF735C", Offset = "0xCF735C", VA = "0xCF735C", Slot = "7")]
		[DebuggerHidden]
		public void Dispose()
		{
		}

		[Token(Token = "0x600172F")]
		[Address(RVA = "0xCF7370", Offset = "0xCF7370", VA = "0xCF7370", Slot = "6")]
		[DebuggerHidden]
		public void Reset()
		{
		}
	}

	[Token(Token = "0x40005DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private int IterationsMax;

	[Token(Token = "0x6000501")]
	[Address(RVA = "0xCF5FF0", Offset = "0xCF5FF0", VA = "0xCF5FF0")]
	public Cheater()
	{
	}

	[Token(Token = "0x6000502")]
	[Address(RVA = "0xCF6000", Offset = "0xCF6000", VA = "0xCF6000")]
	private void Start()
	{
	}

	[Token(Token = "0x6000503")]
	[Address(RVA = "0xCF6098", Offset = "0xCF6098", VA = "0xCF6098")]
	private void Update()
	{
	}

	[Token(Token = "0x6000504")]
	[Address(RVA = "0xCF6630", Offset = "0xCF6630", VA = "0xCF6630")]
	[DebuggerHidden]
	private IEnumerator TesterBoutons()
	{
		return null;
	}
}
[Token(Token = "0x20000C8")]
public class ClockScript : NVRInteractable
{
	[Token(Token = "0x40005DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private Transform grandeAig;

	[Token(Token = "0x40005DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Transform petiteAig;

	[Token(Token = "0x40005DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private GameTextLink txtLink;

	[Token(Token = "0x40005DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public UnityEvent OnHovering;

	[Token(Token = "0x40005E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private bool showHint;

	[Token(Token = "0x40005E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private NVRHand lastHintedHand;

	[Token(Token = "0x40005E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private HintAnim anim;

	[Token(Token = "0x40005E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private string textToDisplay;

	[Token(Token = "0x6000505")]
	[Address(RVA = "0xCF73F4", Offset = "0xCF73F4", VA = "0xCF73F4")]
	public ClockScript()
	{
	}

	[Token(Token = "0x6000506")]
	[Address(RVA = "0xCF73FC", Offset = "0xCF73FC", VA = "0xCF73FC", Slot = "6")]
	protected override void Start()
	{
	}

	[Token(Token = "0x6000507")]
	[Address(RVA = "0xCF7654", Offset = "0xCF7654", VA = "0xCF7654")]
	private void RefreshClockHint()
	{
	}

	[Token(Token = "0x6000508")]
	[Address(RVA = "0xCF78D8", Offset = "0xCF78D8", VA = "0xCF78D8", Slot = "14")]
	public override void HoveringUpdate(NVRHand hand, float forTime)
	{
	}

	[Token(Token = "0x6000509")]
	[Address(RVA = "0xCF790C", Offset = "0xCF790C", VA = "0xCF790C")]
	private void ManageHintVisibility()
	{
	}

	[Token(Token = "0x600050A")]
	[Address(RVA = "0xCF7658", Offset = "0xCF7658", VA = "0xCF7658")]
	private void RefreshHint()
	{
	}

	[Token(Token = "0x600050B")]
	[Address(RVA = "0xCF7B3C", Offset = "0xCF7B3C", VA = "0xCF7B3C", Slot = "12")]
	public override void BeginInteraction(NVRHand hand)
	{
	}

	[Token(Token = "0x600050C")]
	[Address(RVA = "0xCF7D18", Offset = "0xCF7D18", VA = "0xCF7D18", Slot = "11")]
	protected override void Update()
	{
	}
}
[Token(Token = "0x20000C9")]
public class ContinueInPrisonScore : MonoBehaviour
{
	[Token(Token = "0x40005E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private string NextSceneName;

	[Token(Token = "0x40005E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public GameTextLink EndGame;

	[Token(Token = "0x40005E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public GameTextLink Next;

	[Token(Token = "0x600050D")]
	[Address(RVA = "0xCF84C8", Offset = "0xCF84C8", VA = "0xCF84C8")]
	public ContinueInPrisonScore()
	{
	}

	[Token(Token = "0x600050E")]
	[Address(RVA = "0xCF84D0", Offset = "0xCF84D0", VA = "0xCF84D0")]
	public void Start()
	{
	}

	[Token(Token = "0x600050F")]
	[Address(RVA = "0xCF8638", Offset = "0xCF8638", VA = "0xCF8638")]
	public void NextPrison()
	{
	}
}
[Token(Token = "0x20000CA")]
public class ContinueInSandboxMode : MonoBehaviour
{
	[Token(Token = "0x40005E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private int SaveId;

	[Token(Token = "0x6000510")]
	[Address(RVA = "0xCF86BC", Offset = "0xCF86BC", VA = "0xCF86BC")]
	public ContinueInSandboxMode()
	{
	}

	[Token(Token = "0x6000511")]
	[Address(RVA = "0xCF86C4", Offset = "0xCF86C4", VA = "0xCF86C4")]
	public void Start()
	{
	}

	[Token(Token = "0x6000512")]
	[Address(RVA = "0xCF87DC", Offset = "0xCF87DC", VA = "0xCF87DC")]
	public void NextPrison()
	{
	}
}
[Token(Token = "0x20000CB")]
public class BoxMatChange : SpawnableObject
{
	[Token(Token = "0x40005E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Texture[] mats;

	[Token(Token = "0x40005E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private Renderer _renderer;

	[Token(Token = "0x6000513")]
	[Address(RVA = "0xCEBA8C", Offset = "0xCEBA8C", VA = "0xCEBA8C")]
	public BoxMatChange()
	{
	}

	[Token(Token = "0x6000514")]
	[Address(RVA = "0xCEBA94", Offset = "0xCEBA94", VA = "0xCEBA94")]
	public void setSprite()
	{
	}

	[Token(Token = "0x6000515")]
	[Address(RVA = "0xCEBCD0", Offset = "0xCEBCD0", VA = "0xCEBCD0", Slot = "4")]
	public override void Reset()
	{
	}

	[Token(Token = "0x6000516")]
	[Address(RVA = "0xCEBCD4", Offset = "0xCEBCD4", VA = "0xCEBCD4", Slot = "5")]
	public override void ShutDown()
	{
	}
}
[Token(Token = "0x20000CC")]
public class HighlightManager : MonoBehaviour
{
	[Token(Token = "0x20002FC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1F53E4", Offset = "0x1F53E4")]
	private sealed class <Allumation>c__Iterator0 : IEnumerator, IDisposable, IEnumerator<object>
	{
		[Token(Token = "0x40011C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal HighlightManager $this;

		[Token(Token = "0x40011C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		internal object $current;

		[Token(Token = "0x40011C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal bool $disposing;

		[Token(Token = "0x40011C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		internal int $PC;

		[Token(Token = "0x1700026D")]
		private object System.Collections.Generic.IEnumerator<object>.Current
		{
			[Token(Token = "0x6001732")]
			[Address(RVA = "0xC6B898", Offset = "0xC6B898", VA = "0xC6B898", Slot = "8")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700026E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001733")]
			[Address(RVA = "0xC6B8A0", Offset = "0xC6B8A0", VA = "0xC6B8A0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001730")]
		[Address(RVA = "0xC6B834", Offset = "0xC6B834", VA = "0xC6B834")]
		[DebuggerHidden]
		public <Allumation>c__Iterator0()
		{
		}

		[Token(Token = "0x6001731")]
		[Address(RVA = "0xC6B83C", Offset = "0xC6B83C", VA = "0xC6B83C", Slot = "5")]
		public bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001734")]
		[Address(RVA = "0xC6B8A8", Offset = "0xC6B8A8", VA = "0xC6B8A8", Slot = "7")]
		[DebuggerHidden]
		public void Dispose()
		{
		}

		[Token(Token = "0x6001735")]
		[Address(RVA = "0xC6B8BC", Offset = "0xC6B8BC", VA = "0xC6B8BC", Slot = "6")]
		[DebuggerHidden]
		public void Reset()
		{
		}
	}

	[Token(Token = "0x40005EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private GameObject highlight;

	[Token(Token = "0x40005EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private Transform[] Graph;

	[Token(Token = "0x40005EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	internal bool showing;

	[Token(Token = "0x40005ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x15")]
	private bool isShow;

	[Token(Token = "0x40005EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Color Couleur;

	[Token(Token = "0x40005EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private List<Material> materiaux;

	[Token(Token = "0x40005F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private Coroutine allumation;

	[Token(Token = "0x6000517")]
	[Address(RVA = "0xC6AD00", Offset = "0xC6AD00", VA = "0xC6AD00")]
	public HighlightManager()
	{
	}

	[Token(Token = "0x6000518")]
	[Address(RVA = "0xC6ADDC", Offset = "0xC6ADDC", VA = "0xC6ADDC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000519")]
	[Address(RVA = "0xC6AFA8", Offset = "0xC6AFA8", VA = "0xC6AFA8")]
	private void Update()
	{
	}

	[Token(Token = "0x600051A")]
	[Address(RVA = "0xC6ADE0", Offset = "0xC6ADE0", VA = "0xC6ADE0")]
	public void FindHighlight()
	{
	}

	[Token(Token = "0x600051B")]
	[Address(RVA = "0xC6B5DC", Offset = "0xC6B5DC", VA = "0xC6B5DC")]
	public void show()
	{
	}

	[Token(Token = "0x600051C")]
	[Address(RVA = "0xC6B3AC", Offset = "0xC6B3AC", VA = "0xC6B3AC")]
	private void Trouver()
	{
	}

	[Token(Token = "0x600051D")]
	[Address(RVA = "0xC6B5E8", Offset = "0xC6B5E8", VA = "0xC6B5E8")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600051E")]
	[Address(RVA = "0xC6B0C4", Offset = "0xC6B0C4", VA = "0xC6B0C4")]
	private void Activer()
	{
	}

	[Token(Token = "0x600051F")]
	[Address(RVA = "0xC6B23C", Offset = "0xC6B23C", VA = "0xC6B23C")]
	private void Desactiver()
	{
	}

	[Token(Token = "0x6000520")]
	[Address(RVA = "0xC6B74C", Offset = "0xC6B74C", VA = "0xC6B74C")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0x1F536C", Offset = "0x1F536C")]
	private void Allumer()
	{
	}

	[Token(Token = "0x6000521")]
	[Address(RVA = "0xC6B804", Offset = "0xC6B804", VA = "0xC6B804")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0x1F53A0", Offset = "0x1F53A0")]
	private void Eteindre()
	{
	}

	[Token(Token = "0x6000522")]
	[Address(RVA = "0xC6B784", Offset = "0xC6B784", VA = "0xC6B784")]
	[DebuggerHidden]
	private IEnumerator Allumation()
	{
		return null;
	}
}
[Token(Token = "0x20000CD")]
public class HighlightMeuble : MonoBehaviour
{
	[Token(Token = "0x40005F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private GameObject highlight;

	[Token(Token = "0x40005F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private GameObject highlightBox;

	[Token(Token = "0x40005F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private GameObject highlightMeuble;

	[Token(Token = "0x40005F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private GameObject greenHighlight;

	[Token(Token = "0x40005F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private GameObject sprite;

	[Token(Token = "0x40005F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private GameObject Boite;

	[Token(Token = "0x40005F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private GameObject Colliders;

	[Token(Token = "0x40005F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Transform Graph;

	[Token(Token = "0x40005F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private Vector3 offset;

	[Token(Token = "0x40005FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private NVRHand hand;

	[Token(Token = "0x40005FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	internal NVRInteractableItem obj;

	[Token(Token = "0x40005FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool showing;

	[Token(Token = "0x40005FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
	private bool isShow;

	[Token(Token = "0x40005FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public Color CouleurMeuble;

	[Token(Token = "0x40005FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public Color CouleurBoite;

	[Token(Token = "0x4000600")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private List<Material> materiaux;

	[Token(Token = "0x4000601")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private List<Material> materiauxMeuble;

	[Token(Token = "0x4000602")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private List<Material> materiauxBoite;

	[Token(Token = "0x6000523")]
	[Address(RVA = "0xC6B940", Offset = "0xC6B940", VA = "0xC6B940")]
	public HighlightMeuble()
	{
	}

	[Token(Token = "0x6000524")]
	[Address(RVA = "0xC6BA54", Offset = "0xC6BA54", VA = "0xC6BA54")]
	private void Update()
	{
	}

	[Token(Token = "0x6000525")]
	[Address(RVA = "0xC6C01C", Offset = "0xC6C01C", VA = "0xC6C01C")]
	public void FindHighlight()
	{
	}

	[Token(Token = "0x6000526")]
	[Address(RVA = "0xC6CA04", Offset = "0xC6CA04", VA = "0xC6CA04")]
	public void HideGreenHl()
	{
	}

	[Token(Token = "0x6000527")]
	[Address(RVA = "0xC6CA30", Offset = "0xC6CA30", VA = "0xC6CA30")]
	public void ShowGreenHl()
	{
	}

	[Token(Token = "0x6000528")]
	[Address(RVA = "0xC6CA5C", Offset = "0xC6CA5C", VA = "0xC6CA5C")]
	public void ShowSprite()
	{
	}

	[Token(Token = "0x6000529")]
	[Address(RVA = "0xC6CC6C", Offset = "0xC6CC6C", VA = "0xC6CC6C")]
	public void HideSprite()
	{
	}

	[Token(Token = "0x600052A")]
	[Address(RVA = "0xC6CEE8", Offset = "0xC6CEE8", VA = "0xC6CEE8")]
	public void MoveGHL(Vector3 pos, float y, float z = 0f)
	{
	}

	[Token(Token = "0x600052B")]
	[Address(RVA = "0xC6D244", Offset = "0xC6D244", VA = "0xC6D244")]
	public void show()
	{
	}

	[Token(Token = "0x600052C")]
	[Address(RVA = "0xC6C564", Offset = "0xC6C564", VA = "0xC6C564")]
	private void Trouver()
	{
	}

	[Token(Token = "0x600052D")]
	[Address(RVA = "0xC6BCD0", Offset = "0xC6BCD0", VA = "0xC6BCD0")]
	private void Activer()
	{
	}

	[Token(Token = "0x600052E")]
	[Address(RVA = "0xC6BEAC", Offset = "0xC6BEAC", VA = "0xC6BEAC")]
	private void Desactiver()
	{
	}
}
[Token(Token = "0x20000CE")]
public class HighlightRecipe : MonoBehaviour
{
	[Token(Token = "0x4000603")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public GameObject highlight;

	[Token(Token = "0x4000604")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private bool showing;

	[Token(Token = "0x4000605")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
	[HideInInspector]
	public bool isShow;

	[Token(Token = "0x4000606")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public Color Couleur;

	[Token(Token = "0x4000607")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private List<Material> materiaux;

	[Token(Token = "0x600052F")]
	[Address(RVA = "0xC6D2C4", Offset = "0xC6D2C4", VA = "0xC6D2C4")]
	public HighlightRecipe()
	{
	}

	[Token(Token = "0x6000530")]
	[Address(RVA = "0xC6D3A8", Offset = "0xC6D3A8", VA = "0xC6D3A8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000531")]
	[Address(RVA = "0xC6D78C", Offset = "0xC6D78C", VA = "0xC6D78C")]
	public void show()
	{
	}

	[Token(Token = "0x6000532")]
	[Address(RVA = "0xC6D798", Offset = "0xC6D798", VA = "0xC6D798")]
	private void Start()
	{
	}

	[Token(Token = "0x6000533")]
	[Address(RVA = "0xC6D9C8", Offset = "0xC6D9C8", VA = "0xC6D9C8")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000534")]
	[Address(RVA = "0xC6D4A4", Offset = "0xC6D4A4", VA = "0xC6D4A4")]
	private void Activer()
	{
	}

	[Token(Token = "0x6000535")]
	[Address(RVA = "0xC6D61C", Offset = "0xC6D61C", VA = "0xC6D61C")]
	private void Desactiver()
	{
	}
}
[Token(Token = "0x20000CF")]
public class CollisionInfo
{
	[Token(Token = "0x4000608")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public string TargetTag;

	[Token(Token = "0x4000609")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public string colliderName;

	[Token(Token = "0x400060A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public bool NeedTrigger;

	[Token(Token = "0x400060B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
	public bool WIT;

	[Token(Token = "0x400060C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x12")]
	public bool Colliding;

	[Token(Token = "0x400060D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x13")]
	public bool IsColliding;

	[Token(Token = "0x400060E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public Rigidbody rb;

	[Token(Token = "0x400060F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Ressource r;

	[Token(Token = "0x6000536")]
	[Address(RVA = "0xCF84B8", Offset = "0xCF84B8", VA = "0xCF84B8")]
	public CollisionInfo()
	{
	}
}
[Token(Token = "0x20000D0")]
public class MainCraftScript : MonoBehaviour
{
	[Token(Token = "0x20000D1")]
	public delegate void CraftingUpdate();

	[Token(Token = "0x20002FD")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1F5518", Offset = "0x1F5518")]
	private sealed class <LateStart>c__Iterator0 : IEnumerator, IDisposable, IEnumerator<object>
	{
		[Token(Token = "0x40011CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal MainCraftScript $this;

		[Token(Token = "0x40011CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		internal object $current;

		[Token(Token = "0x40011CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal bool $disposing;

		[Token(Token = "0x40011CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		internal int $PC;

		[Token(Token = "0x1700026F")]
		private object System.Collections.Generic.IEnumerator<object>.Current
		{
			[Token(Token = "0x6001738")]
			[Address(RVA = "0xC8B064", Offset = "0xC8B064", VA = "0xC8B064", Slot = "8")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000270")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001739")]
			[Address(RVA = "0xC8B06C", Offset = "0xC8B06C", VA = "0xC8B06C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001736")]
		[Address(RVA = "0xC83AB4", Offset = "0xC83AB4", VA = "0xC83AB4")]
		[DebuggerHidden]
		public <LateStart>c__Iterator0()
		{
		}

		[Token(Token = "0x6001737")]
		[Address(RVA = "0xC8AF7C", Offset = "0xC8AF7C", VA = "0xC8AF7C", Slot = "5")]
		public bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600173A")]
		[Address(RVA = "0xC8B074", Offset = "0xC8B074", VA = "0xC8B074", Slot = "7")]
		[DebuggerHidden]
		public void Dispose()
		{
		}

		[Token(Token = "0x600173B")]
		[Address(RVA = "0xC8B088", Offset = "0xC8B088", VA = "0xC8B088", Slot = "6")]
		[DebuggerHidden]
		public void Reset()
		{
		}
	}

	[Token(Token = "0x20002FE")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1F5578", Offset = "0x1F5578")]
	private sealed class <DelaySound>c__Iterator1 : IEnumerator, IDisposable, IEnumerator<object>
	{
		[Token(Token = "0x40011CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal MainCraftScript $this;

		[Token(Token = "0x40011CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		internal object $current;

		[Token(Token = "0x40011D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal bool $disposing;

		[Token(Token = "0x40011D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		internal int $PC;

		[Token(Token = "0x17000271")]
		private object System.Collections.Generic.IEnumerator<object>.Current
		{
			[Token(Token = "0x600173E")]
			[Address(RVA = "0xC8AED4", Offset = "0xC8AED4", VA = "0xC8AED4", Slot = "8")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000272")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600173F")]
			[Address(RVA = "0xC8AEDC", Offset = "0xC8AEDC", VA = "0xC8AEDC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600173C")]
		[Address(RVA = "0xC87758", Offset = "0xC87758", VA = "0xC87758")]
		[DebuggerHidden]
		public <DelaySound>c__Iterator1()
		{
		}

		[Token(Token = "0x600173D")]
		[Address(RVA = "0xC8ADEC", Offset = "0xC8ADEC", VA = "0xC8ADEC", Slot = "5")]
		public bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001740")]
		[Address(RVA = "0xC8AEE4", Offset = "0xC8AEE4", VA = "0xC8AEE4", Slot = "7")]
		[DebuggerHidden]
		public void Dispose()
		{
		}

		[Token(Token = "0x6001741")]
		[Address(RVA = "0xC8AEF8", Offset = "0xC8AEF8", VA = "0xC8AEF8", Slot = "6")]
		[DebuggerHidden]
		public void Reset()
		{
		}
	}

	[Token(Token = "0x20002FF")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1F55D8", Offset = "0x1F55D8")]
	private sealed class <DelayParticle>c__Iterator2 : IEnumerator, IDisposable, IEnumerator<object>
	{
		[Token(Token = "0x40011D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal MainCraftScript $this;

		[Token(Token = "0x40011D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		internal object $current;

		[Token(Token = "0x40011D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal bool $disposing;

		[Token(Token = "0x40011D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		internal int $PC;

		[Token(Token = "0x17000273")]
		private object System.Collections.Generic.IEnumerator<object>.Current
		{
			[Token(Token = "0x6001744")]
			[Address(RVA = "0xC8AD44", Offset = "0xC8AD44", VA = "0xC8AD44", Slot = "8")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000274")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001745")]
			[Address(RVA = "0xC8AD4C", Offset = "0xC8AD4C", VA = "0xC8AD4C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001742")]
		[Address(RVA = "0xC877E0", Offset = "0xC877E0", VA = "0xC877E0")]
		[DebuggerHidden]
		public <DelayParticle>c__Iterator2()
		{
		}

		[Token(Token = "0x6001743")]
		[Address(RVA = "0xC8AC5C", Offset = "0xC8AC5C", VA = "0xC8AC5C", Slot = "5")]
		public bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001746")]
		[Address(RVA = "0xC8AD54", Offset = "0xC8AD54", VA = "0xC8AD54", Slot = "7")]
		[DebuggerHidden]
		public void Dispose()
		{
		}

		[Token(Token = "0x6001747")]
		[Address(RVA = "0xC8AD68", Offset = "0xC8AD68", VA = "0xC8AD68", Slot = "6")]
		[DebuggerHidden]
		public void Reset()
		{
		}
	}

	[Token(Token = "0x4000610")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	[HideInInspector]
	public NVRInteractableItem obj;

	[Token(Token = "0x4000611")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[HideInInspector]
	public int DayCreated;

	[Token(Token = "0x4000612")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	[HideInInspector]
	public int overideDayCreated;

	[Token(Token = "0x4000613")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[HideInInspector]
	public bool justCreated;

	[Token(Token = "0x4000614")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	private bool EnableCol;

	[Token(Token = "0x4000615")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	private bool TwoHanded;

	[Token(Token = "0x4000616")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private CollisionInfo[] ColInfos;

	[Token(Token = "0x4000617")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private string collidedTrigger;

	[Token(Token = "0x4000618")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private bool SoundPlaying;

	[Token(Token = "0x4000619")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
	private bool ParticlePlaying;

	[Token(Token = "0x400061A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Animator anim;

	[Token(Token = "0x400061B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private bool animPlayed;

	[Token(Token = "0x400061C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Vector2 PrevPadValue;

	[Token(Token = "0x400061D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Vector2 PadValue;

	[Token(Token = "0x400061E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Vector2 OHPrevPadValue;

	[Token(Token = "0x400061F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Vector2 OHPadValue;

	[Token(Token = "0x4000620")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float TimePerOccurence;

	[Token(Token = "0x4000621")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private float timeRequiredPatern;

	[Token(Token = "0x4000622")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private int occurenceRequiredPatern;

	[Token(Token = "0x4000623")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private string NextStepPatern;

	[Token(Token = "0x4000624")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private float timeRequiredCol;

	[Token(Token = "0x4000625")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private float timerCol;

	[Token(Token = "0x4000626")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private int occurenceRequiredCol;

	[Token(Token = "0x4000627")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private bool CapacityReduced;

	[Token(Token = "0x4000628")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private string NextStepCol;

	[Token(Token = "0x4000629")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private Vector3 targetVelocity;

	[Token(Token = "0x400062A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private float soundTimer;

	[Token(Token = "0x400062B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private float timeRequiredShaking;

	[Token(Token = "0x400062C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private string NextStepShaking;

	[Token(Token = "0x400062D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private int occurenceRequiredWait;

	[Token(Token = "0x400062E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private float timer;

	[Token(Token = "0x400062F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private string NextStepWait;

	[Token(Token = "0x4000630")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private float MaxDistance;

	[Token(Token = "0x4000631")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	private string Axis;

	[Token(Token = "0x4000632")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private string targetTagTurn;

	[Token(Token = "0x4000633")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	private bool GoRight;

	[Token(Token = "0x4000634")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private NVRHand otherHand;

	[Token(Token = "0x4000635")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private int occurenceRequiredTurn;

	[Token(Token = "0x4000636")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private string NextStepAround;

	[Token(Token = "0x4000637")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	private int Count;

	[Token(Token = "0x4000638")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private string ObjToSpawn;

	[Token(Token = "0x4000639")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private int NumberToSpawn;

	[Token(Token = "0x400063A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private string NextStepSpawn;

	[Token(Token = "0x400063B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	private string ObjToSpawnSplit;

	[Token(Token = "0x400063C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private string NextStepSplit;

	[Token(Token = "0x400063D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	private float timeRequiredWIT;

	[Token(Token = "0x400063E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private string NextStepWIT;

	[Token(Token = "0x400063F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	private string TargetTrigger;

	[Token(Token = "0x4000640")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private float timerScrub;

	[Token(Token = "0x4000641")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
	private float timeRequiredScrub;

	[Token(Token = "0x4000642")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private int occurenceRequiredScrub;

	[Token(Token = "0x4000643")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
	private float velocityRequired;

	[Token(Token = "0x4000644")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private string NextStepScrub;

	[Token(Token = "0x4000645")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
	public string Type;

	[Token(Token = "0x4000646")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private string[] steps;

	[Token(Token = "0x4000647")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
	private string[] SoundFeedback;

	[Token(Token = "0x4000648")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private GameObject[] Particles;

	[Token(Token = "0x4000649")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
	public GameObject ActualObject;

	[Token(Token = "0x400064A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private CraftableObject actualObj;

	[Token(Token = "0x400064B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
	private HighlightManager hiMng;

	[Token(Token = "0x400064C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private BoxCollider boxCollider;

	[Token(Token = "0x400064D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
	private Ressource myRessource;

	[Token(Token = "0x400064E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	private Ressource collidedRessource;

	[Token(Token = "0x400064F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
	private NVRInteractableItem collidedItem;

	[Token(Token = "0x4000650")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	private int feedbackStep;

	[Token(Token = "0x4000651")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1F5494", Offset = "0x1F5494")]
	[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0x1F5494", Offset = "0x1F5494")]
	private CraftingUpdate <craftingUpdate>k__BackingField;

	[Token(Token = "0x4000652")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private bool initialized;

	[Token(Token = "0x170000A4")]
	public CraftingUpdate craftingUpdate
	{
		[Token(Token = "0x6000538")]
		[Address(RVA = "0xC83A14", Offset = "0xC83A14", VA = "0xC83A14")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1F54C8", Offset = "0x1F54C8")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000539")]
		[Address(RVA = "0xC83A1C", Offset = "0xC83A1C", VA = "0xC83A1C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1F54D8", Offset = "0x1F54D8")]
		set
		{
		}
	}

	[Token(Token = "0x6000537")]
	[Address(RVA = "0xC839F0", Offset = "0xC839F0", VA = "0xC839F0")]
	public MainCraftScript()
	{
	}

	[Token(Token = "0x600053A")]
	[Address(RVA = "0xC83A24", Offset = "0xC83A24", VA = "0xC83A24")]
	public void Start()
	{
	}

	[Token(Token = "0x600053B")]
	[Address(RVA = "0xC800C8", Offset = "0xC800C8", VA = "0xC800C8")]
	public void Initialize()
	{
	}

	[Token(Token = "0x600053C")]
	[Address(RVA = "0xC83A34", Offset = "0xC83A34", VA = "0xC83A34")]
	[DebuggerHidden]
	private IEnumerator LateStart()
	{
		return null;
	}

	[Token(Token = "0x600053D")]
	[Address(RVA = "0xC83ABC", Offset = "0xC83ABC", VA = "0xC83ABC")]
	public void Reset()
	{
	}

	[Token(Token = "0x600053E")]
	[Address(RVA = "0xC83E6C", Offset = "0xC83E6C", VA = "0xC83E6C")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x600053F")]
	[Address(RVA = "0xC83B6C", Offset = "0xC83B6C", VA = "0xC83B6C")]
	public void SetCraftable(string NewName)
	{
	}

	[Token(Token = "0x6000540")]
	[Address(RVA = "0xC840FC", Offset = "0xC840FC", VA = "0xC840FC")]
	private void SetObject(string NewName)
	{
	}

	[Token(Token = "0x6000541")]
	[Address(RVA = "0xC84784", Offset = "0xC84784", VA = "0xC84784")]
	private void FindOneChallenge(string[] challenge)
	{
	}

	[Token(Token = "0x6000542")]
	[Address(RVA = "0xC85944", Offset = "0xC85944", VA = "0xC85944")]
	private float AxisValue(Vector3 vector)
	{
		return default(float);
	}

	[Token(Token = "0x6000543")]
	[Address(RVA = "0xC85AC0", Offset = "0xC85AC0", VA = "0xC85AC0")]
	private void Split()
	{
	}

	[Token(Token = "0x6000544")]
	[Address(RVA = "0xC865F4", Offset = "0xC865F4", VA = "0xC865F4")]
	private void TurnAround()
	{
	}

	[Token(Token = "0x6000545")]
	[Address(RVA = "0xC8718C", Offset = "0xC8718C", VA = "0xC8718C")]
	private void shaking()
	{
	}

	[Token(Token = "0x6000546")]
	[Address(RVA = "0xC876D8", Offset = "0xC876D8", VA = "0xC876D8")]
	[DebuggerHidden]
	private IEnumerator DelaySound()
	{
		return null;
	}

	[Token(Token = "0x6000547")]
	[Address(RVA = "0xC87760", Offset = "0xC87760", VA = "0xC87760")]
	[DebuggerHidden]
	private IEnumerator DelayParticle()
	{
		return null;
	}

	[Token(Token = "0x6000548")]
	[Address(RVA = "0xC877E8", Offset = "0xC877E8", VA = "0xC877E8")]
	private void patern()
	{
	}

	[Token(Token = "0x6000549")]
	[Address(RVA = "0xC87EB8", Offset = "0xC87EB8", VA = "0xC87EB8")]
	private void collision()
	{
	}

	[Token(Token = "0x600054A")]
	[Address(RVA = "0xC888FC", Offset = "0xC888FC", VA = "0xC888FC")]
	private void spawn()
	{
	}

	[Token(Token = "0x600054B")]
	[Address(RVA = "0xC88DAC", Offset = "0xC88DAC", VA = "0xC88DAC")]
	private void WaitInTrigger()
	{
	}

	[Token(Token = "0x600054C")]
	[Address(RVA = "0xC89680", Offset = "0xC89680", VA = "0xC89680")]
	private void Waiting()
	{
	}

	[Token(Token = "0x600054D")]
	[Address(RVA = "0xC897C8", Offset = "0xC897C8", VA = "0xC897C8")]
	private void Scrub()
	{
	}

	[Token(Token = "0x600054E")]
	[Address(RVA = "0xC8A4DC", Offset = "0xC8A4DC", VA = "0xC8A4DC")]
	private void OnCollisionStay(Collision col)
	{
	}

	[Token(Token = "0x600054F")]
	[Address(RVA = "0xC8A8E4", Offset = "0xC8A8E4", VA = "0xC8A8E4")]
	private void OnTriggerStay(Collider col)
	{
	}

	[Token(Token = "0x6000550")]
	[Address(RVA = "0xC8A668", Offset = "0xC8A668", VA = "0xC8A668")]
	private void CheckCollision(CollisionInfo Info, Collider col)
	{
	}
}
[Token(Token = "0x20000D2")]
public class Meuble : MonoBehaviour
{
	[Token(Token = "0x2000300")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1F56D8", Offset = "0x1F56D8")]
	private sealed class <LateStart>c__Iterator0 : IEnumerator, IDisposable, IEnumerator<object>
	{
		[Token(Token = "0x40011D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal Meuble $this;

		[Token(Token = "0x40011D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		internal object $current;

		[Token(Token = "0x40011D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal bool $disposing;

		[Token(Token = "0x40011D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		internal int $PC;

		[Token(Token = "0x17000275")]
		private object System.Collections.Generic.IEnumerator<object>.Current
		{
			[Token(Token = "0x600174A")]
			[Address(RVA = "0xC95860", Offset = "0xC95860", VA = "0xC95860", Slot = "8")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000276")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600174B")]
			[Address(RVA = "0xC95868", Offset = "0xC95868", VA = "0xC95868", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001748")]
		[Address(RVA = "0xC92BF0", Offset = "0xC92BF0", VA = "0xC92BF0")]
		[DebuggerHidden]
		public <LateStart>c__Iterator0()
		{
		}

		[Token(Token = "0x6001749")]
		[Address(RVA = "0xC9569C", Offset = "0xC9569C", VA = "0xC9569C", Slot = "5")]
		public bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600174C")]
		[Address(RVA = "0xC95870", Offset = "0xC95870", VA = "0xC95870", Slot = "7")]
		[DebuggerHidden]
		public void Dispose()
		{
		}

		[Token(Token = "0x600174D")]
		[Address(RVA = "0xC95884", Offset = "0xC95884", VA = "0xC95884", Slot = "6")]
		[DebuggerHidden]
		public void Reset()
		{
		}
	}

	[Token(Token = "0x4000653")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public string type;

	[Token(Token = "0x4000654")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[HideInInspector]
	public uint ID;

	[Token(Token = "0x4000655")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	[HideInInspector]
	public Ressource res;

	[Token(Token = "0x4000656")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected NVRInteractableItem obj;

	[Token(Token = "0x4000657")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	protected NVRHand attachedHand;

	[Token(Token = "0x4000658")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	protected Rigidbody rb;

	[Token(Token = "0x4000659")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	protected RaycastHit _hit;

	[Token(Token = "0x400065A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	protected RaycastHit _groundHit;

	[Token(Token = "0x400065B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	protected HighlightMeuble HL;

	[Token(Token = "0x400065C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	protected Vector3 feedbackPos;

	[Token(Token = "0x400065D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	public float BaseY;

	[Token(Token = "0x400065E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	protected float y;

	[Token(Token = "0x400065F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	protected float MaxHeight;

	[Token(Token = "0x4000660")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	protected bool isRight;

	[Token(Token = "0x4000661")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x99")]
	protected bool wantToSnap;

	[Token(Token = "0x4000662")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	[HideInInspector]
	public Renderer[] rend;

	[Token(Token = "0x4000663")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[HideInInspector]
	public Color color;

	[Token(Token = "0x4000664")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public bool Grounded;

	[Token(Token = "0x4000665")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	public string TagToSnap;

	[Token(Token = "0x4000666")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[HideInInspector]
	public float rayLength;

	[Token(Token = "0x4000667")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	public GameObject[] JoinedObject;

	[Token(Token = "0x4000668")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	protected Vector3[] JoinedObjectPosition;

	[Token(Token = "0x4000669")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	protected Quaternion[] JoinedObjectRotation;

	[Token(Token = "0x400066A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	[HideInInspector]
	public Vector3[] OveridedJoinedObjectPosition;

	[Token(Token = "0x400066B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	[HideInInspector]
	public Vector3[] OveridedJoinedObjectRotation;

	[Token(Token = "0x400066C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public bool MeubleAtStart;

	[Token(Token = "0x400066D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD1")]
	[HideInInspector]
	public bool isBox;

	[Token(Token = "0x400066E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	protected uint AudioFeedback;

	[Token(Token = "0x400066F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	[HideInInspector]
	public bool initialized;

	[Token(Token = "0x4000670")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
	private float unsnapTimer;

	[Token(Token = "0x4000671")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private float delayedBoxingTime;

	[Token(Token = "0x4000672")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
	private LayerMask mask;

	[Token(Token = "0x4000673")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private bool Secondary;

	[Token(Token = "0x6000555")]
	[Address(RVA = "0xC920C4", Offset = "0xC920C4", VA = "0xC920C4")]
	public Meuble()
	{
	}

	[Token(Token = "0x6000556")]
	[Address(RVA = "0xC920EC", Offset = "0xC920EC", VA = "0xC920EC")]
	public void Start()
	{
	}

	[Token(Token = "0x6000557")]
	[Address(RVA = "0xC92108", Offset = "0xC92108", VA = "0xC92108", Slot = "4")]
	public virtual void Initialize()
	{
	}

	[Token(Token = "0x6000558")]
	[Address(RVA = "0xC92760", Offset = "0xC92760", VA = "0xC92760")]
	private void OnHoveringHandler()
	{
	}

	[Token(Token = "0x6000559")]
	[Address(RVA = "0xC80090", Offset = "0xC80090", VA = "0xC80090")]
	public void checkSetting()
	{
	}

	[Token(Token = "0x600055A")]
	[Address(RVA = "0xC926E0", Offset = "0xC926E0", VA = "0xC926E0")]
	[DebuggerHidden]
	public IEnumerator LateStart()
	{
		return null;
	}

	[Token(Token = "0x600055B")]
	[Address(RVA = "0xC92B48", Offset = "0xC92B48", VA = "0xC92B48")]
	private void setMeuble()
	{
	}

	[Token(Token = "0x600055C")]
	[Address(RVA = "0xC92E14", Offset = "0xC92E14", VA = "0xC92E14", Slot = "5")]
	public virtual void LoadColor(uint seed)
	{
	}

	[Token(Token = "0x600055D")]
	[Address(RVA = "0xC7FFF8", Offset = "0xC7FFF8", VA = "0xC7FFF8")]
	public void loadSeed(uint seed)
	{
	}

	[Token(Token = "0x600055E")]
	[Address(RVA = "0xC92BF8", Offset = "0xC92BF8", VA = "0xC92BF8")]
	public void SetToMeuble(Vector3 t, Quaternion q)
	{
	}

	[Token(Token = "0x600055F")]
	[Address(RVA = "0xC8CEF4", Offset = "0xC8CEF4", VA = "0xC8CEF4")]
	public void SetToBox()
	{
	}

	[Token(Token = "0x6000560")]
	[Address(RVA = "0xC92F84", Offset = "0xC92F84", VA = "0xC92F84", Slot = "6")]
	public virtual void unactiveJoinedObject()
	{
	}

	[Token(Token = "0x6000561")]
	[Address(RVA = "0xC92FF4", Offset = "0xC92FF4", VA = "0xC92FF4", Slot = "7")]
	public virtual void rotationAndJoinManagement()
	{
	}

	[Token(Token = "0x6000562")]
	[Address(RVA = "0xC937CC", Offset = "0xC937CC", VA = "0xC937CC", Slot = "8")]
	public virtual void rotationAndJoinManagement(Vector3[] position, Vector3[] rotation)
	{
	}

	[Token(Token = "0x6000563")]
	[Address(RVA = "0xC94338", Offset = "0xC94338", VA = "0xC94338", Slot = "9")]
	public virtual void setJointColor(Renderer[] renderers)
	{
	}

	[Token(Token = "0x6000564")]
	[Address(RVA = "0xC945F4", Offset = "0xC945F4", VA = "0xC945F4", Slot = "10")]
	public virtual void setCoreColor(Renderer[] renderers)
	{
	}

	[Token(Token = "0x6000565")]
	[Address(RVA = "0xC946B8", Offset = "0xC946B8", VA = "0xC946B8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000566")]
	[Address(RVA = "0xC94994", Offset = "0xC94994", VA = "0xC94994", Slot = "11")]
	public virtual void checkSnapping()
	{
	}

	[Token(Token = "0x6000567")]
	[Address(RVA = "0xC95238", Offset = "0xC95238", VA = "0xC95238", Slot = "12")]
	public virtual void Snap()
	{
	}

	[Token(Token = "0x6000568")]
	[Address(RVA = "0xC95540", Offset = "0xC95540", VA = "0xC95540")]
	public void UnSnap()
	{
	}

	[Token(Token = "0x6000569")]
	[Address(RVA = "0xC94BFC", Offset = "0xC94BFC", VA = "0xC94BFC")]
	protected bool TestRaycast()
	{
		return default(bool);
	}

	[Token(Token = "0x600056A")]
	[Address(RVA = "0xC95570", Offset = "0xC95570", VA = "0xC95570")]
	protected Vector3 multiplyVector(Vector3 a, Vector3 b)
	{
		return default(Vector3);
	}
}
[Token(Token = "0x20000D3")]
public class BoiteAMeuble : MonoBehaviour
{
	[Token(Token = "0x4000674")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private Rigidbody rb;

	[Token(Token = "0x4000675")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private float TimeToShake;

	[Token(Token = "0x4000676")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private float requiredVelocity;

	[Token(Token = "0x4000677")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float timer;

	[Token(Token = "0x4000678")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public GameObject MeubletoSpawn;

	[Token(Token = "0x600056B")]
	[Address(RVA = "0xCEB788", Offset = "0xCEB788", VA = "0xCEB788")]
	public BoiteAMeuble()
	{
	}

	[Token(Token = "0x600056C")]
	[Address(RVA = "0xCEB7A4", Offset = "0xCEB7A4", VA = "0xCEB7A4")]
	private void Start()
	{
	}

	[Token(Token = "0x600056D")]
	[Address(RVA = "0xCEB80C", Offset = "0xCEB80C", VA = "0xCEB80C")]
	private void Update()
	{
	}

	[Token(Token = "0x600056E")]
	[Address(RVA = "0xCEBA0C", Offset = "0xCEBA0C", VA = "0xCEBA0C")]
	private void OnDestroy()
	{
	}
}
[Token(Token = "0x20000D4")]
public class Cabinet : Meuble
{
	[Token(Token = "0x600056F")]
	[Address(RVA = "0xCF161C", Offset = "0xCF161C", VA = "0xCF161C")]
	public Cabinet()
	{
	}

	[Token(Token = "0x6000570")]
	[Address(RVA = "0xCF1624", Offset = "0xCF1624", VA = "0xCF1624", Slot = "6")]
	public override void unactiveJoinedObject()
	{
	}

	[Token(Token = "0x6000571")]
	[Address(RVA = "0xCF1694", Offset = "0xCF1694", VA = "0xCF1694", Slot = "7")]
	public override void rotationAndJoinManagement()
	{
	}
}
[Token(Token = "0x20000D5")]
public class LampLightBehavior : MonoBehaviour
{
	[Token(Token = "0x4000679")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private GameObject Light;

	[Token(Token = "0x400067A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private Meuble mbl;

	[Token(Token = "0x400067B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private uint soundEvent;

	[Token(Token = "0x6000572")]
	[Address(RVA = "0xC7D8EC", Offset = "0xC7D8EC", VA = "0xC7D8EC")]
	public LampLightBehavior()
	{
	}

	[Token(Token = "0x6000573")]
	[Address(RVA = "0xC7D8F4", Offset = "0xC7D8F4", VA = "0xC7D8F4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000574")]
	[Address(RVA = "0xC7DA38", Offset = "0xC7DA38", VA = "0xC7DA38")]
	private void Update()
	{
	}

	[Token(Token = "0x6000575")]
	[Address(RVA = "0xC7DAAC", Offset = "0xC7DAAC", VA = "0xC7DAAC")]
	public void Trigger()
	{
	}
}
[Token(Token = "0x20000D6")]
public class NVRConstrainedItem : NVRInteractable
{
	[Token(Token = "0x400067C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
	public bool rotationLock;

	[Token(Token = "0x400067D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3A")]
	public bool movementLock;

	[Token(Token = "0x400067E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3B")]
	public bool blockMirorMovement;

	[Token(Token = "0x400067F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public Vector3 motor;

	[Token(Token = "0x4000680")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public UnityEvent OnHovering;

	[Token(Token = "0x4000681")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public UnityEvent OnHighlight;

	[Token(Token = "0x4000682")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Transform _origin;

	[Token(Token = "0x4000683")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private Vector3 _originPosition;

	[Token(Token = "0x4000684")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Quaternion _originRotation;

	[Token(Token = "0x4000685")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Vector3 _originLocalPosition;

	[Token(Token = "0x4000686")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private Vector3 _attachementPoint;

	[Token(Token = "0x4000687")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public SoundMaterial Mat;

	[Token(Token = "0x4000688")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private float soundtimer;

	[Token(Token = "0x4000689")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private uint BeginInteractionFeedback;

	[Token(Token = "0x400068A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private uint EndInteractionFeedback;

	[Token(Token = "0x400068B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private uint Collisionfeedback;

	[Token(Token = "0x400068C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	private Joint _joint;

	[Token(Token = "0x400068D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private float distanceAtBeginInteraction;

	[Token(Token = "0x400068E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	private Vector3 positionAtBeginInteraction;

	[Token(Token = "0x6000576")]
	[Address(RVA = "0x255248", Offset = "0x255248", VA = "0x255248")]
	public NVRConstrainedItem()
	{
	}

	[Token(Token = "0x6000577")]
	[Address(RVA = "0x25526C", Offset = "0x25526C", VA = "0x25526C", Slot = "6")]
	protected override void Start()
	{
	}

	[Token(Token = "0x6000578")]
	[Address(RVA = "0x25570C", Offset = "0x25570C", VA = "0x25570C", Slot = "11")]
	protected override void Update()
	{
	}

	[Token(Token = "0x6000579")]
	[Address(RVA = "0x25587C", Offset = "0x25587C", VA = "0x25587C", Slot = "7")]
	public override void ShowHighlight()
	{
	}

	[Token(Token = "0x600057A")]
	[Address(RVA = "0x2558A4", Offset = "0x2558A4", VA = "0x2558A4")]
	public void setJoint(Vector3 pos, Quaternion rot, Vector3 localPos)
	{
	}

	[Token(Token = "0x600057B")]
	[Address(RVA = "0x255A28", Offset = "0x255A28", VA = "0x255A28", Slot = "13")]
	public override void InteractingUpdate(NVRHand hand)
	{
	}

	[Token(Token = "0x600057C")]
	[Address(RVA = "0x256914", Offset = "0x256914", VA = "0x256914", Slot = "12")]
	public override void BeginInteraction(NVRHand hand)
	{
	}

	[Token(Token = "0x600057D")]
	[Address(RVA = "0x256BD4", Offset = "0x256BD4", VA = "0x256BD4", Slot = "15")]
	public override void EndInteraction()
	{
	}

	[Token(Token = "0x600057E")]
	[Address(RVA = "0x256C84", Offset = "0x256C84", VA = "0x256C84", Slot = "14")]
	public override void HoveringUpdate(NVRHand hand, float forTime)
	{
	}

	[Token(Token = "0x600057F")]
	[Address(RVA = "0x255A4C", Offset = "0x255A4C", VA = "0x255A4C")]
	private void SetVelocity(NVRHand hand)
	{
	}

	[Token(Token = "0x6000580")]
	[Address(RVA = "0x256CB0", Offset = "0x256CB0", VA = "0x256CB0")]
	private void OnCollisionEnter(Collision col)
	{
	}
}
[Token(Token = "0x20000D7")]
public class Oven : Meuble
{
	[Token(Token = "0x6000581")]
	[Address(RVA = "0x25CB08", Offset = "0x25CB08", VA = "0x25CB08")]
	public Oven()
	{
	}

	[Token(Token = "0x6000582")]
	[Address(RVA = "0x25CB10", Offset = "0x25CB10", VA = "0x25CB10", Slot = "6")]
	public override void unactiveJoinedObject()
	{
	}

	[Token(Token = "0x6000583")]
	[Address(RVA = "0x25CB80", Offset = "0x25CB80", VA = "0x25CB80", Slot = "7")]
	public override void rotationAndJoinManagement()
	{
	}
}
[Token(Token = "0x20000D8")]
public class OvenLightFeedBack : MonoBehaviour
{
	[Token(Token = "0x400068F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public RessourceFlow flow;

	[Token(Token = "0x4000690")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x1F5738", Offset = "0x1F5738")]
	public Renderer halo;

	[Token(Token = "0x4000691")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public Renderer model;

	[Token(Token = "0x4000692")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Texture2D[] textures;

	[Token(Token = "0x6000584")]
	[Address(RVA = "0x25CB88", Offset = "0x25CB88", VA = "0x25CB88")]
	public OvenLightFeedBack()
	{
	}

	[Token(Token = "0x6000585")]
	[Address(RVA = "0x25CB90", Offset = "0x25CB90", VA = "0x25CB90")]
	private void Start()
	{
	}

	[Token(Token = "0x6000586")]
	[Address(RVA = "0x25CB94", Offset = "0x25CB94", VA = "0x25CB94")]
	private void Update()
	{
	}
}
[Token(Token = "0x20000D9")]
public class Poster : Meuble
{
	[Token(Token = "0x4000693")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
	public Texture2D[] posterBank;

	[Token(Token = "0x4000694")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	[HideInInspector]
	public Texture2D poster;

	[Token(Token = "0x4000695")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
	private float z;

	[Token(Token = "0x4000696")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private float zAdded;

	[Token(Token = "0x6000587")]
	[Address(RVA = "0x264B44", Offset = "0x264B44", VA = "0x264B44")]
	public Poster()
	{
	}

	[Token(Token = "0x6000588")]
	[Address(RVA = "0x264B4C", Offset = "0x264B4C", VA = "0x264B4C", Slot = "4")]
	public override void Initialize()
	{
	}

	[Token(Token = "0x6000589")]
	[Address(RVA = "0x264B84", Offset = "0x264B84", VA = "0x264B84", Slot = "5")]
	public override void LoadColor(uint seed)
	{
	}

	[Token(Token = "0x600058A")]
	[Address(RVA = "0x264C6C", Offset = "0x264C6C", VA = "0x264C6C", Slot = "10")]
	public override void setCoreColor(Renderer[] renderers)
	{
	}

	[Token(Token = "0x600058B")]
	[Address(RVA = "0x264DD4", Offset = "0x264DD4", VA = "0x264DD4", Slot = "11")]
	public override void checkSnapping()
	{
	}

	[Token(Token = "0x600058C")]
	[Address(RVA = "0x26512C", Offset = "0x26512C", VA = "0x26512C", Slot = "12")]
	public override void Snap()
	{
	}
}
[Token(Token = "0x20000DA")]
public class Robinet : Meuble
{
	[Token(Token = "0x600058D")]
	[Address(RVA = "0x270210", Offset = "0x270210", VA = "0x270210")]
	public Robinet()
	{
	}

	[Token(Token = "0x600058E")]
	[Address(RVA = "0x270218", Offset = "0x270218", VA = "0x270218", Slot = "6")]
	public override void unactiveJoinedObject()
	{
	}

	[Token(Token = "0x600058F")]
	[Address(RVA = "0x270288", Offset = "0x270288", VA = "0x270288", Slot = "7")]
	public override void rotationAndJoinManagement()
	{
	}

	[Token(Token = "0x6000590")]
	[Address(RVA = "0x2703F0", Offset = "0x2703F0", VA = "0x2703F0", Slot = "8")]
	public override void rotationAndJoinManagement(Vector3[] position, Vector3[] rotation)
	{
	}
}
[Serializable]
[Token(Token = "0x20000DB")]
public class CraftableObject
{
	[Token(Token = "0x4000697")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public string Name;

	[Token(Token = "0x4000698")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public string Type;

	[Token(Token = "0x4000699")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public GameObject Sprite;

	[Token(Token = "0x400069A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public Vector3 Collider;

	[Token(Token = "0x400069B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string[] Feedback;

	[Token(Token = "0x400069C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public GameObject[] ParticleFeedback;

	[Token(Token = "0x400069D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string[] Steps;

	[Token(Token = "0x6000591")]
	[Address(RVA = "0xCF87EC", Offset = "0xCF87EC", VA = "0xCF87EC")]
	public CraftableObject()
	{
	}
}
[Serializable]
[Token(Token = "0x20000DC")]
public class IconAndObject
{
	[Token(Token = "0x400069E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public string Name;

	[Token(Token = "0x400069F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Sprite Texture;

	[Token(Token = "0x40006A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Sprite Icon;

	[Token(Token = "0x40006A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public GameObject Object;

	[Token(Token = "0x6000592")]
	[Address(RVA = "0xC70F18", Offset = "0xC70F18", VA = "0xC70F18")]
	public IconAndObject()
	{
	}
}
[Token(Token = "0x20000DD")]
public class ObjectDatabase : MonoBehaviour
{
	[Token(Token = "0x40006A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static ObjectDatabase Instance;

	[Token(Token = "0x40006A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public CraftableObject[] CraftableObjects;

	[Token(Token = "0x40006A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public IconAndObject[] ressourceBank;

	[Token(Token = "0x40006A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public IconAndObject[] completedBank;

	[Token(Token = "0x40006A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public IconAndObject[] meubleBank;

	[Token(Token = "0x40006A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public IconAndObject[] specialBank;

	[Token(Token = "0x40006A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public IconAndObject[] toolBank;

	[Token(Token = "0x40006A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public IconAndObject[] CraftingBank;

	[Token(Token = "0x6000593")]
	[Address(RVA = "0x256DEC", Offset = "0x256DEC", VA = "0x256DEC")]
	public ObjectDatabase()
	{
	}

	[Token(Token = "0x6000594")]
	[Address(RVA = "0x256DF4", Offset = "0x256DF4", VA = "0x256DF4")]
	public void init()
	{
	}

	[Token(Token = "0x6000595")]
	[Address(RVA = "0x256E58", Offset = "0x256E58", VA = "0x256E58")]
	public Sprite findTexture(string name)
	{
		return null;
	}

	[Token(Token = "0x6000596")]
	[Address(RVA = "0x257010", Offset = "0x257010", VA = "0x257010")]
	public Sprite findTextureMeuble(string name)
	{
		return null;
	}

	[Token(Token = "0x6000597")]
	[Address(RVA = "0x2571C8", Offset = "0x2571C8", VA = "0x2571C8")]
	public Sprite findSprite(string name)
	{
		return null;
	}

	[Token(Token = "0x6000598")]
	[Address(RVA = "0x257570", Offset = "0x257570", VA = "0x257570")]
	public GameObject findUnCompletedObject(string name)
	{
		return null;
	}

	[Token(Token = "0x6000599")]
	[Address(RVA = "0x257674", Offset = "0x257674", VA = "0x257674")]
	public CraftableObject FindObject(string name)
	{
		return null;
	}

	[Token(Token = "0x600059A")]
	[Address(RVA = "0x25776C", Offset = "0x25776C", VA = "0x25776C")]
	public GameObject findSelledObject(string name)
	{
		return null;
	}

	[Token(Token = "0x600059B")]
	[Address(RVA = "0x257A68", Offset = "0x257A68", VA = "0x257A68")]
	public GameObject findCompleted(string name)
	{
		return null;
	}

	[Token(Token = "0x600059C")]
	[Address(RVA = "0x257B6C", Offset = "0x257B6C", VA = "0x257B6C")]
	public GameObject findRecipe(string name)
	{
		return null;
	}

	[Token(Token = "0x600059D")]
	[Address(RVA = "0x257C70", Offset = "0x257C70", VA = "0x257C70")]
	public GameObject FindRessource(string name)
	{
		return null;
	}

	[Token(Token = "0x600059E")]
	[Address(RVA = "0x2580BC", Offset = "0x2580BC", VA = "0x2580BC")]
	public GameObject[] GetCompletedsObj()
	{
		return null;
	}
}
[Token(Token = "0x20000DE")]
public class RandomTextureSprite : SpawnableObject
{
	[Token(Token = "0x40006AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Texture[] mats;

	[Token(Token = "0x40006AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private Renderer _renderer;

	[Token(Token = "0x600059F")]
	[Address(RVA = "0x26CFBC", Offset = "0x26CFBC", VA = "0x26CFBC")]
	public RandomTextureSprite()
	{
	}

	[Token(Token = "0x60005A0")]
	[Address(RVA = "0x26CFC4", Offset = "0x26CFC4", VA = "0x26CFC4")]
	public void setSprite()
	{
	}

	[Token(Token = "0x60005A1")]
	[Address(RVA = "0x26D200", Offset = "0x26D200", VA = "0x26D200", Slot = "4")]
	public override void Reset()
	{
	}

	[Token(Token = "0x60005A2")]
	[Address(RVA = "0x26D204", Offset = "0x26D204", VA = "0x26D204", Slot = "5")]
	public override void ShutDown()
	{
	}
}
[Token(Token = "0x20000DF")]
public enum actionType
{
	[Token(Token = "0x40006AD")]
	turn,
	[Token(Token = "0x40006AE")]
	button,
	[Token(Token = "0x40006AF")]
	shake
}
[Token(Token = "0x20000E0")]
public class RessourceFlow : MonoBehaviour
{
	[Token(Token = "0x40006B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public actionType Action;

	[Token(Token = "0x40006B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public GameObject flow;

	[Token(Token = "0x40006B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private BoxCollider col;

	[Token(Token = "0x40006B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private ParticleSystem particles;

	[Token(Token = "0x40006B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private Rigidbody rb;

	[Token(Token = "0x40006B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	internal bool buttonPress;

	[Token(Token = "0x40006B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float timer;

	[Token(Token = "0x40006B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	internal float BaseRotation;

	[Token(Token = "0x40006B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	internal float ActualRotation;

	[Token(Token = "0x40006B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public string FlowBeginSound;

	[Token(Token = "0x40006BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public string FlowEndSound;

	[Token(Token = "0x40006BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public MeshRenderer mesh;

	[Token(Token = "0x40006BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public LayerMask mask;

	[Token(Token = "0x60005A3")]
	[Address(RVA = "0x26EB48", Offset = "0x26EB48", VA = "0x26EB48")]
	public RessourceFlow()
	{
	}

	[Token(Token = "0x60005A4")]
	[Address(RVA = "0x26EB50", Offset = "0x26EB50", VA = "0x26EB50")]
	private void Awake()
	{
	}

	[Token(Token = "0x60005A5")]
	[Address(RVA = "0x26EC6C", Offset = "0x26EC6C", VA = "0x26EC6C")]
	private void Update()
	{
	}

	[Token(Token = "0x60005A6")]
	[Address(RVA = "0x26F27C", Offset = "0x26F27C", VA = "0x26F27C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60005A7")]
	[Address(RVA = "0x26F338", Offset = "0x26F338", VA = "0x26F338")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60005A8")]
	[Address(RVA = "0x26EC70", Offset = "0x26EC70", VA = "0x26EC70")]
	private void UnleashTheFlow()
	{
	}

	[Token(Token = "0x60005A9")]
	[Address(RVA = "0x26F4B8", Offset = "0x26F4B8", VA = "0x26F4B8")]
	private void shake()
	{
	}

	[Token(Token = "0x60005AA")]
	[Address(RVA = "0x26F9D8", Offset = "0x26F9D8", VA = "0x26F9D8")]
	public void ButtonPressed()
	{
	}
}
[Token(Token = "0x20000E1")]
public class SpriteManager : SpawnableObject
{
	[Token(Token = "0x40006BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private Animator anim;

	[Token(Token = "0x60005AB")]
	[Address(RVA = "0xCB7BE4", Offset = "0xCB7BE4", VA = "0xCB7BE4")]
	public SpriteManager()
	{
	}

	[Token(Token = "0x60005AC")]
	[Address(RVA = "0xCB7BEC", Offset = "0xCB7BEC", VA = "0xCB7BEC")]
	private void Awake()
	{
	}

	[Token(Token = "0x60005AD")]
	[Address(RVA = "0xCB7C54", Offset = "0xCB7C54", VA = "0xCB7C54", Slot = "4")]
	public override void Reset()
	{
	}

	[Token(Token = "0x60005AE")]
	[Address(RVA = "0xCB7DC4", Offset = "0xCB7DC4", VA = "0xCB7DC4", Slot = "5")]
	public override void ShutDown()
	{
	}
}
[Token(Token = "0x20000E2")]
public class ObjectToTransform
{
	[Token(Token = "0x40006BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public MainCraftScript mcs;

	[Token(Token = "0x40006BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public float timer;

	[Token(Token = "0x40006C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string TargetStep;

	[Token(Token = "0x60005AF")]
	[Address(RVA = "0x25839C", Offset = "0x25839C", VA = "0x25839C")]
	public ObjectToTransform()
	{
	}
}
[Token(Token = "0x20000E3")]
public class StepSkiper : MonoBehaviour
{
	[Token(Token = "0x40006C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private List<ObjectToTransform> objects;

	[Token(Token = "0x40006C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string[] stepToChange;

	[Token(Token = "0x40006C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public string[] targetStep;

	[Token(Token = "0x40006C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float Timer;

	[Token(Token = "0x40006C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float speed;

	[Token(Token = "0x40006C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private GameObject Exit;

	[Token(Token = "0x60005B0")]
	[Address(RVA = "0xCBA714", Offset = "0xCBA714", VA = "0xCBA714")]
	public StepSkiper()
	{
	}

	[Token(Token = "0x60005B1")]
	[Address(RVA = "0xCBA71C", Offset = "0xCBA71C", VA = "0xCBA71C")]
	private void Start()
	{
	}

	[Token(Token = "0x60005B2")]
	[Address(RVA = "0xCBA7C0", Offset = "0xCBA7C0", VA = "0xCBA7C0")]
	private void Update()
	{
	}

	[Token(Token = "0x60005B3")]
	[Address(RVA = "0xCBAB34", Offset = "0xCBAB34", VA = "0xCBAB34")]
	private void OnTriggerEnter(Collider col)
	{
	}

	[Token(Token = "0x60005B4")]
	[Address(RVA = "0xCBAD50", Offset = "0xCBAD50", VA = "0xCBAD50")]
	private void OnTriggerExit(Collider col)
	{
	}
}
[Token(Token = "0x20000E4")]
public class DayNight : MonoBehaviour
{
	[Token(Token = "0x60005B5")]
	[Address(RVA = "0xCFC2A0", Offset = "0xCFC2A0", VA = "0xCFC2A0")]
	public DayNight()
	{
	}

	[Token(Token = "0x60005B6")]
	[Address(RVA = "0xCFC2A8", Offset = "0xCFC2A8", VA = "0xCFC2A8")]
	private void Start()
	{
	}

	[Token(Token = "0x60005B7")]
	[Address(RVA = "0xCFC2AC", Offset = "0xCFC2AC", VA = "0xCFC2AC")]
	private void Update()
	{
	}
}
[Token(Token = "0x20000E5")]
public class DayNightCycleV2 : MonoBehaviour
{
	[Token(Token = "0x40006C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private Light _light;

	[Token(Token = "0x40006C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private bool DaySet;

	[Token(Token = "0x40006C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
	private bool NightSet;

	[Token(Token = "0x40006CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public Color DayColor;

	[Token(Token = "0x40006CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Color Nightcolor;

	[Token(Token = "0x60005B8")]
	[Address(RVA = "0xCFC3A0", Offset = "0xCFC3A0", VA = "0xCFC3A0")]
	public DayNightCycleV2()
	{
	}

	[Token(Token = "0x60005B9")]
	[Address(RVA = "0xCFC3A8", Offset = "0xCFC3A8", VA = "0xCFC3A8")]
	private void Start()
	{
	}

	[Token(Token = "0x60005BA")]
	[Address(RVA = "0xCFC410", Offset = "0xCFC410", VA = "0xCFC410")]
	private void Update()
	{
	}
}
[Token(Token = "0x20000E6")]
public class DayNightSpeed : MonoBehaviour
{
	[Token(Token = "0x40006CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public float daynightSpeed;

	[Token(Token = "0x60005BB")]
	[Address(RVA = "0xCFC660", Offset = "0xCFC660", VA = "0xCFC660")]
	public DayNightSpeed()
	{
	}

	[Token(Token = "0x60005BC")]
	[Address(RVA = "0xCFC668", Offset = "0xCFC668", VA = "0xCFC668")]
	private void Start()
	{
	}

	[Token(Token = "0x60005BD")]
	[Address(RVA = "0xCFC66C", Offset = "0xCFC66C", VA = "0xCFC66C")]
	private void Update()
	{
	}
}
[Token(Token = "0x20000E7")]
public enum MarcketType
{
	[Token(Token = "0x40006CE")]
	Ressource = 0,
	[Token(Token = "0x40006CF")]
	Tool = 1,
	[Token(Token = "0x40006D0")]
	Furniture = 2,
	[Token(Token = "0x40006D1")]
	None = -1
}
[Serializable]
[Token(Token = "0x20000E8")]
public class BuyingData
{
	[Token(Token = "0x40006D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public string name;

	[Token(Token = "0x40006D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public int id;

	[Token(Token = "0x40006D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public GameObject dealObject;

	[Token(Token = "0x40006D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public MarcketType type;

	[Token(Token = "0x40006D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool isValueConstant;

	[Token(Token = "0x40006D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool isSold;

	[Token(Token = "0x40006D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	public bool isSkillSold;

	[Token(Token = "0x40006D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int skillValue;

	[Token(Token = "0x40006DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int amount;

	[Token(Token = "0x40006DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int amountWanted;

	[Token(Token = "0x40006DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int value;

	[Token(Token = "0x40006DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public int percentageValue;

	[Token(Token = "0x40006DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Sprite iconToDisplay;

	[Token(Token = "0x40006DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public int amountBonus;

	[Token(Token = "0x60005BE")]
	[Address(RVA = "0xCE3A50", Offset = "0xCE3A50", VA = "0xCE3A50")]
	public BuyingData()
	{
	}

	[Token(Token = "0x60005BF")]
	[Address(RVA = "0xCF152C", Offset = "0xCF152C", VA = "0xCF152C")]
	public BuyingData(BuyingData data)
	{
	}
}
[Token(Token = "0x20000E9")]
public class Tier
{
	[Token(Token = "0x40006E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public SubJob[] Reward;

	[Token(Token = "0x40006E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public int repRequired;

	[Token(Token = "0x60005C0")]
	[Address(RVA = "0xCBF944", Offset = "0xCBF944", VA = "0xCBF944")]
	public Tier(SubJob[] reward, int repRequired)
	{
	}
}
[Serializable]
[Token(Token = "0x20000EA")]
public class Job
{
	[Token(Token = "0x40006E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public int ID;

	[Token(Token = "0x40006E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public string Name;

	[Token(Token = "0x40006E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string Description;

	[Token(Token = "0x40006E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public SubJob[] Objectifs;

	[Token(Token = "0x40006E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int objectifsCompleted;

	[Token(Token = "0x40006E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool canComplete;

	[Token(Token = "0x40006E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public SubJob[] Rewards;

	[Token(Token = "0x40006E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public SubJob[] SpecialRewards;

	[Token(Token = "0x40006EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int Tier;

	[Token(Token = "0x60005C1")]
	[Address(RVA = "0xC71908", Offset = "0xC71908", VA = "0xC71908")]
	public Job(int id, string name, string description, SubJob[] objectifs, SubJob[] rewards, SubJob[] specialRewards, int tier)
	{
	}
}
[Serializable]
[Token(Token = "0x20000EB")]
public class SubJob
{
	[Token(Token = "0x40006EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public string Object;

	[Token(Token = "0x40006EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public int Number;

	[Token(Token = "0x40006ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int CurrentNumber;

	[Token(Token = "0x40006EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public bool objectifCanComplete;

	[Token(Token = "0x60005C2")]
	[Address(RVA = "0xCBB3C4", Offset = "0xCBB3C4", VA = "0xCBB3C4")]
	public SubJob(string obj, int nb)
	{
	}

	[Token(Token = "0x60005C3")]
	[Address(RVA = "0xCBB3F8", Offset = "0xCBB3F8", VA = "0xCBB3F8")]
	public static SubJob[] stringToJob(string[] s)
	{
		return null;
	}
}
[Token(Token = "0x20000EC")]
public class SellingData
{
	[Token(Token = "0x40006EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public GameObject wantedObject;

	[Token(Token = "0x40006F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	internal bool boughtToday;

	[Token(Token = "0x40006F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int amountWanted;

	[Token(Token = "0x40006F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public int cigaretteValue;

	[Token(Token = "0x40006F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int percentageValue;

	[Token(Token = "0x40006F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	internal Sprite iconToDisplay;

	[Token(Token = "0x60005C4")]
	[Address(RVA = "0xCB6928", Offset = "0xCB6928", VA = "0xCB6928")]
	public SellingData()
	{
	}
}
[Token(Token = "0x20000ED")]
public class DealerDatabase : MonoBehaviour
{
	[Token(Token = "0x2000301")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1F589C", Offset = "0x1F589C")]
	private sealed class <ComputeAvailableItemFromUnlock>c__AnonStorey0
	{
		[Token(Token = "0x40011DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal HashSet<string> set;

		[Token(Token = "0x600174E")]
		[Address(RVA = "0xC48BCC", Offset = "0xC48BCC", VA = "0xC48BCC")]
		public <ComputeAvailableItemFromUnlock>c__AnonStorey0()
		{
		}

		[Token(Token = "0x600174F")]
		[Address(RVA = "0xC48BD4", Offset = "0xC48BD4", VA = "0xC48BD4")]
		internal bool <>m__0(string val)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x40006F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static DealerDatabase Instance;

	[Token(Token = "0x40006F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1F5758", Offset = "0x1F5758")]
	[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0x1F5758", Offset = "0x1F5758")]
	private JobReader <JR>k__BackingField;

	[Token(Token = "0x40006F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[HideInInspector]
	public int balanceTransaction;

	[Token(Token = "0x40006F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	[HideInInspector]
	public int valueTraded;

	[Token(Token = "0x40006F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[HideInInspector]
	public int RepLvl;

	[Token(Token = "0x40006FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[HideInInspector]
	public int RepToReach;

	[Token(Token = "0x40006FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[HideInInspector]
	public int actualTier;

	[Token(Token = "0x40006FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[HideInInspector]
	public int maxTier;

	[Token(Token = "0x40006FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[HideInInspector]
	public BuyingData[] itemsVendusAuJoueur;

	[Token(Token = "0x40006FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[HideInInspector]
	public List<BuyingData> itemsAchetesAuJoueur;

	[Token(Token = "0x40006FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[HideInInspector]
	public Dictionary<string, int> OjToday;

	[Token(Token = "0x4000700")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[HideInInspector]
	public List<Job> Jobs;

	[Token(Token = "0x4000701")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[HideInInspector]
	public Tier[] Tiers;

	[Token(Token = "0x4000702")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[HideInInspector]
	public List<Job> ActualJobs;

	[Token(Token = "0x4000703")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private JobGenerator jobGen;

	[Token(Token = "0x4000704")]
	private const int objectivesTargetMultiplier = 15;

	[Token(Token = "0x4000705")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1F584C", Offset = "0x1F584C")]
	private static Predicate<string> <>f__am$cache0;

	[Token(Token = "0x170000A5")]
	private TabReader reader
	{
		[Token(Token = "0x60005C6")]
		[Address(RVA = "0xCFD3D4", Offset = "0xCFD3D4", VA = "0xCFD3D4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000A6")]
	public JobReader JR
	{
		[Token(Token = "0x60005C7")]
		[Address(RVA = "0xCFD438", Offset = "0xCFD438", VA = "0xCFD438")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1F585C", Offset = "0x1F585C")]
		get
		{
			return null;
		}
		[Token(Token = "0x60005C8")]
		[Address(RVA = "0xCFD440", Offset = "0xCFD440", VA = "0xCFD440")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1F586C", Offset = "0x1F586C")]
		private set
		{
		}
	}

	[Token(Token = "0x60005C5")]
	[Address(RVA = "0xCFD348", Offset = "0xCFD348", VA = "0xCFD348")]
	public DealerDatabase()
	{
	}

	[Token(Token = "0x60005C9")]
	[Address(RVA = "0xCFD448", Offset = "0xCFD448", VA = "0xCFD448")]
	public void Initialize()
	{
	}

	[Token(Token = "0x60005CA")]
	[Address(RVA = "0xCFFBDC", Offset = "0xCFFBDC", VA = "0xCFFBDC")]
	private void UpdateJobGenState()
	{
	}

	[Token(Token = "0x60005CB")]
	[Address(RVA = "0xCFF390", Offset = "0xCFF390", VA = "0xCFF390")]
	public void InitJob(int tier)
	{
	}

	[Token(Token = "0x60005CC")]
	[Address(RVA = "0xCFFAF0", Offset = "0xCFFAF0", VA = "0xCFFAF0")]
	private void GenerateMissingJobs()
	{
	}

	[Token(Token = "0x60005CD")]
	[Address(RVA = "0xCFFC54", Offset = "0xCFFC54", VA = "0xCFFC54")]
	public void ChooseLastJobs()
	{
	}

	[Token(Token = "0x60005CE")]
	[Address(RVA = "0xCFFE24", Offset = "0xCFFE24", VA = "0xCFFE24")]
	public void CheckJobs(int jobID)
	{
	}

	[Token(Token = "0x60005CF")]
	[Address(RVA = "0xD0060C", Offset = "0xD0060C", VA = "0xD0060C")]
	private int GetGoldenBobbyJobId(Job[] jobs)
	{
		return default(int);
	}

	[Token(Token = "0x60005D0")]
	[Address(RVA = "0xD00770", Offset = "0xD00770", VA = "0xD00770")]
	public void CompleteJob(int jobID)
	{
	}

	[Token(Token = "0x60005D1")]
	[Address(RVA = "0xD00A40", Offset = "0xD00A40", VA = "0xD00A40")]
	public void GiveReward(Job job)
	{
	}

	[Token(Token = "0x60005D2")]
	[Address(RVA = "0xCFEB74", Offset = "0xCFEB74", VA = "0xCFEB74")]
	public BuyingData[] GetTierBonus(int tier, bool applyBonuses = false)
	{
		return null;
	}

	[Token(Token = "0x60005D3")]
	[Address(RVA = "0xCFF1B0", Offset = "0xCFF1B0", VA = "0xCFF1B0")]
	public string[] GetTierUnlocks(int tier)
	{
		return null;
	}

	[Token(Token = "0x60005D4")]
	[Address(RVA = "0xD013BC", Offset = "0xD013BC", VA = "0xD013BC")]
	public string[] GetTierUnlocks(int tier, out bool[] isNewItem)
	{
		return null;
	}

	[Token(Token = "0x60005D5")]
	[Address(RVA = "0xD0175C", Offset = "0xD0175C", VA = "0xD0175C")]
	private Predicate<string> ComputeAvailableItemFromUnlock()
	{
		return null;
	}

	[Token(Token = "0x60005D6")]
	[Address(RVA = "0xCFDB78", Offset = "0xCFDB78", VA = "0xCFDB78")]
	public void SetBuyNSell(bool newGame)
	{
	}

	[Token(Token = "0x60005D7")]
	[Address(RVA = "0xD01D30", Offset = "0xD01D30", VA = "0xD01D30")]
	public void MarketInit()
	{
	}

	[Token(Token = "0x60005D8")]
	[Address(RVA = "0xD01F08", Offset = "0xD01F08", VA = "0xD01F08")]
	public void refreshStockValue()
	{
	}

	[Token(Token = "0x60005D9")]
	[Address(RVA = "0xCFCF28", Offset = "0xCFCF28", VA = "0xCFCF28")]
	public void PriceCalculationSequence()
	{
	}

	[Token(Token = "0x60005DA")]
	[Address(RVA = "0xCFF6C0", Offset = "0xCFF6C0", VA = "0xCFF6C0")]
	public void SetItemsAvailable(bool live = false)
	{
	}

	[Token(Token = "0x60005DB")]
	[Address(RVA = "0xD023D8", Offset = "0xD023D8", VA = "0xD023D8")]
	private void SetupSoldRegular(BuyingData data)
	{
	}

	[Token(Token = "0x60005DC")]
	[Address(RVA = "0xD021E8", Offset = "0xD021E8", VA = "0xD021E8")]
	private void SetupSoldSandbox(BuyingData data)
	{
	}

	[Token(Token = "0x60005DD")]
	[Address(RVA = "0xD02624", Offset = "0xD02624", VA = "0xD02624")]
	private bool IsValidDataForSandbox(BuyingData data)
	{
		return default(bool);
	}

	[Token(Token = "0x60005DE")]
	[Address(RVA = "0xD025D4", Offset = "0xD025D4", VA = "0xD025D4")]
	private bool IsDataSold(BuyingData data)
	{
		return default(bool);
	}

	[Token(Token = "0x60005DF")]
	[Address(RVA = "0xCFF66C", Offset = "0xCFF66C", VA = "0xCFF66C")]
	private void SetDataSold(BuyingData data, bool sold)
	{
	}

	[Token(Token = "0x60005E0")]
	[Address(RVA = "0xD027E0", Offset = "0xD027E0", VA = "0xD027E0")]
	public void MarketProgression()
	{
	}

	[Token(Token = "0x60005E1")]
	[Address(RVA = "0xD03060", Offset = "0xD03060", VA = "0xD03060")]
	public void DealEndCalculations()
	{
	}

	[Token(Token = "0x60005E2")]
	[Address(RVA = "0xD03598", Offset = "0xD03598", VA = "0xD03598")]
	public void UnlockItem(BuyingData data)
	{
	}

	[Token(Token = "0x60005E3")]
	[Address(RVA = "0xD03674", Offset = "0xD03674", VA = "0xD03674")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1F587C", Offset = "0x1F587C")]
	private bool <CompleteJob>m__0(Job j)
	{
		return default(bool);
	}

	[Token(Token = "0x60005E4")]
	[Address(RVA = "0xD036A8", Offset = "0xD036A8", VA = "0xD036A8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1F588C", Offset = "0x1F588C")]
	private static bool <ComputeAvailableItemFromUnlock>m__1(string val)
	{
		return default(bool);
	}
}
[Token(Token = "0x20000EE")]
public class DealerHandTrigger : NVRInteractable
{
	[Token(Token = "0x4000706")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private TraderMaster tablet;

	[Token(Token = "0x60005E5")]
	[Address(RVA = "0xC48C50", Offset = "0xC48C50", VA = "0xC48C50")]
	public DealerHandTrigger()
	{
	}

	[Token(Token = "0x60005E6")]
	[Address(RVA = "0xC48C58", Offset = "0xC48C58", VA = "0xC48C58", Slot = "6")]
	protected override void Start()
	{
	}

	[Token(Token = "0x60005E7")]
	[Address(RVA = "0xC48C7C", Offset = "0xC48C7C", VA = "0xC48C7C", Slot = "23")]
	protected override void OnEnable()
	{
	}

	[Token(Token = "0x60005E8")]
	[Address(RVA = "0xC48D1C", Offset = "0xC48D1C", VA = "0xC48D1C", Slot = "12")]
	public override void BeginInteraction(NVRHand hand)
	{
	}

	[Token(Token = "0x60005E9")]
	[Address(RVA = "0xC48D90", Offset = "0xC48D90", VA = "0xC48D90")]
	private void OnTriggerEnter(Collider col)
	{
	}
}
[Token(Token = "0x20000EF")]
public class DealerJobScript : MonoBehaviour
{
	[Token(Token = "0x2000302")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1F590C", Offset = "0x1F590C")]
	private sealed class <FindItemValue>c__AnonStorey1
	{
		[Token(Token = "0x40011DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal string name;

		[Token(Token = "0x6001750")]
		[Address(RVA = "0xC4ADF8", Offset = "0xC4ADF8", VA = "0xC4ADF8")]
		public <FindItemValue>c__AnonStorey1()
		{
		}

		[Token(Token = "0x6001751")]
		[Address(RVA = "0xC4C23C", Offset = "0xC4C23C", VA = "0xC4C23C")]
		internal bool <>m__0(BuyingData item)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x2000303")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1F591C", Offset = "0x1F591C")]
	private sealed class <WaitNClose>c__Iterator0 : IEnumerator, IDisposable, IEnumerator<object>
	{
		[Token(Token = "0x40011DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal DealerJobScript $this;

		[Token(Token = "0x40011DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		internal object $current;

		[Token(Token = "0x40011DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal bool $disposing;

		[Token(Token = "0x40011DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		internal int $PC;

		[Token(Token = "0x17000277")]
		private object System.Collections.Generic.IEnumerator<object>.Current
		{
			[Token(Token = "0x6001754")]
			[Address(RVA = "0xC4C3C8", Offset = "0xC4C3C8", VA = "0xC4C3C8", Slot = "8")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000278")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001755")]
			[Address(RVA = "0xC4C3D0", Offset = "0xC4C3D0", VA = "0xC4C3D0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001752")]
		[Address(RVA = "0xC4C170", Offset = "0xC4C170", VA = "0xC4C170")]
		[DebuggerHidden]
		public <WaitNClose>c__Iterator0()
		{
		}

		[Token(Token = "0x6001753")]
		[Address(RVA = "0xC4C2E0", Offset = "0xC4C2E0", VA = "0xC4C2E0", Slot = "5")]
		public bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001756")]
		[Address(RVA = "0xC4C3D8", Offset = "0xC4C3D8", VA = "0xC4C3D8", Slot = "7")]
		[DebuggerHidden]
		public void Dispose()
		{
		}

		[Token(Token = "0x6001757")]
		[Address(RVA = "0xC4C3EC", Offset = "0xC4C3EC", VA = "0xC4C3EC", Slot = "6")]
		[DebuggerHidden]
		public void Reset()
		{
		}
	}

	[Token(Token = "0x4000707")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	[HideInInspector]
	public TraderMaster tablet;

	[Token(Token = "0x4000708")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private DealerDatabase databaseScript;

	[Token(Token = "0x4000709")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public GameObject JobWindow;

	[Token(Token = "0x400070A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject repRewardTemplate;

	[Token(Token = "0x400070B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public GameObject Halo;

	[Token(Token = "0x400070C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[HideInInspector]
	public int prisonID;

	[Token(Token = "0x400070D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[HideInInspector]
	public int localActiveObjectsCount;

	[Token(Token = "0x400070E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[HideInInspector]
	public bool activeObjectCheck;

	[Token(Token = "0x400070F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private int GiftCount;

	[Token(Token = "0x4000710")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public TextMeshProUGUI NewTierTxt;

	[Token(Token = "0x4000711")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public Transform[] repRewardAnchors;

	[Token(Token = "0x4000712")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject jobContent;

	[Token(Token = "0x4000713")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public TierWrapper tierWrapper;

	[Token(Token = "0x4000714")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public JobsPanel jobsPanel;

	[Token(Token = "0x4000715")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private JobWindow[] jobWrappers;

	[Token(Token = "0x4000716")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private RepBarWrapper repBarWrapper;

	[Token(Token = "0x4000717")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public TextMeshProUGUI ItemCrafted;

	[Token(Token = "0x4000718")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public TextMeshProUGUI TimeCaught;

	[Token(Token = "0x4000719")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public TextMeshProUGUI DayPassed;

	[Token(Token = "0x400071A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1F58EC", Offset = "0x1F58EC")]
	private static Dictionary<string, int> <>f__switch$map0;

	[Token(Token = "0x60005EA")]
	[Address(RVA = "0xC48E78", Offset = "0xC48E78", VA = "0xC48E78")]
	public DealerJobScript()
	{
	}

	[Token(Token = "0x60005EB")]
	[Address(RVA = "0xC48E80", Offset = "0xC48E80", VA = "0xC48E80")]
	public void Initialize()
	{
	}

	[Token(Token = "0x60005EC")]
	[Address(RVA = "0xC49370", Offset = "0xC49370", VA = "0xC49370")]
	public void CompleteJob(int jobID)
	{
	}

	[Token(Token = "0x60005ED")]
	[Address(RVA = "0xC49E44", Offset = "0xC49E44", VA = "0xC49E44")]
	private void TakeJobObjectsFromPlayer(int jobID)
	{
	}

	[Token(Token = "0x60005EE")]
	[Address(RVA = "0xC4ABFC", Offset = "0xC4ABFC", VA = "0xC4ABFC")]
	private int FindItemValue(string name)
	{
		return default(int);
	}

	[Token(Token = "0x60005EF")]
	[Address(RVA = "0xC49770", Offset = "0xC49770", VA = "0xC49770")]
	public void EndLevel(int jobID)
	{
	}

	[Token(Token = "0x60005F0")]
	[Address(RVA = "0xC4A304", Offset = "0xC4A304", VA = "0xC4A304")]
	public void NewTierWindow()
	{
	}

	[Token(Token = "0x60005F1")]
	[Address(RVA = "0xC4BC38", Offset = "0xC4BC38", VA = "0xC4BC38")]
	public void CheckGiftCount()
	{
	}

	[Token(Token = "0x60005F2")]
	[Address(RVA = "0xC4AEA0", Offset = "0xC4AEA0", VA = "0xC4AEA0")]
	public void SetTierRewards()
	{
	}

	[Token(Token = "0x60005F3")]
	[Address(RVA = "0xC4C0F0", Offset = "0xC4C0F0", VA = "0xC4C0F0")]
	[DebuggerHidden]
	private IEnumerator WaitNClose()
	{
		return null;
	}

	[Token(Token = "0x60005F4")]
	[Address(RVA = "0xC4BC50", Offset = "0xC4BC50", VA = "0xC4BC50")]
	public void CloseNewTierWindow()
	{
	}

	[Token(Token = "0x60005F5")]
	[Address(RVA = "0xC49210", Offset = "0xC49210", VA = "0xC49210")]
	public void SetJobBubbles()
	{
	}

	[Token(Token = "0x60005F6")]
	[Address(RVA = "0xC4A578", Offset = "0xC4A578", VA = "0xC4A578")]
	public void RefreshStatText()
	{
	}

	[Token(Token = "0x60005F7")]
	[Address(RVA = "0xC4A550", Offset = "0xC4A550", VA = "0xC4A550")]
	public void RefreshRepBar()
	{
	}

	[Token(Token = "0x60005F8")]
	[Address(RVA = "0xC4C1A8", Offset = "0xC4C1A8", VA = "0xC4C1A8")]
	public void RefreshTierTrackers()
	{
	}

	[Token(Token = "0x60005F9")]
	[Address(RVA = "0xC4A4E4", Offset = "0xC4A4E4", VA = "0xC4A4E4")]
	public void RefreshObjectives()
	{
	}
}
[Token(Token = "0x20000F0")]
public class DealerTradeScript : MonoBehaviour
{
	[Token(Token = "0x2000304")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1F59DC", Offset = "0x1F59DC")]
	private sealed class <TryUnlock>c__AnonStorey0
	{
		[Token(Token = "0x40011E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal ObjectTag tag;

		[Token(Token = "0x6001758")]
		[Address(RVA = "0xC4D410", Offset = "0xC4D410", VA = "0xC4D410")]
		public <TryUnlock>c__AnonStorey0()
		{
		}

		[Token(Token = "0x6001759")]
		[Address(RVA = "0xC4ED78", Offset = "0xC4ED78", VA = "0xC4ED78")]
		internal void <>m__0()
		{
		}

		[Token(Token = "0x600175A")]
		[Address(RVA = "0xC4EE50", Offset = "0xC4EE50", VA = "0xC4EE50")]
		internal void <>m__1()
		{
		}
	}

	[Token(Token = "0x400071B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public MarcketContainer marcket;

	[Token(Token = "0x400071C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public PlayerStuffContainer playerStuff;

	[Token(Token = "0x400071D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public ObjectTagContainer basket;

	[Token(Token = "0x400071E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TextMeshProUGUI skillBalanceText;

	[Token(Token = "0x400071F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public TextMeshProUGUI balanceText;

	[Token(Token = "0x4000720")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TextMeshProUGUI equalText;

	[Token(Token = "0x4000721")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Image balanceBg;

	[Token(Token = "0x4000722")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private int lastSkillBalance;

	[Token(Token = "0x4000723")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private int lastBalance;

	[Token(Token = "0x4000724")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Sequence tween;

	[Token(Token = "0x4000725")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public int MoneyStack;

	[Token(Token = "0x4000726")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public int thresholdSurpriseAnim;

	[Token(Token = "0x4000727")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float delaiBuySpawner;

	[Token(Token = "0x4000728")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float forceMultiplierBuySpawner;

	[Token(Token = "0x4000729")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[HideInInspector]
	public TraderMaster tablet;

	[Token(Token = "0x400072A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Dealer dealerNPC;

	[Token(Token = "0x400072B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[HideInInspector]
	public bool isDealing;

	[Token(Token = "0x400072C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1F599C", Offset = "0x1F599C")]
	private static Func<BuyingData, bool> <>f__am$cache0;

	[Token(Token = "0x400072D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1F59AC", Offset = "0x1F59AC")]
	private static Func<BuyingData, bool> <>f__am$cache1;

	[Token(Token = "0x60005FA")]
	[Address(RVA = "0xC4C578", Offset = "0xC4C578", VA = "0xC4C578")]
	public DealerTradeScript()
	{
	}

	[Token(Token = "0x60005FB")]
	[Address(RVA = "0xC4C588", Offset = "0xC4C588", VA = "0xC4C588")]
	public void Initialize()
	{
	}

	[Token(Token = "0x60005FC")]
	[Address(RVA = "0xC4C650", Offset = "0xC4C650", VA = "0xC4C650")]
	private void Start()
	{
	}

	[Token(Token = "0x60005FD")]
	[Address(RVA = "0xC4C7AC", Offset = "0xC4C7AC", VA = "0xC4C7AC")]
	private void Update()
	{
	}

	[Token(Token = "0x60005FE")]
	[Address(RVA = "0xC4C178", Offset = "0xC4C178", VA = "0xC4C178")]
	public void SimpleRefreshUI(bool refreshStock = true)
	{
	}

	[Token(Token = "0x60005FF")]
	[Address(RVA = "0xC4CE2C", Offset = "0xC4CE2C", VA = "0xC4CE2C")]
	public void DealerRefreshUI(bool refreshStock = true)
	{
	}

	[Token(Token = "0x6000600")]
	[Address(RVA = "0xC4CF84", Offset = "0xC4CF84", VA = "0xC4CF84")]
	private void UpdateSkillSoldState(BuyingData[] itemsVendusAuJoueur)
	{
	}

	[Token(Token = "0x6000601")]
	[Address(RVA = "0xC4D030", Offset = "0xC4D030", VA = "0xC4D030")]
	public void TryUnlock(ObjectTag tag)
	{
	}

	[Token(Token = "0x6000602")]
	[Address(RVA = "0xC4D418", Offset = "0xC4D418", VA = "0xC4D418")]
	public void BalanceTheDeal()
	{
	}

	[Token(Token = "0x6000603")]
	[Address(RVA = "0xC4D760", Offset = "0xC4D760", VA = "0xC4D760")]
	private void BalanceAchievements()
	{
	}

	[Token(Token = "0x6000604")]
	[Address(RVA = "0xC4E134", Offset = "0xC4E134", VA = "0xC4E134")]
	public void JustTraded(BuyingData value, int amount = 1)
	{
	}

	[Token(Token = "0x6000605")]
	[Address(RVA = "0xC4E2DC", Offset = "0xC4E2DC", VA = "0xC4E2DC")]
	public void CancelBuy(bool dealclosed = false)
	{
	}

	[Token(Token = "0x6000606")]
	[Address(RVA = "0xC4D998", Offset = "0xC4D998", VA = "0xC4D998")]
	public void BoughtStuff(bool dealclosed = false, int balance = 0)
	{
	}

	[Token(Token = "0x6000607")]
	[Address(RVA = "0xC4E574", Offset = "0xC4E574", VA = "0xC4E574")]
	public void SavePostDeal()
	{
	}

	[Token(Token = "0x6000608")]
	[Address(RVA = "0xC4ED20", Offset = "0xC4ED20", VA = "0xC4ED20")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1F59BC", Offset = "0x1F59BC")]
	private static bool <CancelBuy>m__0(BuyingData d)
	{
		return default(bool);
	}

	[Token(Token = "0x6000609")]
	[Address(RVA = "0xC4ED4C", Offset = "0xC4ED4C", VA = "0xC4ED4C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1F59CC", Offset = "0x1F59CC")]
	private static bool <CancelBuy>m__1(BuyingData d)
	{
		return default(bool);
	}
}
[Token(Token = "0x20000F1")]
public class JobGenerator
{
	[Token(Token = "0x20000F2")]
	private struct RawCraftStep
	{
		[Token(Token = "0x400073F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public CraftableObject Craftable;

		[Token(Token = "0x4000740")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public string Step;
	}

	[Token(Token = "0x20000F3")]
	private struct CraftStep
	{
		[Token(Token = "0x4000741")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string Craftable;

		[Token(Token = "0x4000742")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public string Action;

		[Token(Token = "0x4000743")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public string Target;
	}

	[Token(Token = "0x20000F4")]
	private class CraftGraph : Dictionary<string, CraftNode>
	{
		[Token(Token = "0x2000308")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1F5B1C", Offset = "0x1F5B1C")]
		private sealed class <Leafs>c__Iterator0 : IEnumerable, IEnumerable<CraftNode>, IEnumerator, IDisposable, IEnumerator<CraftNode>
		{
			[Token(Token = "0x40011E8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			internal Enumerator $locvar0;

			[Token(Token = "0x40011E9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			internal KeyValuePair<string, CraftNode> <elem>__1;

			[Token(Token = "0x40011EA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			internal CraftGraph $this;

			[Token(Token = "0x40011EB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			internal CraftNode $current;

			[Token(Token = "0x40011EC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			internal bool $disposing;

			[Token(Token = "0x40011ED")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			internal int $PC;

			[Token(Token = "0x17000279")]
			private CraftNode System.Collections.Generic.IEnumerator<JobGenerator.CraftNode>.Current
			{
				[Token(Token = "0x6001764")]
				[Address(RVA = "0xC77554", Offset = "0xC77554", VA = "0xC77554", Slot = "10")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700027A")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001765")]
				[Address(RVA = "0xC7755C", Offset = "0xC7755C", VA = "0xC7755C", Slot = "6")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001762")]
			[Address(RVA = "0xC769D8", Offset = "0xC769D8", VA = "0xC769D8")]
			[DebuggerHidden]
			public <Leafs>c__Iterator0()
			{
			}

			[Token(Token = "0x6001763")]
			[Address(RVA = "0xC77364", Offset = "0xC77364", VA = "0xC77364", Slot = "7")]
			public bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001766")]
			[Address(RVA = "0xC77564", Offset = "0xC77564", VA = "0xC77564", Slot = "9")]
			[DebuggerHidden]
			public void Dispose()
			{
			}

			[Token(Token = "0x6001767")]
			[Address(RVA = "0xC775E4", Offset = "0xC775E4", VA = "0xC775E4", Slot = "8")]
			[DebuggerHidden]
			public void Reset()
			{
			}

			[Token(Token = "0x6001768")]
			[Address(RVA = "0xC77668", Offset = "0xC77668", VA = "0xC77668", Slot = "4")]
			[DebuggerHidden]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x6001769")]
			[Address(RVA = "0xC7766C", Offset = "0xC7766C", VA = "0xC7766C", Slot = "5")]
			[DebuggerHidden]
			private IEnumerator<CraftNode> System.Collections.Generic.IEnumerable<JobGenerator.CraftNode>.GetEnumerator()
			{
				return null;
			}
		}

		[Token(Token = "0x2000309")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1F5B9C", Offset = "0x1F5B9C")]
		private sealed class <GenerateDot>c__Iterator1 : IEnumerable, IEnumerable<string>, IEnumerator, IDisposable, IEnumerator<string>
		{
			[Token(Token = "0x40011EE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			internal Enumerator $locvar0;

			[Token(Token = "0x40011EF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			internal KeyValuePair<string, CraftNode> <elem>__1;

			[Token(Token = "0x40011F0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			internal List<CraftNode>.Enumerator $locvar1;

			[Token(Token = "0x40011F1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			internal CraftNode <child>__2;

			[Token(Token = "0x40011F2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			internal CraftGraph $this;

			[Token(Token = "0x40011F3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			internal string $current;

			[Token(Token = "0x40011F4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			internal bool $disposing;

			[Token(Token = "0x40011F5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			internal int $PC;

			[Token(Token = "0x1700027B")]
			private string System.Collections.Generic.IEnumerator<string>.Current
			{
				[Token(Token = "0x600176C")]
				[Address(RVA = "0xC77144", Offset = "0xC77144", VA = "0xC77144", Slot = "10")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700027C")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600176D")]
				[Address(RVA = "0xC7714C", Offset = "0xC7714C", VA = "0xC7714C", Slot = "6")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600176A")]
			[Address(RVA = "0xC76D4C", Offset = "0xC76D4C", VA = "0xC76D4C")]
			[DebuggerHidden]
			public <GenerateDot>c__Iterator1()
			{
			}

			[Token(Token = "0x600176B")]
			[Address(RVA = "0xC76D58", Offset = "0xC76D58", VA = "0xC76D58", Slot = "7")]
			public bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600176E")]
			[Address(RVA = "0xC77154", Offset = "0xC77154", VA = "0xC77154", Slot = "9")]
			[DebuggerHidden]
			public void Dispose()
			{
			}

			[Token(Token = "0x600176F")]
			[Address(RVA = "0xC77224", Offset = "0xC77224", VA = "0xC77224", Slot = "8")]
			[DebuggerHidden]
			public void Reset()
			{
			}

			[Token(Token = "0x6001770")]
			[Address(RVA = "0xC772A8", Offset = "0xC772A8", VA = "0xC772A8", Slot = "4")]
			[DebuggerHidden]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x6001771")]
			[Address(RVA = "0xC772AC", Offset = "0xC772AC", VA = "0xC772AC", Slot = "5")]
			[DebuggerHidden]
			private IEnumerator<string> System.Collections.Generic.IEnumerable<string>.GetEnumerator()
			{
				return null;
			}
		}

		[Token(Token = "0x6000623")]
		[Address(RVA = "0xC763B8", Offset = "0xC763B8", VA = "0xC763B8")]
		public CraftGraph()
		{
		}

		[Token(Token = "0x6000624")]
		[Address(RVA = "0xC7641C", Offset = "0xC7641C", VA = "0xC7641C")]
		public CraftNode GetOrCreate(string name)
		{
			return null;
		}

		[Token(Token = "0x6000625")]
		[Address(RVA = "0xC76510", Offset = "0xC76510", VA = "0xC76510")]
		public CraftGraph Reversed()
		{
			return null;
		}

		[Token(Token = "0x6000626")]
		[Address(RVA = "0xC76940", Offset = "0xC76940", VA = "0xC76940")]
		[DebuggerHidden]
		public IEnumerable<CraftNode> Leafs()
		{
			return null;
		}

		[Token(Token = "0x6000627")]
		[Address(RVA = "0xC769E0", Offset = "0xC769E0", VA = "0xC769E0")]
		internal void Merge(string rem)
		{
		}

		[Token(Token = "0x6000628")]
		[Address(RVA = "0xC76CB4", Offset = "0xC76CB4", VA = "0xC76CB4")]
		[DebuggerHidden]
		public IEnumerable<string> GenerateDot()
		{
			return null;
		}

		[Token(Token = "0x6000629")]
		[Address(RVA = "0xC76D54", Offset = "0xC76D54", VA = "0xC76D54")]
		public void WriteDotTo(string filename)
		{
		}
	}

	[Token(Token = "0x20000F5")]
	private class CraftNode
	{
		[Token(Token = "0x4000744")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public string name;

		[Token(Token = "0x4000745")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public List<CraftNode> childs;

		[Token(Token = "0x600062A")]
		[Address(RVA = "0xC764F0", Offset = "0xC764F0", VA = "0xC764F0")]
		public CraftNode(string name)
		{
		}

		[Token(Token = "0x600062B")]
		[Address(RVA = "0xC76860", Offset = "0xC76860", VA = "0xC76860")]
		public void AddChild(CraftNode child)
		{
		}
	}

	[Token(Token = "0x2000305")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1F5C1C", Offset = "0x1F5C1C")]
	private sealed class <UpdateStoreState>c__AnonStorey1
	{
		[Token(Token = "0x40011E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal List<string> Craftable;

		[Token(Token = "0x600175B")]
		[Address(RVA = "0xC76294", Offset = "0xC76294", VA = "0xC76294")]
		public <UpdateStoreState>c__AnonStorey1()
		{
		}

		[Token(Token = "0x600175C")]
		[Address(RVA = "0xC7629C", Offset = "0xC7629C", VA = "0xC7629C")]
		internal bool <>m__0(BuyingData b)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x2000306")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1F5C2C", Offset = "0x1F5C2C")]
	private sealed class <ExtractValue>c__AnonStorey2
	{
		[Token(Token = "0x40011E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal MarcketType? type;

		[Token(Token = "0x600175D")]
		[Address(RVA = "0xC7450C", Offset = "0xC7450C", VA = "0xC7450C")]
		public <ExtractValue>c__AnonStorey2()
		{
		}

		[Token(Token = "0x600175E")]
		[Address(RVA = "0xC757B8", Offset = "0xC757B8", VA = "0xC757B8")]
		internal bool <>m__0(BuyingData bs)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x2000307")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1F5C3C", Offset = "0x1F5C3C")]
	private sealed class <GenerateNewJob>c__AnonStorey3
	{
		[Token(Token = "0x40011E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal int objValue;

		[Token(Token = "0x40011E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		internal int nombreObjectifs;

		[Token(Token = "0x40011E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal int recValue;

		[Token(Token = "0x40011E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		internal int nombreRecompenses;

		[Token(Token = "0x40011E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal JobGenerator $this;

		[Token(Token = "0x600175F")]
		[Address(RVA = "0xC7586C", Offset = "0xC7586C", VA = "0xC7586C")]
		public <GenerateNewJob>c__AnonStorey3()
		{
		}

		[Token(Token = "0x6001760")]
		[Address(RVA = "0xC75874", Offset = "0xC75874", VA = "0xC75874")]
		internal SubJob <>m__0(string obj)
		{
			return null;
		}

		[Token(Token = "0x6001761")]
		[Address(RVA = "0xC75964", Offset = "0xC75964", VA = "0xC75964")]
		internal SubJob <>m__1(string rec)
		{
			return null;
		}
	}

	[Token(Token = "0x200030A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1F5C4C", Offset = "0x1F5C4C")]
	private sealed class <MergeInternalNodes>c__AnonStorey4
	{
		[Token(Token = "0x40011F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal List<string> toKeep;

		[Token(Token = "0x6001772")]
		[Address(RVA = "0xC75AC4", Offset = "0xC75AC4", VA = "0xC75AC4")]
		public <MergeInternalNodes>c__AnonStorey4()
		{
		}

		[Token(Token = "0x6001773")]
		[Address(RVA = "0xC75ACC", Offset = "0xC75ACC", VA = "0xC75ACC")]
		internal bool <>m__0(string s)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x200030B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1F5C5C", Offset = "0x1F5C5C")]
	private sealed class <CreateRawCraftStep>c__AnonStorey5
	{
		[Token(Token = "0x40011F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal CraftableObject co;

		[Token(Token = "0x6001774")]
		[Address(RVA = "0xC754D0", Offset = "0xC754D0", VA = "0xC754D0")]
		public <CreateRawCraftStep>c__AnonStorey5()
		{
		}

		[Token(Token = "0x6001775")]
		[Address(RVA = "0xC757AC", Offset = "0xC757AC", VA = "0xC757AC")]
		internal RawCraftStep <>m__0(string s)
		{
			return default(RawCraftStep);
		}
	}

	[Token(Token = "0x200030C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1F5C6C", Offset = "0x1F5C6C")]
	private sealed class <ParseSteps>c__Iterator0 : IEnumerable, IEnumerable<CraftStep>, IEnumerator, IDisposable, IEnumerator<CraftStep>
	{
		[Token(Token = "0x40011F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal RawCraftStep rcs;

		[Token(Token = "0x40011F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal string <from>__0;

		[Token(Token = "0x40011FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		internal string[] <splited>__0;

		[Token(Token = "0x40011FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal string <to>__0;

		[Token(Token = "0x40011FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		internal string <action>__0;

		[Token(Token = "0x40011FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal CraftStep $current;

		[Token(Token = "0x40011FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		internal bool $disposing;

		[Token(Token = "0x40011FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		internal int $PC;

		[Token(Token = "0x1700027D")]
		private CraftStep System.Collections.Generic.IEnumerator<JobGenerator.CraftStep>.Current
		{
			[Token(Token = "0x6001778")]
			[Address(RVA = "0xC760AC", Offset = "0xC760AC", VA = "0xC760AC", Slot = "10")]
			[DebuggerHidden]
			get
			{
				return default(CraftStep);
			}
		}

		[Token(Token = "0x1700027E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001779")]
			[Address(RVA = "0xC760BC", Offset = "0xC760BC", VA = "0xC760BC", Slot = "6")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001776")]
		[Address(RVA = "0xC75B48", Offset = "0xC75B48", VA = "0xC75B48")]
		[DebuggerHidden]
		public <ParseSteps>c__Iterator0()
		{
		}

		[Token(Token = "0x6001777")]
		[Address(RVA = "0xC75B50", Offset = "0xC75B50", VA = "0xC75B50", Slot = "7")]
		public bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600177A")]
		[Address(RVA = "0xC76138", Offset = "0xC76138", VA = "0xC76138", Slot = "9")]
		[DebuggerHidden]
		public void Dispose()
		{
		}

		[Token(Token = "0x600177B")]
		[Address(RVA = "0xC7614C", Offset = "0xC7614C", VA = "0xC7614C", Slot = "8")]
		[DebuggerHidden]
		public void Reset()
		{
		}

		[Token(Token = "0x600177C")]
		[Address(RVA = "0xC761D0", Offset = "0xC761D0", VA = "0xC761D0", Slot = "4")]
		[DebuggerHidden]
		private IEnumerator System.Collections.IEnumerable.GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x600177D")]
		[Address(RVA = "0xC761D4", Offset = "0xC761D4", VA = "0xC761D4", Slot = "5")]
		[DebuggerHidden]
		private IEnumerator<CraftStep> System.Collections.Generic.IEnumerable<JobGenerator.CraftStep>.GetEnumerator()
		{
			return null;
		}
	}

	[Token(Token = "0x400072E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private readonly CraftGraph graph;

	[Token(Token = "0x400072F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private Dictionary<string, int> CraftValue;

	[Token(Token = "0x4000730")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private Dictionary<string, int> RecompensePotentielle;

	[Token(Token = "0x4000731")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private int objectiveValueTarget;

	[Token(Token = "0x4000732")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float RecompenseMultipler;

	[Token(Token = "0x4000733")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int MaxQuestName;

	[Token(Token = "0x4000734")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<int> JobNames;

	[Token(Token = "0x4000735")]
	private const string ArrowFormat = "{0} -> {1};";

	[Token(Token = "0x4000736")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1F59EC", Offset = "0x1F59EC")]
	private static Func<CraftableObject, IEnumerable<RawCraftStep>> <>f__mg$cache0;

	[Token(Token = "0x4000737")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1F59FC", Offset = "0x1F59FC")]
	private static Func<RawCraftStep, IEnumerable<CraftStep>> <>f__mg$cache1;

	[Token(Token = "0x4000738")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1F5A0C", Offset = "0x1F5A0C")]
	private static Func<BuyingData, string> <>f__am$cache0;

	[Token(Token = "0x4000739")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1F5A1C", Offset = "0x1F5A1C")]
	private static Func<BuyingData, bool> <>f__am$cache1;

	[Token(Token = "0x400073A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1F5A2C", Offset = "0x1F5A2C")]
	private static Func<KeyValuePair<string, bool>, bool> <>f__am$cache2;

	[Token(Token = "0x400073B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1F5A3C", Offset = "0x1F5A3C")]
	private static Func<KeyValuePair<string, bool>, string> <>f__am$cache3;

	[Token(Token = "0x400073C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1F5A4C", Offset = "0x1F5A4C")]
	private static Func<BuyingData, string> <>f__am$cache4;

	[Token(Token = "0x400073D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1F5A5C", Offset = "0x1F5A5C")]
	private static Func<BuyingData, int> <>f__am$cache5;

	[Token(Token = "0x400073E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1F5A6C", Offset = "0x1F5A6C")]
	private static Func<CraftNode, string> <>f__am$cache6;

	[Token(Token = "0x600060A")]
	[Address(RVA = "0xC72F38", Offset = "0xC72F38", VA = "0xC72F38")]
	public JobGenerator(IEnumerable<CraftableObject> objects)
	{
	}

	[Token(Token = "0x600060B")]
	[Address(RVA = "0xC738F8", Offset = "0xC738F8", VA = "0xC738F8")]
	private void CleanInput()
	{
	}

	[Token(Token = "0x600060C")]
	[Address(RVA = "0xC73A24", Offset = "0xC73A24", VA = "0xC73A24")]
	public void SetJobObjectiveValueTarget(int value)
	{
	}

	[Token(Token = "0x600060D")]
	[Address(RVA = "0xC73A2C", Offset = "0xC73A2C", VA = "0xC73A2C")]
	public void UpdateStoreState(IList<BuyingData> itemVendu, IList<BuyingData> itemAchete, IEnumerable<Job> CurrentJobs)
	{
	}

	[Token(Token = "0x600060E")]
	[Address(RVA = "0xC742AC", Offset = "0xC742AC", VA = "0xC742AC")]
	private Dictionary<string, int> ExtractValue(IEnumerable<BuyingData> buyableState, [Optional] MarcketType? type)
	{
		return null;
	}

	[Token(Token = "0x600060F")]
	[Address(RVA = "0xC74514", Offset = "0xC74514", VA = "0xC74514")]
	public Job GenerateNewJob(int bonusPercent = 0)
	{
		return null;
	}

	[Token(Token = "0x6000610")]
	[Address(RVA = "0xC74C80", Offset = "0xC74C80", VA = "0xC74C80")]
	private int CountForObject(int totalValue, int objectiveCount, int objectiveValue)
	{
		return default(int);
	}

	[Token(Token = "0x6000611")]
	[Address(RVA = "0xC74D80", Offset = "0xC74D80", VA = "0xC74D80")]
	private int CountForObject(int totalValue, int objectiveCount, int objectiveValue, ref int finalValue)
	{
		return default(int);
	}

	[Token(Token = "0x6000612")]
	[Address(RVA = "0xC74A18", Offset = "0xC74A18", VA = "0xC74A18")]
	private string GetQuestName()
	{
		return null;
	}

	[Token(Token = "0x6000613")]
	[Address(RVA = "0xC749A0", Offset = "0xC749A0", VA = "0xC749A0")]
	private static string[] GetRandom(int nb, IEnumerable<string> possibility)
	{
		return null;
	}

	[Token(Token = "0x6000614")]
	[Address(RVA = "0xC74F38", Offset = "0xC74F38", VA = "0xC74F38")]
	private static string[] GetRandom(int nb, IList<string> possibility)
	{
		return null;
	}

	[Token(Token = "0x6000615")]
	[Address(RVA = "0xC73244", Offset = "0xC73244", VA = "0xC73244")]
	private static CraftGraph CreateCraftGraph(IEnumerable<CraftStep> steps)
	{
		return null;
	}

	[Token(Token = "0x6000616")]
	[Address(RVA = "0xC73574", Offset = "0xC73574", VA = "0xC73574")]
	private static void MergeInternalNodes(CraftGraph steps)
	{
	}

	[Token(Token = "0x6000617")]
	[Address(RVA = "0xC75200", Offset = "0xC75200", VA = "0xC75200")]
	public static void WriteDotGraphCraftable(IEnumerable<CraftableObject> CraftableObjects, string filename)
	{
	}

	[Token(Token = "0x6000618")]
	[Address(RVA = "0xC75204", Offset = "0xC75204", VA = "0xC75204")]
	public static string[] DotGraph(IEnumerable<string> arcs)
	{
		return null;
	}

	[Token(Token = "0x6000619")]
	[Address(RVA = "0xC753C8", Offset = "0xC753C8", VA = "0xC753C8")]
	private static IEnumerable<RawCraftStep> CreateRawCraftStep(CraftableObject co)
	{
		return null;
	}

	[Token(Token = "0x600061A")]
	[Address(RVA = "0xC754D8", Offset = "0xC754D8", VA = "0xC754D8")]
	[DebuggerHidden]
	private static IEnumerable<CraftStep> ParseSteps(RawCraftStep rcs)
	{
		return null;
	}

	[Token(Token = "0x600061B")]
	[Address(RVA = "0xC75580", Offset = "0xC75580", VA = "0xC75580")]
	private static string ToDotEdge(CraftStep cs)
	{
		return null;
	}

	[Token(Token = "0x600061C")]
	[Address(RVA = "0xC75634", Offset = "0xC75634", VA = "0xC75634")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1F5A8C", Offset = "0x1F5A8C")]
	private static string <UpdateStoreState>m__0(BuyingData bd)
	{
		return null;
	}

	[Token(Token = "0x600061D")]
	[Address(RVA = "0xC75654", Offset = "0xC75654", VA = "0xC75654")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1F5A9C", Offset = "0x1F5A9C")]
	private static bool <UpdateStoreState>m__1(BuyingData bd)
	{
		return default(bool);
	}

	[Token(Token = "0x600061E")]
	[Address(RVA = "0xC75674", Offset = "0xC75674", VA = "0xC75674")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1F5AAC", Offset = "0x1F5AAC")]
	private static bool <UpdateStoreState>m__2(KeyValuePair<string, bool> kv)
	{
		return default(bool);
	}

	[Token(Token = "0x600061F")]
	[Address(RVA = "0xC756E0", Offset = "0xC756E0", VA = "0xC756E0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1F5ABC", Offset = "0x1F5ABC")]
	private static string <UpdateStoreState>m__3(KeyValuePair<string, bool> kv)
	{
		return null;
	}

	[Token(Token = "0x6000620")]
	[Address(RVA = "0xC7574C", Offset = "0xC7574C", VA = "0xC7574C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1F5ACC", Offset = "0x1F5ACC")]
	private static string <ExtractValue>m__4(BuyingData bs)
	{
		return null;
	}

	[Token(Token = "0x6000621")]
	[Address(RVA = "0xC7576C", Offset = "0xC7576C", VA = "0xC7576C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1F5ADC", Offset = "0x1F5ADC")]
	private static int <ExtractValue>m__5(BuyingData bs)
	{
		return default(int);
	}

	[Token(Token = "0x6000622")]
	[Address(RVA = "0xC7578C", Offset = "0xC7578C", VA = "0xC7578C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1F5AEC", Offset = "0x1F5AEC")]
	private static string <MergeInternalNodes>m__6(CraftNode l)
	{
		return null;
	}
}
[Token(Token = "0x20000F6")]
public class JobReader : MonoBehaviour
{
	[Token(Token = "0x4000746")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public TextAsset[] OldRawTab;

	[Token(Token = "0x4000747")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public TextAsset[] RawTab;

	[Token(Token = "0x4000748")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	internal int ID;

	[Token(Token = "0x4000749")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	internal int tierTabStart;

	[Token(Token = "0x400074A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private string[] Tab;

	[Token(Token = "0x600062C")]
	[Address(RVA = "0xC77F04", Offset = "0xC77F04", VA = "0xC77F04")]
	public JobReader()
	{
	}

	[Token(Token = "0x600062D")]
	[Address(RVA = "0xC77F0C", Offset = "0xC77F0C", VA = "0xC77F0C")]
	public List<Job> LoadAllJobsTab(bool old = false)
	{
		return null;
	}

	[Token(Token = "0x600062E")]
	[Address(RVA = "0xC78754", Offset = "0xC78754", VA = "0xC78754")]
	public List<Job> LoadJobsFromID(int[] IDsToLoad, bool old = false)
	{
		return null;
	}

	[Token(Token = "0x600062F")]
	[Address(RVA = "0xC79024", Offset = "0xC79024", VA = "0xC79024")]
	public Tier[] LoadTierTab(bool old = false)
	{
		return null;
	}

	[Token(Token = "0x6000630")]
	[Address(RVA = "0xC7974C", Offset = "0xC7974C", VA = "0xC7974C")]
	public int GetMaxTier(int prisonID, bool old)
	{
		return default(int);
	}
}
[Token(Token = "0x20000F7")]
public class TraderManager : MonoBehaviour
{
	[Token(Token = "0x400074B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private GameObject mrTroc;

	[Token(Token = "0x400074C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private GameObject mrArcade;

	[Token(Token = "0x400074D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private DealerTradeScript[] lesDealers;

	[Token(Token = "0x400074E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Transform spawnPosition;

	[Token(Token = "0x400074F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private bool trigger;

	[Token(Token = "0x6000631")]
	[Address(RVA = "0xCBFE64", Offset = "0xCBFE64", VA = "0xCBFE64")]
	public TraderManager()
	{
	}

	[Token(Token = "0x6000632")]
	[Address(RVA = "0xCBFE6C", Offset = "0xCBFE6C", VA = "0xCBFE6C")]
	private void Start()
	{
	}
}
namespace Trebuchet
{
	[Token(Token = "0x20000F8")]
	public class JobHintManager : EventTrigger
	{
		[Token(Token = "0x4000750")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private bool isReward;

		[Token(Token = "0x4000751")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private JobWindow win;

		[Token(Token = "0x4000752")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private string textToDisplay;

		[Token(Token = "0x4000753")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private NVRHand hand;

		[Token(Token = "0x6000633")]
		[Address(RVA = "0xCC221C", Offset = "0xCC221C", VA = "0xCC221C")]
		public JobHintManager()
		{
		}

		[Token(Token = "0x6000634")]
		[Address(RVA = "0xCC2224", Offset = "0xCC2224", VA = "0xCC2224")]
		private void Start()
		{
		}

		[Token(Token = "0x6000635")]
		[Address(RVA = "0xCC2A70", Offset = "0xCC2A70", VA = "0xCC2A70", Slot = "21")]
		public override void OnPointerEnter(PointerEventData data)
		{
		}

		[Token(Token = "0x6000636")]
		[Address(RVA = "0xCC2BE0", Offset = "0xCC2BE0", VA = "0xCC2BE0", Slot = "22")]
		public override void OnPointerExit(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6000637")]
		[Address(RVA = "0xCC2CD0", Offset = "0xCC2CD0", VA = "0xCC2CD0")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000638")]
		[Address(RVA = "0xCC22EC", Offset = "0xCC22EC", VA = "0xCC22EC")]
		private void Refresh()
		{
		}

		[Token(Token = "0x6000639")]
		[Address(RVA = "0xCC2AA0", Offset = "0xCC2AA0", VA = "0xCC2AA0")]
		public void ShowHint(PointerEventData data)
		{
		}

		[Token(Token = "0x600063A")]
		[Address(RVA = "0xCC2C00", Offset = "0xCC2C00", VA = "0xCC2C00")]
		public void HideHint()
		{
		}
	}
	[Token(Token = "0x20000F9")]
	public class JobsPanel : SubMenu
	{
		[Token(Token = "0x4000754")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PlayerStuffContainer playerStuff;

		[Token(Token = "0x4000755")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public Scrollbar playerStuffScrollBar;

		[Token(Token = "0x4000756")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Scrollbar jobScrollBar;

		[Token(Token = "0x4000757")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float tweenDuration;

		[Token(Token = "0x600063B")]
		[Address(RVA = "0xCC2CD4", Offset = "0xCC2CD4", VA = "0xCC2CD4")]
		public JobsPanel()
		{
		}

		[Token(Token = "0x600063C")]
		[Address(RVA = "0xCC2CF0", Offset = "0xCC2CF0", VA = "0xCC2CF0", Slot = "5")]
		public override void SetActive(bool active)
		{
		}

		[Token(Token = "0x600063D")]
		[Address(RVA = "0xCC2E34", Offset = "0xCC2E34", VA = "0xCC2E34", Slot = "7")]
		public override void Execute(string action)
		{
		}
	}
	[Token(Token = "0x20000FA")]
	public class JobTag : MonoBehaviour
	{
		[Token(Token = "0x4000758")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		internal StateTag state;

		[Token(Token = "0x4000759")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Image objectSprite;

		[Token(Token = "0x400075A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private TextMeshProUGUI quantityTxt;

		[Token(Token = "0x400075B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private SubJob subjob;

		[Token(Token = "0x400075C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		internal string objectGiven;

		[Token(Token = "0x400075D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal int quantityGiven;

		[Token(Token = "0x400075E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private bool initialized;

		[Token(Token = "0x600063E")]
		[Address(RVA = "0xCC32AC", Offset = "0xCC32AC", VA = "0xCC32AC")]
		public JobTag()
		{
		}

		[Token(Token = "0x600063F")]
		[Address(RVA = "0xCC32B4", Offset = "0xCC32B4", VA = "0xCC32B4")]
		private void Init()
		{
		}

		[Token(Token = "0x6000640")]
		[Address(RVA = "0xCC33F8", Offset = "0xCC33F8", VA = "0xCC33F8")]
		public void SetTag(SubJob _subjob)
		{
		}

		[Token(Token = "0x6000641")]
		[Address(RVA = "0xCC3574", Offset = "0xCC3574", VA = "0xCC3574")]
		public void Refresh()
		{
		}
	}
	[Token(Token = "0x20000FB")]
	public class JobWindow : MonoBehaviour
	{
		[Token(Token = "0x400075F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private TraderMaster _trader;

		[Token(Token = "0x4000760")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Color normalColor;

		[Token(Token = "0x4000761")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Color finalJobColor;

		[Token(Token = "0x4000762")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private TextMeshProUGUI jobName;

		[Token(Token = "0x4000763")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		internal JobTag[] needs;

		[Token(Token = "0x4000764")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		internal RewardTag[] rewards;

		[Token(Token = "0x4000765")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		internal string jobDudeName;

		[Token(Token = "0x4000766")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Button globalState;

		[Token(Token = "0x4000767")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private StateTag globalStateTag;

		[Token(Token = "0x4000768")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Image[] backgrounds;

		[Token(Token = "0x4000769")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private Job job;

		[Token(Token = "0x400076A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private bool completed;

		[Token(Token = "0x400076B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private int windowID;

		[Token(Token = "0x400076C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private bool initialized;

		[Token(Token = "0x170000A7")]
		private TraderMaster trader
		{
			[Token(Token = "0x6000643")]
			[Address(RVA = "0xCC36A8", Offset = "0xCC36A8", VA = "0xCC36A8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000642")]
		[Address(RVA = "0xCC36A0", Offset = "0xCC36A0", VA = "0xCC36A0")]
		public JobWindow()
		{
		}

		[Token(Token = "0x6000644")]
		[Address(RVA = "0xCC3778", Offset = "0xCC3778", VA = "0xCC3778")]
		private void Init()
		{
		}

		[Token(Token = "0x6000645")]
		[Address(RVA = "0xCC3A98", Offset = "0xCC3A98", VA = "0xCC3A98")]
		public void SetJob(Job _job, int id)
		{
		}

		[Token(Token = "0x6000646")]
		[Address(RVA = "0xCC43A8", Offset = "0xCC43A8", VA = "0xCC43A8")]
		private void CompleteJob()
		{
		}

		[Token(Token = "0x6000647")]
		[Address(RVA = "0xCC4530", Offset = "0xCC4530", VA = "0xCC4530")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000648")]
		[Address(RVA = "0xCC45CC", Offset = "0xCC45CC", VA = "0xCC45CC")]
		public void OnPlayerStuffAddedHandler(BuyingData data, int amount)
		{
		}

		[Token(Token = "0x6000649")]
		[Address(RVA = "0xCC4534", Offset = "0xCC4534", VA = "0xCC4534")]
		public void Refresh()
		{
		}

		[Token(Token = "0x600064A")]
		[Address(RVA = "0xCC45D0", Offset = "0xCC45D0", VA = "0xCC45D0")]
		public void Refresh(BuyingData[] datas)
		{
		}
	}
	[Token(Token = "0x20000FC")]
	public class MarcketContainer : ObjectTagContainer
	{
		[Token(Token = "0x400076D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public DealerTradeScript tradeScript;

		[Token(Token = "0x600064B")]
		[Address(RVA = "0xCC49D0", Offset = "0xCC49D0", VA = "0xCC49D0")]
		public MarcketContainer()
		{
		}

		[Token(Token = "0x600064C")]
		[Address(RVA = "0xCC4A68", Offset = "0xCC4A68", VA = "0xCC4A68")]
		public void Refesh(bool refreshStock = true)
		{
		}

		[Token(Token = "0x600064D")]
		[Address(RVA = "0xCC4D28", Offset = "0xCC4D28", VA = "0xCC4D28", Slot = "6")]
		public override void AddData(BuyingData newData, int amountOverride)
		{
		}

		[Token(Token = "0x600064E")]
		[Address(RVA = "0xCC5160", Offset = "0xCC5160", VA = "0xCC5160")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600064F")]
		[Address(RVA = "0xCC5218", Offset = "0xCC5218", VA = "0xCC5218", Slot = "7")]
		public override void OnTagTrigger(ObjectTag tag)
		{
		}
	}
	[Token(Token = "0x20000FD")]
	public class ButtonAnimator : EventTrigger
	{
		[Token(Token = "0x400076E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private Tween tween;

		[Token(Token = "0x400076F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Button button;

		[Token(Token = "0x6000650")]
		[Address(RVA = "0xCC056C", Offset = "0xCC056C", VA = "0xCC056C")]
		public ButtonAnimator()
		{
		}

		[Token(Token = "0x6000651")]
		[Address(RVA = "0xCC0574", Offset = "0xCC0574", VA = "0xCC0574")]
		private void Start()
		{
		}

		[Token(Token = "0x6000652")]
		[Address(RVA = "0xCC05DC", Offset = "0xCC05DC", VA = "0xCC05DC", Slot = "21")]
		public override void OnPointerEnter(PointerEventData data)
		{
		}

		[Token(Token = "0x6000653")]
		[Address(RVA = "0xCC084C", Offset = "0xCC084C", VA = "0xCC084C", Slot = "27")]
		public override void OnPointerClick(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6000654")]
		[Address(RVA = "0xCC086C", Offset = "0xCC086C", VA = "0xCC086C")]
		private void PlayParticle()
		{
		}

		[Token(Token = "0x6000655")]
		[Address(RVA = "0xCC071C", Offset = "0xCC071C", VA = "0xCC071C")]
		private void Animation()
		{
		}

		[Token(Token = "0x6000656")]
		[Address(RVA = "0xCC0BB4", Offset = "0xCC0BB4", VA = "0xCC0BB4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1F5CEC", Offset = "0x1F5CEC")]
		private void <Animation>m__0()
		{
		}
	}
	[Token(Token = "0x20000FE")]
	public class ButtonSubscriber : MonoBehaviour
	{
		[Token(Token = "0x4000770")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private Menu manager;

		[Token(Token = "0x6000657")]
		[Address(RVA = "0xCC0C74", Offset = "0xCC0C74", VA = "0xCC0C74")]
		public ButtonSubscriber()
		{
		}

		[Token(Token = "0x6000658")]
		[Address(RVA = "0xCC0C7C", Offset = "0xCC0C7C", VA = "0xCC0C7C")]
		public void Initialize(Menu menu)
		{
		}

		[Token(Token = "0x6000659")]
		[Address(RVA = "0xCC0D5C", Offset = "0xCC0D5C", VA = "0xCC0D5C")]
		public void OnClicHandler()
		{
		}

		[Token(Token = "0x600065A")]
		[Address(RVA = "0xCC0E08", Offset = "0xCC0E08", VA = "0xCC0E08")]
		private void OnDestroy()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20000FF")]
	public class Menu
	{
		[Token(Token = "0x4000771")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public GameObject root;

		[Token(Token = "0x4000772")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		internal SubMenu[] submenus;

		[Token(Token = "0x4000773")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal SubMenu actualMenu;

		[Token(Token = "0x4000774")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		internal MenusMaster manager;

		[Token(Token = "0x600065B")]
		[Address(RVA = "0xCC5F20", Offset = "0xCC5F20", VA = "0xCC5F20")]
		public Menu()
		{
		}

		[Token(Token = "0x600065C")]
		[Address(RVA = "0xCC0DC8", Offset = "0xCC0DC8", VA = "0xCC0DC8")]
		public void OnTriggerActive(string arg)
		{
		}

		[Token(Token = "0x600065D")]
		[Address(RVA = "0xCC5F28", Offset = "0xCC5F28", VA = "0xCC5F28")]
		public void OnValueChanged(string arg, int value)
		{
		}
	}
	[Token(Token = "0x2000100")]
	public class MenusMaster : MonoBehaviour
	{
		[Token(Token = "0x200030D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1F5D0C", Offset = "0x1F5D0C")]
		private sealed class <ClearDebugDelayed>c__Iterator0 : IEnumerator, IDisposable, IEnumerator<object>
		{
			[Token(Token = "0x4001200")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			internal MenusMaster $this;

			[Token(Token = "0x4001201")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			internal object $current;

			[Token(Token = "0x4001202")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal bool $disposing;

			[Token(Token = "0x4001203")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			internal int $PC;

			[Token(Token = "0x1700027F")]
			private object System.Collections.Generic.IEnumerator<object>.Current
			{
				[Token(Token = "0x6001780")]
				[Address(RVA = "0xCC6A00", Offset = "0xCC6A00", VA = "0xCC6A00", Slot = "8")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000280")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001781")]
				[Address(RVA = "0xCC6A08", Offset = "0xCC6A08", VA = "0xCC6A08", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600177E")]
			[Address(RVA = "0xCC68C0", Offset = "0xCC68C0", VA = "0xCC68C0")]
			[DebuggerHidden]
			public <ClearDebugDelayed>c__Iterator0()
			{
			}

			[Token(Token = "0x600177F")]
			[Address(RVA = "0xCC68C8", Offset = "0xCC68C8", VA = "0xCC68C8", Slot = "5")]
			public bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001782")]
			[Address(RVA = "0xCC6A10", Offset = "0xCC6A10", VA = "0xCC6A10", Slot = "7")]
			[DebuggerHidden]
			public void Dispose()
			{
			}

			[Token(Token = "0x6001783")]
			[Address(RVA = "0xCC6A24", Offset = "0xCC6A24", VA = "0xCC6A24", Slot = "6")]
			[DebuggerHidden]
			public void Reset()
			{
			}
		}

		[Token(Token = "0x4000775")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public Menu[] menus;

		[Token(Token = "0x4000776")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public TextMeshProUGUI[] DebugTexts;

		[Token(Token = "0x600065E")]
		[Address(RVA = "0xCC5F7C", Offset = "0xCC5F7C", VA = "0xCC5F7C")]
		public MenusMaster()
		{
		}

		[Token(Token = "0x600065F")]
		[Address(RVA = "0xCC5F84", Offset = "0xCC5F84", VA = "0xCC5F84", Slot = "4")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x6000660")]
		[Address(RVA = "0xCC6274", Offset = "0xCC6274", VA = "0xCC6274", Slot = "5")]
		protected virtual void SetButton(Button button, Menu menu)
		{
		}

		[Token(Token = "0x6000661")]
		[Address(RVA = "0xCC6320", Offset = "0xCC6320", VA = "0xCC6320", Slot = "6")]
		public virtual void OnValueChanged(Menu menu, string dropdownName, int value)
		{
		}

		[Token(Token = "0x6000662")]
		[Address(RVA = "0xCC6324", Offset = "0xCC6324", VA = "0xCC6324", Slot = "7")]
		public virtual void OnTriggerActive(Menu menu, string buttonName)
		{
		}

		[Token(Token = "0x6000663")]
		[Address(RVA = "0xCC6600", Offset = "0xCC6600", VA = "0xCC6600", Slot = "8")]
		public virtual void Naviguate(string arg, Menu menu)
		{
		}

		[Token(Token = "0x6000664")]
		[Address(RVA = "0xCC6790", Offset = "0xCC6790", VA = "0xCC6790", Slot = "9")]
		public virtual void Action(string arg, Menu menu)
		{
		}

		[Token(Token = "0x6000665")]
		[Address(RVA = "0xCC6794", Offset = "0xCC6794", VA = "0xCC6794")]
		private void ShowDebug(string text, bool temporary = false)
		{
		}

		[Token(Token = "0x6000666")]
		[Address(RVA = "0xCC6840", Offset = "0xCC6840", VA = "0xCC6840")]
		[DebuggerHidden]
		private IEnumerator ClearDebugDelayed()
		{
			return null;
		}
	}
	[Token(Token = "0x2000101")]
	public class SubMenu : MonoBehaviour
	{
		[Token(Token = "0x4000777")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		internal Button[] buttons;

		[Token(Token = "0x4000778")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal MenusMaster manager;

		[Token(Token = "0x4000779")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		internal Menu menu;

		[Token(Token = "0x400077A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected string[] argTab;

		[Token(Token = "0x400077B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		protected bool[] oldButtonState;

		[Token(Token = "0x6000667")]
		[Address(RVA = "0xCC2CE8", Offset = "0xCC2CE8", VA = "0xCC2CE8")]
		public SubMenu()
		{
		}

		[Token(Token = "0x6000668")]
		[Address(RVA = "0xCCB7E4", Offset = "0xCCB7E4", VA = "0xCCB7E4", Slot = "4")]
		public virtual void Initialize(MenusMaster _manager, Menu _menu)
		{
		}

		[Token(Token = "0x6000669")]
		[Address(RVA = "0xCC2DFC", Offset = "0xCC2DFC", VA = "0xCC2DFC", Slot = "5")]
		public virtual void SetActive(bool active)
		{
		}

		[Token(Token = "0x600066A")]
		[Address(RVA = "0xCCB944", Offset = "0xCCB944", VA = "0xCCB944", Slot = "6")]
		public virtual void SetInteraction(bool wantInteraction)
		{
		}

		[Token(Token = "0x600066B")]
		[Address(RVA = "0xCC3150", Offset = "0xCC3150", VA = "0xCC3150", Slot = "7")]
		public virtual void Execute(string args)
		{
		}
	}
	[Token(Token = "0x2000102")]
	public class ObjectTag : MonoBehaviour
	{
		[Token(Token = "0x400077C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		internal ObjectTagContainer container;

		[Token(Token = "0x400077D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal BuyingData data;

		[Token(Token = "0x400077E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private Button button;

		[Token(Token = "0x400077F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Image objectSprite;

		[Token(Token = "0x4000780")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private GameObject valueObject;

		[Token(Token = "0x4000781")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private TextMeshProUGUI valueTxt;

		[Token(Token = "0x4000782")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private GameObject quantityObject;

		[Token(Token = "0x4000783")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private TextMeshProUGUI quantityTxt;

		[Token(Token = "0x4000784")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private GameObject lockTag;

		[Token(Token = "0x4000785")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private TextMeshProUGUI lockTagTxt;

		[Token(Token = "0x4000786")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private Image lockTagImage;

		[Token(Token = "0x4000787")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private GameObject variationObject;

		[Token(Token = "0x4000788")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private Animator variationAnim;

		[Token(Token = "0x4000789")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private GameObject SoldoutObject;

		[Token(Token = "0x400078A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private bool initialized;

		[Token(Token = "0x600066C")]
		[Address(RVA = "0xCC6BCC", Offset = "0xCC6BCC", VA = "0xCC6BCC")]
		public ObjectTag()
		{
		}

		[Token(Token = "0x600066D")]
		[Address(RVA = "0xCC6BD4", Offset = "0xCC6BD4", VA = "0xCC6BD4")]
		private void Init()
		{
		}

		[Token(Token = "0x600066E")]
		[Address(RVA = "0xCC6F48", Offset = "0xCC6F48", VA = "0xCC6F48")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600066F")]
		[Address(RVA = "0xCC7004", Offset = "0xCC7004", VA = "0xCC7004")]
		public void SetTag(BuyingData _data)
		{
		}

		[Token(Token = "0x6000670")]
		[Address(RVA = "0xCC4BAC", Offset = "0xCC4BAC", VA = "0xCC4BAC")]
		public void SyncWithDatabase(bool refreshStock = true)
		{
		}

		[Token(Token = "0x6000671")]
		[Address(RVA = "0xCC54D8", Offset = "0xCC54D8", VA = "0xCC54D8")]
		public void RefreshValue()
		{
		}

		[Token(Token = "0x6000672")]
		[Address(RVA = "0xCC6F58", Offset = "0xCC6F58", VA = "0xCC6F58")]
		private void UpdateVariation()
		{
		}

		[Token(Token = "0x6000673")]
		[Address(RVA = "0xCC7058", Offset = "0xCC7058", VA = "0xCC7058")]
		private int GetVariation()
		{
			return default(int);
		}

		[Token(Token = "0x6000674")]
		[Address(RVA = "0xCC71A8", Offset = "0xCC71A8", VA = "0xCC71A8")]
		public void OnClick()
		{
		}

		[Token(Token = "0x6000675")]
		[Address(RVA = "0xCC71E0", Offset = "0xCC71E0", VA = "0xCC71E0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1F5D6C", Offset = "0x1F5D6C")]
		private void <RefreshValue>m__0()
		{
		}
	}
	[Token(Token = "0x2000103")]
	public class ObjectTagContainer : ObjectTagReceiver
	{
		[Token(Token = "0x400078B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public ObjectTagReceiver target;

		[Token(Token = "0x400078C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Transform content;

		[Token(Token = "0x400078D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public GameObject objectTag;

		[Token(Token = "0x400078E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string eventToPlay;

		[Token(Token = "0x400078F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		internal bool allowLock;

		[Token(Token = "0x4000790")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal List<ObjectTag> tags;

		[Token(Token = "0x170000A8")]
		internal int totalValue
		{
			[Token(Token = "0x6000677")]
			[Address(RVA = "0xCC72A0", Offset = "0xCC72A0", VA = "0xCC72A0")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x6000676")]
		[Address(RVA = "0xCC49D4", Offset = "0xCC49D4", VA = "0xCC49D4")]
		public ObjectTagContainer()
		{
		}

		[Token(Token = "0x6000678")]
		[Address(RVA = "0xCC7414", Offset = "0xCC7414", VA = "0xCC7414", Slot = "5")]
		protected virtual void Start()
		{
		}

		[Token(Token = "0x6000679")]
		[Address(RVA = "0xCC7418", Offset = "0xCC7418", VA = "0xCC7418")]
		public BuyingData[] GetBuyingData()
		{
			return null;
		}

		[Token(Token = "0x600067A")]
		[Address(RVA = "0xCC75CC", Offset = "0xCC75CC", VA = "0xCC75CC")]
		public void AddData(BuyingData[] datas)
		{
		}

		[Token(Token = "0x600067B")]
		[Address(RVA = "0xCC764C", Offset = "0xCC764C", VA = "0xCC764C")]
		public void AddData(BuyingData newData)
		{
		}

		[Token(Token = "0x600067C")]
		[Address(RVA = "0xCC4DFC", Offset = "0xCC4DFC", VA = "0xCC4DFC", Slot = "6")]
		public virtual void AddData(BuyingData newData, int amountOverride)
		{
		}

		[Token(Token = "0x600067D")]
		[Address(RVA = "0xCC7688", Offset = "0xCC7688", VA = "0xCC7688")]
		public void Clear()
		{
		}

		[Token(Token = "0x600067E")]
		[Address(RVA = "0xCC7830", Offset = "0xCC7830", VA = "0xCC7830", Slot = "7")]
		public virtual void OnTagTrigger(ObjectTag tag)
		{
		}

		[Token(Token = "0x600067F")]
		[Address(RVA = "0xCC7A44", Offset = "0xCC7A44", VA = "0xCC7A44", Slot = "4")]
		public override void ReceiveTag(ObjectTag tagSent)
		{
		}
	}
	[Token(Token = "0x2000104")]
	public class ObjectTagHintManager : EventTrigger
	{
		[Token(Token = "0x4000791")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private int HintID;

		[Token(Token = "0x4000792")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private ObjectTag objTag;

		[Token(Token = "0x4000793")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private string textToDisplay;

		[Token(Token = "0x4000794")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private NVRHand hand;

		[Token(Token = "0x4000795")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private Button button;

		[Token(Token = "0x4000796")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Tweener tween;

		[Token(Token = "0x4000797")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private string type;

		[Token(Token = "0x6000680")]
		[Address(RVA = "0xCC7A80", Offset = "0xCC7A80", VA = "0xCC7A80")]
		public ObjectTagHintManager()
		{
		}

		[Token(Token = "0x6000681")]
		[Address(RVA = "0xCC7B20", Offset = "0xCC7B20", VA = "0xCC7B20")]
		private void Start()
		{
		}

		[Token(Token = "0x6000682")]
		[Address(RVA = "0xCC7BF8", Offset = "0xCC7BF8", VA = "0xCC7BF8")]
		private void RefreshHint()
		{
		}

		[Token(Token = "0x6000683")]
		[Address(RVA = "0xCC7F4C", Offset = "0xCC7F4C", VA = "0xCC7F4C", Slot = "21")]
		public override void OnPointerEnter(PointerEventData data)
		{
		}

		[Token(Token = "0x6000684")]
		[Address(RVA = "0xCC8364", Offset = "0xCC8364", VA = "0xCC8364", Slot = "27")]
		public override void OnPointerClick(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6000685")]
		[Address(RVA = "0xCC8384", Offset = "0xCC8384", VA = "0xCC8384")]
		private void PlayParticle()
		{
		}

		[Token(Token = "0x6000686")]
		[Address(RVA = "0xCC86CC", Offset = "0xCC86CC", VA = "0xCC86CC", Slot = "22")]
		public override void OnPointerExit(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6000687")]
		[Address(RVA = "0xCC87BC", Offset = "0xCC87BC", VA = "0xCC87BC")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000688")]
		[Address(RVA = "0xCC87C0", Offset = "0xCC87C0", VA = "0xCC87C0")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000689")]
		[Address(RVA = "0xCC809C", Offset = "0xCC809C", VA = "0xCC809C")]
		private void Animation()
		{
		}

		[Token(Token = "0x600068A")]
		[Address(RVA = "0xCC81E4", Offset = "0xCC81E4", VA = "0xCC81E4")]
		public void ShowHint(PointerEventData data)
		{
		}

		[Token(Token = "0x600068B")]
		[Address(RVA = "0xCC86EC", Offset = "0xCC86EC", VA = "0xCC86EC")]
		public void HideHint()
		{
		}
	}
	[Token(Token = "0x2000105")]
	public abstract class ObjectTagReceiver : MonoBehaviour
	{
		[Token(Token = "0x600068C")]
		[Address(RVA = "0xCB4F2C", Offset = "0xCB4F2C", VA = "0xCB4F2C")]
		protected ObjectTagReceiver()
		{
		}

		[Token(Token = "0x600068D")]
		public abstract void ReceiveTag(ObjectTag tag);
	}
	[Token(Token = "0x2000106")]
	public class PlayerStuffContainer : ObjectTagContainer
	{
		[Token(Token = "0x4000798")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private TraderMaster _trader;

		[Token(Token = "0x170000A9")]
		private TraderMaster trader
		{
			[Token(Token = "0x600068F")]
			[Address(RVA = "0xCC87C8", Offset = "0xCC87C8", VA = "0xCC87C8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000AA")]
		public int Skillpoint
		{
			[Token(Token = "0x6000690")]
			[Address(RVA = "0xCC8898", Offset = "0xCC8898", VA = "0xCC8898")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000691")]
			[Address(RVA = "0xCC8A7C", Offset = "0xCC8A7C", VA = "0xCC8A7C")]
			set
			{
			}
		}

		[Token(Token = "0x600068E")]
		[Address(RVA = "0xCC87C4", Offset = "0xCC87C4", VA = "0xCC87C4")]
		public PlayerStuffContainer()
		{
		}

		[Token(Token = "0x6000692")]
		[Address(RVA = "0xCC8DBC", Offset = "0xCC8DBC", VA = "0xCC8DBC", Slot = "5")]
		protected override void Start()
		{
		}

		[Token(Token = "0x6000693")]
		[Address(RVA = "0xCC8F04", Offset = "0xCC8F04", VA = "0xCC8F04")]
		private void OnPlayerStuffAddedHandler(BuyingData data, int amount)
		{
		}

		[Token(Token = "0x6000694")]
		[Address(RVA = "0xCC8F1C", Offset = "0xCC8F1C", VA = "0xCC8F1C", Slot = "7")]
		public override void OnTagTrigger(ObjectTag tag)
		{
		}

		[Token(Token = "0x6000695")]
		[Address(RVA = "0xCC919C", Offset = "0xCC919C", VA = "0xCC919C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000696")]
		[Address(RVA = "0xCC91A8", Offset = "0xCC91A8", VA = "0xCC91A8")]
		public void PullPlayerStuff()
		{
		}

		[Token(Token = "0x6000697")]
		[Address(RVA = "0xCC9318", Offset = "0xCC9318", VA = "0xCC9318")]
		public void ReturnToPlayer()
		{
		}

		[Token(Token = "0x6000698")]
		[Address(RVA = "0xCC968C", Offset = "0xCC968C", VA = "0xCC968C")]
		public void ClearPlayerStuff()
		{
		}

		[Token(Token = "0x6000699")]
		[Address(RVA = "0xCC9720", Offset = "0xCC9720", VA = "0xCC9720")]
		public void ClearPlayerStuff(Predicate<BuyingData> ShouldDeleteData)
		{
		}
	}
	[Token(Token = "0x2000107")]
	public class RewardTag : MonoBehaviour
	{
		[Token(Token = "0x4000799")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private Image objectSprite;

		[Token(Token = "0x400079A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private TextMeshProUGUI quantityTxt;

		[Token(Token = "0x400079B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private SubJob subjob;

		[Token(Token = "0x400079C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal string objectGiven;

		[Token(Token = "0x400079D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		internal int quantityGiven;

		[Token(Token = "0x400079E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private bool initialized;

		[Token(Token = "0x600069A")]
		[Address(RVA = "0xCC97BC", Offset = "0xCC97BC", VA = "0xCC97BC")]
		public RewardTag()
		{
		}

		[Token(Token = "0x600069B")]
		[Address(RVA = "0xCC97C4", Offset = "0xCC97C4", VA = "0xCC97C4")]
		private void Init()
		{
		}

		[Token(Token = "0x600069C")]
		[Address(RVA = "0xCC4244", Offset = "0xCC4244", VA = "0xCC4244")]
		public void SetTag(SubJob _subjob)
		{
		}
	}
	[Token(Token = "0x2000108")]
	public class StateTag : MonoBehaviour
	{
		[Token(Token = "0x400079F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public bool value;

		[Token(Token = "0x40007A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Color positiveColor;

		[Token(Token = "0x40007A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Sprite positiveImg;

		[Token(Token = "0x40007A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public Color negativeColor;

		[Token(Token = "0x40007A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public Sprite negativeImg;

		[Token(Token = "0x40007A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Image colorPiece;

		[Token(Token = "0x40007A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private Image stateImg;

		[Token(Token = "0x40007A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool initialized;

		[Token(Token = "0x600069D")]
		[Address(RVA = "0xCCB65C", Offset = "0xCCB65C", VA = "0xCCB65C")]
		public StateTag()
		{
		}

		[Token(Token = "0x600069E")]
		[Address(RVA = "0xCCB6BC", Offset = "0xCCB6BC", VA = "0xCCB6BC")]
		private void Initialize()
		{
		}

		[Token(Token = "0x600069F")]
		[Address(RVA = "0xCC35D4", Offset = "0xCC35D4", VA = "0xCC35D4")]
		public void SetState(bool newState)
		{
		}
	}
	[Token(Token = "0x2000109")]
	public class TierWrapper : MonoBehaviour
	{
		[Token(Token = "0x40007A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public GameObject[] tierTag;

		[Token(Token = "0x40007A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public GameObject superTracker;

		[Token(Token = "0x40007A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public TextMeshProUGUI text;

		[Token(Token = "0x60006A0")]
		[Address(RVA = "0xCCBA90", Offset = "0xCCBA90", VA = "0xCCBA90")]
		public TierWrapper()
		{
		}

		[Token(Token = "0x60006A1")]
		[Address(RVA = "0xCCBA98", Offset = "0xCCBA98", VA = "0xCCBA98")]
		private void Start()
		{
		}

		[Token(Token = "0x60006A2")]
		[Address(RVA = "0xCCBBD8", Offset = "0xCCBBD8", VA = "0xCCBBD8")]
		public void SetTier(int maxTier)
		{
		}

		[Token(Token = "0x60006A3")]
		[Address(RVA = "0xCCBCE0", Offset = "0xCCBCE0", VA = "0xCCBCE0")]
		public void UnlockTier(int tier)
		{
		}
	}
	[Token(Token = "0x200010A")]
	public class TradePanel : SubMenu
	{
		[Token(Token = "0x40007AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Scrollbar playerStuffScrollBar;

		[Token(Token = "0x40007AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public Scrollbar marcketScrollBar;

		[Token(Token = "0x40007AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Scrollbar basketScrollBar;

		[Token(Token = "0x40007AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float tweenDuration;

		[Token(Token = "0x40007AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1F5D7C", Offset = "0x1F5D7C")]
		private static Func<TextMeshProUGUI, bool> <>f__am$cache0;

		[Token(Token = "0x40007AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1F5D8C", Offset = "0x1F5D8C")]
		private static Func<TextMeshProUGUI, Transform> <>f__am$cache1;

		[Token(Token = "0x40007B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1F5D9C", Offset = "0x1F5D9C")]
		private static Func<Button, Transform> <>f__am$cache2;

		[Token(Token = "0x60006A4")]
		[Address(RVA = "0xCCBED8", Offset = "0xCCBED8", VA = "0xCCBED8")]
		public TradePanel()
		{
		}

		[Token(Token = "0x60006A5")]
		[Address(RVA = "0xCCBEEC", Offset = "0xCCBEEC", VA = "0xCCBEEC", Slot = "5")]
		public override void SetActive(bool active)
		{
		}

		[Token(Token = "0x60006A6")]
		[Address(RVA = "0xCCBF18", Offset = "0xCCBF18", VA = "0xCCBF18", Slot = "7")]
		public override void Execute(string args)
		{
		}

		[Token(Token = "0x60006A7")]
		[Address(RVA = "0xCCC298", Offset = "0xCCC298", VA = "0xCCC298")]
		private List<float> ComputeStopper(Scrollbar bar)
		{
			return null;
		}

		[Token(Token = "0x60006A8")]
		[Address(RVA = "0xCCC724", Offset = "0xCCC724", VA = "0xCCC724")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1F5DAC", Offset = "0x1F5DAC")]
		private static bool <ComputeStopper>m__0(TextMeshProUGUI t)
		{
			return default(bool);
		}

		[Token(Token = "0x60006A9")]
		[Address(RVA = "0xCCC7D8", Offset = "0xCCC7D8", VA = "0xCCC7D8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1F5DBC", Offset = "0x1F5DBC")]
		private static Transform <ComputeStopper>m__1(TextMeshProUGUI b)
		{
			return null;
		}

		[Token(Token = "0x60006AA")]
		[Address(RVA = "0xCCC800", Offset = "0xCCC800", VA = "0xCCC800")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1F5DCC", Offset = "0x1F5DCC")]
		private static Transform <ComputeStopper>m__2(Button b)
		{
			return null;
		}
	}
	[Token(Token = "0x200010B")]
	public class TraderMaster : MenusMaster
	{
		[Token(Token = "0x40007B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static TraderMaster Instance;

		[Token(Token = "0x40007B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public Action<BuyingData, int> OnPlayerStuffAdded;

		[Token(Token = "0x40007B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Image background;

		[Token(Token = "0x40007B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Animator boxAnim;

		[Token(Token = "0x40007B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int colorIndex;

		[Token(Token = "0x40007B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		internal List<BuyingData> playerStuff;

		[Token(Token = "0x40007B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		internal DealerTradeScript tradeScript;

		[Token(Token = "0x40007B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		internal DealerJobScript jobScript;

		[Token(Token = "0x40007B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private GraphicRaycaster raycaster;

		[Token(Token = "0x40007BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private int jobsDoneInOneDay;

		[Token(Token = "0x40007BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Dude[] dudes;

		[Token(Token = "0x60006AB")]
		[Address(RVA = "0xCCC828", Offset = "0xCCC828", VA = "0xCCC828")]
		public TraderMaster()
		{
		}

		[Token(Token = "0x60006AC")]
		[Address(RVA = "0xCCC8B4", Offset = "0xCCC8B4", VA = "0xCCC8B4", Slot = "4")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x60006AD")]
		[Address(RVA = "0xCCC8B8", Offset = "0xCCC8B8", VA = "0xCCC8B8")]
		public void Initialize()
		{
		}

		[Token(Token = "0x60006AE")]
		[Address(RVA = "0xCCCA8C", Offset = "0xCCCA8C", VA = "0xCCCA8C")]
		public void AddPlayerStuff(BuyingData[] datas)
		{
		}

		[Token(Token = "0x60006AF")]
		[Address(RVA = "0xCCCB0C", Offset = "0xCCCB0C", VA = "0xCCCB0C")]
		public void AddPlayerStuff(BuyingData newData)
		{
		}

		[Token(Token = "0x60006B0")]
		[Address(RVA = "0xCCCB48", Offset = "0xCCCB48", VA = "0xCCCB48", Slot = "10")]
		public virtual void AddPlayerStuff(BuyingData newData, int amount)
		{
		}

		[Token(Token = "0x60006B1")]
		[Address(RVA = "0xCCCE8C", Offset = "0xCCCE8C", VA = "0xCCCE8C")]
		public void JobDone()
		{
		}

		[Token(Token = "0x60006B2")]
		[Address(RVA = "0xCCCE9C", Offset = "0xCCCE9C", VA = "0xCCCE9C", Slot = "5")]
		protected override void SetButton(Button button, Menu menu)
		{
		}

		[Token(Token = "0x60006B3")]
		[Address(RVA = "0xCCCF38", Offset = "0xCCCF38", VA = "0xCCCF38", Slot = "8")]
		public override void Naviguate(string arg, Menu menu)
		{
		}

		[Token(Token = "0x60006B4")]
		[Address(RVA = "0xCCD1BC", Offset = "0xCCD1BC", VA = "0xCCD1BC", Slot = "9")]
		public override void Action(string arg, Menu menu)
		{
		}

		[Token(Token = "0x60006B5")]
		[Address(RVA = "0xCCD65C", Offset = "0xCCD65C", VA = "0xCCD65C")]
		public void DealOpen()
		{
		}

		[Token(Token = "0x60006B6")]
		[Address(RVA = "0xCCD8AC", Offset = "0xCCD8AC", VA = "0xCCD8AC")]
		private void AchievementJobsDoneInOneDay()
		{
		}

		[Token(Token = "0x60006B7")]
		[Address(RVA = "0xCCDA0C", Offset = "0xCCDA0C", VA = "0xCCDA0C")]
		private void ReveillerDudes()
		{
		}

		[Token(Token = "0x60006B8")]
		[Address(RVA = "0xCCDB8C", Offset = "0xCCDB8C", VA = "0xCCDB8C")]
		public void EndPrisonDealClosed()
		{
		}

		[Token(Token = "0x60006B9")]
		[Address(RVA = "0xCCD2E8", Offset = "0xCCD2E8", VA = "0xCCD2E8")]
		public void DealClosed()
		{
		}
	}
}
[Token(Token = "0x200010C")]
public class DetecterCalibration : MonoBehaviour
{
	[Token(Token = "0x200030E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1F5DEC", Offset = "0x1F5DEC")]
	private sealed class <MisesAJour>c__Iterator0 : IEnumerator, IDisposable, IEnumerator<object>
	{
		[Token(Token = "0x4001204")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal OVRPlugin.BoundaryGeometry <limites>__0;

		[Token(Token = "0x4001205")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		internal int <boundaryLenght>__0;

		[Token(Token = "0x4001206")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal int <index>__1;

		[Token(Token = "0x4001207")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		internal OVRPlugin.BoundaryGeometry <nouvellesLimites>__2;

		[Token(Token = "0x4001208")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		internal DetecterCalibration $this;

		[Token(Token = "0x4001209")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		internal object $current;

		[Token(Token = "0x400120A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		internal bool $disposing;

		[Token(Token = "0x400120B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		internal int $PC;

		[Token(Token = "0x17000281")]
		private object System.Collections.Generic.IEnumerator<object>.Current
		{
			[Token(Token = "0x6001786")]
			[Address(RVA = "0xC50BCC", Offset = "0xC50BCC", VA = "0xC50BCC", Slot = "8")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000282")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001787")]
			[Address(RVA = "0xC50BD4", Offset = "0xC50BD4", VA = "0xC50BD4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001784")]
		[Address(RVA = "0xC4F66C", Offset = "0xC4F66C", VA = "0xC4F66C")]
		[DebuggerHidden]
		public <MisesAJour>c__Iterator0()
		{
		}

		[Token(Token = "0x6001785")]
		[Address(RVA = "0xC500FC", Offset = "0xC500FC", VA = "0xC500FC", Slot = "5")]
		public bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001788")]
		[Address(RVA = "0xC50BDC", Offset = "0xC50BDC", VA = "0xC50BDC", Slot = "7")]
		[DebuggerHidden]
		public void Dispose()
		{
		}

		[Token(Token = "0x6001789")]
		[Address(RVA = "0xC50BF0", Offset = "0xC50BF0", VA = "0xC50BF0", Slot = "6")]
		[DebuggerHidden]
		public void Reset()
		{
		}
	}

	[Token(Token = "0x40007BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private NVRPlayer _player;

	[Token(Token = "0x60006BA")]
	[Address(RVA = "0xC4F544", Offset = "0xC4F544", VA = "0xC4F544")]
	public DetecterCalibration()
	{
	}

	[Token(Token = "0x60006BB")]
	[Address(RVA = "0xC4F54C", Offset = "0xC4F54C", VA = "0xC4F54C")]
	public void VR_Activee()
	{
	}

	[Token(Token = "0x60006BC")]
	[Address(RVA = "0xC4F5EC", Offset = "0xC4F5EC", VA = "0xC4F5EC")]
	[DebuggerHidden]
	private IEnumerator MisesAJour()
	{
		return null;
	}

	[Token(Token = "0x60006BD")]
	[Address(RVA = "0xC4F674", Offset = "0xC4F674", VA = "0xC4F674")]
	private void ReloadMainMenu()
	{
	}

	[Token(Token = "0x60006BE")]
	[Address(RVA = "0xC5001C", Offset = "0xC5001C", VA = "0xC5001C")]
	private bool Tester(OVRPlugin.BoundaryGeometry a, OVRPlugin.BoundaryGeometry b)
	{
		return default(bool);
	}
}
[Token(Token = "0x200010D")]
public class DetectableObject : MonoBehaviour
{
	[Token(Token = "0x40007BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	[HideInInspector]
	public Collider Hideout;

	[Token(Token = "0x40007BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private Collider col;

	[Token(Token = "0x40007BF")]
	private const string HideoutTag = "Hideout";

	[Token(Token = "0x170000AB")]
	[HideInInspector]
	public bool isHidden
	{
		[Token(Token = "0x60006C0")]
		[Address(RVA = "0xC4EF28", Offset = "0xC4EF28", VA = "0xC4EF28")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x60006BF")]
	[Address(RVA = "0xC4EF20", Offset = "0xC4EF20", VA = "0xC4EF20")]
	public DetectableObject()
	{
	}

	[Token(Token = "0x60006C1")]
	[Address(RVA = "0xC4F27C", Offset = "0xC4F27C", VA = "0xC4F27C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60006C2")]
	[Address(RVA = "0xC4F2B8", Offset = "0xC4F2B8", VA = "0xC4F2B8")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60006C3")]
	[Address(RVA = "0xC4F2F4", Offset = "0xC4F2F4", VA = "0xC4F2F4")]
	private void Start()
	{
	}

	[Token(Token = "0x60006C4")]
	[Address(RVA = "0xC4F3C0", Offset = "0xC4F3C0", VA = "0xC4F3C0")]
	private void OnTriggerStay(Collider other)
	{
	}

	[Token(Token = "0x60006C5")]
	[Address(RVA = "0xC4F480", Offset = "0xC4F480", VA = "0xC4F480")]
	private void OnTriggerExit(Collider other)
	{
	}
}
[Token(Token = "0x200010E")]
public class Hideout : MonoBehaviour
{
	[Token(Token = "0x40007C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	[HideInInspector]
	public bool isHidden;

	[Token(Token = "0x40007C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD")]
	[HideInInspector]
	public bool halfHidden1;

	[Token(Token = "0x40007C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE")]
	[HideInInspector]
	public bool halfHidden2;

	[Token(Token = "0x60006C6")]
	[Address(RVA = "0xC6AB54", Offset = "0xC6AB54", VA = "0xC6AB54")]
	public Hideout()
	{
	}

	[Token(Token = "0x60006C7")]
	[Address(RVA = "0xC6AB5C", Offset = "0xC6AB5C", VA = "0xC6AB5C")]
	private void Update()
	{
	}

	[Token(Token = "0x60006C8")]
	[Address(RVA = "0xC6AB84", Offset = "0xC6AB84", VA = "0xC6AB84")]
	private void OnTriggerStay(Collider col)
	{
	}

	[Token(Token = "0x60006C9")]
	[Address(RVA = "0xC6ACF4", Offset = "0xC6ACF4", VA = "0xC6ACF4")]
	private void OnTriggerExit()
	{
	}
}
[Token(Token = "0x200010F")]
public class DrawCollider : MonoBehaviour
{
	[Token(Token = "0x40007C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public bool drawChildren;

	[Token(Token = "0x40007C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD")]
	public bool solid;

	[Token(Token = "0x40007C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE")]
	public bool wires;

	[Token(Token = "0x40007C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Color colorActive;

	[Token(Token = "0x40007C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool drawInactive;

	[Token(Token = "0x40007C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Color colorInactive;

	[Token(Token = "0x60006CA")]
	[Address(RVA = "0xC50C74", Offset = "0xC50C74", VA = "0xC50C74")]
	public DrawCollider()
	{
	}

	[Token(Token = "0x60006CB")]
	[Address(RVA = "0xC50D24", Offset = "0xC50D24", VA = "0xC50D24")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x60006CC")]
	[Address(RVA = "0xC50D28", Offset = "0xC50D28", VA = "0xC50D28")]
	private void Draw()
	{
	}

	[Token(Token = "0x60006CD")]
	[Address(RVA = "0xC5101C", Offset = "0xC5101C", VA = "0xC5101C")]
	private void DrawCube(BoxCollider collider)
	{
	}

	[Token(Token = "0x60006CE")]
	[Address(RVA = "0xC51390", Offset = "0xC51390", VA = "0xC51390")]
	private void DrawSphere(SphereCollider collider)
	{
	}

	[Token(Token = "0x60006CF")]
	[Address(RVA = "0xC516D8", Offset = "0xC516D8", VA = "0xC516D8")]
	private void DrawCapsule(CapsuleCollider collider)
	{
	}
}
[Token(Token = "0x2000110")]
public class DudeCell : MonoBehaviour
{
	[Token(Token = "0x40007C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Dude occupant;

	[Token(Token = "0x60006D0")]
	[Address(RVA = "0xC52C84", Offset = "0xC52C84", VA = "0xC52C84")]
	public DudeCell()
	{
	}
}
[Token(Token = "0x2000111")]
public class EndGameManager : MonoBehaviour
{
	[Token(Token = "0x60006D1")]
	[Address(RVA = "0xC52CC4", Offset = "0xC52CC4", VA = "0xC52CC4")]
	public EndGameManager()
	{
	}

	[Token(Token = "0x60006D2")]
	[Address(RVA = "0xC52CCC", Offset = "0xC52CCC", VA = "0xC52CCC")]
	private void Awake()
	{
	}

	[Token(Token = "0x60006D3")]
	[Address(RVA = "0xC534C0", Offset = "0xC534C0", VA = "0xC534C0")]
	private void OnDestroy()
	{
	}
}
[Token(Token = "0x2000112")]
public class GeneriqueManager : MonoBehaviour
{
	[Token(Token = "0x200030F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1F5EAC", Offset = "0x1F5EAC")]
	private sealed class <GoToMenu>c__Iterator0 : IEnumerator, IDisposable, IEnumerator<object>
	{
		[Token(Token = "0x400120C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal GeneriqueManager $this;

		[Token(Token = "0x400120D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		internal object $current;

		[Token(Token = "0x400120E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal bool $disposing;

		[Token(Token = "0x400120F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		internal int $PC;

		[Token(Token = "0x17000283")]
		private object System.Collections.Generic.IEnumerator<object>.Current
		{
			[Token(Token = "0x600178C")]
			[Address(RVA = "0xC6665C", Offset = "0xC6665C", VA = "0xC6665C", Slot = "8")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000284")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600178D")]
			[Address(RVA = "0xC66664", Offset = "0xC66664", VA = "0xC66664", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600178A")]
		[Address(RVA = "0xC664C0", Offset = "0xC664C0", VA = "0xC664C0")]
		[DebuggerHidden]
		public <GoToMenu>c__Iterator0()
		{
		}

		[Token(Token = "0x600178B")]
		[Address(RVA = "0xC664C8", Offset = "0xC664C8", VA = "0xC664C8", Slot = "5")]
		public bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600178E")]
		[Address(RVA = "0xC6666C", Offset = "0xC6666C", VA = "0xC6666C", Slot = "7")]
		[DebuggerHidden]
		public void Dispose()
		{
		}

		[Token(Token = "0x600178F")]
		[Address(RVA = "0xC66680", Offset = "0xC66680", VA = "0xC66680", Slot = "6")]
		[DebuggerHidden]
		public void Reset()
		{
		}
	}

	[Token(Token = "0x40007CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public float timePerSlide;

	[Token(Token = "0x40007CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int slideNumber;

	[Token(Token = "0x40007CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private TextMeshProUGUI _text;

	[Token(Token = "0x40007CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float _timer;

	[Token(Token = "0x40007CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private int _actualSlide;

	[Token(Token = "0x40007CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool ended;

	[Token(Token = "0x60006D4")]
	[Address(RVA = "0xC6614C", Offset = "0xC6614C", VA = "0xC6614C")]
	public GeneriqueManager()
	{
	}

	[Token(Token = "0x60006D5")]
	[Address(RVA = "0xC66154", Offset = "0xC66154", VA = "0xC66154")]
	private void Start()
	{
	}

	[Token(Token = "0x60006D6")]
	[Address(RVA = "0xC662C8", Offset = "0xC662C8", VA = "0xC662C8")]
	private void Update()
	{
	}

	[Token(Token = "0x60006D7")]
	[Address(RVA = "0xC66440", Offset = "0xC66440", VA = "0xC66440")]
	[DebuggerHidden]
	private IEnumerator GoToMenu()
	{
		return null;
	}
}
[Token(Token = "0x2000113")]
public class GoldenBobbySpawner : MonoBehaviour
{
	[Token(Token = "0x40007D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public GameObject bobbyPrefab;

	[Token(Token = "0x40007D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public GameObject trackedBobby;

	[Token(Token = "0x40007D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public ParticleSystem particle;

	[Token(Token = "0x40007D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Vector3 _baseLocalPosition;

	[Token(Token = "0x40007D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Quaternion _baseRotation;

	[Token(Token = "0x40007D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public List<GameObject> trackedBobbys;

	[Token(Token = "0x40007D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public int nombreMax;

	[Token(Token = "0x60006D8")]
	[Address(RVA = "0xC68EE0", Offset = "0xC68EE0", VA = "0xC68EE0")]
	public GoldenBobbySpawner()
	{
	}

	[Token(Token = "0x60006D9")]
	[Address(RVA = "0xC68F74", Offset = "0xC68F74", VA = "0xC68F74")]
	private void Start()
	{
	}

	[Token(Token = "0x60006DA")]
	[Address(RVA = "0xC6908C", Offset = "0xC6908C", VA = "0xC6908C")]
	private void Update()
	{
	}
}
[Serializable]
[Token(Token = "0x2000114")]
public class staticDude
{
	[Token(Token = "0x40007D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public Animator animator;

	[Token(Token = "0x40007D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public string trigger;

	[Token(Token = "0x40007D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public bool isRandom;

	[Token(Token = "0x60006DB")]
	[Address(RVA = "0xCB87E4", Offset = "0xCB87E4", VA = "0xCB87E4")]
	public staticDude()
	{
	}
}
[Token(Token = "0x2000115")]
public class StaticDudeManager : MonoBehaviour
{
	[Token(Token = "0x40007DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public staticDude[] staticDudes;

	[Token(Token = "0x60006DC")]
	[Address(RVA = "0xCB87EC", Offset = "0xCB87EC", VA = "0xCB87EC")]
	public StaticDudeManager()
	{
	}

	[Token(Token = "0x60006DD")]
	[Address(RVA = "0xCB87F4", Offset = "0xCB87F4", VA = "0xCB87F4")]
	private void Start()
	{
	}
}
[Token(Token = "0x2000116")]
public class Eye : MonoBehaviour
{
	[Token(Token = "0x60006DE")]
	[Address(RVA = "0xC53540", Offset = "0xC53540", VA = "0xC53540")]
	public Eye()
	{
	}

	[Token(Token = "0x60006DF")]
	[Address(RVA = "0xC53548", Offset = "0xC53548", VA = "0xC53548")]
	private void Start()
	{
	}

	[Token(Token = "0x60006E0")]
	[Address(RVA = "0xC5354C", Offset = "0xC5354C", VA = "0xC5354C")]
	private void Update()
	{
	}
}
[Token(Token = "0x2000117")]
public class FogManager : MonoBehaviour
{
	[Token(Token = "0x40007DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static FogManager Instance;

	[Token(Token = "0x40007DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private GameObject player;

	[Token(Token = "0x40007DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private Camera camera;

	[Token(Token = "0x40007DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private Color background;

	[Token(Token = "0x170000AC")]
	public static bool Fog
	{
		[Token(Token = "0x60006E2")]
		[Address(RVA = "0xC57484", Offset = "0xC57484", VA = "0xC57484")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60006E3")]
		[Address(RVA = "0xC5305C", Offset = "0xC5305C", VA = "0xC5305C")]
		set
		{
		}
	}

	[Token(Token = "0x60006E1")]
	[Address(RVA = "0xC5747C", Offset = "0xC5747C", VA = "0xC5747C")]
	public FogManager()
	{
	}

	[Token(Token = "0x60006E4")]
	[Address(RVA = "0xC57490", Offset = "0xC57490", VA = "0xC57490")]
	private void SetFog(bool newValue)
	{
	}

	[Token(Token = "0x60006E5")]
	[Address(RVA = "0xC57510", Offset = "0xC57510", VA = "0xC57510")]
	private void Update()
	{
	}

	[Token(Token = "0x60006E6")]
	[Address(RVA = "0xC575A4", Offset = "0xC575A4", VA = "0xC575A4")]
	private void Awake()
	{
	}
}
[Token(Token = "0x2000118")]
public enum lesMois
{
	[Token(Token = "0x40007E0")]
	Winter = 1,
	[Token(Token = "0x40007E1")]
	Spring,
	[Token(Token = "0x40007E2")]
	Summer,
	[Token(Token = "0x40007E3")]
	Fall
}
[Token(Token = "0x2000119")]
public enum lesJours
{
	[Token(Token = "0x40007E5")]
	Monday = 1,
	[Token(Token = "0x40007E6")]
	Tuesday,
	[Token(Token = "0x40007E7")]
	Wednesday,
	[Token(Token = "0x40007E8")]
	Thursday,
	[Token(Token = "0x40007E9")]
	Friday,
	[Token(Token = "0x40007EA")]
	Saturday,
	[Token(Token = "0x40007EB")]
	Sunday
}
[Serializable]
[Token(Token = "0x200011A")]
public class DayNightShaderValue
{
	[Token(Token = "0x40007EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public Color DayFilter;

	[Token(Token = "0x40007ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float DayFilterIntensity;

	[Token(Token = "0x40007EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Color NightFilter;

	[Token(Token = "0x40007EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float NightFilterIntensity;

	[Token(Token = "0x40007F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Color AlarmFilter;

	[Token(Token = "0x40007F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float AlarmFilterIntensity;

	[Token(Token = "0x40007F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float DayExposure;

	[Token(Token = "0x40007F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float NightExposure;

	[Token(Token = "0x60006E7")]
	[Address(RVA = "0xCFC658", Offset = "0xCFC658", VA = "0xCFC658")]
	public DayNightShaderValue()
	{
	}
}
[Serializable]
[Token(Token = "0x200011B")]
public class BaseShaderValue
{
	[Token(Token = "0x40007F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float Saturation;

	[Token(Token = "0x40007F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public AnimationCurve Red;

	[Token(Token = "0x40007F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public AnimationCurve Green;

	[Token(Token = "0x40007F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public AnimationCurve Blur;

	[Token(Token = "0x40007F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AnimationCurve Combined;

	[Token(Token = "0x40007F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Color background;

	[Token(Token = "0x60006E8")]
	[Address(RVA = "0xCE6C40", Offset = "0xCE6C40", VA = "0xCE6C40")]
	public BaseShaderValue()
	{
	}
}
[Token(Token = "0x200011C")]
public enum GameMode
{
	[Token(Token = "0x40007FB")]
	Campaign,
	[Token(Token = "0x40007FC")]
	Arcade,
	[Token(Token = "0x40007FD")]
	Sandbox
}
[Token(Token = "0x200011D")]
public class GameSystemScript : MonoBehaviour
{
	[Token(Token = "0x2000310")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1F62AC", Offset = "0x1F62AC")]
	private sealed class <LateStart>c__Iterator0 : IEnumerator, IDisposable, IEnumerator<object>
	{
		[Token(Token = "0x4001210")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal GameSystemScript $this;

		[Token(Token = "0x4001211")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		internal object $current;

		[Token(Token = "0x4001212")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal bool $disposing;

		[Token(Token = "0x4001213")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		internal int $PC;

		[Token(Token = "0x17000285")]
		private object System.Collections.Generic.IEnumerator<object>.Current
		{
			[Token(Token = "0x6001792")]
			[Address(RVA = "0xC5EC4C", Offset = "0xC5EC4C", VA = "0xC5EC4C", Slot = "8")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000286")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001793")]
			[Address(RVA = "0xC5EC54", Offset = "0xC5EC54", VA = "0xC5EC54", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001790")]
		[Address(RVA = "0xC59DCC", Offset = "0xC59DCC", VA = "0xC59DCC")]
		[DebuggerHidden]
		public <LateStart>c__Iterator0()
		{
		}

		[Token(Token = "0x6001791")]
		[Address(RVA = "0xC5E9B8", Offset = "0xC5E9B8", VA = "0xC5E9B8", Slot = "5")]
		public bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001794")]
		[Address(RVA = "0xC5EC5C", Offset = "0xC5EC5C", VA = "0xC5EC5C", Slot = "7")]
		[DebuggerHidden]
		public void Dispose()
		{
		}

		[Token(Token = "0x6001795")]
		[Address(RVA = "0xC5EC70", Offset = "0xC5EC70", VA = "0xC5EC70", Slot = "6")]
		[DebuggerHidden]
		public void Reset()
		{
		}
	}

	[Token(Token = "0x2000311")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1F630C", Offset = "0x1F630C")]
	private sealed class <ChangeFilter>c__Iterator1 : IEnumerator, IDisposable, IEnumerator<object>
	{
		[Token(Token = "0x4001214")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal DrawingShader[] <cellShadings>__0;

		[Token(Token = "0x4001215")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		internal ColorSuite[] <colorManagers>__0;

		[Token(Token = "0x4001216")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal float <i>__1;

		[Token(Token = "0x4001217")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		internal DrawingShader[] $locvar0;

		[Token(Token = "0x4001218")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal int $locvar1;

		[Token(Token = "0x4001219")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		internal ColorSuite[] $locvar2;

		[Token(Token = "0x400121A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal int $locvar3;

		[Token(Token = "0x400121B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		internal DrawingShader[] $locvar4;

		[Token(Token = "0x400121C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		internal int $locvar5;

		[Token(Token = "0x400121D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		internal GameSystemScript $this;

		[Token(Token = "0x400121E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		internal object $current;

		[Token(Token = "0x400121F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		internal bool $disposing;

		[Token(Token = "0x4001220")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		internal int $PC;

		[Token(Token = "0x17000287")]
		private object System.Collections.Generic.IEnumerator<object>.Current
		{
			[Token(Token = "0x6001798")]
			[Address(RVA = "0xC5DA1C", Offset = "0xC5DA1C", VA = "0xC5DA1C", Slot = "8")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000288")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001799")]
			[Address(RVA = "0xC5DA24", Offset = "0xC5DA24", VA = "0xC5DA24", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001796")]
		[Address(RVA = "0xC5B308", Offset = "0xC5B308", VA = "0xC5B308")]
		[DebuggerHidden]
		public <ChangeFilter>c__Iterator1()
		{
		}

		[Token(Token = "0x6001797")]
		[Address(RVA = "0xC5D5E4", Offset = "0xC5D5E4", VA = "0xC5D5E4", Slot = "5")]
		public bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600179A")]
		[Address(RVA = "0xC5DA2C", Offset = "0xC5DA2C", VA = "0xC5DA2C", Slot = "7")]
		[DebuggerHidden]
		public void Dispose()
		{
		}

		[Token(Token = "0x600179B")]
		[Address(RVA = "0xC5DA40", Offset = "0xC5DA40", VA = "0xC5DA40", Slot = "6")]
		[DebuggerHidden]
		public void Reset()
		{
		}
	}

	[Token(Token = "0x2000312")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1F636C", Offset = "0x1F636C")]
	private sealed class <ClockSkip>c__Iterator2 : IEnumerator, IDisposable, IEnumerator<object>
	{
		[Token(Token = "0x4001221")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal GameObject o;

		[Token(Token = "0x4001222")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		internal float <i>__1;

		[Token(Token = "0x4001223")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal GameSystemScript $this;

		[Token(Token = "0x4001224")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		internal object $current;

		[Token(Token = "0x4001225")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal bool $disposing;

		[Token(Token = "0x4001226")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		internal int $PC;

		[Token(Token = "0x17000289")]
		private object System.Collections.Generic.IEnumerator<object>.Current
		{
			[Token(Token = "0x600179E")]
			[Address(RVA = "0xC5DE10", Offset = "0xC5DE10", VA = "0xC5DE10", Slot = "8")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700028A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600179F")]
			[Address(RVA = "0xC5DE18", Offset = "0xC5DE18", VA = "0xC5DE18", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600179C")]
		[Address(RVA = "0xC5B3A8", Offset = "0xC5B3A8", VA = "0xC5B3A8")]
		[DebuggerHidden]
		public <ClockSkip>c__Iterator2()
		{
		}

		[Token(Token = "0x600179D")]
		[Address(RVA = "0xC5DAC4", Offset = "0xC5DAC4", VA = "0xC5DAC4", Slot = "5")]
		public bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60017A0")]
		[Address(RVA = "0xC5DE20", Offset = "0xC5DE20", VA = "0xC5DE20", Slot = "7")]
		[DebuggerHidden]
		public void Dispose()
		{
		}

		[Token(Token = "0x60017A1")]
		[Address(RVA = "0xC5DE34", Offset = "0xC5DE34", VA = "0xC5DE34", Slot = "6")]
		[DebuggerHidden]
		public void Reset()
		{
		}
	}

	[Token(Token = "0x2000313")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1F63CC", Offset = "0x1F63CC")]
	private sealed class <BackToViz>c__Iterator3 : IEnumerator, IDisposable, IEnumerator<object>
	{
		[Token(Token = "0x4001227")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal GameSystemScript $this;

		[Token(Token = "0x4001228")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		internal object $current;

		[Token(Token = "0x4001229")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal bool $disposing;

		[Token(Token = "0x400122A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		internal int $PC;

		[Token(Token = "0x1700028B")]
		private object System.Collections.Generic.IEnumerator<object>.Current
		{
			[Token(Token = "0x60017A4")]
			[Address(RVA = "0xC5D53C", Offset = "0xC5D53C", VA = "0xC5D53C", Slot = "8")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700028C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60017A5")]
			[Address(RVA = "0xC5D544", Offset = "0xC5D544", VA = "0xC5D544", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60017A2")]
		[Address(RVA = "0xC5B474", Offset = "0xC5B474", VA = "0xC5B474")]
		[DebuggerHidden]
		public <BackToViz>c__Iterator3()
		{
		}

		[Token(Token = "0x60017A3")]
		[Address(RVA = "0xC5D3EC", Offset = "0xC5D3EC", VA = "0xC5D3EC", Slot = "5")]
		public bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60017A6")]
		[Address(RVA = "0xC5D54C", Offset = "0xC5D54C", VA = "0xC5D54C", Slot = "7")]
		[DebuggerHidden]
		public void Dispose()
		{
		}

		[Token(Token = "0x60017A7")]
		[Address(RVA = "0xC5D560", Offset = "0xC5D560", VA = "0xC5D560", Slot = "6")]
		[DebuggerHidden]
		public void Reset()
		{
		}
	}

	[Token(Token = "0x2000314")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1F642C", Offset = "0x1F642C")]
	private sealed class <whiteFlash>c__Iterator4 : IEnumerator, IDisposable, IEnumerator<object>
	{
		[Token(Token = "0x400122B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal GameSystemScript $this;

		[Token(Token = "0x400122C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		internal object $current;

		[Token(Token = "0x400122D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal bool $disposing;

		[Token(Token = "0x400122E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		internal int $PC;

		[Token(Token = "0x1700028D")]
		private object System.Collections.Generic.IEnumerator<object>.Current
		{
			[Token(Token = "0x60017AA")]
			[Address(RVA = "0xC6026C", Offset = "0xC6026C", VA = "0xC6026C", Slot = "8")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700028E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60017AB")]
			[Address(RVA = "0xC60274", Offset = "0xC60274", VA = "0xC60274", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60017A8")]
		[Address(RVA = "0xC5B4FC", Offset = "0xC5B4FC", VA = "0xC5B4FC")]
		[DebuggerHidden]
		public <whiteFlash>c__Iterator4()
		{
		}

		[Token(Token = "0x60017A9")]
		[Address(RVA = "0xC60064", Offset = "0xC60064", VA = "0xC60064", Slot = "5")]
		public bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60017AC")]
		[Address(RVA = "0xC6027C", Offset = "0xC6027C", VA = "0xC6027C", Slot = "7")]
		[DebuggerHidden]
		public void Dispose()
		{
		}

		[Token(Token = "0x60017AD")]
		[Address(RVA = "0xC60290", Offset = "0xC60290", VA = "0xC60290", Slot = "6")]
		[DebuggerHidden]
		public void Reset()
		{
		}
	}

	[Token(Token = "0x2000315")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1F648C", Offset = "0x1F648C")]
	private sealed class <MorningSearchFeedback>c__Iterator5 : IEnumerator, IDisposable, IEnumerator<object>
	{
		[Token(Token = "0x400122F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal GameSystemScript $this;

		[Token(Token = "0x4001230")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		internal object $current;

		[Token(Token = "0x4001231")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal bool $disposing;

		[Token(Token = "0x4001232")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		internal int $PC;

		[Token(Token = "0x1700028F")]
		private object System.Collections.Generic.IEnumerator<object>.Current
		{
			[Token(Token = "0x60017B0")]
			[Address(RVA = "0xC5EE18", Offset = "0xC5EE18", VA = "0xC5EE18", Slot = "8")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000290")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60017B1")]
			[Address(RVA = "0xC5EE20", Offset = "0xC5EE20", VA = "0xC5EE20", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60017AE")]
		[Address(RVA = "0xC5B820", Offset = "0xC5B820", VA = "0xC5B820")]
		[DebuggerHidden]
		public <MorningSearchFeedback>c__Iterator5()
		{
		}

		[Token(Token = "0x60017AF")]
		[Address(RVA = "0xC5ECF4", Offset = "0xC5ECF4", VA = "0xC5ECF4", Slot = "5")]
		public bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60017B2")]
		[Address(RVA = "0xC5EE28", Offset = "0xC5EE28", VA = "0xC5EE28", Slot = "7")]
		[DebuggerHidden]
		public void Dispose()
		{
		}

		[Token(Token = "0x60017B3")]
		[Address(RVA = "0xC5EE3C", Offset = "0xC5EE3C", VA = "0xC5EE3C", Slot = "6")]
		[DebuggerHidden]
		public void Reset()
		{
		}
	}

	[Token(Token = "0x2000316")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1F64EC", Offset = "0x1F64EC")]
	private sealed class <alarmFeedback>c__Iterator6 : IEnumerator, IDisposable, IEnumerator<object>
	{
		[Token(Token = "0x4001233")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal DrawingShader[] <CellShadings>__0;

		[Token(Token = "0x4001234")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		internal int <j>__1;

		[Token(Token = "0x4001235")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal float <i>__2;

		[Token(Token = "0x4001236")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		internal DrawingShader[] $locvar0;

		[Token(Token = "0x4001237")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal int $locvar1;

		[Token(Token = "0x4001238")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		internal float BaseIntensity;

		[Token(Token = "0x4001239")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal Color BaseColor;

		[Token(Token = "0x400123A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		internal float <i>__3;

		[Token(Token = "0x400123B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		internal DrawingShader[] $locvar2;

		[Token(Token = "0x400123C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		internal int $locvar3;

		[Token(Token = "0x400123D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		internal GameSystemScript $this;

		[Token(Token = "0x400123E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		internal object $current;

		[Token(Token = "0x400123F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		internal bool $disposing;

		[Token(Token = "0x4001240")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		internal int $PC;

		[Token(Token = "0x17000291")]
		private object System.Collections.Generic.IEnumerator<object>.Current
		{
			[Token(Token = "0x60017B6")]
			[Address(RVA = "0xC5D344", Offset = "0xC5D344", VA = "0xC5D344", Slot = "8")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000292")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60017B7")]
			[Address(RVA = "0xC5D34C", Offset = "0xC5D34C", VA = "0xC5D34C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60017B4")]
		[Address(RVA = "0xC5B828", Offset = "0xC5B828", VA = "0xC5B828")]
		[DebuggerHidden]
		public <alarmFeedback>c__Iterator6()
		{
		}

		[Token(Token = "0x60017B5")]
		[Address(RVA = "0xC5CE48", Offset = "0xC5CE48", VA = "0xC5CE48", Slot = "5")]
		public bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60017B8")]
		[Address(RVA = "0xC5D354", Offset = "0xC5D354", VA = "0xC5D354", Slot = "7")]
		[DebuggerHidden]
		public void Dispose()
		{
		}

		[Token(Token = "0x60017B9")]
		[Address(RVA = "0xC5D368", Offset = "0xC5D368", VA = "0xC5D368", Slot = "6")]
		[DebuggerHidden]
		public void Reset()
		{
		}
	}

	[Token(Token = "0x2000317")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1F654C", Offset = "0x1F654C")]
	private sealed class <WaitForGarde>c__Iterator7 : IEnumerator, IDisposable, IEnumerator<object>
	{
		[Token(Token = "0x4001241")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal GameSystemScript $this;

		[Token(Token = "0x4001242")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		internal object $current;

		[Token(Token = "0x4001243")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal bool $disposing;

		[Token(Token = "0x4001244")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		internal int $PC;

		[Token(Token = "0x17000293")]
		private object System.Collections.Generic.IEnumerator<object>.Current
		{
			[Token(Token = "0x60017BC")]
			[Address(RVA = "0xC5FFBC", Offset = "0xC5FFBC", VA = "0xC5FFBC", Slot = "8")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000294")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60017BD")]
			[Address(RVA = "0xC5FFC4", Offset = "0xC5FFC4", VA = "0xC5FFC4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60017BA")]
		[Address(RVA = "0xC5BF8C", Offset = "0xC5BF8C", VA = "0xC5BF8C")]
		[DebuggerHidden]
		public <WaitForGarde>c__Iterator7()
		{
		}

		[Token(Token = "0x60017BB")]
		[Address(RVA = "0xC5F78C", Offset = "0xC5F78C", VA = "0xC5F78C", Slot = "5")]
		public bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60017BE")]
		[Address(RVA = "0xC5FFCC", Offset = "0xC5FFCC", VA = "0xC5FFCC", Slot = "7")]
		[DebuggerHidden]
		public void Dispose()
		{
		}

		[Token(Token = "0x60017BF")]
		[Address(RVA = "0xC5FFE0", Offset = "0xC5FFE0", VA = "0xC5FFE0", Slot = "6")]
		[DebuggerHidden]
		public void Reset()
		{
		}
	}

	[Token(Token = "0x2000318")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1F65AC", Offset = "0x1F65AC")]
	private sealed class <FadeToTutorial>c__Iterator8 : IEnumerator, IDisposable, IEnumerator<object>
	{
		[Token(Token = "0x4001245")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal GameSystemScript $this;

		[Token(Token = "0x4001246")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		internal object $current;

		[Token(Token = "0x4001247")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal bool $disposing;

		[Token(Token = "0x4001248")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		internal int $PC;

		[Token(Token = "0x17000295")]
		private object System.Collections.Generic.IEnumerator<object>.Current
		{
			[Token(Token = "0x60017C2")]
			[Address(RVA = "0xC5E910", Offset = "0xC5E910", VA = "0xC5E910", Slot = "8")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000296")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60017C3")]
			[Address(RVA = "0xC5E918", Offset = "0xC5E918", VA = "0xC5E918", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60017C0")]
		[Address(RVA = "0xC5C1F0", Offset = "0xC5C1F0", VA = "0xC5C1F0")]
		[DebuggerHidden]
		public <FadeToTutorial>c__Iterator8()
		{
		}

		[Token(Token = "0x60017C1")]
		[Address(RVA = "0xC5E478", Offset = "0xC5E478", VA = "0xC5E478", Slot = "5")]
		public bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60017C4")]
		[Address(RVA = "0xC5E920", Offset = "0xC5E920", VA = "0xC5E920", Slot = "7")]
		[DebuggerHidden]
		public void Dispose()
		{
		}

		[Token(Token = "0x60017C5")]
		[Address(RVA = "0xC5E934", Offset = "0xC5E934", VA = "0xC5E934", Slot = "6")]
		[DebuggerHidden]
		public void Reset()
		{
		}
	}

	[Token(Token = "0x2000319")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1F660C", Offset = "0x1F660C")]
	private sealed class <SimpleFadeToJail>c__Iterator9 : IEnumerator, IDisposable, IEnumerator<object>
	{
		[Token(Token = "0x4001249")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal Contour[] $locvar2;

		[Token(Token = "0x400124A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		internal int $locvar3;

		[Token(Token = "0x400124B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal GameSystemScript $this;

		[Token(Token = "0x400124C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		internal object $current;

		[Token(Token = "0x400124D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal bool $disposing;

		[Token(Token = "0x400124E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		internal int $PC;

		[Token(Token = "0x17000297")]
		private object System.Collections.Generic.IEnumerator<object>.Current
		{
			[Token(Token = "0x60017C8")]
			[Address(RVA = "0xC5F6E4", Offset = "0xC5F6E4", VA = "0xC5F6E4", Slot = "8")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000298")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60017C9")]
			[Address(RVA = "0xC5F6EC", Offset = "0xC5F6EC", VA = "0xC5F6EC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60017C6")]
		[Address(RVA = "0xC5C340", Offset = "0xC5C340", VA = "0xC5C340")]
		[DebuggerHidden]
		public <SimpleFadeToJail>c__Iterator9()
		{
		}

		[Token(Token = "0x60017C7")]
		[Address(RVA = "0xC5F0A8", Offset = "0xC5F0A8", VA = "0xC5F0A8", Slot = "5")]
		public bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60017CA")]
		[Address(RVA = "0xC5F6F4", Offset = "0xC5F6F4", VA = "0xC5F6F4", Slot = "7")]
		[DebuggerHidden]
		public void Dispose()
		{
		}

		[Token(Token = "0x60017CB")]
		[Address(RVA = "0xC5F708", Offset = "0xC5F708", VA = "0xC5F708", Slot = "6")]
		[DebuggerHidden]
		public void Reset()
		{
		}
	}

	[Token(Token = "0x200031A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1F666C", Offset = "0x1F666C")]
	private sealed class <FadeToJail>c__IteratorA : IEnumerator, IDisposable, IEnumerator<object>
	{
		[Token(Token = "0x400124F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal Contour[] $locvar0;

		[Token(Token = "0x4001250")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		internal int $locvar1;

		[Token(Token = "0x4001251")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal GameSystemScript $this;

		[Token(Token = "0x4001252")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		internal object $current;

		[Token(Token = "0x4001253")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal bool $disposing;

		[Token(Token = "0x4001254")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		internal int $PC;

		[Token(Token = "0x17000299")]
		private object System.Collections.Generic.IEnumerator<object>.Current
		{
			[Token(Token = "0x60017CE")]
			[Address(RVA = "0xC5E3D0", Offset = "0xC5E3D0", VA = "0xC5E3D0", Slot = "8")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700029A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60017CF")]
			[Address(RVA = "0xC5E3D8", Offset = "0xC5E3D8", VA = "0xC5E3D8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60017CC")]
		[Address(RVA = "0xC5C348", Offset = "0xC5C348", VA = "0xC5C348")]
		[DebuggerHidden]
		public <FadeToJail>c__IteratorA()
		{
		}

		[Token(Token = "0x60017CD")]
		[Address(RVA = "0xC5DEB8", Offset = "0xC5DEB8", VA = "0xC5DEB8", Slot = "5")]
		public bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60017D0")]
		[Address(RVA = "0xC5E3E0", Offset = "0xC5E3E0", VA = "0xC5E3E0", Slot = "7")]
		[DebuggerHidden]
		public void Dispose()
		{
		}

		[Token(Token = "0x60017D1")]
		[Address(RVA = "0xC5E3F4", Offset = "0xC5E3F4", VA = "0xC5E3F4", Slot = "6")]
		[DebuggerHidden]
		public void Reset()
		{
		}
	}

	[Token(Token = "0x200031B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1F66CC", Offset = "0x1F66CC")]
	private sealed class <MoveObject>c__IteratorB : IEnumerator, IDisposable, IEnumerator<object>
	{
		[Token(Token = "0x4001255")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal GameObject o;

		[Token(Token = "0x4001256")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		internal object $current;

		[Token(Token = "0x4001257")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal bool $disposing;

		[Token(Token = "0x4001258")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		internal int $PC;

		[Token(Token = "0x1700029B")]
		private object System.Collections.Generic.IEnumerator<object>.Current
		{
			[Token(Token = "0x60017D4")]
			[Address(RVA = "0xC5F000", Offset = "0xC5F000", VA = "0xC5F000", Slot = "8")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700029C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60017D5")]
			[Address(RVA = "0xC5F008", Offset = "0xC5F008", VA = "0xC5F008", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60017D2")]
		[Address(RVA = "0xC5C3F4", Offset = "0xC5C3F4", VA = "0xC5C3F4")]
		[DebuggerHidden]
		public <MoveObject>c__IteratorB()
		{
		}

		[Token(Token = "0x60017D3")]
		[Address(RVA = "0xC5EEC0", Offset = "0xC5EEC0", VA = "0xC5EEC0", Slot = "5")]
		public bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60017D6")]
		[Address(RVA = "0xC5F010", Offset = "0xC5F010", VA = "0xC5F010", Slot = "7")]
		[DebuggerHidden]
		public void Dispose()
		{
		}

		[Token(Token = "0x60017D7")]
		[Address(RVA = "0xC5F024", Offset = "0xC5F024", VA = "0xC5F024", Slot = "6")]
		[DebuggerHidden]
		public void Reset()
		{
		}
	}

	[Token(Token = "0x40007FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private uint DayID;

	[Token(Token = "0x40007FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private uint NightID;

	[Token(Token = "0x4000800")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private uint TutorialID;

	[Token(Token = "0x4000801")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private uint StingerID;

	[Token(Token = "0x4000802")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private uint AlarmID;

	[Token(Token = "0x4000803")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private GameObject musicPlayer;

	[Token(Token = "0x4000804")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static GameSystemScript Instance;

	[Token(Token = "0x4000805")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public bool debugModeGardes;

	[Token(Token = "0x4000806")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameMode Mode;

	[Token(Token = "0x4000807")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float timeBonusPerObject;

	[Token(Token = "0x4000808")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[HideInInspector]
	public bool isTutorial;

	[Token(Token = "0x4000809")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	[HideInInspector]
	public bool isSubTutorial;

	[Token(Token = "0x400080A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[HideInInspector]
	public int arcadeScore;

	[Token(Token = "0x400080B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[HideInInspector]
	public float arcadeTotalTime;

	[Token(Token = "0x400080C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[HideInInspector]
	public bool freezeCrafting;

	[Token(Token = "0x400080D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float tempsDeLaNuit;

	[Token(Token = "0x400080E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[HideInInspector]
	public float tempsDeLaJournee;

	[Token(Token = "0x400080F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public int delaiJoursAvantGardes;

	[Token(Token = "0x4000810")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public bool nightTime;

	[Token(Token = "0x4000811")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[HideInInspector]
	public float valeurActuelleJour;

	[Token(Token = "0x4000812")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	[HideInInspector]
	public float valeurActuelleNuit;

	[Token(Token = "0x4000813")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public float ratioAvancementNuit;

	[Token(Token = "0x4000814")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	[HideInInspector]
	public float ratioAvancementJour;

	[Token(Token = "0x4000815")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[HideInInspector]
	public float facteurMultiplicateurAiguilles;

	[Token(Token = "0x4000816")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	[HideInInspector]
	public Coroutine isGoingToBed;

	[Token(Token = "0x4000817")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[HideInInspector]
	public bool FreezeJourNuit;

	[Token(Token = "0x4000818")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	[HideInInspector]
	public List<string[]> lesCommandes;

	[Token(Token = "0x4000819")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[HideInInspector]
	public List<string[]> ressourcesOffreDemande;

	[Token(Token = "0x400081A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public lesMois mois;

	[Token(Token = "0x400081B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public lesJours jour;

	[Token(Token = "0x400081C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public int laDate;

	[Token(Token = "0x400081D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public int leMoisCommenceUn;

	[Token(Token = "0x400081E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	[HideInInspector]
	public int secondesJouées;

	[Token(Token = "0x400081F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[HideInInspector]
	public float tempsDépart;

	[Token(Token = "0x4000820")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	[HideInInspector]
	public int daysPassed;

	[Token(Token = "0x4000821")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[HideInInspector]
	public int dayMax;

	[Token(Token = "0x4000822")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	public StatistiqueData StatistiqueData;

	[Token(Token = "0x4000823")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[HideInInspector]
	public List<string> objectsLost;

	[Token(Token = "0x4000824")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	[HideInInspector]
	public List<int> objectsLostCapacity;

	[Token(Token = "0x4000825")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[HideInInspector]
	public List<string> objectsToShow;

	[Token(Token = "0x4000826")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	[HideInInspector]
	public List<int> objectsNb;

	[Token(Token = "0x4000827")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public float PercentageLost;

	[Token(Token = "0x4000828")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	[HideInInspector]
	public bool fouilleIsActive;

	[Token(Token = "0x4000829")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[HideInInspector]
	public List<GameObject> objToDestroy;

	[Token(Token = "0x400082A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	private DetectableObject[] _detectableObjects;

	[Token(Token = "0x400082B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[HideInInspector]
	public Vector3 morningSearchHead;

	[Token(Token = "0x400082C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	private NVRHand[] bothHand;

	[Token(Token = "0x400082D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	[HideInInspector]
	public NVRHand leftHand;

	[Token(Token = "0x400082E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	[HideInInspector]
	public NVRHand rightHand;

	[Token(Token = "0x400082F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	private static GameObject _player;

	[Token(Token = "0x4000830")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	[HideInInspector]
	public ArcadeBank arcadeBank;

	[Token(Token = "0x4000831")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	[HideInInspector]
	public int prisonID;

	[Token(Token = "0x4000832")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	[HideInInspector]
	public NameGenerator NameGenerator;

	[Token(Token = "0x4000833")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
	public BaseShaderValue StaticShaderValues;

	[Token(Token = "0x4000834")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public DayNightShaderValue DynamicShadersValues;

	[Token(Token = "0x4000835")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
	public GameObject[] MainParticule;

	[Token(Token = "0x4000836")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public Color[] palette;

	[Token(Token = "0x4000837")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
	public Color[] UIColor;

	[Token(Token = "0x4000838")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public UnityEvent DayNightTrigger;

	[Token(Token = "0x4000839")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
	[HideInInspector]
	public UnityEvent OnTutorialBegin;

	[Token(Token = "0x400083A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	[HideInInspector]
	public UnityEvent OnTutorialEnd;

	[Token(Token = "0x400083B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
	[HideInInspector]
	public UnityEvent OnFirstDay;

	[Token(Token = "0x400083C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public float TutorialHeight;

	[Token(Token = "0x400083D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
	public GameObject loadingData;

	[Token(Token = "0x400083E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	[HideInInspector]
	public GameObject[] starterPack;

	[Token(Token = "0x400083F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
	[HideInInspector]
	public bool newGame;

	[Token(Token = "0x4000840")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10D")]
	private bool _firstDay;

	[Token(Token = "0x4000841")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	[HideInInspector]
	public TutorialManager tutorialManager;

	[Token(Token = "0x4000842")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
	[HideInInspector]
	public bool tutorialActive;

	[Token(Token = "0x4000843")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	private int NbItemCraftedDuringTheNight;

	[Token(Token = "0x4000844")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
	public int GeneralStore;

	[Token(Token = "0x4000845")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private LayerMask mask;

	[Token(Token = "0x4000846")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
	private IEnumerator CoroutineBackToViz;

	[Token(Token = "0x170000AD")]
	public static StatistiqueData Statistique
	{
		[Token(Token = "0x60006EA")]
		[Address(RVA = "0xC4A088", Offset = "0xC4A088", VA = "0xC4A088")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000AE")]
	public bool ArcadeMode
	{
		[Token(Token = "0x60006EB")]
		[Address(RVA = "0xC57C9C", Offset = "0xC57C9C", VA = "0xC57C9C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170000AF")]
	public bool SandboxMode
	{
		[Token(Token = "0x60006EC")]
		[Address(RVA = "0xC4935C", Offset = "0xC4935C", VA = "0xC4935C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170000B0")]
	public static GameObject Player
	{
		[Token(Token = "0x60006ED")]
		[Address(RVA = "0xC586F0", Offset = "0xC586F0", VA = "0xC586F0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000B1")]
	public static Camera[] Cameras
	{
		[Token(Token = "0x60006EE")]
		[Address(RVA = "0xC587E4", Offset = "0xC587E4", VA = "0xC587E4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000B2")]
	public static ColorSuite[] ColorSuites
	{
		[Token(Token = "0x60006EF")]
		[Address(RVA = "0xC58858", Offset = "0xC58858", VA = "0xC58858")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000B3")]
	public static DrawingShader[] DrawingShaders
	{
		[Token(Token = "0x60006F0")]
		[Address(RVA = "0xC588CC", Offset = "0xC588CC", VA = "0xC588CC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000B4")]
	public static Contour[] Contours
	{
		[Token(Token = "0x60006F1")]
		[Address(RVA = "0xC58940", Offset = "0xC58940", VA = "0xC58940")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000B5")]
	public int SandboxStarterPack
	{
		[Token(Token = "0x60006F2")]
		[Address(RVA = "0xC589B4", Offset = "0xC589B4", VA = "0xC589B4")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x170000B6")]
	[HideInInspector]
	public bool FirstDay
	{
		[Token(Token = "0x60006F3")]
		[Address(RVA = "0xC55964", Offset = "0xC55964", VA = "0xC55964")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60006F4")]
		[Address(RVA = "0xC58000", Offset = "0xC58000", VA = "0xC58000")]
		set
		{
		}
	}

	[Token(Token = "0x170000B7")]
	[HideInInspector]
	public bool canCraft
	{
		[Token(Token = "0x60006F5")]
		[Address(RVA = "0xC58C5C", Offset = "0xC58C5C", VA = "0xC58C5C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170000B8")]
	[HideInInspector]
	public bool SkipingToDay
	{
		[Token(Token = "0x60006F6")]
		[Address(RVA = "0xC58C9C", Offset = "0xC58C9C", VA = "0xC58C9C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x60006E9")]
	[Address(RVA = "0xC5862C", Offset = "0xC5862C", VA = "0xC5862C")]
	public GameSystemScript()
	{
	}

	[Token(Token = "0x60006F7")]
	[Address(RVA = "0xC58CC0", Offset = "0xC58CC0", VA = "0xC58CC0")]
	private void Awake()
	{
	}

	[Token(Token = "0x60006F8")]
	[Address(RVA = "0xC59174", Offset = "0xC59174", VA = "0xC59174")]
	private void Start()
	{
	}

	[Token(Token = "0x60006F9")]
	[Address(RVA = "0xC59D4C", Offset = "0xC59D4C", VA = "0xC59D4C")]
	[DebuggerHidden]
	private IEnumerator LateStart()
	{
		return null;
	}

	[Token(Token = "0x60006FA")]
	[Address(RVA = "0xC59DD4", Offset = "0xC59DD4", VA = "0xC59DD4")]
	private void Update()
	{
	}

	[Token(Token = "0x60006FB")]
	[Address(RVA = "0xC5A180", Offset = "0xC5A180", VA = "0xC5A180")]
	private void skipToTheNight()
	{
	}

	[Token(Token = "0x60006FC")]
	[Address(RVA = "0xC5A394", Offset = "0xC5A394", VA = "0xC5A394")]
	private void skipToTheDay()
	{
	}

	[Token(Token = "0x60006FD")]
	[Address(RVA = "0xC5A000", Offset = "0xC5A000", VA = "0xC5A000")]
	private void switchToTheDay()
	{
	}

	[Token(Token = "0x60006FE")]
	[Address(RVA = "0xC5B288", Offset = "0xC5B288", VA = "0xC5B288")]
	[DebuggerHidden]
	private IEnumerator ChangeFilter()
	{
		return null;
	}

	[Token(Token = "0x60006FF")]
	[Address(RVA = "0xC5A6B8", Offset = "0xC5A6B8", VA = "0xC5A6B8")]
	private void dateSwitch()
	{
	}

	[Token(Token = "0x6000700")]
	[Address(RVA = "0xC4E648", Offset = "0xC4E648", VA = "0xC4E648")]
	public void TriggerSandboxMaxDay()
	{
	}

	[Token(Token = "0x6000701")]
	[Address(RVA = "0xC5B310", Offset = "0xC5B310", VA = "0xC5B310")]
	[DebuggerHidden]
	internal IEnumerator ClockSkip(GameObject o)
	{
		return null;
	}

	[Token(Token = "0x6000702")]
	[Address(RVA = "0xC5B3B0", Offset = "0xC5B3B0", VA = "0xC5B3B0")]
	private void StartBackToViz()
	{
	}

	[Token(Token = "0x6000703")]
	[Address(RVA = "0xC5B3F4", Offset = "0xC5B3F4", VA = "0xC5B3F4")]
	[DebuggerHidden]
	private IEnumerator BackToViz()
	{
		return null;
	}

	[Token(Token = "0x6000704")]
	[Address(RVA = "0xC5B47C", Offset = "0xC5B47C", VA = "0xC5B47C")]
	[DebuggerHidden]
	internal IEnumerator whiteFlash()
	{
		return null;
	}

	[Token(Token = "0x6000705")]
	[Address(RVA = "0xC5A798", Offset = "0xC5A798", VA = "0xC5A798")]
	public bool DetectObjectsNotHidden(Vector3 source, bool morningSeach = false)
	{
		return default(bool);
	}

	[Token(Token = "0x6000706")]
	[Address(RVA = "0xC5AC98", Offset = "0xC5AC98", VA = "0xC5AC98")]
	public void TrashObject(bool morningSearch = false)
	{
	}

	[Token(Token = "0x6000707")]
	[Address(RVA = "0xC5B6D4", Offset = "0xC5B6D4", VA = "0xC5B6D4")]
	[DebuggerHidden]
	private IEnumerator MorningSearchFeedback()
	{
		return null;
	}

	[Token(Token = "0x6000708")]
	[Address(RVA = "0xC5B754", Offset = "0xC5B754", VA = "0xC5B754")]
	[DebuggerHidden]
	private IEnumerator alarmFeedback(Color BaseColor, float BaseIntensity)
	{
		return null;
	}

	[Token(Token = "0x6000709")]
	[Address(RVA = "0xC5B830", Offset = "0xC5B830", VA = "0xC5B830")]
	public void ClaimStarterPack(GameObject bobby)
	{
	}

	[Token(Token = "0x600070A")]
	[Address(RVA = "0xC5BAFC", Offset = "0xC5BAFC", VA = "0xC5BAFC")]
	private bool IsDeletedWhenClaimingStarterPack(SpawnableObject so)
	{
		return default(bool);
	}

	[Token(Token = "0x600070B")]
	[Address(RVA = "0xC5BC1C", Offset = "0xC5BC1C", VA = "0xC5BC1C")]
	private bool IsDeletedWhenClaimingStarterPack(BuyingData bd)
	{
		return default(bool);
	}

	[Token(Token = "0x600070C")]
	[Address(RVA = "0xC5BCF0", Offset = "0xC5BCF0", VA = "0xC5BCF0")]
	public void FakeDestroyObjects(bool isMorningSearch = false)
	{
	}

	[Token(Token = "0x600070D")]
	[Address(RVA = "0xC5BE7C", Offset = "0xC5BE7C", VA = "0xC5BE7C")]
	public void DestroyObjects(bool isMorningSearch = false)
	{
	}

	[Token(Token = "0x600070E")]
	[Address(RVA = "0xC57108", Offset = "0xC57108", VA = "0xC57108")]
	public void PostFouille()
	{
	}

	[Token(Token = "0x600070F")]
	[Address(RVA = "0xC5BDFC", Offset = "0xC5BDFC", VA = "0xC5BDFC")]
	[DebuggerHidden]
	private IEnumerator WaitForGarde()
	{
		return null;
	}

	[Token(Token = "0x6000710")]
	[Address(RVA = "0xC5BF94", Offset = "0xC5BF94", VA = "0xC5BF94")]
	public void arcadeTrade(int caValaitQuoi)
	{
	}

	[Token(Token = "0x6000711")]
	[Address(RVA = "0xC5825C", Offset = "0xC5825C", VA = "0xC5825C")]
	public void StartArcade()
	{
	}

	[Token(Token = "0x6000712")]
	[Address(RVA = "0xC5C0D4", Offset = "0xC5C0D4", VA = "0xC5C0D4")]
	public void StartTutorial(string tutorials)
	{
	}

	[Token(Token = "0x6000713")]
	[Address(RVA = "0xC5C170", Offset = "0xC5C170", VA = "0xC5C170")]
	[DebuggerHidden]
	private IEnumerator FadeToTutorial()
	{
		return null;
	}

	[Token(Token = "0x6000714")]
	[Address(RVA = "0xC58330", Offset = "0xC58330", VA = "0xC58330")]
	public void GoToMenu()
	{
	}

	[Token(Token = "0x6000715")]
	[Address(RVA = "0xC5C1F8", Offset = "0xC5C1F8", VA = "0xC5C1F8")]
	public void EndTutorial()
	{
	}

	[Token(Token = "0x6000716")]
	[Address(RVA = "0xC5C2C0", Offset = "0xC5C2C0", VA = "0xC5C2C0")]
	[DebuggerHidden]
	private IEnumerator SimpleFadeToJail()
	{
		return null;
	}

	[Token(Token = "0x6000717")]
	[Address(RVA = "0xC5C240", Offset = "0xC5C240", VA = "0xC5C240")]
	[DebuggerHidden]
	private IEnumerator FadeToJail()
	{
		return null;
	}

	[Token(Token = "0x6000718")]
	[Address(RVA = "0xC5C350", Offset = "0xC5C350", VA = "0xC5C350")]
	public void ManageOOBObject(GameObject o)
	{
	}

	[Token(Token = "0x6000719")]
	[Address(RVA = "0xC5C374", Offset = "0xC5C374", VA = "0xC5C374")]
	[DebuggerHidden]
	public IEnumerator MoveObject(GameObject o)
	{
		return null;
	}

	[Token(Token = "0x600071A")]
	[Address(RVA = "0xC5C3FC", Offset = "0xC5C3FC", VA = "0xC5C3FC")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600071B")]
	[Address(RVA = "0xC5C498", Offset = "0xC5C498", VA = "0xC5C498")]
	public int SecondesÉcoulées()
	{
		return default(int);
	}

	[Token(Token = "0x600071C")]
	[Address(RVA = "0xC5B27C", Offset = "0xC5B27C", VA = "0xC5B27C")]
	private void ResetItemCraftedCount()
	{
	}

	[Token(Token = "0x600071D")]
	[Address(RVA = "0xC5C4D0", Offset = "0xC5C4D0", VA = "0xC5C4D0")]
	private static string UnifyStringID(string id)
	{
		return null;
	}

	[Token(Token = "0x600071E")]
	[Address(RVA = "0xC5C5A8", Offset = "0xC5C5A8", VA = "0xC5C5A8")]
	private int GetCraftId(string name)
	{
		return default(int);
	}

	[Token(Token = "0x600071F")]
	[Address(RVA = "0xC5C8E4", Offset = "0xC5C8E4", VA = "0xC5C8E4")]
	public void CraftedItem(string name)
	{
	}

	[Token(Token = "0x6000720")]
	[Address(RVA = "0xC4A0F8", Offset = "0xC4A0F8", VA = "0xC4A0F8")]
	public static void Analytics(string eventName, string eventValue)
	{
	}

	[Token(Token = "0x6000721")]
	[Address(RVA = "0xC5B504", Offset = "0xC5B504", VA = "0xC5B504")]
	public static void Analytics(string eventName)
	{
	}

	[Token(Token = "0x6000722")]
	[Address(RVA = "0xC5CA0C", Offset = "0xC5CA0C", VA = "0xC5CA0C")]
	public static void AnalyticsTime()
	{
	}

	[Token(Token = "0x6000723")]
	[Address(RVA = "0xC5CC38", Offset = "0xC5CC38", VA = "0xC5CC38")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1F621C", Offset = "0x1F621C")]
	private void <Start>m__0(DrawingShader CellShading)
	{
	}

	[Token(Token = "0x6000724")]
	[Address(RVA = "0xC5CCA0", Offset = "0xC5CCA0", VA = "0xC5CCA0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1F622C", Offset = "0x1F622C")]
	private void <Start>m__1(ColorSuite ColorManager)
	{
	}

	[Token(Token = "0x6000725")]
	[Address(RVA = "0xC5CCE8", Offset = "0xC5CCE8", VA = "0xC5CCE8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1F623C", Offset = "0x1F623C")]
	private void <Start>m__2(DrawingShader CellShading)
	{
	}

	[Token(Token = "0x6000726")]
	[Address(RVA = "0xC5CD50", Offset = "0xC5CD50", VA = "0xC5CD50")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1F624C", Offset = "0x1F624C")]
	private void <Start>m__3(ColorSuite ColorManager)
	{
	}

	[Token(Token = "0x6000727")]
	[Address(RVA = "0xC5CD98", Offset = "0xC5CD98", VA = "0xC5CD98")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1F625C", Offset = "0x1F625C")]
	private void <Start>m__4(DrawingShader CellShading)
	{
	}

	[Token(Token = "0x6000728")]
	[Address(RVA = "0xC5CE00", Offset = "0xC5CE00", VA = "0xC5CE00")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1F626C", Offset = "0x1F626C")]
	private void <Start>m__5(ColorSuite ColorManager)
	{
	}
}
[Token(Token = "0x200011E")]
public enum TooltipType
{
	[Token(Token = "0x4000848")]
	Simple,
	[Token(Token = "0x4000849")]
	BuyButtonWrapper,
	[Token(Token = "0x400084A")]
	JobBubbleObjectif,
	[Token(Token = "0x400084B")]
	JobBubbleReward,
	[Token(Token = "0x400084C")]
	HelpButton,
	[Token(Token = "0x400084D")]
	Clock,
	[Token(Token = "0x400084E")]
	RepBar
}
[Token(Token = "0x200011F")]
public class GenericTooltip : MonoBehaviour
{
	[Token(Token = "0x400084F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public int HintID;

	[Token(Token = "0x4000850")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public HintAnim anim;

	[Token(Token = "0x4000851")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public TooltipType type;

	[Token(Token = "0x4000852")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private NVRHand lastHandHinted;

	[Token(Token = "0x4000853")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private string textToDisplay;

	[Token(Token = "0x4000854")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private BuyButtonWrapper BBW;

	[Token(Token = "0x4000855")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private JobBubbleWrapper JBW;

	[Token(Token = "0x6000729")]
	[Address(RVA = "0xC64BA8", Offset = "0xC64BA8", VA = "0xC64BA8")]
	public GenericTooltip()
	{
	}

	[Token(Token = "0x600072A")]
	[Address(RVA = "0xC64BB0", Offset = "0xC64BB0", VA = "0xC64BB0")]
	private void Start()
	{
	}

	[Token(Token = "0x600072B")]
	[Address(RVA = "0xC64F68", Offset = "0xC64F68", VA = "0xC64F68")]
	public void RefreshHint()
	{
	}

	[Token(Token = "0x600072C")]
	[Address(RVA = "0xC65BEC", Offset = "0xC65BEC", VA = "0xC65BEC")]
	private void OnTriggerStay(Collider col)
	{
	}

	[Token(Token = "0x600072D")]
	[Address(RVA = "0xC65EAC", Offset = "0xC65EAC", VA = "0xC65EAC")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x600072E")]
	[Address(RVA = "0xC66080", Offset = "0xC66080", VA = "0xC66080")]
	private void OnDisable()
	{
	}
}
[Token(Token = "0x2000120")]
public class JailWallManager : MonoBehaviour
{
	[Token(Token = "0x4000856")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	[SerializeField]
	private GameObject roomOrigin;

	[Token(Token = "0x4000857")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[SerializeField]
	private float minSize;

	[Token(Token = "0x4000858")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	[SerializeField]
	private float maxSize;

	[Token(Token = "0x4000859")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private float RoomHeight;

	[Token(Token = "0x400085A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Vector3 roomSizeWithHeight;

	[Token(Token = "0x400085B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public static Vector3 origin;

	[Token(Token = "0x400085C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static Vector3 center;

	[Token(Token = "0x400085D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public static Vector3 centerTutoland;

	[Token(Token = "0x400085E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private GameObject _player;

	[Token(Token = "0x170000B9")]
	public static Vector3 groundedCenter
	{
		[Token(Token = "0x6000730")]
		[Address(RVA = "0xC50898", Offset = "0xC50898", VA = "0xC50898")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x600072F")]
	[Address(RVA = "0xC710FC", Offset = "0xC710FC", VA = "0xC710FC")]
	public JailWallManager()
	{
	}

	[Token(Token = "0x6000731")]
	[Address(RVA = "0xC71118", Offset = "0xC71118", VA = "0xC71118")]
	public static bool InBound(Vector3 position)
	{
		return default(bool);
	}

	[Token(Token = "0x6000732")]
	[Address(RVA = "0xC52FB0", Offset = "0xC52FB0", VA = "0xC52FB0")]
	public void Init()
	{
	}

	[Token(Token = "0x6000733")]
	[Address(RVA = "0xC4F790", Offset = "0xC4F790", VA = "0xC4F790")]
	public void SetRoom()
	{
	}
}
[Token(Token = "0x2000121")]
public class AmbiancePlayer : MonoBehaviour
{
	[Token(Token = "0x400085F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public string eventName;

	[Token(Token = "0x6000735")]
	[Address(RVA = "0xCE1BD8", Offset = "0xCE1BD8", VA = "0xCE1BD8")]
	public AmbiancePlayer()
	{
	}

	[Token(Token = "0x6000736")]
	[Address(RVA = "0xCE1BE0", Offset = "0xCE1BE0", VA = "0xCE1BE0")]
	private void Start()
	{
	}
}
namespace Klak.Motion
{
	[Token(Token = "0x2000122")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x1F676C", Offset = "0x1F676C")]
	public class BrownianMotion : MonoBehaviour
	{
		[Token(Token = "0x4000860")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public Transform TargetObj;

		[Token(Token = "0x4000861")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		private bool _active;

		[Token(Token = "0x4000862")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[SerializeField]
		private float _positionFrequency;

		[Token(Token = "0x4000863")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private float _rotationFrequency;

		[Token(Token = "0x4000864")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private float _positionAmplitude;

		[Token(Token = "0x4000865")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float _rotationAmplitude;

		[Token(Token = "0x4000866")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private Vector3 _positionScale;

		[Token(Token = "0x4000867")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Vector3 _rotationScale;

		[Token(Token = "0x4000868")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x1F6810", Offset = "0x1F6810")]
		private int _positionFractalLevel;

		[Token(Token = "0x4000869")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x1F6848", Offset = "0x1F6848")]
		private int _rotationFractalLevel;

		[Token(Token = "0x400086A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private float applyRatio;

		[Token(Token = "0x400086B")]
		private const float _fbmNorm = 1.3333334f;

		[Token(Token = "0x400086C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Vector3 _initialPosition;

		[Token(Token = "0x400086D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private Quaternion _initialRotation;

		[Token(Token = "0x400086E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private float[] _time;

		[Token(Token = "0x400086F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private bool localMove;

		[Token(Token = "0x170000BA")]
		public bool active
		{
			[Token(Token = "0x6000738")]
			[Address(RVA = "0xC7CD04", Offset = "0xC7CD04", VA = "0xC7CD04")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000739")]
			[Address(RVA = "0xC7CD0C", Offset = "0xC7CD0C", VA = "0xC7CD0C")]
			set
			{
			}
		}

		[Token(Token = "0x170000BB")]
		public float positionFrequency
		{
			[Token(Token = "0x600073A")]
			[Address(RVA = "0xC7CD14", Offset = "0xC7CD14", VA = "0xC7CD14")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600073B")]
			[Address(RVA = "0xC7CD1C", Offset = "0xC7CD1C", VA = "0xC7CD1C")]
			set
			{
			}
		}

		[Token(Token = "0x170000BC")]
		public float rotationFrequency
		{
			[Token(Token = "0x600073C")]
			[Address(RVA = "0xC7CD24", Offset = "0xC7CD24", VA = "0xC7CD24")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600073D")]
			[Address(RVA = "0xC7CD2C", Offset = "0xC7CD2C", VA = "0xC7CD2C")]
			set
			{
			}
		}

		[Token(Token = "0x170000BD")]
		public float positionAmplitude
		{
			[Token(Token = "0x600073E")]
			[Address(RVA = "0xC7CD34", Offset = "0xC7CD34", VA = "0xC7CD34")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600073F")]
			[Address(RVA = "0xC7CD3C", Offset = "0xC7CD3C", VA = "0xC7CD3C")]
			set
			{
			}
		}

		[Token(Token = "0x170000BE")]
		public float rotationAmplitude
		{
			[Token(Token = "0x6000740")]
			[Address(RVA = "0xC7CD44", Offset = "0xC7CD44", VA = "0xC7CD44")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000741")]
			[Address(RVA = "0xC7CD4C", Offset = "0xC7CD4C", VA = "0xC7CD4C")]
			set
			{
			}
		}

		[Token(Token = "0x170000BF")]
		public Vector3 positionScale
		{
			[Token(Token = "0x6000742")]
			[Address(RVA = "0xC7CD54", Offset = "0xC7CD54", VA = "0xC7CD54")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6000743")]
			[Address(RVA = "0xC7CD64", Offset = "0xC7CD64", VA = "0xC7CD64")]
			set
			{
			}
		}

		[Token(Token = "0x170000C0")]
		public Vector3 rotationScale
		{
			[Token(Token = "0x6000744")]
			[Address(RVA = "0xC7CD70", Offset = "0xC7CD70", VA = "0xC7CD70")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6000745")]
			[Address(RVA = "0xC7CD80", Offset = "0xC7CD80", VA = "0xC7CD80")]
			set
			{
			}
		}

		[Token(Token = "0x170000C1")]
		public int positionFractalLevel
		{
			[Token(Token = "0x6000746")]
			[Address(RVA = "0xC7CD8C", Offset = "0xC7CD8C", VA = "0xC7CD8C")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000747")]
			[Address(RVA = "0xC7CD94", Offset = "0xC7CD94", VA = "0xC7CD94")]
			set
			{
			}
		}

		[Token(Token = "0x170000C2")]
		public int rotationFractalLevel
		{
			[Token(Token = "0x6000748")]
			[Address(RVA = "0xC7CD9C", Offset = "0xC7CD9C", VA = "0xC7CD9C")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000749")]
			[Address(RVA = "0xC7CDA4", Offset = "0xC7CDA4", VA = "0xC7CDA4")]
			set
			{
			}
		}

		[Token(Token = "0x6000737")]
		[Address(RVA = "0xC7CBEC", Offset = "0xC7CBEC", VA = "0xC7CBEC")]
		public BrownianMotion()
		{
		}

		[Token(Token = "0x600074A")]
		[Address(RVA = "0xC7CDAC", Offset = "0xC7CDAC", VA = "0xC7CDAC")]
		public void Rehash()
		{
		}

		[Token(Token = "0x600074B")]
		[Address(RVA = "0xC7CE30", Offset = "0xC7CE30", VA = "0xC7CE30")]
		private void Start()
		{
		}

		[Token(Token = "0x600074C")]
		[Address(RVA = "0xC7CEAC", Offset = "0xC7CEAC", VA = "0xC7CEAC")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x600074D")]
		[Address(RVA = "0xC7CEB8", Offset = "0xC7CEB8", VA = "0xC7CEB8")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600074E")]
		[Address(RVA = "0xC7CF4C", Offset = "0xC7CF4C", VA = "0xC7CF4C")]
		public void Initialize()
		{
		}

		[Token(Token = "0x600074F")]
		[Address(RVA = "0xC7CFE0", Offset = "0xC7CFE0", VA = "0xC7CFE0")]
		private void Update()
		{
		}
	}
}
[Token(Token = "0x2000123")]
public class FaeryBobbyComponent : SpawnableObject
{
	[Token(Token = "0x200031C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1F68A0", Offset = "0x1F68A0")]
	private sealed class <Talkfeedback>c__Iterator0 : IEnumerator, IDisposable, IEnumerator<object>
	{
		[Token(Token = "0x4001259")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal string soundEvent;

		[Token(Token = "0x400125A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		internal FaeryBobbyComponent $this;

		[Token(Token = "0x400125B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal object $current;

		[Token(Token = "0x400125C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		internal bool $disposing;

		[Token(Token = "0x400125D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal int $PC;

		[Token(Token = "0x1700029D")]
		private object System.Collections.Generic.IEnumerator<object>.Current
		{
			[Token(Token = "0x60017DA")]
			[Address(RVA = "0xC5554C", Offset = "0xC5554C", VA = "0xC5554C", Slot = "8")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700029E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60017DB")]
			[Address(RVA = "0xC55554", Offset = "0xC55554", VA = "0xC55554", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60017D8")]
		[Address(RVA = "0xC55410", Offset = "0xC55410", VA = "0xC55410")]
		[DebuggerHidden]
		public <Talkfeedback>c__Iterator0()
		{
		}

		[Token(Token = "0x60017D9")]
		[Address(RVA = "0xC55418", Offset = "0xC55418", VA = "0xC55418", Slot = "5")]
		public bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60017DC")]
		[Address(RVA = "0xC5555C", Offset = "0xC5555C", VA = "0xC5555C", Slot = "7")]
		[DebuggerHidden]
		public void Dispose()
		{
		}

		[Token(Token = "0x60017DD")]
		[Address(RVA = "0xC55570", Offset = "0xC55570", VA = "0xC55570", Slot = "6")]
		[DebuggerHidden]
		public void Reset()
		{
		}
	}

	[Token(Token = "0x4000870")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float targetDistance;

	[Token(Token = "0x4000871")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float timeToDestroy;

	[Token(Token = "0x4000872")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public LayerMask mask;

	[Token(Token = "0x4000873")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[HideInInspector]
	public UnityEvent OnHelperDestroy;

	[Token(Token = "0x4000874")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float _timeToDestroySave;

	[Token(Token = "0x4000875")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Animator _animator;

	[Token(Token = "0x4000876")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Transform _head;

	[Token(Token = "0x4000877")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private Vector3 _finalTarget;

	[Token(Token = "0x4000878")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Vector3 _currentTarget;

	[Token(Token = "0x4000879")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private bool _goingToTarget;

	[Token(Token = "0x400087A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Vector3[] _deltaBuffer;

	[Token(Token = "0x400087B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private int _index;

	[Token(Token = "0x400087C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Vector3 _lastPosition;

	[Token(Token = "0x400087D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private uint flyingEvent;

	[Token(Token = "0x170000C3")]
	private Vector3 velocity
	{
		[Token(Token = "0x6000751")]
		[Address(RVA = "0xC54268", Offset = "0xC54268", VA = "0xC54268")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x6000750")]
	[Address(RVA = "0xC541D8", Offset = "0xC541D8", VA = "0xC541D8")]
	public FaeryBobbyComponent()
	{
	}

	[Token(Token = "0x6000752")]
	[Address(RVA = "0xC543E8", Offset = "0xC543E8", VA = "0xC543E8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000753")]
	[Address(RVA = "0xC54548", Offset = "0xC54548", VA = "0xC54548", Slot = "4")]
	public override void Reset()
	{
	}

	[Token(Token = "0x6000754")]
	[Address(RVA = "0xC545D0", Offset = "0xC545D0", VA = "0xC545D0")]
	public void Setup(Vector3 target)
	{
	}

	[Token(Token = "0x6000755")]
	[Address(RVA = "0xC547CC", Offset = "0xC547CC", VA = "0xC547CC")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000756")]
	[Address(RVA = "0xC54950", Offset = "0xC54950", VA = "0xC54950")]
	private void Update()
	{
	}

	[Token(Token = "0x6000757")]
	[Address(RVA = "0xC54734", Offset = "0xC54734", VA = "0xC54734")]
	[DebuggerHidden]
	private IEnumerator Talkfeedback(string soundEvent)
	{
		return null;
	}

	[Token(Token = "0x6000758")]
	[Address(RVA = "0xC5524C", Offset = "0xC5524C", VA = "0xC5524C")]
	private void Kill()
	{
	}
}
[Token(Token = "0x2000124")]
public class GiftBehavior : SpawnableObject
{
	[Token(Token = "0x200031D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1F6970", Offset = "0x1F6970")]
	private sealed class <ResetPosition>c__Iterator0 : IEnumerator, IDisposable, IEnumerator<object>
	{
		[Token(Token = "0x400125E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal Vector3 <pos>__0;

		[Token(Token = "0x400125F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		internal Quaternion <rot>__0;

		[Token(Token = "0x4001260")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		internal float <_time>__0;

		[Token(Token = "0x4001261")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		internal HaloScript <halo>__0;

		[Token(Token = "0x4001262")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		internal GiftBehavior $this;

		[Token(Token = "0x4001263")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		internal object $current;

		[Token(Token = "0x4001264")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		internal bool $disposing;

		[Token(Token = "0x4001265")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		internal int $PC;

		[Token(Token = "0x1700029F")]
		private object System.Collections.Generic.IEnumerator<object>.Current
		{
			[Token(Token = "0x60017E0")]
			[Address(RVA = "0xC68350", Offset = "0xC68350", VA = "0xC68350", Slot = "8")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002A0")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60017E1")]
			[Address(RVA = "0xC68358", Offset = "0xC68358", VA = "0xC68358", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60017DE")]
		[Address(RVA = "0xC66CA4", Offset = "0xC66CA4", VA = "0xC66CA4")]
		[DebuggerHidden]
		public <ResetPosition>c__Iterator0()
		{
		}

		[Token(Token = "0x60017DF")]
		[Address(RVA = "0xC67E08", Offset = "0xC67E08", VA = "0xC67E08", Slot = "5")]
		public bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60017E2")]
		[Address(RVA = "0xC68360", Offset = "0xC68360", VA = "0xC68360", Slot = "7")]
		[DebuggerHidden]
		public void Dispose()
		{
		}

		[Token(Token = "0x60017E3")]
		[Address(RVA = "0xC68374", Offset = "0xC68374", VA = "0xC68374", Slot = "6")]
		[DebuggerHidden]
		public void Reset()
		{
		}
	}

	[Token(Token = "0x400087E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float timeToShake;

	[Token(Token = "0x400087F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public Color[] colors;

	[Token(Token = "0x4000880")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject Particle;

	[Token(Token = "0x4000881")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public GameObject Bobine;

	[Token(Token = "0x4000882")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float forceExplosion;

	[Token(Token = "0x4000883")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private GameObject[] sp;

	[Token(Token = "0x4000884")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject giftTopJuice;

	[Token(Token = "0x4000885")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public GameObject giftBottomJuice;

	[Token(Token = "0x4000886")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Vector3 BaseSpPos;

	[Token(Token = "0x4000887")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private NVRInteractableItem obj;

	[Token(Token = "0x4000888")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private TutorialManager tutorialManager;

	[Token(Token = "0x4000889")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private float time;

	[Token(Token = "0x400088A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Vector3 basePosition;

	[Token(Token = "0x400088B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public GameObject Halo;

	[Token(Token = "0x400088C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public AnimationCurve curve;

	[Token(Token = "0x400088D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	[HideInInspector]
	public string text;

	[Token(Token = "0x400088E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[HideInInspector]
	public Sprite img;

	[Token(Token = "0x400088F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	[HideInInspector]
	public DealerJobScript jobScript;

	[Token(Token = "0x4000890")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[HideInInspector]
	public bool newItem;

	[Token(Token = "0x4000891")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	[HideInInspector]
	public BuyingData data;

	[Token(Token = "0x4000892")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[HideInInspector]
	public string unlockName;

	[Token(Token = "0x4000893")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private uint openingSound;

	[Token(Token = "0x6000759")]
	[Address(RVA = "0xC66704", Offset = "0xC66704", VA = "0xC66704")]
	public GiftBehavior()
	{
	}

	[Token(Token = "0x600075A")]
	[Address(RVA = "0xC66718", Offset = "0xC66718", VA = "0xC66718")]
	private void Start()
	{
	}

	[Token(Token = "0x600075B")]
	[Address(RVA = "0xC66B84", Offset = "0xC66B84", VA = "0xC66B84")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600075C")]
	[Address(RVA = "0xC66BD0", Offset = "0xC66BD0", VA = "0xC66BD0")]
	private void BackToPosition()
	{
	}

	[Token(Token = "0x600075D")]
	[Address(RVA = "0xC66C24", Offset = "0xC66C24", VA = "0xC66C24")]
	[DebuggerHidden]
	private IEnumerator ResetPosition()
	{
		return null;
	}

	[Token(Token = "0x600075E")]
	[Address(RVA = "0xC66CAC", Offset = "0xC66CAC", VA = "0xC66CAC", Slot = "4")]
	public override void Reset()
	{
	}

	[Token(Token = "0x600075F")]
	[Address(RVA = "0xC66D30", Offset = "0xC66D30", VA = "0xC66D30")]
	private void Update()
	{
	}

	[Token(Token = "0x6000760")]
	[Address(RVA = "0xC67A74", Offset = "0xC67A74", VA = "0xC67A74")]
	private void spawnTutoLoader(string type)
	{
	}
}
[Token(Token = "0x2000125")]
public enum handAnimState
{
	[Token(Token = "0x4000895")]
	Idle,
	[Token(Token = "0x4000896")]
	Fist,
	[Token(Token = "0x4000897")]
	Grab
}
[Token(Token = "0x2000126")]
public class HandAnimationManager : MonoBehaviour
{
	[Token(Token = "0x4000898")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private Animator anim;

	[Token(Token = "0x4000899")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private NVRHand hand;

	[Token(Token = "0x400089A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public GameObject sp;

	[Token(Token = "0x400089B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private handAnimState state;

	[Token(Token = "0x6000761")]
	[Address(RVA = "0xC6A814", Offset = "0xC6A814", VA = "0xC6A814")]
	public HandAnimationManager()
	{
	}

	[Token(Token = "0x6000762")]
	[Address(RVA = "0xC6A81C", Offset = "0xC6A81C", VA = "0xC6A81C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000763")]
	[Address(RVA = "0xC6A8D8", Offset = "0xC6A8D8", VA = "0xC6A8D8")]
	private void Update()
	{
	}
}
[Token(Token = "0x2000127")]
public class ItTurns : MonoBehaviour
{
	[Token(Token = "0x6000764")]
	[Address(RVA = "0xC71084", Offset = "0xC71084", VA = "0xC71084")]
	public ItTurns()
	{
	}

	[Token(Token = "0x6000765")]
	[Address(RVA = "0xC7108C", Offset = "0xC7108C", VA = "0xC7108C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000766")]
	[Address(RVA = "0xC71090", Offset = "0xC71090", VA = "0xC71090")]
	private void Update()
	{
	}
}
[Token(Token = "0x2000128")]
public class MeshFromCapacity : MonoBehaviour
{
	[Token(Token = "0x400089C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Mesh[] state;

	[Token(Token = "0x400089D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private int actualState;

	[Token(Token = "0x400089E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private MeshFilter mesh;

	[Token(Token = "0x400089F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Ressource res;

	[Token(Token = "0x6000767")]
	[Address(RVA = "0xC91EF8", Offset = "0xC91EF8", VA = "0xC91EF8")]
	public MeshFromCapacity()
	{
	}

	[Token(Token = "0x6000768")]
	[Address(RVA = "0xC91F00", Offset = "0xC91F00", VA = "0xC91F00")]
	private void Start()
	{
	}

	[Token(Token = "0x6000769")]
	[Address(RVA = "0xC92024", Offset = "0xC92024", VA = "0xC92024")]
	private void Update()
	{
	}
}
[Token(Token = "0x2000129")]
public class MoneyParticule : SpawnableObject
{
	[Token(Token = "0x40008A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float timeBeforeDestroy;

	[Token(Token = "0x40008A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	[HideInInspector]
	public Rigidbody rb;

	[Token(Token = "0x40008A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float timer;

	[Token(Token = "0x600076A")]
	[Address(RVA = "0xC95EB0", Offset = "0xC95EB0", VA = "0xC95EB0")]
	public MoneyParticule()
	{
	}

	[Token(Token = "0x600076B")]
	[Address(RVA = "0xC95EB8", Offset = "0xC95EB8", VA = "0xC95EB8", Slot = "4")]
	public override void Reset()
	{
	}

	[Token(Token = "0x600076C")]
	[Address(RVA = "0xC95E00", Offset = "0xC95E00", VA = "0xC95E00")]
	public void ApplyForce(Vector3 force)
	{
	}

	[Token(Token = "0x600076D")]
	[Address(RVA = "0xC95FB0", Offset = "0xC95FB0", VA = "0xC95FB0")]
	private void Update()
	{
	}
}
namespace Klak.Math
{
	[Token(Token = "0x200012A")]
	public static class Perlin
	{
		[Token(Token = "0x40008A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static int[] perm;

		[Token(Token = "0x600076E")]
		[Address(RVA = "0xC7B5C0", Offset = "0xC7B5C0", VA = "0xC7B5C0")]
		public static float Noise(float x)
		{
			return default(float);
		}

		[Token(Token = "0x600076F")]
		[Address(RVA = "0xC7B80C", Offset = "0xC7B80C", VA = "0xC7B80C")]
		public static float Noise(float x, float y)
		{
			return default(float);
		}

		[Token(Token = "0x6000770")]
		[Address(RVA = "0xC7BBF0", Offset = "0xC7BBF0", VA = "0xC7BBF0")]
		public static float Noise(Vector2 coord)
		{
			return default(float);
		}

		[Token(Token = "0x6000771")]
		[Address(RVA = "0xC7BC78", Offset = "0xC7BC78", VA = "0xC7BC78")]
		public static float Noise(float x, float y, float z)
		{
			return default(float);
		}

		[Token(Token = "0x6000772")]
		[Address(RVA = "0xC7C5D4", Offset = "0xC7C5D4", VA = "0xC7C5D4")]
		public static float Noise(Vector3 coord)
		{
			return default(float);
		}

		[Token(Token = "0x6000773")]
		[Address(RVA = "0xC7C66C", Offset = "0xC7C66C", VA = "0xC7C66C")]
		public static float Fbm(float x, int octave)
		{
			return default(float);
		}

		[Token(Token = "0x6000774")]
		[Address(RVA = "0xC7C738", Offset = "0xC7C738", VA = "0xC7C738")]
		public static float Fbm(Vector2 coord, int octave)
		{
			return default(float);
		}

		[Token(Token = "0x6000775")]
		[Address(RVA = "0xC7C878", Offset = "0xC7C878", VA = "0xC7C878")]
		public static float Fbm(float x, float y, int octave)
		{
			return default(float);
		}

		[Token(Token = "0x6000776")]
		[Address(RVA = "0xC7C930", Offset = "0xC7C930", VA = "0xC7C930")]
		public static float Fbm(Vector3 coord, int octave)
		{
			return default(float);
		}

		[Token(Token = "0x6000777")]
		[Address(RVA = "0xC7CA80", Offset = "0xC7CA80", VA = "0xC7CA80")]
		public static float Fbm(float x, float y, float z, int octave)
		{
			return default(float);
		}

		[Token(Token = "0x6000778")]
		[Address(RVA = "0xC7B794", Offset = "0xC7B794", VA = "0xC7B794")]
		private static float Fade(float t)
		{
			return default(float);
		}

		[Token(Token = "0x6000779")]
		[Address(RVA = "0xC7B7EC", Offset = "0xC7B7EC", VA = "0xC7B7EC")]
		private static float Lerp(float t, float a, float b)
		{
			return default(float);
		}

		[Token(Token = "0x600077A")]
		[Address(RVA = "0xC7B7D4", Offset = "0xC7B7D4", VA = "0xC7B7D4")]
		private static float Grad(int hash, float x)
		{
			return default(float);
		}

		[Token(Token = "0x600077B")]
		[Address(RVA = "0xC7BBC4", Offset = "0xC7BBC4", VA = "0xC7BBC4")]
		private static float Grad(int hash, float x, float y)
		{
			return default(float);
		}

		[Token(Token = "0x600077C")]
		[Address(RVA = "0xC7C580", Offset = "0xC7C580", VA = "0xC7C580")]
		private static float Grad(int hash, float x, float y, float z)
		{
			return default(float);
		}
	}
}
[Token(Token = "0x200012B")]
public class RewardTurn : MonoBehaviour
{
	[Token(Token = "0x40008A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	[HideInInspector]
	public TextMeshProUGUI txt;

	[Token(Token = "0x40008A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[HideInInspector]
	public Image img;

	[Token(Token = "0x40008A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private GameObject cam;

	[Token(Token = "0x40008A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float timer;

	[Token(Token = "0x600077E")]
	[Address(RVA = "0x26FC74", Offset = "0x26FC74", VA = "0x26FC74")]
	public RewardTurn()
	{
	}

	[Token(Token = "0x600077F")]
	[Address(RVA = "0x26FC7C", Offset = "0x26FC7C", VA = "0x26FC7C")]
	public void Init(string s, Sprite sp)
	{
	}

	[Token(Token = "0x6000780")]
	[Address(RVA = "0x26FEC0", Offset = "0x26FEC0", VA = "0x26FEC0")]
	private void Update()
	{
	}
}
[Token(Token = "0x200012C")]
public class SaveAnimation : MonoBehaviour
{
	[Token(Token = "0x2000320")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1F6A10", Offset = "0x1F6A10")]
	private sealed class <FadeInOut>c__Iterator0 : IEnumerator, IDisposable, IEnumerator<object>
	{
		[Token(Token = "0x4001266")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal float <f>__1;

		[Token(Token = "0x4001267")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		internal TextMeshProUGUI[] $locvar0;

		[Token(Token = "0x4001268")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal int $locvar1;

		[Token(Token = "0x4001269")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		internal float <f>__2;

		[Token(Token = "0x400126A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal TextMeshProUGUI[] $locvar2;

		[Token(Token = "0x400126B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		internal int $locvar3;

		[Token(Token = "0x400126C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal SaveAnimation $this;

		[Token(Token = "0x400126D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		internal object $current;

		[Token(Token = "0x400126E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		internal bool $disposing;

		[Token(Token = "0x400126F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		internal int $PC;

		[Token(Token = "0x170002A1")]
		private object System.Collections.Generic.IEnumerator<object>.Current
		{
			[Token(Token = "0x60017E6")]
			[Address(RVA = "0xCAAE4C", Offset = "0xCAAE4C", VA = "0xCAAE4C", Slot = "8")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002A2")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60017E7")]
			[Address(RVA = "0xCAAE54", Offset = "0xCAAE54", VA = "0xCAAE54", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60017E4")]
		[Address(RVA = "0xCAA760", Offset = "0xCAA760", VA = "0xCAA760")]
		[DebuggerHidden]
		public <FadeInOut>c__Iterator0()
		{
		}

		[Token(Token = "0x60017E5")]
		[Address(RVA = "0xCAA9CC", Offset = "0xCAA9CC", VA = "0xCAA9CC", Slot = "5")]
		public bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60017E8")]
		[Address(RVA = "0xCAAE5C", Offset = "0xCAAE5C", VA = "0xCAAE5C", Slot = "7")]
		[DebuggerHidden]
		public void Dispose()
		{
		}

		[Token(Token = "0x60017E9")]
		[Address(RVA = "0xCAAE70", Offset = "0xCAAE70", VA = "0xCAAE70", Slot = "6")]
		[DebuggerHidden]
		public void Reset()
		{
		}
	}

	[Token(Token = "0x40008A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public float[] offsets;

	[Token(Token = "0x40008A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float frequency;

	[Token(Token = "0x40008AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public GameObject Char;

	[Token(Token = "0x40008AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private TextMeshProUGUI[] letters;

	[Token(Token = "0x40008AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private Vector3[] basesPosition;

	[Token(Token = "0x40008AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int letterCount;

	[Token(Token = "0x40008AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float timer;

	[Token(Token = "0x40008AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Color baseColor;

	[Token(Token = "0x6000781")]
	[Address(RVA = "0xCA9B40", Offset = "0xCA9B40", VA = "0xCA9B40")]
	public SaveAnimation()
	{
	}

	[Token(Token = "0x6000782")]
	[Address(RVA = "0xCA9B48", Offset = "0xCA9B48", VA = "0xCA9B48")]
	public void init()
	{
	}

	[Token(Token = "0x6000783")]
	[Address(RVA = "0xCA9EC4", Offset = "0xCA9EC4", VA = "0xCA9EC4")]
	private void GenerateText()
	{
	}

	[Token(Token = "0x6000784")]
	[Address(RVA = "0xCAA6BC", Offset = "0xCAA6BC", VA = "0xCAA6BC")]
	public void Show()
	{
	}

	[Token(Token = "0x6000785")]
	[Address(RVA = "0xCAA6E0", Offset = "0xCAA6E0", VA = "0xCAA6E0")]
	[DebuggerHidden]
	private IEnumerator FadeInOut()
	{
		return null;
	}

	[Token(Token = "0x6000786")]
	[Address(RVA = "0xCAA768", Offset = "0xCAA768", VA = "0xCAA768")]
	private void Update()
	{
	}

	[Token(Token = "0x6000787")]
	[Address(RVA = "0xCAA76C", Offset = "0xCAA76C", VA = "0xCAA76C")]
	private void baseAnim()
	{
	}
}
[Token(Token = "0x200012D")]
public class SaveAnimationManager : MonoBehaviour
{
	[Token(Token = "0x40008B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static SaveAnimationManager Instance;

	[Token(Token = "0x40008B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private SaveAnimation saveAnim;

	[Token(Token = "0x6000788")]
	[Address(RVA = "0xCAAEF4", Offset = "0xCAAEF4", VA = "0xCAAEF4")]
	public SaveAnimationManager()
	{
	}

	[Token(Token = "0x6000789")]
	[Address(RVA = "0xCAAEFC", Offset = "0xCAAEFC", VA = "0xCAAEFC")]
	private void Awake()
	{
	}

	[Token(Token = "0x600078A")]
	[Address(RVA = "0xCAAF60", Offset = "0xCAAF60", VA = "0xCAAF60")]
	private void Start()
	{
	}

	[Token(Token = "0x600078B")]
	[Address(RVA = "0xCAB158", Offset = "0xCAB158", VA = "0xCAB158")]
	private void Reset()
	{
	}

	[Token(Token = "0x600078C")]
	[Address(RVA = "0xCAB1C8", Offset = "0xCAB1C8", VA = "0xCAB1C8")]
	public void ShowFeedback()
	{
	}

	[Token(Token = "0x600078D")]
	[Address(RVA = "0xCAB06C", Offset = "0xCAB06C", VA = "0xCAB06C")]
	private bool IfAnimOk()
	{
		return default(bool);
	}
}
[Token(Token = "0x200012E")]
[ExecuteInEditMode]
public class SimpleNoiseMovement : MonoBehaviour
{
	[Token(Token = "0x40008B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public bool active;

	[Token(Token = "0x40008B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float scale;

	[Token(Token = "0x40008B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public Vector3 strengh;

	[Token(Token = "0x40008B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Vector3 _basePosition;

	[Token(Token = "0x600078E")]
	[Address(RVA = "0xCB6DCC", Offset = "0xCB6DCC", VA = "0xCB6DCC")]
	public SimpleNoiseMovement()
	{
	}

	[Token(Token = "0x600078F")]
	[Address(RVA = "0xCB6E7C", Offset = "0xCB6E7C", VA = "0xCB6E7C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000790")]
	[Address(RVA = "0xCB6EC8", Offset = "0xCB6EC8", VA = "0xCB6EC8")]
	private void Update()
	{
	}
}
[Token(Token = "0x200012F")]
public class LoadSaveFromAnywhere
{
	[Token(Token = "0x2000130")]
	private class LoadSaveMenuHelper : MonoBehaviour
	{
		[Token(Token = "0x6000794")]
		[Address(RVA = "0xC82AFC", Offset = "0xC82AFC", VA = "0xC82AFC")]
		public LoadSaveMenuHelper()
		{
		}
	}

	[Token(Token = "0x2000321")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1F6A90", Offset = "0x1F6A90")]
	private sealed class <LoadSaveCoroutine>c__Iterator0 : IEnumerator, IDisposable, IEnumerator<object>
	{
		[Token(Token = "0x4001270")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal int saveId;

		[Token(Token = "0x4001271")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		internal SceneLoader <loader>__0;

		[Token(Token = "0x4001272")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal bool <finishLoading>__0;

		[Token(Token = "0x4001273")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		internal IEnumerator<SceneLoader.SceneInformations> $locvar0;

		[Token(Token = "0x4001274")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal LoadingManager <loadingmanager>__0;

		[Token(Token = "0x4001275")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		internal SceneLoader.SceneInformations <currentInfo>__0;

		[Token(Token = "0x4001276")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal PreloadingManagerCommon <preload>__0;

		[Token(Token = "0x4001277")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		internal MonoBehaviour helper;

		[Token(Token = "0x4001278")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		internal object $current;

		[Token(Token = "0x4001279")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		internal bool $disposing;

		[Token(Token = "0x400127A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		internal int $PC;

		[Token(Token = "0x170002A3")]
		private object System.Collections.Generic.IEnumerator<object>.Current
		{
			[Token(Token = "0x60017EC")]
			[Address(RVA = "0xC82A54", Offset = "0xC82A54", VA = "0xC82A54", Slot = "8")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002A4")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60017ED")]
			[Address(RVA = "0xC82A5C", Offset = "0xC82A5C", VA = "0xC82A5C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60017EA")]
		[Address(RVA = "0xC81EE4", Offset = "0xC81EE4", VA = "0xC81EE4")]
		[DebuggerHidden]
		public <LoadSaveCoroutine>c__Iterator0()
		{
		}

		[Token(Token = "0x60017EB")]
		[Address(RVA = "0xC81EEC", Offset = "0xC81EEC", VA = "0xC81EEC", Slot = "5")]
		public bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60017EE")]
		[Address(RVA = "0xC82A64", Offset = "0xC82A64", VA = "0xC82A64", Slot = "7")]
		[DebuggerHidden]
		public void Dispose()
		{
		}

		[Token(Token = "0x60017EF")]
		[Address(RVA = "0xC82A78", Offset = "0xC82A78", VA = "0xC82A78", Slot = "6")]
		[DebuggerHidden]
		public void Reset()
		{
		}
	}

	[Token(Token = "0x6000791")]
	[Address(RVA = "0xC81D50", Offset = "0xC81D50", VA = "0xC81D50")]
	public LoadSaveFromAnywhere()
	{
	}

	[Token(Token = "0x6000792")]
	[Address(RVA = "0xC81D58", Offset = "0xC81D58", VA = "0xC81D58")]
	public static void LoadSave(int saveId)
	{
	}

	[Token(Token = "0x6000793")]
	[Address(RVA = "0xC81E4C", Offset = "0xC81E4C", VA = "0xC81E4C")]
	[DebuggerHidden]
	private static IEnumerator LoadSaveCoroutine(MonoBehaviour helper, int saveId)
	{
		return null;
	}
}
[Token(Token = "0x2000131")]
public class ArcadeButtonScript : MonoBehaviour
{
	[Token(Token = "0x40008B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private NVRHand hand;

	[Token(Token = "0x40008B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private Animator anim;

	[Token(Token = "0x40008B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private GameObject hl;

	[Token(Token = "0x40008B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool hovering;

	[Token(Token = "0x40008BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	private bool pressing;

	[Token(Token = "0x6000795")]
	[Address(RVA = "0xCE3574", Offset = "0xCE3574", VA = "0xCE3574")]
	public ArcadeButtonScript()
	{
	}

	[Token(Token = "0x6000796")]
	[Address(RVA = "0xCE357C", Offset = "0xCE357C", VA = "0xCE357C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000797")]
	[Address(RVA = "0xCE35E4", Offset = "0xCE35E4", VA = "0xCE35E4")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000798")]
	[Address(RVA = "0xCE36C0", Offset = "0xCE36C0", VA = "0xCE36C0")]
	private void OnTriggerStay(Collider col)
	{
	}
}
[Token(Token = "0x2000132")]
public class ArcadeNoise : MonoBehaviour
{
	[Token(Token = "0x6000799")]
	[Address(RVA = "0xCE391C", Offset = "0xCE391C", VA = "0xCE391C")]
	public ArcadeNoise()
	{
	}

	[Token(Token = "0x600079A")]
	[Address(RVA = "0xCE3924", Offset = "0xCE3924", VA = "0xCE3924")]
	private void Update()
	{
	}
}
[Token(Token = "0x2000133")]
public class ArcadeSound : MonoBehaviour
{
	[Token(Token = "0x40008BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Vector2 randomRange;

	[Token(Token = "0x40008BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private uint oneShotArcade;

	[Token(Token = "0x40008BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private uint startArcade;

	[Token(Token = "0x40008BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private float timer;

	[Token(Token = "0x600079B")]
	[Address(RVA = "0xCE47D0", Offset = "0xCE47D0", VA = "0xCE47D0")]
	public ArcadeSound()
	{
	}

	[Token(Token = "0x600079C")]
	[Address(RVA = "0xCE47D8", Offset = "0xCE47D8", VA = "0xCE47D8")]
	private void Start()
	{
	}

	[Token(Token = "0x600079D")]
	[Address(RVA = "0xCE48A8", Offset = "0xCE48A8", VA = "0xCE48A8")]
	private void Update()
	{
	}

	[Token(Token = "0x600079E")]
	[Address(RVA = "0xCE4994", Offset = "0xCE4994", VA = "0xCE4994")]
	public void startSound()
	{
	}
}
[Token(Token = "0x2000134")]
public class BigHammerScript : MonoBehaviour
{
	[Token(Token = "0x2000322")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1F6B00", Offset = "0x1F6B00")]
	private sealed class <Shake>c__Iterator0 : IEnumerator, IDisposable, IEnumerator<object>
	{
		[Token(Token = "0x400127B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal int <i>__1;

		[Token(Token = "0x400127C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		internal BigHammerScript $this;

		[Token(Token = "0x400127D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal object $current;

		[Token(Token = "0x400127E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		internal bool $disposing;

		[Token(Token = "0x400127F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal int $PC;

		[Token(Token = "0x170002A5")]
		private object System.Collections.Generic.IEnumerator<object>.Current
		{
			[Token(Token = "0x60017F2")]
			[Address(RVA = "0xCE863C", Offset = "0xCE863C", VA = "0xCE863C", Slot = "8")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002A6")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60017F3")]
			[Address(RVA = "0xCE8644", Offset = "0xCE8644", VA = "0xCE8644", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60017F0")]
		[Address(RVA = "0xCE83A4", Offset = "0xCE83A4", VA = "0xCE83A4")]
		[DebuggerHidden]
		public <Shake>c__Iterator0()
		{
		}

		[Token(Token = "0x60017F1")]
		[Address(RVA = "0xCE83AC", Offset = "0xCE83AC", VA = "0xCE83AC", Slot = "5")]
		public bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60017F4")]
		[Address(RVA = "0xCE864C", Offset = "0xCE864C", VA = "0xCE864C", Slot = "7")]
		[DebuggerHidden]
		public void Dispose()
		{
		}

		[Token(Token = "0x60017F5")]
		[Address(RVA = "0xCE8660", Offset = "0xCE8660", VA = "0xCE8660", Slot = "6")]
		[DebuggerHidden]
		public void Reset()
		{
		}
	}

	[Token(Token = "0x40008BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public GameObject loadingData;

	[Token(Token = "0x40008C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public GameObject particle;

	[Token(Token = "0x40008C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public GameObject particleEnd;

	[Token(Token = "0x40008C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public DataToLoad[] BaseLevel;

	[Token(Token = "0x40008C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float MinimumVelocity;

	[Token(Token = "0x40008C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool Load;

	[Token(Token = "0x40008C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Vector3 basePos;

	[Token(Token = "0x40008C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Vector3 LastHitPos;

	[Token(Token = "0x40008C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private Rigidbody rb;

	[Token(Token = "0x40008C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private int hit;

	[Token(Token = "0x40008C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private int nextPrisonID;

	[Token(Token = "0x40008CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private uint hitSound;

	[Token(Token = "0x40008CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private uint endLevel;

	[Token(Token = "0x600079F")]
	[Address(RVA = "0xCE7108", Offset = "0xCE7108", VA = "0xCE7108")]
	public BigHammerScript()
	{
	}

	[Token(Token = "0x60007A0")]
	[Address(RVA = "0xCE7110", Offset = "0xCE7110", VA = "0xCE7110")]
	private void Start()
	{
	}

	[Token(Token = "0x60007A1")]
	[Address(RVA = "0xCE71E4", Offset = "0xCE71E4", VA = "0xCE71E4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60007A2")]
	[Address(RVA = "0xCE7268", Offset = "0xCE7268", VA = "0xCE7268")]
	private void Update()
	{
	}

	[Token(Token = "0x60007A3")]
	[Address(RVA = "0xCE8040", Offset = "0xCE8040", VA = "0xCE8040")]
	private void OnCollisionEnter(Collision other)
	{
	}

	[Token(Token = "0x60007A4")]
	[Address(RVA = "0xCE8324", Offset = "0xCE8324", VA = "0xCE8324")]
	[DebuggerHidden]
	private IEnumerator Shake()
	{
		return null;
	}
}
[Token(Token = "0x2000135")]
public enum BobbyState
{
	[Token(Token = "0x40008CD")]
	Idle,
	[Token(Token = "0x40008CE")]
	Fear,
	[Token(Token = "0x40008CF")]
	Happy,
	[Token(Token = "0x40008D0")]
	Talk
}
[Token(Token = "0x2000136")]
public class BobbyAnimationManagement : MenuObject
{
	[Token(Token = "0x40008D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private Animator anim;

	[Token(Token = "0x40008D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private BobbyState state;

	[Token(Token = "0x40008D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private LoadWithPion[] prisons;

	[Token(Token = "0x40008D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private int saveCount;

	[Token(Token = "0x40008D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private float temps;

	[Token(Token = "0x60007A5")]
	[Address(RVA = "0xCE904C", Offset = "0xCE904C", VA = "0xCE904C")]
	public BobbyAnimationManagement()
	{
	}

	[Token(Token = "0x60007A6")]
	[Address(RVA = "0xCE9054", Offset = "0xCE9054", VA = "0xCE9054", Slot = "4")]
	public override void Start()
	{
	}

	[Token(Token = "0x60007A7")]
	[Address(RVA = "0xCE9118", Offset = "0xCE9118", VA = "0xCE9118", Slot = "5")]
	public override void Update()
	{
	}
}
[Token(Token = "0x2000137")]
public class BobbyFirstLaunch : MonoBehaviour
{
	[Token(Token = "0x40008D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public float timeToShake;

	[Token(Token = "0x40008D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ParticleSystem[] particules;

	[Token(Token = "0x40008D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public ParticleSystem particle;

	[Token(Token = "0x40008D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private NVRInteractableItem obj;

	[Token(Token = "0x40008DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private Animator anim;

	[Token(Token = "0x40008DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private BobbyState state;

	[Token(Token = "0x40008DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private GameObject sp;

	[Token(Token = "0x40008DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float time;

	[Token(Token = "0x40008DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private bool loading;

	[Token(Token = "0x40008DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float respawnTime;

	[Token(Token = "0x40008E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private Transform origin;

	[Token(Token = "0x60007A8")]
	[Address(RVA = "0xCE94A0", Offset = "0xCE94A0", VA = "0xCE94A0")]
	public BobbyFirstLaunch()
	{
	}

	[Token(Token = "0x60007A9")]
	[Address(RVA = "0xCE94A8", Offset = "0xCE94A8", VA = "0xCE94A8")]
	private void Start()
	{
	}

	[Token(Token = "0x60007AA")]
	[Address(RVA = "0xCE95B8", Offset = "0xCE95B8", VA = "0xCE95B8")]
	private void Update()
	{
	}

	[Token(Token = "0x60007AB")]
	[Address(RVA = "0xCEA194", Offset = "0xCEA194", VA = "0xCEA194")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x60007AC")]
	[Address(RVA = "0xCE9DA0", Offset = "0xCE9DA0", VA = "0xCE9DA0")]
	public void ResetPos()
	{
	}

	[Token(Token = "0x60007AD")]
	[Address(RVA = "0xCE9CA0", Offset = "0xCE9CA0", VA = "0xCE9CA0")]
	private void LookForReset()
	{
	}

	[Token(Token = "0x60007AE")]
	[Address(RVA = "0xCE9790", Offset = "0xCE9790", VA = "0xCE9790")]
	private void AnimationManagement()
	{
	}
}
[Token(Token = "0x2000138")]
public class BobbyReturnToMenu : MonoBehaviour
{
	[Token(Token = "0x40008E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public float timeToShake;

	[Token(Token = "0x40008E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private NVRInteractableItem obj;

	[Token(Token = "0x40008E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private GameObject sp;

	[Token(Token = "0x40008E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Transform origin;

	[Token(Token = "0x40008E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private float time;

	[Token(Token = "0x40008E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float respawnTime;

	[Token(Token = "0x40008E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[HideInInspector]
	public bool Loading;

	[Token(Token = "0x60007AF")]
	[Address(RVA = "0xCEA260", Offset = "0xCEA260", VA = "0xCEA260")]
	public BobbyReturnToMenu()
	{
	}

	[Token(Token = "0x60007B0")]
	[Address(RVA = "0xCEA268", Offset = "0xCEA268", VA = "0xCEA268")]
	private void Start()
	{
	}

	[Token(Token = "0x60007B1")]
	[Address(RVA = "0xCEA35C", Offset = "0xCEA35C", VA = "0xCEA35C")]
	private void Update()
	{
	}

	[Token(Token = "0x60007B2")]
	[Address(RVA = "0xCEAE20", Offset = "0xCEAE20", VA = "0xCEAE20")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x60007B3")]
	[Address(RVA = "0xCEAA58", Offset = "0xCEAA58", VA = "0xCEAA58")]
	public void ResetPos()
	{
	}
}
[Token(Token = "0x2000139")]
public class BobbyRTMAnimation : MonoBehaviour
{
	[Token(Token = "0x40008E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private NVRInteractableItem obj;

	[Token(Token = "0x40008E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private Animator anim;

	[Token(Token = "0x40008EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private BobbyState state;

	[Token(Token = "0x60007B4")]
	[Address(RVA = "0xCEAEEC", Offset = "0xCEAEEC", VA = "0xCEAEEC")]
	public BobbyRTMAnimation()
	{
	}

	[Token(Token = "0x60007B5")]
	[Address(RVA = "0xCEAEF4", Offset = "0xCEAEF4", VA = "0xCEAEF4")]
	private void Start()
	{
	}

	[Token(Token = "0x60007B6")]
	[Address(RVA = "0xCEAF80", Offset = "0xCEAF80", VA = "0xCEAF80")]
	private void Update()
	{
	}
}
namespace Trebuchet
{
	[Token(Token = "0x200013A")]
	public class BobbyRTMNoPooling : MonoBehaviour
	{
		[Token(Token = "0x40008EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float timeToShake;

		[Token(Token = "0x40008EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private NVRInteractableItem obj;

		[Token(Token = "0x40008ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private GameObject sp;

		[Token(Token = "0x40008EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private float time;

		[Token(Token = "0x40008EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private float respawnTime;

		[Token(Token = "0x40008F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject poofParticle;

		[Token(Token = "0x40008F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[HideInInspector]
		public bool Loading;

		[Token(Token = "0x60007B7")]
		[Address(RVA = "0xCBFE70", Offset = "0xCBFE70", VA = "0xCBFE70")]
		public BobbyRTMNoPooling()
		{
		}

		[Token(Token = "0x60007B8")]
		[Address(RVA = "0xCBFE78", Offset = "0xCBFE78", VA = "0xCBFE78")]
		private void Start()
		{
		}

		[Token(Token = "0x60007B9")]
		[Address(RVA = "0xCBFF40", Offset = "0xCBFF40", VA = "0xCBFF40")]
		private void Update()
		{
		}

		[Token(Token = "0x60007BA")]
		[Address(RVA = "0xCC04A0", Offset = "0xCC04A0", VA = "0xCC04A0")]
		private void FixedUpdate()
		{
		}
	}
}
[Token(Token = "0x200013B")]
public class EndDragHandler : MonoBehaviour, IEndDragHandler, IEventSystemHandler
{
	[Token(Token = "0x40008F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public UnityEvent OnDrag;

	[Token(Token = "0x60007BB")]
	[Address(RVA = "0xC52C94", Offset = "0xC52C94", VA = "0xC52C94")]
	public EndDragHandler()
	{
	}

	[Token(Token = "0x60007BC")]
	[Address(RVA = "0xC52C9C", Offset = "0xC52C9C", VA = "0xC52C9C", Slot = "4")]
	public void OnEndDrag(PointerEventData eventData)
	{
	}
}
[Token(Token = "0x200013C")]
public class FirstMenuStandingSensitiveAsset : MonoBehaviour
{
	[Token(Token = "0x60007BD")]
	[Address(RVA = "0xC5719C", Offset = "0xC5719C", VA = "0xC5719C")]
	public FirstMenuStandingSensitiveAsset()
	{
	}

	[Token(Token = "0x60007BE")]
	[Address(RVA = "0xC571A4", Offset = "0xC571A4", VA = "0xC571A4")]
	private void Start()
	{
	}
}
[Token(Token = "0x200013D")]
public class JailWaypoint : MonoBehaviour
{
	[Token(Token = "0x60007BF")]
	[Address(RVA = "0xC716C4", Offset = "0xC716C4", VA = "0xC716C4")]
	public JailWaypoint()
	{
	}

	[Token(Token = "0x60007C0")]
	[Address(RVA = "0xC716CC", Offset = "0xC716CC", VA = "0xC716CC")]
	private void Start()
	{
	}
}
[Token(Token = "0x200013E")]
public class LoadingManager : MonoBehaviour
{
	[Token(Token = "0x2000323")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1F6BA0", Offset = "0x1F6BA0")]
	private sealed class <FadeNLoad>c__Iterator0 : IEnumerator, IDisposable, IEnumerator<object>
	{
		[Token(Token = "0x4001280")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal string scene;

		[Token(Token = "0x4001281")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		internal SceneLoader.SceneInformations <loadingScene>__0;

		[Token(Token = "0x4001282")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal bool stayFaded;

		[Token(Token = "0x4001283")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		internal LoadingManager $this;

		[Token(Token = "0x4001284")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal object $current;

		[Token(Token = "0x4001285")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		internal bool $disposing;

		[Token(Token = "0x4001286")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal int $PC;

		[Token(Token = "0x170002A7")]
		private object System.Collections.Generic.IEnumerator<object>.Current
		{
			[Token(Token = "0x60017F8")]
			[Address(RVA = "0xC8199C", Offset = "0xC8199C", VA = "0xC8199C", Slot = "8")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002A8")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60017F9")]
			[Address(RVA = "0xC819A4", Offset = "0xC819A4", VA = "0xC819A4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60017F6")]
		[Address(RVA = "0xC81444", Offset = "0xC81444", VA = "0xC81444")]
		[DebuggerHidden]
		public <FadeNLoad>c__Iterator0()
		{
		}

		[Token(Token = "0x60017F7")]
		[Address(RVA = "0xC815D4", Offset = "0xC815D4", VA = "0xC815D4", Slot = "5")]
		public bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60017FA")]
		[Address(RVA = "0xC819AC", Offset = "0xC819AC", VA = "0xC819AC", Slot = "7")]
		[DebuggerHidden]
		public void Dispose()
		{
		}

		[Token(Token = "0x60017FB")]
		[Address(RVA = "0xC819C0", Offset = "0xC819C0", VA = "0xC819C0", Slot = "6")]
		[DebuggerHidden]
		public void Reset()
		{
		}
	}

	[Token(Token = "0x2000324")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1F6C00", Offset = "0x1F6C00")]
	private sealed class <PreloadPrisons>c__Iterator1 : IEnumerator, IDisposable, IEnumerator<object>
	{
		[Token(Token = "0x4001287")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal LoadingManager $this;

		[Token(Token = "0x4001288")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		internal object $current;

		[Token(Token = "0x4001289")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal bool $disposing;

		[Token(Token = "0x400128A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		internal int $PC;

		[Token(Token = "0x170002A9")]
		private object System.Collections.Generic.IEnumerator<object>.Current
		{
			[Token(Token = "0x60017FE")]
			[Address(RVA = "0xC81CA8", Offset = "0xC81CA8", VA = "0xC81CA8", Slot = "8")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002AA")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60017FF")]
			[Address(RVA = "0xC81CB0", Offset = "0xC81CB0", VA = "0xC81CB0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60017FC")]
		[Address(RVA = "0xC815CC", Offset = "0xC815CC", VA = "0xC815CC")]
		[DebuggerHidden]
		public <PreloadPrisons>c__Iterator1()
		{
		}

		[Token(Token = "0x60017FD")]
		[Address(RVA = "0xC81A44", Offset = "0xC81A44", VA = "0xC81A44", Slot = "5")]
		public bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001800")]
		[Address(RVA = "0xC81CB8", Offset = "0xC81CB8", VA = "0xC81CB8", Slot = "7")]
		[DebuggerHidden]
		public void Dispose()
		{
		}

		[Token(Token = "0x6001801")]
		[Address(RVA = "0xC81CCC", Offset = "0xC81CCC", VA = "0xC81CCC", Slot = "6")]
		[DebuggerHidden]
		public void Reset()
		{
		}
	}

	[Token(Token = "0x40008F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static LoadingManager Instance;

	[Token(Token = "0x40008F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private bool loading;

	[Token(Token = "0x170000C4")]
	public bool IsLoading
	{
		[Token(Token = "0x60007C2")]
		[Address(RVA = "0xC810AC", Offset = "0xC810AC", VA = "0xC810AC")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170000C5")]
	public string CalibrationScene
	{
		[Token(Token = "0x60007C3")]
		[Address(RVA = "0xC810B4", Offset = "0xC810B4", VA = "0xC810B4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60007C1")]
	[Address(RVA = "0xC810A4", Offset = "0xC810A4", VA = "0xC810A4")]
	public LoadingManager()
	{
	}

	[Token(Token = "0x60007C4")]
	[Address(RVA = "0xC81110", Offset = "0xC81110", VA = "0xC81110")]
	private void Awake()
	{
	}

	[Token(Token = "0x60007C5")]
	[Address(RVA = "0xC811C0", Offset = "0xC811C0", VA = "0xC811C0")]
	private void Start()
	{
	}

	[Token(Token = "0x60007C6")]
	[Address(RVA = "0xC811F8", Offset = "0xC811F8", VA = "0xC811F8")]
	private string NextSceneFromLoading()
	{
		return null;
	}

	[Token(Token = "0x60007C7")]
	[Address(RVA = "0xC81340", Offset = "0xC81340", VA = "0xC81340")]
	public void LoadMenuFormLoadingScene()
	{
	}

	[Token(Token = "0x60007C8")]
	[Address(RVA = "0xC81360", Offset = "0xC81360", VA = "0xC81360")]
	public void ChangeScene(string scene)
	{
	}

	[Token(Token = "0x60007C9")]
	[Address(RVA = "0xC81398", Offset = "0xC81398", VA = "0xC81398")]
	[DebuggerHidden]
	public IEnumerator FadeNLoad(string scene, bool stayFaded = false)
	{
		return null;
	}

	[Token(Token = "0x60007CA")]
	[Address(RVA = "0xC8144C", Offset = "0xC8144C", VA = "0xC8144C")]
	public void Unfade()
	{
	}

	[Token(Token = "0x60007CB")]
	[Address(RVA = "0xC8154C", Offset = "0xC8154C", VA = "0xC8154C")]
	[DebuggerHidden]
	private IEnumerator PreloadPrisons()
	{
		return null;
	}

	[Token(Token = "0x60007CC")]
	[Address(RVA = "0xC8130C", Offset = "0xC8130C", VA = "0xC8130C")]
	private SceneLoader.SceneInformations PreloadPrison(string name)
	{
		return null;
	}
}
[Token(Token = "0x200013F")]
public enum CompareTo
{
	[Token(Token = "0x40008F6")]
	PrisonUnlock,
	[Token(Token = "0x40008F7")]
	TutorialDone
}
[Token(Token = "0x2000140")]
public class LoadUnlockProgression : MonoBehaviour
{
	[Token(Token = "0x40008F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public int ID;

	[Token(Token = "0x40008F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public CompareTo compareIDTo;

	[Token(Token = "0x40008FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public bool isActive;

	[Token(Token = "0x40008FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x15")]
	public bool isArcadeBorne;

	[Token(Token = "0x40008FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TextMeshProUGUI scoreText;

	[Token(Token = "0x60007CD")]
	[Address(RVA = "0xC82B04", Offset = "0xC82B04", VA = "0xC82B04")]
	public LoadUnlockProgression()
	{
	}

	[Token(Token = "0x60007CE")]
	[Address(RVA = "0xC82B0C", Offset = "0xC82B0C", VA = "0xC82B0C")]
	public void Init()
	{
	}
}
[Token(Token = "0x2000141")]
public class LoadWithPion : MonoBehaviour
{
	[Token(Token = "0x40008FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public UnityEvent action;

	[Token(Token = "0x40008FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private float timer;

	[Token(Token = "0x40008FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private bool finished;

	[Token(Token = "0x4000900")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x15")]
	private bool active;

	[Token(Token = "0x60007CF")]
	[Address(RVA = "0xC82EAC", Offset = "0xC82EAC", VA = "0xC82EAC")]
	public LoadWithPion()
	{
	}

	[Token(Token = "0x60007D0")]
	[Address(RVA = "0xC82EBC", Offset = "0xC82EBC", VA = "0xC82EBC")]
	private void OnTriggerStay(Collider col)
	{
	}

	[Token(Token = "0x60007D1")]
	[Address(RVA = "0xC83038", Offset = "0xC83038", VA = "0xC83038")]
	private void OnTriggerEnter(Collider col)
	{
	}

	[Token(Token = "0x60007D2")]
	[Address(RVA = "0xC83178", Offset = "0xC83178", VA = "0xC83178")]
	private void OnTriggerExit(Collider col)
	{
	}
}
[Token(Token = "0x2000142")]
public class LogoManager : MonoBehaviour
{
	[Token(Token = "0x4000901")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public SpriteRenderer[] sprites;

	[Token(Token = "0x4000902")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float Delay;

	[Token(Token = "0x4000903")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float animationDuration;

	[Token(Token = "0x4000904")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float FadeDelay;

	[Token(Token = "0x4000905")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[HideInInspector]
	public bool CanLaunchGame;

	[Token(Token = "0x4000906")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
	private bool freeze;

	[Token(Token = "0x4000907")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Transform target;

	[Token(Token = "0x4000908")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private bool readyToFade;

	[Token(Token = "0x4000909")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float timer;

	[Token(Token = "0x400090A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private int actualLogo;

	[Token(Token = "0x60007D3")]
	[Address(RVA = "0xC832B8", Offset = "0xC832B8", VA = "0xC832B8")]
	public LogoManager()
	{
	}

	[Token(Token = "0x60007D4")]
	[Address(RVA = "0xC832C0", Offset = "0xC832C0", VA = "0xC832C0")]
	private void Start()
	{
	}

	[Token(Token = "0x60007D5")]
	[Address(RVA = "0xC83304", Offset = "0xC83304", VA = "0xC83304")]
	private void Update()
	{
	}

	[Token(Token = "0x60007D6")]
	[Address(RVA = "0xC8332C", Offset = "0xC8332C", VA = "0xC8332C")]
	private void followTarget()
	{
	}

	[Token(Token = "0x60007D7")]
	[Address(RVA = "0xC8359C", Offset = "0xC8359C", VA = "0xC8359C")]
	private void RunAnimation()
	{
	}
}
namespace Trebuchet
{
	[Token(Token = "0x2000143")]
	public class MedalManager : MonoBehaviour
	{
		[Token(Token = "0x2000325")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1F6C80", Offset = "0x1F6C80")]
		private sealed class <LateStart>c__Iterator0 : IEnumerator, IDisposable, IEnumerator<object>
		{
			[Token(Token = "0x400128B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			internal MedalManager $this;

			[Token(Token = "0x400128C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			internal object $current;

			[Token(Token = "0x400128D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal bool $disposing;

			[Token(Token = "0x400128E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			internal int $PC;

			[Token(Token = "0x170002AB")]
			private object System.Collections.Generic.IEnumerator<object>.Current
			{
				[Token(Token = "0x6001804")]
				[Address(RVA = "0xCC5E78", Offset = "0xCC5E78", VA = "0xCC5E78", Slot = "8")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002AC")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001805")]
				[Address(RVA = "0xCC5E80", Offset = "0xCC5E80", VA = "0xCC5E80", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001802")]
			[Address(RVA = "0xCC5AA0", Offset = "0xCC5AA0", VA = "0xCC5AA0")]
			[DebuggerHidden]
			public <LateStart>c__Iterator0()
			{
			}

			[Token(Token = "0x6001803")]
			[Address(RVA = "0xCC5D90", Offset = "0xCC5D90", VA = "0xCC5D90", Slot = "5")]
			public bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001806")]
			[Address(RVA = "0xCC5E88", Offset = "0xCC5E88", VA = "0xCC5E88", Slot = "7")]
			[DebuggerHidden]
			public void Dispose()
			{
			}

			[Token(Token = "0x6001807")]
			[Address(RVA = "0xCC5E9C", Offset = "0xCC5E9C", VA = "0xCC5E9C", Slot = "6")]
			[DebuggerHidden]
			public void Reset()
			{
			}
		}

		[Token(Token = "0x400090B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public string prisonName;

		[Token(Token = "0x400090C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Material[] medalMats;

		[Token(Token = "0x400090D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float rotY;

		[Token(Token = "0x60007D8")]
		[Address(RVA = "0xCC59F4", Offset = "0xCC59F4", VA = "0xCC59F4")]
		public MedalManager()
		{
		}

		[Token(Token = "0x60007D9")]
		[Address(RVA = "0xCC59FC", Offset = "0xCC59FC", VA = "0xCC59FC")]
		private void Start()
		{
		}

		[Token(Token = "0x60007DA")]
		[Address(RVA = "0xCC5A20", Offset = "0xCC5A20", VA = "0xCC5A20")]
		[DebuggerHidden]
		private IEnumerator LateStart()
		{
			return null;
		}

		[Token(Token = "0x60007DB")]
		[Address(RVA = "0xCC5AA8", Offset = "0xCC5AA8", VA = "0xCC5AA8")]
		private void Update()
		{
		}

		[Token(Token = "0x60007DC")]
		[Address(RVA = "0xCC5BE4", Offset = "0xCC5BE4", VA = "0xCC5BE4")]
		private void CheckHighScore()
		{
		}
	}
}
[Token(Token = "0x2000144")]
public class MenuMusicPlayer : MonoBehaviour
{
	[Token(Token = "0x2000326")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1F6CF0", Offset = "0x1F6CF0")]
	private sealed class <StartSound>c__Iterator0 : IEnumerator, IDisposable, IEnumerator<object>
	{
		[Token(Token = "0x400128F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal bool loadLogo;

		[Token(Token = "0x4001290")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		internal MenuMusicPlayer $this;

		[Token(Token = "0x4001291")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal object $current;

		[Token(Token = "0x4001292")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		internal bool $disposing;

		[Token(Token = "0x4001293")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal int $PC;

		[Token(Token = "0x170002AD")]
		private object System.Collections.Generic.IEnumerator<object>.Current
		{
			[Token(Token = "0x600180A")]
			[Address(RVA = "0xC910DC", Offset = "0xC910DC", VA = "0xC910DC", Slot = "8")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002AE")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600180B")]
			[Address(RVA = "0xC910E4", Offset = "0xC910E4", VA = "0xC910E4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001808")]
		[Address(RVA = "0xC90C98", Offset = "0xC90C98", VA = "0xC90C98")]
		[DebuggerHidden]
		public <StartSound>c__Iterator0()
		{
		}

		[Token(Token = "0x6001809")]
		[Address(RVA = "0xC90EA0", Offset = "0xC90EA0", VA = "0xC90EA0", Slot = "5")]
		public bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600180C")]
		[Address(RVA = "0xC910EC", Offset = "0xC910EC", VA = "0xC910EC", Slot = "7")]
		[DebuggerHidden]
		public void Dispose()
		{
		}

		[Token(Token = "0x600180D")]
		[Address(RVA = "0xC91100", Offset = "0xC91100", VA = "0xC91100", Slot = "6")]
		[DebuggerHidden]
		public void Reset()
		{
		}
	}

	[Token(Token = "0x400090E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static MenuMusicPlayer Instance;

	[Token(Token = "0x400090F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private uint musicEvent;

	[Token(Token = "0x60007DD")]
	[Address(RVA = "0xC90980", Offset = "0xC90980", VA = "0xC90980")]
	public MenuMusicPlayer()
	{
	}

	[Token(Token = "0x60007DE")]
	[Address(RVA = "0xC90988", Offset = "0xC90988", VA = "0xC90988")]
	private void Awake()
	{
	}

	[Token(Token = "0x60007DF")]
	[Address(RVA = "0xC90B14", Offset = "0xC90B14", VA = "0xC90B14")]
	private void Start()
	{
	}

	[Token(Token = "0x60007E0")]
	[Address(RVA = "0xC90C00", Offset = "0xC90C00", VA = "0xC90C00")]
	[DebuggerHidden]
	private IEnumerator StartSound(bool loadLogo)
	{
		return null;
	}

	[Token(Token = "0x60007E1")]
	[Address(RVA = "0xC90CA0", Offset = "0xC90CA0", VA = "0xC90CA0")]
	private void ActiveSceneChanged(Scene current, Scene next)
	{
	}
}
[Token(Token = "0x2000145")]
public class MenuObject : MonoBehaviour
{
	[Token(Token = "0x4000910")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public float respawnDistance;

	[Token(Token = "0x4000911")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public GameObject particle;

	[Token(Token = "0x4000912")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	[HideInInspector]
	public bool StopReset;

	[Token(Token = "0x4000913")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private ParticleSystem[] _particulePool;

	[Token(Token = "0x4000914")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private float _timer;

	[Token(Token = "0x4000915")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Transform _OriginParent;

	[Token(Token = "0x4000916")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Vector3 _localOriginPos;

	[Token(Token = "0x4000917")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Quaternion _localOriginRot;

	[Token(Token = "0x4000918")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool _overriden;

	[Token(Token = "0x4000919")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private Vector3 _overridePos;

	[Token(Token = "0x400091A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Quaternion _overrideRot;

	[Token(Token = "0x400091B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	protected NVRInteractableItem _obj;

	[Token(Token = "0x170000C6")]
	private Vector3 targetPosition
	{
		[Token(Token = "0x60007E3")]
		[Address(RVA = "0xC9118C", Offset = "0xC9118C", VA = "0xC9118C")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x170000C7")]
	private Quaternion targetRotation
	{
		[Token(Token = "0x60007E4")]
		[Address(RVA = "0xC911B8", Offset = "0xC911B8", VA = "0xC911B8")]
		get
		{
			return default(Quaternion);
		}
	}

	[Token(Token = "0x60007E2")]
	[Address(RVA = "0xC91184", Offset = "0xC91184", VA = "0xC91184")]
	public MenuObject()
	{
	}

	[Token(Token = "0x60007E5")]
	[Address(RVA = "0xC911EC", Offset = "0xC911EC", VA = "0xC911EC", Slot = "4")]
	public virtual void Start()
	{
	}

	[Token(Token = "0x60007E6")]
	[Address(RVA = "0xC91324", Offset = "0xC91324", VA = "0xC91324", Slot = "5")]
	public virtual void Update()
	{
	}

	[Token(Token = "0x60007E7")]
	[Address(RVA = "0xC91328", Offset = "0xC91328", VA = "0xC91328")]
	private void CheckPos()
	{
	}

	[Token(Token = "0x60007E8")]
	[Address(RVA = "0xC917A4", Offset = "0xC917A4", VA = "0xC917A4")]
	public void Override(Transform targetTransform)
	{
	}

	[Token(Token = "0x60007E9")]
	[Address(RVA = "0xC91864", Offset = "0xC91864", VA = "0xC91864")]
	public void ResetOverride()
	{
	}

	[Token(Token = "0x60007EA")]
	[Address(RVA = "0xC915A4", Offset = "0xC915A4", VA = "0xC915A4")]
	public void ResetPos()
	{
	}

	[Token(Token = "0x60007EB")]
	[Address(RVA = "0xC918AC", Offset = "0xC918AC", VA = "0xC918AC")]
	private void ParticleManagement()
	{
	}
}
[Token(Token = "0x2000146")]
public class PhysicalLever : MonoBehaviour
{
	[Token(Token = "0x2000327")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1F6D70", Offset = "0x1F6D70")]
	private sealed class <AdditionalWaitTime>c__Iterator0 : IEnumerator, IDisposable, IEnumerator<object>
	{
		[Token(Token = "0x4001294")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal PhysicalLever $this;

		[Token(Token = "0x4001295")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		internal object $current;

		[Token(Token = "0x4001296")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal bool $disposing;

		[Token(Token = "0x4001297")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		internal int $PC;

		[Token(Token = "0x170002AF")]
		private object System.Collections.Generic.IEnumerator<object>.Current
		{
			[Token(Token = "0x6001810")]
			[Address(RVA = "0x261614", Offset = "0x261614", VA = "0x261614", Slot = "8")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002B0")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001811")]
			[Address(RVA = "0x26161C", Offset = "0x26161C", VA = "0x26161C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600180E")]
		[Address(RVA = "0x26150C", Offset = "0x26150C", VA = "0x26150C")]
		[DebuggerHidden]
		public <AdditionalWaitTime>c__Iterator0()
		{
		}

		[Token(Token = "0x600180F")]
		[Address(RVA = "0x261514", Offset = "0x261514", VA = "0x261514", Slot = "5")]
		public bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001812")]
		[Address(RVA = "0x261624", Offset = "0x261624", VA = "0x261624", Slot = "7")]
		[DebuggerHidden]
		public void Dispose()
		{
		}

		[Token(Token = "0x6001813")]
		[Address(RVA = "0x261638", Offset = "0x261638", VA = "0x261638", Slot = "6")]
		[DebuggerHidden]
		public void Reset()
		{
		}
	}

	[Token(Token = "0x400091C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public UnityEvent OnActivation;

	[Token(Token = "0x400091D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int maxActiveObject;

	[Token(Token = "0x400091E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public int delayBetweenActivation;

	[Token(Token = "0x400091F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool active;

	[Token(Token = "0x4000920")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	private bool Spawning;

	[Token(Token = "0x4000921")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private GameObject Axe;

	[Token(Token = "0x60007EC")]
	[Address(RVA = "0x260F9C", Offset = "0x260F9C", VA = "0x260F9C")]
	public PhysicalLever()
	{
	}

	[Token(Token = "0x60007ED")]
	[Address(RVA = "0x260FB4", Offset = "0x260FB4", VA = "0x260FB4")]
	private void Start()
	{
	}

	[Token(Token = "0x60007EE")]
	[Address(RVA = "0x261058", Offset = "0x261058", VA = "0x261058")]
	private void Update()
	{
	}

	[Token(Token = "0x60007EF")]
	[Address(RVA = "0x26148C", Offset = "0x26148C", VA = "0x26148C")]
	[DebuggerHidden]
	private IEnumerator AdditionalWaitTime()
	{
		return null;
	}
}
[Token(Token = "0x2000147")]
public class PhysicalSaveLoader : MonoBehaviour
{
	[Token(Token = "0x4000922")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public GameObject loadSprite;

	[Token(Token = "0x4000923")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[HideInInspector]
	public int saveID;

	[Token(Token = "0x4000924")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public TextMeshProUGUI dateTimeData;

	[Token(Token = "0x4000925")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TextMeshProUGUI convictNameData;

	[Token(Token = "0x4000926")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public TextMeshProUGUI daysPassedData;

	[Token(Token = "0x4000927")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TextMeshProUGUI cashData;

	[Token(Token = "0x4000928")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public TextMeshProUGUI GameType;

	[Token(Token = "0x4000929")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Image PrisonImage;

	[Token(Token = "0x400092A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public TextMeshProUGUI superTierTracker;

	[Token(Token = "0x400092B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public TierTrackerWrapper[] tierTrackers;

	[Token(Token = "0x400092C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1F6DE0", Offset = "0x1F6DE0")]
	[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0x1F6DE0", Offset = "0x1F6DE0")]
	private bool <Sandbox>k__BackingField;

	[Token(Token = "0x400092D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1F6E14", Offset = "0x1F6E14")]
	[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0x1F6E14", Offset = "0x1F6E14")]
	private int <PrisonId>k__BackingField;

	[Token(Token = "0x400092E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public Sprite[] prisonSprites;

	[Token(Token = "0x400092F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[HideInInspector]
	public Vector2 tierData;

	[Token(Token = "0x4000930")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool load;

	[Token(Token = "0x170000C8")]
	public bool Sandbox
	{
		[Token(Token = "0x60007F1")]
		[Address(RVA = "0x2616C4", Offset = "0x2616C4", VA = "0x2616C4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1F6E58", Offset = "0x1F6E58")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60007F2")]
		[Address(RVA = "0x2616CC", Offset = "0x2616CC", VA = "0x2616CC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1F6E68", Offset = "0x1F6E68")]
		private set
		{
		}
	}

	[Token(Token = "0x170000C9")]
	public int PrisonId
	{
		[Token(Token = "0x60007F3")]
		[Address(RVA = "0x2616D4", Offset = "0x2616D4", VA = "0x2616D4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1F6E78", Offset = "0x1F6E78")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60007F4")]
		[Address(RVA = "0x2616DC", Offset = "0x2616DC", VA = "0x2616DC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1F6E88", Offset = "0x1F6E88")]
		private set
		{
		}
	}

	[Token(Token = "0x60007F0")]
	[Address(RVA = "0x2616BC", Offset = "0x2616BC", VA = "0x2616BC")]
	public PhysicalSaveLoader()
	{
	}

	[Token(Token = "0x60007F5")]
	[Address(RVA = "0x2616E4", Offset = "0x2616E4", VA = "0x2616E4")]
	public void SetupPhysicalFile(string dateTime, string convictName, string daysPassed, string cash, int actualTier, int maxTier, bool sandbox, int prisonId, bool overrideText = false)
	{
	}

	[Token(Token = "0x60007F6")]
	[Address(RVA = "0x261EA8", Offset = "0x261EA8", VA = "0x261EA8")]
	private void OnTriggerEnter(Collider other)
	{
	}
}
[Token(Token = "0x2000148")]
public class PrewarmDebuger : MonoBehaviour
{
	[Token(Token = "0x60007F7")]
	[Address(RVA = "0x26CE24", Offset = "0x26CE24", VA = "0x26CE24")]
	public PrewarmDebuger()
	{
	}

	[Token(Token = "0x60007F8")]
	[Address(RVA = "0x26CE2C", Offset = "0x26CE2C", VA = "0x26CE2C")]
	private void Start()
	{
	}
}
[Token(Token = "0x2000149")]
public class SandboxCardboardBox : MonoBehaviour
{
	[Token(Token = "0x4000931")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public GameObject particle;

	[Token(Token = "0x4000932")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public GameObject LoadingDataPrefab;

	[Token(Token = "0x4000933")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public Transform[] positions;

	[Token(Token = "0x4000934")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform pool;

	[Token(Token = "0x4000935")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Button startButton;

	[Token(Token = "0x4000936")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int lastCollider;

	[Token(Token = "0x4000937")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Rigidbody StartingRessource;

	[Token(Token = "0x4000938")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Rigidbody Prison;

	[Token(Token = "0x4000939")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private Rigidbody GameDuration;

	[Token(Token = "0x60007F9")]
	[Address(RVA = "0xCA75B4", Offset = "0xCA75B4", VA = "0xCA75B4")]
	public SandboxCardboardBox()
	{
	}

	[Token(Token = "0x60007FA")]
	[Address(RVA = "0xCA75BC", Offset = "0xCA75BC", VA = "0xCA75BC")]
	private void Start()
	{
	}

	[Token(Token = "0x60007FB")]
	[Address(RVA = "0xCA768C", Offset = "0xCA768C", VA = "0xCA768C")]
	private void OnTriggerEnter(Collider col)
	{
	}

	[Token(Token = "0x60007FC")]
	[Address(RVA = "0xCA8814", Offset = "0xCA8814", VA = "0xCA8814")]
	public void StartSandBoxGame()
	{
	}

	[Token(Token = "0x60007FD")]
	[Address(RVA = "0xCA79D0", Offset = "0xCA79D0", VA = "0xCA79D0")]
	private bool CheckDelay()
	{
		return default(bool);
	}

	[Token(Token = "0x60007FE")]
	[Address(RVA = "0xCA7A04", Offset = "0xCA7A04", VA = "0xCA7A04")]
	private bool TriggerRessource(Rigidbody rb)
	{
		return default(bool);
	}

	[Token(Token = "0x60007FF")]
	[Address(RVA = "0xCA7ED4", Offset = "0xCA7ED4", VA = "0xCA7ED4")]
	private bool TriggerPrison(Rigidbody rb)
	{
		return default(bool);
	}

	[Token(Token = "0x6000800")]
	[Address(RVA = "0xCA829C", Offset = "0xCA829C", VA = "0xCA829C")]
	private bool TriggerTime(Rigidbody rb)
	{
		return default(bool);
	}

	[Token(Token = "0x6000801")]
	[Address(RVA = "0xCA9480", Offset = "0xCA9480", VA = "0xCA9480")]
	private static void TriggerGeneric(Rigidbody new_choice, Transform position, ref Rigidbody reference)
	{
	}

	[Token(Token = "0x6000802")]
	[Address(RVA = "0xCA8608", Offset = "0xCA8608", VA = "0xCA8608")]
	private void CreateParticule()
	{
	}
}
[Token(Token = "0x200014A")]
public class SaveDestroyer : NVRInteractable
{
	[Token(Token = "0x2000328")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1F6EB8", Offset = "0x1F6EB8")]
	private sealed class <Freeze>c__Iterator0 : IEnumerator, IDisposable, IEnumerator<object>
	{
		[Token(Token = "0x4001298")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal SaveDestroyer $this;

		[Token(Token = "0x4001299")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		internal object $current;

		[Token(Token = "0x400129A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal bool $disposing;

		[Token(Token = "0x400129B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		internal int $PC;

		[Token(Token = "0x170002B1")]
		private object System.Collections.Generic.IEnumerator<object>.Current
		{
			[Token(Token = "0x6001816")]
			[Address(RVA = "0xCAC400", Offset = "0xCAC400", VA = "0xCAC400", Slot = "8")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002B2")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001817")]
			[Address(RVA = "0xCAC408", Offset = "0xCAC408", VA = "0xCAC408", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001814")]
		[Address(RVA = "0xCAC244", Offset = "0xCAC244", VA = "0xCAC244")]
		[DebuggerHidden]
		public <Freeze>c__Iterator0()
		{
		}

		[Token(Token = "0x6001815")]
		[Address(RVA = "0xCAC308", Offset = "0xCAC308", VA = "0xCAC308", Slot = "5")]
		public bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001818")]
		[Address(RVA = "0xCAC410", Offset = "0xCAC410", VA = "0xCAC410", Slot = "7")]
		[DebuggerHidden]
		public void Dispose()
		{
		}

		[Token(Token = "0x6001819")]
		[Address(RVA = "0xCAC424", Offset = "0xCAC424", VA = "0xCAC424", Slot = "6")]
		[DebuggerHidden]
		public void Reset()
		{
		}
	}

	[Token(Token = "0x400093A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float MovementRange;

	[Token(Token = "0x400093B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float AngleRange;

	[Token(Token = "0x400093C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private Animator anim;

	[Token(Token = "0x400093D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float timer;

	[Token(Token = "0x400093E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private GameObject sprite;

	[Token(Token = "0x400093F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private GameObject saveToDestroy;

	[Token(Token = "0x4000940")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private int saveIDtoDestroy;

	[Token(Token = "0x4000941")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private ParticleSystem particule;

	[Token(Token = "0x4000942")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public PhysicalSaveLoader dummyFile;

	[Token(Token = "0x4000943")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private HighlightManager HL;

	[Token(Token = "0x4000944")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private bool active;

	[Token(Token = "0x4000945")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x65")]
	private bool loaded;

	[Token(Token = "0x4000946")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x66")]
	private bool freeze;

	[Token(Token = "0x4000947")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private uint playEvent;

	[Token(Token = "0x4000948")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private uint stopEvent;

	[Token(Token = "0x4000949")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private uint pressEvent;

	[Token(Token = "0x400094A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	[SerializeField]
	private float timeToDestroy;

	[Token(Token = "0x400094B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private float timeToDestroyAnim;

	[Token(Token = "0x6000803")]
	[Address(RVA = "0xCAB258", Offset = "0xCAB258", VA = "0xCAB258")]
	public SaveDestroyer()
	{
	}

	[Token(Token = "0x6000804")]
	[Address(RVA = "0xCAB270", Offset = "0xCAB270", VA = "0xCAB270", Slot = "6")]
	protected override void Start()
	{
	}

	[Token(Token = "0x6000805")]
	[Address(RVA = "0xCAB504", Offset = "0xCAB504", VA = "0xCAB504")]
	public void buttonFeedback()
	{
	}

	[Token(Token = "0x6000806")]
	[Address(RVA = "0xCAB5A4", Offset = "0xCAB5A4", VA = "0xCAB5A4")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000807")]
	[Address(RVA = "0xCABAE4", Offset = "0xCABAE4", VA = "0xCABAE4")]
	public void LaunchDelete()
	{
	}

	[Token(Token = "0x6000808")]
	[Address(RVA = "0xCABAF0", Offset = "0xCABAF0", VA = "0xCABAF0", Slot = "9")]
	public override void UpdateColliders()
	{
	}

	[Token(Token = "0x6000809")]
	[Address(RVA = "0xCABB9C", Offset = "0xCABB9C", VA = "0xCABB9C")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x600080A")]
	[Address(RVA = "0xCABFB4", Offset = "0xCABFB4", VA = "0xCABFB4", Slot = "14")]
	public override void HoveringUpdate(NVRHand hand, float forTime)
	{
	}

	[Token(Token = "0x600080B")]
	[Address(RVA = "0xCAC094", Offset = "0xCAC094", VA = "0xCAC094", Slot = "12")]
	public override void BeginInteraction(NVRHand hand)
	{
	}

	[Token(Token = "0x600080C")]
	[Address(RVA = "0xCAC1C4", Offset = "0xCAC1C4", VA = "0xCAC1C4")]
	[DebuggerHidden]
	private IEnumerator Freeze()
	{
		return null;
	}

	[Token(Token = "0x600080D")]
	[Address(RVA = "0xCAC24C", Offset = "0xCAC24C", VA = "0xCAC24C", Slot = "21")]
	protected override void OnDestroy()
	{
	}
}
[Token(Token = "0x200014B")]
public class SimpleVideoPlay : MonoBehaviour
{
	[Token(Token = "0x400094C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x1F6F18", Offset = "0x1F6F18")]
	public string VideoPath;

	[Token(Token = "0x600080E")]
	[Address(RVA = "0xCB7534", Offset = "0xCB7534", VA = "0xCB7534")]
	public SimpleVideoPlay()
	{
	}

	[Token(Token = "0x600080F")]
	[Address(RVA = "0xCB75A0", Offset = "0xCB75A0", VA = "0xCB75A0")]
	private void Start()
	{
	}
}
[Token(Token = "0x200014C")]
public class Singleton : MonoBehaviour
{
	[Token(Token = "0x400094D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Singleton TheOne;

	[Token(Token = "0x6000810")]
	[Address(RVA = "0xCB76A0", Offset = "0xCB76A0", VA = "0xCB76A0")]
	public Singleton()
	{
	}

	[Token(Token = "0x6000811")]
	[Address(RVA = "0xCB76A8", Offset = "0xCB76A8", VA = "0xCB76A8")]
	private void Awake()
	{
	}
}
[Token(Token = "0x200014D")]
public class StandingSensitiveAsset : MonoBehaviour
{
	[Token(Token = "0x400094E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public bool disableAfterUse;

	[Token(Token = "0x400094F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private NVRPlayer player;

	[Token(Token = "0x6000812")]
	[Address(RVA = "0xCB8584", Offset = "0xCB8584", VA = "0xCB8584")]
	public StandingSensitiveAsset()
	{
	}

	[Token(Token = "0x6000813")]
	[Address(RVA = "0xCB858C", Offset = "0xCB858C", VA = "0xCB858C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000814")]
	[Address(RVA = "0xCB8708", Offset = "0xCB8708", VA = "0xCB8708")]
	private void Update()
	{
	}
}
[Token(Token = "0x200014E")]
public enum FurnitureType
{
	[Token(Token = "0x4000951")]
	None,
	[Token(Token = "0x4000952")]
	Basic,
	[Token(Token = "0x4000953")]
	Robinet
}
[Token(Token = "0x200014F")]
public class StaticFurniture : MonoBehaviour
{
	[Token(Token = "0x4000954")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Vector3 Pos;

	[Token(Token = "0x4000955")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public FurnitureType type;

	[Token(Token = "0x4000956")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool arcade;

	[Token(Token = "0x4000957")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
	public bool tutorial;

	[Token(Token = "0x4000958")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E")]
	public bool unactiveOnStart;

	[Token(Token = "0x4000959")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject[] JoinedObject;

	[Token(Token = "0x400095A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Vector3[] JoinedObjectPosition;

	[Token(Token = "0x400095B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Quaternion[] JoinedObjectRotation;

	[Token(Token = "0x6000815")]
	[Address(RVA = "0xCB89A0", Offset = "0xCB89A0", VA = "0xCB89A0")]
	public StaticFurniture()
	{
	}

	[Token(Token = "0x6000816")]
	[Address(RVA = "0xCB89A8", Offset = "0xCB89A8", VA = "0xCB89A8")]
	public void Start()
	{
	}

	[Token(Token = "0x6000817")]
	[Address(RVA = "0xCB8F08", Offset = "0xCB8F08", VA = "0xCB8F08")]
	private void rotationAndJoinManagement()
	{
	}
}
[Token(Token = "0x2000150")]
public class TutorialSelectionBox : MonoBehaviour
{
	[Token(Token = "0x400095C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public int maxObj;

	[Token(Token = "0x400095D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public GameObject particle;

	[Token(Token = "0x400095E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private int _count;

	[Token(Token = "0x400095F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private List<string> _objectChoosen;

	[Token(Token = "0x6000818")]
	[Address(RVA = "0x3FB8F4", Offset = "0x3FB8F4", VA = "0x3FB8F4")]
	public TutorialSelectionBox()
	{
	}

	[Token(Token = "0x6000819")]
	[Address(RVA = "0x3FB8FC", Offset = "0x3FB8FC", VA = "0x3FB8FC")]
	private void Start()
	{
	}

	[Token(Token = "0x600081A")]
	[Address(RVA = "0x3FB97C", Offset = "0x3FB97C", VA = "0x3FB97C")]
	private void OnTriggerEnter(Collider col)
	{
	}

	[Token(Token = "0x600081B")]
	[Address(RVA = "0x3FBD5C", Offset = "0x3FBD5C", VA = "0x3FBD5C")]
	private bool AlreadyChoosen(string obj)
	{
		return default(bool);
	}
}
[Token(Token = "0x2000151")]
public class TutorialSelectionCarier : MonoBehaviour
{
	[Token(Token = "0x4000960")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static TutorialSelectionCarier Instance;

	[Token(Token = "0x4000961")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public string tutorials;

	[Token(Token = "0x4000962")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public GameObject dataCourier;

	[Token(Token = "0x600081C")]
	[Address(RVA = "0x3FC0A0", Offset = "0x3FC0A0", VA = "0x3FC0A0")]
	public TutorialSelectionCarier()
	{
	}

	[Token(Token = "0x600081D")]
	[Address(RVA = "0x3FC0A8", Offset = "0x3FC0A8", VA = "0x3FC0A8")]
	private void Awake()
	{
	}

	[Token(Token = "0x600081E")]
	[Address(RVA = "0x3FBEFC", Offset = "0x3FBEFC", VA = "0x3FBEFC")]
	public void AddTutorial(string tutorial)
	{
	}

	[Token(Token = "0x600081F")]
	[Address(RVA = "0x3FC184", Offset = "0x3FC184", VA = "0x3FC184")]
	public void Spread(TutorialManager tm)
	{
	}

	[Token(Token = "0x6000820")]
	[Address(RVA = "0x3FC014", Offset = "0x3FC014", VA = "0x3FC014")]
	public void Load()
	{
	}
}
[Token(Token = "0x2000152")]
public class TutorialSelectionItemManager : MonoBehaviour
{
	[Token(Token = "0x4000963")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private Transform cadenasHolder;

	[Token(Token = "0x6000821")]
	[Address(RVA = "0x3FC29C", Offset = "0x3FC29C", VA = "0x3FC29C")]
	public TutorialSelectionItemManager()
	{
	}

	[Token(Token = "0x6000822")]
	[Address(RVA = "0x3FC2A4", Offset = "0x3FC2A4", VA = "0x3FC2A4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000823")]
	[Address(RVA = "0x3FC58C", Offset = "0x3FC58C", VA = "0x3FC58C")]
	private GameObject closestCadena(Transform t)
	{
		return null;
	}
}
[Token(Token = "0x2000153")]
public class TutorialSelectionManager : MonoBehaviour
{
	[Token(Token = "0x6000824")]
	[Address(RVA = "0x3FC740", Offset = "0x3FC740", VA = "0x3FC740")]
	public TutorialSelectionManager()
	{
	}

	[Token(Token = "0x6000825")]
	[Address(RVA = "0x3FC748", Offset = "0x3FC748", VA = "0x3FC748")]
	private void Awake()
	{
	}
}
[Token(Token = "0x2000154")]
public class MorningDate : MonoBehaviour
{
	[Token(Token = "0x2000329")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1F6F5C", Offset = "0x1F6F5C")]
	private sealed class <DelaySetDate>c__Iterator0 : IEnumerator, IDisposable, IEnumerator<object>
	{
		[Token(Token = "0x400129C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal int <g>__0;

		[Token(Token = "0x400129D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		internal string <suffix>__0;

		[Token(Token = "0x400129E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal MorningDate $this;

		[Token(Token = "0x400129F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		internal object $current;

		[Token(Token = "0x40012A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal bool $disposing;

		[Token(Token = "0x40012A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		internal int $PC;

		[Token(Token = "0x170002B3")]
		private object System.Collections.Generic.IEnumerator<object>.Current
		{
			[Token(Token = "0x600181C")]
			[Address(RVA = "0xC96C10", Offset = "0xC96C10", VA = "0xC96C10", Slot = "8")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002B4")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600181D")]
			[Address(RVA = "0xC96C18", Offset = "0xC96C18", VA = "0xC96C18", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600181A")]
		[Address(RVA = "0xC96320", Offset = "0xC96320", VA = "0xC96320")]
		[DebuggerHidden]
		public <DelaySetDate>c__Iterator0()
		{
		}

		[Token(Token = "0x600181B")]
		[Address(RVA = "0xC96644", Offset = "0xC96644", VA = "0xC96644", Slot = "5")]
		public bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600181E")]
		[Address(RVA = "0xC96C20", Offset = "0xC96C20", VA = "0xC96C20", Slot = "7")]
		[DebuggerHidden]
		public void Dispose()
		{
		}

		[Token(Token = "0x600181F")]
		[Address(RVA = "0xC96C34", Offset = "0xC96C34", VA = "0xC96C34", Slot = "6")]
		[DebuggerHidden]
		public void Reset()
		{
		}
	}

	[Token(Token = "0x4000964")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private TextMeshProUGUI theDayText;

	[Token(Token = "0x4000965")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private TextMeshProUGUI theDateText;

	[Token(Token = "0x4000966")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private TextMeshProUGUI countDays;

	[Token(Token = "0x4000967")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Animator anim;

	[Token(Token = "0x6000826")]
	[Address(RVA = "0xC96080", Offset = "0xC96080", VA = "0xC96080")]
	public MorningDate()
	{
	}

	[Token(Token = "0x6000827")]
	[Address(RVA = "0xC96088", Offset = "0xC96088", VA = "0xC96088")]
	public void Initialize()
	{
	}

	[Token(Token = "0x6000828")]
	[Address(RVA = "0xC9627C", Offset = "0xC9627C", VA = "0xC9627C")]
	public void SetDate()
	{
	}

	[Token(Token = "0x6000829")]
	[Address(RVA = "0xC962A0", Offset = "0xC962A0", VA = "0xC962A0")]
	[DebuggerHidden]
	private IEnumerator DelaySetDate()
	{
		return null;
	}

	[Token(Token = "0x600082A")]
	[Address(RVA = "0xC96328", Offset = "0xC96328", VA = "0xC96328")]
	private string GetSuffix(int day)
	{
		return null;
	}

	[Token(Token = "0x600082B")]
	[Address(RVA = "0xC96514", Offset = "0xC96514", VA = "0xC96514")]
	private void LaunchAnim()
	{
	}

	[Token(Token = "0x600082C")]
	[Address(RVA = "0xC9658C", Offset = "0xC9658C", VA = "0xC9658C")]
	public void AnimDone()
	{
	}
}
[Token(Token = "0x2000155")]
public class NettoyerPrechargement : MonoBehaviour
{
	[Token(Token = "0x600082D")]
	[Address(RVA = "0xC97148", Offset = "0xC97148", VA = "0xC97148")]
	public NettoyerPrechargement()
	{
	}

	[Token(Token = "0x600082E")]
	[Address(RVA = "0xC97150", Offset = "0xC97150", VA = "0xC97150")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0x1F6FBC", Offset = "0x1F6FBC")]
	private void Trouver()
	{
	}

	[Token(Token = "0x600082F")]
	[Address(RVA = "0xC97440", Offset = "0xC97440", VA = "0xC97440")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0x1F6FF0", Offset = "0x1F6FF0")]
	private void Nettoyer()
	{
	}

	[Token(Token = "0x6000830")]
	private void Detruire<Type>() where Type : Component
	{
	}
}
[Token(Token = "0x2000156")]
public class Announcer : NPC
{
	[Token(Token = "0x200032A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1F7034", Offset = "0x1F7034")]
	private sealed class <PrepareToAnnounce>c__Iterator0 : IEnumerator, IDisposable, IEnumerator<object>
	{
		[Token(Token = "0x40012A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal Transform jailSpot;

		[Token(Token = "0x40012A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		internal Announcer $this;

		[Token(Token = "0x40012A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal object $current;

		[Token(Token = "0x40012A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		internal bool $disposing;

		[Token(Token = "0x40012A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal int $PC;

		[Token(Token = "0x170002B5")]
		private object System.Collections.Generic.IEnumerator<object>.Current
		{
			[Token(Token = "0x6001822")]
			[Address(RVA = "0xCE2B74", Offset = "0xCE2B74", VA = "0xCE2B74", Slot = "8")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002B6")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001823")]
			[Address(RVA = "0xCE2B7C", Offset = "0xCE2B7C", VA = "0xCE2B7C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001820")]
		[Address(RVA = "0xCE248C", Offset = "0xCE248C", VA = "0xCE248C")]
		[DebuggerHidden]
		public <PrepareToAnnounce>c__Iterator0()
		{
		}

		[Token(Token = "0x6001821")]
		[Address(RVA = "0xCE2968", Offset = "0xCE2968", VA = "0xCE2968", Slot = "5")]
		public bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001824")]
		[Address(RVA = "0xCE2B84", Offset = "0xCE2B84", VA = "0xCE2B84", Slot = "7")]
		[DebuggerHidden]
		public void Dispose()
		{
		}

		[Token(Token = "0x6001825")]
		[Address(RVA = "0xCE2B98", Offset = "0xCE2B98", VA = "0xCE2B98", Slot = "6")]
		[DebuggerHidden]
		public void Reset()
		{
		}
	}

	[Token(Token = "0x4000968")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject canvas;

	[Token(Token = "0x4000969")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private Canvas trueCanvas;

	[Token(Token = "0x400096A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public TextMeshProUGUI announceTextSolo;

	[Token(Token = "0x400096B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public TextMeshProUGUI announceTextWithVisuals;

	[Token(Token = "0x400096C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Queue<string> announcements;

	[Token(Token = "0x400096D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public GameObject[] visuals;

	[Token(Token = "0x400096E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	protected GameObject _currentVisual;

	[Token(Token = "0x400096F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public Transform visualAnchor;

	[Token(Token = "0x4000970")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	protected int announcementIndex;

	[Token(Token = "0x4000971")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	protected int announcementsCount;

	[Token(Token = "0x4000972")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private float timeBeforeReplacing;

	[Token(Token = "0x4000973")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private Transform currentJailSpot;

	[Token(Token = "0x4000974")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Button doneButton;

	[Token(Token = "0x4000975")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	protected Tween doText;

	[Token(Token = "0x6000831")]
	[Address(RVA = "0xCE1C80", Offset = "0xCE1C80", VA = "0xCE1C80")]
	public Announcer()
	{
	}

	[Token(Token = "0x6000832")]
	[Address(RVA = "0xCE1D0C", Offset = "0xCE1D0C", VA = "0xCE1D0C", Slot = "6")]
	public override void Initialize()
	{
	}

	[Token(Token = "0x6000833")]
	[Address(RVA = "0xCE1D14", Offset = "0xCE1D14", VA = "0xCE1D14", Slot = "7")]
	public override void Setup()
	{
	}

	[Token(Token = "0x6000834")]
	[Address(RVA = "0xCE1F34", Offset = "0xCE1F34", VA = "0xCE1F34", Slot = "5")]
	public override void ShutDown()
	{
	}

	[Token(Token = "0x6000835")]
	[Address(RVA = "0xCE1FA8", Offset = "0xCE1FA8", VA = "0xCE1FA8")]
	public void SetAnnouncements(Queue<string> queue)
	{
	}

	[Token(Token = "0x6000836")]
	[Address(RVA = "0xCE2024", Offset = "0xCE2024", VA = "0xCE2024", Slot = "10")]
	protected override void Update()
	{
	}

	[Token(Token = "0x6000837")]
	[Address(RVA = "0xCE23D0", Offset = "0xCE23D0", VA = "0xCE23D0", Slot = "15")]
	public override void JailCellAction(Transform jailSpot)
	{
	}

	[Token(Token = "0x6000838")]
	[Address(RVA = "0xCE23F4", Offset = "0xCE23F4", VA = "0xCE23F4")]
	[DebuggerHidden]
	public IEnumerator PrepareToAnnounce(Transform jailSpot)
	{
		return null;
	}

	[Token(Token = "0x6000839")]
	[Address(RVA = "0xCE2494", Offset = "0xCE2494", VA = "0xCE2494", Slot = "16")]
	public virtual void NextAnnounce()
	{
	}

	[Token(Token = "0x600083A")]
	[Address(RVA = "0xCE2498", Offset = "0xCE2498", VA = "0xCE2498", Slot = "17")]
	protected virtual void DisplayAnnounce()
	{
	}

	[Token(Token = "0x600083B")]
	[Address(RVA = "0xCE285C", Offset = "0xCE285C", VA = "0xCE285C", Slot = "18")]
	protected virtual void ClearVisual()
	{
	}

	[Token(Token = "0x600083C")]
	[Address(RVA = "0xCE2910", Offset = "0xCE2910", VA = "0xCE2910", Slot = "11")]
	public override void GoToEntrance()
	{
	}
}
[Token(Token = "0x2000157")]
public enum AnnouncerType
{
	[Token(Token = "0x4000977")]
	Basic,
	[Token(Token = "0x4000978")]
	GameStart,
	[Token(Token = "0x4000979")]
	PostFouille,
	[Token(Token = "0x400097A")]
	FirstFouille
}
[Serializable]
[Token(Token = "0x2000158")]
public class VisualsStack
{
	[Token(Token = "0x400097B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public string Name;

	[Token(Token = "0x400097C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public GameObject[] objs;

	[Token(Token = "0x600083D")]
	[Address(RVA = "0x41AC50", Offset = "0x41AC50", VA = "0x41AC50")]
	public VisualsStack()
	{
	}
}
[Token(Token = "0x2000159")]
public class AnnouncerVisualsBank : MonoBehaviour
{
	[Token(Token = "0x400097D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public VisualsStack[] visuals;

	[Token(Token = "0x600083E")]
	[Address(RVA = "0xCE2FDC", Offset = "0xCE2FDC", VA = "0xCE2FDC")]
	public AnnouncerVisualsBank()
	{
	}
}
[Token(Token = "0x200015A")]
public class BasicAnnouncer : Announcer
{
	[Token(Token = "0x600083F")]
	[Address(RVA = "0xCE6F48", Offset = "0xCE6F48", VA = "0xCE6F48")]
	public BasicAnnouncer()
	{
	}

	[Token(Token = "0x6000840")]
	[Address(RVA = "0xCE6F4C", Offset = "0xCE6F4C", VA = "0xCE6F4C", Slot = "16")]
	public override void NextAnnounce()
	{
	}

	[Token(Token = "0x6000841")]
	[Address(RVA = "0xCE7018", Offset = "0xCE7018", VA = "0xCE7018", Slot = "11")]
	public override void GoToEntrance()
	{
	}
}
[Token(Token = "0x200015B")]
public class FirstFouilleAnnouncer : Announcer
{
	[Token(Token = "0x400097E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public GameObject WrapperTemplate;

	[Token(Token = "0x400097F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private List<FouilleDisplayWrapper> wrappers;

	[Token(Token = "0x4000980")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Queue<string> firstTutorialAnnouncements;

	[Token(Token = "0x4000981")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public int firstTutorialIndex;

	[Token(Token = "0x4000982")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public int firstTutorialAnnouncementsCount;

	[Token(Token = "0x4000983")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	public GameObject WrapperScreen;

	[Token(Token = "0x4000984")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public GameObject TutorialScreens;

	[Token(Token = "0x4000985")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	public Transform scrollingPanel;

	[Token(Token = "0x4000986")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public Scrollbar scrollBar;

	[Token(Token = "0x4000987")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	public Button startButton;

	[Token(Token = "0x6000842")]
	[Address(RVA = "0xC55B64", Offset = "0xC55B64", VA = "0xC55B64")]
	public FirstFouilleAnnouncer()
	{
	}

	[Token(Token = "0x6000843")]
	[Address(RVA = "0xC55C24", Offset = "0xC55C24", VA = "0xC55C24", Slot = "7")]
	public override void Setup()
	{
	}

	[Token(Token = "0x6000844")]
	[Address(RVA = "0xC56310", Offset = "0xC56310", VA = "0xC56310", Slot = "5")]
	public override void ShutDown()
	{
	}

	[Token(Token = "0x6000845")]
	[Address(RVA = "0xC56390", Offset = "0xC56390", VA = "0xC56390")]
	public void MoveScroolBar(int i)
	{
	}

	[Token(Token = "0x6000846")]
	[Address(RVA = "0xC56514", Offset = "0xC56514", VA = "0xC56514", Slot = "16")]
	public override void NextAnnounce()
	{
	}

	[Token(Token = "0x6000847")]
	[Address(RVA = "0xC56780", Offset = "0xC56780", VA = "0xC56780", Slot = "17")]
	protected override void DisplayAnnounce()
	{
	}

	[Token(Token = "0x6000848")]
	[Address(RVA = "0xC56B34", Offset = "0xC56B34", VA = "0xC56B34")]
	private void DisplayWrappers()
	{
	}

	[Token(Token = "0x6000849")]
	[Address(RVA = "0xC57084", Offset = "0xC57084", VA = "0xC57084", Slot = "11")]
	public override void GoToEntrance()
	{
	}

	[Token(Token = "0x600084A")]
	[Address(RVA = "0xC56D78", Offset = "0xC56D78", VA = "0xC56D78")]
	private void CreateWrappers()
	{
	}

	[Token(Token = "0x600084B")]
	[Address(RVA = "0xC56168", Offset = "0xC56168", VA = "0xC56168")]
	private void ClearWrappers()
	{
	}

	[Token(Token = "0x600084C")]
	[Address(RVA = "0xC57144", Offset = "0xC57144", VA = "0xC57144")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1F7094", Offset = "0x1F7094")]
	private float <MoveScroolBar>m__0()
	{
		return default(float);
	}

	[Token(Token = "0x600084D")]
	[Address(RVA = "0xC5716C", Offset = "0xC5716C", VA = "0xC5716C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1F70A4", Offset = "0x1F70A4")]
	private void <MoveScroolBar>m__1(float x)
	{
	}
}
[Token(Token = "0x200015C")]
public class GameStartAnnouncer : Announcer
{
	[Token(Token = "0x4000988")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public BobbySellingBox sellingBox;

	[Token(Token = "0x4000989")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public Button startButton;

	[Token(Token = "0x400098A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Button quitButton;

	[Token(Token = "0x600084E")]
	[Address(RVA = "0xC57A2C", Offset = "0xC57A2C", VA = "0xC57A2C")]
	public GameStartAnnouncer()
	{
	}

	[Token(Token = "0x600084F")]
	[Address(RVA = "0xC57A34", Offset = "0xC57A34", VA = "0xC57A34", Slot = "7")]
	public override void Setup()
	{
	}

	[Token(Token = "0x6000850")]
	[Address(RVA = "0xC57CAC", Offset = "0xC57CAC", VA = "0xC57CAC", Slot = "16")]
	public override void NextAnnounce()
	{
	}

	[Token(Token = "0x6000851")]
	[Address(RVA = "0xC580CC", Offset = "0xC580CC", VA = "0xC580CC", Slot = "11")]
	public override void GoToEntrance()
	{
	}
}
[Token(Token = "0x200015D")]
public class PostFouilleAnnouncer : Announcer
{
	[Token(Token = "0x400098B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public GameObject WrapperTemplate;

	[Token(Token = "0x400098C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private List<FouilleDisplayWrapper> wrappers;

	[Token(Token = "0x400098D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Transform scrollingPanel;

	[Token(Token = "0x400098E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public Scrollbar scrollBar;

	[Token(Token = "0x6000852")]
	[Address(RVA = "0x26552C", Offset = "0x26552C", VA = "0x26552C")]
	public PostFouilleAnnouncer()
	{
	}

	[Token(Token = "0x6000853")]
	[Address(RVA = "0x2655B8", Offset = "0x2655B8", VA = "0x2655B8", Slot = "7")]
	public override void Setup()
	{
	}

	[Token(Token = "0x6000854")]
	[Address(RVA = "0x2657FC", Offset = "0x2657FC", VA = "0x2657FC")]
	public void MoveScroolBar(int i)
	{
	}

	[Token(Token = "0x6000855")]
	[Address(RVA = "0x265980", Offset = "0x265980", VA = "0x265980", Slot = "16")]
	public override void NextAnnounce()
	{
	}

	[Token(Token = "0x6000856")]
	[Address(RVA = "0x265990", Offset = "0x265990", VA = "0x265990", Slot = "17")]
	protected override void DisplayAnnounce()
	{
	}

	[Token(Token = "0x6000857")]
	[Address(RVA = "0x265B2C", Offset = "0x265B2C", VA = "0x265B2C", Slot = "11")]
	public override void GoToEntrance()
	{
	}

	[Token(Token = "0x6000858")]
	[Address(RVA = "0x265994", Offset = "0x265994", VA = "0x265994")]
	private void DisplayWrappers()
	{
	}

	[Token(Token = "0x6000859")]
	[Address(RVA = "0x265BB4", Offset = "0x265BB4", VA = "0x265BB4")]
	private void CreateWrappers()
	{
	}

	[Token(Token = "0x600085A")]
	[Address(RVA = "0x265654", Offset = "0x265654", VA = "0x265654")]
	private void ClearWrappers()
	{
	}

	[Token(Token = "0x600085B")]
	[Address(RVA = "0x265DF4", Offset = "0x265DF4", VA = "0x265DF4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1F70B4", Offset = "0x1F70B4")]
	private float <MoveScroolBar>m__0()
	{
		return default(float);
	}

	[Token(Token = "0x600085C")]
	[Address(RVA = "0x265E1C", Offset = "0x265E1C", VA = "0x265E1C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1F70C4", Offset = "0x1F70C4")]
	private void <MoveScroolBar>m__1(float x)
	{
	}
}
[Token(Token = "0x200015E")]
public enum Status
{
	[Token(Token = "0x4000990")]
	idle,
	[Token(Token = "0x4000991")]
	walking,
	[Token(Token = "0x4000992")]
	angry,
	[Token(Token = "0x4000993")]
	surprise,
	[Token(Token = "0x4000994")]
	happy
}
[Token(Token = "0x200015F")]
public class CharacterAnimator : MonoBehaviour
{
	[Token(Token = "0x200032B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1F7124", Offset = "0x1F7124")]
	private sealed class <AnimationCallback>c__Iterator0 : IEnumerator, IDisposable, IEnumerator<object>
	{
		[Token(Token = "0x40012A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal float duration;

		[Token(Token = "0x40012A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		internal Status nextState;

		[Token(Token = "0x40012A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal CharacterAnimator $this;

		[Token(Token = "0x40012AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		internal object $current;

		[Token(Token = "0x40012AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal bool $disposing;

		[Token(Token = "0x40012AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		internal int $PC;

		[Token(Token = "0x170002B7")]
		private object System.Collections.Generic.IEnumerator<object>.Current
		{
			[Token(Token = "0x6001828")]
			[Address(RVA = "0xCF49D0", Offset = "0xCF49D0", VA = "0xCF49D0", Slot = "8")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002B8")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001829")]
			[Address(RVA = "0xCF49D8", Offset = "0xCF49D8", VA = "0xCF49D8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001826")]
		[Address(RVA = "0xCF4628", Offset = "0xCF4628", VA = "0xCF4628")]
		[DebuggerHidden]
		public <AnimationCallback>c__Iterator0()
		{
		}

		[Token(Token = "0x6001827")]
		[Address(RVA = "0xCF48C0", Offset = "0xCF48C0", VA = "0xCF48C0", Slot = "5")]
		public bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600182A")]
		[Address(RVA = "0xCF49E0", Offset = "0xCF49E0", VA = "0xCF49E0", Slot = "7")]
		[DebuggerHidden]
		public void Dispose()
		{
		}

		[Token(Token = "0x600182B")]
		[Address(RVA = "0xCF49F4", Offset = "0xCF49F4", VA = "0xCF49F4", Slot = "6")]
		[DebuggerHidden]
		public void Reset()
		{
		}
	}

	[Token(Token = "0x200032C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1F7184", Offset = "0x1F7184")]
	private sealed class <TalkCallback>c__Iterator1 : IEnumerator, IDisposable, IEnumerator<object>
	{
		[Token(Token = "0x40012AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal float duration;

		[Token(Token = "0x40012AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		internal bool whistle;

		[Token(Token = "0x40012AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal CharacterAnimator $this;

		[Token(Token = "0x40012B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		internal object $current;

		[Token(Token = "0x40012B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal bool $disposing;

		[Token(Token = "0x40012B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		internal int $PC;

		[Token(Token = "0x170002B9")]
		private object System.Collections.Generic.IEnumerator<object>.Current
		{
			[Token(Token = "0x600182E")]
			[Address(RVA = "0xCF4FB4", Offset = "0xCF4FB4", VA = "0xCF4FB4", Slot = "8")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002BA")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600182F")]
			[Address(RVA = "0xCF4FBC", Offset = "0xCF4FBC", VA = "0xCF4FBC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600182C")]
		[Address(RVA = "0xCF4630", Offset = "0xCF4630", VA = "0xCF4630")]
		[DebuggerHidden]
		public <TalkCallback>c__Iterator1()
		{
		}

		[Token(Token = "0x600182D")]
		[Address(RVA = "0xCF4E88", Offset = "0xCF4E88", VA = "0xCF4E88", Slot = "5")]
		public bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001830")]
		[Address(RVA = "0xCF4FC4", Offset = "0xCF4FC4", VA = "0xCF4FC4", Slot = "7")]
		[DebuggerHidden]
		public void Dispose()
		{
		}

		[Token(Token = "0x6001831")]
		[Address(RVA = "0xCF4FD8", Offset = "0xCF4FD8", VA = "0xCF4FD8", Slot = "6")]
		[DebuggerHidden]
		public void Reset()
		{
		}
	}

	[Token(Token = "0x200032D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1F71E4", Offset = "0x1F71E4")]
	private sealed class <Blinking>c__Iterator2 : IEnumerator, IDisposable, IEnumerator<object>
	{
		[Token(Token = "0x40012B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal CharacterAnimator $this;

		[Token(Token = "0x40012B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		internal object $current;

		[Token(Token = "0x40012B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal bool $disposing;

		[Token(Token = "0x40012B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		internal int $PC;

		[Token(Token = "0x170002BB")]
		private object System.Collections.Generic.IEnumerator<object>.Current
		{
			[Token(Token = "0x6001834")]
			[Address(RVA = "0xCF4C00", Offset = "0xCF4C00", VA = "0xCF4C00", Slot = "8")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002BC")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001835")]
			[Address(RVA = "0xCF4C08", Offset = "0xCF4C08", VA = "0xCF4C08", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001832")]
		[Address(RVA = "0xCF46DC", Offset = "0xCF46DC", VA = "0xCF46DC")]
		[DebuggerHidden]
		public <Blinking>c__Iterator2()
		{
		}

		[Token(Token = "0x6001833")]
		[Address(RVA = "0xCF4A78", Offset = "0xCF4A78", VA = "0xCF4A78", Slot = "5")]
		public bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001836")]
		[Address(RVA = "0xCF4C10", Offset = "0xCF4C10", VA = "0xCF4C10", Slot = "7")]
		[DebuggerHidden]
		public void Dispose()
		{
		}

		[Token(Token = "0x6001837")]
		[Address(RVA = "0xCF4C24", Offset = "0xCF4C24", VA = "0xCF4C24", Slot = "6")]
		[DebuggerHidden]
		public void Reset()
		{
		}
	}

	[Token(Token = "0x200032E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1F7244", Offset = "0x1F7244")]
	private sealed class <LookAtCoroutine>c__Iterator3 : IEnumerator, IDisposable, IEnumerator<object>
	{
		[Token(Token = "0x40012B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal Vector3 where;

		[Token(Token = "0x40012B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		internal float duration;

		[Token(Token = "0x40012B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal CharacterAnimator $this;

		[Token(Token = "0x40012BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		internal object $current;

		[Token(Token = "0x40012BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal bool $disposing;

		[Token(Token = "0x40012BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		internal int $PC;

		[Token(Token = "0x170002BD")]
		private object System.Collections.Generic.IEnumerator<object>.Current
		{
			[Token(Token = "0x600183A")]
			[Address(RVA = "0xCF4DE0", Offset = "0xCF4DE0", VA = "0xCF4DE0", Slot = "8")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002BE")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600183B")]
			[Address(RVA = "0xCF4DE8", Offset = "0xCF4DE8", VA = "0xCF4DE8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001838")]
		[Address(RVA = "0xCF48B8", Offset = "0xCF48B8", VA = "0xCF48B8")]
		[DebuggerHidden]
		public <LookAtCoroutine>c__Iterator3()
		{
		}

		[Token(Token = "0x6001839")]
		[Address(RVA = "0xCF4CA8", Offset = "0xCF4CA8", VA = "0xCF4CA8", Slot = "5")]
		public bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600183C")]
		[Address(RVA = "0xCF4DF0", Offset = "0xCF4DF0", VA = "0xCF4DF0", Slot = "7")]
		[DebuggerHidden]
		public void Dispose()
		{
		}

		[Token(Token = "0x600183D")]
		[Address(RVA = "0xCF4E04", Offset = "0xCF4E04", VA = "0xCF4E04", Slot = "6")]
		[DebuggerHidden]
		public void Reset()
		{
		}
	}

	[Token(Token = "0x4000995")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	protected Animator anim;

	[Token(Token = "0x4000996")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private Status currentAnimState;

	[Token(Token = "0x4000997")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float randomIdleChance;

	[Token(Token = "0x4000998")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Coroutine blinkingCoroutine;

	[Token(Token = "0x4000999")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private Coroutine lookOverrideCoroutine;

	[Token(Token = "0x400099A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Coroutine callbackAnim;

	[Token(Token = "0x400099B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Coroutine talkCallback;

	[Token(Token = "0x400099C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private PathfindingAgent pathfinding;

	[Token(Token = "0x400099D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private Transform[] eyes;

	[Token(Token = "0x400099E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	protected NPC npc;

	[Token(Token = "0x400099F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private Vector3 lookTarget;

	[Token(Token = "0x40009A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[HideInInspector]
	public Transform defaultLookDir;

	[Token(Token = "0x40009A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private Vector3 _modifiedDefaultDir;

	[Token(Token = "0x40009A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Transform playerHead;

	[Token(Token = "0x40009A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private Transform tempTransformLook;

	[Token(Token = "0x40009A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool lookOverride;

	[Token(Token = "0x600085D")]
	[Address(RVA = "0xCE70F4", Offset = "0xCE70F4", VA = "0xCE70F4")]
	public CharacterAnimator()
	{
	}

	[Token(Token = "0x600085E")]
	[Address(RVA = "0xCF357C", Offset = "0xCF357C", VA = "0xCF357C", Slot = "4")]
	public virtual void Initialize()
	{
	}

	[Token(Token = "0x600085F")]
	[Address(RVA = "0xCF38E8", Offset = "0xCF38E8", VA = "0xCF38E8", Slot = "5")]
	protected virtual void Update()
	{
	}

	[Token(Token = "0x6000860")]
	[Address(RVA = "0xCF4004", Offset = "0xCF4004", VA = "0xCF4004")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000861")]
	[Address(RVA = "0xCF3E5C", Offset = "0xCF3E5C", VA = "0xCF3E5C")]
	public void SetAnimState(Status state, bool callback = false, float duration = 3f, bool backToCurrent = false, Status nextState = Status.idle)
	{
	}

	[Token(Token = "0x6000862")]
	[Address(RVA = "0xCF4438", Offset = "0xCF4438", VA = "0xCF4438")]
	public void SetAnimTrigger(string trigger)
	{
	}

	[Token(Token = "0x6000863")]
	[Address(RVA = "0xCF4468", Offset = "0xCF4468", VA = "0xCF4468")]
	public void SetTalkingState(float duration, bool whistle = false)
	{
	}

	[Token(Token = "0x6000864")]
	[Address(RVA = "0xCF45F8", Offset = "0xCF45F8", VA = "0xCF45F8")]
	public void FootStepCue()
	{
	}

	[Token(Token = "0x6000865")]
	[Address(RVA = "0xCF4380", Offset = "0xCF4380", VA = "0xCF4380")]
	[DebuggerHidden]
	private IEnumerator AnimationCallback(float duration, Status nextState)
	{
		return null;
	}

	[Token(Token = "0x6000866")]
	[Address(RVA = "0xCF4540", Offset = "0xCF4540", VA = "0xCF4540")]
	[DebuggerHidden]
	private IEnumerator TalkCallback(float duration, bool whistle = false)
	{
		return null;
	}

	[Token(Token = "0x6000867")]
	[Address(RVA = "0xCF4244", Offset = "0xCF4244", VA = "0xCF4244")]
	private void SetAnimBoolsFalse()
	{
	}

	[Token(Token = "0x6000868")]
	[Address(RVA = "0xCF4638", Offset = "0xCF4638", VA = "0xCF4638")]
	public void randomIdleRoll()
	{
	}

	[Token(Token = "0x6000869")]
	[Address(RVA = "0xCF3710", Offset = "0xCF3710", VA = "0xCF3710")]
	[DebuggerHidden]
	private IEnumerator Blinking()
	{
		return null;
	}

	[Token(Token = "0x600086A")]
	[Address(RVA = "0xCF3790", Offset = "0xCF3790", VA = "0xCF3790")]
	private void SetEyes()
	{
	}

	[Token(Token = "0x600086B")]
	[Address(RVA = "0xCF3AF4", Offset = "0xCF3AF4", VA = "0xCF3AF4")]
	private void SetEyesLook()
	{
	}

	[Token(Token = "0x600086C")]
	[Address(RVA = "0xCF46E4", Offset = "0xCF46E4", VA = "0xCF46E4")]
	public void LookAtOverride(Vector3 where, float duration)
	{
	}

	[Token(Token = "0x600086D")]
	[Address(RVA = "0xCF4824", Offset = "0xCF4824", VA = "0xCF4824")]
	public void LookAtOverride(Transform where, float duration)
	{
	}

	[Token(Token = "0x600086E")]
	[Address(RVA = "0xCF48B0", Offset = "0xCF48B0", VA = "0xCF48B0", Slot = "6")]
	public virtual void TriggeredSpecificAnim()
	{
	}

	[Token(Token = "0x600086F")]
	[Address(RVA = "0xCF48B4", Offset = "0xCF48B4", VA = "0xCF48B4", Slot = "7")]
	public virtual void StatusSpecificAnim()
	{
	}

	[Token(Token = "0x6000870")]
	[Address(RVA = "0xCF4760", Offset = "0xCF4760", VA = "0xCF4760")]
	[DebuggerHidden]
	private IEnumerator LookAtCoroutine(Vector3 where, float duration)
	{
		return null;
	}

	[Token(Token = "0x6000871")]
	[Address(RVA = "0xCF4008", Offset = "0xCF4008", VA = "0xCF4008")]
	private void Eyetrack()
	{
	}
}
[Token(Token = "0x2000160")]
public class CharacterRandomizer : MonoBehaviour
{
	[Token(Token = "0x2000161")]
	public enum CharacterType
	{
		[Token(Token = "0x40009A8")]
		Cop,
		[Token(Token = "0x40009A9")]
		Dude
	}

	[Token(Token = "0x40009A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	[HideInInspector]
	public CharacterAnimator chanim;

	[Token(Token = "0x40009A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public CharacterType characterType;

	[Token(Token = "0x6000872")]
	[Address(RVA = "0xCF505C", Offset = "0xCF505C", VA = "0xCF505C")]
	public CharacterRandomizer()
	{
	}

	[Token(Token = "0x6000873")]
	[Address(RVA = "0xCF5064", Offset = "0xCF5064", VA = "0xCF5064")]
	public void RandomizeAppearance(GardeInfo info)
	{
	}

	[Token(Token = "0x6000874")]
	[Address(RVA = "0xCF54C8", Offset = "0xCF54C8", VA = "0xCF54C8")]
	public void RandomizeAppearance()
	{
	}

	[Token(Token = "0x6000875")]
	[Address(RVA = "0xCF5CB0", Offset = "0xCF5CB0", VA = "0xCF5CB0")]
	private Transform[] GetTheseTransforms(Transform theParent, string nameContains)
	{
		return null;
	}

	[Token(Token = "0x6000876")]
	[Address(RVA = "0xCF5F24", Offset = "0xCF5F24", VA = "0xCF5F24")]
	private Transform GetThisTransform(Transform theParent, string nameContains)
	{
		return null;
	}

	[Token(Token = "0x6000877")]
	[Address(RVA = "0xCF513C", Offset = "0xCF513C", VA = "0xCF513C")]
	private void SetFlashlight(bool hasFlashlight)
	{
	}

	[Token(Token = "0x6000878")]
	[Address(RVA = "0xCF5600", Offset = "0xCF5600", VA = "0xCF5600")]
	private void SetItem(string theItem, bool hasIt)
	{
	}

	[Token(Token = "0x6000879")]
	[Address(RVA = "0xCF5724", Offset = "0xCF5724", VA = "0xCF5724")]
	private void SetDudeHair()
	{
	}

	[Token(Token = "0x600087A")]
	[Address(RVA = "0xCF51FC", Offset = "0xCF51FC", VA = "0xCF51FC")]
	private void SetMustaches()
	{
	}

	[Token(Token = "0x600087B")]
	[Address(RVA = "0xCF5364", Offset = "0xCF5364", VA = "0xCF5364")]
	private void SetSkin(Texture[] sourceSkins)
	{
	}

	[Token(Token = "0x600087C")]
	[Address(RVA = "0xCF5AE4", Offset = "0xCF5AE4", VA = "0xCF5AE4")]
	private void SetDudeEyes(bool hasBigEyes)
	{
	}
}
[Serializable]
[Token(Token = "0x2000162")]
public class NPCInfo
{
	[Token(Token = "0x40009AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public string name;

	[Token(Token = "0x40009AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public GameObject model;

	[Token(Token = "0x40009AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float moveSpeed;

	[Token(Token = "0x600087D")]
	[Address(RVA = "0x253440", Offset = "0x253440", VA = "0x253440")]
	public NPCInfo()
	{
	}
}
[Serializable]
[Token(Token = "0x2000163")]
public class GardeInfo : NPCInfo
{
	[Token(Token = "0x40009AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float pauseDurationModifier;

	[Token(Token = "0x40009AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float probWeight;

	[Token(Token = "0x40009AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Gender gender;

	[Token(Token = "0x40009B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool hasFlashlight;

	[Token(Token = "0x600087E")]
	[Address(RVA = "0xC64BA0", Offset = "0xC64BA0", VA = "0xC64BA0")]
	public GardeInfo()
	{
	}
}
[Serializable]
[Token(Token = "0x2000164")]
public class DudeInfo : NPCInfo
{
	[Token(Token = "0x40009B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float wanderDist;

	[Token(Token = "0x40009B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float wanderDelay;

	[Token(Token = "0x600087F")]
	[Address(RVA = "0xC52C8C", Offset = "0xC52C8C", VA = "0xC52C8C")]
	public DudeInfo()
	{
	}
}
[Token(Token = "0x2000165")]
public enum Gender
{
	[Token(Token = "0x40009B4")]
	Male,
	[Token(Token = "0x40009B5")]
	Female
}
[Token(Token = "0x2000166")]
public class CrowdManager : MonoBehaviour
{
	[Token(Token = "0x200032F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1F7314", Offset = "0x1F7314")]
	private sealed class <LockTheDudes>c__Iterator0 : IEnumerator, IDisposable, IEnumerator<object>
	{
		[Token(Token = "0x40012BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal int <index>__0;

		[Token(Token = "0x40012BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		internal DudeCell[] $locvar0;

		[Token(Token = "0x40012BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal int $locvar1;

		[Token(Token = "0x40012C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		internal DudeCell <cell>__1;

		[Token(Token = "0x40012C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal CrowdManager $this;

		[Token(Token = "0x40012C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		internal object $current;

		[Token(Token = "0x40012C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal bool $disposing;

		[Token(Token = "0x40012C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		internal int $PC;

		[Token(Token = "0x170002BF")]
		private object System.Collections.Generic.IEnumerator<object>.Current
		{
			[Token(Token = "0x6001840")]
			[Address(RVA = "0xCFBEF0", Offset = "0xCFBEF0", VA = "0xCFBEF0", Slot = "8")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002C0")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001841")]
			[Address(RVA = "0xCFBEF8", Offset = "0xCFBEF8", VA = "0xCFBEF8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600183E")]
		[Address(RVA = "0xCFA8C4", Offset = "0xCFA8C4", VA = "0xCFA8C4")]
		[DebuggerHidden]
		public <LockTheDudes>c__Iterator0()
		{
		}

		[Token(Token = "0x600183F")]
		[Address(RVA = "0xCFBCD8", Offset = "0xCFBCD8", VA = "0xCFBCD8", Slot = "5")]
		public bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001842")]
		[Address(RVA = "0xCFBF00", Offset = "0xCFBF00", VA = "0xCFBF00", Slot = "7")]
		[DebuggerHidden]
		public void Dispose()
		{
		}

		[Token(Token = "0x6001843")]
		[Address(RVA = "0xCFBF14", Offset = "0xCFBF14", VA = "0xCFBF14", Slot = "6")]
		[DebuggerHidden]
		public void Reset()
		{
		}
	}

	[Token(Token = "0x2000330")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1F7374", Offset = "0x1F7374")]
	private sealed class <DudeSpawnLoop>c__Iterator1 : IEnumerator, IDisposable, IEnumerator<object>
	{
		[Token(Token = "0x40012C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal float <waitTime>__0;

		[Token(Token = "0x40012C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		internal CrowdManager $this;

		[Token(Token = "0x40012C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal object $current;

		[Token(Token = "0x40012C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		internal bool $disposing;

		[Token(Token = "0x40012C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal int $PC;

		[Token(Token = "0x170002C1")]
		private object System.Collections.Generic.IEnumerator<object>.Current
		{
			[Token(Token = "0x6001846")]
			[Address(RVA = "0xCFBA18", Offset = "0xCFBA18", VA = "0xCFBA18", Slot = "8")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002C2")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001847")]
			[Address(RVA = "0xCFBA20", Offset = "0xCFBA20", VA = "0xCFBA20", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001844")]
		[Address(RVA = "0xCFA8CC", Offset = "0xCFA8CC", VA = "0xCFA8CC")]
		[DebuggerHidden]
		public <DudeSpawnLoop>c__Iterator1()
		{
		}

		[Token(Token = "0x6001845")]
		[Address(RVA = "0xCFB7D4", Offset = "0xCFB7D4", VA = "0xCFB7D4", Slot = "5")]
		public bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001848")]
		[Address(RVA = "0xCFBA28", Offset = "0xCFBA28", VA = "0xCFBA28", Slot = "7")]
		[DebuggerHidden]
		public void Dispose()
		{
		}

		[Token(Token = "0x6001849")]
		[Address(RVA = "0xCFBA3C", Offset = "0xCFBA3C", VA = "0xCFBA3C", Slot = "6")]
		[DebuggerHidden]
		public void Reset()
		{
		}
	}

	[Token(Token = "0x2000331")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1F73D4", Offset = "0x1F73D4")]
	private sealed class <CallManyDudes>c__Iterator2 : IEnumerator, IDisposable, IEnumerator<object>
	{
		[Token(Token = "0x40012CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal int <i>__1;

		[Token(Token = "0x40012CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		internal int number;

		[Token(Token = "0x40012CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal float delayBetweenDudes;

		[Token(Token = "0x40012CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		internal CrowdManager $this;

		[Token(Token = "0x40012CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal object $current;

		[Token(Token = "0x40012CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		internal bool $disposing;

		[Token(Token = "0x40012D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal int $PC;

		[Token(Token = "0x170002C3")]
		private object System.Collections.Generic.IEnumerator<object>.Current
		{
			[Token(Token = "0x600184C")]
			[Address(RVA = "0xCFB72C", Offset = "0xCFB72C", VA = "0xCFB72C", Slot = "8")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002C4")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600184D")]
			[Address(RVA = "0xCFB734", Offset = "0xCFB734", VA = "0xCFB734", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600184A")]
		[Address(RVA = "0xCFA98C", Offset = "0xCFA98C", VA = "0xCFA98C")]
		[DebuggerHidden]
		public <CallManyDudes>c__Iterator2()
		{
		}

		[Token(Token = "0x600184B")]
		[Address(RVA = "0xCFB624", Offset = "0xCFB624", VA = "0xCFB624", Slot = "5")]
		public bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600184E")]
		[Address(RVA = "0xCFB73C", Offset = "0xCFB73C", VA = "0xCFB73C", Slot = "7")]
		[DebuggerHidden]
		public void Dispose()
		{
		}

		[Token(Token = "0x600184F")]
		[Address(RVA = "0xCFB750", Offset = "0xCFB750", VA = "0xCFB750", Slot = "6")]
		[DebuggerHidden]
		public void Reset()
		{
		}
	}

	[Token(Token = "0x2000332")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1F7434", Offset = "0x1F7434")]
	private sealed class <PatrolScheduler>c__Iterator3 : IEnumerator, IDisposable, IEnumerator<object>
	{
		[Token(Token = "0x40012D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal float <waitTime>__0;

		[Token(Token = "0x40012D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		internal CrowdManager $this;

		[Token(Token = "0x40012D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal object $current;

		[Token(Token = "0x40012D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		internal bool $disposing;

		[Token(Token = "0x40012D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal int $PC;

		[Token(Token = "0x170002C5")]
		private object System.Collections.Generic.IEnumerator<object>.Current
		{
			[Token(Token = "0x6001852")]
			[Address(RVA = "0xCFC1F0", Offset = "0xCFC1F0", VA = "0xCFC1F0", Slot = "8")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002C6")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001853")]
			[Address(RVA = "0xCFC1F8", Offset = "0xCFC1F8", VA = "0xCFC1F8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001850")]
		[Address(RVA = "0xCFB004", Offset = "0xCFB004", VA = "0xCFB004")]
		[DebuggerHidden]
		public <PatrolScheduler>c__Iterator3()
		{
		}

		[Token(Token = "0x6001851")]
		[Address(RVA = "0xCFBF98", Offset = "0xCFBF98", VA = "0xCFBF98", Slot = "5")]
		public bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001854")]
		[Address(RVA = "0xCFC200", Offset = "0xCFC200", VA = "0xCFC200", Slot = "7")]
		[DebuggerHidden]
		public void Dispose()
		{
		}

		[Token(Token = "0x6001855")]
		[Address(RVA = "0xCFC214", Offset = "0xCFC214", VA = "0xCFC214", Slot = "6")]
		[DebuggerHidden]
		public void Reset()
		{
		}
	}

	[Token(Token = "0x2000333")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1F7494", Offset = "0x1F7494")]
	private sealed class <DummyGardeBehaviour>c__Iterator4 : IEnumerator, IDisposable, IEnumerator<object>
	{
		[Token(Token = "0x40012D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal Garde npcScript;

		[Token(Token = "0x40012D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		internal Vector3 destination;

		[Token(Token = "0x40012D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal CrowdManager $this;

		[Token(Token = "0x40012D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		internal object $current;

		[Token(Token = "0x40012DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal bool $disposing;

		[Token(Token = "0x40012DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		internal int $PC;

		[Token(Token = "0x170002C7")]
		private object System.Collections.Generic.IEnumerator<object>.Current
		{
			[Token(Token = "0x6001858")]
			[Address(RVA = "0xCFBC30", Offset = "0xCFBC30", VA = "0xCFBC30", Slot = "8")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002C8")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001859")]
			[Address(RVA = "0xCFBC38", Offset = "0xCFBC38", VA = "0xCFBC38", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001856")]
		[Address(RVA = "0xCFB2F8", Offset = "0xCFB2F8", VA = "0xCFB2F8")]
		[DebuggerHidden]
		public <DummyGardeBehaviour>c__Iterator4()
		{
		}

		[Token(Token = "0x6001857")]
		[Address(RVA = "0xCFBAC0", Offset = "0xCFBAC0", VA = "0xCFBAC0", Slot = "5")]
		public bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600185A")]
		[Address(RVA = "0xCFBC40", Offset = "0xCFBC40", VA = "0xCFBC40", Slot = "7")]
		[DebuggerHidden]
		public void Dispose()
		{
		}

		[Token(Token = "0x600185B")]
		[Address(RVA = "0xCFBC54", Offset = "0xCFBC54", VA = "0xCFBC54", Slot = "6")]
		[DebuggerHidden]
		public void Reset()
		{
		}
	}

	[Token(Token = "0x40009B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static CrowdManager Instance;

	[Token(Token = "0x40009B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public int firstPathID;

	[Token(Token = "0x40009B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float pauseDuration;

	[Token(Token = "0x40009B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float pauseProb;

	[Token(Token = "0x40009BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int maxPatrolsPerNight;

	[Token(Token = "0x40009BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int patrolCount;

	[Token(Token = "0x40009BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float patrolInterval;

	[Token(Token = "0x40009BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float copIntervalRandModifier;

	[Token(Token = "0x40009BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float dudeIntervalRandModifier;

	[Token(Token = "0x40009BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float dudeSpawnInterval;

	[Token(Token = "0x40009C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public int maxDudeNumber;

	[Token(Token = "0x40009C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public int dudeCount;

	[Token(Token = "0x40009C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public DudeCell[] dudeCells;

	[Token(Token = "0x40009C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public bool traderPassed;

	[Token(Token = "0x40009C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[HideInInspector]
	public UnityEvent OnTraderPassed;

	[Token(Token = "0x40009C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public AnnouncerVisualsBank visualBank;

	[Token(Token = "0x40009C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public List<Garde> activeGardes;

	[Token(Token = "0x40009C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public List<Dude> activeDudes;

	[Token(Token = "0x40009C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public List<Announcer> activeAnnouncers;

	[Token(Token = "0x40009C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public Dealer activeDealer;

	[Token(Token = "0x6000880")]
	[Address(RVA = "0xCF87F4", Offset = "0xCF87F4", VA = "0xCF87F4")]
	public CrowdManager()
	{
	}

	[Token(Token = "0x6000881")]
	[Address(RVA = "0xCF87FC", Offset = "0xCF87FC", VA = "0xCF87FC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000882")]
	[Address(RVA = "0xCF8860", Offset = "0xCF8860", VA = "0xCF8860")]
	private void Start()
	{
	}

	[Token(Token = "0x6000883")]
	[Address(RVA = "0xCF8CE8", Offset = "0xCF8CE8", VA = "0xCF8CE8")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000884")]
	[Address(RVA = "0xCF8E2C", Offset = "0xCF8E2C", VA = "0xCF8E2C")]
	private void OnNPCDespawnedHandler(NPC npc)
	{
	}

	[Token(Token = "0x6000885")]
	[Address(RVA = "0xCF919C", Offset = "0xCF919C", VA = "0xCF919C")]
	private void OnNPCSpawnedHandler(NPC npc)
	{
	}

	[Token(Token = "0x6000886")]
	[Address(RVA = "0xCF9520", Offset = "0xCF9520", VA = "0xCF9520")]
	private List<Garde> GetActiveGardes()
	{
		return null;
	}

	[Token(Token = "0x6000887")]
	[Address(RVA = "0xCF96D4", Offset = "0xCF96D4", VA = "0xCF96D4")]
	private List<Dude> GetActiveDudes()
	{
		return null;
	}

	[Token(Token = "0x6000888")]
	[Address(RVA = "0xCF9888", Offset = "0xCF9888", VA = "0xCF9888")]
	private List<Announcer> GetActiveAnnouncers()
	{
		return null;
	}

	[Token(Token = "0x6000889")]
	[Address(RVA = "0xCF9A3C", Offset = "0xCF9A3C", VA = "0xCF9A3C")]
	private void UpdateGardes()
	{
	}

	[Token(Token = "0x600088A")]
	[Address(RVA = "0xCF9FE0", Offset = "0xCF9FE0", VA = "0xCF9FE0")]
	private void DayDealerBehavior()
	{
	}

	[Token(Token = "0x600088B")]
	[Address(RVA = "0xCFA7E8", Offset = "0xCFA7E8", VA = "0xCFA7E8")]
	private void NightDealerBehavior()
	{
	}

	[Token(Token = "0x600088C")]
	[Address(RVA = "0xCFA6D4", Offset = "0xCFA6D4", VA = "0xCFA6D4")]
	public void CallDealer()
	{
	}

	[Token(Token = "0x600088D")]
	[Address(RVA = "0xCFA61C", Offset = "0xCFA61C", VA = "0xCFA61C")]
	public void CallAnnouncer(AnnouncerType announcerType, Queue<string> announcements, [Optional] GameObject[] visuals)
	{
	}

	[Token(Token = "0x600088E")]
	[Address(RVA = "0xCF8C68", Offset = "0xCF8C68", VA = "0xCF8C68")]
	[DebuggerHidden]
	private IEnumerator LockTheDudes()
	{
		return null;
	}

	[Token(Token = "0x600088F")]
	[Address(RVA = "0xCFA768", Offset = "0xCFA768", VA = "0xCFA768")]
	[DebuggerHidden]
	private IEnumerator DudeSpawnLoop()
	{
		return null;
	}

	[Token(Token = "0x6000890")]
	[Address(RVA = "0xCFA8D4", Offset = "0xCFA8D4", VA = "0xCFA8D4")]
	[DebuggerHidden]
	public IEnumerator CallManyDudes(int number = 3, float delayBetweenDudes = 3f)
	{
		return null;
	}

	[Token(Token = "0x6000891")]
	[Address(RVA = "0xCFA994", Offset = "0xCFA994", VA = "0xCFA994")]
	public void CreateFreeWanderDude()
	{
	}

	[Token(Token = "0x6000892")]
	[Address(RVA = "0xCFAB54", Offset = "0xCFAB54", VA = "0xCFAB54")]
	public void CreateCellDude(DudeCell cell)
	{
	}

	[Token(Token = "0x6000893")]
	[Address(RVA = "0xCFAEEC", Offset = "0xCFAEEC", VA = "0xCFAEEC")]
	private static int GetCurrentPrisonId()
	{
		return default(int);
	}

	[Token(Token = "0x6000894")]
	[Address(RVA = "0xCFAE10", Offset = "0xCFAE10", VA = "0xCFAE10")]
	private static int GetDudeCellArea()
	{
		return default(int);
	}

	[Token(Token = "0x6000895")]
	[Address(RVA = "0xCFAA78", Offset = "0xCFAA78", VA = "0xCFAA78")]
	public static int GetPrisonArea()
	{
		return default(int);
	}

	[Token(Token = "0x6000896")]
	[Address(RVA = "0xCFAA00", Offset = "0xCFAA00", VA = "0xCFAA00")]
	public Dude CallDude()
	{
		return null;
	}

	[Token(Token = "0x6000897")]
	[Address(RVA = "0xCF9CCC", Offset = "0xCF9CCC", VA = "0xCF9CCC")]
	[DebuggerHidden]
	private IEnumerator PatrolScheduler()
	{
		return null;
	}

	[Token(Token = "0x6000898")]
	[Address(RVA = "0xCFB00C", Offset = "0xCFB00C", VA = "0xCFB00C")]
	private void StartPatrol()
	{
	}

	[Token(Token = "0x6000899")]
	[Address(RVA = "0xCFB128", Offset = "0xCFB128", VA = "0xCFB128")]
	public void CallDummyGarde(Vector3 spawnPosition, Vector3 destination)
	{
	}

	[Token(Token = "0x600089A")]
	[Address(RVA = "0xCFB23C", Offset = "0xCFB23C", VA = "0xCFB23C")]
	[DebuggerHidden]
	private IEnumerator DummyGardeBehaviour(Garde npcScript, Vector3 destination)
	{
		return null;
	}

	[Token(Token = "0x600089B")]
	[Address(RVA = "0xCF9D4C", Offset = "0xCF9D4C", VA = "0xCF9D4C")]
	private void EndGardeNight()
	{
	}

	[Token(Token = "0x600089C")]
	[Address(RVA = "0xCFA8A0", Offset = "0xCFA8A0", VA = "0xCFA8A0")]
	public void Curfew()
	{
	}

	[Token(Token = "0x600089D")]
	[Address(RVA = "0xCFB4F0", Offset = "0xCFB4F0", VA = "0xCFB4F0")]
	private void AnnouncerCurfew()
	{
	}

	[Token(Token = "0x600089E")]
	[Address(RVA = "0xCFB300", Offset = "0xCFB300", VA = "0xCFB300")]
	private void DudesCurfew()
	{
	}

	[Token(Token = "0x600089F")]
	[Address(RVA = "0xCFB450", Offset = "0xCFB450", VA = "0xCFB450")]
	private void DealerCurfew()
	{
	}

	[Token(Token = "0x60008A0")]
	[Address(RVA = "0xCF9F60", Offset = "0xCF9F60", VA = "0xCF9F60")]
	public void TakeBackNPC(NPC npc)
	{
	}
}
[Token(Token = "0x2000167")]
public class Dealer : NPC
{
	[Token(Token = "0x2000334")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1F7534", Offset = "0x1F7534")]
	private sealed class <JsuisÉcoeuréDesProblèmesDOrdreDInitialisation>c__Iterator0 : IEnumerator, IDisposable, IEnumerator<object>
	{
		[Token(Token = "0x40012DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal Dealer $this;

		[Token(Token = "0x40012DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		internal object $current;

		[Token(Token = "0x40012DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal bool $disposing;

		[Token(Token = "0x40012DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		internal int $PC;

		[Token(Token = "0x170002C9")]
		private object System.Collections.Generic.IEnumerator<object>.Current
		{
			[Token(Token = "0x600185E")]
			[Address(RVA = "0xCFCF3C", Offset = "0xCFCF3C", VA = "0xCFCF3C", Slot = "8")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002CA")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600185F")]
			[Address(RVA = "0xCFCF44", Offset = "0xCFCF44", VA = "0xCFCF44", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600185C")]
		[Address(RVA = "0xCFC944", Offset = "0xCFC944", VA = "0xCFC944")]
		[DebuggerHidden]
		public <JsuisÉcoeuréDesProblèmesDOrdreDInitialisation>c__Iterator0()
		{
		}

		[Token(Token = "0x600185D")]
		[Address(RVA = "0xCFCD48", Offset = "0xCFCD48", VA = "0xCFCD48", Slot = "5")]
		public bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001860")]
		[Address(RVA = "0xCFCF4C", Offset = "0xCFCF4C", VA = "0xCFCF4C", Slot = "7")]
		[DebuggerHidden]
		public void Dispose()
		{
		}

		[Token(Token = "0x6001861")]
		[Address(RVA = "0xCFCF60", Offset = "0xCFCF60", VA = "0xCFCF60", Slot = "6")]
		[DebuggerHidden]
		public void Reset()
		{
		}
	}

	[Token(Token = "0x2000335")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1F7594", Offset = "0x1F7594")]
	private sealed class <PrepareToDeal>c__Iterator1 : IEnumerator, IDisposable, IEnumerator<object>
	{
		[Token(Token = "0x40012E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal Transform dealSpot;

		[Token(Token = "0x40012E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		internal Dealer $this;

		[Token(Token = "0x40012E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal object $current;

		[Token(Token = "0x40012E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		internal bool $disposing;

		[Token(Token = "0x40012E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal int $PC;

		[Token(Token = "0x170002CB")]
		private object System.Collections.Generic.IEnumerator<object>.Current
		{
			[Token(Token = "0x6001864")]
			[Address(RVA = "0xCFD2A0", Offset = "0xCFD2A0", VA = "0xCFD2A0", Slot = "8")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002CC")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001865")]
			[Address(RVA = "0xCFD2A8", Offset = "0xCFD2A8", VA = "0xCFD2A8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001862")]
		[Address(RVA = "0xCFCC60", Offset = "0xCFCC60", VA = "0xCFCC60")]
		[DebuggerHidden]
		public <PrepareToDeal>c__Iterator1()
		{
		}

		[Token(Token = "0x6001863")]
		[Address(RVA = "0xCFCFE4", Offset = "0xCFCFE4", VA = "0xCFCFE4", Slot = "5")]
		public bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001866")]
		[Address(RVA = "0xCFD2B0", Offset = "0xCFD2B0", VA = "0xCFD2B0", Slot = "7")]
		[DebuggerHidden]
		public void Dispose()
		{
		}

		[Token(Token = "0x6001867")]
		[Address(RVA = "0xCFD2C4", Offset = "0xCFD2C4", VA = "0xCFD2C4", Slot = "6")]
		[DebuggerHidden]
		public void Reset()
		{
		}
	}

	[Token(Token = "0x40009CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[HideInInspector]
	public Animator hand;

	[Token(Token = "0x40009CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[HideInInspector]
	public bool isDealing;

	[Token(Token = "0x40009CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float timeBeforeReplacing;

	[Token(Token = "0x40009CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private Transform currentDealSpot;

	[Token(Token = "0x60008A1")]
	[Address(RVA = "0xCFC7B4", Offset = "0xCFC7B4", VA = "0xCFC7B4")]
	public Dealer()
	{
	}

	[Token(Token = "0x60008A2")]
	[Address(RVA = "0xCFC7BC", Offset = "0xCFC7BC", VA = "0xCFC7BC", Slot = "6")]
	public override void Initialize()
	{
	}

	[Token(Token = "0x60008A3")]
	[Address(RVA = "0xCFC894", Offset = "0xCFC894", VA = "0xCFC894", Slot = "7")]
	public override void Setup()
	{
	}

	[Token(Token = "0x60008A4")]
	[Address(RVA = "0xCFC8C4", Offset = "0xCFC8C4", VA = "0xCFC8C4")]
	[DebuggerHidden]
	private IEnumerator JsuisÉcoeuréDesProblèmesDOrdreDInitialisation()
	{
		return null;
	}

	[Token(Token = "0x60008A5")]
	[Address(RVA = "0xCFC94C", Offset = "0xCFC94C", VA = "0xCFC94C", Slot = "10")]
	protected override void Update()
	{
	}

	[Token(Token = "0x60008A6")]
	[Address(RVA = "0xCFCB94", Offset = "0xCFCB94", VA = "0xCFCB94", Slot = "15")]
	public override void JailCellAction(Transform pos)
	{
	}

	[Token(Token = "0x60008A7")]
	[Address(RVA = "0xCFCBC8", Offset = "0xCFCBC8", VA = "0xCFCBC8")]
	[DebuggerHidden]
	public IEnumerator PrepareToDeal(Transform dealSpot)
	{
		return null;
	}

	[Token(Token = "0x60008A8")]
	[Address(RVA = "0xCFCC68", Offset = "0xCFCC68", VA = "0xCFCC68", Slot = "11")]
	public override void GoToEntrance()
	{
	}

	[Token(Token = "0x60008A9")]
	[Address(RVA = "0xCFCC90", Offset = "0xCFCC90", VA = "0xCFCC90")]
	public void OpeningDeal()
	{
	}
}
[Token(Token = "0x2000168")]
public class Dude : NPC
{
	[Token(Token = "0x2000336")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1F7604", Offset = "0x1F7604")]
	private sealed class <WanderLoop>c__Iterator0 : IEnumerator, IDisposable, IEnumerator<object>
	{
		[Token(Token = "0x40012E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal Vector3 <sourcePos>__0;

		[Token(Token = "0x40012E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		internal Vector3 <targetPos>__0;

		[Token(Token = "0x40012E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal float delay;

		[Token(Token = "0x40012E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		internal Dude $this;

		[Token(Token = "0x40012E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		internal object $current;

		[Token(Token = "0x40012EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		internal bool $disposing;

		[Token(Token = "0x40012EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		internal int $PC;

		[Token(Token = "0x170002CD")]
		private object System.Collections.Generic.IEnumerator<object>.Current
		{
			[Token(Token = "0x600186A")]
			[Address(RVA = "0xC52BDC", Offset = "0xC52BDC", VA = "0xC52BDC", Slot = "8")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002CE")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600186B")]
			[Address(RVA = "0xC52BE4", Offset = "0xC52BE4", VA = "0xC52BE4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001868")]
		[Address(RVA = "0xC52664", Offset = "0xC52664", VA = "0xC52664")]
		[DebuggerHidden]
		public <WanderLoop>c__Iterator0()
		{
		}

		[Token(Token = "0x6001869")]
		[Address(RVA = "0xC52910", Offset = "0xC52910", VA = "0xC52910", Slot = "5")]
		public bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600186C")]
		[Address(RVA = "0xC52BEC", Offset = "0xC52BEC", VA = "0xC52BEC", Slot = "7")]
		[DebuggerHidden]
		public void Dispose()
		{
		}

		[Token(Token = "0x600186D")]
		[Address(RVA = "0xC52C00", Offset = "0xC52C00", VA = "0xC52C00", Slot = "6")]
		[DebuggerHidden]
		public void Reset()
		{
		}
	}

	[Token(Token = "0x40009CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float wanderDist;

	[Token(Token = "0x40009CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float wanderDelay;

	[Token(Token = "0x40009D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public bool inCell;

	[Token(Token = "0x40009D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public DudeCell dudeCell;

	[Token(Token = "0x60008AA")]
	[Address(RVA = "0xC52518", Offset = "0xC52518", VA = "0xC52518")]
	public Dude()
	{
	}

	[Token(Token = "0x60008AB")]
	[Address(RVA = "0xC52520", Offset = "0xC52520", VA = "0xC52520", Slot = "5")]
	public override void ShutDown()
	{
	}

	[Token(Token = "0x60008AC")]
	[Address(RVA = "0xC5252C", Offset = "0xC5252C", VA = "0xC5252C", Slot = "7")]
	public override void Setup()
	{
	}

	[Token(Token = "0x60008AD")]
	[Address(RVA = "0xC52534", Offset = "0xC52534", VA = "0xC52534", Slot = "8")]
	public override void ApplyType(DudeInfo info)
	{
	}

	[Token(Token = "0x60008AE")]
	[Address(RVA = "0xC52598", Offset = "0xC52598", VA = "0xC52598")]
	public void Wander()
	{
	}

	[Token(Token = "0x60008AF")]
	[Address(RVA = "0xC525C0", Offset = "0xC525C0", VA = "0xC525C0")]
	[DebuggerHidden]
	public IEnumerator WanderLoop(float delay)
	{
		return null;
	}

	[Token(Token = "0x60008B0")]
	[Address(RVA = "0xC5266C", Offset = "0xC5266C", VA = "0xC5266C")]
	public Vector3 RandNavMeshPos(Vector3 source, float dist)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60008B1")]
	[Address(RVA = "0xC52804", Offset = "0xC52804", VA = "0xC52804")]
	private Vector3 FindPathNode()
	{
		return default(Vector3);
	}
}
[Token(Token = "0x2000169")]
public class Garde : NPC
{
	[Token(Token = "0x200016A")]
	public enum GardeType
	{
		[Token(Token = "0x40009D9")]
		Paul,
		[Token(Token = "0x40009DA")]
		Louis,
		[Token(Token = "0x40009DB")]
		Bertha,
		[Token(Token = "0x40009DC")]
		RandomWoman,
		[Token(Token = "0x40009DD")]
		RandomMan
	}

	[Token(Token = "0x200016B")]
	private class CheckForBobbyCollision : MonoBehaviour
	{
		[Token(Token = "0x40009DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private Garde garde;

		[Token(Token = "0x60008C1")]
		[Address(RVA = "0xC64AA4", Offset = "0xC64AA4", VA = "0xC64AA4")]
		public CheckForBobbyCollision()
		{
		}

		[Token(Token = "0x60008C2")]
		[Address(RVA = "0xC638AC", Offset = "0xC638AC", VA = "0xC638AC")]
		public void SetGarde(Garde garde)
		{
		}

		[Token(Token = "0x60008C3")]
		[Address(RVA = "0xC64AAC", Offset = "0xC64AAC", VA = "0xC64AAC")]
		public void OnCollisionEnter(Collision other)
		{
		}
	}

	[Token(Token = "0x2000337")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1F7694", Offset = "0x1F7694")]
	private sealed class <BadBehaviourIsReprehensible>c__Iterator0 : IEnumerator, IDisposable, IEnumerator<object>
	{
		[Token(Token = "0x40012EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal Garde $this;

		[Token(Token = "0x40012ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		internal object $current;

		[Token(Token = "0x40012EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal bool $disposing;

		[Token(Token = "0x40012EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		internal int $PC;

		[Token(Token = "0x170002CF")]
		private object System.Collections.Generic.IEnumerator<object>.Current
		{
			[Token(Token = "0x6001870")]
			[Address(RVA = "0xC641E8", Offset = "0xC641E8", VA = "0xC641E8", Slot = "8")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002D0")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001871")]
			[Address(RVA = "0xC641F0", Offset = "0xC641F0", VA = "0xC641F0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600186E")]
		[Address(RVA = "0xC63A08", Offset = "0xC63A08", VA = "0xC63A08")]
		[DebuggerHidden]
		public <BadBehaviourIsReprehensible>c__Iterator0()
		{
		}

		[Token(Token = "0x600186F")]
		[Address(RVA = "0xC640A0", Offset = "0xC640A0", VA = "0xC640A0", Slot = "5")]
		public bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001872")]
		[Address(RVA = "0xC641F8", Offset = "0xC641F8", VA = "0xC641F8", Slot = "7")]
		[DebuggerHidden]
		public void Dispose()
		{
		}

		[Token(Token = "0x6001873")]
		[Address(RVA = "0xC6420C", Offset = "0xC6420C", VA = "0xC6420C", Slot = "6")]
		[DebuggerHidden]
		public void Reset()
		{
		}
	}

	[Token(Token = "0x2000338")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1F76F4", Offset = "0x1F76F4")]
	private sealed class <DetectionFade>c__Iterator1 : IEnumerator, IDisposable, IEnumerator<object>
	{
		[Token(Token = "0x40012F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal object $current;

		[Token(Token = "0x40012F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		internal bool $disposing;

		[Token(Token = "0x40012F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal int $PC;

		[Token(Token = "0x170002D1")]
		private object System.Collections.Generic.IEnumerator<object>.Current
		{
			[Token(Token = "0x6001876")]
			[Address(RVA = "0xC644E0", Offset = "0xC644E0", VA = "0xC644E0", Slot = "8")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002D2")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001877")]
			[Address(RVA = "0xC644E8", Offset = "0xC644E8", VA = "0xC644E8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001874")]
		[Address(RVA = "0xC63FF8", Offset = "0xC63FF8", VA = "0xC63FF8")]
		[DebuggerHidden]
		public <DetectionFade>c__Iterator1()
		{
		}

		[Token(Token = "0x6001875")]
		[Address(RVA = "0xC64290", Offset = "0xC64290", VA = "0xC64290", Slot = "5")]
		public bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001878")]
		[Address(RVA = "0xC644F0", Offset = "0xC644F0", VA = "0xC644F0", Slot = "7")]
		[DebuggerHidden]
		public void Dispose()
		{
		}

		[Token(Token = "0x6001879")]
		[Address(RVA = "0xC64504", Offset = "0xC64504", VA = "0xC64504", Slot = "6")]
		[DebuggerHidden]
		public void Reset()
		{
		}
	}

	[Token(Token = "0x2000339")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1F7754", Offset = "0x1F7754")]
	private sealed class <Pause>c__Iterator2 : IEnumerator, IDisposable, IEnumerator<object>
	{
		[Token(Token = "0x40012F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal BrownianMotion <flashlight>__0;

		[Token(Token = "0x40012F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		internal float <baseRotForce>__0;

		[Token(Token = "0x40012F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal float <baseSpeed>__0;

		[Token(Token = "0x40012F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		internal Transform pauseSpot;

		[Token(Token = "0x40012F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal Garde $this;

		[Token(Token = "0x40012F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		internal object $current;

		[Token(Token = "0x40012F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal bool $disposing;

		[Token(Token = "0x40012FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		internal int $PC;

		[Token(Token = "0x170002D3")]
		private object System.Collections.Generic.IEnumerator<object>.Current
		{
			[Token(Token = "0x600187C")]
			[Address(RVA = "0xC649FC", Offset = "0xC649FC", VA = "0xC649FC", Slot = "8")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002D4")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600187D")]
			[Address(RVA = "0xC64A04", Offset = "0xC64A04", VA = "0xC64A04", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600187A")]
		[Address(RVA = "0xC64098", Offset = "0xC64098", VA = "0xC64098")]
		[DebuggerHidden]
		public <Pause>c__Iterator2()
		{
		}

		[Token(Token = "0x600187B")]
		[Address(RVA = "0xC64588", Offset = "0xC64588", VA = "0xC64588", Slot = "5")]
		public bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600187E")]
		[Address(RVA = "0xC64A0C", Offset = "0xC64A0C", VA = "0xC64A0C", Slot = "7")]
		[DebuggerHidden]
		public void Dispose()
		{
		}

		[Token(Token = "0x600187F")]
		[Address(RVA = "0xC64A20", Offset = "0xC64A20", VA = "0xC64A20", Slot = "6")]
		[DebuggerHidden]
		public void Reset()
		{
		}
	}

	[Token(Token = "0x40009D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float pauseDurationModifier;

	[Token(Token = "0x40009D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public GardeType gardeType;

	[Token(Token = "0x40009D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public string eventStep;

	[Token(Token = "0x40009D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private float timer;

	[Token(Token = "0x40009D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private DetectableObject[] _detectableObjectses;

	[Token(Token = "0x40009D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private Transform detector;

	[Token(Token = "0x60008B2")]
	[Address(RVA = "0xC632B4", Offset = "0xC632B4", VA = "0xC632B4")]
	public Garde()
	{
	}

	[Token(Token = "0x60008B3")]
	[Address(RVA = "0xC632BC", Offset = "0xC632BC", VA = "0xC632BC", Slot = "6")]
	public override void Initialize()
	{
	}

	[Token(Token = "0x60008B4")]
	[Address(RVA = "0xC6335C", Offset = "0xC6335C", VA = "0xC6335C", Slot = "7")]
	public override void Setup()
	{
	}

	[Token(Token = "0x60008B5")]
	[Address(RVA = "0xC63364", Offset = "0xC63364", VA = "0xC63364", Slot = "9")]
	public override void ApplyType(GardeInfo infoToApply)
	{
	}

	[Token(Token = "0x60008B6")]
	[Address(RVA = "0xC636DC", Offset = "0xC636DC", VA = "0xC636DC")]
	private void SetupStuffForACHIEVEMENT()
	{
	}

	[Token(Token = "0x60008B7")]
	[Address(RVA = "0xC638B4", Offset = "0xC638B4", VA = "0xC638B4")]
	private void PionHit()
	{
	}

	[Token(Token = "0x60008B8")]
	[Address(RVA = "0xC63988", Offset = "0xC63988", VA = "0xC63988")]
	[DebuggerHidden]
	private IEnumerator BadBehaviourIsReprehensible()
	{
		return null;
	}

	[Token(Token = "0x60008B9")]
	[Address(RVA = "0xC63610", Offset = "0xC63610", VA = "0xC63610")]
	private void RandomFootstep(Gender genre)
	{
	}

	[Token(Token = "0x60008BA")]
	[Address(RVA = "0xC63A10", Offset = "0xC63A10", VA = "0xC63A10", Slot = "10")]
	protected override void Update()
	{
	}

	[Token(Token = "0x60008BB")]
	[Address(RVA = "0xC63B38", Offset = "0xC63B38", VA = "0xC63B38", Slot = "14")]
	public override void FootStepAudio()
	{
	}

	[Token(Token = "0x60008BC")]
	[Address(RVA = "0xC63BD8", Offset = "0xC63BD8", VA = "0xC63BD8", Slot = "15")]
	public override void JailCellAction(Transform pos)
	{
	}

	[Token(Token = "0x60008BD")]
	[Address(RVA = "0xC63CC8", Offset = "0xC63CC8", VA = "0xC63CC8")]
	public void PlayerDetection(Transform jailCell)
	{
	}

	[Token(Token = "0x60008BE")]
	[Address(RVA = "0xC63DA8", Offset = "0xC63DA8", VA = "0xC63DA8")]
	private void PlayerDetected()
	{
	}

	[Token(Token = "0x60008BF")]
	[Address(RVA = "0xC63F8C", Offset = "0xC63F8C", VA = "0xC63F8C")]
	[DebuggerHidden]
	private IEnumerator DetectionFade()
	{
		return null;
	}

	[Token(Token = "0x60008C0")]
	[Address(RVA = "0xC64000", Offset = "0xC64000", VA = "0xC64000")]
	[DebuggerHidden]
	public IEnumerator Pause(Transform pauseSpot)
	{
		return null;
	}
}
[Token(Token = "0x200016C")]
public class LouisAnimator : CharacterAnimator
{
	[Token(Token = "0x40009DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private float coughTimer;

	[Token(Token = "0x60008C4")]
	[Address(RVA = "0xC83884", Offset = "0xC83884", VA = "0xC83884")]
	public LouisAnimator()
	{
	}

	[Token(Token = "0x60008C5")]
	[Address(RVA = "0xC83898", Offset = "0xC83898", VA = "0xC83898", Slot = "5")]
	protected override void Update()
	{
	}

	[Token(Token = "0x60008C6")]
	[Address(RVA = "0xC83918", Offset = "0xC83918", VA = "0xC83918", Slot = "6")]
	public override void TriggeredSpecificAnim()
	{
	}
}
[Token(Token = "0x200016D")]
public enum TalkStatus
{
	[Token(Token = "0x40009E1")]
	Welcome,
	[Token(Token = "0x40009E2")]
	Mumbling,
	[Token(Token = "0x40009E3")]
	Surprise,
	[Token(Token = "0x40009E4")]
	Buying,
	[Token(Token = "0x40009E5")]
	Coughing,
	[Token(Token = "0x40009E6")]
	Whistling,
	[Token(Token = "0x40009E7")]
	Mad
}
[Token(Token = "0x200016E")]
public class NPC : SpawnableObject
{
	[Token(Token = "0x40009E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string NPCname;

	[Token(Token = "0x40009E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float moveSpeed;

	[Token(Token = "0x40009EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool hasEntered;

	[Token(Token = "0x40009EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	[HideInInspector]
	public bool talking;

	[Token(Token = "0x40009EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[HideInInspector]
	public string soundEvent;

	[Token(Token = "0x40009ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject model;

	[Token(Token = "0x40009EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public PathfindingAgent pathfinding;

	[Token(Token = "0x40009EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public CharacterAnimator chanim;

	[Token(Token = "0x40009F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public CharacterRandomizer chaRand;

	[Token(Token = "0x40009F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public string eventIDModifier;

	[Token(Token = "0x40009F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	protected float currentAudioCueLength;

	[Token(Token = "0x40009F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	protected float talkTimer;

	[Token(Token = "0x40009F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[HideInInspector]
	public TalkStatus currentStatus;

	[Token(Token = "0x40009F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1F77E4", Offset = "0x1F77E4")]
	private static Dictionary<string, int> <>f__switch$map1;

	[Token(Token = "0x170000CA")]
	public int customAreaMask
	{
		[Token(Token = "0x60008C8")]
		[Address(RVA = "0x24FF78", Offset = "0x24FF78", VA = "0x24FF78")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60008C9")]
		[Address(RVA = "0x24FFB0", Offset = "0x24FFB0", VA = "0x24FFB0")]
		set
		{
		}
	}

	[Token(Token = "0x60008C7")]
	[Address(RVA = "0x24FF70", Offset = "0x24FF70", VA = "0x24FF70")]
	public NPC()
	{
	}

	[Token(Token = "0x60008CA")]
	[Address(RVA = "0x24FFF0", Offset = "0x24FFF0", VA = "0x24FFF0")]
	private void Awake()
	{
	}

	[Token(Token = "0x60008CB")]
	[Address(RVA = "0x2500C4", Offset = "0x2500C4", VA = "0x2500C4")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60008CC")]
	[Address(RVA = "0x25010C", Offset = "0x25010C", VA = "0x25010C", Slot = "6")]
	public virtual void Initialize()
	{
	}

	[Token(Token = "0x60008CD")]
	[Address(RVA = "0x250110", Offset = "0x250110", VA = "0x250110", Slot = "4")]
	public override void Reset()
	{
	}

	[Token(Token = "0x60008CE")]
	[Address(RVA = "0x250120", Offset = "0x250120", VA = "0x250120")]
	public void killModel()
	{
	}

	[Token(Token = "0x60008CF")]
	[Address(RVA = "0x2503D0", Offset = "0x2503D0", VA = "0x2503D0", Slot = "7")]
	public virtual void Setup()
	{
	}

	[Token(Token = "0x60008D0")]
	[Address(RVA = "0x2504A8", Offset = "0x2504A8", VA = "0x2504A8")]
	public void ApplyType(NPCInfo info)
	{
	}

	[Token(Token = "0x60008D1")]
	[Address(RVA = "0x250838", Offset = "0x250838", VA = "0x250838", Slot = "8")]
	public virtual void ApplyType(DudeInfo info)
	{
	}

	[Token(Token = "0x60008D2")]
	[Address(RVA = "0x250AC4", Offset = "0x250AC4", VA = "0x250AC4", Slot = "9")]
	public virtual void ApplyType(GardeInfo info)
	{
	}

	[Token(Token = "0x60008D3")]
	[Address(RVA = "0x250D50", Offset = "0x250D50", VA = "0x250D50", Slot = "10")]
	protected virtual void Update()
	{
	}

	[Token(Token = "0x60008D4")]
	[Address(RVA = "0x250EF0", Offset = "0x250EF0", VA = "0x250EF0")]
	protected void TalkDelay()
	{
	}

	[Token(Token = "0x60008D5")]
	[Address(RVA = "0x250F58", Offset = "0x250F58", VA = "0x250F58")]
	protected void RandomVoice(Gender genre)
	{
	}

	[Token(Token = "0x60008D6")]
	[Address(RVA = "0x251080", Offset = "0x251080", VA = "0x251080", Slot = "11")]
	public virtual void GoToEntrance()
	{
	}

	[Token(Token = "0x60008D7")]
	[Address(RVA = "0x251224", Offset = "0x251224", VA = "0x251224")]
	public void GoToJailCell()
	{
	}

	[Token(Token = "0x60008D8")]
	[Address(RVA = "0x251354", Offset = "0x251354", VA = "0x251354", Slot = "12")]
	public virtual string GetAudioCue(TalkStatus sayingWhat)
	{
		return null;
	}

	[Token(Token = "0x60008D9")]
	[Address(RVA = "0x252CF4", Offset = "0x252CF4", VA = "0x252CF4", Slot = "13")]
	public virtual void PonctualAction(TalkStatus action, float waitTime = 5f)
	{
	}

	[Token(Token = "0x60008DA")]
	[Address(RVA = "0x252E38", Offset = "0x252E38", VA = "0x252E38", Slot = "14")]
	public virtual void FootStepAudio()
	{
	}

	[Token(Token = "0x60008DB")]
	[Address(RVA = "0x252E3C", Offset = "0x252E3C", VA = "0x252E3C", Slot = "15")]
	public virtual void JailCellAction(Transform pos)
	{
	}
}
[Token(Token = "0x200016F")]
public class NPCDatabase : MonoBehaviour
{
	[Token(Token = "0x40009F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static NPCDatabase Instance;

	[Token(Token = "0x40009F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public GameObject dealerPrefab;

	[Token(Token = "0x40009F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public GameObject gardePrefab;

	[Token(Token = "0x40009F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public GameObject dudePrefab;

	[Token(Token = "0x40009FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject basicAnnouncerPrefab;

	[Token(Token = "0x40009FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public GameObject gameStartAnnouncerPrefab;

	[Token(Token = "0x40009FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject postFouilleAnnouncerPrefab;

	[Token(Token = "0x40009FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public GameObject firstFouilleAnnouncerPrefab;

	[Token(Token = "0x40009FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public NPCInfo[] NPCinfosBank;

	[Token(Token = "0x40009FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public DudeInfo[] DudeInfosBank;

	[Token(Token = "0x4000A00")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GardeInfo[] GardeInfosBank;

	[Token(Token = "0x4000A01")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public Texture[] CopsMaleTextures;

	[Token(Token = "0x4000A02")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Texture[] CopsFemaleTextures;

	[Token(Token = "0x4000A03")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public Texture[] DudesTextures;

	[Token(Token = "0x60008DC")]
	[Address(RVA = "0x252E40", Offset = "0x252E40", VA = "0x252E40")]
	public NPCDatabase()
	{
	}

	[Token(Token = "0x60008DD")]
	[Address(RVA = "0x252E48", Offset = "0x252E48", VA = "0x252E48")]
	private void Awake()
	{
	}

	[Token(Token = "0x60008DE")]
	[Address(RVA = "0x252FAC", Offset = "0x252FAC", VA = "0x252FAC")]
	public NPCInfo FindInfo(string infoName)
	{
		return null;
	}

	[Token(Token = "0x60008DF")]
	[Address(RVA = "0x2531E8", Offset = "0x2531E8", VA = "0x2531E8")]
	public GardeInfo FindRandomGardeInfo()
	{
		return null;
	}

	[Token(Token = "0x60008E0")]
	[Address(RVA = "0x2533C4", Offset = "0x2533C4", VA = "0x2533C4")]
	public DudeInfo FindRandomDudeInfo()
	{
		return null;
	}

	[Token(Token = "0x60008E1")]
	[Address(RVA = "0x253348", Offset = "0x253348", VA = "0x253348")]
	private float GetGardesTotalWeight()
	{
		return default(float);
	}
}
[Token(Token = "0x2000170")]
public class PathfindingAgent : MonoBehaviour
{
	[Token(Token = "0x200033A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1F7814", Offset = "0x1F7814")]
	private sealed class <LookAtPlayer>c__Iterator0 : IEnumerator, IDisposable, IEnumerator<object>
	{
		[Token(Token = "0x40012FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal GameObject <head>__0;

		[Token(Token = "0x40012FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		internal float time;

		[Token(Token = "0x40012FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal Vector3 <dir>__1;

		[Token(Token = "0x40012FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		internal Quaternion <rot>__1;

		[Token(Token = "0x40012FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		internal PathfindingAgent $this;

		[Token(Token = "0x4001300")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		internal object $current;

		[Token(Token = "0x4001301")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		internal bool $disposing;

		[Token(Token = "0x4001302")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		internal int $PC;

		[Token(Token = "0x170002D5")]
		private object System.Collections.Generic.IEnumerator<object>.Current
		{
			[Token(Token = "0x6001882")]
			[Address(RVA = "0x25DA14", Offset = "0x25DA14", VA = "0x25DA14", Slot = "8")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002D6")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001883")]
			[Address(RVA = "0x25DA1C", Offset = "0x25DA1C", VA = "0x25DA1C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001880")]
		[Address(RVA = "0x25D61C", Offset = "0x25D61C", VA = "0x25D61C")]
		[DebuggerHidden]
		public <LookAtPlayer>c__Iterator0()
		{
		}

		[Token(Token = "0x6001881")]
		[Address(RVA = "0x25D6C4", Offset = "0x25D6C4", VA = "0x25D6C4", Slot = "5")]
		public bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001884")]
		[Address(RVA = "0x25DA24", Offset = "0x25DA24", VA = "0x25DA24", Slot = "7")]
		[DebuggerHidden]
		public void Dispose()
		{
		}

		[Token(Token = "0x6001885")]
		[Address(RVA = "0x25DA38", Offset = "0x25DA38", VA = "0x25DA38", Slot = "6")]
		[DebuggerHidden]
		public void Reset()
		{
		}
	}

	[Token(Token = "0x200033B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1F7874", Offset = "0x1F7874")]
	private sealed class <LookToDir>c__Iterator1 : IEnumerator, IDisposable, IEnumerator<object>
	{
		[Token(Token = "0x4001303")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal Transform dir;

		[Token(Token = "0x4001304")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		internal PathfindingAgent $this;

		[Token(Token = "0x4001305")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal object $current;

		[Token(Token = "0x4001306")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		internal bool $disposing;

		[Token(Token = "0x4001307")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal int $PC;

		[Token(Token = "0x170002D7")]
		private object System.Collections.Generic.IEnumerator<object>.Current
		{
			[Token(Token = "0x6001888")]
			[Address(RVA = "0x25DD84", Offset = "0x25DD84", VA = "0x25DD84", Slot = "8")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002D8")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001889")]
			[Address(RVA = "0x25DD8C", Offset = "0x25DD8C", VA = "0x25DD8C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001886")]
		[Address(RVA = "0x25D6BC", Offset = "0x25D6BC", VA = "0x25D6BC")]
		[DebuggerHidden]
		public <LookToDir>c__Iterator1()
		{
		}

		[Token(Token = "0x6001887")]
		[Address(RVA = "0x25DABC", Offset = "0x25DABC", VA = "0x25DABC", Slot = "5")]
		public bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600188A")]
		[Address(RVA = "0x25DD94", Offset = "0x25DD94", VA = "0x25DD94", Slot = "7")]
		[DebuggerHidden]
		public void Dispose()
		{
		}

		[Token(Token = "0x600188B")]
		[Address(RVA = "0x25DDA8", Offset = "0x25DDA8", VA = "0x25DDA8", Slot = "6")]
		[DebuggerHidden]
		public void Reset()
		{
		}
	}

	[Token(Token = "0x4000A04")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public int currentPathID;

	[Token(Token = "0x4000A05")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	internal PathNode nextNode;

	[Token(Token = "0x4000A06")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public PathInfo debugPath;

	[Token(Token = "0x4000A07")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int destNode;

	[Token(Token = "0x4000A08")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool isArrived;

	[Token(Token = "0x4000A09")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
	public bool isMoving;

	[Token(Token = "0x4000A0A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	internal NavMeshAgent agent;

	[Token(Token = "0x170000CB")]
	internal PathInfo currentPath
	{
		[Token(Token = "0x60008E3")]
		[Address(RVA = "0x25CE84", Offset = "0x25CE84", VA = "0x25CE84")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60008E2")]
	[Address(RVA = "0x25CE7C", Offset = "0x25CE7C", VA = "0x25CE7C")]
	public PathfindingAgent()
	{
	}

	[Token(Token = "0x60008E4")]
	[Address(RVA = "0x25CF28", Offset = "0x25CF28", VA = "0x25CF28")]
	private void Start()
	{
	}

	[Token(Token = "0x60008E5")]
	[Address(RVA = "0x25D06C", Offset = "0x25D06C", VA = "0x25D06C")]
	public void StartPath(int pathID)
	{
	}

	[Token(Token = "0x60008E6")]
	[Address(RVA = "0x2511B0", Offset = "0x2511B0", VA = "0x2511B0")]
	public void GoTo(Vector3 pos)
	{
	}

	[Token(Token = "0x60008E7")]
	[Address(RVA = "0x25D1CC", Offset = "0x25D1CC", VA = "0x25D1CC")]
	public void GoToNextNode()
	{
	}

	[Token(Token = "0x60008E8")]
	[Address(RVA = "0x25D480", Offset = "0x25D480", VA = "0x25D480")]
	public void ForceStop()
	{
	}

	[Token(Token = "0x60008E9")]
	[Address(RVA = "0x25D4FC", Offset = "0x25D4FC", VA = "0x25D4FC")]
	public void Resume()
	{
	}

	[Token(Token = "0x60008EA")]
	[Address(RVA = "0x25D370", Offset = "0x25D370", VA = "0x25D370")]
	public void Stop()
	{
	}

	[Token(Token = "0x60008EB")]
	[Address(RVA = "0x25D578", Offset = "0x25D578", VA = "0x25D578")]
	[DebuggerHidden]
	public IEnumerator LookAtPlayer(float time)
	{
		return null;
	}

	[Token(Token = "0x60008EC")]
	[Address(RVA = "0x25D624", Offset = "0x25D624", VA = "0x25D624")]
	[DebuggerHidden]
	public IEnumerator LookToDir(Transform dir)
	{
		return null;
	}
}
[Serializable]
[Token(Token = "0x2000171")]
public class PathNode : MonoBehaviour
{
	[Token(Token = "0x2000172")]
	public enum NodeType
	{
		[Token(Token = "0x4000A0F")]
		Entrance,
		[Token(Token = "0x4000A10")]
		Single,
		[Token(Token = "0x4000A11")]
		Switch,
		[Token(Token = "0x4000A12")]
		Pause,
		[Token(Token = "0x4000A13")]
		Cell,
		[Token(Token = "0x4000A14")]
		Shortcut
	}

	[Token(Token = "0x4000A0B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public int[] possiblePathsIDs;

	[Token(Token = "0x4000A0C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public NodeType currentNodeType;

	[Token(Token = "0x4000A0D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private Transform secondaryNode;

	[Token(Token = "0x60008ED")]
	[Address(RVA = "0x25DE34", Offset = "0x25DE34", VA = "0x25DE34")]
	public PathNode()
	{
	}

	[Token(Token = "0x60008EE")]
	[Address(RVA = "0x25DE3C", Offset = "0x25DE3C", VA = "0x25DE3C")]
	private void Start()
	{
	}

	[Token(Token = "0x60008EF")]
	[Address(RVA = "0x25DEC4", Offset = "0x25DEC4", VA = "0x25DEC4")]
	private void SwitchAgentPath(PathfindingAgent agent)
	{
	}

	[Token(Token = "0x60008F0")]
	[Address(RVA = "0x25DF5C", Offset = "0x25DF5C", VA = "0x25DF5C")]
	private void OnTriggerEnter(Collider other)
	{
	}
}
[Serializable]
[Token(Token = "0x2000173")]
public class PathInfo
{
	[Token(Token = "0x4000A15")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public string name;

	[Token(Token = "0x4000A16")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public int pathID;

	[Token(Token = "0x4000A17")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public List<Transform> nodesTransforms;

	[Token(Token = "0x4000A18")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	[HideInInspector]
	public List<PathNode> nodes;

	[Token(Token = "0x60008F1")]
	[Address(RVA = "0x25DE2C", Offset = "0x25DE2C", VA = "0x25DE2C")]
	public PathInfo()
	{
	}
}
[Token(Token = "0x2000174")]
public class PathsManager : MonoBehaviour
{
	[Token(Token = "0x4000A19")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static PathsManager Instance;

	[Token(Token = "0x4000A1A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public PathInfo[] levelPaths;

	[Token(Token = "0x4000A1B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private Dictionary<PathNode.NodeType, Transform[]> nodeCache;

	[Token(Token = "0x170000CC")]
	public Transform entrance
	{
		[Token(Token = "0x60008F3")]
		[Address(RVA = "0x2511A8", Offset = "0x2511A8", VA = "0x2511A8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000CD")]
	public Transform shortcut
	{
		[Token(Token = "0x60008F4")]
		[Address(RVA = "0x254B3C", Offset = "0x254B3C", VA = "0x254B3C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000CE")]
	public Transform jailCell
	{
		[Token(Token = "0x60008F5")]
		[Address(RVA = "0x25134C", Offset = "0x25134C", VA = "0x25134C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60008F2")]
	[Address(RVA = "0x25E3AC", Offset = "0x25E3AC", VA = "0x25E3AC")]
	public PathsManager()
	{
	}

	[Token(Token = "0x60008F6")]
	[Address(RVA = "0x25E524", Offset = "0x25E524", VA = "0x25E524")]
	private void Awake()
	{
	}

	[Token(Token = "0x60008F7")]
	[Address(RVA = "0x25E590", Offset = "0x25E590", VA = "0x25E590")]
	private void CacheNodes()
	{
	}

	[Token(Token = "0x60008F8")]
	[Address(RVA = "0x25E3B4", Offset = "0x25E3B4", VA = "0x25E3B4")]
	private Transform FindNode(PathNode.NodeType nodeType)
	{
		return null;
	}

	[Token(Token = "0x60008F9")]
	[Address(RVA = "0x25EA00", Offset = "0x25EA00", VA = "0x25EA00")]
	public Transform[] FindNodes(PathNode.NodeType nodeType)
	{
		return null;
	}
}
[Token(Token = "0x2000175")]
public class PaulAnimator : CharacterAnimator
{
	[Token(Token = "0x4000A1C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private float coughTimer;

	[Token(Token = "0x60008FA")]
	[Address(RVA = "0x25EAE8", Offset = "0x25EAE8", VA = "0x25EAE8")]
	public PaulAnimator()
	{
	}

	[Token(Token = "0x60008FB")]
	[Address(RVA = "0x25EAFC", Offset = "0x25EAFC", VA = "0x25EAFC", Slot = "5")]
	protected override void Update()
	{
	}

	[Token(Token = "0x60008FC")]
	[Address(RVA = "0x25EB7C", Offset = "0x25EB7C", VA = "0x25EB7C", Slot = "6")]
	public override void TriggeredSpecificAnim()
	{
	}
}
[Token(Token = "0x2000176")]
public class PauseManager : MonoBehaviour
{
	[Token(Token = "0x4000A1D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1F78E4", Offset = "0x1F78E4")]
	[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0x1F78E4", Offset = "0x1F78E4")]
	private static PauseManager <Instance>k__BackingField;

	[Token(Token = "0x4000A20")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public bool isPaused;

	[Token(Token = "0x4000A21")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float _lastTimeScale;

	[Token(Token = "0x4000A22")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private int nombrePause;

	[Token(Token = "0x4000A23")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private TutorialManager tuto;

	[Token(Token = "0x4000A24")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private SaveAnimationManager save;

	[Token(Token = "0x4000A25")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Transform saveParent;

	[Token(Token = "0x4000A26")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private Vector3 savePos;

	[Token(Token = "0x4000A27")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Quaternion saveRot;

	[Token(Token = "0x4000A28")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private MorningDate morning;

	[Token(Token = "0x4000A29")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private Transform morningParent;

	[Token(Token = "0x4000A2A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Vector3 morningPos;

	[Token(Token = "0x4000A2B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private Quaternion morningRot;

	[Token(Token = "0x4000A2C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private NVRCanvasInput NVRCanvas;

	[Token(Token = "0x170000CF")]
	public static PauseManager Instance
	{
		[Token(Token = "0x60008FE")]
		[Address(RVA = "0x25905C", Offset = "0x25905C", VA = "0x25905C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1F7980", Offset = "0x1F7980")]
		get
		{
			return null;
		}
		[Token(Token = "0x60008FF")]
		[Address(RVA = "0x25EC5C", Offset = "0x25EC5C", VA = "0x25EC5C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1F7990", Offset = "0x1F7990")]
		private set
		{
		}
	}

	[Token(Token = "0x14000001")]
	public event Action OnGamePaused
	{
		[Token(Token = "0x6000900")]
		[Address(RVA = "0x25ECC0", Offset = "0x25ECC0", VA = "0x25ECC0")]
		add
		{
		}
		[Token(Token = "0x6000901")]
		[Address(RVA = "0x25EDB4", Offset = "0x25EDB4", VA = "0x25EDB4")]
		remove
		{
		}
	}

	[Token(Token = "0x14000002")]
	public event Action OnGameUnpaused
	{
		[Token(Token = "0x6000902")]
		[Address(RVA = "0x25EEA8", Offset = "0x25EEA8", VA = "0x25EEA8")]
		add
		{
		}
		[Token(Token = "0x6000903")]
		[Address(RVA = "0x25EF9C", Offset = "0x25EF9C", VA = "0x25EF9C")]
		remove
		{
		}
	}

	[Token(Token = "0x60008FD")]
	[Address(RVA = "0x25EC54", Offset = "0x25EC54", VA = "0x25EC54")]
	public PauseManager()
	{
	}

	[Token(Token = "0x6000904")]
	[Address(RVA = "0x25F090", Offset = "0x25F090", VA = "0x25F090")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000905")]
	[Address(RVA = "0x25F304", Offset = "0x25F304", VA = "0x25F304")]
	private void Start()
	{
	}

	[Token(Token = "0x6000906")]
	[Address(RVA = "0x2591DC", Offset = "0x2591DC", VA = "0x2591DC")]
	public void PauseGame()
	{
	}

	[Token(Token = "0x6000907")]
	[Address(RVA = "0x2590C0", Offset = "0x2590C0", VA = "0x2590C0")]
	public void UnpauseGame()
	{
	}

	[Token(Token = "0x6000908")]
	[Address(RVA = "0x259768", Offset = "0x259768", VA = "0x259768")]
	public static void PauseQuest(string nomFade)
	{
	}

	[Token(Token = "0x6000909")]
	[Address(RVA = "0x25F500", Offset = "0x25F500", VA = "0x25F500")]
	public void PauseQuest_(string nomFade)
	{
	}

	[Token(Token = "0x600090A")]
	[Address(RVA = "0x2596EC", Offset = "0x2596EC", VA = "0x2596EC")]
	public static void UnpauseQuest(string nomFade)
	{
	}

	[Token(Token = "0x600090B")]
	[Address(RVA = "0x25FAC8", Offset = "0x25FAC8", VA = "0x25FAC8")]
	public void UnpauseQuest_(string nomFade)
	{
	}
}
[Token(Token = "0x2000177")]
public class PauseOculus : MonoBehaviour
{
	[Token(Token = "0x4000A2D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public GameObject canvas;

	[Token(Token = "0x4000A2E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private NVRPlayer player;

	[Token(Token = "0x4000A2F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private bool isPaused;

	[Token(Token = "0x4000A30")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x15")]
	private bool boutonPause;

	[Token(Token = "0x600090C")]
	[Address(RVA = "0x25FF3C", Offset = "0x25FF3C", VA = "0x25FF3C")]
	public PauseOculus()
	{
	}

	[Token(Token = "0x600090D")]
	[Address(RVA = "0x25FF44", Offset = "0x25FF44", VA = "0x25FF44")]
	private void Start()
	{
	}

	[Token(Token = "0x600090E")]
	[Address(RVA = "0x25FFE4", Offset = "0x25FFE4", VA = "0x25FFE4")]
	private void Update()
	{
	}
}
[Token(Token = "0x2000178")]
public class PlateformSpecificAsset : MonoBehaviour
{
	[Token(Token = "0x4000A31")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public GameObject ViveAsset;

	[Token(Token = "0x4000A32")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public GameObject OcculusAsset;

	[Token(Token = "0x4000A33")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public GameObject MixedRealityAsset;

	[Token(Token = "0x4000A34")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject PS4Asset;

	[Token(Token = "0x4000A35")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public GameObject CosmosAsset;

	[Token(Token = "0x4000A36")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject QuestAsset;

	[Token(Token = "0x4000A37")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public GameObject Quest2Asset;

	[Token(Token = "0x600090F")]
	[Address(RVA = "0x2626A4", Offset = "0x2626A4", VA = "0x2626A4")]
	public PlateformSpecificAsset()
	{
	}

	[Token(Token = "0x6000910")]
	[Address(RVA = "0x2626AC", Offset = "0x2626AC", VA = "0x2626AC")]
	private void Start()
	{
	}
}
[Token(Token = "0x2000179")]
public enum Clusters
{
	[Token(Token = "0x4000A39")]
	Particle,
	[Token(Token = "0x4000A3A")]
	Object,
	[Token(Token = "0x4000A3B")]
	Meuble,
	[Token(Token = "0x4000A3C")]
	ObjectModels,
	[Token(Token = "0x4000A3D")]
	NPCs,
	[Token(Token = "0x4000A3E")]
	NPCModels,
	[Token(Token = "0x4000A3F")]
	UIElements
}
[Token(Token = "0x200017A")]
public class MainSpawner : MonoBehaviour
{
	[Token(Token = "0x4000A40")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	[SerializeField]
	private Transform jailSpawnAnchor;

	[Token(Token = "0x4000A41")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[SerializeField]
	private Transform tutorialSpawnAnchor;

	[Token(Token = "0x4000A42")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private Animator jailSpawnAnimator;

	[Token(Token = "0x170000D0")]
	public Transform Anchor
	{
		[Token(Token = "0x6000912")]
		[Address(RVA = "0xC8B158", Offset = "0xC8B158", VA = "0xC8B158")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000911")]
	[Address(RVA = "0xC8B150", Offset = "0xC8B150", VA = "0xC8B150")]
	public MainSpawner()
	{
	}

	[Token(Token = "0x6000913")]
	[Address(RVA = "0xC8B1DC", Offset = "0xC8B1DC", VA = "0xC8B1DC")]
	public void Init()
	{
	}

	[Token(Token = "0x6000914")]
	[Address(RVA = "0xC8B668", Offset = "0xC8B668", VA = "0xC8B668")]
	private void OpenSpawner()
	{
	}

	[Token(Token = "0x6000915")]
	[Address(RVA = "0xC8B6E0", Offset = "0xC8B6E0", VA = "0xC8B6E0")]
	private void CloseSpawner()
	{
	}
}
[Token(Token = "0x200017B")]
public class MainSpawnerManager : MonoBehaviour
{
	[Token(Token = "0x200033C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1F7ACC", Offset = "0x1F7ACC")]
	private sealed class <SpawnObjectCoroutine>c__Iterator0 : IEnumerator, IDisposable, IEnumerator<object>
	{
		[Token(Token = "0x4001308")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal int value;

		[Token(Token = "0x4001309")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		internal GameObject objectToSpawn;

		[Token(Token = "0x400130A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal Clusters cluster;

		[Token(Token = "0x400130B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		internal MainSpawnerManager $this;

		[Token(Token = "0x400130C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal object $current;

		[Token(Token = "0x400130D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		internal bool $disposing;

		[Token(Token = "0x400130E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal int $PC;

		[Token(Token = "0x170002D9")]
		private object System.Collections.Generic.IEnumerator<object>.Current
		{
			[Token(Token = "0x600188E")]
			[Address(RVA = "0xC8DE30", Offset = "0xC8DE30", VA = "0xC8DE30", Slot = "8")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002DA")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600188F")]
			[Address(RVA = "0xC8DE38", Offset = "0xC8DE38", VA = "0xC8DE38", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600188C")]
		[Address(RVA = "0xC8C97C", Offset = "0xC8C97C", VA = "0xC8C97C")]
		[DebuggerHidden]
		public <SpawnObjectCoroutine>c__Iterator0()
		{
		}

		[Token(Token = "0x600188D")]
		[Address(RVA = "0xC8DC10", Offset = "0xC8DC10", VA = "0xC8DC10", Slot = "5")]
		public bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001890")]
		[Address(RVA = "0xC8DE40", Offset = "0xC8DE40", VA = "0xC8DE40", Slot = "7")]
		[DebuggerHidden]
		public void Dispose()
		{
		}

		[Token(Token = "0x6001891")]
		[Address(RVA = "0xC8DE54", Offset = "0xC8DE54", VA = "0xC8DE54", Slot = "6")]
		[DebuggerHidden]
		public void Reset()
		{
		}
	}

	[Token(Token = "0x200033D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1F7B2C", Offset = "0x1F7B2C")]
	private sealed class <SpawnObjectsCoroutine>c__Iterator1 : IEnumerator, IDisposable, IEnumerator<object>
	{
		[Token(Token = "0x400130F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal int <i>__1;

		[Token(Token = "0x4001310")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		internal GameObject[] objectsToSpawn;

		[Token(Token = "0x4001311")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal Clusters cluster;

		[Token(Token = "0x4001312")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		internal MainSpawnerManager $this;

		[Token(Token = "0x4001313")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal object $current;

		[Token(Token = "0x4001314")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		internal bool $disposing;

		[Token(Token = "0x4001315")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal int $PC;

		[Token(Token = "0x170002DB")]
		private object System.Collections.Generic.IEnumerator<object>.Current
		{
			[Token(Token = "0x6001894")]
			[Address(RVA = "0xC8E120", Offset = "0xC8E120", VA = "0xC8E120", Slot = "8")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002DC")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001895")]
			[Address(RVA = "0xC8E128", Offset = "0xC8E128", VA = "0xC8E128", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001892")]
		[Address(RVA = "0xC8C984", Offset = "0xC8C984", VA = "0xC8C984")]
		[DebuggerHidden]
		public <SpawnObjectsCoroutine>c__Iterator1()
		{
		}

		[Token(Token = "0x6001893")]
		[Address(RVA = "0xC8DED8", Offset = "0xC8DED8", VA = "0xC8DED8", Slot = "5")]
		public bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001896")]
		[Address(RVA = "0xC8E130", Offset = "0xC8E130", VA = "0xC8E130", Slot = "7")]
		[DebuggerHidden]
		public void Dispose()
		{
		}

		[Token(Token = "0x6001897")]
		[Address(RVA = "0xC8E144", Offset = "0xC8E144", VA = "0xC8E144", Slot = "6")]
		[DebuggerHidden]
		public void Reset()
		{
		}
	}

	[Token(Token = "0x200033E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1F7B8C", Offset = "0x1F7B8C")]
	private sealed class <SpawnObjectsCoroutine>c__Iterator2 : IEnumerator, IDisposable, IEnumerator<object>
	{
		[Token(Token = "0x4001316")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal int money;

		[Token(Token = "0x4001317")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		internal int <tempValue>__0;

		[Token(Token = "0x4001318")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal int <i>__1;

		[Token(Token = "0x4001319")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		internal BuyingData[] meubleToSpawn;

		[Token(Token = "0x400131A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal int <MaxCapacity>__2;

		[Token(Token = "0x400131B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		internal int <value>__3;

		[Token(Token = "0x400131C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal int <i>__4;

		[Token(Token = "0x400131D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		internal BuyingData[] objectsToSpawn;

		[Token(Token = "0x400131E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		internal int <MaxCapacity>__5;

		[Token(Token = "0x400131F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		internal int <value>__6;

		[Token(Token = "0x4001320")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		internal MainSpawnerManager $this;

		[Token(Token = "0x4001321")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		internal object $current;

		[Token(Token = "0x4001322")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		internal bool $disposing;

		[Token(Token = "0x4001323")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		internal int $PC;

		[Token(Token = "0x170002DD")]
		private object System.Collections.Generic.IEnumerator<object>.Current
		{
			[Token(Token = "0x600189A")]
			[Address(RVA = "0xC8EB1C", Offset = "0xC8EB1C", VA = "0xC8EB1C", Slot = "8")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002DE")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600189B")]
			[Address(RVA = "0xC8EB24", Offset = "0xC8EB24", VA = "0xC8EB24", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001898")]
		[Address(RVA = "0xC8C98C", Offset = "0xC8C98C", VA = "0xC8C98C")]
		[DebuggerHidden]
		public <SpawnObjectsCoroutine>c__Iterator2()
		{
		}

		[Token(Token = "0x6001899")]
		[Address(RVA = "0xC8E1C8", Offset = "0xC8E1C8", VA = "0xC8E1C8", Slot = "5")]
		public bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600189C")]
		[Address(RVA = "0xC8EB2C", Offset = "0xC8EB2C", VA = "0xC8EB2C", Slot = "7")]
		[DebuggerHidden]
		public void Dispose()
		{
		}

		[Token(Token = "0x600189D")]
		[Address(RVA = "0xC8EB40", Offset = "0xC8EB40", VA = "0xC8EB40", Slot = "6")]
		[DebuggerHidden]
		public void Reset()
		{
		}
	}

	[Token(Token = "0x200033F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1F7BEC", Offset = "0x1F7BEC")]
	private sealed class <SpawnRandomFromArrayCoroutine>c__Iterator3 : IEnumerator, IDisposable, IEnumerator<object>
	{
		[Token(Token = "0x4001324")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal int <i>__1;

		[Token(Token = "0x4001325")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		internal int numberToSpawn;

		[Token(Token = "0x4001326")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal GameObject[] objectsArray;

		[Token(Token = "0x4001327")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		internal Clusters cluster;

		[Token(Token = "0x4001328")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal MainSpawnerManager $this;

		[Token(Token = "0x4001329")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		internal object $current;

		[Token(Token = "0x400132A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal bool $disposing;

		[Token(Token = "0x400132B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		internal int $PC;

		[Token(Token = "0x170002DF")]
		private object System.Collections.Generic.IEnumerator<object>.Current
		{
			[Token(Token = "0x60018A0")]
			[Address(RVA = "0xC8EE38", Offset = "0xC8EE38", VA = "0xC8EE38", Slot = "8")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002E0")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60018A1")]
			[Address(RVA = "0xC8EE40", Offset = "0xC8EE40", VA = "0xC8EE40", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600189E")]
		[Address(RVA = "0xC8C994", Offset = "0xC8C994", VA = "0xC8C994")]
		[DebuggerHidden]
		public <SpawnRandomFromArrayCoroutine>c__Iterator3()
		{
		}

		[Token(Token = "0x600189F")]
		[Address(RVA = "0xC8EBC4", Offset = "0xC8EBC4", VA = "0xC8EBC4", Slot = "5")]
		public bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60018A2")]
		[Address(RVA = "0xC8EE48", Offset = "0xC8EE48", VA = "0xC8EE48", Slot = "7")]
		[DebuggerHidden]
		public void Dispose()
		{
		}

		[Token(Token = "0x60018A3")]
		[Address(RVA = "0xC8EE5C", Offset = "0xC8EE5C", VA = "0xC8EE5C", Slot = "6")]
		[DebuggerHidden]
		public void Reset()
		{
		}
	}

	[Token(Token = "0x2000340")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1F7C4C", Offset = "0x1F7C4C")]
	private sealed class <FakeSpawnObjectCoroutine>c__Iterator4 : IEnumerator, IDisposable, IEnumerator<object>
	{
		[Token(Token = "0x400132C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal GameObject objectToSpawn;

		[Token(Token = "0x400132D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		internal MainSpawnerManager $this;

		[Token(Token = "0x400132E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal object $current;

		[Token(Token = "0x400132F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		internal bool $disposing;

		[Token(Token = "0x4001330")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal int $PC;

		[Token(Token = "0x170002E1")]
		private object System.Collections.Generic.IEnumerator<object>.Current
		{
			[Token(Token = "0x60018A6")]
			[Address(RVA = "0xC8D4A4", Offset = "0xC8D4A4", VA = "0xC8D4A4", Slot = "8")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002E2")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60018A7")]
			[Address(RVA = "0xC8D4AC", Offset = "0xC8D4AC", VA = "0xC8D4AC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60018A4")]
		[Address(RVA = "0xC8C99C", Offset = "0xC8C99C", VA = "0xC8C99C")]
		[DebuggerHidden]
		public <FakeSpawnObjectCoroutine>c__Iterator4()
		{
		}

		[Token(Token = "0x60018A5")]
		[Address(RVA = "0xC8D2C0", Offset = "0xC8D2C0", VA = "0xC8D2C0", Slot = "5")]
		public bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60018A8")]
		[Address(RVA = "0xC8D4B4", Offset = "0xC8D4B4", VA = "0xC8D4B4", Slot = "7")]
		[DebuggerHidden]
		public void Dispose()
		{
		}

		[Token(Token = "0x60018A9")]
		[Address(RVA = "0xC8D4C8", Offset = "0xC8D4C8", VA = "0xC8D4C8", Slot = "6")]
		[DebuggerHidden]
		public void Reset()
		{
		}
	}

	[Token(Token = "0x2000341")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1F7CAC", Offset = "0x1F7CAC")]
	private sealed class <FakeSpawnObjectCoroutine>c__Iterator5 : IEnumerator, IDisposable, IEnumerator<object>
	{
		[Token(Token = "0x4001331")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal int <i>__1;

		[Token(Token = "0x4001332")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		internal GameObject[] objectToSpawn;

		[Token(Token = "0x4001333")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal MainSpawnerManager $this;

		[Token(Token = "0x4001334")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		internal object $current;

		[Token(Token = "0x4001335")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal bool $disposing;

		[Token(Token = "0x4001336")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		internal int $PC;

		[Token(Token = "0x170002E3")]
		private object System.Collections.Generic.IEnumerator<object>.Current
		{
			[Token(Token = "0x60018AC")]
			[Address(RVA = "0xC8D78C", Offset = "0xC8D78C", VA = "0xC8D78C", Slot = "8")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002E4")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60018AD")]
			[Address(RVA = "0xC8D794", Offset = "0xC8D794", VA = "0xC8D794", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60018AA")]
		[Address(RVA = "0xC8C9A4", Offset = "0xC8C9A4", VA = "0xC8C9A4")]
		[DebuggerHidden]
		public <FakeSpawnObjectCoroutine>c__Iterator5()
		{
		}

		[Token(Token = "0x60018AB")]
		[Address(RVA = "0xC8D54C", Offset = "0xC8D54C", VA = "0xC8D54C", Slot = "5")]
		public bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60018AE")]
		[Address(RVA = "0xC8D79C", Offset = "0xC8D79C", VA = "0xC8D79C", Slot = "7")]
		[DebuggerHidden]
		public void Dispose()
		{
		}

		[Token(Token = "0x60018AF")]
		[Address(RVA = "0xC8D7B0", Offset = "0xC8D7B0", VA = "0xC8D7B0", Slot = "6")]
		[DebuggerHidden]
		public void Reset()
		{
		}
	}

	[Token(Token = "0x2000342")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1F7D0C", Offset = "0x1F7D0C")]
	private sealed class <SpawnCountableRessourceCoroutine>c__Iterator6 : IEnumerator, IDisposable, IEnumerator<object>
	{
		[Token(Token = "0x4001337")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal int value;

		[Token(Token = "0x4001338")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		internal int <tempValue>__0;

		[Token(Token = "0x4001339")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal string name;

		[Token(Token = "0x400133A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		internal MainSpawnerManager $this;

		[Token(Token = "0x400133B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal object $current;

		[Token(Token = "0x400133C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		internal bool $disposing;

		[Token(Token = "0x400133D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal int $PC;

		[Token(Token = "0x170002E5")]
		private object System.Collections.Generic.IEnumerator<object>.Current
		{
			[Token(Token = "0x60018B2")]
			[Address(RVA = "0xC8DB68", Offset = "0xC8DB68", VA = "0xC8DB68", Slot = "8")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002E6")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60018B3")]
			[Address(RVA = "0xC8DB70", Offset = "0xC8DB70", VA = "0xC8DB70", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60018B0")]
		[Address(RVA = "0xC8C9AC", Offset = "0xC8C9AC", VA = "0xC8C9AC")]
		[DebuggerHidden]
		public <SpawnCountableRessourceCoroutine>c__Iterator6()
		{
		}

		[Token(Token = "0x60018B1")]
		[Address(RVA = "0xC8D834", Offset = "0xC8D834", VA = "0xC8D834", Slot = "5")]
		public bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60018B4")]
		[Address(RVA = "0xC8DB78", Offset = "0xC8DB78", VA = "0xC8DB78", Slot = "7")]
		[DebuggerHidden]
		public void Dispose()
		{
		}

		[Token(Token = "0x60018B5")]
		[Address(RVA = "0xC8DB8C", Offset = "0xC8DB8C", VA = "0xC8DB8C", Slot = "6")]
		[DebuggerHidden]
		public void Reset()
		{
		}
	}

	[Token(Token = "0x4000A43")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static MainSpawnerManager Instance;

	[Token(Token = "0x4000A44")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public MainSpawner MainSpawner;

	[Token(Token = "0x4000A45")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float openingDoorDelay;

	[Token(Token = "0x4000A46")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float delayBetweenObjects;

	[Token(Token = "0x14000003")]
	public event Action OnSpawningObject
	{
		[Token(Token = "0x6000917")]
		[Address(RVA = "0xC8B38C", Offset = "0xC8B38C", VA = "0xC8B38C")]
		add
		{
		}
		[Token(Token = "0x6000918")]
		[Address(RVA = "0xC8B760", Offset = "0xC8B760", VA = "0xC8B760")]
		remove
		{
		}
	}

	[Token(Token = "0x14000004")]
	public event Action OnFinishedSpawningObject
	{
		[Token(Token = "0x6000919")]
		[Address(RVA = "0xC8B480", Offset = "0xC8B480", VA = "0xC8B480")]
		add
		{
		}
		[Token(Token = "0x600091A")]
		[Address(RVA = "0xC8B854", Offset = "0xC8B854", VA = "0xC8B854")]
		remove
		{
		}
	}

	[Token(Token = "0x14000005")]
	public event Action OnFinishedMassSpawning
	{
		[Token(Token = "0x600091B")]
		[Address(RVA = "0xC8B574", Offset = "0xC8B574", VA = "0xC8B574")]
		add
		{
		}
		[Token(Token = "0x600091C")]
		[Address(RVA = "0xC8B948", Offset = "0xC8B948", VA = "0xC8B948")]
		remove
		{
		}
	}

	[Token(Token = "0x6000916")]
	[Address(RVA = "0xC8B758", Offset = "0xC8B758", VA = "0xC8B758")]
	public MainSpawnerManager()
	{
	}

	[Token(Token = "0x600091D")]
	[Address(RVA = "0xC8BA3C", Offset = "0xC8BA3C", VA = "0xC8BA3C")]
	private void Awake()
	{
	}

	[Token(Token = "0x600091E")]
	[Address(RVA = "0xC8BBE4", Offset = "0xC8BBE4", VA = "0xC8BBE4")]
	public void Spawn(BuyingData objectToSpawn, Clusters cluster)
	{
	}

	[Token(Token = "0x600091F")]
	[Address(RVA = "0xC8BD88", Offset = "0xC8BD88", VA = "0xC8BD88")]
	public void Spawn(GameObject objectToSpawn, Clusters cluster)
	{
	}

	[Token(Token = "0x6000920")]
	[Address(RVA = "0xC8BDB8", Offset = "0xC8BDB8", VA = "0xC8BDB8")]
	public void Spawn(GameObject[] objectsToSpawn, Clusters cluster)
	{
	}

	[Token(Token = "0x6000921")]
	[Address(RVA = "0xC8BE88", Offset = "0xC8BE88", VA = "0xC8BE88")]
	public void Spawn(BuyingData[] meubleToSpawn, BuyingData[] objectsToSpawn, int money)
	{
	}

	[Token(Token = "0x6000922")]
	[Address(RVA = "0xC8BF74", Offset = "0xC8BF74", VA = "0xC8BF74")]
	public void Delete(GameObject objectToDelete, Clusters cluster)
	{
	}

	[Token(Token = "0x6000923")]
	[Address(RVA = "0xC8BF80", Offset = "0xC8BF80", VA = "0xC8BF80")]
	public void Delete(SpawnableObject objectToDelete, Clusters cluster)
	{
	}

	[Token(Token = "0x6000924")]
	[Address(RVA = "0xC8BFC0", Offset = "0xC8BFC0", VA = "0xC8BFC0")]
	public void Delete(GameObject[] objectsToDelete, Clusters cluster)
	{
	}

	[Token(Token = "0x6000925")]
	[Address(RVA = "0xC8C1B4", Offset = "0xC8C1B4", VA = "0xC8C1B4")]
	public void Delete(SpawnableObject[] objectsToDelete, Clusters cluster)
	{
	}

	[Token(Token = "0x6000926")]
	public void Delete<T>(IEnumerable<T> objectsToDelete, Clusters cluster) where T : SpawnableObject
	{
	}

	[Token(Token = "0x6000927")]
	[Address(RVA = "0xC8C3A8", Offset = "0xC8C3A8", VA = "0xC8C3A8")]
	public void FakeSpawn(GameObject objectToSpawn)
	{
	}

	[Token(Token = "0x6000928")]
	[Address(RVA = "0xC8C464", Offset = "0xC8C464", VA = "0xC8C464")]
	public void FakeSpawn(GameObject[] objectToSpawn)
	{
	}

	[Token(Token = "0x6000929")]
	[Address(RVA = "0xC8C520", Offset = "0xC8C520", VA = "0xC8C520")]
	public void SpawnRandomFromArray(int numberToSpawn, GameObject[] objectsArray, Clusters cluster)
	{
	}

	[Token(Token = "0x600092A")]
	[Address(RVA = "0xC8C60C", Offset = "0xC8C60C", VA = "0xC8C60C")]
	public void SpawnMoney(int value)
	{
	}

	[Token(Token = "0x600092B")]
	[Address(RVA = "0xC8C734", Offset = "0xC8C734", VA = "0xC8C734")]
	public void SpawnSkillpoint(int skillpoint)
	{
	}

	[Token(Token = "0x600092C")]
	[Address(RVA = "0xC8C7B0", Offset = "0xC8C7B0", VA = "0xC8C7B0")]
	public void FakeDelete(GameObject objectToDelete)
	{
	}

	[Token(Token = "0x600092D")]
	[Address(RVA = "0xC8C924", Offset = "0xC8C924", VA = "0xC8C924")]
	public void FakeDelete(GameObject[] objectToDelete)
	{
	}

	[Token(Token = "0x600092E")]
	[Address(RVA = "0xC8BCC8", Offset = "0xC8BCC8", VA = "0xC8BCC8")]
	[DebuggerHidden]
	private IEnumerator SpawnObjectCoroutine(GameObject objectToSpawn, Clusters cluster, int value = 0)
	{
		return null;
	}

	[Token(Token = "0x600092F")]
	[Address(RVA = "0xC8BDDC", Offset = "0xC8BDDC", VA = "0xC8BDDC")]
	[DebuggerHidden]
	private IEnumerator SpawnObjectsCoroutine(GameObject[] objectsToSpawn, Clusters cluster)
	{
		return null;
	}

	[Token(Token = "0x6000930")]
	[Address(RVA = "0xC8BEB4", Offset = "0xC8BEB4", VA = "0xC8BEB4")]
	[DebuggerHidden]
	private IEnumerator SpawnObjectsCoroutine(BuyingData[] meubleToSpawn, BuyingData[] objectsToSpawn, int money)
	{
		return null;
	}

	[Token(Token = "0x6000931")]
	[Address(RVA = "0xC8C54C", Offset = "0xC8C54C", VA = "0xC8C54C")]
	[DebuggerHidden]
	private IEnumerator SpawnRandomFromArrayCoroutine(int numberToSpawn, GameObject[] objectsArray, Clusters cluster)
	{
		return null;
	}

	[Token(Token = "0x6000932")]
	[Address(RVA = "0xC8C3CC", Offset = "0xC8C3CC", VA = "0xC8C3CC")]
	[DebuggerHidden]
	private IEnumerator FakeSpawnObjectCoroutine(GameObject objectToSpawn)
	{
		return null;
	}

	[Token(Token = "0x6000933")]
	[Address(RVA = "0xC8C488", Offset = "0xC8C488", VA = "0xC8C488")]
	[DebuggerHidden]
	private IEnumerator FakeSpawnObjectCoroutine(GameObject[] objectToSpawn)
	{
		return null;
	}

	[Token(Token = "0x6000934")]
	[Address(RVA = "0xC8C688", Offset = "0xC8C688", VA = "0xC8C688")]
	[DebuggerHidden]
	private IEnumerator SpawnCountableRessourceCoroutine(int value, string name)
	{
		return null;
	}

	[Token(Token = "0x6000935")]
	[Address(RVA = "0xC8C9B4", Offset = "0xC8C9B4", VA = "0xC8C9B4")]
	private void SpawnMoneyValue(int value)
	{
	}

	[Token(Token = "0x6000936")]
	[Address(RVA = "0xC8CA20", Offset = "0xC8CA20", VA = "0xC8CA20")]
	private void SpawnCountableRessource(int value, string name)
	{
	}

	[Token(Token = "0x6000937")]
	[Address(RVA = "0xC8CD14", Offset = "0xC8CD14", VA = "0xC8CD14")]
	private void SpawnSequence(GameObject objectToSpawn, Clusters cluster, int capacity)
	{
	}

	[Token(Token = "0x6000938")]
	[Address(RVA = "0xC8CF94", Offset = "0xC8CF94", VA = "0xC8CF94")]
	private void SpawnSequence(GameObject objectToSpawn, Clusters cluster)
	{
	}

	[Token(Token = "0x6000939")]
	[Address(RVA = "0xC8D138", Offset = "0xC8D138", VA = "0xC8D138")]
	private void FakeSpawnSequence(GameObject objectToSpawn)
	{
	}

	[Token(Token = "0x600093A")]
	[Address(RVA = "0xC8C7B4", Offset = "0xC8C7B4", VA = "0xC8C7B4")]
	private void FakeDeleteSequence(GameObject objectToDelete)
	{
	}

	[Token(Token = "0x600093B")]
	[Address(RVA = "0xC8CBC0", Offset = "0xC8CBC0", VA = "0xC8CBC0")]
	private void SpawnBaseParticules()
	{
	}
}
[Token(Token = "0x200017C")]
public class NPCSpawnerManager : MonoBehaviour
{
	[Token(Token = "0x4000A4A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static NPCSpawnerManager Instance;

	[Token(Token = "0x14000006")]
	public event Action<NPC> OnNPCSpawned
	{
		[Token(Token = "0x600093D")]
		[Address(RVA = "0x253450", Offset = "0x253450", VA = "0x253450")]
		add
		{
		}
		[Token(Token = "0x600093E")]
		[Address(RVA = "0x253544", Offset = "0x253544", VA = "0x253544")]
		remove
		{
		}
	}

	[Token(Token = "0x14000007")]
	public event Action<NPC> OnNPCDespawned
	{
		[Token(Token = "0x600093F")]
		[Address(RVA = "0x253638", Offset = "0x253638", VA = "0x253638")]
		add
		{
		}
		[Token(Token = "0x6000940")]
		[Address(RVA = "0x25372C", Offset = "0x25372C", VA = "0x25372C")]
		remove
		{
		}
	}

	[Token(Token = "0x600093C")]
	[Address(RVA = "0x253448", Offset = "0x253448", VA = "0x253448")]
	public NPCSpawnerManager()
	{
	}

	[Token(Token = "0x6000941")]
	[Address(RVA = "0x253820", Offset = "0x253820", VA = "0x253820")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000942")]
	[Address(RVA = "0x250748", Offset = "0x250748", VA = "0x250748")]
	public GameObject SpawnModel(GameObject model)
	{
		return null;
	}

	[Token(Token = "0x6000943")]
	[Address(RVA = "0x253E00", Offset = "0x253E00", VA = "0x253E00")]
	public Dealer SpawnDealer()
	{
		return null;
	}

	[Token(Token = "0x6000944")]
	[Address(RVA = "0x254094", Offset = "0x254094", VA = "0x254094")]
	public Announcer SpawnAnnouncer(AnnouncerType announcerType, Queue<string> announcements, GameObject[] visuals)
	{
		return null;
	}

	[Token(Token = "0x6000945")]
	[Address(RVA = "0x254568", Offset = "0x254568", VA = "0x254568")]
	public Garde SpawnGuard(Vector3 position)
	{
		return null;
	}

	[Token(Token = "0x6000946")]
	[Address(RVA = "0x2547F0", Offset = "0x2547F0", VA = "0x2547F0")]
	public Dude SpawnDude()
	{
		return null;
	}

	[Token(Token = "0x6000947")]
	[Address(RVA = "0x254A8C", Offset = "0x254A8C", VA = "0x254A8C")]
	public void DespawnNPC(NPC npc)
	{
	}

	[Token(Token = "0x6000948")]
	[Address(RVA = "0x253EA4", Offset = "0x253EA4", VA = "0x253EA4")]
	private GameObject NewDealer()
	{
		return null;
	}

	[Token(Token = "0x6000949")]
	[Address(RVA = "0x254180", Offset = "0x254180", VA = "0x254180")]
	private GameObject NewAnnouncer(AnnouncerType announcerType)
	{
		return null;
	}

	[Token(Token = "0x600094A")]
	[Address(RVA = "0x25462C", Offset = "0x25462C", VA = "0x25462C")]
	private GameObject NewGarde(Vector3 position)
	{
		return null;
	}

	[Token(Token = "0x600094B")]
	[Address(RVA = "0x254894", Offset = "0x254894", VA = "0x254894")]
	private GameObject NewDude()
	{
		return null;
	}

	[Token(Token = "0x600094C")]
	[Address(RVA = "0x254B44", Offset = "0x254B44", VA = "0x254B44")]
	public void WarmPool(int dudeNumber, int gardeNumber)
	{
	}

	[Token(Token = "0x600094D")]
	[Address(RVA = "0x254D08", Offset = "0x254D08", VA = "0x254D08")]
	private void WarmAnnouncers()
	{
	}

	[Token(Token = "0x600094E")]
	[Address(RVA = "0x254E4C", Offset = "0x254E4C", VA = "0x254E4C")]
	private void WarmDealer()
	{
	}

	[Token(Token = "0x600094F")]
	[Address(RVA = "0x254ED0", Offset = "0x254ED0", VA = "0x254ED0")]
	private void WarmDudePool(int number)
	{
	}

	[Token(Token = "0x6000950")]
	[Address(RVA = "0x254F68", Offset = "0x254F68", VA = "0x254F68")]
	private void WarmGardePool(int number)
	{
	}

	[Token(Token = "0x6000951")]
	[Address(RVA = "0x25504C", Offset = "0x25504C", VA = "0x25504C")]
	private void WarmModels()
	{
	}
}
[Token(Token = "0x200017D")]
public class Pool : MonoBehaviour
{
	[Token(Token = "0x4000A4D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	[SerializeField]
	private List<SpawnableObject>[] PooledObjects;

	[Token(Token = "0x4000A4E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[SerializeField]
	private List<SpawnableObject>[] ActiveObjects;

	[Token(Token = "0x4000A4F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	[SerializeField]
	private List<DetectableObject> DetectableObjects;

	[Token(Token = "0x6000952")]
	[Address(RVA = "0x263370", Offset = "0x263370", VA = "0x263370")]
	public Pool()
	{
	}

	[Token(Token = "0x6000953")]
	[Address(RVA = "0x263378", Offset = "0x263378", VA = "0x263378")]
	public void Init()
	{
	}

	[Token(Token = "0x6000954")]
	[Address(RVA = "0x263508", Offset = "0x263508", VA = "0x263508")]
	private void InitClusters(int clustersLength)
	{
	}

	[Token(Token = "0x6000955")]
	[Address(RVA = "0x2635A8", Offset = "0x2635A8", VA = "0x2635A8")]
	private void InitObjectsLists(int clustersLength)
	{
	}

	[Token(Token = "0x6000956")]
	[Address(RVA = "0x263420", Offset = "0x263420", VA = "0x263420")]
	private int GetClustersLength()
	{
		return default(int);
	}

	[Token(Token = "0x6000957")]
	[Address(RVA = "0x254C64", Offset = "0x254C64", VA = "0x254C64")]
	public int GetPoolClusterSize(Clusters cluster)
	{
		return default(int);
	}

	[Token(Token = "0x6000958")]
	[Address(RVA = "0x2613E8", Offset = "0x2613E8", VA = "0x2613E8")]
	public int GetActiveClusterSize(Clusters cluster)
	{
		return default(int);
	}

	[Token(Token = "0x6000959")]
	[Address(RVA = "0x263784", Offset = "0x263784", VA = "0x263784")]
	public SpawnableObject GetPooledObject(string spawnableObjectID, Clusters cluster)
	{
		return null;
	}

	[Token(Token = "0x600095A")]
	[Address(RVA = "0x263AD8", Offset = "0x263AD8", VA = "0x263AD8")]
	public void PoolObject(SpawnableObject spawnableObject, Clusters cluster)
	{
	}

	[Token(Token = "0x600095B")]
	[Address(RVA = "0x263BB0", Offset = "0x263BB0", VA = "0x263BB0")]
	private void AddPooledObject(SpawnableObject pooledObject, Clusters cluster)
	{
	}

	[Token(Token = "0x600095C")]
	[Address(RVA = "0x263A2C", Offset = "0x263A2C", VA = "0x263A2C")]
	private void RemovePooledObject(SpawnableObject pooledObject, Clusters cluster)
	{
	}

	[Token(Token = "0x600095D")]
	[Address(RVA = "0x263980", Offset = "0x263980", VA = "0x263980")]
	public void AddActiveObject(SpawnableObject activeObject, Clusters cluster)
	{
	}

	[Token(Token = "0x600095E")]
	[Address(RVA = "0x263B04", Offset = "0x263B04", VA = "0x263B04")]
	public void RemoveActiveObject(SpawnableObject activeObject, Clusters cluster)
	{
	}

	[Token(Token = "0x600095F")]
	[Address(RVA = "0x263C5C", Offset = "0x263C5C", VA = "0x263C5C")]
	public List<SpawnableObject>[] GetAllActiveObjects()
	{
		return null;
	}

	[Token(Token = "0x6000960")]
	[Address(RVA = "0x263D98", Offset = "0x263D98", VA = "0x263D98")]
	public SpawnableObject[][] GetAllActiveObjectsToArray()
	{
		return null;
	}

	[Token(Token = "0x6000961")]
	[Address(RVA = "0x263EF0", Offset = "0x263EF0", VA = "0x263EF0")]
	public List<SpawnableObject> GetActiveObjectCluster(Clusters cluster)
	{
		return null;
	}

	[Token(Token = "0x6000962")]
	[Address(RVA = "0x2640A4", Offset = "0x2640A4", VA = "0x2640A4")]
	public SpawnableObject[] GetActiveObjectClusterToArray(Clusters cluster)
	{
		return null;
	}

	[Token(Token = "0x6000963")]
	[Address(RVA = "0x264148", Offset = "0x264148", VA = "0x264148")]
	public void AddDetectableObject(DetectableObject detectableObjects)
	{
	}

	[Token(Token = "0x6000964")]
	[Address(RVA = "0x2641C4", Offset = "0x2641C4", VA = "0x2641C4")]
	public void RemoveDetectableObject(DetectableObject detectableObjects)
	{
	}

	[Token(Token = "0x6000965")]
	[Address(RVA = "0x264240", Offset = "0x264240", VA = "0x264240")]
	public DetectableObject[] GetAllDetectableObjects()
	{
		return null;
	}
}
[Token(Token = "0x200017E")]
public class PoolingManager : MonoBehaviour
{
	[Token(Token = "0x4000A50")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Pool _pool;

	[Token(Token = "0x4000A51")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	private static uint CurrentID;

	[Token(Token = "0x4000A52")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static List<uint> AssignedID;

	[Token(Token = "0x170000D1")]
	public static Pool Pool
	{
		[Token(Token = "0x6000967")]
		[Address(RVA = "0x254C00", Offset = "0x254C00", VA = "0x254C00")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000966")]
	[Address(RVA = "0x2642B4", Offset = "0x2642B4", VA = "0x2642B4")]
	public PoolingManager()
	{
	}

	[Token(Token = "0x6000968")]
	[Address(RVA = "0x2642BC", Offset = "0x2642BC", VA = "0x2642BC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000969")]
	[Address(RVA = "0x264358", Offset = "0x264358", VA = "0x264358")]
	public static void ClearActivePool()
	{
	}

	[Token(Token = "0x600096A")]
	[Address(RVA = "0x264634", Offset = "0x264634", VA = "0x264634")]
	public static void StopAllParticles()
	{
	}

	[Token(Token = "0x600096B")]
	[Address(RVA = "0x253984", Offset = "0x253984", VA = "0x253984")]
	public static GameObject Create(GameObject obj, Vector3 position, Quaternion rotation, Clusters cluster, bool Loading = false)
	{
		return null;
	}

	[Token(Token = "0x600096C")]
	[Address(RVA = "0x2501CC", Offset = "0x2501CC", VA = "0x2501CC")]
	public static void Delete(GameObject obj, Clusters cluster)
	{
	}

	[Token(Token = "0x600096D")]
	[Address(RVA = "0x26445C", Offset = "0x26445C", VA = "0x26445C")]
	public static void Delete(SpawnableObject obj, Clusters cluster)
	{
	}

	[Token(Token = "0x600096E")]
	[Address(RVA = "0x264798", Offset = "0x264798", VA = "0x264798")]
	private static uint NewMeubleID()
	{
		return default(uint);
	}

	[Token(Token = "0x600096F")]
	[Address(RVA = "0x264884", Offset = "0x264884", VA = "0x264884")]
	private static bool CheckID()
	{
		return default(bool);
	}

	[Token(Token = "0x6000970")]
	[Address(RVA = "0x264A14", Offset = "0x264A14", VA = "0x264A14")]
	public static void InitID()
	{
	}

	[Token(Token = "0x6000971")]
	[Address(RVA = "0x264AB8", Offset = "0x264AB8", VA = "0x264AB8")]
	public static void AddID(uint id)
	{
	}
}
[Token(Token = "0x200017F")]
public class UISpawnerManager : MonoBehaviour
{
	[Token(Token = "0x4000A53")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static UISpawnerManager Instance;

	[Token(Token = "0x6000972")]
	[Address(RVA = "0x401BA4", Offset = "0x401BA4", VA = "0x401BA4")]
	public UISpawnerManager()
	{
	}

	[Token(Token = "0x6000973")]
	[Address(RVA = "0x401BAC", Offset = "0x401BAC", VA = "0x401BAC")]
	public void Initialize()
	{
	}

	[Token(Token = "0x6000974")]
	[Address(RVA = "0x401D20", Offset = "0x401D20", VA = "0x401D20")]
	public GameObject Spawn(GameObject element, Vector3 position, Quaternion rotation)
	{
		return null;
	}

	[Token(Token = "0x6000975")]
	[Address(RVA = "0x401D70", Offset = "0x401D70", VA = "0x401D70")]
	public GameObject Spawn(GameObject element, Vector3 position)
	{
		return null;
	}

	[Token(Token = "0x6000976")]
	[Address(RVA = "0x401E3C", Offset = "0x401E3C", VA = "0x401E3C")]
	public GameObject Spawn(GameObject element)
	{
		return null;
	}

	[Token(Token = "0x6000977")]
	[Address(RVA = "0x401F38", Offset = "0x401F38", VA = "0x401F38")]
	public void Despawn(GameObject element)
	{
	}

	[Token(Token = "0x6000978")]
	[Address(RVA = "0x401F48", Offset = "0x401F48", VA = "0x401F48")]
	public void WarmUI(int buyButtonsCount, int objWrapperCount, int repWrapperCount)
	{
	}
}
[Token(Token = "0x2000180")]
public class PrechargerVideos : MonoBehaviour
{
	[Token(Token = "0x4000A54")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static PrechargerVideos Instance;

	[Token(Token = "0x4000A55")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Material VideoMaterial;

	[NonSerialized]
	[Token(Token = "0x4000A56")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Transform Videos;

	[Token(Token = "0x6000979")]
	[Address(RVA = "0x2660FC", Offset = "0x2660FC", VA = "0x2660FC")]
	public PrechargerVideos()
	{
	}

	[Token(Token = "0x600097A")]
	[Address(RVA = "0x266104", Offset = "0x266104", VA = "0x266104")]
	private void Awake()
	{
	}

	[Token(Token = "0x600097B")]
	[Address(RVA = "0x266220", Offset = "0x266220", VA = "0x266220")]
	private void VideoRolls()
	{
	}

	[Token(Token = "0x600097C")]
	[Address(RVA = "0x2662B4", Offset = "0x2662B4", VA = "0x2662B4")]
	private void VideoRoll(string name)
	{
	}

	[Token(Token = "0x600097D")]
	[Address(RVA = "0x2662E0", Offset = "0x2662E0", VA = "0x2662E0")]
	private Video VideoAdd(string name)
	{
		return null;
	}
}
namespace Trebuchet
{
	[Token(Token = "0x2000181")]
	public class NVRCalibrator : Calibrator
	{
		[Token(Token = "0x170000D2")]
		protected override Transform ChildToAlign
		{
			[Token(Token = "0x600097F")]
			[Address(RVA = "0xCC6AB0", Offset = "0xCC6AB0", VA = "0xCC6AB0", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600097E")]
		[Address(RVA = "0xCC6AA8", Offset = "0xCC6AA8", VA = "0xCC6AA8")]
		public NVRCalibrator()
		{
		}
	}
}
[Token(Token = "0x2000182")]
public class OffreDemandeTest : MonoBehaviour
{
	[Token(Token = "0x4000A57")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public int Vr;

	[Token(Token = "0x4000A58")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float T;

	[Token(Token = "0x4000A59")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float X;

	[Token(Token = "0x4000A5A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float dT;

	[Token(Token = "0x4000A5B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private float Prev;

	[Token(Token = "0x4000A5C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float Actual;

	[Token(Token = "0x4000A5D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public GameObject obj;

	[Token(Token = "0x4000A5E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float Xpos;

	[Token(Token = "0x6000980")]
	[Address(RVA = "0x259B4C", Offset = "0x259B4C", VA = "0x259B4C")]
	public OffreDemandeTest()
	{
	}

	[Token(Token = "0x6000981")]
	[Address(RVA = "0x259B60", Offset = "0x259B60", VA = "0x259B60")]
	private void Start()
	{
	}

	[Token(Token = "0x6000982")]
	[Address(RVA = "0x259BB8", Offset = "0x259BB8", VA = "0x259BB8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000983")]
	[Address(RVA = "0x259C50", Offset = "0x259C50", VA = "0x259C50")]
	private void updateValue()
	{
	}
}
[Token(Token = "0x2000183")]
public class ReturnTesting : MonoBehaviour
{
	[Token(Token = "0x4000A5F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public string pub;

	[Token(Token = "0x4000A60")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string pubDO;

	[Token(Token = "0x6000984")]
	[Address(RVA = "0x26FAE4", Offset = "0x26FAE4", VA = "0x26FAE4")]
	public ReturnTesting()
	{
	}

	[Token(Token = "0x6000985")]
	[Address(RVA = "0x26FAEC", Offset = "0x26FAEC", VA = "0x26FAEC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000986")]
	[Address(RVA = "0x26FB58", Offset = "0x26FB58", VA = "0x26FB58")]
	private void Update()
	{
	}

	[Token(Token = "0x6000987")]
	[Address(RVA = "0x26FC08", Offset = "0x26FC08", VA = "0x26FC08")]
	public void DoDoThing()
	{
	}
}
[Token(Token = "0x2000184")]
public class StaticReturn : MonoBehaviour
{
	[Token(Token = "0x4000A61")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static int count;

	[Token(Token = "0x4000A62")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	private static ReturnTesting aa;

	[Token(Token = "0x6000988")]
	[Address(RVA = "0xCBA0D8", Offset = "0xCBA0D8", VA = "0xCBA0D8")]
	public StaticReturn()
	{
	}

	[Token(Token = "0x6000989")]
	[Address(RVA = "0xCBA0E0", Offset = "0xCBA0E0", VA = "0xCBA0E0")]
	private void Awake()
	{
	}

	[Token(Token = "0x600098A")]
	[Address(RVA = "0xCBA15C", Offset = "0xCBA15C", VA = "0xCBA15C")]
	public static string DoThing(string s)
	{
		return null;
	}
}
[Token(Token = "0x2000185")]
public class GuidanceSpawner : MonoBehaviour
{
	[Token(Token = "0x2000343")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1F7E14", Offset = "0x1F7E14")]
	private sealed class <helperLoop>c__Iterator0 : IEnumerator, IDisposable, IEnumerator<object>
	{
		[Token(Token = "0x400133E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal GuidanceSpawner $this;

		[Token(Token = "0x400133F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		internal object $current;

		[Token(Token = "0x4001340")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal bool $disposing;

		[Token(Token = "0x4001341")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		internal int $PC;

		[Token(Token = "0x170002E7")]
		private object System.Collections.Generic.IEnumerator<object>.Current
		{
			[Token(Token = "0x60018B8")]
			[Address(RVA = "0xC6A384", Offset = "0xC6A384", VA = "0xC6A384", Slot = "8")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002E8")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60018B9")]
			[Address(RVA = "0xC6A38C", Offset = "0xC6A38C", VA = "0xC6A38C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60018B6")]
		[Address(RVA = "0xC6A250", Offset = "0xC6A250", VA = "0xC6A250")]
		[DebuggerHidden]
		public <helperLoop>c__Iterator0()
		{
		}

		[Token(Token = "0x60018B7")]
		[Address(RVA = "0xC6A258", Offset = "0xC6A258", VA = "0xC6A258", Slot = "5")]
		public bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60018BA")]
		[Address(RVA = "0xC6A394", Offset = "0xC6A394", VA = "0xC6A394", Slot = "7")]
		[DebuggerHidden]
		public void Dispose()
		{
		}

		[Token(Token = "0x60018BB")]
		[Address(RVA = "0xC6A3A8", Offset = "0xC6A3A8", VA = "0xC6A3A8", Slot = "6")]
		[DebuggerHidden]
		public void Reset()
		{
		}
	}

	[Token(Token = "0x4000A63")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static GuidanceSpawner Instance;

	[Token(Token = "0x4000A64")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public float helperDelay;

	[Token(Token = "0x4000A65")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public GameObject faeryBobby;

	[Token(Token = "0x4000A66")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public GameObject arrowFeedback;

	[Token(Token = "0x4000A67")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private GameObject _targetFaery;

	[Token(Token = "0x4000A68")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private bool _jobdone;

	[Token(Token = "0x4000A69")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Coroutine spawn;

	[Token(Token = "0x170000D3")]
	public GameObject targetFaery
	{
		[Token(Token = "0x600098C")]
		[Address(RVA = "0xC69DE0", Offset = "0xC69DE0", VA = "0xC69DE0")]
		get
		{
			return null;
		}
		[Token(Token = "0x600098D")]
		[Address(RVA = "0xC5596C", Offset = "0xC5596C", VA = "0xC5596C")]
		set
		{
		}
	}

	[Token(Token = "0x600098B")]
	[Address(RVA = "0xC69DCC", Offset = "0xC69DCC", VA = "0xC69DCC")]
	public GuidanceSpawner()
	{
	}

	[Token(Token = "0x600098E")]
	[Address(RVA = "0xC69DE8", Offset = "0xC69DE8", VA = "0xC69DE8")]
	private void Awake()
	{
	}

	[Token(Token = "0x600098F")]
	[Address(RVA = "0xC69E4C", Offset = "0xC69E4C", VA = "0xC69E4C")]
	public BillboardUI SpawnArrowHelper(Transform pos)
	{
		return null;
	}

	[Token(Token = "0x6000990")]
	[Address(RVA = "0xC69F70", Offset = "0xC69F70", VA = "0xC69F70")]
	public void spawnFaeryHelper(GameObject Target)
	{
	}

	[Token(Token = "0x6000991")]
	[Address(RVA = "0xC6A19C", Offset = "0xC6A19C", VA = "0xC6A19C")]
	public void startFaeryHelper()
	{
	}

	[Token(Token = "0x6000992")]
	[Address(RVA = "0xC55B48", Offset = "0xC55B48", VA = "0xC55B48")]
	public void stopFaeryHelper()
	{
	}

	[Token(Token = "0x6000993")]
	[Address(RVA = "0xC6A1D0", Offset = "0xC6A1D0", VA = "0xC6A1D0")]
	[DebuggerHidden]
	private IEnumerator helperLoop()
	{
		return null;
	}
}
[Token(Token = "0x2000186")]
public class MoneyGraph : MonoBehaviour
{
	[Token(Token = "0x4000A6A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private TextMeshProUGUI[] text;

	[Token(Token = "0x4000A6B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private Ressource res;

	[Token(Token = "0x4000A6C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private int value;

	[Token(Token = "0x4000A6D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject particle;

	[Token(Token = "0x6000994")]
	[Address(RVA = "0xC95910", Offset = "0xC95910", VA = "0xC95910")]
	public MoneyGraph()
	{
	}

	[Token(Token = "0x6000995")]
	[Address(RVA = "0xC95918", Offset = "0xC95918", VA = "0xC95918")]
	private void Start()
	{
	}

	[Token(Token = "0x6000996")]
	[Address(RVA = "0xC9599C", Offset = "0xC9599C", VA = "0xC9599C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000997")]
	[Address(RVA = "0xC95B48", Offset = "0xC95B48", VA = "0xC95B48")]
	private void OnCollisionEnter(Collision other)
	{
	}
}
[Token(Token = "0x2000187")]
public enum ObjectType
{
	[Token(Token = "0x4000A6F")]
	Object,
	[Token(Token = "0x4000A70")]
	Craftable,
	[Token(Token = "0x4000A71")]
	Meuble,
	[Token(Token = "0x4000A72")]
	Roll,
	[Token(Token = "0x4000A73")]
	Other
}
[Token(Token = "0x2000188")]
public class Ressource : SpawnableObject
{
	[Token(Token = "0x4000A74")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string Type;

	[Token(Token = "0x4000A75")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	[HideInInspector]
	public int valueCigarette;

	[Token(Token = "0x4000A76")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[HideInInspector]
	public int boxCapacity;

	[Token(Token = "0x4000A77")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[HideInInspector]
	public int capacity;

	[Token(Token = "0x4000A78")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[HideInInspector]
	public bool contreband;

	[Token(Token = "0x4000A79")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[HideInInspector]
	public uint seed;

	[Token(Token = "0x4000A7A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[HideInInspector]
	public bool tutorialResource;

	[Token(Token = "0x4000A7B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	[HideInInspector]
	public bool seedOverrided;

	[Token(Token = "0x4000A7C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private ObjectType objType;

	[Token(Token = "0x4000A7D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private NVRInteractableItem nvri;

	[Token(Token = "0x4000A7E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private MainCraftScript mcs;

	[Token(Token = "0x4000A7F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Meuble mbl;

	[Token(Token = "0x4000A80")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private TutorialManager tutoScript;

	[Token(Token = "0x4000A81")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float distance;

	[Token(Token = "0x4000A82")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private float distanceTutoLand;

	[Token(Token = "0x4000A83")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float timer;

	[Token(Token = "0x4000A84")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private bool capacityOverrided;

	[Token(Token = "0x170000D4")]
	private TabReader _tab
	{
		[Token(Token = "0x6000999")]
		[Address(RVA = "0x26D890", Offset = "0x26D890", VA = "0x26D890")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000998")]
	[Address(RVA = "0x26D888", Offset = "0x26D888", VA = "0x26D888")]
	public Ressource()
	{
	}

	[Token(Token = "0x600099A")]
	[Address(RVA = "0x26D8F4", Offset = "0x26D8F4", VA = "0x26D8F4", Slot = "5")]
	public override void ShutDown()
	{
	}

	[Token(Token = "0x600099B")]
	[Address(RVA = "0x26D934", Offset = "0x26D934", VA = "0x26D934", Slot = "4")]
	public override void Reset()
	{
	}

	[Token(Token = "0x600099C")]
	[Address(RVA = "0x26DDFC", Offset = "0x26DDFC", VA = "0x26DDFC")]
	public void OverrideCapacity(int c)
	{
	}

	[Token(Token = "0x600099D")]
	[Address(RVA = "0x26DE0C", Offset = "0x26DE0C", VA = "0x26DE0C", Slot = "6")]
	protected virtual void Start()
	{
	}

	[Token(Token = "0x600099E")]
	[Address(RVA = "0x26E47C", Offset = "0x26E47C", VA = "0x26E47C", Slot = "7")]
	protected virtual void Update()
	{
	}

	[Token(Token = "0x600099F")]
	[Address(RVA = "0x26E2A8", Offset = "0x26E2A8", VA = "0x26E2A8")]
	private void findObjType()
	{
	}

	[Token(Token = "0x60009A0")]
	[Address(RVA = "0x26E65C", Offset = "0x26E65C", VA = "0x26E65C")]
	public void ChangeCapacity(int i)
	{
	}

	[Token(Token = "0x60009A1")]
	[Address(RVA = "0x26E6A0", Offset = "0x26E6A0", VA = "0x26E6A0")]
	public void ChangeType(string newType)
	{
	}
}
[Token(Token = "0x2000189")]
public class SkillCardNumbers : MonoBehaviour
{
	[Token(Token = "0x4000A85")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private TextMeshProUGUI[] text;

	[Token(Token = "0x4000A86")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private Ressource res;

	[Token(Token = "0x4000A87")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private int value;

	[Token(Token = "0x4000A88")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject particle;

	[Token(Token = "0x60009A2")]
	[Address(RVA = "0xCB7808", Offset = "0xCB7808", VA = "0xCB7808")]
	public SkillCardNumbers()
	{
	}

	[Token(Token = "0x60009A3")]
	[Address(RVA = "0xCB7810", Offset = "0xCB7810", VA = "0xCB7810")]
	private void Start()
	{
	}

	[Token(Token = "0x60009A4")]
	[Address(RVA = "0xCB7894", Offset = "0xCB7894", VA = "0xCB7894")]
	private void Update()
	{
	}

	[Token(Token = "0x60009A5")]
	[Address(RVA = "0xCB7954", Offset = "0xCB7954", VA = "0xCB7954")]
	private void OnCollisionEnter(Collision other)
	{
	}
}
[Serializable]
[Token(Token = "0x200018A")]
public class StarterPack
{
	[Token(Token = "0x4000A89")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public string Name;

	[Token(Token = "0x4000A8A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public GameObject[] objs;

	[Token(Token = "0x60009A6")]
	[Address(RVA = "0xCB87DC", Offset = "0xCB87DC", VA = "0xCB87DC")]
	public StarterPack()
	{
	}
}
[Token(Token = "0x200018B")]
public class TabReader : MonoBehaviour
{
	[Token(Token = "0x4000A8B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static TabReader Instance;

	[Token(Token = "0x4000A8C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public TextAsset[] OldRawTab;

	[Token(Token = "0x4000A8D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public TextAsset[] RawTab;

	[Token(Token = "0x4000A8E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	[HideInInspector]
	public string[][] ressources;

	[Token(Token = "0x4000A8F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[HideInInspector]
	public int prisonID;

	[Token(Token = "0x4000A90")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[HideInInspector]
	public bool oldTabUsed;

	[Token(Token = "0x4000A91")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public StarterPack[] StarterPacks;

	[Token(Token = "0x4000A92")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public StarterPack[] SandboxStarterPack;

	[Token(Token = "0x60009A7")]
	[Address(RVA = "0xCBD1F4", Offset = "0xCBD1F4", VA = "0xCBD1F4")]
	public TabReader()
	{
	}

	[Token(Token = "0x60009A8")]
	[Address(RVA = "0xCBD1FC", Offset = "0xCBD1FC", VA = "0xCBD1FC")]
	public void LoadTab(int TabID, bool old = false)
	{
	}

	[Token(Token = "0x60009A9")]
	[Address(RVA = "0xCBD350", Offset = "0xCBD350", VA = "0xCBD350")]
	public string[][] FakeLoadRessource(int TabID, bool old = false)
	{
		return null;
	}

	[Token(Token = "0x60009AA")]
	[Address(RVA = "0xCBD644", Offset = "0xCBD644", VA = "0xCBD644")]
	public float GetProperty(string s, int column)
	{
		return default(float);
	}

	[Token(Token = "0x60009AB")]
	[Address(RVA = "0xCBD83C", Offset = "0xCBD83C", VA = "0xCBD83C")]
	public string GetString(string s, int column)
	{
		return null;
	}
}
[Token(Token = "0x200018C")]
public class RuleBookScript : MonoBehaviour
{
	[Token(Token = "0x4000A93")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Material[] matPage1;

	[Token(Token = "0x4000A94")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Material[] matPage2;

	[Token(Token = "0x4000A95")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public MeshRenderer page1;

	[Token(Token = "0x4000A96")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public MeshRenderer page2;

	[Token(Token = "0x4000A97")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float[] paternValue;

	[Token(Token = "0x4000A98")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float precision;

	[Token(Token = "0x4000A99")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private int _actualPage;

	[Token(Token = "0x4000A9A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private int _actualPaternGoal;

	[Token(Token = "0x4000A9B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float timer;

	[Token(Token = "0x4000A9C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool handOver;

	[Token(Token = "0x4000A9D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private NVRHand hand;

	[Token(Token = "0x60009AC")]
	[Address(RVA = "0x270568", Offset = "0x270568", VA = "0x270568")]
	public RuleBookScript()
	{
	}

	[Token(Token = "0x60009AD")]
	[Address(RVA = "0x270570", Offset = "0x270570", VA = "0x270570")]
	private void Start()
	{
	}

	[Token(Token = "0x60009AE")]
	[Address(RVA = "0x270710", Offset = "0x270710", VA = "0x270710")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x60009AF")]
	[Address(RVA = "0x270820", Offset = "0x270820", VA = "0x270820")]
	private void WaitForChangePage()
	{
	}

	[Token(Token = "0x60009B0")]
	[Address(RVA = "0x270AAC", Offset = "0x270AAC", VA = "0x270AAC")]
	private void ChangePage(int i)
	{
	}

	[Token(Token = "0x60009B1")]
	[Address(RVA = "0x270D28", Offset = "0x270D28", VA = "0x270D28")]
	private void OnTriggerStay(Collider col)
	{
	}
}
[Token(Token = "0x200018D")]
public class BitPacker<First, Second, Output>
{
	[StructLayout(2)]
	[Token(Token = "0x200018E")]
	private struct BitUnion
	{
		[Token(Token = "0x4000AA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public First first;

		[Token(Token = "0x4000AA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Second second;

		[Token(Token = "0x4000AA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Output output;

		[Token(Token = "0x4000AA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public uint value;

		[Token(Token = "0x60009B5")]
		public static uint From(First first)
		{
			return default(uint);
		}

		[Token(Token = "0x60009B6")]
		public static uint From(Second second)
		{
			return default(uint);
		}

		[Token(Token = "0x60009B7")]
		public static uint From(Output output)
		{
			return default(uint);
		}

		[Token(Token = "0x60009B8")]
		public static Output ToO(uint value)
		{
			return (Output)null;
		}

		[Token(Token = "0x60009B9")]
		public static First ToF(uint value)
		{
			return (First)null;
		}

		[Token(Token = "0x60009BA")]
		public static Second ToS(uint value)
		{
			return (Second)null;
		}
	}

	[Token(Token = "0x4000A9E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private int bitForFirst;

	[Token(Token = "0x4000A9F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private uint mask;

	[Token(Token = "0x60009B2")]
	public BitPacker(int bitForFirst)
	{
	}

	[Token(Token = "0x60009B3")]
	public Output Pack(First first, Second second)
	{
		return (Output)null;
	}

	[Token(Token = "0x60009B4")]
	public void Unpack(Output pack, out First first, out Second second)
	{
	}
}
[Serializable]
[Token(Token = "0x200018F")]
public class DataToLoad
{
	[Token(Token = "0x4000AA4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public string version;

	[Token(Token = "0x4000AA5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public bool newSave;

	[Token(Token = "0x4000AA6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string SaveName;

	[Token(Token = "0x4000AA7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public string Date;

	[Token(Token = "0x4000AA8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string saveID;

	[Token(Token = "0x4000AA9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public string[] Meubles;

	[Token(Token = "0x4000AAA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string[] Craft;

	[Token(Token = "0x4000AAB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public string[] Containers;

	[Token(Token = "0x4000AAC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string GameMode;

	[Token(Token = "0x4000AAD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public string PrisonID;

	[Token(Token = "0x4000AAE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public int daysPassed;

	[Token(Token = "0x4000AAF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public int dayMax;

	[Token(Token = "0x4000AB0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public int laDate;

	[Token(Token = "0x4000AB1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public lesJours jour;

	[Token(Token = "0x4000AB2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public lesMois mois;

	[Token(Token = "0x4000AB3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public int leMoisCommenceUn;

	[Token(Token = "0x4000AB4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public int secondesJouées;

	[Token(Token = "0x4000AB5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public List<string[]> ressourcesOffreDemande;

	[Token(Token = "0x4000AB6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public int repLevel;

	[Token(Token = "0x4000AB7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public int actualTier;

	[Token(Token = "0x4000AB8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public int[] actualJobsID;

	[Token(Token = "0x4000AB9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public int[] jobsID;

	[Token(Token = "0x4000ABA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public bool traderPassed;

	[Token(Token = "0x4000ABB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
	public bool FirstDay;

	[Token(Token = "0x4000ABC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public StarterPack StarterPack;

	[Token(Token = "0x4000ABD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public StatistiqueData Statistique;

	[Token(Token = "0x4000ABE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public DataToLoadEndPrison DataForEndPrison;

	[Token(Token = "0x60009BB")]
	[Address(RVA = "0xCFC298", Offset = "0xCFC298", VA = "0xCFC298")]
	public DataToLoad()
	{
	}
}
[Token(Token = "0x2000190")]
public class DataToLoadEndPrison
{
	[Token(Token = "0x4000ABF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public int prevPrisonID;

	[Token(Token = "0x4000AC0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public int nextPrisonID;

	[Token(Token = "0x4000AC1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int[] values;

	[Token(Token = "0x4000AC2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public int[] treshold;

	[Token(Token = "0x60009BC")]
	[Address(RVA = "0xCE8038", Offset = "0xCE8038", VA = "0xCE8038")]
	public DataToLoadEndPrison()
	{
	}
}
[Token(Token = "0x2000191")]
public class LoadingDataCourier : MonoBehaviour
{
	[Token(Token = "0x2000344")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1F7F44", Offset = "0x1F7F44")]
	private sealed class <ReactivePhysic>c__Iterator0 : IEnumerator, IDisposable, IEnumerator<object>
	{
		[Token(Token = "0x4001342")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal Rigidbody[] $locvar0;

		[Token(Token = "0x4001343")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		internal int $locvar1;

		[Token(Token = "0x4001344")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal LoadingDataCourier $this;

		[Token(Token = "0x4001345")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		internal object $current;

		[Token(Token = "0x4001346")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal bool $disposing;

		[Token(Token = "0x4001347")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		internal int $PC;

		[Token(Token = "0x170002E9")]
		private object System.Collections.Generic.IEnumerator<object>.Current
		{
			[Token(Token = "0x60018BE")]
			[Address(RVA = "0xC80FFC", Offset = "0xC80FFC", VA = "0xC80FFC", Slot = "8")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002EA")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60018BF")]
			[Address(RVA = "0xC81004", Offset = "0xC81004", VA = "0xC81004", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60018BC")]
		[Address(RVA = "0xC803B4", Offset = "0xC803B4", VA = "0xC803B4")]
		[DebuggerHidden]
		public <ReactivePhysic>c__Iterator0()
		{
		}

		[Token(Token = "0x60018BD")]
		[Address(RVA = "0xC80E30", Offset = "0xC80E30", VA = "0xC80E30", Slot = "5")]
		public bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60018C0")]
		[Address(RVA = "0xC8100C", Offset = "0xC8100C", VA = "0xC8100C", Slot = "7")]
		[DebuggerHidden]
		public void Dispose()
		{
		}

		[Token(Token = "0x60018C1")]
		[Address(RVA = "0xC81020", Offset = "0xC81020", VA = "0xC81020", Slot = "6")]
		[DebuggerHidden]
		public void Reset()
		{
		}
	}

	[Token(Token = "0x4000AC3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public DataToLoad data;

	[Token(Token = "0x4000AC4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private bool oldLevel;

	[Token(Token = "0x4000AC5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private List<Meuble> spawnedMeubles;

	[Token(Token = "0x4000AC6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Rigidbody[] CraftRigidbody;

	[Token(Token = "0x4000AC7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1F7F14", Offset = "0x1F7F14")]
	private static Func<int, byte> <>f__am$cache0;

	[Token(Token = "0x60009BD")]
	[Address(RVA = "0xC7DC60", Offset = "0xC7DC60", VA = "0xC7DC60")]
	public LoadingDataCourier()
	{
	}

	[Token(Token = "0x60009BE")]
	[Address(RVA = "0xC7DC68", Offset = "0xC7DC68", VA = "0xC7DC68")]
	private void Awake()
	{
	}

	[Token(Token = "0x60009BF")]
	[Address(RVA = "0xC7DD30", Offset = "0xC7DD30", VA = "0xC7DD30")]
	public void LoadObjects()
	{
	}

	[Token(Token = "0x60009C0")]
	[Address(RVA = "0xC80334", Offset = "0xC80334", VA = "0xC80334")]
	[DebuggerHidden]
	private IEnumerator ReactivePhysic()
	{
		return null;
	}

	[Token(Token = "0x60009C1")]
	[Address(RVA = "0xC803BC", Offset = "0xC803BC", VA = "0xC803BC")]
	public void LoadGameSystem()
	{
	}

	[Token(Token = "0x60009C2")]
	[Address(RVA = "0xC80610", Offset = "0xC80610", VA = "0xC80610")]
	public void LoadProgression()
	{
	}

	[Token(Token = "0x60009C3")]
	[Address(RVA = "0xC80DC4", Offset = "0xC80DC4", VA = "0xC80DC4")]
	public bool LoadEndPrison(out int[] values, out int[] treshold, out int nextPrisonId)
	{
		return default(bool);
	}

	[Token(Token = "0x60009C4")]
	[Address(RVA = "0xC80E28", Offset = "0xC80E28", VA = "0xC80E28")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1F7F34", Offset = "0x1F7F34")]
	private static byte <LoadProgression>m__0(int i)
	{
		return default(byte);
	}
}
[Token(Token = "0x2000192")]
public abstract class PreloadingManagerCommon : MonoBehaviour
{
	[Token(Token = "0x2000345")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1F7FC4", Offset = "0x1F7FC4")]
	private sealed class <InstantiatePhysicalFiles>c__Iterator0 : IEnumerator, IDisposable, IEnumerator<object>
	{
		[Token(Token = "0x4001348")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal BinaryFormatter <formatter>__0;

		[Token(Token = "0x4001349")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		internal Vector3 <pos>__0;

		[Token(Token = "0x400134A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal string[] $locvar0;

		[Token(Token = "0x400134B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		internal int $locvar1;

		[Token(Token = "0x400134C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal string <file>__1;

		[Token(Token = "0x400134D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		internal PreloadingManagerCommon $this;

		[Token(Token = "0x400134E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		internal object $current;

		[Token(Token = "0x400134F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		internal bool $disposing;

		[Token(Token = "0x4001350")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		internal int $PC;

		[Token(Token = "0x170002EB")]
		private object System.Collections.Generic.IEnumerator<object>.Current
		{
			[Token(Token = "0x60018C4")]
			[Address(RVA = "0x26C864", Offset = "0x26C864", VA = "0x26C864", Slot = "8")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002EC")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60018C5")]
			[Address(RVA = "0x26C86C", Offset = "0x26C86C", VA = "0x26C86C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60018C2")]
		[Address(RVA = "0x266D54", Offset = "0x266D54", VA = "0x266D54")]
		[DebuggerHidden]
		public <InstantiatePhysicalFiles>c__Iterator0()
		{
		}

		[Token(Token = "0x60018C3")]
		[Address(RVA = "0x26BC98", Offset = "0x26BC98", VA = "0x26BC98", Slot = "5")]
		public bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60018C6")]
		[Address(RVA = "0x26C874", Offset = "0x26C874", VA = "0x26C874", Slot = "7")]
		[DebuggerHidden]
		public void Dispose()
		{
		}

		[Token(Token = "0x60018C7")]
		[Address(RVA = "0x26C888", Offset = "0x26C888", VA = "0x26C888", Slot = "6")]
		[DebuggerHidden]
		public void Reset()
		{
		}
	}

	[Token(Token = "0x2000346")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1F8024", Offset = "0x1F8024")]
	private sealed class <PreLoading>c__Iterator1 : IEnumerator, IDisposable, IEnumerator<object>
	{
		[Token(Token = "0x4001351")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal SaveDataV2 loadingData;

		[Token(Token = "0x4001352")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		internal PreloadingManagerCommon $this;

		[Token(Token = "0x4001353")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal object $current;

		[Token(Token = "0x4001354")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		internal bool $disposing;

		[Token(Token = "0x4001355")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal int $PC;

		[Token(Token = "0x170002ED")]
		private object System.Collections.Generic.IEnumerator<object>.Current
		{
			[Token(Token = "0x60018CA")]
			[Address(RVA = "0x26CD7C", Offset = "0x26CD7C", VA = "0x26CD7C", Slot = "8")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002EE")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60018CB")]
			[Address(RVA = "0x26CD84", Offset = "0x26CD84", VA = "0x26CD84", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60018C8")]
		[Address(RVA = "0x267B00", Offset = "0x267B00", VA = "0x267B00")]
		[DebuggerHidden]
		public <PreLoading>c__Iterator1()
		{
		}

		[Token(Token = "0x60018C9")]
		[Address(RVA = "0x26C90C", Offset = "0x26C90C", VA = "0x26C90C", Slot = "5")]
		public bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60018CC")]
		[Address(RVA = "0x26CD8C", Offset = "0x26CD8C", VA = "0x26CD8C", Slot = "7")]
		[DebuggerHidden]
		public void Dispose()
		{
		}

		[Token(Token = "0x60018CD")]
		[Address(RVA = "0x26CDA0", Offset = "0x26CDA0", VA = "0x26CDA0", Slot = "6")]
		[DebuggerHidden]
		public void Reset()
		{
		}
	}

	[Token(Token = "0x4000AC8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private DataToLoad dataPackage;

	[Token(Token = "0x4000AC9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static PreloadingManagerCommon Instance;

	[Token(Token = "0x4000ACA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private JobReader _jobReader;

	[Token(Token = "0x4000ACB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public GameObject physicalFilePrefab;

	[Token(Token = "0x4000ACC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject basicDesk;

	[Token(Token = "0x4000ACD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public TextAsset GlobalScoreGoal;

	[Token(Token = "0x4000ACE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string[] saveFiles;

	[Token(Token = "0x4000ACF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public List<GameObject> physicalFiles;

	[Token(Token = "0x4000AD0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool OnlyPreloadGlobalScore;

	[Token(Token = "0x170000D5")]
	public abstract string ConfigDirectoryPath
	{
		[Token(Token = "0x60009C8")]
		get;
	}

	[Token(Token = "0x170000D6")]
	public abstract string SavesDirectoryPath
	{
		[Token(Token = "0x60009C9")]
		get;
	}

	[Token(Token = "0x60009C5")]
	[Address(RVA = "0x266634", Offset = "0x266634", VA = "0x266634")]
	protected PreloadingManagerCommon()
	{
	}

	[Token(Token = "0x60009C6")]
	[Address(RVA = "0x2667C0", Offset = "0x2667C0", VA = "0x2667C0")]
	private void Awake()
	{
	}

	[Token(Token = "0x60009C7")]
	[Address(RVA = "0x266824", Offset = "0x266824", VA = "0x266824")]
	public void Start()
	{
	}

	[Token(Token = "0x60009CA")]
	public abstract Stream GetReadStream(string path);

	[Token(Token = "0x60009CB")]
	public abstract Stream GetWriteStream(string path);

	[Token(Token = "0x60009CC")]
	public abstract string[] GetDirectoryFiles(string path);

	[Token(Token = "0x60009CD")]
	public abstract bool Exists(string path);

	[Token(Token = "0x60009CE")]
	public abstract void Delete(string path);

	[Token(Token = "0x60009CF")]
	[Address(RVA = "0x266968", Offset = "0x266968", VA = "0x266968")]
	public GlobalScoreData LoadScoreData()
	{
		return null;
	}

	[Token(Token = "0x60009D0")]
	[Address(RVA = "0x2668E8", Offset = "0x2668E8", VA = "0x2668E8")]
	[DebuggerHidden]
	public IEnumerator InstantiatePhysicalFiles()
	{
		return null;
	}

	[Token(Token = "0x60009D1")]
	[Address(RVA = "0x266D5C", Offset = "0x266D5C", VA = "0x266D5C")]
	public static int GetPrisonId(string prisonIdString)
	{
		return default(int);
	}

	[Token(Token = "0x60009D2")]
	[Address(RVA = "0x266D68", Offset = "0x266D68", VA = "0x266D68")]
	public static bool IsSandboxFromGameMode(string gamemode)
	{
		return default(bool);
	}

	[Token(Token = "0x60009D3")]
	[Address(RVA = "0x266EB8", Offset = "0x266EB8", VA = "0x266EB8")]
	private SaveDataV2 UpgradeSaveData(SaveData sd)
	{
		return null;
	}

	[Token(Token = "0x60009D4")]
	[Address(RVA = "0x2670A4", Offset = "0x2670A4", VA = "0x2670A4")]
	public void FetchSaveFiles()
	{
	}

	[Token(Token = "0x60009D5")]
	[Address(RVA = "0x262378", Offset = "0x262378", VA = "0x262378")]
	public bool LoadFile(int saveID)
	{
		return default(bool);
	}

	[Token(Token = "0x60009D6")]
	[Address(RVA = "0x267A68", Offset = "0x267A68", VA = "0x267A68")]
	[DebuggerHidden]
	public IEnumerator PreLoading(SaveDataV2 loadingData)
	{
		return null;
	}

	[Token(Token = "0x60009D7")]
	[Address(RVA = "0x267B08", Offset = "0x267B08", VA = "0x267B08")]
	public void PreloadGameModeData(GameModeData loadData)
	{
	}

	[Token(Token = "0x60009D8")]
	[Address(RVA = "0x267CB0", Offset = "0x267CB0", VA = "0x267CB0")]
	public void PreloadGameSystemData(GameSystemData loadData)
	{
	}

	[Token(Token = "0x60009D9")]
	[Address(RVA = "0x268094", Offset = "0x268094", VA = "0x268094")]
	public void PreloadProgressionData(ProgressionData loadData)
	{
	}

	[Token(Token = "0x60009DA")]
	[Address(RVA = "0x2682FC", Offset = "0x2682FC", VA = "0x2682FC")]
	public void PreloadObjects(List<ObjectData> objList, List<ContainerData> contList)
	{
	}

	[Token(Token = "0x60009DB")]
	[Address(RVA = "0x269EC0", Offset = "0x269EC0", VA = "0x269EC0")]
	public void PreloadMeubles(List<MeubleData> meubleList)
	{
	}

	[Token(Token = "0x60009DC")]
	[Address(RVA = "0x26B75C", Offset = "0x26B75C", VA = "0x26B75C")]
	public void DeleteSaveFile(int saveID)
	{
	}

	[Token(Token = "0x60009DD")]
	[Address(RVA = "0x26BA4C", Offset = "0x26BA4C", VA = "0x26BA4C")]
	public bool SaveExists(int id)
	{
		return default(bool);
	}

	[Token(Token = "0x60009DE")]
	[Address(RVA = "0x26BC68", Offset = "0x26BC68", VA = "0x26BC68")]
	public int ReturnUnusedSaveID()
	{
		return default(int);
	}
}
[Serializable]
[Token(Token = "0x2000193")]
public class SaveData
{
	[Token(Token = "0x4000AD1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public MetaData metaData;

	[Token(Token = "0x4000AD2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public GameModeData gameModeData;

	[Token(Token = "0x4000AD3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public GameSystemData gameSystemData;

	[Token(Token = "0x4000AD4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public ProgressionData progressionData;

	[Token(Token = "0x4000AD5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<ObjectData> ObjectsToSave;

	[Token(Token = "0x4000AD6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public List<MeubleData> MeublesToSave;

	[Token(Token = "0x4000AD7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<ContainerData> ContainersToSave;

	[Token(Token = "0x60009DF")]
	[Address(RVA = "0xCAB248", Offset = "0xCAB248", VA = "0xCAB248")]
	public SaveData()
	{
	}
}
[Serializable]
[Token(Token = "0x2000194")]
public class SaveDataV2
{
	[Token(Token = "0x4000AD8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public string version;

	[Token(Token = "0x4000AD9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public MetaData metaData;

	[Token(Token = "0x4000ADA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public GameModeData gameModeData;

	[Token(Token = "0x4000ADB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public GameSystemData gameSystemData;

	[Token(Token = "0x4000ADC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ProgressionData progressionData;

	[Token(Token = "0x4000ADD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public List<ObjectData> ObjectsToSave;

	[Token(Token = "0x4000ADE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<MeubleData> MeublesToSave;

	[Token(Token = "0x4000ADF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public List<ContainerData> ContainersToSave;

	[Token(Token = "0x60009E0")]
	[Address(RVA = "0xCAB250", Offset = "0xCAB250", VA = "0xCAB250")]
	public SaveDataV2()
	{
	}
}
[Serializable]
[Token(Token = "0x2000195")]
public class MetaData
{
	[Token(Token = "0x4000AE0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public int saveID;

	[Token(Token = "0x4000AE1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public string name;

	[Token(Token = "0x4000AE2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public DateTime saveDateTime;

	[Token(Token = "0x60009E1")]
	[Address(RVA = "0xC920BC", Offset = "0xC920BC", VA = "0xC920BC")]
	public MetaData()
	{
	}
}
[Serializable]
[Token(Token = "0x2000196")]
public class GameModeData
{
	[Token(Token = "0x4000AE3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public string gameMode;

	[Token(Token = "0x4000AE4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public string prisonID;

	[Token(Token = "0x60009E2")]
	[Address(RVA = "0xC578D8", Offset = "0xC578D8", VA = "0xC578D8")]
	public GameModeData()
	{
	}
}
[Serializable]
[Token(Token = "0x2000197")]
public class GameSystemData
{
	[Token(Token = "0x4000AE5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public int daysPassed;

	[Token(Token = "0x4000AE6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static readonly BitPacker<int, int, int> daysPassed_stat1_Packer;

	[Token(Token = "0x4000AE7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public int laDate;

	[Token(Token = "0x4000AE8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public static readonly BitPacker<int, int, int> laDate_stat2_Packer;

	[Token(Token = "0x4000AE9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public lesJours jour;

	[Token(Token = "0x4000AEA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static readonly BitPacker<lesJours, int, lesJours> jour_stat3_Packer;

	[Token(Token = "0x4000AEB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public lesMois mois;

	[Token(Token = "0x4000AEC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public static readonly BitPacker<lesMois, int, lesMois> mois_dayMax_Packer;

	[Token(Token = "0x4000AED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int leMoisCommenceUn;

	[Token(Token = "0x4000AEE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static readonly BitPacker<int, int, int> leMoisCommenceUn_secondesJouées_Packer;

	[Token(Token = "0x4000AEF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool traderPassed;

	[Token(Token = "0x4000AF0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
	public bool FirstLoad;

	[Token(Token = "0x170000D7")]
	public int DaysPassed
	{
		[Token(Token = "0x60009E4")]
		[Address(RVA = "0xC583F0", Offset = "0xC583F0", VA = "0xC583F0")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x60009E3")]
	[Address(RVA = "0xC583E8", Offset = "0xC583E8", VA = "0xC583E8")]
	public GameSystemData()
	{
	}
}
[Serializable]
[Token(Token = "0x2000198")]
public class ProgressionData
{
	[Token(Token = "0x4000AF1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public string[][] ressourcesOffreDemande;

	[Token(Token = "0x4000AF2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public int repLevel;

	[Token(Token = "0x4000AF3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static readonly BitPacker<int, int, int> repLevel_stat4_Packer;

	[Token(Token = "0x4000AF4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int actualTier;

	[Token(Token = "0x4000AF5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public int[] actualJobsID;

	[Token(Token = "0x4000AF6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int[] jobsID;

	[Token(Token = "0x60009E6")]
	[Address(RVA = "0x26CF20", Offset = "0x26CF20", VA = "0x26CF20")]
	public ProgressionData()
	{
	}
}
[Serializable]
[Token(Token = "0x2000199")]
public class ObjectData
{
	[Token(Token = "0x4000AF7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public string spawnableID;

	[Token(Token = "0x4000AF8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public string craftType;

	[Token(Token = "0x4000AF9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float posX;

	[Token(Token = "0x4000AFA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float posY;

	[Token(Token = "0x4000AFB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float posZ;

	[Token(Token = "0x4000AFC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float rotX;

	[Token(Token = "0x4000AFD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float rotY;

	[Token(Token = "0x4000AFE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float rotZ;

	[Token(Token = "0x4000AFF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string meubleID;

	[Token(Token = "0x4000B00")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public int capacity;

	[Token(Token = "0x4000B01")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public int DayCreated;

	[Token(Token = "0x60009E8")]
	[Address(RVA = "0x256DE4", Offset = "0x256DE4", VA = "0x256DE4")]
	public ObjectData()
	{
	}
}
[Serializable]
[Token(Token = "0x200019A")]
public class ContainerData : ObjectData
{
	[Token(Token = "0x4000B02")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public string typeToStock;

	[Token(Token = "0x4000B03")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public string qty;

	[Token(Token = "0x60009E9")]
	[Address(RVA = "0xCF84C0", Offset = "0xCF84C0", VA = "0xCF84C0")]
	public ContainerData()
	{
	}
}
[Serializable]
[Token(Token = "0x200019B")]
public class MeubleData
{
	[Token(Token = "0x4000B04")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public string meubleType;

	[Token(Token = "0x4000B05")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public string stateID;

	[Token(Token = "0x4000B06")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string isBox;

	[Token(Token = "0x4000B07")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float posRatioX;

	[Token(Token = "0x4000B08")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float posRatioY;

	[Token(Token = "0x4000B09")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float posRatioZ;

	[Token(Token = "0x4000B0A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float rotX;

	[Token(Token = "0x4000B0B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float rotY;

	[Token(Token = "0x4000B0C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float rotZ;

	[Token(Token = "0x4000B0D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public uint seed;

	[Token(Token = "0x4000B0E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public JoinedObjectData[] joinedObjects;

	[Token(Token = "0x60009EA")]
	[Address(RVA = "0xC95908", Offset = "0xC95908", VA = "0xC95908")]
	public MeubleData()
	{
	}
}
[Serializable]
[Token(Token = "0x200019C")]
public class JoinedObjectData
{
	[Token(Token = "0x4000B0F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float posX;

	[Token(Token = "0x4000B10")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public float posY;

	[Token(Token = "0x4000B11")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float posZ;

	[Token(Token = "0x4000B12")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float rotX;

	[Token(Token = "0x4000B13")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float rotY;

	[Token(Token = "0x4000B14")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float rotZ;

	[Token(Token = "0x60009EB")]
	[Address(RVA = "0xC79F00", Offset = "0xC79F00", VA = "0xC79F00")]
	public JoinedObjectData()
	{
	}
}
[Serializable]
[Token(Token = "0x200019D")]
public class GlobalProgressionData
{
	[Token(Token = "0x4000B15")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public int lastPrisonUnlockedID;

	[Token(Token = "0x4000B16")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public int arcadeHighScore;

	[Token(Token = "0x4000B17")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int tutorialsDone;

	[Token(Token = "0x4000B18")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public bool FirstLoad;

	[Token(Token = "0x60009EC")]
	[Address(RVA = "0xC683F8", Offset = "0xC683F8", VA = "0xC683F8")]
	public GlobalProgressionData()
	{
	}
}
[Serializable]
[Token(Token = "0x200019E")]
public class GlobalProgressionDataV2
{
	[Token(Token = "0x4000B19")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public string version;

	[Token(Token = "0x4000B1A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public int lastPrisonUnlockedID;

	[Token(Token = "0x4000B1B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int arcadeHighScore;

	[Token(Token = "0x4000B1C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public string tutorialsDone;

	[Token(Token = "0x4000B1D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool FirstLoad;

	[Token(Token = "0x4000B1E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool hadFirstSearch;

	[Token(Token = "0x60009ED")]
	[Address(RVA = "0xC68400", Offset = "0xC68400", VA = "0xC68400")]
	public GlobalProgressionDataV2()
	{
	}
}
[Serializable]
[Token(Token = "0x200019F")]
public class SerializableDictionnary<Key, Value> : Dictionary<Key, Value>, ISerializable
{
	[Token(Token = "0x60009EE")]
	public SerializableDictionnary()
	{
	}

	[Token(Token = "0x60009EF")]
	public SerializableDictionnary(SerializationInfo info, StreamingContext context)
	{
	}

	[Token(Token = "0x60009F0")]
	public override void GetObjectData(SerializationInfo info, StreamingContext context)
	{
	}
}
[Serializable]
[Token(Token = "0x20001A0")]
public class GlobalScoreData
{
	[Token(Token = "0x4000B1F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public SerializableDictionnary<string, int[]> StatGoal;

	[Token(Token = "0x4000B20")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public SerializableDictionnary<string, int[]> BestPlayerGoal;

	[Token(Token = "0x4000B21")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int sandboxHighscore;

	[Token(Token = "0x4000B22")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static GlobalScoreData _Instance;

	[Token(Token = "0x170000D8")]
	public static GlobalScoreData Instance
	{
		[Token(Token = "0x60009F2")]
		[Address(RVA = "0xC68868", Offset = "0xC68868", VA = "0xC68868")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60009F1")]
	[Address(RVA = "0xC68408", Offset = "0xC68408", VA = "0xC68408")]
	public GlobalScoreData(TextAsset GoalTab, [Optional] GlobalScoreData OldStats)
	{
	}

	[Token(Token = "0x60009F3")]
	[Address(RVA = "0xC68A18", Offset = "0xC68A18", VA = "0xC68A18")]
	public int[] GetGoalStat(string key)
	{
		return null;
	}

	[Token(Token = "0x60009F4")]
	[Address(RVA = "0xC68B9C", Offset = "0xC68B9C", VA = "0xC68B9C")]
	public int[] SelectBestStats(string key, int[] newStats)
	{
		return null;
	}

	[Token(Token = "0x60009F5")]
	[Address(RVA = "0xC68D08", Offset = "0xC68D08", VA = "0xC68D08")]
	public int HowManyGoalAchieved(string key, int[] stats)
	{
		return default(int);
	}

	[Token(Token = "0x60009F6")]
	[Address(RVA = "0xC68C60", Offset = "0xC68C60", VA = "0xC68C60")]
	public int HowManyGoalAchieved(string key)
	{
		return default(int);
	}
}
[Token(Token = "0x20001A1")]
public abstract class SaveManagerCommon : MonoBehaviour
{
	[Token(Token = "0x4000B23")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static SaveManagerCommon Instance;

	[Token(Token = "0x4000B24")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private MetaData metaDataToSave;

	[Token(Token = "0x4000B25")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private GameModeData gameModeDataToSave;

	[Token(Token = "0x4000B26")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private GameSystemData gameSystemDataToSave;

	[Token(Token = "0x4000B27")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private ProgressionData progressionDataToSave;

	[Token(Token = "0x4000B28")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private List<ObjectData> objectsToSave;

	[Token(Token = "0x4000B29")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private List<MeubleData> meublesToSave;

	[Token(Token = "0x4000B2A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private List<ContainerData> containersToSave;

	[Token(Token = "0x4000B2B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[HideInInspector]
	public int saveIDToSave;

	[Token(Token = "0x4000B2C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[HideInInspector]
	public string SaveName;

	[Token(Token = "0x4000B2D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1F80A4", Offset = "0x1F80A4")]
	private static Func<byte, int> <>f__am$cache0;

	[Token(Token = "0x170000D9")]
	public abstract string ConfigDirectoryPath
	{
		[Token(Token = "0x60009FB")]
		get;
	}

	[Token(Token = "0x170000DA")]
	public abstract string GlobalConfigPath
	{
		[Token(Token = "0x60009FC")]
		get;
	}

	[Token(Token = "0x60009F8")]
	[Address(RVA = "0xCAC4B0", Offset = "0xCAC4B0", VA = "0xCAC4B0")]
	protected SaveManagerCommon()
	{
	}

	[Token(Token = "0x60009F9")]
	[Address(RVA = "0xCAC7D4", Offset = "0xCAC7D4", VA = "0xCAC7D4")]
	public void Init()
	{
	}

	[Token(Token = "0x60009FA")]
	[Address(RVA = "0xCAC838", Offset = "0xCAC838", VA = "0xCAC838")]
	public void OnDestroy()
	{
	}

	[Token(Token = "0x60009FD")]
	public abstract string GetSaveIDPath(int saveIDToSave);

	[Token(Token = "0x60009FE")]
	public abstract Stream GetReadStream(string path);

	[Token(Token = "0x60009FF")]
	public abstract Stream GetWriteStream(string path);

	[Token(Token = "0x6000A00")]
	public abstract bool Exists(string path);

	[Token(Token = "0x6000A01")]
	public abstract void Delete(string path);

	[Token(Token = "0x6000A02")]
	[Address(RVA = "0xCACB68", Offset = "0xCACB68", VA = "0xCACB68")]
	public void UpdatePrisonScore(string prisonName, int[] stats)
	{
	}

	[Token(Token = "0x6000A03")]
	[Address(RVA = "0xCAC8C8", Offset = "0xCAC8C8", VA = "0xCAC8C8")]
	public void SaveScoreData(GlobalScoreData data)
	{
	}

	[Token(Token = "0x6000A04")]
	[Address(RVA = "0xCACC68", Offset = "0xCACC68", VA = "0xCACC68")]
	public void SaveGlobalProgression()
	{
	}

	[Token(Token = "0x6000A05")]
	[Address(RVA = "0xCAD2AC", Offset = "0xCAD2AC", VA = "0xCAD2AC")]
	public void SaveData()
	{
	}

	[Token(Token = "0x6000A06")]
	[Address(RVA = "0xCAD140", Offset = "0xCAD140", VA = "0xCAD140")]
	private int GetPrisonUnlockedID()
	{
		return default(int);
	}

	[Token(Token = "0x6000A07")]
	[Address(RVA = "0xCAD23C", Offset = "0xCAD23C", VA = "0xCAD23C")]
	private int GetArcadeHighScore()
	{
		return default(int);
	}

	[Token(Token = "0x6000A08")]
	[Address(RVA = "0xCB03F4", Offset = "0xCB03F4", VA = "0xCB03F4")]
	private void DebugSave(SaveDataV2 saveData)
	{
	}

	[Token(Token = "0x6000A09")]
	[Address(RVA = "0xCAF2E4", Offset = "0xCAF2E4", VA = "0xCAF2E4")]
	private GameModeData SaveGameModeData()
	{
		return null;
	}

	[Token(Token = "0x6000A0A")]
	[Address(RVA = "0xCAF4F4", Offset = "0xCAF4F4", VA = "0xCAF4F4")]
	private GameSystemData SaveGameSystemData()
	{
		return null;
	}

	[Token(Token = "0x6000A0B")]
	[Address(RVA = "0xCAF9BC", Offset = "0xCAF9BC", VA = "0xCAF9BC")]
	private ProgressionData SaveProgressionData()
	{
		return null;
	}

	[Token(Token = "0x6000A0C")]
	[Address(RVA = "0xCAD548", Offset = "0xCAD548", VA = "0xCAD548")]
	private void SaveObjectsData()
	{
	}

	[Token(Token = "0x6000A0D")]
	[Address(RVA = "0xCB14FC", Offset = "0xCB14FC", VA = "0xCB14FC")]
	private void SaveContainerData(SpawnableObject obj)
	{
	}

	[Token(Token = "0x6000A0E")]
	[Address(RVA = "0xCAEEDC", Offset = "0xCAEEDC", VA = "0xCAEEDC")]
	private MetaData GenerateMetaData()
	{
		return null;
	}

	[Token(Token = "0x6000A0F")]
	[Address(RVA = "0xCB02A8", Offset = "0xCB02A8", VA = "0xCB02A8")]
	private SaveDataV2 WriteFinalData()
	{
		return null;
	}

	[Token(Token = "0x6000A10")]
	[Address(RVA = "0xCB1D3C", Offset = "0xCB1D3C", VA = "0xCB1D3C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1F80B4", Offset = "0x1F80B4")]
	private static int <SaveProgressionData>m__0(byte i)
	{
		return default(int);
	}
}
[Token(Token = "0x20001A2")]
public class TaMereManager : MonoBehaviour
{
	[Token(Token = "0x6000A11")]
	[Address(RVA = "0xCBD9C8", Offset = "0xCBD9C8", VA = "0xCBD9C8")]
	public TaMereManager()
	{
	}

	[Token(Token = "0x6000A12")]
	[Address(RVA = "0xCBD9D0", Offset = "0xCBD9D0", VA = "0xCBD9D0")]
	private void RenameWindows(string from, string to)
	{
	}

	[Token(Token = "0x6000A13")]
	[Address(RVA = "0xCBDB80", Offset = "0xCBDB80", VA = "0xCBDB80")]
	private void EffacerRépertoire(string répertoire)
	{
	}

	[Token(Token = "0x6000A14")]
	[Address(RVA = "0xCBDD04", Offset = "0xCBDD04", VA = "0xCBDD04")]
	private void Awake()
	{
	}
}
[Token(Token = "0x20001A3")]
public class ScrollbarHelper : MonoBehaviour
{
	[Token(Token = "0x2000347")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1F80D4", Offset = "0x1F80D4")]
	private sealed class <MoveFast>c__Iterator0 : IEnumerator, IDisposable, IEnumerator<object>
	{
		[Token(Token = "0x4001356")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal ScrollRect rect;

		[Token(Token = "0x4001357")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		internal object $current;

		[Token(Token = "0x4001358")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal bool $disposing;

		[Token(Token = "0x4001359")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		internal int $PC;

		[Token(Token = "0x170002EF")]
		private object System.Collections.Generic.IEnumerator<object>.Current
		{
			[Token(Token = "0x60018D0")]
			[Address(RVA = "0xCB30DC", Offset = "0xCB30DC", VA = "0xCB30DC", Slot = "8")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002F0")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60018D1")]
			[Address(RVA = "0xCB30E4", Offset = "0xCB30E4", VA = "0xCB30E4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60018CE")]
		[Address(RVA = "0xCB1EA4", Offset = "0xCB1EA4", VA = "0xCB1EA4")]
		[DebuggerHidden]
		public <MoveFast>c__Iterator0()
		{
		}

		[Token(Token = "0x60018CF")]
		[Address(RVA = "0xCB2FB8", Offset = "0xCB2FB8", VA = "0xCB2FB8", Slot = "5")]
		public bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60018D2")]
		[Address(RVA = "0xCB30EC", Offset = "0xCB30EC", VA = "0xCB30EC", Slot = "7")]
		[DebuggerHidden]
		public void Dispose()
		{
		}

		[Token(Token = "0x60018D3")]
		[Address(RVA = "0xCB3100", Offset = "0xCB3100", VA = "0xCB3100", Slot = "6")]
		[DebuggerHidden]
		public void Reset()
		{
		}
	}

	[Token(Token = "0x2000348")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1F8134", Offset = "0x1F8134")]
	private sealed class <SetScrollbar>c__AnonStorey1
	{
		[Token(Token = "0x400135A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal Scrollbar bar;

		[Token(Token = "0x60018D4")]
		[Address(RVA = "0xCB23F8", Offset = "0xCB23F8", VA = "0xCB23F8")]
		public <SetScrollbar>c__AnonStorey1()
		{
		}

		[Token(Token = "0x60018D5")]
		[Address(RVA = "0xCB3184", Offset = "0xCB3184", VA = "0xCB3184")]
		internal float <>m__0()
		{
			return default(float);
		}

		[Token(Token = "0x60018D6")]
		[Address(RVA = "0xCB31AC", Offset = "0xCB31AC", VA = "0xCB31AC")]
		internal void <>m__1(float x)
		{
		}
	}

	[Token(Token = "0x2000349")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1F8144", Offset = "0x1F8144")]
	private sealed class <ComputeStopperList>c__AnonStorey2
	{
		[Token(Token = "0x400135B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal Vector3[] corners;

		[Token(Token = "0x400135C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		internal float objectHeight;

		[Token(Token = "0x400135D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal float ViewportBottomTop;

		[Token(Token = "0x400135E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		internal float heightOfScrollingArea;

		[Token(Token = "0x60018D7")]
		[Address(RVA = "0xCB2E6C", Offset = "0xCB2E6C", VA = "0xCB2E6C")]
		public <ComputeStopperList>c__AnonStorey2()
		{
		}

		[Token(Token = "0x60018D8")]
		[Address(RVA = "0xCB2E74", Offset = "0xCB2E74", VA = "0xCB2E74")]
		internal float <>m__0(RectTransform b)
		{
			return default(float);
		}

		[Token(Token = "0x60018D9")]
		[Address(RVA = "0xCB2F3C", Offset = "0xCB2F3C", VA = "0xCB2F3C")]
		internal float <>m__1(RectTransform b)
		{
			return default(float);
		}

		[Token(Token = "0x60018DA")]
		[Address(RVA = "0xCB2F9C", Offset = "0xCB2F9C", VA = "0xCB2F9C")]
		internal float <>m__2(float s)
		{
			return default(float);
		}
	}

	[Token(Token = "0x4000B2E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public bool ExecOnEnable;

	[Token(Token = "0x4000B2F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static ScrollbarScriptableAsset _Asset;

	[Token(Token = "0x170000DB")]
	public static ScrollbarScriptableAsset Asset
	{
		[Token(Token = "0x6000A1C")]
		[Address(RVA = "0xCB22BC", Offset = "0xCB22BC", VA = "0xCB22BC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000A15")]
	[Address(RVA = "0xCB1D44", Offset = "0xCB1D44", VA = "0xCB1D44")]
	public ScrollbarHelper()
	{
	}

	[Token(Token = "0x6000A16")]
	[Address(RVA = "0xCB1D4C", Offset = "0xCB1D4C", VA = "0xCB1D4C")]
	public void OnEnable()
	{
	}

	[Token(Token = "0x6000A17")]
	[Address(RVA = "0xCB1E24", Offset = "0xCB1E24", VA = "0xCB1E24")]
	[DebuggerHidden]
	private static IEnumerator MoveFast(ScrollRect rect)
	{
		return null;
	}

	[Token(Token = "0x6000A18")]
	[Address(RVA = "0xCB1D60", Offset = "0xCB1D60", VA = "0xCB1D60")]
	public static bool ScrollBarUp(Component comp)
	{
		return default(bool);
	}

	[Token(Token = "0x6000A19")]
	[Address(RVA = "0xCB1F78", Offset = "0xCB1F78", VA = "0xCB1F78")]
	public static bool ScrollBarUp(ScrollRect rect)
	{
		return default(bool);
	}

	[Token(Token = "0x6000A1A")]
	[Address(RVA = "0xCB1EAC", Offset = "0xCB1EAC", VA = "0xCB1EAC")]
	public static bool ScrollBarUp(Scrollbar bar)
	{
		return default(bool);
	}

	[Token(Token = "0x6000A1B")]
	[Address(RVA = "0xCB20F0", Offset = "0xCB20F0", VA = "0xCB20F0")]
	public static void MoveScrollbar(Scrollbar bar, float diff, float duration)
	{
	}

	[Token(Token = "0x6000A1D")]
	[Address(RVA = "0xCB2148", Offset = "0xCB2148", VA = "0xCB2148")]
	public static void SetScrollbar(Scrollbar bar, float targetValue, float duration)
	{
	}

	[Token(Token = "0x6000A1E")]
	[Address(RVA = "0xCB2400", Offset = "0xCB2400", VA = "0xCB2400")]
	public static List<float> ComputeSimpleStopperList(Scrollbar bar)
	{
		return null;
	}

	[Token(Token = "0x6000A1F")]
	[Address(RVA = "0xCB2628", Offset = "0xCB2628", VA = "0xCB2628")]
	public static List<float> ComputeStopperList(RectTransform Viewport, IEnumerable<RectTransform> objectsTransform, IEnumerable<RectTransform> headersTransform)
	{
		return null;
	}
}
[Token(Token = "0x20001A4")]
public class SellBoxScript : ObjectTagReceiver
{
	[Token(Token = "0x200034A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1F8164", Offset = "0x1F8164")]
	private sealed class <JsuisÉcoeuréDesProblèmesDOrdreDInitialisation>c__Iterator0 : IEnumerator, IDisposable, IEnumerator<object>
	{
		[Token(Token = "0x400135F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal GameObject[] <obj>__0;

		[Token(Token = "0x4001360")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		internal SellBoxScript $this;

		[Token(Token = "0x4001361")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal object $current;

		[Token(Token = "0x4001362")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		internal bool $disposing;

		[Token(Token = "0x4001363")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal int $PC;

		[Token(Token = "0x170002F1")]
		private object System.Collections.Generic.IEnumerator<object>.Current
		{
			[Token(Token = "0x60018DD")]
			[Address(RVA = "0xCB6880", Offset = "0xCB6880", VA = "0xCB6880", Slot = "8")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002F2")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60018DE")]
			[Address(RVA = "0xCB6888", Offset = "0xCB6888", VA = "0xCB6888", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60018DB")]
		[Address(RVA = "0xCB503C", Offset = "0xCB503C", VA = "0xCB503C")]
		[DebuggerHidden]
		public <JsuisÉcoeuréDesProblèmesDOrdreDInitialisation>c__Iterator0()
		{
		}

		[Token(Token = "0x60018DC")]
		[Address(RVA = "0xCB6558", Offset = "0xCB6558", VA = "0xCB6558", Slot = "5")]
		public bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60018DF")]
		[Address(RVA = "0xCB6890", Offset = "0xCB6890", VA = "0xCB6890", Slot = "7")]
		[DebuggerHidden]
		public void Dispose()
		{
		}

		[Token(Token = "0x60018E0")]
		[Address(RVA = "0xCB68A4", Offset = "0xCB68A4", VA = "0xCB68A4", Slot = "6")]
		[DebuggerHidden]
		public void Reset()
		{
		}
	}

	[Token(Token = "0x4000B30")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private DealerTradeScript tradeScript;

	[Token(Token = "0x4000B31")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private string[] typeObjetsCompletes;

	[Token(Token = "0x4000B32")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float forceDeMultiplierDeRejet;

	[Token(Token = "0x4000B33")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool BobbySoldToday;

	[Token(Token = "0x4000B34")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private BuyingData soldWhat;

	[Token(Token = "0x170000DC")]
	private TabReader reader
	{
		[Token(Token = "0x6000A21")]
		[Address(RVA = "0xCB4F34", Offset = "0xCB4F34", VA = "0xCB4F34")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000A20")]
	[Address(RVA = "0xCB4EB0", Offset = "0xCB4EB0", VA = "0xCB4EB0")]
	public SellBoxScript()
	{
	}

	[Token(Token = "0x6000A22")]
	[Address(RVA = "0xCB4F98", Offset = "0xCB4F98", VA = "0xCB4F98")]
	private void Start()
	{
	}

	[Token(Token = "0x6000A23")]
	[Address(RVA = "0xCB4FBC", Offset = "0xCB4FBC", VA = "0xCB4FBC")]
	[DebuggerHidden]
	private IEnumerator JsuisÉcoeuréDesProblèmesDOrdreDInitialisation()
	{
		return null;
	}

	[Token(Token = "0x6000A24")]
	[Address(RVA = "0xCB5044", Offset = "0xCB5044", VA = "0xCB5044")]
	public void OnEnable()
	{
	}

	[Token(Token = "0x6000A25")]
	[Address(RVA = "0xCB5050", Offset = "0xCB5050", VA = "0xCB5050")]
	private void OnTriggerEnter(Collider col)
	{
	}

	[Token(Token = "0x6000A26")]
	[Address(RVA = "0xCB59F0", Offset = "0xCB59F0", VA = "0xCB59F0")]
	private bool HandleBobbySelling(Ressource res, Collider col)
	{
		return default(bool);
	}

	[Token(Token = "0x6000A27")]
	[Address(RVA = "0xCB5CA4", Offset = "0xCB5CA4", VA = "0xCB5CA4")]
	private bool regardeSiJeLacheteTu(string res)
	{
		return default(bool);
	}

	[Token(Token = "0x6000A28")]
	[Address(RVA = "0xCB62E4", Offset = "0xCB62E4", VA = "0xCB62E4")]
	public void tellMasterScriptToStopMe()
	{
	}

	[Token(Token = "0x6000A29")]
	[Address(RVA = "0xCB5FB8", Offset = "0xCB5FB8", VA = "0xCB5FB8")]
	public void particulesSellSpawn(GameObject item, int valeur, bool skipDestroy = false, bool isSkillpoint = false)
	{
	}

	[Token(Token = "0x6000A2A")]
	[Address(RVA = "0xCB6434", Offset = "0xCB6434", VA = "0xCB6434", Slot = "4")]
	public override void ReceiveTag(ObjectTag tag)
	{
	}
}
[Token(Token = "0x20001A5")]
public class SpawnableObject : MonoBehaviour
{
	[Token(Token = "0x4000B35")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public string ID;

	[Token(Token = "0x6000A2B")]
	[Address(RVA = "0xCB7BD4", Offset = "0xCB7BD4", VA = "0xCB7BD4")]
	public SpawnableObject()
	{
	}

	[Token(Token = "0x6000A2C")]
	[Address(RVA = "0xCB7BDC", Offset = "0xCB7BDC", VA = "0xCB7BDC", Slot = "4")]
	public virtual void Reset()
	{
	}

	[Token(Token = "0x6000A2D")]
	[Address(RVA = "0xCB7BE0", Offset = "0xCB7BE0", VA = "0xCB7BE0", Slot = "5")]
	public virtual void ShutDown()
	{
	}
}
namespace Trebuchet
{
	[Token(Token = "0x20001A6")]
	public class DistanceGrab : MonoBehaviour
	{
		[Token(Token = "0x4000B36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float grabDistance;

		[Token(Token = "0x4000B37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Color lineColor;

		[Token(Token = "0x4000B38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private LineRenderer lineRend;

		[Token(Token = "0x4000B39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private float lineDistance;

		[Token(Token = "0x4000B3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private NVRHand hand;

		[Token(Token = "0x4000B3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private Collider[] objectsHovering;

		[Token(Token = "0x4000B3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Collider[] lastObjsHovering;

		[Token(Token = "0x4000B3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private bool isHit;

		[Token(Token = "0x4000B3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x35")]
		private bool reverseFeedback;

		[Token(Token = "0x4000B3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private NVRInteractable lastObj;

		[Token(Token = "0x4000B40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private Ray ray;

		[Token(Token = "0x4000B41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private Collider[] noCollider;

		[Token(Token = "0x6000A2E")]
		[Address(RVA = "0xCC0EEC", Offset = "0xCC0EEC", VA = "0xCC0EEC")]
		public DistanceGrab()
		{
		}

		[Token(Token = "0x6000A2F")]
		[Address(RVA = "0xCC1000", Offset = "0xCC1000", VA = "0xCC1000")]
		private void Start()
		{
		}

		[Token(Token = "0x6000A30")]
		[Address(RVA = "0xCC10A4", Offset = "0xCC10A4", VA = "0xCC10A4")]
		private void Update()
		{
		}

		[Token(Token = "0x6000A31")]
		[Address(RVA = "0xCC139C", Offset = "0xCC139C", VA = "0xCC139C")]
		public bool Contains(NVRInteractable item)
		{
			return default(bool);
		}

		[Token(Token = "0x6000A32")]
		[Address(RVA = "0xCC14C8", Offset = "0xCC14C8", VA = "0xCC14C8")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6000A33")]
		[Address(RVA = "0xCC2128", Offset = "0xCC2128", VA = "0xCC2128")]
		public void Lacher()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20001A7")]
	public class SceneLayout
	{
		[Token(Token = "0x4000B42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public string sceneName;

		[Token(Token = "0x4000B43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public Scene scene;

		[Token(Token = "0x4000B44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vector3[] positions;

		[Token(Token = "0x4000B45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float[] rotations;

		[Token(Token = "0x170000DD")]
		public int lenght
		{
			[Token(Token = "0x6000A36")]
			[Address(RVA = "0xCC9D10", Offset = "0xCC9D10", VA = "0xCC9D10")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x6000A34")]
		[Address(RVA = "0xCC98EC", Offset = "0xCC98EC", VA = "0xCC98EC")]
		public SceneLayout(Vector3 pos, Quaternion rot)
		{
		}

		[Token(Token = "0x6000A35")]
		[Address(RVA = "0xCC9A54", Offset = "0xCC9A54", VA = "0xCC9A54")]
		public SceneLayout(Transform[] points)
		{
		}
	}
	[Token(Token = "0x20001A8")]
	public enum StandingSystemLevel
	{
		[Token(Token = "0x4000B47")]
		None,
		[Token(Token = "0x4000B48")]
		TeleportationOnly,
		[Token(Token = "0x4000B49")]
		Full
	}
	[Token(Token = "0x20001A9")]
	public class StandingManager : MonoBehaviour
	{
		[Token(Token = "0x200034B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1F8204", Offset = "0x1F8204")]
		private sealed class <LateStart>c__Iterator0 : IEnumerator, IDisposable, IEnumerator<object>
		{
			[Token(Token = "0x4001364")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			internal StandingManager $this;

			[Token(Token = "0x4001365")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			internal object $current;

			[Token(Token = "0x4001366")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal bool $disposing;

			[Token(Token = "0x4001367")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			internal int $PC;

			[Token(Token = "0x170002F3")]
			private object System.Collections.Generic.IEnumerator<object>.Current
			{
				[Token(Token = "0x60018E3")]
				[Address(RVA = "0xCCB5B4", Offset = "0xCCB5B4", VA = "0xCCB5B4", Slot = "8")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002F4")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60018E4")]
				[Address(RVA = "0xCCB5BC", Offset = "0xCCB5BC", VA = "0xCCB5BC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60018E1")]
			[Address(RVA = "0xCCACAC", Offset = "0xCCACAC", VA = "0xCCACAC")]
			[DebuggerHidden]
			public <LateStart>c__Iterator0()
			{
			}

			[Token(Token = "0x60018E2")]
			[Address(RVA = "0xCCB470", Offset = "0xCCB470", VA = "0xCCB470", Slot = "5")]
			public bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60018E5")]
			[Address(RVA = "0xCCB5C4", Offset = "0xCCB5C4", VA = "0xCCB5C4", Slot = "7")]
			[DebuggerHidden]
			public void Dispose()
			{
			}

			[Token(Token = "0x60018E6")]
			[Address(RVA = "0xCCB5D8", Offset = "0xCCB5D8", VA = "0xCCB5D8", Slot = "6")]
			[DebuggerHidden]
			public void Reset()
			{
			}
		}

		[Token(Token = "0x4000B4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static StandingManager Instance;

		[Token(Token = "0x4000B4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public SceneLayout[] layouts;

		[Token(Token = "0x4000B4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public LayerMask grabLayerMask;

		[Token(Token = "0x4000B4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float minGrabDistance;

		[Token(Token = "0x4000B4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float minThrowDistance;

		[Token(Token = "0x4000B4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float GrabRadius;

		[Token(Token = "0x4000B50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool recenterAuto;

		[Token(Token = "0x4000B51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private Vector2 _roomSize;

		[Token(Token = "0x4000B52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public LineRenderer distanceGrabLine;

		[Token(Token = "0x4000B53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private NVRPlayer player;

		[Token(Token = "0x4000B54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private Calibrator calibrator;

		[Token(Token = "0x4000B55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private SceneLayout currentLayout;

		[Token(Token = "0x4000B56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private int currentIndex;

		[Token(Token = "0x4000B57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float rotation;

		[Token(Token = "0x4000B58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private bool level_set;

		[Token(Token = "0x4000B59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x45")]
		private bool initialized;

		[Token(Token = "0x4000B5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private StandingSystemLevel _level;

		[Token(Token = "0x4000B5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1F81D4", Offset = "0x1F81D4")]
		private static Func<NVRHand, DistanceGrab> <>f__am$cache0;

		[Token(Token = "0x170000DE")]
		public static bool IsActive
		{
			[Token(Token = "0x6000A38")]
			[Address(RVA = "0xCC9D4C", Offset = "0xCC9D4C", VA = "0xCC9D4C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000DF")]
		public Vector3 roomSize
		{
			[Token(Token = "0x6000A39")]
			[Address(RVA = "0xCC9E30", Offset = "0xCC9E30", VA = "0xCC9E30")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x170000E0")]
		public StandingSystemLevel level
		{
			[Token(Token = "0x6000A3A")]
			[Address(RVA = "0xCB8700", Offset = "0xCB8700", VA = "0xCB8700")]
			get
			{
				return default(StandingSystemLevel);
			}
			[Token(Token = "0x6000A3B")]
			[Address(RVA = "0xCB8574", Offset = "0xCB8574", VA = "0xCB8574")]
			set
			{
			}
		}

		[Token(Token = "0x6000A37")]
		[Address(RVA = "0xCC9D30", Offset = "0xCC9D30", VA = "0xCC9D30")]
		public StandingManager()
		{
		}

		[Token(Token = "0x6000A3C")]
		[Address(RVA = "0xCC9E6C", Offset = "0xCC9E6C", VA = "0xCC9E6C")]
		private void UpdateStandingLevel()
		{
		}

		[Token(Token = "0x6000A3D")]
		[Address(RVA = "0xCCA4D8", Offset = "0xCCA4D8", VA = "0xCCA4D8")]
		public static StandingSystemLevel DefaultLevel()
		{
			return default(StandingSystemLevel);
		}

		[Token(Token = "0x6000A3E")]
		[Address(RVA = "0xCCA0B0", Offset = "0xCCA0B0", VA = "0xCCA0B0")]
		private void SetTeleportation(bool v)
		{
		}

		[Token(Token = "0x6000A3F")]
		[Address(RVA = "0xCCA0B8", Offset = "0xCCA0B8", VA = "0xCCA0B8")]
		private void SetDistanceGrab(bool v)
		{
		}

		[Token(Token = "0x6000A40")]
		[Address(RVA = "0xCCA568", Offset = "0xCCA568", VA = "0xCCA568")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000A41")]
		[Address(RVA = "0xCCA740", Offset = "0xCCA740", VA = "0xCCA740")]
		private void Init()
		{
		}

		[Token(Token = "0x6000A42")]
		[Address(RVA = "0xCCA9DC", Offset = "0xCCA9DC", VA = "0xCCA9DC")]
		private void Start()
		{
		}

		[Token(Token = "0x6000A43")]
		[Address(RVA = "0xCCAC2C", Offset = "0xCCAC2C", VA = "0xCCAC2C")]
		[DebuggerHidden]
		private IEnumerator LateStart()
		{
			return null;
		}

		[Token(Token = "0x6000A44")]
		[Address(RVA = "0xCCACB4", Offset = "0xCCACB4", VA = "0xCCACB4")]
		private void Update()
		{
		}

		[Token(Token = "0x6000A45")]
		[Address(RVA = "0xCCB43C", Offset = "0xCCB43C", VA = "0xCCB43C")]
		public void ApplyLayout()
		{
		}

		[Token(Token = "0x6000A46")]
		[Address(RVA = "0xCCAF8C", Offset = "0xCCAF8C", VA = "0xCCAF8C")]
		public void ApplyLayout(int index, bool wantRotation = true)
		{
		}

		[Token(Token = "0x6000A47")]
		[Address(RVA = "0xCCA768", Offset = "0xCCA768", VA = "0xCCA768")]
		private void loadLayout(Scene scene)
		{
		}

		[Token(Token = "0x6000A48")]
		[Address(RVA = "0xCCB448", Offset = "0xCCB448", VA = "0xCCB448")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1F81F4", Offset = "0x1F81F4")]
		private static DistanceGrab <SetDistanceGrab>m__0(NVRHand h)
		{
			return null;
		}
	}
}
[Token(Token = "0x20001AA")]
public class StatistiqueData
{
	[Token(Token = "0x4000B5C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public int nbTimeCaught;

	[Token(Token = "0x4000B5D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public int jobDone;

	[Token(Token = "0x4000B5E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int nbItemsSold;

	[Token(Token = "0x4000B5F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public int ItemsSoldValue;

	[Token(Token = "0x4000B60")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int nbItemsGivenToJobs;

	[Token(Token = "0x4000B61")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int ItemsGivenToJobsValue;

	[Token(Token = "0x4000B62")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int daysFirst;

	[Token(Token = "0x170000E1")]
	public int Stat1
	{
		[Token(Token = "0x6000A4A")]
		[Address(RVA = "0xCB14DC", Offset = "0xCB14DC", VA = "0xCB14DC")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000A4B")]
		[Address(RVA = "0xCBA20C", Offset = "0xCBA20C", VA = "0xCBA20C")]
		set
		{
		}
	}

	[Token(Token = "0x170000E2")]
	public int Stat2
	{
		[Token(Token = "0x6000A4C")]
		[Address(RVA = "0xCB14E4", Offset = "0xCB14E4", VA = "0xCB14E4")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000A4D")]
		[Address(RVA = "0xCBA214", Offset = "0xCBA214", VA = "0xCBA214")]
		set
		{
		}
	}

	[Token(Token = "0x170000E3")]
	public int Stat3
	{
		[Token(Token = "0x6000A4E")]
		[Address(RVA = "0xCB14EC", Offset = "0xCB14EC", VA = "0xCB14EC")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000A4F")]
		[Address(RVA = "0xCBA21C", Offset = "0xCBA21C", VA = "0xCBA21C")]
		set
		{
		}
	}

	[Token(Token = "0x170000E4")]
	public int Stat4
	{
		[Token(Token = "0x6000A50")]
		[Address(RVA = "0xCB14F4", Offset = "0xCB14F4", VA = "0xCB14F4")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000A51")]
		[Address(RVA = "0xCBA224", Offset = "0xCBA224", VA = "0xCBA224")]
		set
		{
		}
	}

	[Token(Token = "0x170000E5")]
	public int nbDayInThisPrison
	{
		[Token(Token = "0x6000A52")]
		[Address(RVA = "0xCBA22C", Offset = "0xCBA22C", VA = "0xCBA22C")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x6000A49")]
	[Address(RVA = "0xCBA204", Offset = "0xCBA204", VA = "0xCBA204")]
	public StatistiqueData()
	{
	}

	[Token(Token = "0x6000A53")]
	[Address(RVA = "0xCBA2A8", Offset = "0xCBA2A8", VA = "0xCBA2A8")]
	public static int[] GetStatThreshold(string id)
	{
		return null;
	}

	[Token(Token = "0x6000A54")]
	[Address(RVA = "0xCBA34C", Offset = "0xCBA34C", VA = "0xCBA34C")]
	public void Log()
	{
	}
}
[Token(Token = "0x20001AB")]
public class TestTextFitting : MonoBehaviour
{
	[Token(Token = "0x4000B63")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private GameTextManager gtm;

	[Token(Token = "0x4000B64")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private Text _text;

	[Token(Token = "0x6000A55")]
	[Address(RVA = "0xCBE34C", Offset = "0xCBE34C", VA = "0xCBE34C")]
	public TestTextFitting()
	{
	}

	[Token(Token = "0x6000A56")]
	[Address(RVA = "0xCBE354", Offset = "0xCBE354", VA = "0xCBE354")]
	private void Start()
	{
	}

	[Token(Token = "0x6000A57")]
	[Address(RVA = "0xCBE3D8", Offset = "0xCBE3D8", VA = "0xCBE3D8")]
	private void Update()
	{
	}
}
[Token(Token = "0x20001AC")]
public class CharSetDebugger : MonoBehaviour
{
	[Token(Token = "0x4000B65")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private string[][] tab;

	[Token(Token = "0x4000B66")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private List<char> allChar;

	[Token(Token = "0x4000B67")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public string debug;

	[Token(Token = "0x6000A58")]
	[Address(RVA = "0xCF5FE8", Offset = "0xCF5FE8", VA = "0xCF5FE8")]
	public CharSetDebugger()
	{
	}
}
[Serializable]
[Token(Token = "0x20001AD")]
public class LanguageFontGroup
{
	[Token(Token = "0x4000B68")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public UnityEngine.Object[] Fonts;

	[Token(Token = "0x4000B69")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public TextAsset[] Texts;

	[Token(Token = "0x6000A59")]
	[Address(RVA = "0xC7DB94", Offset = "0xC7DB94", VA = "0xC7DB94")]
	public LanguageFontGroup()
	{
	}
}
[Token(Token = "0x20001AE")]
public class FontGroup : ScriptableObject
{
	[Token(Token = "0x4000B6A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public LanguageFontGroup[] FontGroups;

	[Token(Token = "0x6000A5A")]
	[Address(RVA = "0xC57728", Offset = "0xC57728", VA = "0xC57728")]
	public FontGroup()
	{
	}
}
[Token(Token = "0x20001AF")]
public class GameFontSizeSwitch : MonoBehaviour
{
	[Token(Token = "0x4000B6B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public float[] sizes;

	[Token(Token = "0x4000B6C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private TextMeshProUGUI text;

	[Token(Token = "0x6000A5B")]
	[Address(RVA = "0xC57738", Offset = "0xC57738", VA = "0xC57738")]
	public GameFontSizeSwitch()
	{
	}

	[Token(Token = "0x6000A5C")]
	[Address(RVA = "0xC57740", Offset = "0xC57740", VA = "0xC57740")]
	private void Start()
	{
	}
}
[Token(Token = "0x20001B0")]
public class GameObjectSwitch : MonoBehaviour
{
	[Token(Token = "0x4000B6D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public GameObject[] Objs;

	[Token(Token = "0x6000A5D")]
	[Address(RVA = "0xC578E8", Offset = "0xC578E8", VA = "0xC578E8")]
	public GameObjectSwitch()
	{
	}

	[Token(Token = "0x6000A5E")]
	[Address(RVA = "0xC578F0", Offset = "0xC578F0", VA = "0xC578F0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000A5F")]
	[Address(RVA = "0xC578F4", Offset = "0xC578F4", VA = "0xC578F4")]
	private void set()
	{
	}
}
[Token(Token = "0x20001B1")]
public enum TextType
{
	[Token(Token = "0x4000B6F")]
	Announce,
	[Token(Token = "0x4000B70")]
	Hints,
	[Token(Token = "0x4000B71")]
	ObjectName,
	[Token(Token = "0x4000B72")]
	ObjectDescription,
	[Token(Token = "0x4000B73")]
	TabletMenu,
	[Token(Token = "0x4000B74")]
	JobName,
	[Token(Token = "0x4000B75")]
	Generique,
	[Token(Token = "0x4000B76")]
	Tutorial,
	[Token(Token = "0x4000B77")]
	Menu,
	[Token(Token = "0x4000B78")]
	Furniture,
	[Token(Token = "0x4000B79")]
	Bobby,
	[Token(Token = "0x4000B7A")]
	HeadDisplay
}
[Serializable]
[Token(Token = "0x20001B2")]
public class TextMetadata
{
	[Token(Token = "0x4000B7B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public string Plateform;

	[Token(Token = "0x4000B7C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public TextType type;

	[Token(Token = "0x4000B7D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int ID;

	[Token(Token = "0x4000B7E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public string[] formatObject;

	[Token(Token = "0x6000A60")]
	[Address(RVA = "0xCBE4B4", Offset = "0xCBE4B4", VA = "0xCBE4B4")]
	public TextMetadata()
	{
	}
}
[Token(Token = "0x20001B3")]
public class GameTextLink : MonoBehaviour
{
	[Token(Token = "0x4000B7F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public bool setOnStart;

	[Token(Token = "0x4000B80")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public TextMetadata[] plateformTexts;

	[Token(Token = "0x4000B81")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public TextMeshProUGUI[] targetText;

	[Token(Token = "0x6000A61")]
	[Address(RVA = "0xC60314", Offset = "0xC60314", VA = "0xC60314")]
	public GameTextLink()
	{
	}

	[Token(Token = "0x6000A62")]
	[Address(RVA = "0xC60324", Offset = "0xC60324", VA = "0xC60324")]
	private void Start()
	{
	}

	[Token(Token = "0x6000A63")]
	[Address(RVA = "0xC60400", Offset = "0xC60400", VA = "0xC60400")]
	public void SetText()
	{
	}

	[Token(Token = "0x6000A64")]
	[Address(RVA = "0xC6095C", Offset = "0xC6095C", VA = "0xC6095C")]
	private void OnDestroy()
	{
	}
}
[Token(Token = "0x20001B4")]
public enum Languages
{
	[Token(Token = "0x4000B83")]
	English,
	[Token(Token = "0x4000B84")]
	French,
	[Token(Token = "0x4000B85")]
	Chinese,
	[Token(Token = "0x4000B86")]
	Japanese,
	[Token(Token = "0x4000B87")]
	Korean,
	[Token(Token = "0x4000B88")]
	TraditionalChinese,
	[Token(Token = "0x4000B89")]
	Spanish,
	[Token(Token = "0x4000B8A")]
	Russian
}
[Serializable]
[Token(Token = "0x20001B5")]
public class LanguageSize
{
	[Token(Token = "0x4000B8B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public string language;

	[Token(Token = "0x4000B8C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public float maxSize;

	[Token(Token = "0x4000B8D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int[] charThreshold;

	[Token(Token = "0x4000B8E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float[] sizes;

	[Token(Token = "0x6000A65")]
	[Address(RVA = "0xC7DB9C", Offset = "0xC7DB9C", VA = "0xC7DB9C")]
	public LanguageSize()
	{
	}

	[Token(Token = "0x6000A66")]
	[Address(RVA = "0xC7DBB0", Offset = "0xC7DBB0", VA = "0xC7DBB0")]
	public float getSize(int charNb)
	{
		return default(float);
	}
}
[Serializable]
[Token(Token = "0x20001B6")]
public class FallBackFonts
{
	[Token(Token = "0x4000B8F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public string language;

	[Token(Token = "0x4000B90")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public TMP_FontAsset[] fonts;

	[Token(Token = "0x6000A67")]
	[Address(RVA = "0xC555F4", Offset = "0xC555F4", VA = "0xC555F4")]
	public FallBackFonts()
	{
	}

	[Token(Token = "0x6000A68")]
	[Address(RVA = "0xC555FC", Offset = "0xC555FC", VA = "0xC555FC")]
	public void Apply(TMP_FontAsset[] _fonts)
	{
	}
}
[Token(Token = "0x20001B7")]
public class GameTextManager : MonoBehaviour
{
	[Token(Token = "0x200034C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1F82C4", Offset = "0x1F82C4")]
	private sealed class <DisplayTextCoroutine>c__Iterator0 : IEnumerator, IDisposable, IEnumerator<object>
	{
		[Token(Token = "0x4001368")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal string <displayedString>__0;

		[Token(Token = "0x4001369")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		internal int <i>__1;

		[Token(Token = "0x400136A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal string str;

		[Token(Token = "0x400136B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		internal float <modifier>__2;

		[Token(Token = "0x400136C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal TextMeshProUGUI textComponent;

		[Token(Token = "0x400136D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		internal float delay;

		[Token(Token = "0x400136E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal object $current;

		[Token(Token = "0x400136F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		internal bool $disposing;

		[Token(Token = "0x4001370")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		internal int $PC;

		[Token(Token = "0x170002F5")]
		private object System.Collections.Generic.IEnumerator<object>.Current
		{
			[Token(Token = "0x60018E9")]
			[Address(RVA = "0xC6317C", Offset = "0xC6317C", VA = "0xC6317C", Slot = "8")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002F6")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60018EA")]
			[Address(RVA = "0xC63184", Offset = "0xC63184", VA = "0xC63184", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60018E7")]
		[Address(RVA = "0xC62EE4", Offset = "0xC62EE4", VA = "0xC62EE4")]
		[DebuggerHidden]
		public <DisplayTextCoroutine>c__Iterator0()
		{
		}

		[Token(Token = "0x60018E8")]
		[Address(RVA = "0xC62EEC", Offset = "0xC62EEC", VA = "0xC62EEC", Slot = "5")]
		public bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60018EB")]
		[Address(RVA = "0xC6318C", Offset = "0xC6318C", VA = "0xC6318C", Slot = "7")]
		[DebuggerHidden]
		public void Dispose()
		{
		}

		[Token(Token = "0x60018EC")]
		[Address(RVA = "0xC631A0", Offset = "0xC631A0", VA = "0xC631A0", Slot = "6")]
		[DebuggerHidden]
		public void Reset()
		{
		}
	}

	[Token(Token = "0x4000B91")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[HideInInspector]
	public static GameTextManager Instance;

	[Token(Token = "0x4000B92")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Languages currentLanguage;

	[Token(Token = "0x4000B93")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public LanguageSize currentLanguageSize;

	[Token(Token = "0x4000B94")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public TextAsset[] LanguageTabs;

	[Token(Token = "0x4000B95")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public LanguageSize[] LanguageSizes;

	[Token(Token = "0x4000B96")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Dictionary<string, Dictionary<string, string>> loadedTab;

	[Token(Token = "0x4000B97")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public UnityEvent LanguageChanged;

	[Token(Token = "0x4000B98")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public TMP_FontAsset[] baseFontAssets;

	[Token(Token = "0x4000B99")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public FallBackFonts[] FallbackFontAssets;

	[Token(Token = "0x4000B9A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private bool Initialized;

	[Token(Token = "0x6000A69")]
	[Address(RVA = "0xC60A24", Offset = "0xC60A24", VA = "0xC60A24")]
	public GameTextManager()
	{
	}

	[Token(Token = "0x6000A6A")]
	[Address(RVA = "0xC60A2C", Offset = "0xC60A2C", VA = "0xC60A2C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000A6B")]
	[Address(RVA = "0xC60CDC", Offset = "0xC60CDC", VA = "0xC60CDC")]
	public static bool IsSupportedByPlatform(Languages input)
	{
		return default(bool);
	}

	[Token(Token = "0x6000A6C")]
	[Address(RVA = "0xC60CE4", Offset = "0xC60CE4", VA = "0xC60CE4")]
	public static bool TryParse(string input, out Languages output)
	{
		return default(bool);
	}

	[Token(Token = "0x6000A6D")]
	[Address(RVA = "0xC61538", Offset = "0xC61538", VA = "0xC61538")]
	public void SetLanguage(Languages language)
	{
	}

	[Token(Token = "0x6000A6E")]
	[Address(RVA = "0xC61780", Offset = "0xC61780", VA = "0xC61780")]
	public Dictionary<string, Dictionary<string, string>> LoadLanguageTab(Languages language)
	{
		return null;
	}

	[Token(Token = "0x6000A6F")]
	[Address(RVA = "0xC61C88", Offset = "0xC61C88", VA = "0xC61C88")]
	private string FindInTab(string type, int simpleId)
	{
		return null;
	}

	[Token(Token = "0x6000A70")]
	[Address(RVA = "0xC61CC4", Offset = "0xC61CC4", VA = "0xC61CC4")]
	private string FindInTab(string type, string id)
	{
		return null;
	}

	[Token(Token = "0x6000A71")]
	[Address(RVA = "0xC61D9C", Offset = "0xC61D9C", VA = "0xC61D9C")]
	public string GetText(string type, int id)
	{
		return null;
	}

	[Token(Token = "0x6000A72")]
	[Address(RVA = "0xC4BFE0", Offset = "0xC4BFE0", VA = "0xC4BFE0")]
	public string GetText(string type, int id, params object[] values)
	{
		return null;
	}

	[Token(Token = "0x6000A73")]
	[Address(RVA = "0xC55FC8", Offset = "0xC55FC8", VA = "0xC55FC8")]
	public string GetAnnounce(int id)
	{
		return null;
	}

	[Token(Token = "0x6000A74")]
	[Address(RVA = "0xC56074", Offset = "0xC56074", VA = "0xC56074")]
	public string GetAnnounce(int id, params object[] values)
	{
		return null;
	}

	[Token(Token = "0x6000A75")]
	[Address(RVA = "0xC620E4", Offset = "0xC620E4", VA = "0xC620E4")]
	public string GetTutorial(int id)
	{
		return null;
	}

	[Token(Token = "0x6000A76")]
	[Address(RVA = "0xC623E8", Offset = "0xC623E8", VA = "0xC623E8")]
	public string GetTutorial(int id, params object[] values)
	{
		return null;
	}

	[Token(Token = "0x6000A77")]
	[Address(RVA = "0xC624E0", Offset = "0xC624E0", VA = "0xC624E0")]
	public string GetHint(int id)
	{
		return null;
	}

	[Token(Token = "0x6000A78")]
	[Address(RVA = "0xC6258C", Offset = "0xC6258C", VA = "0xC6258C")]
	public string GetHint(int id, params object[] values)
	{
		return null;
	}

	[Token(Token = "0x6000A79")]
	[Address(RVA = "0xC4BF40", Offset = "0xC4BF40", VA = "0xC4BF40")]
	public string GetObjectName(int id)
	{
		return null;
	}

	[Token(Token = "0x6000A7A")]
	[Address(RVA = "0xC62680", Offset = "0xC62680", VA = "0xC62680")]
	public string GetObjectDescription(int id)
	{
		return null;
	}

	[Token(Token = "0x6000A7B")]
	[Address(RVA = "0xC62720", Offset = "0xC62720", VA = "0xC62720")]
	public string GetJobName(int prisonID, int jobID)
	{
		return null;
	}

	[Token(Token = "0x6000A7C")]
	[Address(RVA = "0xC4AE00", Offset = "0xC4AE00", VA = "0xC4AE00")]
	public string GetTabletMenuEntry(int id)
	{
		return null;
	}

	[Token(Token = "0x6000A7D")]
	[Address(RVA = "0xC62824", Offset = "0xC62824", VA = "0xC62824")]
	public string GetGenerique(int id)
	{
		return null;
	}

	[Token(Token = "0x6000A7E")]
	[Address(RVA = "0xC628C4", Offset = "0xC628C4", VA = "0xC628C4")]
	public void GetAllNames(ref string[] firstNames, ref string[] akas, ref string[] lastNames)
	{
	}

	[Token(Token = "0x6000A7F")]
	[Address(RVA = "0xC56CC8", Offset = "0xC56CC8", VA = "0xC56CC8")]
	public Tween DisplayText(string str, TextMeshProUGUI textComponent, float delay = 1.5f)
	{
		return null;
	}

	[Token(Token = "0x6000A80")]
	[Address(RVA = "0xC62E2C", Offset = "0xC62E2C", VA = "0xC62E2C")]
	[DebuggerHidden]
	public IEnumerator DisplayTextCoroutine(string str, TextMeshProUGUI textComponent, float delay = 0.05f)
	{
		return null;
	}

	[Token(Token = "0x6000A81")]
	[Address(RVA = "0xC61E78", Offset = "0xC61E78", VA = "0xC61E78")]
	private string EnrichText(string str)
	{
		return null;
	}

	[Token(Token = "0x6000A82")]
	[Address(RVA = "0xC62194", Offset = "0xC62194", VA = "0xC62194")]
	private string AddQuotes(string str)
	{
		return null;
	}
}
[Token(Token = "0x20001B8")]
public class GameTextSwitch : MonoBehaviour
{
	[Token(Token = "0x4000B9B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public GameTextLink[] textLink;

	[Token(Token = "0x4000B9C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private int _index;

	[Token(Token = "0x6000A83")]
	[Address(RVA = "0xC63224", Offset = "0xC63224", VA = "0xC63224")]
	public GameTextSwitch()
	{
	}

	[Token(Token = "0x6000A84")]
	[Address(RVA = "0xC6322C", Offset = "0xC6322C", VA = "0xC6322C")]
	private void SwitchText()
	{
	}
}
[Token(Token = "0x20001B9")]
public class GameTextSwitchEmpty : MonoBehaviour
{
	[Token(Token = "0x6000A85")]
	[Address(RVA = "0xC632A8", Offset = "0xC632A8", VA = "0xC632A8")]
	public GameTextSwitchEmpty()
	{
	}

	[Token(Token = "0x6000A86")]
	[Address(RVA = "0xC632B0", Offset = "0xC632B0", VA = "0xC632B0")]
	private void SwitchText()
	{
	}
}
[Token(Token = "0x20001BA")]
public class ImageSwitch : MonoBehaviour
{
	[Token(Token = "0x4000B9D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Sprite[] sprites;

	[Token(Token = "0x4000B9E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private Image rend;

	[Token(Token = "0x4000B9F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private int lastLanguage;

	[Token(Token = "0x6000A87")]
	[Address(RVA = "0xC70F20", Offset = "0xC70F20", VA = "0xC70F20")]
	public ImageSwitch()
	{
	}

	[Token(Token = "0x6000A88")]
	[Address(RVA = "0xC70F28", Offset = "0xC70F28", VA = "0xC70F28")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000A89")]
	[Address(RVA = "0xC70F90", Offset = "0xC70F90", VA = "0xC70F90")]
	private void OnEnable()
	{
	}
}
[Token(Token = "0x20001BB")]
public class ParticuleSwitch : MonoBehaviour
{
	[Token(Token = "0x4000BA0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public ParticleSystemRenderer particle;

	[Token(Token = "0x4000BA1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Material[] materials;

	[Token(Token = "0x4000BA2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private int lastLanguage;

	[Token(Token = "0x6000A8A")]
	[Address(RVA = "0x25CD3C", Offset = "0x25CD3C", VA = "0x25CD3C")]
	public ParticuleSwitch()
	{
	}

	[Token(Token = "0x6000A8B")]
	[Address(RVA = "0x25CD44", Offset = "0x25CD44", VA = "0x25CD44")]
	private void OnEnable()
	{
	}
}
[Token(Token = "0x20001BC")]
public class TextToTextMesh : MonoBehaviour
{
	[Token(Token = "0x4000BA3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public TMP_FontAsset[] assets;

	[Token(Token = "0x4000BA4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float fontSize;

	[Token(Token = "0x4000BA5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float brightness;

	[Token(Token = "0x4000BA6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TextAlignmentOptions options;

	[Token(Token = "0x6000A8C")]
	[Address(RVA = "0xCBE5BC", Offset = "0xCBE5BC", VA = "0xCBE5BC")]
	public TextToTextMesh()
	{
	}

	[Token(Token = "0x6000A8D")]
	[Address(RVA = "0xCBE5D0", Offset = "0xCBE5D0", VA = "0xCBE5D0")]
	public void changeTextInTextMesh()
	{
	}

	[Token(Token = "0x6000A8E")]
	[Address(RVA = "0xCBEC28", Offset = "0xCBEC28", VA = "0xCBEC28")]
	public void changeTextMeshInTextMeshGUI()
	{
	}
}
[Token(Token = "0x20001BD")]
public class TextureSwitch : MonoBehaviour
{
	[Token(Token = "0x4000BA7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Texture2D[] textures;

	[Token(Token = "0x4000BA8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private MeshRenderer rend;

	[Token(Token = "0x4000BA9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private int lastLanguage;

	[Token(Token = "0x6000A8F")]
	[Address(RVA = "0xCBF088", Offset = "0xCBF088", VA = "0xCBF088")]
	public TextureSwitch()
	{
	}

	[Token(Token = "0x6000A90")]
	[Address(RVA = "0xCBF090", Offset = "0xCBF090", VA = "0xCBF090")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000A91")]
	[Address(RVA = "0xCBF0F8", Offset = "0xCBF0F8", VA = "0xCBF0F8")]
	private void OnEnable()
	{
	}
}
[Token(Token = "0x20001BE")]
public class GameobjectsToDestroy
{
	[Token(Token = "0x4000BAA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public GameObject ObjectstoDestroy;

	[Token(Token = "0x4000BAB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public float timeLeft;

	[Token(Token = "0x6000A92")]
	[Address(RVA = "0xC578E0", Offset = "0xC578E0", VA = "0xC578E0")]
	public GameobjectsToDestroy()
	{
	}
}
[Token(Token = "0x20001BF")]
public class TheAbsoluteDestroyer : MonoBehaviour
{
	[Token(Token = "0x4000BAC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public float destroyTime;

	[Token(Token = "0x4000BAD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private List<GameobjectsToDestroy> gameObjectsToDestroyList;

	[Token(Token = "0x6000A93")]
	[Address(RVA = "0xCBF220", Offset = "0xCBF220", VA = "0xCBF220")]
	public TheAbsoluteDestroyer()
	{
	}

	[Token(Token = "0x6000A94")]
	[Address(RVA = "0xCBF2AC", Offset = "0xCBF2AC", VA = "0xCBF2AC")]
	private void OnTriggerEnter(Collider col)
	{
	}

	[Token(Token = "0x6000A95")]
	[Address(RVA = "0xCBF40C", Offset = "0xCBF40C", VA = "0xCBF40C")]
	private void OnTriggerExit(Collider col)
	{
	}

	[Token(Token = "0x6000A96")]
	[Address(RVA = "0xCBF5EC", Offset = "0xCBF5EC", VA = "0xCBF5EC")]
	private void Update()
	{
	}
}
[Token(Token = "0x20001C0")]
public class Tools
{
	[Token(Token = "0x6000A97")]
	[Address(RVA = "0xCBFE5C", Offset = "0xCBFE5C", VA = "0xCBFE5C")]
	public Tools()
	{
	}

	[Token(Token = "0x6000A98")]
	public static List<T> DeepClone<T>(List<T> list)
	{
		return null;
	}
}
[Token(Token = "0x20001C1")]
public class TriggerBoxScript : MonoBehaviour
{
	[Token(Token = "0x4000BAE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	[HideInInspector]
	public BoxScript bs;

	[Token(Token = "0x4000BAF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[HideInInspector]
	public NVRInteractableItem Obj;

	[Token(Token = "0x4000BB0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private HighlightRecipe hl;

	[Token(Token = "0x4000BB1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Rigidbody rb;

	[Token(Token = "0x4000BB2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private BoxCollider boxCollider;

	[Token(Token = "0x6000A99")]
	[Address(RVA = "0xCCDD10", Offset = "0xCCDD10", VA = "0xCCDD10")]
	public TriggerBoxScript()
	{
	}

	[Token(Token = "0x6000A9A")]
	[Address(RVA = "0xCCDD18", Offset = "0xCCDD18", VA = "0xCCDD18")]
	public void Init()
	{
	}

	[Token(Token = "0x6000A9B")]
	[Address(RVA = "0xCCDF10", Offset = "0xCCDF10", VA = "0xCCDF10")]
	private void Update()
	{
	}

	[Token(Token = "0x6000A9C")]
	[Address(RVA = "0xCCDF94", Offset = "0xCCDF94", VA = "0xCCDF94")]
	private void OnTriggerEnter(Collider col)
	{
	}
}
[Token(Token = "0x20001C2")]
public class TutorialLoader : Ressource
{
	[Token(Token = "0x4000BB3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float timeToShake;

	[Token(Token = "0x4000BB4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public GameObject Particle;

	[Token(Token = "0x4000BB5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public string tutorialToLoad;

	[Token(Token = "0x4000BB6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private Image img;

	[Token(Token = "0x4000BB7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private GameObject sp;

	[Token(Token = "0x4000BB8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private Vector3 BaseSpPos;

	[Token(Token = "0x4000BB9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private NVRInteractableItem obj;

	[Token(Token = "0x4000BBA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private float time;

	[Token(Token = "0x4000BBB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private uint openingSound;

	[Token(Token = "0x6000A9D")]
	[Address(RVA = "0xCCEAD0", Offset = "0xCCEAD0", VA = "0xCCEAD0")]
	public TutorialLoader()
	{
	}

	[Token(Token = "0x6000A9E")]
	[Address(RVA = "0xCCEAD8", Offset = "0xCCEAD8", VA = "0xCCEAD8", Slot = "6")]
	protected override void Start()
	{
	}

	[Token(Token = "0x6000A9F")]
	[Address(RVA = "0xCCEC38", Offset = "0xCCEC38", VA = "0xCCEC38")]
	public void setLoader(string tutorial)
	{
	}

	[Token(Token = "0x6000AA0")]
	[Address(RVA = "0xCCEDB8", Offset = "0xCCEDB8", VA = "0xCCEDB8")]
	public void refreshHint()
	{
	}

	[Token(Token = "0x6000AA1")]
	[Address(RVA = "0xCCEDE8", Offset = "0xCCEDE8", VA = "0xCCEDE8", Slot = "4")]
	public override void Reset()
	{
	}

	[Token(Token = "0x6000AA2")]
	[Address(RVA = "0xCCEE30", Offset = "0xCCEE30", VA = "0xCCEE30", Slot = "7")]
	protected override void Update()
	{
	}
}
[Token(Token = "0x20001C3")]
public class Video : MonoBehaviour
{
	[Token(Token = "0x200034D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1F8364", Offset = "0x1F8364")]
	private sealed class <CoroutinePreload>c__Iterator0 : IEnumerator, IDisposable, IEnumerator<object>
	{
		[Token(Token = "0x4001371")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal Video $this;

		[Token(Token = "0x4001372")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		internal object $current;

		[Token(Token = "0x4001373")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal bool $disposing;

		[Token(Token = "0x4001374")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		internal int $PC;

		[Token(Token = "0x170002F7")]
		private object System.Collections.Generic.IEnumerator<object>.Current
		{
			[Token(Token = "0x60018EF")]
			[Address(RVA = "0x41ABA8", Offset = "0x41ABA8", VA = "0x41ABA8", Slot = "8")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002F8")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60018F0")]
			[Address(RVA = "0x41ABB0", Offset = "0x41ABB0", VA = "0x41ABB0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60018ED")]
		[Address(RVA = "0x41A3B8", Offset = "0x41A3B8", VA = "0x41A3B8")]
		[DebuggerHidden]
		public <CoroutinePreload>c__Iterator0()
		{
		}

		[Token(Token = "0x60018EE")]
		[Address(RVA = "0x41AA10", Offset = "0x41AA10", VA = "0x41AA10", Slot = "5")]
		public bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60018F1")]
		[Address(RVA = "0x41ABB8", Offset = "0x41ABB8", VA = "0x41ABB8", Slot = "7")]
		[DebuggerHidden]
		public void Dispose()
		{
		}

		[Token(Token = "0x60018F2")]
		[Address(RVA = "0x41ABCC", Offset = "0x41ABCC", VA = "0x41ABCC", Slot = "6")]
		[DebuggerHidden]
		public void Reset()
		{
		}
	}

	[Token(Token = "0x200034E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1F83C4", Offset = "0x1F83C4")]
	private sealed class <CoroutinePlay>c__Iterator1 : IEnumerator, IDisposable, IEnumerator<object>
	{
		[Token(Token = "0x4001375")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal Video $this;

		[Token(Token = "0x4001376")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		internal object $current;

		[Token(Token = "0x4001377")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal bool $disposing;

		[Token(Token = "0x4001378")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		internal int $PC;

		[Token(Token = "0x170002F9")]
		private object System.Collections.Generic.IEnumerator<object>.Current
		{
			[Token(Token = "0x60018F5")]
			[Address(RVA = "0x41A968", Offset = "0x41A968", VA = "0x41A968", Slot = "8")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002FA")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60018F6")]
			[Address(RVA = "0x41A970", Offset = "0x41A970", VA = "0x41A970", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60018F3")]
		[Address(RVA = "0x41A490", Offset = "0x41A490", VA = "0x41A490")]
		[DebuggerHidden]
		public <CoroutinePlay>c__Iterator1()
		{
		}

		[Token(Token = "0x60018F4")]
		[Address(RVA = "0x41A7A0", Offset = "0x41A7A0", VA = "0x41A7A0", Slot = "5")]
		public bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60018F7")]
		[Address(RVA = "0x41A978", Offset = "0x41A978", VA = "0x41A978", Slot = "7")]
		[DebuggerHidden]
		public void Dispose()
		{
		}

		[Token(Token = "0x60018F8")]
		[Address(RVA = "0x41A98C", Offset = "0x41A98C", VA = "0x41A98C", Slot = "6")]
		[DebuggerHidden]
		public void Reset()
		{
		}
	}

	[Token(Token = "0x4000BBC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Vector3 hidden;

	[Token(Token = "0x4000BBD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private static Vector3 visible;

	[Token(Token = "0x4000BBE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public bool preparing;

	[Token(Token = "0x4000BBF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD")]
	public bool prepared;

	[Token(Token = "0x4000BC0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private VideoPlayer video;

	[Token(Token = "0x4000BC1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static Video preloading;

	[Token(Token = "0x6000AA3")]
	[Address(RVA = "0x419F04", Offset = "0x419F04", VA = "0x419F04")]
	public Video()
	{
	}

	[Token(Token = "0x6000AA4")]
	[Address(RVA = "0x419F0C", Offset = "0x419F0C", VA = "0x419F0C")]
	public void Prepare(string path)
	{
	}

	[Token(Token = "0x6000AA5")]
	[Address(RVA = "0x41A29C", Offset = "0x41A29C", VA = "0x41A29C")]
	private void Video_prepareCompleted(VideoPlayer source)
	{
	}

	[Token(Token = "0x6000AA6")]
	[Address(RVA = "0x41A254", Offset = "0x41A254", VA = "0x41A254")]
	public void Preload()
	{
	}

	[Token(Token = "0x6000AA7")]
	[Address(RVA = "0x41A338", Offset = "0x41A338", VA = "0x41A338")]
	[DebuggerHidden]
	private IEnumerator CoroutinePreload()
	{
		return null;
	}

	[Token(Token = "0x6000AA8")]
	[Address(RVA = "0x41A3C0", Offset = "0x41A3C0", VA = "0x41A3C0")]
	public void Loop()
	{
	}

	[Token(Token = "0x6000AA9")]
	[Address(RVA = "0x41A3EC", Offset = "0x41A3EC", VA = "0x41A3EC")]
	public void Play()
	{
	}

	[Token(Token = "0x6000AAA")]
	[Address(RVA = "0x41A410", Offset = "0x41A410", VA = "0x41A410")]
	[DebuggerHidden]
	private IEnumerator CoroutinePlay()
	{
		return null;
	}

	[Token(Token = "0x6000AAB")]
	[Address(RVA = "0x41A498", Offset = "0x41A498", VA = "0x41A498")]
	public void Pause()
	{
	}

	[Token(Token = "0x6000AAC")]
	[Address(RVA = "0x41A584", Offset = "0x41A584", VA = "0x41A584")]
	public void Unpause()
	{
	}

	[Token(Token = "0x6000AAD")]
	[Address(RVA = "0x41A674", Offset = "0x41A674", VA = "0x41A674")]
	public void PauseQuest()
	{
	}

	[Token(Token = "0x6000AAE")]
	[Address(RVA = "0x41A69C", Offset = "0x41A69C", VA = "0x41A69C")]
	public void UnpauseQuest()
	{
	}
}
[Token(Token = "0x20001C4")]
public enum Arrowfeedback
{
	[Token(Token = "0x4000BC3")]
	None,
	[Token(Token = "0x4000BC4")]
	Clock,
	[Token(Token = "0x4000BC5")]
	Bobby
}
[Token(Token = "0x20001C5")]
public class AnnouncerVisual : SpawnableObject
{
	[Token(Token = "0x4000BC6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Arrowfeedback feedback;

	[Token(Token = "0x4000BC7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private Transform _fbPos;

	[Token(Token = "0x4000BC8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private BillboardUI _billboard;

	[Token(Token = "0x6000AB0")]
	[Address(RVA = "0xCE2C1C", Offset = "0xCE2C1C", VA = "0xCE2C1C")]
	public AnnouncerVisual()
	{
	}

	[Token(Token = "0x6000AB1")]
	[Address(RVA = "0xCE2C24", Offset = "0xCE2C24", VA = "0xCE2C24", Slot = "4")]
	public override void Reset()
	{
	}

	[Token(Token = "0x6000AB2")]
	[Address(RVA = "0xCE2D74", Offset = "0xCE2D74", VA = "0xCE2D74")]
	private void Start()
	{
	}

	[Token(Token = "0x6000AB3")]
	[Address(RVA = "0xCE2C28", Offset = "0xCE2C28", VA = "0xCE2C28")]
	private void Initialize()
	{
	}

	[Token(Token = "0x6000AB4")]
	[Address(RVA = "0xCE2D78", Offset = "0xCE2D78", VA = "0xCE2D78", Slot = "5")]
	public override void ShutDown()
	{
	}
}
[Token(Token = "0x20001C6")]
public class BillboardUI : SpawnableObject
{
	[Token(Token = "0x4000BC9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Transform target;

	[Token(Token = "0x4000BCA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private Transform _head;

	[Token(Token = "0x4000BCB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Tween tween;

	[Token(Token = "0x4000BCC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private Vector3 baseScale;

	[Token(Token = "0x6000AB5")]
	[Address(RVA = "0xCE86E4", Offset = "0xCE86E4", VA = "0xCE86E4")]
	public BillboardUI()
	{
	}

	[Token(Token = "0x6000AB6")]
	[Address(RVA = "0xCE86EC", Offset = "0xCE86EC", VA = "0xCE86EC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000AB7")]
	[Address(RVA = "0xCE8844", Offset = "0xCE8844", VA = "0xCE8844", Slot = "4")]
	public override void Reset()
	{
	}

	[Token(Token = "0x6000AB8")]
	[Address(RVA = "0xCE2E38", Offset = "0xCE2E38", VA = "0xCE2E38")]
	public void Kill()
	{
	}

	[Token(Token = "0x6000AB9")]
	[Address(RVA = "0xCE8A14", Offset = "0xCE8A14", VA = "0xCE8A14")]
	public void Delete()
	{
	}

	[Token(Token = "0x6000ABA")]
	[Address(RVA = "0xCE8A3C", Offset = "0xCE8A3C", VA = "0xCE8A3C")]
	private void Update()
	{
	}
}
[Token(Token = "0x20001C7")]
public class ButtonScript : MonoBehaviour
{
	[Token(Token = "0x20001C8")]
	public enum OnButtonClick
	{
		[Token(Token = "0x4000BE2")]
		dealClosed,
		[Token(Token = "0x4000BE3")]
		dealRessourcesWindow,
		[Token(Token = "0x4000BE4")]
		dealToolsWindow,
		[Token(Token = "0x4000BE5")]
		dealRootWindow,
		[Token(Token = "0x4000BE6")]
		dealFurnitureWindow,
		[Token(Token = "0x4000BE7")]
		dealSpecialWindow,
		[Token(Token = "0x4000BE8")]
		dealJobWindow,
		[Token(Token = "0x4000BE9")]
		AddOne,
		[Token(Token = "0x4000BEA")]
		RemoveOne,
		[Token(Token = "0x4000BEB")]
		balanceTheDeal,
		[Token(Token = "0x4000BEC")]
		completeJob,
		[Token(Token = "0x4000BED")]
		endLevel,
		[Token(Token = "0x4000BEE")]
		okAnnouncer
	}

	[Token(Token = "0x200034F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1F8434", Offset = "0x1F8434")]
	private sealed class <Holding>c__Iterator0 : IEnumerator, IDisposable, IEnumerator<object>
	{
		[Token(Token = "0x4001379")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal OnButtonClick c;

		[Token(Token = "0x400137A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		internal ButtonScript $this;

		[Token(Token = "0x400137B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal object $current;

		[Token(Token = "0x400137C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		internal bool $disposing;

		[Token(Token = "0x400137D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal int $PC;

		[Token(Token = "0x170002FB")]
		private object System.Collections.Generic.IEnumerator<object>.Current
		{
			[Token(Token = "0x60018FB")]
			[Address(RVA = "0xCEF8D0", Offset = "0xCEF8D0", VA = "0xCEF8D0", Slot = "8")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002FC")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60018FC")]
			[Address(RVA = "0xCEF8D8", Offset = "0xCEF8D8", VA = "0xCEF8D8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60018F9")]
		[Address(RVA = "0xCEF638", Offset = "0xCEF638", VA = "0xCEF638")]
		[DebuggerHidden]
		public <Holding>c__Iterator0()
		{
		}

		[Token(Token = "0x60018FA")]
		[Address(RVA = "0xCEF640", Offset = "0xCEF640", VA = "0xCEF640", Slot = "5")]
		public bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60018FD")]
		[Address(RVA = "0xCEF8E0", Offset = "0xCEF8E0", VA = "0xCEF8E0", Slot = "7")]
		[DebuggerHidden]
		public void Dispose()
		{
		}

		[Token(Token = "0x60018FE")]
		[Address(RVA = "0xCEF8F4", Offset = "0xCEF8F4", VA = "0xCEF8F4", Slot = "6")]
		[DebuggerHidden]
		public void Reset()
		{
		}
	}

	[Token(Token = "0x4000BCD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public OnButtonClick onButtonClick;

	[Token(Token = "0x4000BCE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int intValue;

	[Token(Token = "0x4000BCF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	internal SpawnableObject[] objectsToComplete;

	[Token(Token = "0x4000BD0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Color couleurDeBase;

	[Token(Token = "0x4000BD1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Color couleurHover;

	[Token(Token = "0x4000BD2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Color couleurButtonClicked;

	[Token(Token = "0x4000BD3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Color pinnedColorOnly;

	[Token(Token = "0x4000BD4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Color sellColorTampon;

	[Token(Token = "0x4000BD5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private bool isHovering;

	[Token(Token = "0x4000BD6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private ButtonAnimator banim;

	[Token(Token = "0x4000BD7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private TraderMaster tablet;

	[Token(Token = "0x4000BD8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private BuyButtonWrapper buyButtonScript;

	[Token(Token = "0x4000BD9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Image leBoutonColoring;

	[Token(Token = "0x4000BDA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private Coroutine holdCoroutine;

	[Token(Token = "0x4000BDB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private bool active;

	[Token(Token = "0x4000BDC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x81")]
	private bool hold;

	[Token(Token = "0x4000BDD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private float delayMeasure;

	[Token(Token = "0x4000BDE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public float delaiHold;

	[Token(Token = "0x4000BDF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private uint AudioOver;

	[Token(Token = "0x4000BE0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private uint AudioClick;

	[Token(Token = "0x6000ABB")]
	[Address(RVA = "0xCEE658", Offset = "0xCEE658", VA = "0xCEE658")]
	public ButtonScript()
	{
	}

	[Token(Token = "0x6000ABC")]
	[Address(RVA = "0xCEE6A8", Offset = "0xCEE6A8", VA = "0xCEE6A8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000ABD")]
	[Address(RVA = "0xCEEA10", Offset = "0xCEEA10", VA = "0xCEEA10")]
	private void Update()
	{
	}

	[Token(Token = "0x6000ABE")]
	[Address(RVA = "0xCEEA94", Offset = "0xCEEA94", VA = "0xCEEA94")]
	private void OnTriggerEnter(Collider col)
	{
	}

	[Token(Token = "0x6000ABF")]
	[Address(RVA = "0xCEEDD4", Offset = "0xCEEDD4", VA = "0xCEEDD4")]
	private void OnTriggerStay(Collider col)
	{
	}

	[Token(Token = "0x6000AC0")]
	[Address(RVA = "0xCEF230", Offset = "0xCEF230", VA = "0xCEF230")]
	private void OnTriggerExit(Collider col)
	{
	}

	[Token(Token = "0x6000AC1")]
	[Address(RVA = "0xCEEF48", Offset = "0xCEEF48", VA = "0xCEEF48")]
	private void Transition()
	{
	}

	[Token(Token = "0x6000AC2")]
	[Address(RVA = "0xCEF410", Offset = "0xCEF410", VA = "0xCEF410")]
	public void refreshButtonUI()
	{
	}

	[Token(Token = "0x6000AC3")]
	[Address(RVA = "0xCEF378", Offset = "0xCEF378", VA = "0xCEF378")]
	[DebuggerHidden]
	private IEnumerator Holding(OnButtonClick c)
	{
		return null;
	}
}
[Token(Token = "0x20001C9")]
public enum DealerListSignature
{
	[Token(Token = "0x4000BF0")]
	ressources,
	[Token(Token = "0x4000BF1")]
	tools,
	[Token(Token = "0x4000BF2")]
	furniture
}
[Token(Token = "0x20001CA")]
public class BuyButtonWrapper : SpawnableObject
{
	[Token(Token = "0x4000BF3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public bool detailedWrapper;

	[Token(Token = "0x4000BF4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	[HideInInspector]
	public GameObject dealObject;

	[Token(Token = "0x4000BF5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[HideInInspector]
	public int amountInStore;

	[Token(Token = "0x4000BF6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[HideInInspector]
	public int amountWanted;

	[Token(Token = "0x4000BF7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[HideInInspector]
	public int cigaretteValue;

	[Token(Token = "0x4000BF8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[HideInInspector]
	public int percentageValue;

	[Token(Token = "0x4000BF9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[HideInInspector]
	public int dataRef;

	[Token(Token = "0x4000BFA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[HideInInspector]
	public DealerListSignature type;

	[Token(Token = "0x4000BFB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Ressource ressourceScript;

	[Token(Token = "0x4000BFC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[HideInInspector]
	public Sprite iconToDisplay;

	[Token(Token = "0x4000BFD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Image iconImage;

	[Token(Token = "0x4000BFE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private TextMeshProUGUI textDisplay;

	[Token(Token = "0x4000BFF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private TextMeshProUGUI textDescriptionDisplay;

	[Token(Token = "0x4000C00")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private TextMeshProUGUI textNumberStore;

	[Token(Token = "0x4000C01")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private TextMeshProUGUI textNumberWanted;

	[Token(Token = "0x4000C02")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private TextMeshProUGUI priceAmount;

	[Token(Token = "0x4000C03")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private TextMeshProUGUI pricePercentage;

	[Token(Token = "0x4000C04")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private Image buyArrowImage;

	[Token(Token = "0x4000C05")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Image sellArrowImage;

	[Token(Token = "0x4000C06")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private Animator priceAnim;

	[Token(Token = "0x4000C07")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private bool refValid;

	[Token(Token = "0x4000C08")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private Image Black;

	[Token(Token = "0x4000C09")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Image Soldout;

	[Token(Token = "0x170000E6")]
	private TabReader reader
	{
		[Token(Token = "0x6000AC5")]
		[Address(RVA = "0xCEF980", Offset = "0xCEF980", VA = "0xCEF980")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000AC4")]
	[Address(RVA = "0xCEF978", Offset = "0xCEF978", VA = "0xCEF978")]
	public BuyButtonWrapper()
	{
	}

	[Token(Token = "0x6000AC6")]
	[Address(RVA = "0xCEF9E4", Offset = "0xCEF9E4", VA = "0xCEF9E4")]
	public void SimpleRefreshUI()
	{
	}

	[Token(Token = "0x6000AC7")]
	[Address(RVA = "0xCF011C", Offset = "0xCF011C", VA = "0xCF011C")]
	public void RefreshUI()
	{
	}

	[Token(Token = "0x6000AC8")]
	[Address(RVA = "0xCE5680", Offset = "0xCE5680", VA = "0xCE5680")]
	public void AddOne()
	{
	}

	[Token(Token = "0x6000AC9")]
	[Address(RVA = "0xCE59C0", Offset = "0xCE59C0", VA = "0xCE59C0")]
	public void RemoveOne()
	{
	}

	[Token(Token = "0x6000ACA")]
	[Address(RVA = "0xCEFCD4", Offset = "0xCEFCD4", VA = "0xCEFCD4")]
	public void CheckButtonColors()
	{
	}

	[Token(Token = "0x6000ACB")]
	[Address(RVA = "0xCF09BC", Offset = "0xCF09BC", VA = "0xCF09BC")]
	private void GetReferences()
	{
	}

	[Token(Token = "0x6000ACC")]
	[Address(RVA = "0xCF0FEC", Offset = "0xCF0FEC", VA = "0xCF0FEC")]
	internal void AnimItUp()
	{
	}

	[Token(Token = "0x6000ACD")]
	[Address(RVA = "0xCF14C0", Offset = "0xCF14C0", VA = "0xCF14C0")]
	private void AnimDelay(string trigger)
	{
	}

	[Token(Token = "0x6000ACE")]
	[Address(RVA = "0xCEFC54", Offset = "0xCEFC54", VA = "0xCEFC54")]
	public List<BuyingData> GetList(DealerListSignature t)
	{
		return null;
	}
}
[Token(Token = "0x20001CB")]
public class CameraLookAt : MonoBehaviour
{
	[Token(Token = "0x2000350")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1F8524", Offset = "0x1F8524")]
	private sealed class <lifeOfText>c__Iterator0 : IEnumerator, IDisposable, IEnumerator<object>
	{
		[Token(Token = "0x400137E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal Color <c>__0;

		[Token(Token = "0x400137F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal float <f>__1;

		[Token(Token = "0x4001380")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		internal float <percente>__2;

		[Token(Token = "0x4001381")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal CameraLookAt $this;

		[Token(Token = "0x4001382")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		internal object $current;

		[Token(Token = "0x4001383")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		internal bool $disposing;

		[Token(Token = "0x4001384")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		internal int $PC;

		[Token(Token = "0x170002FD")]
		private object System.Collections.Generic.IEnumerator<object>.Current
		{
			[Token(Token = "0x6001901")]
			[Address(RVA = "0xCF2F14", Offset = "0xCF2F14", VA = "0xCF2F14", Slot = "8")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002FE")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001902")]
			[Address(RVA = "0xCF2F1C", Offset = "0xCF2F1C", VA = "0xCF2F1C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60018FF")]
		[Address(RVA = "0xCF2C24", Offset = "0xCF2C24", VA = "0xCF2C24")]
		[DebuggerHidden]
		public <lifeOfText>c__Iterator0()
		{
		}

		[Token(Token = "0x6001900")]
		[Address(RVA = "0xCF2C2C", Offset = "0xCF2C2C", VA = "0xCF2C2C", Slot = "5")]
		public bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001903")]
		[Address(RVA = "0xCF2F24", Offset = "0xCF2F24", VA = "0xCF2F24", Slot = "7")]
		[DebuggerHidden]
		public void Dispose()
		{
		}

		[Token(Token = "0x6001904")]
		[Address(RVA = "0xCF2F38", Offset = "0xCF2F38", VA = "0xCF2F38", Slot = "6")]
		[DebuggerHidden]
		public void Reset()
		{
		}
	}

	[Token(Token = "0x4000C0A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private GameObject cam;

	[Token(Token = "0x4000C0B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private GameObject textObj;

	[Token(Token = "0x4000C0C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private TextMeshProUGUI textScr;

	[Token(Token = "0x4000C0D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float Lifetime;

	[Token(Token = "0x4000C0E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public AnimationCurve Speed;

	[Token(Token = "0x4000C0F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float MaxHeight;

	[Token(Token = "0x4000C10")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public string Event;

	[Token(Token = "0x6000ACF")]
	[Address(RVA = "0xCF26D4", Offset = "0xCF26D4", VA = "0xCF26D4")]
	public CameraLookAt()
	{
	}

	[Token(Token = "0x6000AD0")]
	[Address(RVA = "0xCF26EC", Offset = "0xCF26EC", VA = "0xCF26EC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000AD1")]
	[Address(RVA = "0xCF2A6C", Offset = "0xCF2A6C", VA = "0xCF2A6C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000AD2")]
	[Address(RVA = "0xCE47A0", Offset = "0xCE47A0", VA = "0xCE47A0")]
	public void Numerique(string leMontant)
	{
	}

	[Token(Token = "0x6000AD3")]
	[Address(RVA = "0xCF29EC", Offset = "0xCF29EC", VA = "0xCF29EC")]
	[DebuggerHidden]
	private IEnumerator lifeOfText()
	{
		return null;
	}
}
[Token(Token = "0x20001CC")]
public class FouilleDisplayWrapper : SpawnableObject
{
	[Token(Token = "0x4000C11")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Image icon;

	[Token(Token = "0x4000C12")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public TextMeshProUGUI qtyText;

	[Token(Token = "0x6000AD4")]
	[Address(RVA = "0xC57730", Offset = "0xC57730", VA = "0xC57730")]
	public FouilleDisplayWrapper()
	{
	}

	[Token(Token = "0x6000AD5")]
	[Address(RVA = "0xC56FB8", Offset = "0xC56FB8", VA = "0xC56FB8")]
	public void Setup(string craftName, string qty)
	{
	}
}
[Token(Token = "0x20001CD")]
public enum HintAnim
{
	[Token(Token = "0x4000C14")]
	Grab,
	[Token(Token = "0x4000C15")]
	Thumb,
	[Token(Token = "0x4000C16")]
	GrabNThumb,
	[Token(Token = "0x4000C17")]
	Fist,
	[Token(Token = "0x4000C18")]
	Warning,
	[Token(Token = "0x4000C19")]
	Nothing
}
[Token(Token = "0x20001CE")]
public class Hint : MonoBehaviour
{
	[Token(Token = "0x4000C1A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	[HideInInspector]
	public NVRHand hand;

	[Token(Token = "0x4000C1B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[HideInInspector]
	public bool active;

	[Token(Token = "0x4000C1C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private Transform papa;

	[Token(Token = "0x4000C1D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Transform head;

	[Token(Token = "0x4000C1E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private Animator anim;

	[Token(Token = "0x4000C1F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private TextMeshProUGUI txtImg;

	[Token(Token = "0x4000C20")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private TextMeshProUGUI txtSolo;

	[Token(Token = "0x4000C21")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private TextMeshProUGUI txt;

	[Token(Token = "0x6000AD6")]
	[Address(RVA = "0xC6DB2C", Offset = "0xC6DB2C", VA = "0xC6DB2C")]
	public Hint()
	{
	}

	[Token(Token = "0x6000AD7")]
	[Address(RVA = "0xC6DB34", Offset = "0xC6DB34", VA = "0xC6DB34")]
	private void Start()
	{
	}

	[Token(Token = "0x6000AD8")]
	[Address(RVA = "0xC6DBEC", Offset = "0xC6DBEC", VA = "0xC6DBEC")]
	private void Init(Scene scene, LoadSceneMode mode)
	{
	}

	[Token(Token = "0x6000AD9")]
	[Address(RVA = "0xC6DEF4", Offset = "0xC6DEF4", VA = "0xC6DEF4")]
	public void setHint(string text, HintAnim type, bool overrideHint)
	{
	}

	[Token(Token = "0x6000ADA")]
	[Address(RVA = "0xC6E410", Offset = "0xC6E410", VA = "0xC6E410")]
	public void PopIn()
	{
	}

	[Token(Token = "0x6000ADB")]
	[Address(RVA = "0xC6DE24", Offset = "0xC6DE24", VA = "0xC6DE24")]
	public void PopOut()
	{
	}

	[Token(Token = "0x6000ADC")]
	[Address(RVA = "0xC6E328", Offset = "0xC6E328", VA = "0xC6E328")]
	private void ResetTexts()
	{
	}

	[Token(Token = "0x6000ADD")]
	[Address(RVA = "0xC6E4E4", Offset = "0xC6E4E4", VA = "0xC6E4E4")]
	private void Update()
	{
	}
}
[Token(Token = "0x20001CF")]
public class HintGenerator : MonoBehaviour
{
	[Token(Token = "0x2000351")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1F85B4", Offset = "0x1F85B4")]
	private sealed class <MaterialBlink>c__Iterator0 : IEnumerator, IDisposable, IEnumerator<object>
	{
		[Token(Token = "0x4001385")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal float <i>__1;

		[Token(Token = "0x4001386")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		internal MeshRenderer[] $locvar0;

		[Token(Token = "0x4001387")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal int $locvar1;

		[Token(Token = "0x4001388")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		internal float <i>__2;

		[Token(Token = "0x4001389")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal MeshRenderer[] $locvar2;

		[Token(Token = "0x400138A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		internal int $locvar3;

		[Token(Token = "0x400138B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal HintGenerator $this;

		[Token(Token = "0x400138C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		internal object $current;

		[Token(Token = "0x400138D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		internal bool $disposing;

		[Token(Token = "0x400138E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		internal int $PC;

		[Token(Token = "0x170002FF")]
		private object System.Collections.Generic.IEnumerator<object>.Current
		{
			[Token(Token = "0x6001907")]
			[Address(RVA = "0xC70CEC", Offset = "0xC70CEC", VA = "0xC70CEC", Slot = "8")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000300")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001908")]
			[Address(RVA = "0xC70CF4", Offset = "0xC70CF4", VA = "0xC70CF4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001905")]
		[Address(RVA = "0xC703F0", Offset = "0xC703F0", VA = "0xC703F0")]
		[DebuggerHidden]
		public <MaterialBlink>c__Iterator0()
		{
		}

		[Token(Token = "0x6001906")]
		[Address(RVA = "0xC7089C", Offset = "0xC7089C", VA = "0xC7089C", Slot = "5")]
		public bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001909")]
		[Address(RVA = "0xC70CFC", Offset = "0xC70CFC", VA = "0xC70CFC", Slot = "7")]
		[DebuggerHidden]
		public void Dispose()
		{
		}

		[Token(Token = "0x600190A")]
		[Address(RVA = "0xC70D10", Offset = "0xC70D10", VA = "0xC70D10", Slot = "6")]
		[DebuggerHidden]
		public void Reset()
		{
		}
	}

	[Token(Token = "0x4000C22")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Color blinkColor;

	[Token(Token = "0x4000C23")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float lerpMovement;

	[Token(Token = "0x4000C24")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject prefabTexte;

	[Token(Token = "0x4000C25")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private GameObject monTexteObj;

	[Token(Token = "0x4000C26")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Transform aimT;

	[Token(Token = "0x4000C27")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private GameObject endObj;

	[Token(Token = "0x4000C28")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Transform cameraT;

	[Token(Token = "0x4000C29")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private Transform[] controllerChildren;

	[Token(Token = "0x4000C2A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private TextMeshProUGUI tooltipText;

	[Token(Token = "0x4000C2B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private MeshRenderer[] meshs;

	[Token(Token = "0x4000C2C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private LineRenderer theLine;

	[Token(Token = "0x4000C2D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private Coroutine blinking;

	[Token(Token = "0x4000C2E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private NVRHand maMain;

	[Token(Token = "0x4000C2F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	internal bool isHinting;

	[Token(Token = "0x4000C30")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4D")]
	private bool goingAway;

	[Token(Token = "0x4000C31")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Color matColorlCache;

	[Token(Token = "0x4000C32")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Animator anim;

	[Token(Token = "0x4000C33")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private bool newHintComing;

	[Token(Token = "0x4000C34")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private string nextStringCache;

	[Token(Token = "0x4000C35")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private NVRButtons nextButtonCache;

	[Token(Token = "0x4000C36")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private string currentTooltip;

	[Token(Token = "0x4000C37")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static List<string> noShowList;

	[Token(Token = "0x6000ADE")]
	[Address(RVA = "0xC6E820", Offset = "0xC6E820", VA = "0xC6E820")]
	public HintGenerator()
	{
	}

	[Token(Token = "0x6000ADF")]
	[Address(RVA = "0xC6E828", Offset = "0xC6E828", VA = "0xC6E828")]
	private void init(Scene scene, LoadSceneMode mode)
	{
	}

	[Token(Token = "0x6000AE0")]
	[Address(RVA = "0xC6EB2C", Offset = "0xC6EB2C", VA = "0xC6EB2C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000AE1")]
	[Address(RVA = "0xC6EE88", Offset = "0xC6EE88", VA = "0xC6EE88")]
	private void Update()
	{
	}

	[Token(Token = "0x6000AE2")]
	[Address(RVA = "0xC6F800", Offset = "0xC6F800", VA = "0xC6F800")]
	private void lineUpdate()
	{
	}

	[Token(Token = "0x6000AE3")]
	[Address(RVA = "0xC701D0", Offset = "0xC701D0", VA = "0xC701D0")]
	private void Refresh()
	{
	}

	[Token(Token = "0x6000AE4")]
	[Address(RVA = "0xC7036C", Offset = "0xC7036C", VA = "0xC7036C")]
	public static void RefreshComponents(NVRHand hand)
	{
	}

	[Token(Token = "0x6000AE5")]
	[Address(RVA = "0xC6F8F0", Offset = "0xC6F8F0", VA = "0xC6F8F0")]
	private void ShowText(NVRButtons button, string text, bool highlightButton = true)
	{
	}

	[Token(Token = "0x6000AE6")]
	[Address(RVA = "0xC70370", Offset = "0xC70370", VA = "0xC70370")]
	[DebuggerHidden]
	private IEnumerator MaterialBlink()
	{
		return null;
	}

	[Token(Token = "0x6000AE7")]
	[Address(RVA = "0xC6F648", Offset = "0xC6F648", VA = "0xC6F648")]
	private void HideText()
	{
	}

	[Token(Token = "0x6000AE8")]
	[Address(RVA = "0xC703F8", Offset = "0xC703F8", VA = "0xC703F8")]
	private static HintGenerator GetControllerButtonHints(NVRHand hand)
	{
		return null;
	}

	[Token(Token = "0x6000AE9")]
	[Address(RVA = "0xC70508", Offset = "0xC70508", VA = "0xC70508")]
	public static void ShowTextHint(NVRHand hand, NVRButtons button, string text, bool highlightButton = true)
	{
	}

	[Token(Token = "0x6000AEA")]
	[Address(RVA = "0xC70604", Offset = "0xC70604", VA = "0xC70604")]
	public static void HideAllTextHint()
	{
	}

	[Token(Token = "0x6000AEB")]
	[Address(RVA = "0xC7072C", Offset = "0xC7072C", VA = "0xC7072C")]
	public static void HideTextHint(NVRHand hand)
	{
	}
}
[Token(Token = "0x20001D0")]
public class HintManager : MonoBehaviour
{
	[Token(Token = "0x4000C38")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static HintManager One;

	[Token(Token = "0x4000C39")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Hint LeftHint;

	[Token(Token = "0x4000C3A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Hint RightHint;

	[Token(Token = "0x4000C3B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private NVRPlayer player;

	[Token(Token = "0x170000E7")]
	public bool LeftHinting
	{
		[Token(Token = "0x6000AEE")]
		[Address(RVA = "0xC65E08", Offset = "0xC65E08", VA = "0xC65E08")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170000E8")]
	public bool RightHinting
	{
		[Token(Token = "0x6000AEF")]
		[Address(RVA = "0xC65E28", Offset = "0xC65E28", VA = "0xC65E28")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000AED")]
	[Address(RVA = "0xC70D94", Offset = "0xC70D94", VA = "0xC70D94")]
	public HintManager()
	{
	}

	[Token(Token = "0x6000AF0")]
	[Address(RVA = "0xC70D9C", Offset = "0xC70D9C", VA = "0xC70D9C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000AF1")]
	[Address(RVA = "0xC70E60", Offset = "0xC70E60", VA = "0xC70E60")]
	private void Start()
	{
	}

	[Token(Token = "0x6000AF2")]
	[Address(RVA = "0xC65E48", Offset = "0xC65E48", VA = "0xC65E48")]
	public void ShowHint(NVRHand hand, string text, HintAnim type, bool overrideHint)
	{
	}

	[Token(Token = "0x6000AF3")]
	[Address(RVA = "0xC65FB8", Offset = "0xC65FB8", VA = "0xC65FB8")]
	public void HideHint(NVRHand hand)
	{
	}

	[Token(Token = "0x6000AF4")]
	[Address(RVA = "0xC4BBF8", Offset = "0xC4BBF8", VA = "0xC4BBF8")]
	public void HideAllHint()
	{
	}
}
[Token(Token = "0x20001D1")]
public enum JobAnims
{
	[Token(Token = "0x4000C3D")]
	BubbleAppear,
	[Token(Token = "0x4000C3E")]
	CanBeCompleted,
	[Token(Token = "0x4000C3F")]
	CannotBeCompleted,
	[Token(Token = "0x4000C40")]
	BubbleDisappear
}
[Token(Token = "0x20001D2")]
public class JobBubbleWrapper : MonoBehaviour
{
	[Token(Token = "0x4000C41")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	internal DealerJobScript jobScript;

	[Token(Token = "0x4000C42")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public GameObject objectiveWrapperTemplate;

	[Token(Token = "0x4000C43")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public GameObject rewardWrapperTemplate;

	[Token(Token = "0x4000C44")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[HideInInspector]
	public int prisonID;

	[Token(Token = "0x4000C45")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[HideInInspector]
	public int jobID;

	[Token(Token = "0x4000C46")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string jobTitle;

	[Token(Token = "0x4000C47")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public string jobDudeName;

	[Token(Token = "0x4000C48")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string jobRewardName;

	[Token(Token = "0x4000C49")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public Transform[] objPos;

	[Token(Token = "0x4000C4A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform repPos;

	[Token(Token = "0x4000C4B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public Transform[] rewardPos;

	[Token(Token = "0x4000C4C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Animator anim;

	[Token(Token = "0x4000C4D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	internal TextMeshProUGUI jobTitleText;

	[Token(Token = "0x4000C4E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	internal TextMeshProUGUI jobDudeText;

	[Token(Token = "0x4000C4F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	internal TextMeshProUGUI jobRewartText;

	[Token(Token = "0x4000C50")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	internal GameObject completeButton;

	[Token(Token = "0x4000C51")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	internal List<JobRewardWrapper> jobRewardList;

	[Token(Token = "0x4000C52")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	internal List<JobObjectiveWrapper> jobObjectivesList;

	[Token(Token = "0x4000C53")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private GenericTooltip hint;

	[Token(Token = "0x4000C54")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private GenericTooltip rewardHint;

	[Token(Token = "0x6000AF5")]
	[Address(RVA = "0xC7195C", Offset = "0xC7195C", VA = "0xC7195C")]
	public JobBubbleWrapper()
	{
	}

	[Token(Token = "0x6000AF6")]
	[Address(RVA = "0xC71A1C", Offset = "0xC71A1C", VA = "0xC71A1C")]
	private void GetReferences()
	{
	}

	[Token(Token = "0x6000AF7")]
	[Address(RVA = "0xC71CD0", Offset = "0xC71CD0", VA = "0xC71CD0")]
	public void refreshHint()
	{
	}

	[Token(Token = "0x6000AF8")]
	[Address(RVA = "0xC71D10", Offset = "0xC71D10", VA = "0xC71D10")]
	internal void SetJob()
	{
	}

	[Token(Token = "0x6000AF9")]
	[Address(RVA = "0xC71F98", Offset = "0xC71F98", VA = "0xC71F98")]
	internal void SetObjectives(SubJob[] objectives)
	{
	}

	[Token(Token = "0x6000AFA")]
	[Address(RVA = "0xC7240C", Offset = "0xC7240C", VA = "0xC7240C")]
	internal void SetRewards(SubJob[] rewards, SubJob[] specialRewards)
	{
	}

	[Token(Token = "0x6000AFB")]
	[Address(RVA = "0xC72B68", Offset = "0xC72B68", VA = "0xC72B68")]
	public void SpawnParticlesIdleLoop()
	{
	}

	[Token(Token = "0x6000AFC")]
	[Address(RVA = "0xC72D98", Offset = "0xC72D98", VA = "0xC72D98")]
	public void RefreshJobWindows()
	{
	}

	[Token(Token = "0x6000AFD")]
	[Address(RVA = "0xC72D9C", Offset = "0xC72D9C", VA = "0xC72D9C")]
	public void SetAnimTrigger(JobAnims status)
	{
	}
}
[Token(Token = "0x20001D3")]
public class JobObjectiveWrapper : SpawnableObject
{
	[Token(Token = "0x4000C55")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[HideInInspector]
	public JobBubbleWrapper jobBubble;

	[Token(Token = "0x4000C56")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	[HideInInspector]
	public int jobID;

	[Token(Token = "0x4000C57")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[HideInInspector]
	public int objectiveID;

	[Token(Token = "0x4000C58")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[HideInInspector]
	public string objectName;

	[Token(Token = "0x4000C59")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[HideInInspector]
	public string qtyNeeded;

	[Token(Token = "0x4000C5A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[HideInInspector]
	public string qtyOwned;

	[Token(Token = "0x4000C5B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[HideInInspector]
	public TextMeshProUGUI qtyNeededText;

	[Token(Token = "0x4000C5C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[HideInInspector]
	public TextMeshProUGUI qtyOwnedText;

	[Token(Token = "0x4000C5D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[HideInInspector]
	public Image iconImage;

	[Token(Token = "0x4000C5E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[HideInInspector]
	public GameObject completeButton;

	[Token(Token = "0x4000C5F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[HideInInspector]
	public Sprite icon;

	[Token(Token = "0x6000AFE")]
	[Address(RVA = "0xC77820", Offset = "0xC77820", VA = "0xC77820")]
	public JobObjectiveWrapper()
	{
	}

	[Token(Token = "0x6000AFF")]
	[Address(RVA = "0xC77828", Offset = "0xC77828", VA = "0xC77828")]
	private void GetReferences()
	{
	}

	[Token(Token = "0x6000B00")]
	[Address(RVA = "0xC779A0", Offset = "0xC779A0", VA = "0xC779A0")]
	public void SetObjective()
	{
	}

	[Token(Token = "0x6000B01")]
	[Address(RVA = "0xC77A20", Offset = "0xC77A20", VA = "0xC77A20")]
	public void RefreshUI()
	{
	}
}
[Token(Token = "0x20001D4")]
public class JobRewardWrapper : SpawnableObject
{
	[Token(Token = "0x4000C60")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[HideInInspector]
	public string objectName;

	[Token(Token = "0x4000C61")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	[HideInInspector]
	public int qty;

	[Token(Token = "0x4000C62")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[HideInInspector]
	public Sprite icon;

	[Token(Token = "0x4000C63")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Sprite repIcon;

	[Token(Token = "0x4000C64")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Sprite escapeIcon;

	[Token(Token = "0x4000C65")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[HideInInspector]
	public Image iconImage;

	[Token(Token = "0x4000C66")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject[] plusImages;

	[Token(Token = "0x6000B02")]
	[Address(RVA = "0xC79B7C", Offset = "0xC79B7C", VA = "0xC79B7C")]
	public JobRewardWrapper()
	{
	}

	[Token(Token = "0x6000B03")]
	[Address(RVA = "0xC79B84", Offset = "0xC79B84", VA = "0xC79B84")]
	private void GetReferences()
	{
	}

	[Token(Token = "0x6000B04")]
	[Address(RVA = "0xC79C34", Offset = "0xC79C34", VA = "0xC79C34")]
	internal void SetReward()
	{
	}

	[Token(Token = "0x6000B05")]
	[Address(RVA = "0xC79C6C", Offset = "0xC79C6C", VA = "0xC79C6C")]
	internal void CalculateRewardPlus()
	{
	}

	[Token(Token = "0x6000B06")]
	[Address(RVA = "0xC79D78", Offset = "0xC79D78", VA = "0xC79D78")]
	internal void CalculateRepPlus()
	{
	}
}
[Token(Token = "0x20001D5")]
public class MorningSearchDisplay : MonoBehaviour
{
	[Token(Token = "0x4000C67")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private Animator anim;

	[Token(Token = "0x4000C68")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public TextMeshProUGUI[] _displayText;

	[Token(Token = "0x6000B07")]
	[Address(RVA = "0xC96CB8", Offset = "0xC96CB8", VA = "0xC96CB8")]
	public MorningSearchDisplay()
	{
	}

	[Token(Token = "0x6000B08")]
	[Address(RVA = "0xC96CC0", Offset = "0xC96CC0", VA = "0xC96CC0")]
	public void Initialize()
	{
	}

	[Token(Token = "0x6000B09")]
	[Address(RVA = "0xC96DE4", Offset = "0xC96DE4", VA = "0xC96DE4")]
	public void LaunchAnim()
	{
	}

	[Token(Token = "0x6000B0A")]
	[Address(RVA = "0xC96E5C", Offset = "0xC96E5C", VA = "0xC96E5C")]
	public void AnimDone()
	{
	}
}
[Token(Token = "0x20001D6")]
public class NameGenerator : MonoBehaviour
{
	[Token(Token = "0x4000C69")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public string[] firstNames;

	[Token(Token = "0x4000C6A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string[] akaNames;

	[Token(Token = "0x4000C6B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public string[] lastNames;

	[Token(Token = "0x4000C6C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool initilized;

	[Token(Token = "0x6000B0B")]
	[Address(RVA = "0xC96F14", Offset = "0xC96F14", VA = "0xC96F14")]
	public NameGenerator()
	{
	}

	[Token(Token = "0x6000B0C")]
	[Address(RVA = "0xC96F1C", Offset = "0xC96F1C", VA = "0xC96F1C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000B0D")]
	[Address(RVA = "0xC96F20", Offset = "0xC96F20", VA = "0xC96F20")]
	public void Initialize()
	{
	}

	[Token(Token = "0x6000B0E")]
	[Address(RVA = "0xC96FD4", Offset = "0xC96FD4", VA = "0xC96FD4")]
	public string GetFirstName()
	{
		return null;
	}

	[Token(Token = "0x6000B0F")]
	[Address(RVA = "0xC97050", Offset = "0xC97050", VA = "0xC97050")]
	public string GetAkaName()
	{
		return null;
	}

	[Token(Token = "0x6000B10")]
	[Address(RVA = "0xC970CC", Offset = "0xC970CC", VA = "0xC970CC")]
	public string GetLastName()
	{
		return null;
	}
}
[Token(Token = "0x20001D7")]
public class ObjectIcon : MonoBehaviour
{
	[Token(Token = "0x4000C6D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public GameObject objectLinked;

	[Token(Token = "0x4000C6E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private Image _itemIcon;

	[Token(Token = "0x4000C6F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private Ressource _ressourceToDisplay;

	[Token(Token = "0x6000B11")]
	[Address(RVA = "0x258204", Offset = "0x258204", VA = "0x258204")]
	public ObjectIcon()
	{
	}

	[Token(Token = "0x6000B12")]
	[Address(RVA = "0x25820C", Offset = "0x25820C", VA = "0x25820C")]
	private void Start()
	{
	}
}
[Token(Token = "0x20001D8")]
public class ArrowButtonScript : MonoBehaviour
{
	[Token(Token = "0x2000352")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1F8734", Offset = "0x1F8734")]
	private sealed class <Transition>c__Iterator0 : IEnumerator, IDisposable, IEnumerator<object>
	{
		[Token(Token = "0x400138F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal float delai;

		[Token(Token = "0x4001390")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		internal ArrowButtonScript $this;

		[Token(Token = "0x4001391")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal object $current;

		[Token(Token = "0x4001392")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		internal bool $disposing;

		[Token(Token = "0x4001393")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal int $PC;

		[Token(Token = "0x17000301")]
		private object System.Collections.Generic.IEnumerator<object>.Current
		{
			[Token(Token = "0x600190D")]
			[Address(RVA = "0xCE5D00", Offset = "0xCE5D00", VA = "0xCE5D00", Slot = "8")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000302")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600190E")]
			[Address(RVA = "0xCE5D08", Offset = "0xCE5D08", VA = "0xCE5D08", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600190B")]
		[Address(RVA = "0xCE5388", Offset = "0xCE5388", VA = "0xCE5388")]
		[DebuggerHidden]
		public <Transition>c__Iterator0()
		{
		}

		[Token(Token = "0x600190C")]
		[Address(RVA = "0xCE5390", Offset = "0xCE5390", VA = "0xCE5390", Slot = "5")]
		public bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600190F")]
		[Address(RVA = "0xCE5D10", Offset = "0xCE5D10", VA = "0xCE5D10", Slot = "7")]
		[DebuggerHidden]
		public void Dispose()
		{
		}

		[Token(Token = "0x6001910")]
		[Address(RVA = "0xCE5D24", Offset = "0xCE5D24", VA = "0xCE5D24", Slot = "6")]
		[DebuggerHidden]
		public void Reset()
		{
		}
	}

	[Token(Token = "0x4000C70")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public string onButtonClick;

	[Token(Token = "0x4000C71")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string stringValueOptional;

	[Token(Token = "0x4000C72")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public Color couleurDeBase;

	[Token(Token = "0x4000C73")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Color couleurHover;

	[Token(Token = "0x4000C74")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public Color couleurButtonClicked;

	[Token(Token = "0x4000C75")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float tempsDelaiClics;

	[Token(Token = "0x4000C76")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private BuyButtonWrapper buyButtonScript;

	[Token(Token = "0x4000C77")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private AudioSource audiosource;

	[Token(Token = "0x4000C78")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Image leBouton;

	[Token(Token = "0x6000B13")]
	[Address(RVA = "0xCE4EB0", Offset = "0xCE4EB0", VA = "0xCE4EB0")]
	public ArrowButtonScript()
	{
	}

	[Token(Token = "0x6000B14")]
	[Address(RVA = "0xCE4EB8", Offset = "0xCE4EB8", VA = "0xCE4EB8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000B15")]
	[Address(RVA = "0xCE4F58", Offset = "0xCE4F58", VA = "0xCE4F58")]
	private void Update()
	{
	}

	[Token(Token = "0x6000B16")]
	[Address(RVA = "0xCE4F5C", Offset = "0xCE4F5C", VA = "0xCE4F5C")]
	private void OnTriggerEnter(Collider col)
	{
	}

	[Token(Token = "0x6000B17")]
	[Address(RVA = "0xCE5044", Offset = "0xCE5044", VA = "0xCE5044")]
	private void OnTriggerStay(Collider col)
	{
	}

	[Token(Token = "0x6000B18")]
	[Address(RVA = "0xCE52A0", Offset = "0xCE52A0", VA = "0xCE52A0")]
	private void OnTriggerExit(Collider col)
	{
	}

	[Token(Token = "0x6000B19")]
	[Address(RVA = "0xCE51FC", Offset = "0xCE51FC", VA = "0xCE51FC")]
	[DebuggerHidden]
	private IEnumerator Transition(float delai)
	{
		return null;
	}
}
[Token(Token = "0x20001D9")]
public class OptionDisactivator : MonoBehaviour
{
	[Token(Token = "0x4000C79")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public GameObject SecondTablet;

	[Token(Token = "0x4000C7A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public GameObject LIV;

	[Token(Token = "0x4000C7B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public GameObject Analytics;

	[Token(Token = "0x6000B1A")]
	[Address(RVA = "0x25B974", Offset = "0x25B974", VA = "0x25B974")]
	public OptionDisactivator()
	{
	}

	[Token(Token = "0x6000B1B")]
	[Address(RVA = "0x25B97C", Offset = "0x25B97C", VA = "0x25B97C")]
	public void Start()
	{
	}

	[Token(Token = "0x6000B1C")]
	[Address(RVA = "0x25B9F4", Offset = "0x25B9F4", VA = "0x25B9F4")]
	private bool IsLIVOnPlatform()
	{
		return default(bool);
	}

	[Token(Token = "0x6000B1D")]
	[Address(RVA = "0x25BA8C", Offset = "0x25BA8C", VA = "0x25BA8C")]
	private bool IsAnalyticsOnPlatform()
	{
		return default(bool);
	}
}
[Token(Token = "0x20001DA")]
public class Option
{
	[Token(Token = "0x20001DB")]
	private delegate bool Parser<T>(string input, out T output);

	[Token(Token = "0x4000C7C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public bool DefaultLanguage;

	[Token(Token = "0x4000C7D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Languages language;

	[Token(Token = "0x4000C7E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float musicVolume;

	[Token(Token = "0x4000C7F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float sfxVolume;

	[Token(Token = "0x4000C80")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool ObserVR;

	[Token(Token = "0x4000C81")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool LIVShowHand;

	[Token(Token = "0x4000C82")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float posCalX;

	[Token(Token = "0x4000C83")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float posCalY;

	[Token(Token = "0x4000C84")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float posCalZ;

	[Token(Token = "0x4000C85")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float rotCalW;

	[Token(Token = "0x4000C86")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float rotCalX;

	[Token(Token = "0x4000C87")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float rotCalY;

	[Token(Token = "0x4000C88")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float rotCalZ;

	[Token(Token = "0x4000C89")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool DefaultStanding;

	[Token(Token = "0x4000C8A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public StandingSystemLevel standing;

	[Token(Token = "0x4000C8B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1F8794", Offset = "0x1F8794")]
	private static Parser<bool> <>f__mg$cache0;

	[Token(Token = "0x4000C8C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1F87A4", Offset = "0x1F87A4")]
	private static Parser<float> <>f__mg$cache1;

	[Token(Token = "0x170000E9")]
	public Vector3 PosCal
	{
		[Token(Token = "0x6000B1F")]
		[Address(RVA = "0x259EEC", Offset = "0x259EEC", VA = "0x259EEC")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x170000EA")]
	public Quaternion RotCal
	{
		[Token(Token = "0x6000B20")]
		[Address(RVA = "0x259F28", Offset = "0x259F28", VA = "0x259F28")]
		get
		{
			return default(Quaternion);
		}
	}

	[Token(Token = "0x6000B1E")]
	[Address(RVA = "0x259EE4", Offset = "0x259EE4", VA = "0x259EE4")]
	private Option()
	{
	}

	[Token(Token = "0x6000B21")]
	[Address(RVA = "0x259F70", Offset = "0x259F70", VA = "0x259F70")]
	public static Option FromOldSettings(string[] data)
	{
		return null;
	}

	[Token(Token = "0x6000B22")]
	[Address(RVA = "0x25A094", Offset = "0x25A094", VA = "0x25A094")]
	public static Option FromSettings(string[] data)
	{
		return null;
	}

	[Token(Token = "0x6000B23")]
	[Address(RVA = "0x25AA0C", Offset = "0x25AA0C", VA = "0x25AA0C")]
	public static Option FromDefaultSettings()
	{
		return null;
	}

	[Token(Token = "0x6000B24")]
	[Address(RVA = "0x25ABA0", Offset = "0x25ABA0", VA = "0x25ABA0")]
	public static Option FromAllFiles()
	{
		return null;
	}

	[Token(Token = "0x6000B25")]
	[Address(RVA = "0x25AC88", Offset = "0x25AC88", VA = "0x25AC88")]
	public static Option FromAllFiles(out bool fromOldOrNew)
	{
		return null;
	}

	[Token(Token = "0x6000B26")]
	[Address(RVA = "0x25AD84", Offset = "0x25AD84", VA = "0x25AD84")]
	public void Save()
	{
	}

	[Token(Token = "0x6000B27")]
	[Address(RVA = "0x25AEB4", Offset = "0x25AEB4", VA = "0x25AEB4")]
	public void ApplyAll()
	{
	}

	[Token(Token = "0x6000B28")]
	[Address(RVA = "0x25B414", Offset = "0x25B414", VA = "0x25B414", Slot = "3")]
	public override string ToString()
	{
		return null;
	}

	[Token(Token = "0x6000B29")]
	[Address(RVA = "0x25A8EC", Offset = "0x25A8EC", VA = "0x25A8EC")]
	private static bool Parse(string[] data, int index, bool defaultValue)
	{
		return default(bool);
	}

	[Token(Token = "0x6000B2A")]
	[Address(RVA = "0x25A7DC", Offset = "0x25A7DC", VA = "0x25A7DC")]
	private static float Parse(string[] data, int index, float defaultValue)
	{
		return default(float);
	}

	[Token(Token = "0x6000B2B")]
	private static T Parse<T>(string[] data, int index, T defaultValue, Parser<T> parser)
	{
		return (T)null;
	}
}
[Token(Token = "0x20001DC")]
public class OptionManager : MonoBehaviour
{
	[Token(Token = "0x2000353")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1F87E4", Offset = "0x1F87E4")]
	private sealed class <LateStartApply>c__Iterator0 : IEnumerator, IDisposable, IEnumerator<object>
	{
		[Token(Token = "0x4001394")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal OptionManager $this;

		[Token(Token = "0x4001395")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		internal object $current;

		[Token(Token = "0x4001396")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal bool $disposing;

		[Token(Token = "0x4001397")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		internal int $PC;

		[Token(Token = "0x17000303")]
		private object System.Collections.Generic.IEnumerator<object>.Current
		{
			[Token(Token = "0x6001913")]
			[Address(RVA = "0x25CA60", Offset = "0x25CA60", VA = "0x25CA60", Slot = "8")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000304")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001914")]
			[Address(RVA = "0x25CA68", Offset = "0x25CA68", VA = "0x25CA68", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001911")]
		[Address(RVA = "0x25BC7C", Offset = "0x25BC7C", VA = "0x25BC7C")]
		[DebuggerHidden]
		public <LateStartApply>c__Iterator0()
		{
		}

		[Token(Token = "0x6001912")]
		[Address(RVA = "0x25C714", Offset = "0x25C714", VA = "0x25C714", Slot = "5")]
		public bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001915")]
		[Address(RVA = "0x25CA70", Offset = "0x25CA70", VA = "0x25CA70", Slot = "7")]
		[DebuggerHidden]
		public void Dispose()
		{
		}

		[Token(Token = "0x6001916")]
		[Address(RVA = "0x25CA84", Offset = "0x25CA84", VA = "0x25CA84", Slot = "6")]
		[DebuggerHidden]
		public void Reset()
		{
		}
	}

	[Token(Token = "0x4000C8D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Option option;

	[Token(Token = "0x4000C8E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x1F87B4", Offset = "0x1F87B4")]
	public Button calibrationButton;

	[Token(Token = "0x4000C8F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public Slider musicSlider;

	[Token(Token = "0x4000C90")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Slider sfxSlider;

	[Token(Token = "0x4000C91")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public UIColorSwitch showHandImage;

	[Token(Token = "0x4000C92")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TextMeshProUGUI AccessibilityLabel;

	[Token(Token = "0x4000C93")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private int LanguageCount;

	[Token(Token = "0x4000C94")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1F87C4", Offset = "0x1F87C4")]
	private static Action<string> <>f__mg$cache0;

	[Token(Token = "0x6000B30")]
	[Address(RVA = "0x25BA94", Offset = "0x25BA94", VA = "0x25BA94")]
	public OptionManager()
	{
	}

	[Token(Token = "0x6000B31")]
	[Address(RVA = "0x25BA9C", Offset = "0x25BA9C", VA = "0x25BA9C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000B32")]
	[Address(RVA = "0x25BBFC", Offset = "0x25BBFC", VA = "0x25BBFC")]
	[DebuggerHidden]
	public IEnumerator LateStartApply()
	{
		return null;
	}

	[Token(Token = "0x6000B33")]
	[Address(RVA = "0x25BC84", Offset = "0x25BC84", VA = "0x25BC84")]
	public void ChangeMusicVolume()
	{
	}

	[Token(Token = "0x6000B34")]
	[Address(RVA = "0x25AFD8", Offset = "0x25AFD8", VA = "0x25AFD8")]
	public static void ApplyMusicVolume(float volume)
	{
	}

	[Token(Token = "0x6000B35")]
	[Address(RVA = "0x25BCF0", Offset = "0x25BCF0", VA = "0x25BCF0")]
	public void ChangeSFXVolume()
	{
	}

	[Token(Token = "0x6000B36")]
	[Address(RVA = "0x25B070", Offset = "0x25B070", VA = "0x25B070")]
	public static void ApplySFXVolume(float volume)
	{
	}

	[Token(Token = "0x6000B37")]
	[Address(RVA = "0x25BD5C", Offset = "0x25BD5C", VA = "0x25BD5C")]
	public void SfxFeedback()
	{
	}

	[Token(Token = "0x6000B38")]
	[Address(RVA = "0x25BE04", Offset = "0x25BE04", VA = "0x25BE04")]
	public void UnityAnalyticsDataPrivacy()
	{
	}

	[Token(Token = "0x6000B39")]
	[Address(RVA = "0x25BF34", Offset = "0x25BF34", VA = "0x25BF34")]
	private void DataPrivacyOnURLReceived(string url)
	{
	}

	[Token(Token = "0x6000B3A")]
	[Address(RVA = "0x25BF40", Offset = "0x25BF40", VA = "0x25BF40")]
	private static void DataPrivacyOnFailure(string reason)
	{
	}

	[Token(Token = "0x6000B3B")]
	[Address(RVA = "0x25C018", Offset = "0x25C018", VA = "0x25C018")]
	public void ToggleLIVShowHand()
	{
	}

	[Token(Token = "0x6000B3C")]
	[Address(RVA = "0x25AFD4", Offset = "0x25AFD4", VA = "0x25AFD4")]
	public static void ApplyLIVShowHand(bool showHand)
	{
	}

	[Token(Token = "0x6000B3D")]
	[Address(RVA = "0x25C084", Offset = "0x25C084", VA = "0x25C084")]
	private static void SetToggle(UIColorSwitch image, bool value)
	{
	}

	[Token(Token = "0x6000B3E")]
	[Address(RVA = "0x25C198", Offset = "0x25C198", VA = "0x25C198")]
	private static Color ChangeColor(Color color, bool value)
	{
		return default(Color);
	}

	[Token(Token = "0x6000B3F")]
	[Address(RVA = "0x25C1FC", Offset = "0x25C1FC", VA = "0x25C1FC")]
	public void ChangeLangage(int icr)
	{
	}

	[Token(Token = "0x6000B40")]
	[Address(RVA = "0x25C388", Offset = "0x25C388", VA = "0x25C388")]
	public void ChangeStanding(int icr)
	{
	}

	[Token(Token = "0x6000B41")]
	[Address(RVA = "0x25B394", Offset = "0x25B394", VA = "0x25B394")]
	public static void ApplyStanding(StandingSystemLevel standing)
	{
	}

	[Token(Token = "0x6000B42")]
	[Address(RVA = "0x25AF54", Offset = "0x25AF54", VA = "0x25AF54")]
	public static void ApplyLanguage(Languages language)
	{
	}

	[Token(Token = "0x6000B43")]
	[Address(RVA = "0x25C5CC", Offset = "0x25C5CC", VA = "0x25C5CC")]
	public void ApplyChange()
	{
	}

	[Token(Token = "0x6000B44")]
	[Address(RVA = "0x25C670", Offset = "0x25C670", VA = "0x25C670")]
	public void LauchCalibration()
	{
	}

	[Token(Token = "0x6000B45")]
	[Address(RVA = "0x25B108", Offset = "0x25B108", VA = "0x25B108")]
	public static void ApplyCalibration(Vector3 posCal, Quaternion rotCal)
	{
	}
}
[Token(Token = "0x20001DD")]
public class SimpleButton : MonoBehaviour
{
	[Token(Token = "0x4000C95")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public UnityEvent onPressed;

	[Token(Token = "0x4000C96")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public UnityEvent onReleased;

	[Token(Token = "0x4000C97")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public UnityEvent onHover;

	[Token(Token = "0x4000C98")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool _active;

	[Token(Token = "0x4000C99")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private NVRHand _hand;

	[Token(Token = "0x170000EB")]
	public NVRHand hand
	{
		[Token(Token = "0x6000B47")]
		[Address(RVA = "0xCB6B74", Offset = "0xCB6B74", VA = "0xCB6B74")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000B46")]
	[Address(RVA = "0xCB6B6C", Offset = "0xCB6B6C", VA = "0xCB6B6C")]
	public SimpleButton()
	{
	}

	[Token(Token = "0x6000B48")]
	[Address(RVA = "0xCB6B7C", Offset = "0xCB6B7C", VA = "0xCB6B7C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000B49")]
	[Address(RVA = "0xCB6C7C", Offset = "0xCB6C7C", VA = "0xCB6C7C")]
	private void OnTriggerStay(Collider col)
	{
	}
}
[Token(Token = "0x20001DE")]
public class SimpleSlider : MonoBehaviour
{
	[Token(Token = "0x4000C9A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private Slider _slider;

	[Token(Token = "0x4000C9B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private RectTransform _fillArea;

	[Token(Token = "0x4000C9C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private SimpleButton _button;

	[Token(Token = "0x4000C9D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float _range;

	[Token(Token = "0x4000C9E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private Vector3 _origin;

	[Token(Token = "0x4000C9F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool _following;

	[Token(Token = "0x6000B4A")]
	[Address(RVA = "0xCB7064", Offset = "0xCB7064", VA = "0xCB7064")]
	public SimpleSlider()
	{
	}

	[Token(Token = "0x6000B4B")]
	[Address(RVA = "0xCB706C", Offset = "0xCB706C", VA = "0xCB706C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000B4C")]
	[Address(RVA = "0xCB7344", Offset = "0xCB7344", VA = "0xCB7344")]
	private void Update()
	{
	}

	[Token(Token = "0x6000B4D")]
	[Address(RVA = "0xCB751C", Offset = "0xCB751C", VA = "0xCB751C")]
	private void Follow()
	{
	}

	[Token(Token = "0x6000B4E")]
	[Address(RVA = "0xCB7528", Offset = "0xCB7528", VA = "0xCB7528")]
	private void UnFollow()
	{
	}
}
[Token(Token = "0x20001DF")]
public class UIColorSwitch : MonoBehaviour
{
	[Token(Token = "0x4000CA0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Color color;

	[Token(Token = "0x4000CA1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private Image _img;

	[Token(Token = "0x4000CA2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1F8844", Offset = "0x1F8844")]
	[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0x1F8844", Offset = "0x1F8844")]
	private Color <BaseColor>k__BackingField;

	[Token(Token = "0x4000CA3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float _time;

	[Token(Token = "0x4000CA4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private bool _switching;

	[Token(Token = "0x170000EC")]
	public Color BaseColor
	{
		[Token(Token = "0x6000B50")]
		[Address(RVA = "0x400630", Offset = "0x400630", VA = "0x400630")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1F8878", Offset = "0x1F8878")]
		get
		{
			return default(Color);
		}
		[Token(Token = "0x6000B51")]
		[Address(RVA = "0x400644", Offset = "0x400644", VA = "0x400644")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1F8888", Offset = "0x1F8888")]
		set
		{
		}
	}

	[Token(Token = "0x6000B4F")]
	[Address(RVA = "0x400628", Offset = "0x400628", VA = "0x400628")]
	public UIColorSwitch()
	{
	}

	[Token(Token = "0x6000B52")]
	[Address(RVA = "0x400654", Offset = "0x400654", VA = "0x400654")]
	private void Start()
	{
	}

	[Token(Token = "0x6000B53")]
	[Address(RVA = "0x4006F8", Offset = "0x4006F8", VA = "0x4006F8")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000B54")]
	[Address(RVA = "0x40085C", Offset = "0x40085C", VA = "0x40085C")]
	public void Switch()
	{
	}
}
[Token(Token = "0x20001E0")]
public class PhysicalButton : NVRInteractable
{
	[Token(Token = "0x2000354")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1F88A8", Offset = "0x1F88A8")]
	private sealed class <LateStart>c__Iterator0 : IEnumerator, IDisposable, IEnumerator<object>
	{
		[Token(Token = "0x4001398")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal PhysicalButton $this;

		[Token(Token = "0x4001399")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		internal object $current;

		[Token(Token = "0x400139A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal bool $disposing;

		[Token(Token = "0x400139B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		internal int $PC;

		[Token(Token = "0x17000305")]
		private object System.Collections.Generic.IEnumerator<object>.Current
		{
			[Token(Token = "0x6001919")]
			[Address(RVA = "0x260EF4", Offset = "0x260EF4", VA = "0x260EF4", Slot = "8")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000306")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600191A")]
			[Address(RVA = "0x260EFC", Offset = "0x260EFC", VA = "0x260EFC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001917")]
		[Address(RVA = "0x2607BC", Offset = "0x2607BC", VA = "0x2607BC")]
		[DebuggerHidden]
		public <LateStart>c__Iterator0()
		{
		}

		[Token(Token = "0x6001918")]
		[Address(RVA = "0x260E0C", Offset = "0x260E0C", VA = "0x260E0C", Slot = "5")]
		public bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600191B")]
		[Address(RVA = "0x260F04", Offset = "0x260F04", VA = "0x260F04", Slot = "7")]
		[DebuggerHidden]
		public void Dispose()
		{
		}

		[Token(Token = "0x600191C")]
		[Address(RVA = "0x260F18", Offset = "0x260F18", VA = "0x260F18", Slot = "6")]
		[DebuggerHidden]
		public void Reset()
		{
		}
	}

	[Token(Token = "0x4000CA5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float MaxDistance;

	[Token(Token = "0x4000CA6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float DistanceToPress;

	[Token(Token = "0x4000CA7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float recoverSpeed;

	[Token(Token = "0x4000CA8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public bool inversePressDir;

	[Token(Token = "0x4000CA9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public UnityEvent OnPress;

	[Token(Token = "0x4000CAA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Rigidbody rb;

	[Token(Token = "0x4000CAB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private Transform movablePart;

	[Token(Token = "0x4000CAC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Vector3 localOrigin;

	[Token(Token = "0x4000CAD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private Vector3 origin;

	[Token(Token = "0x4000CAE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Vector3 constainedPosition;

	[Token(Token = "0x4000CAF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private Quaternion constainedRotation;

	[Token(Token = "0x4000CB0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private bool pressed;

	[Token(Token = "0x4000CB1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8D")]
	private bool ButtonInit;

	[Token(Token = "0x4000CB2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8E")]
	private bool awaked;

	[Token(Token = "0x4000CB3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private Vector3 BaseLocalPosition;

	[Token(Token = "0x4000CB4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	private Vector3 BaseLocalRotation;

	[Token(Token = "0x4000CB5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public UnityEvent OnHovering;

	[Token(Token = "0x4000CB6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	public UnityEvent OnHighlight;

	[Token(Token = "0x6000B55")]
	[Address(RVA = "0x26024C", Offset = "0x26024C", VA = "0x26024C")]
	public PhysicalButton()
	{
	}

	[Token(Token = "0x6000B56")]
	[Address(RVA = "0x26027C", Offset = "0x26027C", VA = "0x26027C", Slot = "5")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x6000B57")]
	[Address(RVA = "0x2603B0", Offset = "0x2603B0", VA = "0x2603B0", Slot = "6")]
	protected override void Start()
	{
	}

	[Token(Token = "0x6000B58")]
	[Address(RVA = "0x26046C", Offset = "0x26046C", VA = "0x26046C", Slot = "23")]
	protected override void OnEnable()
	{
	}

	[Token(Token = "0x6000B59")]
	[Address(RVA = "0x2607A0", Offset = "0x2607A0", VA = "0x2607A0", Slot = "22")]
	protected override void OnDisable()
	{
	}

	[Token(Token = "0x6000B5A")]
	[Address(RVA = "0x2603EC", Offset = "0x2603EC", VA = "0x2603EC")]
	[DebuggerHidden]
	private IEnumerator LateStart()
	{
		return null;
	}

	[Token(Token = "0x6000B5B")]
	[Address(RVA = "0x2607C4", Offset = "0x2607C4", VA = "0x2607C4", Slot = "12")]
	public override void BeginInteraction(NVRHand hand)
	{
	}

	[Token(Token = "0x6000B5C")]
	[Address(RVA = "0x2609AC", Offset = "0x2609AC", VA = "0x2609AC", Slot = "7")]
	public override void ShowHighlight()
	{
	}

	[Token(Token = "0x6000B5D")]
	[Address(RVA = "0x2609D4", Offset = "0x2609D4", VA = "0x2609D4", Slot = "14")]
	public override void HoveringUpdate(NVRHand hand, float forTime)
	{
	}

	[Token(Token = "0x6000B5E")]
	[Address(RVA = "0x2604B8", Offset = "0x2604B8", VA = "0x2604B8")]
	private void initPosition()
	{
	}

	[Token(Token = "0x6000B5F")]
	[Address(RVA = "0x2609EC", Offset = "0x2609EC", VA = "0x2609EC")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000B60")]
	[Address(RVA = "0x260AA4", Offset = "0x260AA4", VA = "0x260AA4")]
	private void CheckPress()
	{
	}

	[Token(Token = "0x6000B61")]
	[Address(RVA = "0x260B70", Offset = "0x260B70", VA = "0x260B70")]
	private void UpdatePosition()
	{
	}
}
[Token(Token = "0x20001E1")]
public class RepBarWrapper : SpawnableObject
{
	[Token(Token = "0x4000CB7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public TextMeshProUGUI repText;

	[Token(Token = "0x4000CB8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float slideTime;

	[Token(Token = "0x4000CB9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float repValue;

	[Token(Token = "0x4000CBA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private Slider repBarSlider;

	[Token(Token = "0x4000CBB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float lastRepValue;

	[Token(Token = "0x4000CBC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Tweener repTween;

	[Token(Token = "0x4000CBD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private ParticleSystem parts;

	[Token(Token = "0x6000B62")]
	[Address(RVA = "0x26D208", Offset = "0x26D208", VA = "0x26D208")]
	public RepBarWrapper()
	{
	}

	[Token(Token = "0x6000B63")]
	[Address(RVA = "0x26D218", Offset = "0x26D218", VA = "0x26D218")]
	public void GetReferences()
	{
	}

	[Token(Token = "0x6000B64")]
	[Address(RVA = "0x26D494", Offset = "0x26D494", VA = "0x26D494")]
	public void Refresh()
	{
	}

	[Token(Token = "0x6000B65")]
	[Address(RVA = "0x26D2D4", Offset = "0x26D2D4", VA = "0x26D2D4")]
	private float GetRepValue()
	{
		return default(float);
	}

	[Token(Token = "0x6000B66")]
	[Address(RVA = "0x26D6E8", Offset = "0x26D6E8", VA = "0x26D6E8")]
	public void endParticle()
	{
	}
}
[Token(Token = "0x20001E2")]
public class RepRewardWrapper : SpawnableObject
{
	[Token(Token = "0x4000CBE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[HideInInspector]
	public string objectName;

	[Token(Token = "0x4000CBF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	[HideInInspector]
	public string description;

	[Token(Token = "0x4000CC0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[HideInInspector]
	public Sprite icon;

	[Token(Token = "0x4000CC1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[HideInInspector]
	public TextMeshProUGUI descriptionText;

	[Token(Token = "0x4000CC2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[HideInInspector]
	public Image iconImage;

	[Token(Token = "0x6000B67")]
	[Address(RVA = "0x26D710", Offset = "0x26D710", VA = "0x26D710")]
	public RepRewardWrapper()
	{
	}

	[Token(Token = "0x6000B68")]
	[Address(RVA = "0x26D718", Offset = "0x26D718", VA = "0x26D718")]
	private void GetReferences()
	{
	}

	[Token(Token = "0x6000B69")]
	[Address(RVA = "0x26D82C", Offset = "0x26D82C", VA = "0x26D82C")]
	public void SetRepReward()
	{
	}
}
[Token(Token = "0x20001E3")]
public class SandboxHighScore : MonoBehaviour
{
	[Token(Token = "0x4000CC3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public TextMeshProUGUI Label;

	[Token(Token = "0x4000CC4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public TextMeshProUGUI Score;

	[Token(Token = "0x6000B6A")]
	[Address(RVA = "0xCA98F8", Offset = "0xCA98F8", VA = "0xCA98F8")]
	public SandboxHighScore()
	{
	}

	[Token(Token = "0x6000B6B")]
	[Address(RVA = "0xCA9900", Offset = "0xCA9900", VA = "0xCA9900")]
	private void Start()
	{
	}
}
[Token(Token = "0x20001E4")]
public class ScrollbarScriptableAsset : ScriptableObject
{
	[Token(Token = "0x4000CC5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Sprite BothShade;

	[Token(Token = "0x4000CC6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Sprite TopShade;

	[Token(Token = "0x4000CC7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public Sprite BotShade;

	[Token(Token = "0x6000B6C")]
	[Address(RVA = "0xCB31DC", Offset = "0xCB31DC", VA = "0xCB31DC")]
	public ScrollbarScriptableAsset()
	{
	}
}
[Token(Token = "0x20001E5")]
public class ScrollingBar : MonoBehaviour
{
	[Token(Token = "0x4000CC8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private Transform clampMin;

	[Token(Token = "0x4000CC9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private Transform clampMax;

	[Token(Token = "0x4000CCA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private Transform theBar;

	[Token(Token = "0x4000CCB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float distanceReal;

	[Token(Token = "0x4000CCC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private float distanceClamp;

	[Token(Token = "0x4000CCD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float ratio;

	[Token(Token = "0x4000CCE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Vector3 relativePosition;

	[Token(Token = "0x4000CCF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Vector3 previousPosition;

	[Token(Token = "0x4000CD0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private Animator anim;

	[Token(Token = "0x4000CD1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool boingLeft;

	[Token(Token = "0x4000CD2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
	private bool boingRight;

	[Token(Token = "0x4000CD3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[HideInInspector]
	public ScrollingSnapScript s;

	[Token(Token = "0x6000B6D")]
	[Address(RVA = "0xCB31E4", Offset = "0xCB31E4", VA = "0xCB31E4")]
	public ScrollingBar()
	{
	}

	[Token(Token = "0x6000B6E")]
	[Address(RVA = "0xCB31EC", Offset = "0xCB31EC", VA = "0xCB31EC")]
	public void Initialize(ScrollingSnapScript sup)
	{
	}

	[Token(Token = "0x6000B6F")]
	[Address(RVA = "0xCB33DC", Offset = "0xCB33DC", VA = "0xCB33DC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000B70")]
	[Address(RVA = "0xCB3DA0", Offset = "0xCB3DA0", VA = "0xCB3DA0")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000B71")]
	[Address(RVA = "0xCB3858", Offset = "0xCB3858", VA = "0xCB3858")]
	private void GoingLeft()
	{
	}

	[Token(Token = "0x6000B72")]
	[Address(RVA = "0xCB3A20", Offset = "0xCB3A20", VA = "0xCB3A20")]
	private void GoingRight()
	{
	}

	[Token(Token = "0x6000B73")]
	[Address(RVA = "0xCB3BE8", Offset = "0xCB3BE8", VA = "0xCB3BE8")]
	private void GoingNowhereSnifSnif()
	{
	}
}
[Token(Token = "0x20001E6")]
public class ScrollingSnapScript : MonoBehaviour
{
	[Token(Token = "0x4000CD4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	[HideInInspector]
	public RectTransform scrollingTransform;

	[Token(Token = "0x4000CD5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private ScrollingBar scrollBar;

	[Token(Token = "0x4000CD6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private GameObject[] bttns;

	[Token(Token = "0x4000CD7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private GameObject theHand;

	[Token(Token = "0x4000CD8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private RectTransform buyUICanvasT;

	[Token(Token = "0x4000CD9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[HideInInspector]
	public RectTransform center;

	[Token(Token = "0x4000CDA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float coefficientLerp;

	[Token(Token = "0x4000CDB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float[] distances;

	[Token(Token = "0x4000CDC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private bool isDragging;

	[Token(Token = "0x4000CDD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private int closestBttnNb;

	[Token(Token = "0x4000CDE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private Vector3 previousHandPosition;

	[Token(Token = "0x4000CDF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[HideInInspector]
	public Transform clampMinButton;

	[Token(Token = "0x4000CE0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[HideInInspector]
	public Transform clampMaxButton;

	[Token(Token = "0x4000CE1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[HideInInspector]
	public Transform readAnchor;

	[Token(Token = "0x6000B74")]
	[Address(RVA = "0xCB3DE4", Offset = "0xCB3DE4", VA = "0xCB3DE4")]
	public ScrollingSnapScript()
	{
	}

	[Token(Token = "0x6000B75")]
	[Address(RVA = "0xCB3DEC", Offset = "0xCB3DEC", VA = "0xCB3DEC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000B76")]
	[Address(RVA = "0xCB4588", Offset = "0xCB4588", VA = "0xCB4588")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000B77")]
	[Address(RVA = "0xCB43F0", Offset = "0xCB43F0", VA = "0xCB43F0")]
	private void LerpToBttn(GameObject ceBouton)
	{
	}

	[Token(Token = "0x6000B78")]
	[Address(RVA = "0xCB45F4", Offset = "0xCB45F4", VA = "0xCB45F4")]
	public void StartDragMenu()
	{
	}

	[Token(Token = "0x6000B79")]
	[Address(RVA = "0xCB4600", Offset = "0xCB4600", VA = "0xCB4600")]
	public void EndDragMenu()
	{
	}

	[Token(Token = "0x6000B7A")]
	[Address(RVA = "0xCB460C", Offset = "0xCB460C", VA = "0xCB460C")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000B7B")]
	[Address(RVA = "0xCB471C", Offset = "0xCB471C", VA = "0xCB471C")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x6000B7C")]
	[Address(RVA = "0xCB47C0", Offset = "0xCB47C0", VA = "0xCB47C0")]
	public void RefreshUI()
	{
	}
}
[Token(Token = "0x20001E7")]
public class UIFinalScore : MonoBehaviour
{
	[Token(Token = "0x4000CE2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public UIStat stat1;

	[Token(Token = "0x4000CE3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public UIStat stat2;

	[Token(Token = "0x4000CE4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public UIStat stat3;

	[Token(Token = "0x4000CE5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public UIStat stat4;

	[Token(Token = "0x4000CE6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private TextMeshProUGUI text;

	[Token(Token = "0x6000B7D")]
	[Address(RVA = "0x400EE8", Offset = "0x400EE8", VA = "0x400EE8")]
	public UIFinalScore()
	{
	}

	[Token(Token = "0x6000B7E")]
	[Address(RVA = "0x400EF0", Offset = "0x400EF0", VA = "0x400EF0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000B7F")]
	[Address(RVA = "0x400FA0", Offset = "0x400FA0", VA = "0x400FA0")]
	private void Update()
	{
	}
}
[Token(Token = "0x20001E8")]
public class UIMedal : MonoBehaviour
{
	[Token(Token = "0x4000CE7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Sprite[] medals;

	[Token(Token = "0x4000CE8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private int value;

	[Token(Token = "0x4000CE9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private Image img;

	[Token(Token = "0x6000B80")]
	[Address(RVA = "0x401834", Offset = "0x401834", VA = "0x401834")]
	public UIMedal()
	{
	}

	[Token(Token = "0x6000B81")]
	[Address(RVA = "0x40183C", Offset = "0x40183C", VA = "0x40183C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000B82")]
	[Address(RVA = "0x4018A4", Offset = "0x4018A4", VA = "0x4018A4")]
	public void UpgradeMedal()
	{
	}
}
[Token(Token = "0x20001E9")]
public class UIStat : UIStatBase
{
	[Token(Token = "0x2000355")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1F89D8", Offset = "0x1F89D8")]
	private sealed class <UpdateStatAnimationUnderTreshold>c__Iterator0 : IEnumerator, IDisposable, IEnumerator<object>
	{
		[Token(Token = "0x400139C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal int <over>__0;

		[Token(Token = "0x400139D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		internal float <waiterTime>__0;

		[Token(Token = "0x400139E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal WaitForSeconds <waiter>__0;

		[Token(Token = "0x400139F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		internal int <increment>__0;

		[Token(Token = "0x40013A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal int <i>__1;

		[Token(Token = "0x40013A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		internal UIStat $this;

		[Token(Token = "0x40013A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal object $current;

		[Token(Token = "0x40013A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		internal bool $disposing;

		[Token(Token = "0x40013A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		internal int $PC;

		[Token(Token = "0x17000307")]
		private object System.Collections.Generic.IEnumerator<object>.Current
		{
			[Token(Token = "0x600191F")]
			[Address(RVA = "0x402F30", Offset = "0x402F30", VA = "0x402F30", Slot = "8")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000308")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001920")]
			[Address(RVA = "0x402F38", Offset = "0x402F38", VA = "0x402F38", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600191D")]
		[Address(RVA = "0x402788", Offset = "0x402788", VA = "0x402788")]
		[DebuggerHidden]
		public <UpdateStatAnimationUnderTreshold>c__Iterator0()
		{
		}

		[Token(Token = "0x600191E")]
		[Address(RVA = "0x402C08", Offset = "0x402C08", VA = "0x402C08", Slot = "5")]
		public bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001921")]
		[Address(RVA = "0x402F40", Offset = "0x402F40", VA = "0x402F40", Slot = "7")]
		[DebuggerHidden]
		public void Dispose()
		{
		}

		[Token(Token = "0x6001922")]
		[Address(RVA = "0x402F54", Offset = "0x402F54", VA = "0x402F54", Slot = "6")]
		[DebuggerHidden]
		public void Reset()
		{
		}
	}

	[Token(Token = "0x2000356")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1F8A38", Offset = "0x1F8A38")]
	private sealed class <UpdateStatAnimationOverTreshold>c__Iterator1 : IEnumerator, IDisposable, IEnumerator<object>
	{
		[Token(Token = "0x40013A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal float <waiterTime>__0;

		[Token(Token = "0x40013A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		internal WaitForSeconds <waiter>__0;

		[Token(Token = "0x40013A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal int <firstPassLimit>__0;

		[Token(Token = "0x40013A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		internal int <increment>__0;

		[Token(Token = "0x40013A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal int <i>__1;

		[Token(Token = "0x40013AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		internal int <remaining>__0;

		[Token(Token = "0x40013AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal int <i>__2;

		[Token(Token = "0x40013AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		internal UIStat $this;

		[Token(Token = "0x40013AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		internal object $current;

		[Token(Token = "0x40013AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		internal bool $disposing;

		[Token(Token = "0x40013AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		internal int $PC;

		[Token(Token = "0x17000309")]
		private object System.Collections.Generic.IEnumerator<object>.Current
		{
			[Token(Token = "0x6001925")]
			[Address(RVA = "0x402B60", Offset = "0x402B60", VA = "0x402B60", Slot = "8")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700030A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001926")]
			[Address(RVA = "0x402B68", Offset = "0x402B68", VA = "0x402B68", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001923")]
		[Address(RVA = "0x402790", Offset = "0x402790", VA = "0x402790")]
		[DebuggerHidden]
		public <UpdateStatAnimationOverTreshold>c__Iterator1()
		{
		}

		[Token(Token = "0x6001924")]
		[Address(RVA = "0x402800", Offset = "0x402800", VA = "0x402800", Slot = "5")]
		public bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001927")]
		[Address(RVA = "0x402B70", Offset = "0x402B70", VA = "0x402B70", Slot = "7")]
		[DebuggerHidden]
		public void Dispose()
		{
		}

		[Token(Token = "0x6001928")]
		[Address(RVA = "0x402B84", Offset = "0x402B84", VA = "0x402B84", Slot = "6")]
		[DebuggerHidden]
		public void Reset()
		{
		}
	}

	[Token(Token = "0x4000CEA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static float ToTresholdTime;

	[Token(Token = "0x4000CEB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public bool WantOverThreshold;

	[Token(Token = "0x4000CEC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public UIMedal medal;

	[Token(Token = "0x4000CED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	internal int targetValue;

	[Token(Token = "0x4000CEE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private int treshold;

	[Token(Token = "0x4000CEF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	internal int currentValue;

	[Token(Token = "0x4000CF0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private TextMeshProUGUI text;

	[Token(Token = "0x4000CF1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private GameObject check;

	[Token(Token = "0x4000CF2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private RawImage back;

	[Token(Token = "0x6000B83")]
	[Address(RVA = "0x401F4C", Offset = "0x401F4C", VA = "0x401F4C")]
	public UIStat()
	{
	}

	[Token(Token = "0x6000B84")]
	[Address(RVA = "0x401F64", Offset = "0x401F64", VA = "0x401F64", Slot = "4")]
	public override bool IsThresholdOK()
	{
		return default(bool);
	}

	[Token(Token = "0x6000B85")]
	[Address(RVA = "0x401F98", Offset = "0x401F98", VA = "0x401F98")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000B86")]
	[Address(RVA = "0x402104", Offset = "0x402104", VA = "0x402104", Slot = "6")]
	public override void UpdateState(int value, int treshold)
	{
	}

	[Token(Token = "0x6000B87")]
	[Address(RVA = "0x402134", Offset = "0x402134", VA = "0x402134")]
	private void UpdateText(int value, float duration = 0f)
	{
	}

	[Token(Token = "0x6000B88")]
	[Address(RVA = "0x40232C", Offset = "0x40232C", VA = "0x40232C")]
	private void SetCheck(bool value)
	{
	}

	[Token(Token = "0x6000B89")]
	[Address(RVA = "0x402674", Offset = "0x402674", VA = "0x402674", Slot = "5")]
	public override IEnumerator UpdateStatAnimation()
	{
		return null;
	}

	[Token(Token = "0x6000B8A")]
	[Address(RVA = "0x402708", Offset = "0x402708", VA = "0x402708")]
	[DebuggerHidden]
	private IEnumerator UpdateStatAnimationUnderTreshold()
	{
		return null;
	}

	[Token(Token = "0x6000B8B")]
	[Address(RVA = "0x402688", Offset = "0x402688", VA = "0x402688")]
	[DebuggerHidden]
	private IEnumerator UpdateStatAnimationOverTreshold()
	{
		return null;
	}
}
[Token(Token = "0x20001EA")]
public abstract class UIStatBase : MonoBehaviour
{
	[Token(Token = "0x6000B8D")]
	[Address(RVA = "0x401F5C", Offset = "0x401F5C", VA = "0x401F5C")]
	protected UIStatBase()
	{
	}

	[Token(Token = "0x6000B8E")]
	public abstract bool IsThresholdOK();

	[Token(Token = "0x6000B8F")]
	public abstract IEnumerator UpdateStatAnimation();

	[Token(Token = "0x6000B90")]
	public abstract void UpdateState(int value, int threshold);
}
[Token(Token = "0x20001EB")]
public class UIStatTablet : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x20001EC")]
	private class AdditionalStat
	{
		[Token(Token = "0x4000CFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public bool statCompletion;

		[Token(Token = "0x4000CFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9")]
		public bool score;

		[Token(Token = "0x170000ED")]
		public int lenght
		{
			[Token(Token = "0x6000B98")]
			[Address(RVA = "0x4038E4", Offset = "0x4038E4", VA = "0x4038E4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x6000B97")]
		[Address(RVA = "0x4042E4", Offset = "0x4042E4", VA = "0x4042E4")]
		public AdditionalStat()
		{
		}
	}

	[Token(Token = "0x2000357")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1F8AB8", Offset = "0x1F8AB8")]
	private sealed class <ShowTime>c__Iterator0 : IEnumerator, IDisposable, IEnumerator<object>
	{
		[Token(Token = "0x40013B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal int <okCount>__0;

		[Token(Token = "0x40013B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		internal UIStatBase[] $locvar0;

		[Token(Token = "0x40013B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal int $locvar1;

		[Token(Token = "0x40013B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		internal UIStatBase <stat>__1;

		[Token(Token = "0x40013B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal UIStatTablet $this;

		[Token(Token = "0x40013B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		internal object $current;

		[Token(Token = "0x40013B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal bool $disposing;

		[Token(Token = "0x40013B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		internal int $PC;

		[Token(Token = "0x1700030B")]
		private object System.Collections.Generic.IEnumerator<object>.Current
		{
			[Token(Token = "0x600192B")]
			[Address(RVA = "0x40423C", Offset = "0x40423C", VA = "0x40423C", Slot = "8")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700030C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600192C")]
			[Address(RVA = "0x404244", Offset = "0x404244", VA = "0x404244", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001929")]
		[Address(RVA = "0x403F04", Offset = "0x403F04", VA = "0x403F04")]
		[DebuggerHidden]
		public <ShowTime>c__Iterator0()
		{
		}

		[Token(Token = "0x600192A")]
		[Address(RVA = "0x403F94", Offset = "0x403F94", VA = "0x403F94", Slot = "5")]
		public bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600192D")]
		[Address(RVA = "0x40424C", Offset = "0x40424C", VA = "0x40424C", Slot = "7")]
		[DebuggerHidden]
		public void Dispose()
		{
		}

		[Token(Token = "0x600192E")]
		[Address(RVA = "0x404260", Offset = "0x404260", VA = "0x404260", Slot = "6")]
		[DebuggerHidden]
		public void Reset()
		{
		}
	}

	[Token(Token = "0x4000CF3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public int[] values;

	[Token(Token = "0x4000CF4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int[] treshold;

	[Token(Token = "0x4000CF5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	[SerializeField]
	private AdditionalStat additionalStat;

	[Token(Token = "0x4000CF6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private UIStatBase[] stats;

	[Token(Token = "0x4000CF7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool Sandbox;

	[Token(Token = "0x4000CF8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int prevPrison;

	[Token(Token = "0x4000CF9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private DataToLoad data;

	[Token(Token = "0x6000B91")]
	[Address(RVA = "0x402FD8", Offset = "0x402FD8", VA = "0x402FD8")]
	public UIStatTablet()
	{
	}

	[Token(Token = "0x6000B92")]
	[Address(RVA = "0x402FE0", Offset = "0x402FE0", VA = "0x402FE0")]
	private void InitValue()
	{
	}

	[Token(Token = "0x6000B93")]
	[Address(RVA = "0x4032A0", Offset = "0x4032A0", VA = "0x4032A0")]
	public void Start()
	{
	}

	[Token(Token = "0x6000B94")]
	[Address(RVA = "0x4038F4", Offset = "0x4038F4", VA = "0x4038F4")]
	private void PointageFinal()
	{
	}

	[Token(Token = "0x6000B95")]
	[Address(RVA = "0x403E84", Offset = "0x403E84", VA = "0x403E84")]
	[DebuggerHidden]
	private IEnumerator ShowTime()
	{
		return null;
	}

	[Token(Token = "0x6000B96")]
	[Address(RVA = "0x403F0C", Offset = "0x403F0C", VA = "0x403F0C")]
	public void Menu()
	{
	}
}
[Token(Token = "0x20001ED")]
public class StaticHint : MonoBehaviour
{
	[Token(Token = "0x4000CFC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public NVRInteractableItem linkedObj;

	[Token(Token = "0x4000CFD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public bool activeOnAttach;

	[Token(Token = "0x4000CFE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
	public bool permaDeath;

	[Token(Token = "0x4000CFF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public Vector3 lookDirScale;

	[Token(Token = "0x4000D00")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Transform head;

	[Token(Token = "0x4000D01")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Transform[] children;

	[Token(Token = "0x4000D02")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Animator[] anims;

	[Token(Token = "0x4000D03")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private bool active;

	[Token(Token = "0x4000D04")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D")]
	private bool dead;

	[Token(Token = "0x6000B99")]
	[Address(RVA = "0xCB9794", Offset = "0xCB9794", VA = "0xCB9794")]
	public StaticHint()
	{
	}

	[Token(Token = "0x6000B9A")]
	[Address(RVA = "0xCB983C", Offset = "0xCB983C", VA = "0xCB983C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000B9B")]
	[Address(RVA = "0xCB99F0", Offset = "0xCB99F0", VA = "0xCB99F0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000B9C")]
	[Address(RVA = "0xCB9E40", Offset = "0xCB9E40", VA = "0xCB9E40")]
	private void setActive(bool state)
	{
	}
}
[Token(Token = "0x20001EE")]
public class StopIsolement : MonoBehaviour
{
	[Token(Token = "0x2000358")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1F8B28", Offset = "0x1F8B28")]
	private sealed class <Unactive>c__Iterator0 : IEnumerator, IDisposable, IEnumerator<object>
	{
		[Token(Token = "0x40013B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal StopIsolement $this;

		[Token(Token = "0x40013B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		internal object $current;

		[Token(Token = "0x40013BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal bool $disposing;

		[Token(Token = "0x40013BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		internal int $PC;

		[Token(Token = "0x1700030D")]
		private object System.Collections.Generic.IEnumerator<object>.Current
		{
			[Token(Token = "0x6001931")]
			[Address(RVA = "0xCBB31C", Offset = "0xCBB31C", VA = "0xCBB31C", Slot = "8")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700030E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001932")]
			[Address(RVA = "0xCBB324", Offset = "0xCBB324", VA = "0xCBB324", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600192F")]
		[Address(RVA = "0xCBB218", Offset = "0xCBB218", VA = "0xCBB218")]
		[DebuggerHidden]
		public <Unactive>c__Iterator0()
		{
		}

		[Token(Token = "0x6001930")]
		[Address(RVA = "0xCBB220", Offset = "0xCBB220", VA = "0xCBB220", Slot = "5")]
		public bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001933")]
		[Address(RVA = "0xCBB32C", Offset = "0xCBB32C", VA = "0xCBB32C", Slot = "7")]
		[DebuggerHidden]
		public void Dispose()
		{
		}

		[Token(Token = "0x6001934")]
		[Address(RVA = "0xCBB340", Offset = "0xCBB340", VA = "0xCBB340", Slot = "6")]
		[DebuggerHidden]
		public void Reset()
		{
		}
	}

	[Token(Token = "0x4000D05")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private bool handOver;

	[Token(Token = "0x4000D06")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private NVRHand hand;

	[Token(Token = "0x4000D07")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private bool active;

	[Token(Token = "0x6000B9D")]
	[Address(RVA = "0xCBAEE8", Offset = "0xCBAEE8", VA = "0xCBAEE8")]
	public StopIsolement()
	{
	}

	[Token(Token = "0x6000B9E")]
	[Address(RVA = "0xCBAEF0", Offset = "0xCBAEF0", VA = "0xCBAEF0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000B9F")]
	[Address(RVA = "0xCBB0B8", Offset = "0xCBB0B8", VA = "0xCBB0B8")]
	private void OnTriggerStay(Collider col)
	{
	}

	[Token(Token = "0x6000BA0")]
	[Address(RVA = "0xCBB038", Offset = "0xCBB038", VA = "0xCBB038")]
	[DebuggerHidden]
	private IEnumerator Unactive()
	{
		return null;
	}
}
[Token(Token = "0x20001EF")]
public enum CurrentMenu
{
	[Token(Token = "0x4000D09")]
	None,
	[Token(Token = "0x4000D0A")]
	Root,
	[Token(Token = "0x4000D0B")]
	Materials,
	[Token(Token = "0x4000D0C")]
	Tools,
	[Token(Token = "0x4000D0D")]
	Furniture,
	[Token(Token = "0x4000D0E")]
	Jobs
}
[Token(Token = "0x20001F0")]
public class DealerMenu
{
	[Token(Token = "0x4000D0F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public GameObject obj;

	[Token(Token = "0x4000D10")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Animator anim;

	[Token(Token = "0x170000EE")]
	public bool activeSelf
	{
		[Token(Token = "0x6000BA2")]
		[Address(RVA = "0xC4C4F8", Offset = "0xC4C4F8", VA = "0xC4C4F8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170000EF")]
	public bool activeInHierarchy
	{
		[Token(Token = "0x6000BA3")]
		[Address(RVA = "0xC4C520", Offset = "0xC4C520", VA = "0xC4C520")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000BA1")]
	[Address(RVA = "0xC4C470", Offset = "0xC4C470", VA = "0xC4C470")]
	public DealerMenu(GameObject o)
	{
	}

	[Token(Token = "0x6000BA4")]
	[Address(RVA = "0xC4C548", Offset = "0xC4C548", VA = "0xC4C548")]
	public void SetActive(bool state)
	{
	}
}
[Token(Token = "0x20001F1")]
public class TabletManager : MonoBehaviour
{
	[Token(Token = "0x4000D11")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static TabletManager Instance;

	[Token(Token = "0x4000D12")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	[HideInInspector]
	public GameObject BlackFilter;

	[Token(Token = "0x4000D13")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[HideInInspector]
	public GameObject sellingBox;

	[Token(Token = "0x4000D14")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	[HideInInspector]
	public Animator boxAnim;

	[Token(Token = "0x4000D15")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[HideInInspector]
	public Animator bulleAnim;

	[Token(Token = "0x4000D16")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[HideInInspector]
	public GameObject laBulle;

	[Token(Token = "0x4000D17")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[HideInInspector]
	public bool doingTheBoxAnim;

	[Token(Token = "0x4000D18")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[HideInInspector]
	public DealerJobScript jobScript;

	[Token(Token = "0x4000D19")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[HideInInspector]
	public DealerTradeScript tradeScript;

	[Token(Token = "0x4000D1A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[HideInInspector]
	public UITextureAnimator texture;

	[Token(Token = "0x4000D1B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[HideInInspector]
	public DealerMenu menuPrincipal;

	[Token(Token = "0x4000D1C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[HideInInspector]
	public DealerMenu menuSpecial;

	[Token(Token = "0x4000D1D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[HideInInspector]
	public DealerMenu menuRessources;

	[Token(Token = "0x4000D1E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[HideInInspector]
	public DealerMenu menuGeneral;

	[Token(Token = "0x4000D1F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[HideInInspector]
	public DealerMenu menuHelp;

	[Token(Token = "0x4000D20")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[HideInInspector]
	public DealerMenu menuFurniture;

	[Token(Token = "0x4000D21")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[HideInInspector]
	public DealerMenu menuTools;

	[Token(Token = "0x4000D22")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[HideInInspector]
	public DealerMenu menuJobs;

	[Token(Token = "0x4000D23")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[HideInInspector]
	public DealerMenu menuRep;

	[Token(Token = "0x4000D24")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public TextMeshProUGUI materialsLabel;

	[Token(Token = "0x4000D25")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public TextMeshProUGUI toolsLabel;

	[Token(Token = "0x4000D26")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public TextMeshProUGUI furnitureLabel;

	[Token(Token = "0x4000D27")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public TextMeshProUGUI jobsLabel;

	[Token(Token = "0x4000D28")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public GenericTooltip mainHelpHint;

	[Token(Token = "0x6000BA5")]
	[Address(RVA = "0xCBB5D8", Offset = "0xCBB5D8", VA = "0xCBB5D8")]
	public TabletManager()
	{
	}

	[Token(Token = "0x6000BA6")]
	[Address(RVA = "0xCBB5E0", Offset = "0xCBB5E0", VA = "0xCBB5E0")]
	public void GetReferences()
	{
	}

	[Token(Token = "0x6000BA7")]
	[Address(RVA = "0xCBBCB4", Offset = "0xCBBCB4", VA = "0xCBBCB4")]
	public void Initialize()
	{
	}

	[Token(Token = "0x6000BA8")]
	[Address(RVA = "0xCBBCB8", Offset = "0xCBBCB8", VA = "0xCBBCB8")]
	public void SetTabletButtonsLabels()
	{
	}

	[Token(Token = "0x6000BA9")]
	[Address(RVA = "0xCBBE64", Offset = "0xCBBE64", VA = "0xCBBE64")]
	public CurrentMenu GetCurrentActiveMenu()
	{
		return default(CurrentMenu);
	}

	[Token(Token = "0x6000BAA")]
	[Address(RVA = "0xCBBF40", Offset = "0xCBBF40", VA = "0xCBBF40")]
	public void MenuActive()
	{
	}

	[Token(Token = "0x6000BAB")]
	[Address(RVA = "0xCBC070", Offset = "0xCBC070", VA = "0xCBC070")]
	public void MenuUnactive(bool animCanvas = false, bool skipGeneral = false, bool skipFilter = false)
	{
	}

	[Token(Token = "0x6000BAC")]
	[Address(RVA = "0xCBC4E8", Offset = "0xCBC4E8", VA = "0xCBC4E8")]
	public void DealOpen()
	{
	}

	[Token(Token = "0x6000BAD")]
	[Address(RVA = "0xCBC744", Offset = "0xCBC744", VA = "0xCBC744")]
	public void DealClosed()
	{
	}

	[Token(Token = "0x6000BAE")]
	[Address(RVA = "0xCBC9C4", Offset = "0xCBC9C4", VA = "0xCBC9C4")]
	public void DealRessourcesWindow()
	{
	}

	[Token(Token = "0x6000BAF")]
	[Address(RVA = "0xCBCAC8", Offset = "0xCBCAC8", VA = "0xCBCAC8")]
	public void DealToolsWindow()
	{
	}

	[Token(Token = "0x6000BB0")]
	[Address(RVA = "0xCBCBCC", Offset = "0xCBCBCC", VA = "0xCBCBCC")]
	public void DealFurnitureWindow()
	{
	}

	[Token(Token = "0x6000BB1")]
	[Address(RVA = "0xCBCCD0", Offset = "0xCBCCD0", VA = "0xCBCCD0")]
	public void DealRootWindow(bool firstload = false)
	{
	}

	[Token(Token = "0x6000BB2")]
	[Address(RVA = "0xCBCE80", Offset = "0xCBCE80", VA = "0xCBCE80")]
	public void DealSpecialWindow()
	{
	}

	[Token(Token = "0x6000BB3")]
	[Address(RVA = "0xCBCE88", Offset = "0xCBCE88", VA = "0xCBCE88")]
	public void DealJobWindow(int fromNewTier = 0)
	{
	}
}
[Token(Token = "0x20001F2")]
public class TierTrackerWrapper : SpawnableObject
{
	[Token(Token = "0x4000D29")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Image filled;

	[Token(Token = "0x6000BB4")]
	[Address(RVA = "0xCBF96C", Offset = "0xCBF96C", VA = "0xCBF96C")]
	public TierTrackerWrapper()
	{
	}

	[Token(Token = "0x6000BB5")]
	[Address(RVA = "0xCBF974", Offset = "0xCBF974", VA = "0xCBF974", Slot = "4")]
	public override void Reset()
	{
	}

	[Token(Token = "0x6000BB6")]
	[Address(RVA = "0xCBF978", Offset = "0xCBF978", VA = "0xCBF978")]
	public void SetUnfilled()
	{
	}

	[Token(Token = "0x6000BB7")]
	[Address(RVA = "0xCBF9C0", Offset = "0xCBF9C0", VA = "0xCBF9C0")]
	public void SetFilled()
	{
	}
}
[Serializable]
[Token(Token = "0x20001F3")]
public class TutorialTextInfos
{
	[Token(Token = "0x4000D2A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public string name;

	[Token(Token = "0x4000D2B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public int steps;

	[Token(Token = "0x4000D2C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int introLines;

	[Token(Token = "0x4000D2D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public int firstID;

	[Token(Token = "0x4000D2E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string[] texts;

	[Token(Token = "0x6000BB8")]
	[Address(RVA = "0x3FCA0C", Offset = "0x3FCA0C", VA = "0x3FCA0C")]
	public TutorialTextInfos()
	{
	}
}
[Token(Token = "0x20001F4")]
public class TutoTextManager : MonoBehaviour
{
	[Token(Token = "0x20001F5")]
	private enum Layouts
	{
		[Token(Token = "0x4000D37")]
		Steps,
		[Token(Token = "0x4000D38")]
		Title,
		[Token(Token = "0x4000D39")]
		MainTitle,
		[Token(Token = "0x4000D3A")]
		PSA,
		[Token(Token = "0x4000D3B")]
		End
	}

	[Token(Token = "0x4000D2F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private Transform[] layoutTransforms;

	[Token(Token = "0x4000D30")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private object[] enter;

	[Token(Token = "0x4000D31")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public TutorialTextInfos[] tutorialStrings;

	[Token(Token = "0x4000D32")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TutorialTextInfos currentTutorial;

	[Token(Token = "0x4000D33")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private int _intProgress;

	[Token(Token = "0x4000D34")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private string _tempCraftMemory;

	[Token(Token = "0x4000D35")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private TutorialManager _tutorialManager;

	[Token(Token = "0x6000BB9")]
	[Address(RVA = "0x3FCA14", Offset = "0x3FCA14", VA = "0x3FCA14")]
	public TutoTextManager()
	{
	}

	[Token(Token = "0x6000BBA")]
	[Address(RVA = "0x3FCB08", Offset = "0x3FCB08", VA = "0x3FCB08")]
	private void Start()
	{
	}

	[Token(Token = "0x6000BBB")]
	[Address(RVA = "0x3FCB0C", Offset = "0x3FCB0C", VA = "0x3FCB0C")]
	public void Initialize()
	{
	}

	[Token(Token = "0x6000BBC")]
	[Address(RVA = "0x3FD6B0", Offset = "0x3FD6B0", VA = "0x3FD6B0")]
	private void OnStepChangeHandler()
	{
	}

	[Token(Token = "0x6000BBD")]
	[Address(RVA = "0x3FD6C0", Offset = "0x3FD6C0", VA = "0x3FD6C0")]
	private void OnTutorialChangeHandler()
	{
	}

	[Token(Token = "0x6000BBE")]
	[Address(RVA = "0x3FD734", Offset = "0x3FD734", VA = "0x3FD734")]
	private void OnResetTutorialHandler()
	{
	}

	[Token(Token = "0x6000BBF")]
	[Address(RVA = "0x3FD714", Offset = "0x3FD714", VA = "0x3FD714")]
	private void SetBaseTutorial(string craftName)
	{
	}

	[Token(Token = "0x6000BC0")]
	[Address(RVA = "0x3FD890", Offset = "0x3FD890", VA = "0x3FD890")]
	public void SetTutorialInMemory()
	{
	}

	[Token(Token = "0x6000BC1")]
	[Address(RVA = "0x3FD8B4", Offset = "0x3FD8B4", VA = "0x3FD8B4")]
	public void ManualIncrement()
	{
	}

	[Token(Token = "0x6000BC2")]
	[Address(RVA = "0x3FD624", Offset = "0x3FD624", VA = "0x3FD624")]
	public void DeactivateSlates()
	{
	}

	[Token(Token = "0x6000BC3")]
	[Address(RVA = "0x3FD8C4", Offset = "0x3FD8C4", VA = "0x3FD8C4")]
	public void ActivateCurrentTitle()
	{
	}

	[Token(Token = "0x6000BC4")]
	[Address(RVA = "0x3FDBD0", Offset = "0x3FDBD0", VA = "0x3FDBD0")]
	public void ActivateGeneralIntro()
	{
	}

	[Token(Token = "0x6000BC5")]
	[Address(RVA = "0x3FDD64", Offset = "0x3FDD64", VA = "0x3FDD64")]
	public void ActivateCurrentContent()
	{
	}

	[Token(Token = "0x6000BC6")]
	[Address(RVA = "0x3FDEB8", Offset = "0x3FDEB8", VA = "0x3FDEB8")]
	public void ActivateAndIncrementContent()
	{
	}

	[Token(Token = "0x6000BC7")]
	[Address(RVA = "0x3FE018", Offset = "0x3FE018", VA = "0x3FE018")]
	public void ActivateTitleSlate()
	{
	}

	[Token(Token = "0x6000BC8")]
	[Address(RVA = "0x3FE020", Offset = "0x3FE020", VA = "0x3FE020")]
	public void ActivatePSA()
	{
	}

	[Token(Token = "0x6000BC9")]
	[Address(RVA = "0x3FE028", Offset = "0x3FE028", VA = "0x3FE028")]
	public void ActivateEnd()
	{
	}

	[Token(Token = "0x6000BCA")]
	[Address(RVA = "0x3FD75C", Offset = "0x3FD75C", VA = "0x3FD75C")]
	private TutorialTextInfos GetTutorialStrings(string craftName)
	{
		return null;
	}

	[Token(Token = "0x6000BCB")]
	[Address(RVA = "0x3FCE20", Offset = "0x3FCE20", VA = "0x3FCE20")]
	private void SetStandardSlates()
	{
	}

	[Token(Token = "0x6000BCC")]
	[Address(RVA = "0x3FD9E8", Offset = "0x3FD9E8", VA = "0x3FD9E8")]
	private void ActivateSlate(Layouts slate)
	{
	}

	[Token(Token = "0x6000BCD")]
	[Address(RVA = "0x3FD404", Offset = "0x3FD404", VA = "0x3FD404")]
	private void SetSpecificSlates()
	{
	}

	[Token(Token = "0x6000BCE")]
	[Address(RVA = "0x3FCCCC", Offset = "0x3FCCCC", VA = "0x3FCCCC")]
	private void GetSlateTransforms()
	{
	}

	[Token(Token = "0x6000BCF")]
	[Address(RVA = "0x3FDD60", Offset = "0x3FDD60", VA = "0x3FDD60")]
	private void ScaleCanvasToContent(string s)
	{
	}

	[Token(Token = "0x6000BD0")]
	[Address(RVA = "0x3FE030", Offset = "0x3FE030", VA = "0x3FE030")]
	public void VideoPreload(string name)
	{
	}

	[Token(Token = "0x6000BD1")]
	[Address(RVA = "0x3FE060", Offset = "0x3FE060", VA = "0x3FE060")]
	public void VideoLoop(string name)
	{
	}

	[Token(Token = "0x6000BD2")]
	[Address(RVA = "0x3FE090", Offset = "0x3FE090", VA = "0x3FE090")]
	public void VideoPlay(string name)
	{
	}

	[Token(Token = "0x6000BD3")]
	[Address(RVA = "0x3FE0C0", Offset = "0x3FE0C0", VA = "0x3FE0C0")]
	public void VideoUnpause(string name)
	{
	}

	[Token(Token = "0x6000BD4")]
	[Address(RVA = "0x3FE0F0", Offset = "0x3FE0F0", VA = "0x3FE0F0")]
	public void VideoDone()
	{
	}
}
[Token(Token = "0x20001F6")]
public class UIDisplayTradeValue : MonoBehaviour
{
	[Token(Token = "0x4000D3C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private TextMeshProUGUI textNumberWanted;

	[Token(Token = "0x4000D3D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private TextMeshProUGUI textExplanation;

	[Token(Token = "0x4000D3E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private Image backgroundImage;

	[Token(Token = "0x4000D3F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Color devoirDeLargent;

	[Token(Token = "0x4000D40")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Color gagnerDeLargent;

	[Token(Token = "0x6000BD5")]
	[Address(RVA = "0x400868", Offset = "0x400868", VA = "0x400868")]
	public UIDisplayTradeValue()
	{
	}

	[Token(Token = "0x6000BD6")]
	[Address(RVA = "0x400870", Offset = "0x400870", VA = "0x400870")]
	private void Start()
	{
	}

	[Token(Token = "0x6000BD7")]
	[Address(RVA = "0x400A08", Offset = "0x400A08", VA = "0x400A08")]
	private void Update()
	{
	}
}
[Token(Token = "0x20001F7")]
public class UIManager : MonoBehaviour
{
	[Token(Token = "0x4000D41")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static UIManager Instance;

	[Token(Token = "0x4000D42")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public GameObject headDisplayPrefab;

	[Token(Token = "0x4000D43")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public GameObject morningSearchDisplay;

	[Token(Token = "0x4000D44")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public UnityEvent headDisplayEnding;

	[Token(Token = "0x4000D45")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public UnityEvent searchDisplayEnding;

	[Token(Token = "0x4000D46")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private GameObject _hDInst;

	[Token(Token = "0x4000D47")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private MorningDate _cocorico;

	[Token(Token = "0x4000D48")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private GameObject msdObj;

	[Token(Token = "0x4000D49")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private MorningSearchDisplay msd;

	[Token(Token = "0x6000BD8")]
	[Address(RVA = "0x40105C", Offset = "0x40105C", VA = "0x40105C")]
	public UIManager()
	{
	}

	[Token(Token = "0x6000BD9")]
	[Address(RVA = "0x401064", Offset = "0x401064", VA = "0x401064")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000BDA")]
	[Address(RVA = "0x4010C8", Offset = "0x4010C8", VA = "0x4010C8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000BDB")]
	[Address(RVA = "0x401190", Offset = "0x401190", VA = "0x401190")]
	public void SwitchDate()
	{
	}

	[Token(Token = "0x6000BDC")]
	[Address(RVA = "0x401798", Offset = "0x401798", VA = "0x401798")]
	private void OnDestroy()
	{
	}
}
[Token(Token = "0x20001F8")]
public enum ColorFor
{
	[Token(Token = "0x4000D4B")]
	SpecialWindow,
	[Token(Token = "0x4000D4C")]
	RootWindow,
	[Token(Token = "0x4000D4D")]
	FurnitureWindow,
	[Token(Token = "0x4000D4E")]
	RessourcesWindow,
	[Token(Token = "0x4000D4F")]
	ToolsWindow,
	[Token(Token = "0x4000D50")]
	JobsWindow
}
[Token(Token = "0x20001F9")]
public class UITextureAnimator : MonoBehaviour
{
	[Token(Token = "0x4000D51")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private Image texture;

	[Token(Token = "0x4000D52")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Color[] colors;

	[Token(Token = "0x6000BDD")]
	[Address(RVA = "0x4042EC", Offset = "0x4042EC", VA = "0x4042EC")]
	public UITextureAnimator()
	{
	}

	[Token(Token = "0x6000BDE")]
	[Address(RVA = "0x4042F4", Offset = "0x4042F4", VA = "0x4042F4")]
	public void Initialize()
	{
	}

	[Token(Token = "0x6000BDF")]
	[Address(RVA = "0x40441C", Offset = "0x40441C", VA = "0x40441C")]
	public void SetColor(ColorFor c)
	{
	}
}
[Token(Token = "0x20001FA")]
public class UpdateMaskFromScrollbar : MonoBehaviour
{
	[Token(Token = "0x2000359")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1F8CB8", Offset = "0x1F8CB8")]
	private sealed class <LateStart>c__Iterator0 : IEnumerator, IDisposable, IEnumerator<object>
	{
		[Token(Token = "0x40013BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal UpdateMaskFromScrollbar $this;

		[Token(Token = "0x40013BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		internal object $current;

		[Token(Token = "0x40013BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal bool $disposing;

		[Token(Token = "0x40013BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		internal int $PC;

		[Token(Token = "0x1700030F")]
		private object System.Collections.Generic.IEnumerator<object>.Current
		{
			[Token(Token = "0x6001937")]
			[Address(RVA = "0x419D08", Offset = "0x419D08", VA = "0x419D08", Slot = "8")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000310")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001938")]
			[Address(RVA = "0x419D10", Offset = "0x419D10", VA = "0x419D10", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001935")]
		[Address(RVA = "0x41994C", Offset = "0x41994C", VA = "0x41994C")]
		[DebuggerHidden]
		public <LateStart>c__Iterator0()
		{
		}

		[Token(Token = "0x6001936")]
		[Address(RVA = "0x419C5C", Offset = "0x419C5C", VA = "0x419C5C", Slot = "5")]
		public bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001939")]
		[Address(RVA = "0x419D18", Offset = "0x419D18", VA = "0x419D18", Slot = "7")]
		[DebuggerHidden]
		public void Dispose()
		{
		}

		[Token(Token = "0x600193A")]
		[Address(RVA = "0x419D2C", Offset = "0x419D2C", VA = "0x419D2C", Slot = "6")]
		[DebuggerHidden]
		public void Reset()
		{
		}
	}

	[Token(Token = "0x4000D53")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private Scrollbar bar;

	[Token(Token = "0x4000D54")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private SoftMask mask;

	[Token(Token = "0x4000D55")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private int shadeHeight;

	[Token(Token = "0x6000BE0")]
	[Address(RVA = "0x419774", Offset = "0x419774", VA = "0x419774")]
	public UpdateMaskFromScrollbar()
	{
	}

	[Token(Token = "0x6000BE1")]
	[Address(RVA = "0x419784", Offset = "0x419784", VA = "0x419784")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000BE2")]
	[Address(RVA = "0x4198CC", Offset = "0x4198CC", VA = "0x4198CC")]
	[DebuggerHidden]
	private IEnumerator LateStart()
	{
		return null;
	}

	[Token(Token = "0x6000BE3")]
	[Address(RVA = "0x419954", Offset = "0x419954", VA = "0x419954")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000BE4")]
	[Address(RVA = "0x419A30", Offset = "0x419A30", VA = "0x419A30")]
	private void valueChange(float value)
	{
	}
}
[Token(Token = "0x20001FB")]
public class Utilities
{
	[Token(Token = "0x6000BE5")]
	[Address(RVA = "0x419DB0", Offset = "0x419DB0", VA = "0x419DB0")]
	public Utilities()
	{
	}

	[Token(Token = "0x6000BE6")]
	[Address(RVA = "0x419DB8", Offset = "0x419DB8", VA = "0x419DB8")]
	public static Transform FindInChildren(Transform theParent, string name)
	{
		return null;
	}
}
[Token(Token = "0x20001FC")]
public class AkCommunicationSettings : IDisposable
{
	[Token(Token = "0x4000D56")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private IntPtr swigCPtr;

	[Token(Token = "0x4000D57")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	protected bool swigCMemOwn;

	[Token(Token = "0x170000F0")]
	public uint uPoolSize
	{
		[Token(Token = "0x6000BEE")]
		[Address(RVA = "0x47A33C", Offset = "0x47A33C", VA = "0x47A33C")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x6000BED")]
		[Address(RVA = "0x4788E4", Offset = "0x4788E4", VA = "0x4788E4")]
		set
		{
		}
	}

	[Token(Token = "0x170000F1")]
	public ushort uDiscoveryBroadcastPort
	{
		[Token(Token = "0x6000BF0")]
		[Address(RVA = "0x47A3C8", Offset = "0x47A3C8", VA = "0x47A3C8")]
		get
		{
			return default(ushort);
		}
		[Token(Token = "0x6000BEF")]
		[Address(RVA = "0x478978", Offset = "0x478978", VA = "0x478978")]
		set
		{
		}
	}

	[Token(Token = "0x170000F2")]
	public ushort uCommandPort
	{
		[Token(Token = "0x6000BF2")]
		[Address(RVA = "0x47A454", Offset = "0x47A454", VA = "0x47A454")]
		get
		{
			return default(ushort);
		}
		[Token(Token = "0x6000BF1")]
		[Address(RVA = "0x478A0C", Offset = "0x478A0C", VA = "0x478A0C")]
		set
		{
		}
	}

	[Token(Token = "0x170000F3")]
	public ushort uNotificationPort
	{
		[Token(Token = "0x6000BF4")]
		[Address(RVA = "0x47A4E0", Offset = "0x47A4E0", VA = "0x47A4E0")]
		get
		{
			return default(ushort);
		}
		[Token(Token = "0x6000BF3")]
		[Address(RVA = "0x478AA0", Offset = "0x478AA0", VA = "0x478AA0")]
		set
		{
		}
	}

	[Token(Token = "0x170000F4")]
	public bool bInitSystemLib
	{
		[Token(Token = "0x6000BF6")]
		[Address(RVA = "0x47A56C", Offset = "0x47A56C", VA = "0x47A56C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000BF5")]
		[Address(RVA = "0x478B34", Offset = "0x478B34", VA = "0x478B34")]
		set
		{
		}
	}

	[Token(Token = "0x170000F5")]
	public string szAppNetworkName
	{
		[Token(Token = "0x6000BF8")]
		[Address(RVA = "0x47A5F8", Offset = "0x47A5F8", VA = "0x47A5F8")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000BF7")]
		[Address(RVA = "0x478BC8", Offset = "0x478BC8", VA = "0x478BC8")]
		set
		{
		}
	}

	[Token(Token = "0x6000BE7")]
	[Address(RVA = "0x47A108", Offset = "0x47A108", VA = "0x47A108")]
	internal AkCommunicationSettings(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x6000BE8")]
	[Address(RVA = "0x4720A4", Offset = "0x4720A4", VA = "0x4720A4")]
	public AkCommunicationSettings()
	{
	}

	[Token(Token = "0x6000BE9")]
	[Address(RVA = "0x47A130", Offset = "0x47A130", VA = "0x47A130")]
	internal static IntPtr getCPtr(AkCommunicationSettings obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6000BEA")]
	[Address(RVA = "0x47A188", Offset = "0x47A188", VA = "0x47A188", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x6000BEB")]
	[Address(RVA = "0x47A1B4", Offset = "0x47A1B4", VA = "0x47A1B4", Slot = "1")]
	~AkCommunicationSettings()
	{
	}

	[Token(Token = "0x6000BEC")]
	[Address(RVA = "0x47A214", Offset = "0x47A214", VA = "0x47A214", Slot = "6")]
	public virtual void Dispose()
	{
	}
}
[Token(Token = "0x20001FD")]
public enum AkMemPoolAttributes
{
	[Token(Token = "0x4000D59")]
	AkNoAlloc = 0,
	[Token(Token = "0x4000D5A")]
	AkMalloc = 1,
	[Token(Token = "0x4000D5B")]
	AkAllocMask = 1,
	[Token(Token = "0x4000D5C")]
	AkFixedSizeBlocksMode = 8,
	[Token(Token = "0x4000D5D")]
	AkBlockMgmtMask = 8
}
[Token(Token = "0x20001FE")]
public class AkPlatformInitSettings : IDisposable
{
	[Token(Token = "0x4000D5E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private IntPtr swigCPtr;

	[Token(Token = "0x4000D5F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	protected bool swigCMemOwn;

	[Token(Token = "0x170000F6")]
	public AkThreadProperties threadLEngine
	{
		[Token(Token = "0x6000C00")]
		[Address(RVA = "0x27C198", Offset = "0x27C198", VA = "0x27C198")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000BFF")]
		[Address(RVA = "0x27C030", Offset = "0x27C030", VA = "0x27C030")]
		set
		{
		}
	}

	[Token(Token = "0x170000F7")]
	public AkThreadProperties threadBankManager
	{
		[Token(Token = "0x6000C02")]
		[Address(RVA = "0x27C494", Offset = "0x27C494", VA = "0x27C494")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000C01")]
		[Address(RVA = "0x27C32C", Offset = "0x27C32C", VA = "0x27C32C")]
		set
		{
		}
	}

	[Token(Token = "0x170000F8")]
	public AkThreadProperties threadMonitor
	{
		[Token(Token = "0x6000C04")]
		[Address(RVA = "0x27C790", Offset = "0x27C790", VA = "0x27C790")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000C03")]
		[Address(RVA = "0x27C628", Offset = "0x27C628", VA = "0x27C628")]
		set
		{
		}
	}

	[Token(Token = "0x170000F9")]
	public float fLEngineDefaultPoolRatioThreshold
	{
		[Token(Token = "0x6000C06")]
		[Address(RVA = "0x27CA78", Offset = "0x27CA78", VA = "0x27CA78")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000C05")]
		[Address(RVA = "0x27C924", Offset = "0x27C924", VA = "0x27C924")]
		set
		{
		}
	}

	[Token(Token = "0x170000FA")]
	public uint uLEngineDefaultPoolSize
	{
		[Token(Token = "0x6000C08")]
		[Address(RVA = "0x27CD10", Offset = "0x27CD10", VA = "0x27CD10")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x6000C07")]
		[Address(RVA = "0x27CBBC", Offset = "0x27CBBC", VA = "0x27CBBC")]
		set
		{
		}
	}

	[Token(Token = "0x170000FB")]
	public uint uSampleRate
	{
		[Token(Token = "0x6000C0A")]
		[Address(RVA = "0x27CFA8", Offset = "0x27CFA8", VA = "0x27CFA8")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x6000C09")]
		[Address(RVA = "0x27CE54", Offset = "0x27CE54", VA = "0x27CE54")]
		set
		{
		}
	}

	[Token(Token = "0x170000FC")]
	public ushort uNumRefillsInVoice
	{
		[Token(Token = "0x6000C0C")]
		[Address(RVA = "0x27D240", Offset = "0x27D240", VA = "0x27D240")]
		get
		{
			return default(ushort);
		}
		[Token(Token = "0x6000C0B")]
		[Address(RVA = "0x27D0EC", Offset = "0x27D0EC", VA = "0x27D0EC")]
		set
		{
		}
	}

	[Token(Token = "0x170000FD")]
	public uint uChannelMask
	{
		[Token(Token = "0x6000C0E")]
		[Address(RVA = "0x27D4D8", Offset = "0x27D4D8", VA = "0x27D4D8")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x6000C0D")]
		[Address(RVA = "0x27D384", Offset = "0x27D384", VA = "0x27D384")]
		set
		{
		}
	}

	[Token(Token = "0x170000FE")]
	public bool bRoundFrameSizeToHWSize
	{
		[Token(Token = "0x6000C10")]
		[Address(RVA = "0x27D770", Offset = "0x27D770", VA = "0x27D770")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000C0F")]
		[Address(RVA = "0x27D61C", Offset = "0x27D61C", VA = "0x27D61C")]
		set
		{
		}
	}

	[Token(Token = "0x6000BF9")]
	[Address(RVA = "0x27BBFC", Offset = "0x27BBFC", VA = "0x27BBFC")]
	internal AkPlatformInitSettings(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x6000BFA")]
	[Address(RVA = "0x27BC24", Offset = "0x27BC24", VA = "0x27BC24")]
	public AkPlatformInitSettings()
	{
	}

	[Token(Token = "0x6000BFB")]
	[Address(RVA = "0x27BD6C", Offset = "0x27BD6C", VA = "0x27BD6C")]
	internal static IntPtr getCPtr(AkPlatformInitSettings obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6000BFC")]
	[Address(RVA = "0x27BDC4", Offset = "0x27BDC4", VA = "0x27BDC4", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x6000BFD")]
	[Address(RVA = "0x27BDF0", Offset = "0x27BDF0", VA = "0x27BDF0", Slot = "1")]
	~AkPlatformInitSettings()
	{
	}

	[Token(Token = "0x6000BFE")]
	[Address(RVA = "0x27BE50", Offset = "0x27BE50", VA = "0x27BE50", Slot = "6")]
	public virtual void Dispose()
	{
	}
}
[Token(Token = "0x20001FF")]
internal class AkSoundEnginePINVOKE
{
	[Token(Token = "0x6000C11")]
	[Address(RVA = "0x2B4158", Offset = "0x2B4158", VA = "0x2B4158")]
	static AkSoundEnginePINVOKE()
	{
	}

	[Token(Token = "0x6000C12")]
	[Address(RVA = "0x2B415C", Offset = "0x2B415C", VA = "0x2B415C")]
	public AkSoundEnginePINVOKE()
	{
	}

	[PreserveSig]
	[Token(Token = "0x6000C13")]
	[Address(RVA = "0x2924B0", Offset = "0x2924B0", VA = "0x2924B0")]
	public static extern uint CSharp_AK_SOUNDBANK_VERSION_get();

	[PreserveSig]
	[Token(Token = "0x6000C14")]
	[Address(RVA = "0x2B4164", Offset = "0x2B4164", VA = "0x2B4164")]
	public static extern void CSharp_AkAudioSettings_uNumSamplesPerFrame_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6000C15")]
	[Address(RVA = "0x2B422C", Offset = "0x2B422C", VA = "0x2B422C")]
	public static extern uint CSharp_AkAudioSettings_uNumSamplesPerFrame_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000C16")]
	[Address(RVA = "0x2B42EC", Offset = "0x2B42EC", VA = "0x2B42EC")]
	public static extern void CSharp_AkAudioSettings_uNumSamplesPerSecond_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6000C17")]
	[Address(RVA = "0x2B43B4", Offset = "0x2B43B4", VA = "0x2B43B4")]
	public static extern uint CSharp_AkAudioSettings_uNumSamplesPerSecond_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000C18")]
	[Address(RVA = "0x2B4474", Offset = "0x2B4474", VA = "0x2B4474")]
	public static extern IntPtr CSharp_new_AkAudioSettings();

	[PreserveSig]
	[Token(Token = "0x6000C19")]
	[Address(RVA = "0x2B4524", Offset = "0x2B4524", VA = "0x2B4524")]
	public static extern void CSharp_delete_AkAudioSettings(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000C1A")]
	[Address(RVA = "0x2B45E4", Offset = "0x2B45E4", VA = "0x2B45E4")]
	public static extern void CSharp_AkExternalSourceInfo_iExternalSrcCookie_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6000C1B")]
	[Address(RVA = "0x2B46AC", Offset = "0x2B46AC", VA = "0x2B46AC")]
	public static extern uint CSharp_AkExternalSourceInfo_iExternalSrcCookie_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000C1C")]
	[Address(RVA = "0x2B476C", Offset = "0x2B476C", VA = "0x2B476C")]
	public static extern void CSharp_AkExternalSourceInfo_idCodec_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6000C1D")]
	[Address(RVA = "0x2B4834", Offset = "0x2B4834", VA = "0x2B4834")]
	public static extern uint CSharp_AkExternalSourceInfo_idCodec_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000C1E")]
	[Address(RVA = "0x2B48F4", Offset = "0x2B48F4", VA = "0x2B48F4")]
	public static extern void CSharp_AkExternalSourceInfo_szFile_set(IntPtr jarg1, string jarg2);

	[PreserveSig]
	[Token(Token = "0x6000C1F")]
	[Address(RVA = "0x2B49D8", Offset = "0x2B49D8", VA = "0x2B49D8")]
	public static extern string CSharp_AkExternalSourceInfo_szFile_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000C20")]
	[Address(RVA = "0x2B4AB0", Offset = "0x2B4AB0", VA = "0x2B4AB0")]
	public static extern void CSharp_AkExternalSourceInfo_pInMemory_set(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6000C21")]
	[Address(RVA = "0x2B4B78", Offset = "0x2B4B78", VA = "0x2B4B78")]
	public static extern IntPtr CSharp_AkExternalSourceInfo_pInMemory_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000C22")]
	[Address(RVA = "0x2B4C38", Offset = "0x2B4C38", VA = "0x2B4C38")]
	public static extern void CSharp_AkExternalSourceInfo_uiMemorySize_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6000C23")]
	[Address(RVA = "0x2B4D00", Offset = "0x2B4D00", VA = "0x2B4D00")]
	public static extern uint CSharp_AkExternalSourceInfo_uiMemorySize_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000C24")]
	[Address(RVA = "0x2B4DC0", Offset = "0x2B4DC0", VA = "0x2B4DC0")]
	public static extern void CSharp_AkExternalSourceInfo_idFile_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6000C25")]
	[Address(RVA = "0x2B4E88", Offset = "0x2B4E88", VA = "0x2B4E88")]
	public static extern uint CSharp_AkExternalSourceInfo_idFile_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000C26")]
	[Address(RVA = "0x2B4F48", Offset = "0x2B4F48", VA = "0x2B4F48")]
	public static extern IntPtr CSharp_new_AkExternalSourceInfo__SWIG_0();

	[PreserveSig]
	[Token(Token = "0x6000C27")]
	[Address(RVA = "0x2B4FF8", Offset = "0x2B4FF8", VA = "0x2B4FF8")]
	public static extern IntPtr CSharp_new_AkExternalSourceInfo__SWIG_1(IntPtr jarg1, uint jarg2, uint jarg3, uint jarg4);

	[PreserveSig]
	[Token(Token = "0x6000C28")]
	[Address(RVA = "0x2B50CC", Offset = "0x2B50CC", VA = "0x2B50CC")]
	public static extern IntPtr CSharp_new_AkExternalSourceInfo__SWIG_2(string jarg1, uint jarg2, uint jarg3);

	[PreserveSig]
	[Token(Token = "0x6000C29")]
	[Address(RVA = "0x2B51C0", Offset = "0x2B51C0", VA = "0x2B51C0")]
	public static extern IntPtr CSharp_new_AkExternalSourceInfo__SWIG_3(uint jarg1, uint jarg2, uint jarg3);

	[PreserveSig]
	[Token(Token = "0x6000C2A")]
	[Address(RVA = "0x2B5290", Offset = "0x2B5290", VA = "0x2B5290")]
	public static extern void CSharp_delete_AkExternalSourceInfo(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000C2B")]
	[Address(RVA = "0x2B5350", Offset = "0x2B5350", VA = "0x2B5350")]
	public static extern void CSharp_AkVector_Zero(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000C2C")]
	[Address(RVA = "0x2B5410", Offset = "0x2B5410", VA = "0x2B5410")]
	public static extern void CSharp_AkVector_X_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x6000C2D")]
	[Address(RVA = "0x2B54D8", Offset = "0x2B54D8", VA = "0x2B54D8")]
	public static extern float CSharp_AkVector_X_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000C2E")]
	[Address(RVA = "0x2B5598", Offset = "0x2B5598", VA = "0x2B5598")]
	public static extern void CSharp_AkVector_Y_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x6000C2F")]
	[Address(RVA = "0x2B5660", Offset = "0x2B5660", VA = "0x2B5660")]
	public static extern float CSharp_AkVector_Y_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000C30")]
	[Address(RVA = "0x2B5720", Offset = "0x2B5720", VA = "0x2B5720")]
	public static extern void CSharp_AkVector_Z_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x6000C31")]
	[Address(RVA = "0x2B57E8", Offset = "0x2B57E8", VA = "0x2B57E8")]
	public static extern float CSharp_AkVector_Z_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000C32")]
	[Address(RVA = "0x2B58A8", Offset = "0x2B58A8", VA = "0x2B58A8")]
	public static extern IntPtr CSharp_new_AkVector();

	[PreserveSig]
	[Token(Token = "0x6000C33")]
	[Address(RVA = "0x2B5958", Offset = "0x2B5958", VA = "0x2B5958")]
	public static extern void CSharp_delete_AkVector(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000C34")]
	[Address(RVA = "0x2B5A18", Offset = "0x2B5A18", VA = "0x2B5A18")]
	public static extern IntPtr CSharp_AkTransform_Position(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000C35")]
	[Address(RVA = "0x2B5AD8", Offset = "0x2B5AD8", VA = "0x2B5AD8")]
	public static extern IntPtr CSharp_AkTransform_OrientationFront(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000C36")]
	[Address(RVA = "0x2B5B98", Offset = "0x2B5B98", VA = "0x2B5B98")]
	public static extern IntPtr CSharp_AkTransform_OrientationTop(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000C37")]
	[Address(RVA = "0x2B5C58", Offset = "0x2B5C58", VA = "0x2B5C58")]
	public static extern void CSharp_AkTransform_Set__SWIG_0(IntPtr jarg1, IntPtr jarg2, IntPtr jarg3, IntPtr jarg4);

	[PreserveSig]
	[Token(Token = "0x6000C38")]
	[Address(RVA = "0x2B5D2C", Offset = "0x2B5D2C", VA = "0x2B5D2C")]
	public static extern void CSharp_AkTransform_Set__SWIG_1(IntPtr jarg1, float jarg2, float jarg3, float jarg4, float jarg5, float jarg6, float jarg7, float jarg8, float jarg9, float jarg10);

	[PreserveSig]
	[Token(Token = "0x6000C39")]
	[Address(RVA = "0x2B5E34", Offset = "0x2B5E34", VA = "0x2B5E34")]
	public static extern void CSharp_AkTransform_SetPosition__SWIG_0(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6000C3A")]
	[Address(RVA = "0x2B5EFC", Offset = "0x2B5EFC", VA = "0x2B5EFC")]
	public static extern void CSharp_AkTransform_SetPosition__SWIG_1(IntPtr jarg1, float jarg2, float jarg3, float jarg4);

	[PreserveSig]
	[Token(Token = "0x6000C3B")]
	[Address(RVA = "0x2B5FD4", Offset = "0x2B5FD4", VA = "0x2B5FD4")]
	public static extern void CSharp_AkTransform_SetOrientation__SWIG_0(IntPtr jarg1, IntPtr jarg2, IntPtr jarg3);

	[PreserveSig]
	[Token(Token = "0x6000C3C")]
	[Address(RVA = "0x2B60A4", Offset = "0x2B60A4", VA = "0x2B60A4")]
	public static extern void CSharp_AkTransform_SetOrientation__SWIG_1(IntPtr jarg1, float jarg2, float jarg3, float jarg4, float jarg5, float jarg6, float jarg7);

	[PreserveSig]
	[Token(Token = "0x6000C3D")]
	[Address(RVA = "0x2B6194", Offset = "0x2B6194", VA = "0x2B6194")]
	public static extern IntPtr CSharp_new_AkTransform();

	[PreserveSig]
	[Token(Token = "0x6000C3E")]
	[Address(RVA = "0x2B6244", Offset = "0x2B6244", VA = "0x2B6244")]
	public static extern void CSharp_delete_AkTransform(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000C3F")]
	[Address(RVA = "0x2794F4", Offset = "0x2794F4", VA = "0x2794F4")]
	public static extern void CSharp_AkObstructionOcclusionValues_occlusion_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x6000C40")]
	[Address(RVA = "0x279640", Offset = "0x279640", VA = "0x279640")]
	public static extern float CSharp_AkObstructionOcclusionValues_occlusion_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000C41")]
	[Address(RVA = "0x27978C", Offset = "0x27978C", VA = "0x27978C")]
	public static extern void CSharp_AkObstructionOcclusionValues_obstruction_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x6000C42")]
	[Address(RVA = "0x2798D8", Offset = "0x2798D8", VA = "0x2798D8")]
	public static extern float CSharp_AkObstructionOcclusionValues_obstruction_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000C43")]
	[Address(RVA = "0x2790F4", Offset = "0x2790F4", VA = "0x2790F4")]
	public static extern IntPtr CSharp_new_AkObstructionOcclusionValues();

	[PreserveSig]
	[Token(Token = "0x6000C44")]
	[Address(RVA = "0x2793A8", Offset = "0x2793A8", VA = "0x2793A8")]
	public static extern void CSharp_delete_AkObstructionOcclusionValues(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000C45")]
	[Address(RVA = "0x2B6304", Offset = "0x2B6304", VA = "0x2B6304")]
	public static extern void CSharp_AkChannelEmitter_position_set(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6000C46")]
	[Address(RVA = "0x2B63CC", Offset = "0x2B63CC", VA = "0x2B63CC")]
	public static extern IntPtr CSharp_AkChannelEmitter_position_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000C47")]
	[Address(RVA = "0x2B648C", Offset = "0x2B648C", VA = "0x2B648C")]
	public static extern void CSharp_AkChannelEmitter_uInputChannels_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6000C48")]
	[Address(RVA = "0x2B6554", Offset = "0x2B6554", VA = "0x2B6554")]
	public static extern uint CSharp_AkChannelEmitter_uInputChannels_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000C49")]
	[Address(RVA = "0x2B6614", Offset = "0x2B6614", VA = "0x2B6614")]
	public static extern IntPtr CSharp_new_AkChannelEmitter();

	[PreserveSig]
	[Token(Token = "0x6000C4A")]
	[Address(RVA = "0x2B66C4", Offset = "0x2B66C4", VA = "0x2B66C4")]
	public static extern void CSharp_delete_AkChannelEmitter(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000C4B")]
	[Address(RVA = "0x2B6784", Offset = "0x2B6784", VA = "0x2B6784")]
	public static extern void CSharp_AkAuxSendValue_listenerID_set(IntPtr jarg1, ulong jarg2);

	[PreserveSig]
	[Token(Token = "0x6000C4C")]
	[Address(RVA = "0x2B6854", Offset = "0x2B6854", VA = "0x2B6854")]
	public static extern ulong CSharp_AkAuxSendValue_listenerID_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000C4D")]
	[Address(RVA = "0x2B6914", Offset = "0x2B6914", VA = "0x2B6914")]
	public static extern void CSharp_AkAuxSendValue_auxBusID_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6000C4E")]
	[Address(RVA = "0x2B69DC", Offset = "0x2B69DC", VA = "0x2B69DC")]
	public static extern uint CSharp_AkAuxSendValue_auxBusID_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000C4F")]
	[Address(RVA = "0x2B6A9C", Offset = "0x2B6A9C", VA = "0x2B6A9C")]
	public static extern void CSharp_AkAuxSendValue_fControlValue_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x6000C50")]
	[Address(RVA = "0x2B6B64", Offset = "0x2B6B64", VA = "0x2B6B64")]
	public static extern float CSharp_AkAuxSendValue_fControlValue_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000C51")]
	[Address(RVA = "0x2B6C24", Offset = "0x2B6C24", VA = "0x2B6C24")]
	public static extern void CSharp_AkAuxSendValue_Set(IntPtr jarg1, ulong jarg2, uint jarg3, float jarg4);

	[PreserveSig]
	[Token(Token = "0x6000C52")]
	[Address(RVA = "0x2B6D04", Offset = "0x2B6D04", VA = "0x2B6D04")]
	public static extern bool CSharp_AkAuxSendValue_IsSame(IntPtr jarg1, ulong jarg2, uint jarg3);

	[PreserveSig]
	[Token(Token = "0x6000C53")]
	[Address(RVA = "0x2B6DE4", Offset = "0x2B6DE4", VA = "0x2B6DE4")]
	public static extern int CSharp_AkAuxSendValue_GetSizeOf();

	[PreserveSig]
	[Token(Token = "0x6000C54")]
	[Address(RVA = "0x2B6E94", Offset = "0x2B6E94", VA = "0x2B6E94")]
	public static extern int CSharp_AkAuxSendValue_SetGameObjectAuxSendValues(IntPtr jarg1, ulong jarg2, uint jarg3);

	[PreserveSig]
	[Token(Token = "0x6000C55")]
	[Address(RVA = "0x2B6F6C", Offset = "0x2B6F6C", VA = "0x2B6F6C")]
	public static extern int CSharp_AkAuxSendValue_GetGameObjectAuxSendValues(IntPtr jarg1, ulong jarg2, ref uint jarg3);

	[PreserveSig]
	[Token(Token = "0x6000C56")]
	[Address(RVA = "0x2B7044", Offset = "0x2B7044", VA = "0x2B7044")]
	public static extern void CSharp_delete_AkAuxSendValue(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000C57")]
	[Address(RVA = "0x287AF4", Offset = "0x287AF4", VA = "0x287AF4")]
	public static extern IntPtr CSharp_new_AkRamp__SWIG_0();

	[PreserveSig]
	[Token(Token = "0x6000C58")]
	[Address(RVA = "0x287C4C", Offset = "0x287C4C", VA = "0x287C4C")]
	public static extern IntPtr CSharp_new_AkRamp__SWIG_1(float jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x6000C59")]
	[Address(RVA = "0x288064", Offset = "0x288064", VA = "0x288064")]
	public static extern void CSharp_AkRamp_fPrev_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x6000C5A")]
	[Address(RVA = "0x2881B0", Offset = "0x2881B0", VA = "0x2881B0")]
	public static extern float CSharp_AkRamp_fPrev_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000C5B")]
	[Address(RVA = "0x2882FC", Offset = "0x2882FC", VA = "0x2882FC")]
	public static extern void CSharp_AkRamp_fNext_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x6000C5C")]
	[Address(RVA = "0x288448", Offset = "0x288448", VA = "0x288448")]
	public static extern float CSharp_AkRamp_fNext_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000C5D")]
	[Address(RVA = "0x287F18", Offset = "0x287F18", VA = "0x287F18")]
	public static extern void CSharp_delete_AkRamp(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000C5E")]
	[Address(RVA = "0x2925D8", Offset = "0x2925D8", VA = "0x2925D8")]
	public static extern ushort CSharp_AK_INT_get();

	[PreserveSig]
	[Token(Token = "0x6000C5F")]
	[Address(RVA = "0x292700", Offset = "0x292700", VA = "0x292700")]
	public static extern ushort CSharp_AK_FLOAT_get();

	[PreserveSig]
	[Token(Token = "0x6000C60")]
	[Address(RVA = "0x292828", Offset = "0x292828", VA = "0x292828")]
	public static extern byte CSharp_AK_INTERLEAVED_get();

	[PreserveSig]
	[Token(Token = "0x6000C61")]
	[Address(RVA = "0x292950", Offset = "0x292950", VA = "0x292950")]
	public static extern byte CSharp_AK_NONINTERLEAVED_get();

	[PreserveSig]
	[Token(Token = "0x6000C62")]
	[Address(RVA = "0x292A78", Offset = "0x292A78", VA = "0x292A78")]
	public static extern uint CSharp_AK_LE_NATIVE_BITSPERSAMPLE_get();

	[PreserveSig]
	[Token(Token = "0x6000C63")]
	[Address(RVA = "0x292BA0", Offset = "0x292BA0", VA = "0x292BA0")]
	public static extern uint CSharp_AK_LE_NATIVE_SAMPLETYPE_get();

	[PreserveSig]
	[Token(Token = "0x6000C64")]
	[Address(RVA = "0x292CC8", Offset = "0x292CC8", VA = "0x292CC8")]
	public static extern uint CSharp_AK_LE_NATIVE_INTERLEAVE_get();

	[PreserveSig]
	[Token(Token = "0x6000C65")]
	[Address(RVA = "0x2B7104", Offset = "0x2B7104", VA = "0x2B7104")]
	public static extern void CSharp_AkAudioFormat_uSampleRate_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6000C66")]
	[Address(RVA = "0x2B71CC", Offset = "0x2B71CC", VA = "0x2B71CC")]
	public static extern uint CSharp_AkAudioFormat_uSampleRate_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000C67")]
	[Address(RVA = "0x2B728C", Offset = "0x2B728C", VA = "0x2B728C")]
	public static extern void CSharp_AkAudioFormat_channelConfig_set(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6000C68")]
	[Address(RVA = "0x2B7354", Offset = "0x2B7354", VA = "0x2B7354")]
	public static extern IntPtr CSharp_AkAudioFormat_channelConfig_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000C69")]
	[Address(RVA = "0x2B7414", Offset = "0x2B7414", VA = "0x2B7414")]
	public static extern void CSharp_AkAudioFormat_uBitsPerSample_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6000C6A")]
	[Address(RVA = "0x2B74DC", Offset = "0x2B74DC", VA = "0x2B74DC")]
	public static extern uint CSharp_AkAudioFormat_uBitsPerSample_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000C6B")]
	[Address(RVA = "0x2B759C", Offset = "0x2B759C", VA = "0x2B759C")]
	public static extern void CSharp_AkAudioFormat_uBlockAlign_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6000C6C")]
	[Address(RVA = "0x2B7664", Offset = "0x2B7664", VA = "0x2B7664")]
	public static extern uint CSharp_AkAudioFormat_uBlockAlign_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000C6D")]
	[Address(RVA = "0x2B7724", Offset = "0x2B7724", VA = "0x2B7724")]
	public static extern void CSharp_AkAudioFormat_uTypeID_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6000C6E")]
	[Address(RVA = "0x2B77EC", Offset = "0x2B77EC", VA = "0x2B77EC")]
	public static extern uint CSharp_AkAudioFormat_uTypeID_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000C6F")]
	[Address(RVA = "0x2B78AC", Offset = "0x2B78AC", VA = "0x2B78AC")]
	public static extern void CSharp_AkAudioFormat_uInterleaveID_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6000C70")]
	[Address(RVA = "0x2B7974", Offset = "0x2B7974", VA = "0x2B7974")]
	public static extern uint CSharp_AkAudioFormat_uInterleaveID_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000C71")]
	[Address(RVA = "0x2B7A34", Offset = "0x2B7A34", VA = "0x2B7A34")]
	public static extern uint CSharp_AkAudioFormat_GetNumChannels(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000C72")]
	[Address(RVA = "0x2B7AF4", Offset = "0x2B7AF4", VA = "0x2B7AF4")]
	public static extern uint CSharp_AkAudioFormat_GetBitsPerSample(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000C73")]
	[Address(RVA = "0x2B7BB4", Offset = "0x2B7BB4", VA = "0x2B7BB4")]
	public static extern uint CSharp_AkAudioFormat_GetBlockAlign(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000C74")]
	[Address(RVA = "0x2B7C74", Offset = "0x2B7C74", VA = "0x2B7C74")]
	public static extern uint CSharp_AkAudioFormat_GetTypeID(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000C75")]
	[Address(RVA = "0x2B7D34", Offset = "0x2B7D34", VA = "0x2B7D34")]
	public static extern uint CSharp_AkAudioFormat_GetInterleaveID(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000C76")]
	[Address(RVA = "0x2B7DF4", Offset = "0x2B7DF4", VA = "0x2B7DF4")]
	public static extern void CSharp_AkAudioFormat_SetAll(IntPtr jarg1, uint jarg2, IntPtr jarg3, uint jarg4, uint jarg5, uint jarg6, uint jarg7);

	[PreserveSig]
	[Token(Token = "0x6000C77")]
	[Address(RVA = "0x2B7EE0", Offset = "0x2B7EE0", VA = "0x2B7EE0")]
	public static extern bool CSharp_AkAudioFormat_IsChannelConfigSupported(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000C78")]
	[Address(RVA = "0x2B7FA8", Offset = "0x2B7FA8", VA = "0x2B7FA8")]
	public static extern IntPtr CSharp_new_AkAudioFormat();

	[PreserveSig]
	[Token(Token = "0x6000C79")]
	[Address(RVA = "0x2B8058", Offset = "0x2B8058", VA = "0x2B8058")]
	public static extern void CSharp_delete_AkAudioFormat(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000C7A")]
	[Address(RVA = "0x2B8118", Offset = "0x2B8118", VA = "0x2B8118")]
	public static extern void CSharp_AkIterator_pItem_set(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6000C7B")]
	[Address(RVA = "0x2B81E0", Offset = "0x2B81E0", VA = "0x2B81E0")]
	public static extern IntPtr CSharp_AkIterator_pItem_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000C7C")]
	[Address(RVA = "0x2B82A0", Offset = "0x2B82A0", VA = "0x2B82A0")]
	public static extern IntPtr CSharp_AkIterator_NextIter(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000C7D")]
	[Address(RVA = "0x2B8360", Offset = "0x2B8360", VA = "0x2B8360")]
	public static extern IntPtr CSharp_AkIterator_PrevIter(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000C7E")]
	[Address(RVA = "0x2B8420", Offset = "0x2B8420", VA = "0x2B8420")]
	public static extern IntPtr CSharp_AkIterator_GetItem(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000C7F")]
	[Address(RVA = "0x2B84E0", Offset = "0x2B84E0", VA = "0x2B84E0")]
	public static extern bool CSharp_AkIterator_IsEqualTo(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6000C80")]
	[Address(RVA = "0x2B85B0", Offset = "0x2B85B0", VA = "0x2B85B0")]
	public static extern bool CSharp_AkIterator_IsDifferentFrom(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6000C81")]
	[Address(RVA = "0x2B8680", Offset = "0x2B8680", VA = "0x2B8680")]
	public static extern IntPtr CSharp_new_AkIterator();

	[PreserveSig]
	[Token(Token = "0x6000C82")]
	[Address(RVA = "0x2B8730", Offset = "0x2B8730", VA = "0x2B8730")]
	public static extern void CSharp_delete_AkIterator(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000C83")]
	[Address(RVA = "0x2B87F0", Offset = "0x2B87F0", VA = "0x2B87F0")]
	public static extern int CSharp__ArrayPoolDefault_Get();

	[PreserveSig]
	[Token(Token = "0x6000C84")]
	[Address(RVA = "0x2B88A0", Offset = "0x2B88A0", VA = "0x2B88A0")]
	public static extern IntPtr CSharp_new__ArrayPoolDefault();

	[PreserveSig]
	[Token(Token = "0x6000C85")]
	[Address(RVA = "0x2B8950", Offset = "0x2B8950", VA = "0x2B8950")]
	public static extern void CSharp_delete__ArrayPoolDefault(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000C86")]
	[Address(RVA = "0x2B8A10", Offset = "0x2B8A10", VA = "0x2B8A10")]
	public static extern int CSharp__ArrayPoolLEngineDefault_Get();

	[PreserveSig]
	[Token(Token = "0x6000C87")]
	[Address(RVA = "0x2B8AC0", Offset = "0x2B8AC0", VA = "0x2B8AC0")]
	public static extern IntPtr CSharp_new__ArrayPoolLEngineDefault();

	[PreserveSig]
	[Token(Token = "0x6000C88")]
	[Address(RVA = "0x2B8B70", Offset = "0x2B8B70", VA = "0x2B8B70")]
	public static extern void CSharp_delete__ArrayPoolLEngineDefault(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000C89")]
	[Address(RVA = "0x2813A0", Offset = "0x2813A0", VA = "0x2813A0")]
	public static extern IntPtr CSharp_new_AkPlaylistItem__SWIG_0();

	[PreserveSig]
	[Token(Token = "0x6000C8A")]
	[Address(RVA = "0x281538", Offset = "0x281538", VA = "0x281538")]
	public static extern IntPtr CSharp_new_AkPlaylistItem__SWIG_1(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000C8B")]
	[Address(RVA = "0x2817A4", Offset = "0x2817A4", VA = "0x2817A4")]
	public static extern void CSharp_delete_AkPlaylistItem(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000C8C")]
	[Address(RVA = "0x28196C", Offset = "0x28196C", VA = "0x28196C")]
	public static extern IntPtr CSharp_AkPlaylistItem_Assign(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6000C8D")]
	[Address(RVA = "0x281B08", Offset = "0x281B08", VA = "0x281B08")]
	public static extern bool CSharp_AkPlaylistItem_IsEqualTo(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6000C8E")]
	[Address(RVA = "0x281C88", Offset = "0x281C88", VA = "0x281C88")]
	public static extern int CSharp_AkPlaylistItem_SetExternalSources(IntPtr jarg1, uint jarg2, IntPtr jarg3);

	[PreserveSig]
	[Token(Token = "0x6000C8F")]
	[Address(RVA = "0x281DE4", Offset = "0x281DE4", VA = "0x281DE4")]
	public static extern void CSharp_AkPlaylistItem_audioNodeID_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6000C90")]
	[Address(RVA = "0x281F30", Offset = "0x281F30", VA = "0x281F30")]
	public static extern uint CSharp_AkPlaylistItem_audioNodeID_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000C91")]
	[Address(RVA = "0x28207C", Offset = "0x28207C", VA = "0x28207C")]
	public static extern void CSharp_AkPlaylistItem_msDelay_set(IntPtr jarg1, int jarg2);

	[PreserveSig]
	[Token(Token = "0x6000C92")]
	[Address(RVA = "0x2821C8", Offset = "0x2821C8", VA = "0x2821C8")]
	public static extern int CSharp_AkPlaylistItem_msDelay_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000C93")]
	[Address(RVA = "0x282314", Offset = "0x282314", VA = "0x282314")]
	public static extern void CSharp_AkPlaylistItem_pCustomInfo_set(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6000C94")]
	[Address(RVA = "0x282460", Offset = "0x282460", VA = "0x282460")]
	public static extern IntPtr CSharp_AkPlaylistItem_pCustomInfo_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000C95")]
	[Address(RVA = "0x27E868", Offset = "0x27E868", VA = "0x27E868")]
	public static extern IntPtr CSharp_new_AkPlaylistArray();

	[PreserveSig]
	[Token(Token = "0x6000C96")]
	[Address(RVA = "0x27E970", Offset = "0x27E970", VA = "0x27E970")]
	public static extern void CSharp_delete_AkPlaylistArray(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000C97")]
	[Address(RVA = "0x27EAE4", Offset = "0x27EAE4", VA = "0x27EAE4")]
	public static extern IntPtr CSharp_AkPlaylistArray_Begin(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000C98")]
	[Address(RVA = "0x27EC58", Offset = "0x27EC58", VA = "0x27EC58")]
	public static extern IntPtr CSharp_AkPlaylistArray_End(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000C99")]
	[Address(RVA = "0x27EE74", Offset = "0x27EE74", VA = "0x27EE74")]
	public static extern IntPtr CSharp_AkPlaylistArray_FindEx(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6000C9A")]
	[Address(RVA = "0x27F00C", Offset = "0x27F00C", VA = "0x27F00C")]
	public static extern IntPtr CSharp_AkPlaylistArray_Erase__SWIG_0(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6000C9B")]
	[Address(RVA = "0x27F160", Offset = "0x27F160", VA = "0x27F160")]
	public static extern void CSharp_AkPlaylistArray_Erase__SWIG_1(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6000C9C")]
	[Address(RVA = "0x27F2F8", Offset = "0x27F2F8", VA = "0x27F2F8")]
	public static extern IntPtr CSharp_AkPlaylistArray_EraseSwap(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6000C9D")]
	[Address(RVA = "0x27F44C", Offset = "0x27F44C", VA = "0x27F44C")]
	public static extern int CSharp_AkPlaylistArray_Reserve(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6000C9E")]
	[Address(RVA = "0x27F598", Offset = "0x27F598", VA = "0x27F598")]
	public static extern uint CSharp_AkPlaylistArray_Reserved(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000C9F")]
	[Address(RVA = "0x27F6DC", Offset = "0x27F6DC", VA = "0x27F6DC")]
	public static extern void CSharp_AkPlaylistArray_Term(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000CA0")]
	[Address(RVA = "0x27F820", Offset = "0x27F820", VA = "0x27F820")]
	public static extern uint CSharp_AkPlaylistArray_Length(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000CA1")]
	[Address(RVA = "0x27F9B8", Offset = "0x27F9B8", VA = "0x27F9B8")]
	public static extern IntPtr CSharp_AkPlaylistArray_Data(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000CA2")]
	[Address(RVA = "0x27FB24", Offset = "0x27FB24", VA = "0x27FB24")]
	public static extern bool CSharp_AkPlaylistArray_IsEmpty(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000CA3")]
	[Address(RVA = "0x27FD14", Offset = "0x27FD14", VA = "0x27FD14")]
	public static extern IntPtr CSharp_AkPlaylistArray_Exists(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6000CA4")]
	[Address(RVA = "0x27FEB4", Offset = "0x27FEB4", VA = "0x27FEB4")]
	public static extern IntPtr CSharp_AkPlaylistArray_AddLast__SWIG_0(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000CA5")]
	[Address(RVA = "0x28009C", Offset = "0x28009C", VA = "0x28009C")]
	public static extern IntPtr CSharp_AkPlaylistArray_AddLast__SWIG_1(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6000CA6")]
	[Address(RVA = "0x28021C", Offset = "0x28021C", VA = "0x28021C")]
	public static extern IntPtr CSharp_AkPlaylistArray_Last(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000CA7")]
	[Address(RVA = "0x280360", Offset = "0x280360", VA = "0x280360")]
	public static extern void CSharp_AkPlaylistArray_RemoveLast(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000CA8")]
	[Address(RVA = "0x2804F4", Offset = "0x2804F4", VA = "0x2804F4")]
	public static extern int CSharp_AkPlaylistArray_Remove(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6000CA9")]
	[Address(RVA = "0x280690", Offset = "0x280690", VA = "0x280690")]
	public static extern int CSharp_AkPlaylistArray_RemoveSwap(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6000CAA")]
	[Address(RVA = "0x2807DC", Offset = "0x2807DC", VA = "0x2807DC")]
	public static extern void CSharp_AkPlaylistArray_RemoveAll(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000CAB")]
	[Address(RVA = "0x28095C", Offset = "0x28095C", VA = "0x28095C")]
	public static extern IntPtr CSharp_AkPlaylistArray_ItemAtIndex(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6000CAC")]
	[Address(RVA = "0x280B04", Offset = "0x280B04", VA = "0x280B04")]
	public static extern IntPtr CSharp_AkPlaylistArray_Insert(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6000CAD")]
	[Address(RVA = "0x280C58", Offset = "0x280C58", VA = "0x280C58")]
	public static extern bool CSharp_AkPlaylistArray_GrowArray__SWIG_0(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6000CAE")]
	[Address(RVA = "0x280DAC", Offset = "0x280DAC", VA = "0x280DAC")]
	public static extern bool CSharp_AkPlaylistArray_GrowArray__SWIG_1(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000CAF")]
	[Address(RVA = "0x280F00", Offset = "0x280F00", VA = "0x280F00")]
	public static extern bool CSharp_AkPlaylistArray_Resize(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6000CB0")]
	[Address(RVA = "0x2810A4", Offset = "0x2810A4", VA = "0x2810A4")]
	public static extern void CSharp_AkPlaylistArray_Transfer(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6000CB1")]
	[Address(RVA = "0x281240", Offset = "0x281240", VA = "0x281240")]
	public static extern int CSharp_AkPlaylistArray_Copy(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6000CB2")]
	[Address(RVA = "0x27E130", Offset = "0x27E130", VA = "0x27E130")]
	public static extern int CSharp_AkPlaylist_Enqueue__SWIG_0(IntPtr jarg1, uint jarg2, int jarg3, IntPtr jarg4, uint jarg5, IntPtr jarg6);

	[PreserveSig]
	[Token(Token = "0x6000CB3")]
	[Address(RVA = "0x27E2BC", Offset = "0x27E2BC", VA = "0x27E2BC")]
	public static extern int CSharp_AkPlaylist_Enqueue__SWIG_1(IntPtr jarg1, uint jarg2, int jarg3, IntPtr jarg4, uint jarg5);

	[PreserveSig]
	[Token(Token = "0x6000CB4")]
	[Address(RVA = "0x27E43C", Offset = "0x27E43C", VA = "0x27E43C")]
	public static extern int CSharp_AkPlaylist_Enqueue__SWIG_2(IntPtr jarg1, uint jarg2, int jarg3, IntPtr jarg4);

	[PreserveSig]
	[Token(Token = "0x6000CB5")]
	[Address(RVA = "0x27E5AC", Offset = "0x27E5AC", VA = "0x27E5AC")]
	public static extern int CSharp_AkPlaylist_Enqueue__SWIG_3(IntPtr jarg1, uint jarg2, int jarg3);

	[PreserveSig]
	[Token(Token = "0x6000CB6")]
	[Address(RVA = "0x27E708", Offset = "0x27E708", VA = "0x27E708")]
	public static extern int CSharp_AkPlaylist_Enqueue__SWIG_4(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6000CB7")]
	[Address(RVA = "0x27DAD4", Offset = "0x27DAD4", VA = "0x27DAD4")]
	public static extern IntPtr CSharp_new_AkPlaylist();

	[PreserveSig]
	[Token(Token = "0x6000CB8")]
	[Address(RVA = "0x27DE8C", Offset = "0x27DE8C", VA = "0x27DE8C")]
	public static extern void CSharp_delete_AkPlaylist(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000CB9")]
	[Address(RVA = "0x292F1C", Offset = "0x292F1C", VA = "0x292F1C")]
	public static extern uint CSharp_DynamicSequenceOpen__SWIG_0(ulong jarg1, uint jarg2, IntPtr jarg3, IntPtr jarg4, int jarg5);

	[PreserveSig]
	[Token(Token = "0x6000CBA")]
	[Address(RVA = "0x293198", Offset = "0x293198", VA = "0x293198")]
	public static extern uint CSharp_DynamicSequenceOpen__SWIG_1(ulong jarg1, uint jarg2, IntPtr jarg3, IntPtr jarg4);

	[PreserveSig]
	[Token(Token = "0x6000CBB")]
	[Address(RVA = "0x293384", Offset = "0x293384", VA = "0x293384")]
	public static extern uint CSharp_DynamicSequenceOpen__SWIG_2(ulong jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6000CBC")]
	[Address(RVA = "0x29355C", Offset = "0x29355C", VA = "0x29355C")]
	public static extern uint CSharp_DynamicSequenceOpen__SWIG_3(ulong jarg1);

	[PreserveSig]
	[Token(Token = "0x6000CBD")]
	[Address(RVA = "0x2936A4", Offset = "0x2936A4", VA = "0x2936A4")]
	public static extern int CSharp_DynamicSequenceClose(uint jarg1);

	[PreserveSig]
	[Token(Token = "0x6000CBE")]
	[Address(RVA = "0x2937FC", Offset = "0x2937FC", VA = "0x2937FC")]
	public static extern int CSharp_DynamicSequencePlay__SWIG_0(uint jarg1, int jarg2, int jarg3);

	[PreserveSig]
	[Token(Token = "0x6000CBF")]
	[Address(RVA = "0x293954", Offset = "0x293954", VA = "0x293954")]
	public static extern int CSharp_DynamicSequencePlay__SWIG_1(uint jarg1, int jarg2);

	[PreserveSig]
	[Token(Token = "0x6000CC0")]
	[Address(RVA = "0x293A9C", Offset = "0x293A9C", VA = "0x293A9C")]
	public static extern int CSharp_DynamicSequencePlay__SWIG_2(uint jarg1);

	[PreserveSig]
	[Token(Token = "0x6000CC1")]
	[Address(RVA = "0x293BF4", Offset = "0x293BF4", VA = "0x293BF4")]
	public static extern int CSharp_DynamicSequencePause__SWIG_0(uint jarg1, int jarg2, int jarg3);

	[PreserveSig]
	[Token(Token = "0x6000CC2")]
	[Address(RVA = "0x293D4C", Offset = "0x293D4C", VA = "0x293D4C")]
	public static extern int CSharp_DynamicSequencePause__SWIG_1(uint jarg1, int jarg2);

	[PreserveSig]
	[Token(Token = "0x6000CC3")]
	[Address(RVA = "0x293E94", Offset = "0x293E94", VA = "0x293E94")]
	public static extern int CSharp_DynamicSequencePause__SWIG_2(uint jarg1);

	[PreserveSig]
	[Token(Token = "0x6000CC4")]
	[Address(RVA = "0x293FEC", Offset = "0x293FEC", VA = "0x293FEC")]
	public static extern int CSharp_DynamicSequenceResume__SWIG_0(uint jarg1, int jarg2, int jarg3);

	[PreserveSig]
	[Token(Token = "0x6000CC5")]
	[Address(RVA = "0x294144", Offset = "0x294144", VA = "0x294144")]
	public static extern int CSharp_DynamicSequenceResume__SWIG_1(uint jarg1, int jarg2);

	[PreserveSig]
	[Token(Token = "0x6000CC6")]
	[Address(RVA = "0x29428C", Offset = "0x29428C", VA = "0x29428C")]
	public static extern int CSharp_DynamicSequenceResume__SWIG_2(uint jarg1);

	[PreserveSig]
	[Token(Token = "0x6000CC7")]
	[Address(RVA = "0x2943E4", Offset = "0x2943E4", VA = "0x2943E4")]
	public static extern int CSharp_DynamicSequenceStop__SWIG_0(uint jarg1, int jarg2, int jarg3);

	[PreserveSig]
	[Token(Token = "0x6000CC8")]
	[Address(RVA = "0x29453C", Offset = "0x29453C", VA = "0x29453C")]
	public static extern int CSharp_DynamicSequenceStop__SWIG_1(uint jarg1, int jarg2);

	[PreserveSig]
	[Token(Token = "0x6000CC9")]
	[Address(RVA = "0x294684", Offset = "0x294684", VA = "0x294684")]
	public static extern int CSharp_DynamicSequenceStop__SWIG_2(uint jarg1);

	[PreserveSig]
	[Token(Token = "0x6000CCA")]
	[Address(RVA = "0x2947C4", Offset = "0x2947C4", VA = "0x2947C4")]
	public static extern int CSharp_DynamicSequenceBreak(uint jarg1);

	[PreserveSig]
	[Token(Token = "0x6000CCB")]
	[Address(RVA = "0x29491C", Offset = "0x29491C", VA = "0x29491C")]
	public static extern int CSharp_DynamicSequenceGetPauseTimes(uint jarg1, out uint jarg2, out uint jarg3);

	[PreserveSig]
	[Token(Token = "0x6000CCC")]
	[Address(RVA = "0x294AD4", Offset = "0x294AD4", VA = "0x294AD4")]
	public static extern IntPtr CSharp_DynamicSequenceLockPlaylist(uint jarg1);

	[PreserveSig]
	[Token(Token = "0x6000CCD")]
	[Address(RVA = "0x294C14", Offset = "0x294C14", VA = "0x294C14")]
	public static extern int CSharp_DynamicSequenceUnlockPlaylist(uint jarg1);

	[PreserveSig]
	[Token(Token = "0x6000CCE")]
	[Address(RVA = "0x279A58", Offset = "0x279A58", VA = "0x279A58")]
	public static extern IntPtr CSharp_new_AkOutputSettings__SWIG_0();

	[PreserveSig]
	[Token(Token = "0x6000CCF")]
	[Address(RVA = "0x279BDC", Offset = "0x279BDC", VA = "0x279BDC")]
	public static extern IntPtr CSharp_new_AkOutputSettings__SWIG_1(string jarg1, uint jarg2, IntPtr jarg3, int jarg4);

	[PreserveSig]
	[Token(Token = "0x6000CD0")]
	[Address(RVA = "0x279DA4", Offset = "0x279DA4", VA = "0x279DA4")]
	public static extern IntPtr CSharp_new_AkOutputSettings__SWIG_2(string jarg1, uint jarg2, IntPtr jarg3);

	[PreserveSig]
	[Token(Token = "0x6000CD1")]
	[Address(RVA = "0x279F40", Offset = "0x279F40", VA = "0x279F40")]
	public static extern IntPtr CSharp_new_AkOutputSettings__SWIG_3(string jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6000CD2")]
	[Address(RVA = "0x27A0CC", Offset = "0x27A0CC", VA = "0x27A0CC")]
	public static extern IntPtr CSharp_new_AkOutputSettings__SWIG_4(string jarg1);

	[PreserveSig]
	[Token(Token = "0x6000CD3")]
	[Address(RVA = "0x27A500", Offset = "0x27A500", VA = "0x27A500")]
	public static extern void CSharp_AkOutputSettings_audioDeviceShareset_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6000CD4")]
	[Address(RVA = "0x27A64C", Offset = "0x27A64C", VA = "0x27A64C")]
	public static extern uint CSharp_AkOutputSettings_audioDeviceShareset_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000CD5")]
	[Address(RVA = "0x27A798", Offset = "0x27A798", VA = "0x27A798")]
	public static extern void CSharp_AkOutputSettings_idDevice_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6000CD6")]
	[Address(RVA = "0x27A8E4", Offset = "0x27A8E4", VA = "0x27A8E4")]
	public static extern uint CSharp_AkOutputSettings_idDevice_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000CD7")]
	[Address(RVA = "0x27AA30", Offset = "0x27AA30", VA = "0x27AA30")]
	public static extern void CSharp_AkOutputSettings_ePanningRule_set(IntPtr jarg1, int jarg2);

	[PreserveSig]
	[Token(Token = "0x6000CD8")]
	[Address(RVA = "0x27AB7C", Offset = "0x27AB7C", VA = "0x27AB7C")]
	public static extern int CSharp_AkOutputSettings_ePanningRule_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000CD9")]
	[Address(RVA = "0x27ACDC", Offset = "0x27ACDC", VA = "0x27ACDC")]
	public static extern void CSharp_AkOutputSettings_channelConfig_set(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6000CDA")]
	[Address(RVA = "0x27AE78", Offset = "0x27AE78", VA = "0x27AE78")]
	public static extern IntPtr CSharp_AkOutputSettings_channelConfig_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000CDB")]
	[Address(RVA = "0x27A3B4", Offset = "0x27A3B4", VA = "0x27A3B4")]
	public static extern void CSharp_delete_AkOutputSettings(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000CDC")]
	[Address(RVA = "0x2B8C30", Offset = "0x2B8C30", VA = "0x2B8C30")]
	public static extern void CSharp_AkTaskContext_uIdxThread_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6000CDD")]
	[Address(RVA = "0x2B8CF8", Offset = "0x2B8CF8", VA = "0x2B8CF8")]
	public static extern uint CSharp_AkTaskContext_uIdxThread_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000CDE")]
	[Address(RVA = "0x2B8DB8", Offset = "0x2B8DB8", VA = "0x2B8DB8")]
	public static extern IntPtr CSharp_new_AkTaskContext();

	[PreserveSig]
	[Token(Token = "0x6000CDF")]
	[Address(RVA = "0x2B8E68", Offset = "0x2B8E68", VA = "0x2B8E68")]
	public static extern void CSharp_delete_AkTaskContext(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000CE0")]
	[Address(RVA = "0x2B8F28", Offset = "0x2B8F28", VA = "0x2B8F28")]
	public static extern void CSharp_AkInitSettings_pfnAssertHook_set(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6000CE1")]
	[Address(RVA = "0x2B8FF0", Offset = "0x2B8FF0", VA = "0x2B8FF0")]
	public static extern IntPtr CSharp_AkInitSettings_pfnAssertHook_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000CE2")]
	[Address(RVA = "0x2B90B0", Offset = "0x2B90B0", VA = "0x2B90B0")]
	public static extern void CSharp_AkInitSettings_uMaxNumPaths_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6000CE3")]
	[Address(RVA = "0x2B9178", Offset = "0x2B9178", VA = "0x2B9178")]
	public static extern uint CSharp_AkInitSettings_uMaxNumPaths_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000CE4")]
	[Address(RVA = "0x2B9238", Offset = "0x2B9238", VA = "0x2B9238")]
	public static extern void CSharp_AkInitSettings_uDefaultPoolSize_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6000CE5")]
	[Address(RVA = "0x2B9300", Offset = "0x2B9300", VA = "0x2B9300")]
	public static extern uint CSharp_AkInitSettings_uDefaultPoolSize_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000CE6")]
	[Address(RVA = "0x2B93C0", Offset = "0x2B93C0", VA = "0x2B93C0")]
	public static extern void CSharp_AkInitSettings_fDefaultPoolRatioThreshold_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x6000CE7")]
	[Address(RVA = "0x2B9488", Offset = "0x2B9488", VA = "0x2B9488")]
	public static extern float CSharp_AkInitSettings_fDefaultPoolRatioThreshold_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000CE8")]
	[Address(RVA = "0x2B9548", Offset = "0x2B9548", VA = "0x2B9548")]
	public static extern void CSharp_AkInitSettings_uCommandQueueSize_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6000CE9")]
	[Address(RVA = "0x2B9610", Offset = "0x2B9610", VA = "0x2B9610")]
	public static extern uint CSharp_AkInitSettings_uCommandQueueSize_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000CEA")]
	[Address(RVA = "0x2B96D0", Offset = "0x2B96D0", VA = "0x2B96D0")]
	public static extern void CSharp_AkInitSettings_uPrepareEventMemoryPoolID_set(IntPtr jarg1, int jarg2);

	[PreserveSig]
	[Token(Token = "0x6000CEB")]
	[Address(RVA = "0x2B9798", Offset = "0x2B9798", VA = "0x2B9798")]
	public static extern int CSharp_AkInitSettings_uPrepareEventMemoryPoolID_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000CEC")]
	[Address(RVA = "0x2B9858", Offset = "0x2B9858", VA = "0x2B9858")]
	public static extern void CSharp_AkInitSettings_bEnableGameSyncPreparation_set(IntPtr jarg1, bool jarg2);

	[PreserveSig]
	[Token(Token = "0x6000CED")]
	[Address(RVA = "0x2B9920", Offset = "0x2B9920", VA = "0x2B9920")]
	public static extern bool CSharp_AkInitSettings_bEnableGameSyncPreparation_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000CEE")]
	[Address(RVA = "0x2B99E8", Offset = "0x2B99E8", VA = "0x2B99E8")]
	public static extern void CSharp_AkInitSettings_uContinuousPlaybackLookAhead_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6000CEF")]
	[Address(RVA = "0x2B9AB0", Offset = "0x2B9AB0", VA = "0x2B9AB0")]
	public static extern uint CSharp_AkInitSettings_uContinuousPlaybackLookAhead_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000CF0")]
	[Address(RVA = "0x2B9B70", Offset = "0x2B9B70", VA = "0x2B9B70")]
	public static extern void CSharp_AkInitSettings_uNumSamplesPerFrame_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6000CF1")]
	[Address(RVA = "0x2B9C38", Offset = "0x2B9C38", VA = "0x2B9C38")]
	public static extern uint CSharp_AkInitSettings_uNumSamplesPerFrame_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000CF2")]
	[Address(RVA = "0x2B9CF8", Offset = "0x2B9CF8", VA = "0x2B9CF8")]
	public static extern void CSharp_AkInitSettings_uMonitorPoolSize_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6000CF3")]
	[Address(RVA = "0x2B9DC0", Offset = "0x2B9DC0", VA = "0x2B9DC0")]
	public static extern uint CSharp_AkInitSettings_uMonitorPoolSize_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000CF4")]
	[Address(RVA = "0x2B9E80", Offset = "0x2B9E80", VA = "0x2B9E80")]
	public static extern void CSharp_AkInitSettings_uMonitorQueuePoolSize_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6000CF5")]
	[Address(RVA = "0x2B9F48", Offset = "0x2B9F48", VA = "0x2B9F48")]
	public static extern uint CSharp_AkInitSettings_uMonitorQueuePoolSize_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000CF6")]
	[Address(RVA = "0x2BA008", Offset = "0x2BA008", VA = "0x2BA008")]
	public static extern void CSharp_AkInitSettings_settingsMainOutput_set(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6000CF7")]
	[Address(RVA = "0x2BA0D0", Offset = "0x2BA0D0", VA = "0x2BA0D0")]
	public static extern IntPtr CSharp_AkInitSettings_settingsMainOutput_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000CF8")]
	[Address(RVA = "0x2BA190", Offset = "0x2BA190", VA = "0x2BA190")]
	public static extern void CSharp_AkInitSettings_uMaxHardwareTimeoutMs_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6000CF9")]
	[Address(RVA = "0x2BA258", Offset = "0x2BA258", VA = "0x2BA258")]
	public static extern uint CSharp_AkInitSettings_uMaxHardwareTimeoutMs_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000CFA")]
	[Address(RVA = "0x2BA318", Offset = "0x2BA318", VA = "0x2BA318")]
	public static extern void CSharp_AkInitSettings_bUseSoundBankMgrThread_set(IntPtr jarg1, bool jarg2);

	[PreserveSig]
	[Token(Token = "0x6000CFB")]
	[Address(RVA = "0x2BA3E0", Offset = "0x2BA3E0", VA = "0x2BA3E0")]
	public static extern bool CSharp_AkInitSettings_bUseSoundBankMgrThread_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000CFC")]
	[Address(RVA = "0x2BA4A8", Offset = "0x2BA4A8", VA = "0x2BA4A8")]
	public static extern void CSharp_AkInitSettings_bUseLEngineThread_set(IntPtr jarg1, bool jarg2);

	[PreserveSig]
	[Token(Token = "0x6000CFD")]
	[Address(RVA = "0x2BA570", Offset = "0x2BA570", VA = "0x2BA570")]
	public static extern bool CSharp_AkInitSettings_bUseLEngineThread_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000CFE")]
	[Address(RVA = "0x2BA638", Offset = "0x2BA638", VA = "0x2BA638")]
	public static extern void CSharp_AkInitSettings_szPluginDLLPath_set(IntPtr jarg1, string jarg2);

	[PreserveSig]
	[Token(Token = "0x6000CFF")]
	[Address(RVA = "0x2BA71C", Offset = "0x2BA71C", VA = "0x2BA71C")]
	public static extern IntPtr CSharp_AkInitSettings_szPluginDLLPath_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000D00")]
	[Address(RVA = "0x2BA7DC", Offset = "0x2BA7DC", VA = "0x2BA7DC")]
	public static extern void CSharp_AkInitSettings_eFloorPlane_set(IntPtr jarg1, int jarg2);

	[PreserveSig]
	[Token(Token = "0x6000D01")]
	[Address(RVA = "0x2BA8A4", Offset = "0x2BA8A4", VA = "0x2BA8A4")]
	public static extern int CSharp_AkInitSettings_eFloorPlane_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000D02")]
	[Address(RVA = "0x2BA964", Offset = "0x2BA964", VA = "0x2BA964")]
	public static extern IntPtr CSharp_new_AkInitSettings();

	[PreserveSig]
	[Token(Token = "0x6000D03")]
	[Address(RVA = "0x2BAA14", Offset = "0x2BAA14", VA = "0x2BAA14")]
	public static extern void CSharp_delete_AkInitSettings(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000D04")]
	[Address(RVA = "0x2BAAD4", Offset = "0x2BAAD4", VA = "0x2BAAD4")]
	public static extern void CSharp_AkSourceSettings_sourceID_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6000D05")]
	[Address(RVA = "0x2BAB9C", Offset = "0x2BAB9C", VA = "0x2BAB9C")]
	public static extern uint CSharp_AkSourceSettings_sourceID_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000D06")]
	[Address(RVA = "0x2BAC5C", Offset = "0x2BAC5C", VA = "0x2BAC5C")]
	public static extern void CSharp_AkSourceSettings_pMediaMemory_set(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6000D07")]
	[Address(RVA = "0x2BAD24", Offset = "0x2BAD24", VA = "0x2BAD24")]
	public static extern IntPtr CSharp_AkSourceSettings_pMediaMemory_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000D08")]
	[Address(RVA = "0x2BADE4", Offset = "0x2BADE4", VA = "0x2BADE4")]
	public static extern void CSharp_AkSourceSettings_uMediaSize_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6000D09")]
	[Address(RVA = "0x2BAEAC", Offset = "0x2BAEAC", VA = "0x2BAEAC")]
	public static extern uint CSharp_AkSourceSettings_uMediaSize_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000D0A")]
	[Address(RVA = "0x2BAF6C", Offset = "0x2BAF6C", VA = "0x2BAF6C")]
	public static extern IntPtr CSharp_new_AkSourceSettings();

	[PreserveSig]
	[Token(Token = "0x6000D0B")]
	[Address(RVA = "0x2BB01C", Offset = "0x2BB01C", VA = "0x2BB01C")]
	public static extern void CSharp_delete_AkSourceSettings(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000D0C")]
	[Address(RVA = "0x294D4C", Offset = "0x294D4C", VA = "0x294D4C")]
	public static extern bool CSharp_IsInitialized();

	[PreserveSig]
	[Token(Token = "0x6000D0D")]
	[Address(RVA = "0x294E98", Offset = "0x294E98", VA = "0x294E98")]
	public static extern int CSharp_GetAudioSettings(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000D0E")]
	[Address(RVA = "0x295018", Offset = "0x295018", VA = "0x295018")]
	public static extern IntPtr CSharp_GetSpeakerConfiguration__SWIG_0(ulong jarg1);

	[PreserveSig]
	[Token(Token = "0x6000D0F")]
	[Address(RVA = "0x295188", Offset = "0x295188", VA = "0x295188")]
	public static extern IntPtr CSharp_GetSpeakerConfiguration__SWIG_1();

	[PreserveSig]
	[Token(Token = "0x6000D10")]
	[Address(RVA = "0x2952D0", Offset = "0x2952D0", VA = "0x2952D0")]
	public static extern int CSharp_GetPanningRule__SWIG_0(out int jarg1, ulong jarg2);

	[PreserveSig]
	[Token(Token = "0x6000D11")]
	[Address(RVA = "0x295430", Offset = "0x295430", VA = "0x295430")]
	public static extern int CSharp_GetPanningRule__SWIG_1(out int jarg1);

	[PreserveSig]
	[Token(Token = "0x6000D12")]
	[Address(RVA = "0x295598", Offset = "0x295598", VA = "0x295598")]
	public static extern int CSharp_SetPanningRule__SWIG_0(int jarg1, ulong jarg2);

	[PreserveSig]
	[Token(Token = "0x6000D13")]
	[Address(RVA = "0x2956E8", Offset = "0x2956E8", VA = "0x2956E8")]
	public static extern int CSharp_SetPanningRule__SWIG_1(int jarg1);

	[PreserveSig]
	[Token(Token = "0x6000D14")]
	[Address(RVA = "0x29584C", Offset = "0x29584C", VA = "0x29584C")]
	public static extern int CSharp_GetSpeakerAngles__SWIG_0([In][Out] float[] jarg1, ref uint jarg2, out float jarg3, ulong jarg4);

	[PreserveSig]
	[Token(Token = "0x6000D15")]
	[Address(RVA = "0x2959D8", Offset = "0x2959D8", VA = "0x2959D8")]
	public static extern int CSharp_GetSpeakerAngles__SWIG_1([In][Out] float[] jarg1, ref uint jarg2, out float jarg3);

	[PreserveSig]
	[Token(Token = "0x6000D16")]
	[Address(RVA = "0x295B64", Offset = "0x295B64", VA = "0x295B64")]
	public static extern int CSharp_SetSpeakerAngles__SWIG_0([In] float[] jarg1, uint jarg2, float jarg3, ulong jarg4);

	[PreserveSig]
	[Token(Token = "0x6000D17")]
	[Address(RVA = "0x295CE4", Offset = "0x295CE4", VA = "0x295CE4")]
	public static extern int CSharp_SetSpeakerAngles__SWIG_1([In] float[] jarg1, uint jarg2, float jarg3);

	[PreserveSig]
	[Token(Token = "0x6000D18")]
	[Address(RVA = "0x295E3C", Offset = "0x295E3C", VA = "0x295E3C")]
	public static extern int CSharp_SetVolumeThreshold(float jarg1);

	[PreserveSig]
	[Token(Token = "0x6000D19")]
	[Address(RVA = "0x295F7C", Offset = "0x295F7C", VA = "0x295F7C")]
	public static extern int CSharp_SetMaxNumVoicesLimit(ushort jarg1);

	[PreserveSig]
	[Token(Token = "0x6000D1A")]
	[Address(RVA = "0x2960BC", Offset = "0x2960BC", VA = "0x2960BC")]
	public static extern int CSharp_RenderAudio__SWIG_0(bool jarg1);

	[PreserveSig]
	[Token(Token = "0x6000D1B")]
	[Address(RVA = "0x2961F4", Offset = "0x2961F4", VA = "0x2961F4")]
	public static extern int CSharp_RenderAudio__SWIG_1();

	[PreserveSig]
	[Token(Token = "0x6000D1C")]
	[Address(RVA = "0x296324", Offset = "0x296324", VA = "0x296324")]
	public static extern int CSharp_RegisterPluginDLL(string jarg1);

	[PreserveSig]
	[Token(Token = "0x6000D1D")]
	[Address(RVA = "0x296488", Offset = "0x296488", VA = "0x296488")]
	public static extern uint CSharp_GetIDFromString(string jarg1);

	[PreserveSig]
	[Token(Token = "0x6000D1E")]
	[Address(RVA = "0x296738", Offset = "0x296738", VA = "0x296738")]
	public static extern uint CSharp_PostEvent__SWIG_0(uint jarg1, ulong jarg2, uint jarg3, IntPtr jarg4, IntPtr jarg5, uint jarg6, IntPtr jarg7, uint jarg8);

	[PreserveSig]
	[Token(Token = "0x6000D1F")]
	[Address(RVA = "0x2969F8", Offset = "0x2969F8", VA = "0x2969F8")]
	public static extern uint CSharp_PostEvent__SWIG_1(uint jarg1, ulong jarg2, uint jarg3, IntPtr jarg4, IntPtr jarg5, uint jarg6, IntPtr jarg7);

	[PreserveSig]
	[Token(Token = "0x6000D20")]
	[Address(RVA = "0x296C9C", Offset = "0x296C9C", VA = "0x296C9C")]
	public static extern uint CSharp_PostEvent__SWIG_2(uint jarg1, ulong jarg2, uint jarg3, IntPtr jarg4, IntPtr jarg5, uint jarg6);

	[PreserveSig]
	[Token(Token = "0x6000D21")]
	[Address(RVA = "0x296F30", Offset = "0x296F30", VA = "0x296F30")]
	public static extern uint CSharp_PostEvent__SWIG_3(uint jarg1, ulong jarg2, uint jarg3, IntPtr jarg4, IntPtr jarg5);

	[PreserveSig]
	[Token(Token = "0x6000D22")]
	[Address(RVA = "0x297130", Offset = "0x297130", VA = "0x297130")]
	public static extern uint CSharp_PostEvent__SWIG_4(uint jarg1, ulong jarg2, uint jarg3);

	[PreserveSig]
	[Token(Token = "0x6000D23")]
	[Address(RVA = "0x297208", Offset = "0x297208", VA = "0x297208")]
	public static extern uint CSharp_PostEvent__SWIG_5(uint jarg1, ulong jarg2);

	[PreserveSig]
	[Token(Token = "0x6000D24")]
	[Address(RVA = "0x2974A4", Offset = "0x2974A4", VA = "0x2974A4")]
	public static extern uint CSharp_PostEvent__SWIG_6(string jarg1, ulong jarg2, uint jarg3, IntPtr jarg4, IntPtr jarg5, uint jarg6, IntPtr jarg7, uint jarg8);

	[PreserveSig]
	[Token(Token = "0x6000D25")]
	[Address(RVA = "0x29778C", Offset = "0x29778C", VA = "0x29778C")]
	public static extern uint CSharp_PostEvent__SWIG_7(string jarg1, ulong jarg2, uint jarg3, IntPtr jarg4, IntPtr jarg5, uint jarg6, IntPtr jarg7);

	[PreserveSig]
	[Token(Token = "0x6000D26")]
	[Address(RVA = "0x297A48", Offset = "0x297A48", VA = "0x297A48")]
	public static extern uint CSharp_PostEvent__SWIG_8(string jarg1, ulong jarg2, uint jarg3, IntPtr jarg4, IntPtr jarg5, uint jarg6);

	[PreserveSig]
	[Token(Token = "0x6000D27")]
	[Address(RVA = "0x297CFC", Offset = "0x297CFC", VA = "0x297CFC")]
	public static extern uint CSharp_PostEvent__SWIG_9(string jarg1, ulong jarg2, uint jarg3, IntPtr jarg4, IntPtr jarg5);

	[PreserveSig]
	[Token(Token = "0x6000D28")]
	[Address(RVA = "0x297F14", Offset = "0x297F14", VA = "0x297F14")]
	public static extern uint CSharp_PostEvent__SWIG_10(string jarg1, ulong jarg2, uint jarg3);

	[PreserveSig]
	[Token(Token = "0x6000D29")]
	[Address(RVA = "0x298010", Offset = "0x298010", VA = "0x298010")]
	public static extern uint CSharp_PostEvent__SWIG_11(string jarg1, ulong jarg2);

	[PreserveSig]
	[Token(Token = "0x6000D2A")]
	[Address(RVA = "0x2981EC", Offset = "0x2981EC", VA = "0x2981EC")]
	public static extern int CSharp_ExecuteActionOnEvent__SWIG_0(uint jarg1, int jarg2, ulong jarg3, int jarg4, int jarg5, uint jarg6);

	[PreserveSig]
	[Token(Token = "0x6000D2B")]
	[Address(RVA = "0x2983B0", Offset = "0x2983B0", VA = "0x2983B0")]
	public static extern int CSharp_ExecuteActionOnEvent__SWIG_1(uint jarg1, int jarg2, ulong jarg3, int jarg4, int jarg5);

	[PreserveSig]
	[Token(Token = "0x6000D2C")]
	[Address(RVA = "0x298568", Offset = "0x298568", VA = "0x298568")]
	public static extern int CSharp_ExecuteActionOnEvent__SWIG_2(uint jarg1, int jarg2, ulong jarg3, int jarg4);

	[PreserveSig]
	[Token(Token = "0x6000D2D")]
	[Address(RVA = "0x298640", Offset = "0x298640", VA = "0x298640")]
	public static extern int CSharp_ExecuteActionOnEvent__SWIG_3(uint jarg1, int jarg2, ulong jarg3);

	[PreserveSig]
	[Token(Token = "0x6000D2E")]
	[Address(RVA = "0x298798", Offset = "0x298798", VA = "0x298798")]
	public static extern int CSharp_ExecuteActionOnEvent__SWIG_4(uint jarg1, int jarg2);

	[PreserveSig]
	[Token(Token = "0x6000D2F")]
	[Address(RVA = "0x298948", Offset = "0x298948", VA = "0x298948")]
	public static extern int CSharp_ExecuteActionOnEvent__SWIG_5(string jarg1, int jarg2, ulong jarg3, int jarg4, int jarg5, uint jarg6);

	[PreserveSig]
	[Token(Token = "0x6000D30")]
	[Address(RVA = "0x298B2C", Offset = "0x298B2C", VA = "0x298B2C")]
	public static extern int CSharp_ExecuteActionOnEvent__SWIG_6(string jarg1, int jarg2, ulong jarg3, int jarg4, int jarg5);

	[PreserveSig]
	[Token(Token = "0x6000D31")]
	[Address(RVA = "0x298D10", Offset = "0x298D10", VA = "0x298D10")]
	public static extern int CSharp_ExecuteActionOnEvent__SWIG_7(string jarg1, int jarg2, ulong jarg3, int jarg4);

	[PreserveSig]
	[Token(Token = "0x6000D32")]
	[Address(RVA = "0x298EE8", Offset = "0x298EE8", VA = "0x298EE8")]
	public static extern int CSharp_ExecuteActionOnEvent__SWIG_8(string jarg1, int jarg2, ulong jarg3);

	[PreserveSig]
	[Token(Token = "0x6000D33")]
	[Address(RVA = "0x29906C", Offset = "0x29906C", VA = "0x29906C")]
	public static extern int CSharp_ExecuteActionOnEvent__SWIG_9(string jarg1, int jarg2);

	[PreserveSig]
	[Token(Token = "0x6000D34")]
	[Address(RVA = "0x299248", Offset = "0x299248", VA = "0x299248")]
	public static extern int CSharp_PostMIDIOnEvent(uint jarg1, ulong jarg2, IntPtr jarg3, ushort jarg4);

	[PreserveSig]
	[Token(Token = "0x6000D35")]
	[Address(RVA = "0x2993F8", Offset = "0x2993F8", VA = "0x2993F8")]
	public static extern int CSharp_StopMIDIOnEvent__SWIG_0(uint jarg1, ulong jarg2);

	[PreserveSig]
	[Token(Token = "0x6000D36")]
	[Address(RVA = "0x299548", Offset = "0x299548", VA = "0x299548")]
	public static extern int CSharp_StopMIDIOnEvent__SWIG_1(uint jarg1);

	[PreserveSig]
	[Token(Token = "0x6000D37")]
	[Address(RVA = "0x299680", Offset = "0x299680", VA = "0x299680")]
	public static extern int CSharp_StopMIDIOnEvent__SWIG_2();

	[PreserveSig]
	[Token(Token = "0x6000D38")]
	[Address(RVA = "0x2997C8", Offset = "0x2997C8", VA = "0x2997C8")]
	public static extern int CSharp_PinEventInStreamCache__SWIG_0(uint jarg1, sbyte jarg2, sbyte jarg3);

	[PreserveSig]
	[Token(Token = "0x6000D39")]
	[Address(RVA = "0x299930", Offset = "0x299930", VA = "0x299930")]
	public static extern int CSharp_PinEventInStreamCache__SWIG_1(string jarg1, sbyte jarg2, sbyte jarg3);

	[PreserveSig]
	[Token(Token = "0x6000D3A")]
	[Address(RVA = "0x299AA4", Offset = "0x299AA4", VA = "0x299AA4")]
	public static extern int CSharp_UnpinEventInStreamCache__SWIG_0(uint jarg1);

	[PreserveSig]
	[Token(Token = "0x6000D3B")]
	[Address(RVA = "0x299BE4", Offset = "0x299BE4", VA = "0x299BE4")]
	public static extern int CSharp_UnpinEventInStreamCache__SWIG_1(string jarg1);

	[PreserveSig]
	[Token(Token = "0x6000D3C")]
	[Address(RVA = "0x299D60", Offset = "0x299D60", VA = "0x299D60")]
	public static extern int CSharp_GetBufferStatusForPinnedEvent__SWIG_0(uint jarg1, out float jarg2, out int jarg3);

	[PreserveSig]
	[Token(Token = "0x6000D3D")]
	[Address(RVA = "0x299EE4", Offset = "0x299EE4", VA = "0x299EE4")]
	public static extern int CSharp_GetBufferStatusForPinnedEvent__SWIG_1(string jarg1, out float jarg2, out int jarg3);

	[PreserveSig]
	[Token(Token = "0x6000D3E")]
	[Address(RVA = "0x29A0D8", Offset = "0x29A0D8", VA = "0x29A0D8")]
	public static extern int CSharp_SeekOnEvent__SWIG_0(uint jarg1, ulong jarg2, int jarg3, bool jarg4, uint jarg5);

	[PreserveSig]
	[Token(Token = "0x6000D3F")]
	[Address(RVA = "0x29A29C", Offset = "0x29A29C", VA = "0x29A29C")]
	public static extern int CSharp_SeekOnEvent__SWIG_1(uint jarg1, ulong jarg2, int jarg3, bool jarg4);

	[PreserveSig]
	[Token(Token = "0x6000D40")]
	[Address(RVA = "0x29A454", Offset = "0x29A454", VA = "0x29A454")]
	public static extern int CSharp_SeekOnEvent__SWIG_2(uint jarg1, ulong jarg2, int jarg3);

	[PreserveSig]
	[Token(Token = "0x6000D41")]
	[Address(RVA = "0x29A610", Offset = "0x29A610", VA = "0x29A610")]
	public static extern int CSharp_SeekOnEvent__SWIG_3(string jarg1, ulong jarg2, int jarg3, bool jarg4, uint jarg5);

	[PreserveSig]
	[Token(Token = "0x6000D42")]
	[Address(RVA = "0x29A7EC", Offset = "0x29A7EC", VA = "0x29A7EC")]
	public static extern int CSharp_SeekOnEvent__SWIG_4(string jarg1, ulong jarg2, int jarg3, bool jarg4);

	[PreserveSig]
	[Token(Token = "0x6000D43")]
	[Address(RVA = "0x29A9C4", Offset = "0x29A9C4", VA = "0x29A9C4")]
	public static extern int CSharp_SeekOnEvent__SWIG_5(string jarg1, ulong jarg2, int jarg3);

	[PreserveSig]
	[Token(Token = "0x6000D44")]
	[Address(RVA = "0x29ABB0", Offset = "0x29ABB0", VA = "0x29ABB0")]
	public static extern int CSharp_SeekOnEvent__SWIG_6(uint jarg1, ulong jarg2, float jarg3, bool jarg4, uint jarg5);

	[PreserveSig]
	[Token(Token = "0x6000D45")]
	[Address(RVA = "0x29AD84", Offset = "0x29AD84", VA = "0x29AD84")]
	public static extern int CSharp_SeekOnEvent__SWIG_7(uint jarg1, ulong jarg2, float jarg3, bool jarg4);

	[PreserveSig]
	[Token(Token = "0x6000D46")]
	[Address(RVA = "0x29AF48", Offset = "0x29AF48", VA = "0x29AF48")]
	public static extern int CSharp_SeekOnEvent__SWIG_8(uint jarg1, ulong jarg2, float jarg3);

	[PreserveSig]
	[Token(Token = "0x6000D47")]
	[Address(RVA = "0x29B110", Offset = "0x29B110", VA = "0x29B110")]
	public static extern int CSharp_SeekOnEvent__SWIG_9(string jarg1, ulong jarg2, float jarg3, bool jarg4, uint jarg5);

	[PreserveSig]
	[Token(Token = "0x6000D48")]
	[Address(RVA = "0x29B30C", Offset = "0x29B30C", VA = "0x29B30C")]
	public static extern int CSharp_SeekOnEvent__SWIG_10(string jarg1, ulong jarg2, float jarg3, bool jarg4);

	[PreserveSig]
	[Token(Token = "0x6000D49")]
	[Address(RVA = "0x29B4FC", Offset = "0x29B4FC", VA = "0x29B4FC")]
	public static extern int CSharp_SeekOnEvent__SWIG_11(string jarg1, ulong jarg2, float jarg3);

	[PreserveSig]
	[Token(Token = "0x6000D4A")]
	[Address(RVA = "0x2BB0DC", Offset = "0x2BB0DC", VA = "0x2BB0DC")]
	public static extern void CSharp_CancelEventCallbackCookie(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000D4B")]
	[Address(RVA = "0x29B750", Offset = "0x29B750", VA = "0x29B750")]
	public static extern void CSharp_CancelEventCallbackGameObject(ulong jarg1);

	[PreserveSig]
	[Token(Token = "0x6000D4C")]
	[Address(RVA = "0x2BB19C", Offset = "0x2BB19C", VA = "0x2BB19C")]
	public static extern void CSharp_CancelEventCallback(uint jarg1);

	[PreserveSig]
	[Token(Token = "0x6000D4D")]
	[Address(RVA = "0x29B938", Offset = "0x29B938", VA = "0x29B938")]
	public static extern int CSharp_GetSourcePlayPosition__SWIG_0(uint jarg1, out int jarg2, bool jarg3);

	[PreserveSig]
	[Token(Token = "0x6000D4E")]
	[Address(RVA = "0x29BAA0", Offset = "0x29BAA0", VA = "0x29BAA0")]
	public static extern int CSharp_GetSourcePlayPosition__SWIG_1(uint jarg1, out int jarg2);

	[PreserveSig]
	[Token(Token = "0x6000D4F")]
	[Address(RVA = "0x29BC10", Offset = "0x29BC10", VA = "0x29BC10")]
	public static extern int CSharp_GetSourceStreamBuffering(uint jarg1, out int jarg2, out int jarg3);

	[PreserveSig]
	[Token(Token = "0x6000D50")]
	[Address(RVA = "0x29BDC4", Offset = "0x29BDC4", VA = "0x29BDC4")]
	public static extern void CSharp_StopAll__SWIG_0(ulong jarg1);

	[PreserveSig]
	[Token(Token = "0x6000D51")]
	[Address(RVA = "0x29BF04", Offset = "0x29BF04", VA = "0x29BF04")]
	public static extern void CSharp_StopAll__SWIG_1();

	[PreserveSig]
	[Token(Token = "0x6000D52")]
	[Address(RVA = "0x29C04C", Offset = "0x29C04C", VA = "0x29C04C")]
	public static extern void CSharp_StopPlayingID__SWIG_0(uint jarg1, int jarg2, int jarg3);

	[PreserveSig]
	[Token(Token = "0x6000D53")]
	[Address(RVA = "0x29C1A4", Offset = "0x29C1A4", VA = "0x29C1A4")]
	public static extern void CSharp_StopPlayingID__SWIG_1(uint jarg1, int jarg2);

	[PreserveSig]
	[Token(Token = "0x6000D54")]
	[Address(RVA = "0x29C2EC", Offset = "0x29C2EC", VA = "0x29C2EC")]
	public static extern void CSharp_StopPlayingID__SWIG_2(uint jarg1);

	[PreserveSig]
	[Token(Token = "0x6000D55")]
	[Address(RVA = "0x29C42C", Offset = "0x29C42C", VA = "0x29C42C")]
	public static extern void CSharp_SetRandomSeed(uint jarg1);

	[PreserveSig]
	[Token(Token = "0x6000D56")]
	[Address(RVA = "0x29C56C", Offset = "0x29C56C", VA = "0x29C56C")]
	public static extern void CSharp_MuteBackgroundMusic(bool jarg1);

	[PreserveSig]
	[Token(Token = "0x6000D57")]
	[Address(RVA = "0x29C6A4", Offset = "0x29C6A4", VA = "0x29C6A4")]
	public static extern bool CSharp_GetBackgroundMusicMute();

	[PreserveSig]
	[Token(Token = "0x6000D58")]
	[Address(RVA = "0x29C84C", Offset = "0x29C84C", VA = "0x29C84C")]
	public static extern int CSharp_SendPluginCustomGameData(uint jarg1, ulong jarg2, int jarg3, uint jarg4, uint jarg5, IntPtr jarg6, uint jarg7);

	[PreserveSig]
	[Token(Token = "0x6000D59")]
	[Address(RVA = "0x29C9BC", Offset = "0x29C9BC", VA = "0x29C9BC")]
	public static extern int CSharp_UnregisterAllGameObj();

	[PreserveSig]
	[Token(Token = "0x6000D5A")]
	[Address(RVA = "0x29CB58", Offset = "0x29CB58", VA = "0x29CB58")]
	public static extern int CSharp_SetMultiplePositions__SWIG_0(ulong jarg1, IntPtr jarg2, ushort jarg3, int jarg4);

	[PreserveSig]
	[Token(Token = "0x6000D5B")]
	[Address(RVA = "0x29CD18", Offset = "0x29CD18", VA = "0x29CD18")]
	public static extern int CSharp_SetMultiplePositions__SWIG_1(ulong jarg1, IntPtr jarg2, ushort jarg3);

	[PreserveSig]
	[Token(Token = "0x6000D5C")]
	[Address(RVA = "0x29CED4", Offset = "0x29CED4", VA = "0x29CED4")]
	public static extern int CSharp_SetMultiplePositions__SWIG_2(ulong jarg1, IntPtr jarg2, ushort jarg3, int jarg4);

	[PreserveSig]
	[Token(Token = "0x6000D5D")]
	[Address(RVA = "0x29D094", Offset = "0x29D094", VA = "0x29D094")]
	public static extern int CSharp_SetMultiplePositions__SWIG_3(ulong jarg1, IntPtr jarg2, ushort jarg3);

	[PreserveSig]
	[Token(Token = "0x6000D5E")]
	[Address(RVA = "0x29D240", Offset = "0x29D240", VA = "0x29D240")]
	public static extern int CSharp_SetScalingFactor(ulong jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x6000D5F")]
	[Address(RVA = "0x29D388", Offset = "0x29D388", VA = "0x29D388")]
	public static extern int CSharp_ClearBanks();

	[PreserveSig]
	[Token(Token = "0x6000D60")]
	[Address(RVA = "0x29D4C0", Offset = "0x29D4C0", VA = "0x29D4C0")]
	public static extern int CSharp_SetBankLoadIOSettings(float jarg1, sbyte jarg2);

	[PreserveSig]
	[Token(Token = "0x6000D61")]
	[Address(RVA = "0x29D620", Offset = "0x29D620", VA = "0x29D620")]
	public static extern int CSharp_LoadBank__SWIG_0(string jarg1, int jarg2, out uint jarg3);

	[PreserveSig]
	[Token(Token = "0x6000D62")]
	[Address(RVA = "0x29D7AC", Offset = "0x29D7AC", VA = "0x29D7AC")]
	public static extern int CSharp_LoadBank__SWIG_1(uint jarg1, int jarg2);

	[PreserveSig]
	[Token(Token = "0x6000D63")]
	[Address(RVA = "0x29D90C", Offset = "0x29D90C", VA = "0x29D90C")]
	public static extern int CSharp_LoadBank__SWIG_2(IntPtr jarg1, uint jarg2, out uint jarg3);

	[PreserveSig]
	[Token(Token = "0x6000D64")]
	[Address(RVA = "0x29DA8C", Offset = "0x29DA8C", VA = "0x29DA8C")]
	public static extern int CSharp_LoadBank__SWIG_3(IntPtr jarg1, uint jarg2, int jarg3, out uint jarg4);

	[PreserveSig]
	[Token(Token = "0x6000D65")]
	[Address(RVA = "0x29DC78", Offset = "0x29DC78", VA = "0x29DC78")]
	public static extern int CSharp_LoadBank__SWIG_4(string jarg1, IntPtr jarg2, IntPtr jarg3, int jarg4, out uint jarg5);

	[PreserveSig]
	[Token(Token = "0x6000D66")]
	[Address(RVA = "0x29DE8C", Offset = "0x29DE8C", VA = "0x29DE8C")]
	public static extern int CSharp_LoadBank__SWIG_5(uint jarg1, IntPtr jarg2, IntPtr jarg3, int jarg4);

	[PreserveSig]
	[Token(Token = "0x6000D67")]
	[Address(RVA = "0x29E064", Offset = "0x29E064", VA = "0x29E064")]
	public static extern int CSharp_LoadBank__SWIG_6(IntPtr jarg1, uint jarg2, IntPtr jarg3, IntPtr jarg4, out uint jarg5);

	[PreserveSig]
	[Token(Token = "0x6000D68")]
	[Address(RVA = "0x29E260", Offset = "0x29E260", VA = "0x29E260")]
	public static extern int CSharp_LoadBank__SWIG_7(IntPtr jarg1, uint jarg2, IntPtr jarg3, IntPtr jarg4, int jarg5, out uint jarg6);

	[PreserveSig]
	[Token(Token = "0x6000D69")]
	[Address(RVA = "0x29E3EC", Offset = "0x29E3EC", VA = "0x29E3EC")]
	public static extern int CSharp_UnloadBank__SWIG_0(string jarg1, IntPtr jarg2, out int jarg3);

	[PreserveSig]
	[Token(Token = "0x6000D6A")]
	[Address(RVA = "0x29E578", Offset = "0x29E578", VA = "0x29E578")]
	public static extern int CSharp_UnloadBank__SWIG_1(string jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6000D6B")]
	[Address(RVA = "0x29E6FC", Offset = "0x29E6FC", VA = "0x29E6FC")]
	public static extern int CSharp_UnloadBank__SWIG_2(uint jarg1, IntPtr jarg2, out int jarg3);

	[PreserveSig]
	[Token(Token = "0x6000D6C")]
	[Address(RVA = "0x29E864", Offset = "0x29E864", VA = "0x29E864")]
	public static extern int CSharp_UnloadBank__SWIG_3(uint jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6000D6D")]
	[Address(RVA = "0x29EA28", Offset = "0x29EA28", VA = "0x29EA28")]
	public static extern int CSharp_UnloadBank__SWIG_4(string jarg1, IntPtr jarg2, IntPtr jarg3, IntPtr jarg4);

	[PreserveSig]
	[Token(Token = "0x6000D6E")]
	[Address(RVA = "0x29EC20", Offset = "0x29EC20", VA = "0x29EC20")]
	public static extern int CSharp_UnloadBank__SWIG_5(uint jarg1, IntPtr jarg2, IntPtr jarg3, IntPtr jarg4);

	[PreserveSig]
	[Token(Token = "0x6000D6F")]
	[Address(RVA = "0x2BB25C", Offset = "0x2BB25C", VA = "0x2BB25C")]
	public static extern void CSharp_CancelBankCallbackCookie(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000D70")]
	[Address(RVA = "0x29EE14", Offset = "0x29EE14", VA = "0x29EE14")]
	public static extern int CSharp_PrepareBank__SWIG_0(int jarg1, string jarg2, int jarg3);

	[PreserveSig]
	[Token(Token = "0x6000D71")]
	[Address(RVA = "0x29EF90", Offset = "0x29EF90", VA = "0x29EF90")]
	public static extern int CSharp_PrepareBank__SWIG_1(int jarg1, string jarg2);

	[PreserveSig]
	[Token(Token = "0x6000D72")]
	[Address(RVA = "0x29F114", Offset = "0x29F114", VA = "0x29F114")]
	public static extern int CSharp_PrepareBank__SWIG_2(int jarg1, uint jarg2, int jarg3);

	[PreserveSig]
	[Token(Token = "0x6000D73")]
	[Address(RVA = "0x29F26C", Offset = "0x29F26C", VA = "0x29F26C")]
	public static extern int CSharp_PrepareBank__SWIG_3(int jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6000D74")]
	[Address(RVA = "0x29F438", Offset = "0x29F438", VA = "0x29F438")]
	public static extern int CSharp_PrepareBank__SWIG_4(int jarg1, string jarg2, IntPtr jarg3, IntPtr jarg4, int jarg5);

	[PreserveSig]
	[Token(Token = "0x6000D75")]
	[Address(RVA = "0x29F638", Offset = "0x29F638", VA = "0x29F638")]
	public static extern int CSharp_PrepareBank__SWIG_5(int jarg1, string jarg2, IntPtr jarg3, IntPtr jarg4);

	[PreserveSig]
	[Token(Token = "0x6000D76")]
	[Address(RVA = "0x29F838", Offset = "0x29F838", VA = "0x29F838")]
	public static extern int CSharp_PrepareBank__SWIG_6(int jarg1, uint jarg2, IntPtr jarg3, IntPtr jarg4, int jarg5);

	[PreserveSig]
	[Token(Token = "0x6000D77")]
	[Address(RVA = "0x29FA10", Offset = "0x29FA10", VA = "0x29FA10")]
	public static extern int CSharp_PrepareBank__SWIG_7(int jarg1, uint jarg2, IntPtr jarg3, IntPtr jarg4);

	[PreserveSig]
	[Token(Token = "0x6000D78")]
	[Address(RVA = "0x29FB5C", Offset = "0x29FB5C", VA = "0x29FB5C")]
	public static extern int CSharp_ClearPreparedEvents();

	[PreserveSig]
	[Token(Token = "0x6000D79")]
	[Address(RVA = "0x29FF80", Offset = "0x29FF80", VA = "0x29FF80")]
	public static extern int CSharp_PrepareEvent__SWIG_0(int jarg1, IntPtr jarg2, uint jarg3);

	[PreserveSig]
	[Token(Token = "0x6000D7A")]
	[Address(RVA = "0x2A00E8", Offset = "0x2A00E8", VA = "0x2A00E8")]
	public static extern int CSharp_PrepareEvent__SWIG_1(int jarg1, [In] uint[] jarg2, uint jarg3);

	[PreserveSig]
	[Token(Token = "0x6000D7B")]
	[Address(RVA = "0x2A05AC", Offset = "0x2A05AC", VA = "0x2A05AC")]
	public static extern int CSharp_PrepareEvent__SWIG_2(int jarg1, IntPtr jarg2, uint jarg3, IntPtr jarg4, IntPtr jarg5);

	[PreserveSig]
	[Token(Token = "0x6000D7C")]
	[Address(RVA = "0x2A078C", Offset = "0x2A078C", VA = "0x2A078C")]
	public static extern int CSharp_PrepareEvent__SWIG_3(int jarg1, [In] uint[] jarg2, uint jarg3, IntPtr jarg4, IntPtr jarg5);

	[PreserveSig]
	[Token(Token = "0x6000D7D")]
	[Address(RVA = "0x2A090C", Offset = "0x2A090C", VA = "0x2A090C")]
	public static extern int CSharp_SetMedia(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6000D7E")]
	[Address(RVA = "0x2A0A70", Offset = "0x2A0A70", VA = "0x2A0A70")]
	public static extern int CSharp_UnsetMedia(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6000D7F")]
	[Address(RVA = "0x2A0EB4", Offset = "0x2A0EB4", VA = "0x2A0EB4")]
	public static extern int CSharp_PrepareGameSyncs__SWIG_0(int jarg1, int jarg2, string jarg3, IntPtr jarg4, uint jarg5);

	[PreserveSig]
	[Token(Token = "0x6000D80")]
	[Address(RVA = "0x2A105C", Offset = "0x2A105C", VA = "0x2A105C")]
	public static extern int CSharp_PrepareGameSyncs__SWIG_1(int jarg1, int jarg2, uint jarg3, [In] uint[] jarg4, uint jarg5);

	[PreserveSig]
	[Token(Token = "0x6000D81")]
	[Address(RVA = "0x2A152C", Offset = "0x2A152C", VA = "0x2A152C")]
	public static extern int CSharp_PrepareGameSyncs__SWIG_2(int jarg1, int jarg2, string jarg3, IntPtr jarg4, uint jarg5, IntPtr jarg6, IntPtr jarg7);

	[PreserveSig]
	[Token(Token = "0x6000D82")]
	[Address(RVA = "0x2A1748", Offset = "0x2A1748", VA = "0x2A1748")]
	public static extern int CSharp_PrepareGameSyncs__SWIG_3(int jarg1, int jarg2, uint jarg3, [In] uint[] jarg4, uint jarg5, IntPtr jarg6, IntPtr jarg7);

	[PreserveSig]
	[Token(Token = "0x6000D83")]
	[Address(RVA = "0x2A191C", Offset = "0x2A191C", VA = "0x2A191C")]
	public static extern int CSharp_AddListener(ulong jarg1, ulong jarg2);

	[PreserveSig]
	[Token(Token = "0x6000D84")]
	[Address(RVA = "0x2A1ACC", Offset = "0x2A1ACC", VA = "0x2A1ACC")]
	public static extern int CSharp_RemoveListener(ulong jarg1, ulong jarg2);

	[PreserveSig]
	[Token(Token = "0x6000D85")]
	[Address(RVA = "0x2A1C64", Offset = "0x2A1C64", VA = "0x2A1C64")]
	public static extern int CSharp_AddDefaultListener(ulong jarg1);

	[PreserveSig]
	[Token(Token = "0x6000D86")]
	[Address(RVA = "0x2A1DF4", Offset = "0x2A1DF4", VA = "0x2A1DF4")]
	public static extern int CSharp_RemoveDefaultListener(ulong jarg1);

	[PreserveSig]
	[Token(Token = "0x6000D87")]
	[Address(RVA = "0x2A1F84", Offset = "0x2A1F84", VA = "0x2A1F84")]
	public static extern int CSharp_ResetListenersToDefault(ulong jarg1);

	[PreserveSig]
	[Token(Token = "0x6000D88")]
	[Address(RVA = "0x2A2138", Offset = "0x2A2138", VA = "0x2A2138")]
	public static extern int CSharp_SetListenerSpatialization__SWIG_0(ulong jarg1, bool jarg2, IntPtr jarg3, [In] float[] jarg4);

	[PreserveSig]
	[Token(Token = "0x6000D89")]
	[Address(RVA = "0x2A2300", Offset = "0x2A2300", VA = "0x2A2300")]
	public static extern int CSharp_SetListenerSpatialization__SWIG_1(ulong jarg1, bool jarg2, IntPtr jarg3);

	[PreserveSig]
	[Token(Token = "0x6000D8A")]
	[Address(RVA = "0x2A24B8", Offset = "0x2A24B8", VA = "0x2A24B8")]
	public static extern int CSharp_SetRTPCValue__SWIG_0(uint jarg1, float jarg2, ulong jarg3, int jarg4, int jarg5, bool jarg6);

	[PreserveSig]
	[Token(Token = "0x6000D8B")]
	[Address(RVA = "0x2A267C", Offset = "0x2A267C", VA = "0x2A267C")]
	public static extern int CSharp_SetRTPCValue__SWIG_1(uint jarg1, float jarg2, ulong jarg3, int jarg4, int jarg5);

	[PreserveSig]
	[Token(Token = "0x6000D8C")]
	[Address(RVA = "0x2A2834", Offset = "0x2A2834", VA = "0x2A2834")]
	public static extern int CSharp_SetRTPCValue__SWIG_2(uint jarg1, float jarg2, ulong jarg3, int jarg4);

	[PreserveSig]
	[Token(Token = "0x6000D8D")]
	[Address(RVA = "0x2A29E0", Offset = "0x2A29E0", VA = "0x2A29E0")]
	public static extern int CSharp_SetRTPCValue__SWIG_3(uint jarg1, float jarg2, ulong jarg3);

	[PreserveSig]
	[Token(Token = "0x6000D8E")]
	[Address(RVA = "0x2A2B38", Offset = "0x2A2B38", VA = "0x2A2B38")]
	public static extern int CSharp_SetRTPCValue__SWIG_4(uint jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x6000D8F")]
	[Address(RVA = "0x2A2CE8", Offset = "0x2A2CE8", VA = "0x2A2CE8")]
	public static extern int CSharp_SetRTPCValue__SWIG_5(string jarg1, float jarg2, ulong jarg3, int jarg4, int jarg5, bool jarg6);

	[PreserveSig]
	[Token(Token = "0x6000D90")]
	[Address(RVA = "0x2A2ECC", Offset = "0x2A2ECC", VA = "0x2A2ECC")]
	public static extern int CSharp_SetRTPCValue__SWIG_6(string jarg1, float jarg2, ulong jarg3, int jarg4, int jarg5);

	[PreserveSig]
	[Token(Token = "0x6000D91")]
	[Address(RVA = "0x2A30B0", Offset = "0x2A30B0", VA = "0x2A30B0")]
	public static extern int CSharp_SetRTPCValue__SWIG_7(string jarg1, float jarg2, ulong jarg3, int jarg4);

	[PreserveSig]
	[Token(Token = "0x6000D92")]
	[Address(RVA = "0x2A3288", Offset = "0x2A3288", VA = "0x2A3288")]
	public static extern int CSharp_SetRTPCValue__SWIG_8(string jarg1, float jarg2, ulong jarg3);

	[PreserveSig]
	[Token(Token = "0x6000D93")]
	[Address(RVA = "0x2A340C", Offset = "0x2A340C", VA = "0x2A340C")]
	public static extern int CSharp_SetRTPCValue__SWIG_9(string jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x6000D94")]
	[Address(RVA = "0x2A35A4", Offset = "0x2A35A4", VA = "0x2A35A4")]
	public static extern int CSharp_SetRTPCValueByPlayingID__SWIG_0(uint jarg1, float jarg2, uint jarg3, int jarg4, int jarg5, bool jarg6);

	[PreserveSig]
	[Token(Token = "0x6000D95")]
	[Address(RVA = "0x2A372C", Offset = "0x2A372C", VA = "0x2A372C")]
	public static extern int CSharp_SetRTPCValueByPlayingID__SWIG_1(uint jarg1, float jarg2, uint jarg3, int jarg4, int jarg5);

	[PreserveSig]
	[Token(Token = "0x6000D96")]
	[Address(RVA = "0x2A38A8", Offset = "0x2A38A8", VA = "0x2A38A8")]
	public static extern int CSharp_SetRTPCValueByPlayingID__SWIG_2(uint jarg1, float jarg2, uint jarg3, int jarg4);

	[PreserveSig]
	[Token(Token = "0x6000D97")]
	[Address(RVA = "0x2A3A14", Offset = "0x2A3A14", VA = "0x2A3A14")]
	public static extern int CSharp_SetRTPCValueByPlayingID__SWIG_3(uint jarg1, float jarg2, uint jarg3);

	[PreserveSig]
	[Token(Token = "0x6000D98")]
	[Address(RVA = "0x2A3B90", Offset = "0x2A3B90", VA = "0x2A3B90")]
	public static extern int CSharp_SetRTPCValueByPlayingID__SWIG_4(string jarg1, float jarg2, uint jarg3, int jarg4, int jarg5, bool jarg6);

	[PreserveSig]
	[Token(Token = "0x6000D99")]
	[Address(RVA = "0x2A3D3C", Offset = "0x2A3D3C", VA = "0x2A3D3C")]
	public static extern int CSharp_SetRTPCValueByPlayingID__SWIG_5(string jarg1, float jarg2, uint jarg3, int jarg4, int jarg5);

	[PreserveSig]
	[Token(Token = "0x6000D9A")]
	[Address(RVA = "0x2A3EE0", Offset = "0x2A3EE0", VA = "0x2A3EE0")]
	public static extern int CSharp_SetRTPCValueByPlayingID__SWIG_6(string jarg1, float jarg2, uint jarg3, int jarg4);

	[PreserveSig]
	[Token(Token = "0x6000D9B")]
	[Address(RVA = "0x2A4074", Offset = "0x2A4074", VA = "0x2A4074")]
	public static extern int CSharp_SetRTPCValueByPlayingID__SWIG_7(string jarg1, float jarg2, uint jarg3);

	[PreserveSig]
	[Token(Token = "0x6000D9C")]
	[Address(RVA = "0x2A424C", Offset = "0x2A424C", VA = "0x2A424C")]
	public static extern int CSharp_ResetRTPCValue__SWIG_0(uint jarg1, ulong jarg2, int jarg3, int jarg4, bool jarg5);

	[PreserveSig]
	[Token(Token = "0x6000D9D")]
	[Address(RVA = "0x2A4410", Offset = "0x2A4410", VA = "0x2A4410")]
	public static extern int CSharp_ResetRTPCValue__SWIG_1(uint jarg1, ulong jarg2, int jarg3, int jarg4);

	[PreserveSig]
	[Token(Token = "0x6000D9E")]
	[Address(RVA = "0x2A45C8", Offset = "0x2A45C8", VA = "0x2A45C8")]
	public static extern int CSharp_ResetRTPCValue__SWIG_2(uint jarg1, ulong jarg2, int jarg3);

	[PreserveSig]
	[Token(Token = "0x6000D9F")]
	[Address(RVA = "0x2A4770", Offset = "0x2A4770", VA = "0x2A4770")]
	public static extern int CSharp_ResetRTPCValue__SWIG_3(uint jarg1, ulong jarg2);

	[PreserveSig]
	[Token(Token = "0x6000DA0")]
	[Address(RVA = "0x2A48C0", Offset = "0x2A48C0", VA = "0x2A48C0")]
	public static extern int CSharp_ResetRTPCValue__SWIG_4(uint jarg1);

	[PreserveSig]
	[Token(Token = "0x6000DA1")]
	[Address(RVA = "0x2A4A64", Offset = "0x2A4A64", VA = "0x2A4A64")]
	public static extern int CSharp_ResetRTPCValue__SWIG_5(string jarg1, ulong jarg2, int jarg3, int jarg4, bool jarg5);

	[PreserveSig]
	[Token(Token = "0x6000DA2")]
	[Address(RVA = "0x2A4C40", Offset = "0x2A4C40", VA = "0x2A4C40")]
	public static extern int CSharp_ResetRTPCValue__SWIG_6(string jarg1, ulong jarg2, int jarg3, int jarg4);

	[PreserveSig]
	[Token(Token = "0x6000DA3")]
	[Address(RVA = "0x2A4E18", Offset = "0x2A4E18", VA = "0x2A4E18")]
	public static extern int CSharp_ResetRTPCValue__SWIG_7(string jarg1, ulong jarg2, int jarg3);

	[PreserveSig]
	[Token(Token = "0x6000DA4")]
	[Address(RVA = "0x2A4FE4", Offset = "0x2A4FE4", VA = "0x2A4FE4")]
	public static extern int CSharp_ResetRTPCValue__SWIG_8(string jarg1, ulong jarg2);

	[PreserveSig]
	[Token(Token = "0x6000DA5")]
	[Address(RVA = "0x2A5158", Offset = "0x2A5158", VA = "0x2A5158")]
	public static extern int CSharp_ResetRTPCValue__SWIG_9(string jarg1);

	[PreserveSig]
	[Token(Token = "0x6000DA6")]
	[Address(RVA = "0x2A5310", Offset = "0x2A5310", VA = "0x2A5310")]
	public static extern int CSharp_SetSwitch__SWIG_0(uint jarg1, uint jarg2, ulong jarg3);

	[PreserveSig]
	[Token(Token = "0x6000DA7")]
	[Address(RVA = "0x2A54B4", Offset = "0x2A54B4", VA = "0x2A54B4")]
	public static extern int CSharp_SetSwitch__SWIG_1(string jarg1, string jarg2, ulong jarg3);

	[PreserveSig]
	[Token(Token = "0x6000DA8")]
	[Address(RVA = "0x2A5694", Offset = "0x2A5694", VA = "0x2A5694")]
	public static extern int CSharp_PostTrigger__SWIG_0(uint jarg1, ulong jarg2);

	[PreserveSig]
	[Token(Token = "0x6000DA9")]
	[Address(RVA = "0x2A5834", Offset = "0x2A5834", VA = "0x2A5834")]
	public static extern int CSharp_PostTrigger__SWIG_1(string jarg1, ulong jarg2);

	[PreserveSig]
	[Token(Token = "0x6000DAA")]
	[Address(RVA = "0x2A59B0", Offset = "0x2A59B0", VA = "0x2A59B0")]
	public static extern int CSharp_SetState__SWIG_0(uint jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6000DAB")]
	[Address(RVA = "0x2A5B00", Offset = "0x2A5B00", VA = "0x2A5B00")]
	public static extern int CSharp_SetState__SWIG_1(string jarg1, string jarg2);

	[PreserveSig]
	[Token(Token = "0x6000DAC")]
	[Address(RVA = "0x2A5CF4", Offset = "0x2A5CF4", VA = "0x2A5CF4")]
	public static extern int CSharp_SetGameObjectAuxSendValues(ulong jarg1, IntPtr jarg2, uint jarg3);

	[PreserveSig]
	[Token(Token = "0x6000DAD")]
	[Address(RVA = "0x2A5EB8", Offset = "0x2A5EB8", VA = "0x2A5EB8")]
	public static extern int CSharp_SetGameObjectOutputBusVolume(ulong jarg1, ulong jarg2, float jarg3);

	[PreserveSig]
	[Token(Token = "0x6000DAE")]
	[Address(RVA = "0x2A6028", Offset = "0x2A6028", VA = "0x2A6028")]
	public static extern int CSharp_SetActorMixerEffect(uint jarg1, uint jarg2, uint jarg3);

	[PreserveSig]
	[Token(Token = "0x6000DAF")]
	[Address(RVA = "0x2A6190", Offset = "0x2A6190", VA = "0x2A6190")]
	public static extern int CSharp_SetBusEffect__SWIG_0(uint jarg1, uint jarg2, uint jarg3);

	[PreserveSig]
	[Token(Token = "0x6000DB0")]
	[Address(RVA = "0x2A62F8", Offset = "0x2A62F8", VA = "0x2A62F8")]
	public static extern int CSharp_SetBusEffect__SWIG_1(string jarg1, uint jarg2, uint jarg3);

	[PreserveSig]
	[Token(Token = "0x6000DB1")]
	[Address(RVA = "0x2A6474", Offset = "0x2A6474", VA = "0x2A6474")]
	public static extern int CSharp_SetMixer__SWIG_0(uint jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6000DB2")]
	[Address(RVA = "0x2A65C4", Offset = "0x2A65C4", VA = "0x2A65C4")]
	public static extern int CSharp_SetMixer__SWIG_1(string jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6000DB3")]
	[Address(RVA = "0x2A674C", Offset = "0x2A674C", VA = "0x2A674C")]
	public static extern int CSharp_SetBusConfig__SWIG_0(uint jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6000DB4")]
	[Address(RVA = "0x2A68B0", Offset = "0x2A68B0", VA = "0x2A68B0")]
	public static extern int CSharp_SetBusConfig__SWIG_1(string jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6000DB5")]
	[Address(RVA = "0x2A6A98", Offset = "0x2A6A98", VA = "0x2A6A98")]
	public static extern int CSharp_SetObjectObstructionAndOcclusion(ulong jarg1, ulong jarg2, float jarg3, float jarg4);

	[PreserveSig]
	[Token(Token = "0x6000DB6")]
	[Address(RVA = "0x2A6CB0", Offset = "0x2A6CB0", VA = "0x2A6CB0")]
	public static extern int CSharp_SetMultipleObstructionAndOcclusion(ulong jarg1, ulong jarg2, IntPtr jarg3, uint jarg4);

	[PreserveSig]
	[Token(Token = "0x6000DB7")]
	[Address(RVA = "0x2A6E10", Offset = "0x2A6E10", VA = "0x2A6E10")]
	public static extern int CSharp_StartOutputCapture(string jarg1);

	[PreserveSig]
	[Token(Token = "0x6000DB8")]
	[Address(RVA = "0x2A6F6C", Offset = "0x2A6F6C", VA = "0x2A6F6C")]
	public static extern int CSharp_StopOutputCapture();

	[PreserveSig]
	[Token(Token = "0x6000DB9")]
	[Address(RVA = "0x2A709C", Offset = "0x2A709C", VA = "0x2A709C")]
	public static extern int CSharp_AddOutputCaptureMarker(string jarg1);

	[PreserveSig]
	[Token(Token = "0x6000DBA")]
	[Address(RVA = "0x2A7200", Offset = "0x2A7200", VA = "0x2A7200")]
	public static extern int CSharp_StartProfilerCapture(string jarg1);

	[PreserveSig]
	[Token(Token = "0x6000DBB")]
	[Address(RVA = "0x2A735C", Offset = "0x2A735C", VA = "0x2A735C")]
	public static extern int CSharp_StopProfilerCapture();

	[PreserveSig]
	[Token(Token = "0x6000DBC")]
	[Address(RVA = "0x2A749C", Offset = "0x2A749C", VA = "0x2A749C")]
	public static extern int CSharp_RemoveOutput(ulong jarg1);

	[PreserveSig]
	[Token(Token = "0x6000DBD")]
	[Address(RVA = "0x2A75EC", Offset = "0x2A75EC", VA = "0x2A75EC")]
	public static extern ulong CSharp_GetOutputID__SWIG_0(uint jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6000DBE")]
	[Address(RVA = "0x2A773C", Offset = "0x2A773C", VA = "0x2A773C")]
	public static extern ulong CSharp_GetOutputID__SWIG_1(string jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6000DBF")]
	[Address(RVA = "0x2A78B8", Offset = "0x2A78B8", VA = "0x2A78B8")]
	public static extern int CSharp_SetBusDevice__SWIG_0(uint jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6000DC0")]
	[Address(RVA = "0x2A7A08", Offset = "0x2A7A08", VA = "0x2A7A08")]
	public static extern int CSharp_SetBusDevice__SWIG_1(string jarg1, string jarg2);

	[PreserveSig]
	[Token(Token = "0x6000DC1")]
	[Address(RVA = "0x2A7BA8", Offset = "0x2A7BA8", VA = "0x2A7BA8")]
	public static extern int CSharp_SetOutputVolume(ulong jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x6000DC2")]
	[Address(RVA = "0x2A7CF8", Offset = "0x2A7CF8", VA = "0x2A7CF8")]
	public static extern int CSharp_Suspend__SWIG_0(bool jarg1);

	[PreserveSig]
	[Token(Token = "0x6000DC3")]
	[Address(RVA = "0x2A7E30", Offset = "0x2A7E30", VA = "0x2A7E30")]
	public static extern int CSharp_Suspend__SWIG_1();

	[PreserveSig]
	[Token(Token = "0x6000DC4")]
	[Address(RVA = "0x2A7F58", Offset = "0x2A7F58", VA = "0x2A7F58")]
	public static extern int CSharp_WakeupFromSuspend();

	[PreserveSig]
	[Token(Token = "0x6000DC5")]
	[Address(RVA = "0x2A8080", Offset = "0x2A8080", VA = "0x2A8080")]
	public static extern uint CSharp_GetBufferTick();

	[PreserveSig]
	[Token(Token = "0x6000DC6")]
	[Address(RVA = "0x28FC34", Offset = "0x28FC34", VA = "0x28FC34")]
	public static extern void CSharp_AkSegmentInfo_iCurrentPosition_set(IntPtr jarg1, int jarg2);

	[PreserveSig]
	[Token(Token = "0x6000DC7")]
	[Address(RVA = "0x28FD80", Offset = "0x28FD80", VA = "0x28FD80")]
	public static extern int CSharp_AkSegmentInfo_iCurrentPosition_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000DC8")]
	[Address(RVA = "0x28FECC", Offset = "0x28FECC", VA = "0x28FECC")]
	public static extern void CSharp_AkSegmentInfo_iPreEntryDuration_set(IntPtr jarg1, int jarg2);

	[PreserveSig]
	[Token(Token = "0x6000DC9")]
	[Address(RVA = "0x290018", Offset = "0x290018", VA = "0x290018")]
	public static extern int CSharp_AkSegmentInfo_iPreEntryDuration_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000DCA")]
	[Address(RVA = "0x290164", Offset = "0x290164", VA = "0x290164")]
	public static extern void CSharp_AkSegmentInfo_iActiveDuration_set(IntPtr jarg1, int jarg2);

	[PreserveSig]
	[Token(Token = "0x6000DCB")]
	[Address(RVA = "0x2902B0", Offset = "0x2902B0", VA = "0x2902B0")]
	public static extern int CSharp_AkSegmentInfo_iActiveDuration_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000DCC")]
	[Address(RVA = "0x2903FC", Offset = "0x2903FC", VA = "0x2903FC")]
	public static extern void CSharp_AkSegmentInfo_iPostExitDuration_set(IntPtr jarg1, int jarg2);

	[PreserveSig]
	[Token(Token = "0x6000DCD")]
	[Address(RVA = "0x290548", Offset = "0x290548", VA = "0x290548")]
	public static extern int CSharp_AkSegmentInfo_iPostExitDuration_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000DCE")]
	[Address(RVA = "0x290694", Offset = "0x290694", VA = "0x290694")]
	public static extern void CSharp_AkSegmentInfo_iRemainingLookAheadTime_set(IntPtr jarg1, int jarg2);

	[PreserveSig]
	[Token(Token = "0x6000DCF")]
	[Address(RVA = "0x2907E0", Offset = "0x2907E0", VA = "0x2907E0")]
	public static extern int CSharp_AkSegmentInfo_iRemainingLookAheadTime_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000DD0")]
	[Address(RVA = "0x29092C", Offset = "0x29092C", VA = "0x29092C")]
	public static extern void CSharp_AkSegmentInfo_fBeatDuration_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x6000DD1")]
	[Address(RVA = "0x290A78", Offset = "0x290A78", VA = "0x290A78")]
	public static extern float CSharp_AkSegmentInfo_fBeatDuration_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000DD2")]
	[Address(RVA = "0x290BC4", Offset = "0x290BC4", VA = "0x290BC4")]
	public static extern void CSharp_AkSegmentInfo_fBarDuration_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x6000DD3")]
	[Address(RVA = "0x290D10", Offset = "0x290D10", VA = "0x290D10")]
	public static extern float CSharp_AkSegmentInfo_fBarDuration_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000DD4")]
	[Address(RVA = "0x290E5C", Offset = "0x290E5C", VA = "0x290E5C")]
	public static extern void CSharp_AkSegmentInfo_fGridDuration_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x6000DD5")]
	[Address(RVA = "0x290FA8", Offset = "0x290FA8", VA = "0x290FA8")]
	public static extern float CSharp_AkSegmentInfo_fGridDuration_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000DD6")]
	[Address(RVA = "0x2910F4", Offset = "0x2910F4", VA = "0x2910F4")]
	public static extern void CSharp_AkSegmentInfo_fGridOffset_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x6000DD7")]
	[Address(RVA = "0x291240", Offset = "0x291240", VA = "0x291240")]
	public static extern float CSharp_AkSegmentInfo_fGridOffset_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000DD8")]
	[Address(RVA = "0x28F834", Offset = "0x28F834", VA = "0x28F834")]
	public static extern IntPtr CSharp_new_AkSegmentInfo();

	[PreserveSig]
	[Token(Token = "0x6000DD9")]
	[Address(RVA = "0x28FAE8", Offset = "0x28FAE8", VA = "0x28FAE8")]
	public static extern void CSharp_delete_AkSegmentInfo(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000DDA")]
	[Address(RVA = "0x2A81A8", Offset = "0x2A81A8", VA = "0x2A81A8")]
	public static extern byte CSharp_AK_INVALID_MIDI_CHANNEL_get();

	[PreserveSig]
	[Token(Token = "0x6000DDB")]
	[Address(RVA = "0x2A82D0", Offset = "0x2A82D0", VA = "0x2A82D0")]
	public static extern byte CSharp_AK_INVALID_MIDI_NOTE_get();

	[PreserveSig]
	[Token(Token = "0x6000DDC")]
	[Address(RVA = "0x2BB31C", Offset = "0x2BB31C", VA = "0x2BB31C")]
	public static extern void CSharp_AkMIDIEvent_byChan_set(IntPtr jarg1, byte jarg2);

	[PreserveSig]
	[Token(Token = "0x6000DDD")]
	[Address(RVA = "0x2BB3E4", Offset = "0x2BB3E4", VA = "0x2BB3E4")]
	public static extern byte CSharp_AkMIDIEvent_byChan_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000DDE")]
	[Address(RVA = "0x2BB4A4", Offset = "0x2BB4A4", VA = "0x2BB4A4")]
	public static extern void CSharp_AkMIDIEvent_tGen_byParam1_set(IntPtr jarg1, byte jarg2);

	[PreserveSig]
	[Token(Token = "0x6000DDF")]
	[Address(RVA = "0x2BB56C", Offset = "0x2BB56C", VA = "0x2BB56C")]
	public static extern byte CSharp_AkMIDIEvent_tGen_byParam1_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000DE0")]
	[Address(RVA = "0x2BB62C", Offset = "0x2BB62C", VA = "0x2BB62C")]
	public static extern void CSharp_AkMIDIEvent_tGen_byParam2_set(IntPtr jarg1, byte jarg2);

	[PreserveSig]
	[Token(Token = "0x6000DE1")]
	[Address(RVA = "0x2BB6F4", Offset = "0x2BB6F4", VA = "0x2BB6F4")]
	public static extern byte CSharp_AkMIDIEvent_tGen_byParam2_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000DE2")]
	[Address(RVA = "0x2BB7B4", Offset = "0x2BB7B4", VA = "0x2BB7B4")]
	public static extern IntPtr CSharp_new_AkMIDIEvent_tGen();

	[PreserveSig]
	[Token(Token = "0x6000DE3")]
	[Address(RVA = "0x2BB864", Offset = "0x2BB864", VA = "0x2BB864")]
	public static extern void CSharp_delete_AkMIDIEvent_tGen(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000DE4")]
	[Address(RVA = "0x2BB924", Offset = "0x2BB924", VA = "0x2BB924")]
	public static extern void CSharp_AkMIDIEvent_tNoteOnOff_byNote_set(IntPtr jarg1, byte jarg2);

	[PreserveSig]
	[Token(Token = "0x6000DE5")]
	[Address(RVA = "0x2BB9EC", Offset = "0x2BB9EC", VA = "0x2BB9EC")]
	public static extern byte CSharp_AkMIDIEvent_tNoteOnOff_byNote_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000DE6")]
	[Address(RVA = "0x2BBAAC", Offset = "0x2BBAAC", VA = "0x2BBAAC")]
	public static extern void CSharp_AkMIDIEvent_tNoteOnOff_byVelocity_set(IntPtr jarg1, byte jarg2);

	[PreserveSig]
	[Token(Token = "0x6000DE7")]
	[Address(RVA = "0x2BBB74", Offset = "0x2BBB74", VA = "0x2BBB74")]
	public static extern byte CSharp_AkMIDIEvent_tNoteOnOff_byVelocity_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000DE8")]
	[Address(RVA = "0x2BBC34", Offset = "0x2BBC34", VA = "0x2BBC34")]
	public static extern IntPtr CSharp_new_AkMIDIEvent_tNoteOnOff();

	[PreserveSig]
	[Token(Token = "0x6000DE9")]
	[Address(RVA = "0x2BBCE4", Offset = "0x2BBCE4", VA = "0x2BBCE4")]
	public static extern void CSharp_delete_AkMIDIEvent_tNoteOnOff(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000DEA")]
	[Address(RVA = "0x2BBDA4", Offset = "0x2BBDA4", VA = "0x2BBDA4")]
	public static extern void CSharp_AkMIDIEvent_tCc_byCc_set(IntPtr jarg1, byte jarg2);

	[PreserveSig]
	[Token(Token = "0x6000DEB")]
	[Address(RVA = "0x2BBE6C", Offset = "0x2BBE6C", VA = "0x2BBE6C")]
	public static extern byte CSharp_AkMIDIEvent_tCc_byCc_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000DEC")]
	[Address(RVA = "0x2BBF2C", Offset = "0x2BBF2C", VA = "0x2BBF2C")]
	public static extern void CSharp_AkMIDIEvent_tCc_byValue_set(IntPtr jarg1, byte jarg2);

	[PreserveSig]
	[Token(Token = "0x6000DED")]
	[Address(RVA = "0x2BBFF4", Offset = "0x2BBFF4", VA = "0x2BBFF4")]
	public static extern byte CSharp_AkMIDIEvent_tCc_byValue_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000DEE")]
	[Address(RVA = "0x2BC0B4", Offset = "0x2BC0B4", VA = "0x2BC0B4")]
	public static extern IntPtr CSharp_new_AkMIDIEvent_tCc();

	[PreserveSig]
	[Token(Token = "0x6000DEF")]
	[Address(RVA = "0x2BC164", Offset = "0x2BC164", VA = "0x2BC164")]
	public static extern void CSharp_delete_AkMIDIEvent_tCc(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000DF0")]
	[Address(RVA = "0x2BC224", Offset = "0x2BC224", VA = "0x2BC224")]
	public static extern void CSharp_AkMIDIEvent_tPitchBend_byValueLsb_set(IntPtr jarg1, byte jarg2);

	[PreserveSig]
	[Token(Token = "0x6000DF1")]
	[Address(RVA = "0x2BC2EC", Offset = "0x2BC2EC", VA = "0x2BC2EC")]
	public static extern byte CSharp_AkMIDIEvent_tPitchBend_byValueLsb_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000DF2")]
	[Address(RVA = "0x2BC3AC", Offset = "0x2BC3AC", VA = "0x2BC3AC")]
	public static extern void CSharp_AkMIDIEvent_tPitchBend_byValueMsb_set(IntPtr jarg1, byte jarg2);

	[PreserveSig]
	[Token(Token = "0x6000DF3")]
	[Address(RVA = "0x2BC474", Offset = "0x2BC474", VA = "0x2BC474")]
	public static extern byte CSharp_AkMIDIEvent_tPitchBend_byValueMsb_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000DF4")]
	[Address(RVA = "0x2BC534", Offset = "0x2BC534", VA = "0x2BC534")]
	public static extern IntPtr CSharp_new_AkMIDIEvent_tPitchBend();

	[PreserveSig]
	[Token(Token = "0x6000DF5")]
	[Address(RVA = "0x2BC5E4", Offset = "0x2BC5E4", VA = "0x2BC5E4")]
	public static extern void CSharp_delete_AkMIDIEvent_tPitchBend(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000DF6")]
	[Address(RVA = "0x2BC6A4", Offset = "0x2BC6A4", VA = "0x2BC6A4")]
	public static extern void CSharp_AkMIDIEvent_tNoteAftertouch_byNote_set(IntPtr jarg1, byte jarg2);

	[PreserveSig]
	[Token(Token = "0x6000DF7")]
	[Address(RVA = "0x2BC76C", Offset = "0x2BC76C", VA = "0x2BC76C")]
	public static extern byte CSharp_AkMIDIEvent_tNoteAftertouch_byNote_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000DF8")]
	[Address(RVA = "0x2BC82C", Offset = "0x2BC82C", VA = "0x2BC82C")]
	public static extern void CSharp_AkMIDIEvent_tNoteAftertouch_byValue_set(IntPtr jarg1, byte jarg2);

	[PreserveSig]
	[Token(Token = "0x6000DF9")]
	[Address(RVA = "0x2BC8F4", Offset = "0x2BC8F4", VA = "0x2BC8F4")]
	public static extern byte CSharp_AkMIDIEvent_tNoteAftertouch_byValue_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000DFA")]
	[Address(RVA = "0x2BC9B4", Offset = "0x2BC9B4", VA = "0x2BC9B4")]
	public static extern IntPtr CSharp_new_AkMIDIEvent_tNoteAftertouch();

	[PreserveSig]
	[Token(Token = "0x6000DFB")]
	[Address(RVA = "0x2BCA64", Offset = "0x2BCA64", VA = "0x2BCA64")]
	public static extern void CSharp_delete_AkMIDIEvent_tNoteAftertouch(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000DFC")]
	[Address(RVA = "0x2BCB24", Offset = "0x2BCB24", VA = "0x2BCB24")]
	public static extern void CSharp_AkMIDIEvent_tChanAftertouch_byValue_set(IntPtr jarg1, byte jarg2);

	[PreserveSig]
	[Token(Token = "0x6000DFD")]
	[Address(RVA = "0x2BCBEC", Offset = "0x2BCBEC", VA = "0x2BCBEC")]
	public static extern byte CSharp_AkMIDIEvent_tChanAftertouch_byValue_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000DFE")]
	[Address(RVA = "0x2BCCAC", Offset = "0x2BCCAC", VA = "0x2BCCAC")]
	public static extern IntPtr CSharp_new_AkMIDIEvent_tChanAftertouch();

	[PreserveSig]
	[Token(Token = "0x6000DFF")]
	[Address(RVA = "0x2BCD5C", Offset = "0x2BCD5C", VA = "0x2BCD5C")]
	public static extern void CSharp_delete_AkMIDIEvent_tChanAftertouch(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000E00")]
	[Address(RVA = "0x271340", Offset = "0x271340", VA = "0x271340")]
	public static extern void CSharp_AkMIDIEvent_tProgramChange_byProgramNum_set(IntPtr jarg1, byte jarg2);

	[PreserveSig]
	[Token(Token = "0x6000E01")]
	[Address(RVA = "0x27148C", Offset = "0x27148C", VA = "0x27148C")]
	public static extern byte CSharp_AkMIDIEvent_tProgramChange_byProgramNum_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000E02")]
	[Address(RVA = "0x270F40", Offset = "0x270F40", VA = "0x270F40")]
	public static extern IntPtr CSharp_new_AkMIDIEvent_tProgramChange();

	[PreserveSig]
	[Token(Token = "0x6000E03")]
	[Address(RVA = "0x2711F4", Offset = "0x2711F4", VA = "0x2711F4")]
	public static extern void CSharp_delete_AkMIDIEvent_tProgramChange(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000E04")]
	[Address(RVA = "0x2BCE1C", Offset = "0x2BCE1C", VA = "0x2BCE1C")]
	public static extern void CSharp_AkMIDIEvent_Gen_set(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6000E05")]
	[Address(RVA = "0x2BCEE4", Offset = "0x2BCEE4", VA = "0x2BCEE4")]
	public static extern IntPtr CSharp_AkMIDIEvent_Gen_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000E06")]
	[Address(RVA = "0x2BCFA4", Offset = "0x2BCFA4", VA = "0x2BCFA4")]
	public static extern void CSharp_AkMIDIEvent_Cc_set(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6000E07")]
	[Address(RVA = "0x2BD06C", Offset = "0x2BD06C", VA = "0x2BD06C")]
	public static extern IntPtr CSharp_AkMIDIEvent_Cc_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000E08")]
	[Address(RVA = "0x2BD12C", Offset = "0x2BD12C", VA = "0x2BD12C")]
	public static extern void CSharp_AkMIDIEvent_NoteOnOff_set(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6000E09")]
	[Address(RVA = "0x2BD1F4", Offset = "0x2BD1F4", VA = "0x2BD1F4")]
	public static extern IntPtr CSharp_AkMIDIEvent_NoteOnOff_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000E0A")]
	[Address(RVA = "0x2BD2B4", Offset = "0x2BD2B4", VA = "0x2BD2B4")]
	public static extern void CSharp_AkMIDIEvent_PitchBend_set(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6000E0B")]
	[Address(RVA = "0x2BD37C", Offset = "0x2BD37C", VA = "0x2BD37C")]
	public static extern IntPtr CSharp_AkMIDIEvent_PitchBend_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000E0C")]
	[Address(RVA = "0x2BD43C", Offset = "0x2BD43C", VA = "0x2BD43C")]
	public static extern void CSharp_AkMIDIEvent_NoteAftertouch_set(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6000E0D")]
	[Address(RVA = "0x2BD504", Offset = "0x2BD504", VA = "0x2BD504")]
	public static extern IntPtr CSharp_AkMIDIEvent_NoteAftertouch_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000E0E")]
	[Address(RVA = "0x2BD5C4", Offset = "0x2BD5C4", VA = "0x2BD5C4")]
	public static extern void CSharp_AkMIDIEvent_ChanAftertouch_set(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6000E0F")]
	[Address(RVA = "0x2BD68C", Offset = "0x2BD68C", VA = "0x2BD68C")]
	public static extern IntPtr CSharp_AkMIDIEvent_ChanAftertouch_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000E10")]
	[Address(RVA = "0x2BD74C", Offset = "0x2BD74C", VA = "0x2BD74C")]
	public static extern void CSharp_AkMIDIEvent_ProgramChange_set(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6000E11")]
	[Address(RVA = "0x2BD814", Offset = "0x2BD814", VA = "0x2BD814")]
	public static extern IntPtr CSharp_AkMIDIEvent_ProgramChange_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000E12")]
	[Address(RVA = "0x2BD8D4", Offset = "0x2BD8D4", VA = "0x2BD8D4")]
	public static extern void CSharp_AkMIDIEvent_byType_set(IntPtr jarg1, int jarg2);

	[PreserveSig]
	[Token(Token = "0x6000E13")]
	[Address(RVA = "0x2BD99C", Offset = "0x2BD99C", VA = "0x2BD99C")]
	public static extern int CSharp_AkMIDIEvent_byType_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000E14")]
	[Address(RVA = "0x2BDA5C", Offset = "0x2BDA5C", VA = "0x2BDA5C")]
	public static extern void CSharp_AkMIDIEvent_byOnOffNote_set(IntPtr jarg1, byte jarg2);

	[PreserveSig]
	[Token(Token = "0x6000E15")]
	[Address(RVA = "0x2BDB24", Offset = "0x2BDB24", VA = "0x2BDB24")]
	public static extern byte CSharp_AkMIDIEvent_byOnOffNote_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000E16")]
	[Address(RVA = "0x2BDBE4", Offset = "0x2BDBE4", VA = "0x2BDBE4")]
	public static extern void CSharp_AkMIDIEvent_byVelocity_set(IntPtr jarg1, byte jarg2);

	[PreserveSig]
	[Token(Token = "0x6000E17")]
	[Address(RVA = "0x2BDCAC", Offset = "0x2BDCAC", VA = "0x2BDCAC")]
	public static extern byte CSharp_AkMIDIEvent_byVelocity_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000E18")]
	[Address(RVA = "0x2BDD6C", Offset = "0x2BDD6C", VA = "0x2BDD6C")]
	public static extern void CSharp_AkMIDIEvent_byCc_set(IntPtr jarg1, int jarg2);

	[PreserveSig]
	[Token(Token = "0x6000E19")]
	[Address(RVA = "0x2BDE34", Offset = "0x2BDE34", VA = "0x2BDE34")]
	public static extern int CSharp_AkMIDIEvent_byCc_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000E1A")]
	[Address(RVA = "0x2BDEF4", Offset = "0x2BDEF4", VA = "0x2BDEF4")]
	public static extern void CSharp_AkMIDIEvent_byCcValue_set(IntPtr jarg1, byte jarg2);

	[PreserveSig]
	[Token(Token = "0x6000E1B")]
	[Address(RVA = "0x2BDFBC", Offset = "0x2BDFBC", VA = "0x2BDFBC")]
	public static extern byte CSharp_AkMIDIEvent_byCcValue_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000E1C")]
	[Address(RVA = "0x2BE07C", Offset = "0x2BE07C", VA = "0x2BE07C")]
	public static extern void CSharp_AkMIDIEvent_byValueLsb_set(IntPtr jarg1, byte jarg2);

	[PreserveSig]
	[Token(Token = "0x6000E1D")]
	[Address(RVA = "0x2BE144", Offset = "0x2BE144", VA = "0x2BE144")]
	public static extern byte CSharp_AkMIDIEvent_byValueLsb_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000E1E")]
	[Address(RVA = "0x2BE204", Offset = "0x2BE204", VA = "0x2BE204")]
	public static extern void CSharp_AkMIDIEvent_byValueMsb_set(IntPtr jarg1, byte jarg2);

	[PreserveSig]
	[Token(Token = "0x6000E1F")]
	[Address(RVA = "0x2BE2CC", Offset = "0x2BE2CC", VA = "0x2BE2CC")]
	public static extern byte CSharp_AkMIDIEvent_byValueMsb_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000E20")]
	[Address(RVA = "0x2BE38C", Offset = "0x2BE38C", VA = "0x2BE38C")]
	public static extern void CSharp_AkMIDIEvent_byAftertouchNote_set(IntPtr jarg1, byte jarg2);

	[PreserveSig]
	[Token(Token = "0x6000E21")]
	[Address(RVA = "0x2BE454", Offset = "0x2BE454", VA = "0x2BE454")]
	public static extern byte CSharp_AkMIDIEvent_byAftertouchNote_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000E22")]
	[Address(RVA = "0x2BE514", Offset = "0x2BE514", VA = "0x2BE514")]
	public static extern void CSharp_AkMIDIEvent_byNoteAftertouchValue_set(IntPtr jarg1, byte jarg2);

	[PreserveSig]
	[Token(Token = "0x6000E23")]
	[Address(RVA = "0x2BE5DC", Offset = "0x2BE5DC", VA = "0x2BE5DC")]
	public static extern byte CSharp_AkMIDIEvent_byNoteAftertouchValue_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000E24")]
	[Address(RVA = "0x2BE69C", Offset = "0x2BE69C", VA = "0x2BE69C")]
	public static extern void CSharp_AkMIDIEvent_byChanAftertouchValue_set(IntPtr jarg1, byte jarg2);

	[PreserveSig]
	[Token(Token = "0x6000E25")]
	[Address(RVA = "0x2BE764", Offset = "0x2BE764", VA = "0x2BE764")]
	public static extern byte CSharp_AkMIDIEvent_byChanAftertouchValue_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000E26")]
	[Address(RVA = "0x2BE824", Offset = "0x2BE824", VA = "0x2BE824")]
	public static extern void CSharp_AkMIDIEvent_byProgramNum_set(IntPtr jarg1, byte jarg2);

	[PreserveSig]
	[Token(Token = "0x6000E27")]
	[Address(RVA = "0x2BE8EC", Offset = "0x2BE8EC", VA = "0x2BE8EC")]
	public static extern byte CSharp_AkMIDIEvent_byProgramNum_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000E28")]
	[Address(RVA = "0x2BE9AC", Offset = "0x2BE9AC", VA = "0x2BE9AC")]
	public static extern IntPtr CSharp_new_AkMIDIEvent();

	[PreserveSig]
	[Token(Token = "0x6000E29")]
	[Address(RVA = "0x2BEA5C", Offset = "0x2BEA5C", VA = "0x2BEA5C")]
	public static extern void CSharp_delete_AkMIDIEvent(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000E2A")]
	[Address(RVA = "0x27334C", Offset = "0x27334C", VA = "0x27334C")]
	public static extern void CSharp_AkMIDIPost_uOffset_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6000E2B")]
	[Address(RVA = "0x273498", Offset = "0x273498", VA = "0x273498")]
	public static extern uint CSharp_AkMIDIPost_uOffset_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000E2C")]
	[Address(RVA = "0x2736E8", Offset = "0x2736E8", VA = "0x2736E8")]
	public static extern int CSharp_AkMIDIPost_PostOnEvent(IntPtr jarg1, uint jarg2, ulong jarg3, uint jarg4);

	[PreserveSig]
	[Token(Token = "0x6000E2D")]
	[Address(RVA = "0x273894", Offset = "0x273894", VA = "0x273894")]
	public static extern void CSharp_AkMIDIPost_Clone(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6000E2E")]
	[Address(RVA = "0x2739D4", Offset = "0x2739D4", VA = "0x2739D4")]
	public static extern int CSharp_AkMIDIPost_GetSizeOf();

	[PreserveSig]
	[Token(Token = "0x6000E2F")]
	[Address(RVA = "0x272ED4", Offset = "0x272ED4", VA = "0x272ED4")]
	public static extern IntPtr CSharp_new_AkMIDIPost();

	[PreserveSig]
	[Token(Token = "0x6000E30")]
	[Address(RVA = "0x273200", Offset = "0x273200", VA = "0x273200")]
	public static extern void CSharp_delete_AkMIDIPost(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000E31")]
	[Address(RVA = "0x2BEB1C", Offset = "0x2BEB1C", VA = "0x2BEB1C")]
	public static extern IntPtr CSharp_new_AkMemSettings();

	[PreserveSig]
	[Token(Token = "0x6000E32")]
	[Address(RVA = "0x2BEBCC", Offset = "0x2BEBCC", VA = "0x2BEBCC")]
	public static extern void CSharp_AkMemSettings_uMaxNumPools_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6000E33")]
	[Address(RVA = "0x2BEC94", Offset = "0x2BEC94", VA = "0x2BEC94")]
	public static extern uint CSharp_AkMemSettings_uMaxNumPools_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000E34")]
	[Address(RVA = "0x2BED54", Offset = "0x2BED54", VA = "0x2BED54")]
	public static extern void CSharp_AkMemSettings_uDebugFlags_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6000E35")]
	[Address(RVA = "0x2BEE1C", Offset = "0x2BEE1C", VA = "0x2BEE1C")]
	public static extern uint CSharp_AkMemSettings_uDebugFlags_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000E36")]
	[Address(RVA = "0x2BEEDC", Offset = "0x2BEEDC", VA = "0x2BEEDC")]
	public static extern void CSharp_delete_AkMemSettings(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000E37")]
	[Address(RVA = "0x275CC4", Offset = "0x275CC4", VA = "0x275CC4")]
	public static extern void CSharp_AkMusicSettings_fStreamingLookAheadRatio_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x6000E38")]
	[Address(RVA = "0x275E10", Offset = "0x275E10", VA = "0x275E10")]
	public static extern float CSharp_AkMusicSettings_fStreamingLookAheadRatio_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000E39")]
	[Address(RVA = "0x2758C4", Offset = "0x2758C4", VA = "0x2758C4")]
	public static extern IntPtr CSharp_new_AkMusicSettings();

	[PreserveSig]
	[Token(Token = "0x6000E3A")]
	[Address(RVA = "0x275B78", Offset = "0x275B78", VA = "0x275B78")]
	public static extern void CSharp_delete_AkMusicSettings(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000E3B")]
	[Address(RVA = "0x2A8460", Offset = "0x2A8460", VA = "0x2A8460")]
	public static extern int CSharp_GetPlayingSegmentInfo__SWIG_0(uint jarg1, IntPtr jarg2, bool jarg3);

	[PreserveSig]
	[Token(Token = "0x6000E3C")]
	[Address(RVA = "0x2A8600", Offset = "0x2A8600", VA = "0x2A8600")]
	public static extern int CSharp_GetPlayingSegmentInfo__SWIG_1(uint jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6000E3D")]
	[Address(RVA = "0x2917B8", Offset = "0x2917B8", VA = "0x2917B8")]
	public static extern IntPtr CSharp_AkSerializedCallbackHeader_pPackage_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000E3E")]
	[Address(RVA = "0x291950", Offset = "0x291950", VA = "0x291950")]
	public static extern IntPtr CSharp_AkSerializedCallbackHeader_pNext_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000E3F")]
	[Address(RVA = "0x291A94", Offset = "0x291A94", VA = "0x291A94")]
	public static extern int CSharp_AkSerializedCallbackHeader_eType_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000E40")]
	[Address(RVA = "0x291BD8", Offset = "0x291BD8", VA = "0x291BD8")]
	public static extern IntPtr CSharp_AkSerializedCallbackHeader_GetData(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000E41")]
	[Address(RVA = "0x2913C0", Offset = "0x2913C0", VA = "0x2913C0")]
	public static extern IntPtr CSharp_new_AkSerializedCallbackHeader();

	[PreserveSig]
	[Token(Token = "0x6000E42")]
	[Address(RVA = "0x291674", Offset = "0x291674", VA = "0x291674")]
	public static extern void CSharp_delete_AkSerializedCallbackHeader(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000E43")]
	[Address(RVA = "0x2BEF9C", Offset = "0x2BEF9C", VA = "0x2BEF9C")]
	public static extern IntPtr CSharp_AkCallbackInfo_pCookie_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000E44")]
	[Address(RVA = "0x2BF05C", Offset = "0x2BF05C", VA = "0x2BF05C")]
	public static extern ulong CSharp_AkCallbackInfo_gameObjID_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000E45")]
	[Address(RVA = "0x2BF11C", Offset = "0x2BF11C", VA = "0x2BF11C")]
	public static extern IntPtr CSharp_new_AkCallbackInfo();

	[PreserveSig]
	[Token(Token = "0x6000E46")]
	[Address(RVA = "0x2BF1CC", Offset = "0x2BF1CC", VA = "0x2BF1CC")]
	public static extern void CSharp_delete_AkCallbackInfo(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000E47")]
	[Address(RVA = "0x2BF28C", Offset = "0x2BF28C", VA = "0x2BF28C")]
	public static extern uint CSharp_AkEventCallbackInfo_playingID_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000E48")]
	[Address(RVA = "0x2BF34C", Offset = "0x2BF34C", VA = "0x2BF34C")]
	public static extern uint CSharp_AkEventCallbackInfo_eventID_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000E49")]
	[Address(RVA = "0x2BF40C", Offset = "0x2BF40C", VA = "0x2BF40C")]
	public static extern IntPtr CSharp_new_AkEventCallbackInfo();

	[PreserveSig]
	[Token(Token = "0x6000E4A")]
	[Address(RVA = "0x2BF4BC", Offset = "0x2BF4BC", VA = "0x2BF4BC")]
	public static extern void CSharp_delete_AkEventCallbackInfo(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000E4B")]
	[Address(RVA = "0x271BB4", Offset = "0x271BB4", VA = "0x271BB4")]
	public static extern byte CSharp_AkMIDIEventCallbackInfo_byChan_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000E4C")]
	[Address(RVA = "0x271CF8", Offset = "0x271CF8", VA = "0x271CF8")]
	public static extern byte CSharp_AkMIDIEventCallbackInfo_byParam1_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000E4D")]
	[Address(RVA = "0x271E3C", Offset = "0x271E3C", VA = "0x271E3C")]
	public static extern byte CSharp_AkMIDIEventCallbackInfo_byParam2_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000E4E")]
	[Address(RVA = "0x271F80", Offset = "0x271F80", VA = "0x271F80")]
	public static extern int CSharp_AkMIDIEventCallbackInfo_byType_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000E4F")]
	[Address(RVA = "0x2720C4", Offset = "0x2720C4", VA = "0x2720C4")]
	public static extern byte CSharp_AkMIDIEventCallbackInfo_byOnOffNote_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000E50")]
	[Address(RVA = "0x272208", Offset = "0x272208", VA = "0x272208")]
	public static extern byte CSharp_AkMIDIEventCallbackInfo_byVelocity_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000E51")]
	[Address(RVA = "0x27234C", Offset = "0x27234C", VA = "0x27234C")]
	public static extern int CSharp_AkMIDIEventCallbackInfo_byCc_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000E52")]
	[Address(RVA = "0x272490", Offset = "0x272490", VA = "0x272490")]
	public static extern byte CSharp_AkMIDIEventCallbackInfo_byCcValue_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000E53")]
	[Address(RVA = "0x2725D4", Offset = "0x2725D4", VA = "0x2725D4")]
	public static extern byte CSharp_AkMIDIEventCallbackInfo_byValueLsb_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000E54")]
	[Address(RVA = "0x272718", Offset = "0x272718", VA = "0x272718")]
	public static extern byte CSharp_AkMIDIEventCallbackInfo_byValueMsb_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000E55")]
	[Address(RVA = "0x27285C", Offset = "0x27285C", VA = "0x27285C")]
	public static extern byte CSharp_AkMIDIEventCallbackInfo_byAftertouchNote_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000E56")]
	[Address(RVA = "0x2729A0", Offset = "0x2729A0", VA = "0x2729A0")]
	public static extern byte CSharp_AkMIDIEventCallbackInfo_byNoteAftertouchValue_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000E57")]
	[Address(RVA = "0x272AE4", Offset = "0x272AE4", VA = "0x272AE4")]
	public static extern byte CSharp_AkMIDIEventCallbackInfo_byChanAftertouchValue_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000E58")]
	[Address(RVA = "0x272C28", Offset = "0x272C28", VA = "0x272C28")]
	public static extern byte CSharp_AkMIDIEventCallbackInfo_byProgramNum_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000E59")]
	[Address(RVA = "0x271738", Offset = "0x271738", VA = "0x271738")]
	public static extern IntPtr CSharp_new_AkMIDIEventCallbackInfo();

	[PreserveSig]
	[Token(Token = "0x6000E5A")]
	[Address(RVA = "0x271A70", Offset = "0x271A70", VA = "0x271A70")]
	public static extern void CSharp_delete_AkMIDIEventCallbackInfo(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000E5B")]
	[Address(RVA = "0x2BF57C", Offset = "0x2BF57C", VA = "0x2BF57C")]
	public static extern uint CSharp_AkMarkerCallbackInfo_uIdentifier_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000E5C")]
	[Address(RVA = "0x2BF63C", Offset = "0x2BF63C", VA = "0x2BF63C")]
	public static extern uint CSharp_AkMarkerCallbackInfo_uPosition_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000E5D")]
	[Address(RVA = "0x2BF6FC", Offset = "0x2BF6FC", VA = "0x2BF6FC")]
	public static extern IntPtr CSharp_AkMarkerCallbackInfo_strLabel_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000E5E")]
	[Address(RVA = "0x2BF7BC", Offset = "0x2BF7BC", VA = "0x2BF7BC")]
	public static extern IntPtr CSharp_new_AkMarkerCallbackInfo();

	[PreserveSig]
	[Token(Token = "0x6000E5F")]
	[Address(RVA = "0x2BF86C", Offset = "0x2BF86C", VA = "0x2BF86C")]
	public static extern void CSharp_delete_AkMarkerCallbackInfo(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000E60")]
	[Address(RVA = "0x2BF92C", Offset = "0x2BF92C", VA = "0x2BF92C")]
	public static extern float CSharp_AkDurationCallbackInfo_fDuration_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000E61")]
	[Address(RVA = "0x2BF9EC", Offset = "0x2BF9EC", VA = "0x2BF9EC")]
	public static extern float CSharp_AkDurationCallbackInfo_fEstimatedDuration_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000E62")]
	[Address(RVA = "0x2BFAAC", Offset = "0x2BFAAC", VA = "0x2BFAAC")]
	public static extern uint CSharp_AkDurationCallbackInfo_audioNodeID_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000E63")]
	[Address(RVA = "0x2BFB6C", Offset = "0x2BFB6C", VA = "0x2BFB6C")]
	public static extern uint CSharp_AkDurationCallbackInfo_mediaID_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000E64")]
	[Address(RVA = "0x2BFC2C", Offset = "0x2BFC2C", VA = "0x2BFC2C")]
	public static extern bool CSharp_AkDurationCallbackInfo_bStreaming_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000E65")]
	[Address(RVA = "0x2BFCF4", Offset = "0x2BFCF4", VA = "0x2BFCF4")]
	public static extern IntPtr CSharp_new_AkDurationCallbackInfo();

	[PreserveSig]
	[Token(Token = "0x6000E66")]
	[Address(RVA = "0x2BFDA4", Offset = "0x2BFDA4", VA = "0x2BFDA4")]
	public static extern void CSharp_delete_AkDurationCallbackInfo(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000E67")]
	[Address(RVA = "0x2BFE64", Offset = "0x2BFE64", VA = "0x2BFE64")]
	public static extern uint CSharp_AkDynamicSequenceItemCallbackInfo_playingID_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000E68")]
	[Address(RVA = "0x2BFF24", Offset = "0x2BFF24", VA = "0x2BFF24")]
	public static extern uint CSharp_AkDynamicSequenceItemCallbackInfo_audioNodeID_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000E69")]
	[Address(RVA = "0x2BFFE4", Offset = "0x2BFFE4", VA = "0x2BFFE4")]
	public static extern IntPtr CSharp_AkDynamicSequenceItemCallbackInfo_pCustomInfo_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000E6A")]
	[Address(RVA = "0x2C00A4", Offset = "0x2C00A4", VA = "0x2C00A4")]
	public static extern IntPtr CSharp_new_AkDynamicSequenceItemCallbackInfo();

	[PreserveSig]
	[Token(Token = "0x6000E6B")]
	[Address(RVA = "0x2C0154", Offset = "0x2C0154", VA = "0x2C0154")]
	public static extern void CSharp_delete_AkDynamicSequenceItemCallbackInfo(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000E6C")]
	[Address(RVA = "0x27652C", Offset = "0x27652C", VA = "0x27652C")]
	public static extern uint CSharp_AkMusicSyncCallbackInfo_playingID_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000E6D")]
	[Address(RVA = "0x276670", Offset = "0x276670", VA = "0x276670")]
	public static extern int CSharp_AkMusicSyncCallbackInfo_segmentInfo_iCurrentPosition_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000E6E")]
	[Address(RVA = "0x2767B4", Offset = "0x2767B4", VA = "0x2767B4")]
	public static extern int CSharp_AkMusicSyncCallbackInfo_segmentInfo_iPreEntryDuration_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000E6F")]
	[Address(RVA = "0x2768F8", Offset = "0x2768F8", VA = "0x2768F8")]
	public static extern int CSharp_AkMusicSyncCallbackInfo_segmentInfo_iActiveDuration_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000E70")]
	[Address(RVA = "0x276A3C", Offset = "0x276A3C", VA = "0x276A3C")]
	public static extern int CSharp_AkMusicSyncCallbackInfo_segmentInfo_iPostExitDuration_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000E71")]
	[Address(RVA = "0x276B80", Offset = "0x276B80", VA = "0x276B80")]
	public static extern int CSharp_AkMusicSyncCallbackInfo_segmentInfo_iRemainingLookAheadTime_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000E72")]
	[Address(RVA = "0x276CC4", Offset = "0x276CC4", VA = "0x276CC4")]
	public static extern float CSharp_AkMusicSyncCallbackInfo_segmentInfo_fBeatDuration_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000E73")]
	[Address(RVA = "0x276E08", Offset = "0x276E08", VA = "0x276E08")]
	public static extern float CSharp_AkMusicSyncCallbackInfo_segmentInfo_fBarDuration_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000E74")]
	[Address(RVA = "0x276F4C", Offset = "0x276F4C", VA = "0x276F4C")]
	public static extern float CSharp_AkMusicSyncCallbackInfo_segmentInfo_fGridDuration_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000E75")]
	[Address(RVA = "0x277090", Offset = "0x277090", VA = "0x277090")]
	public static extern float CSharp_AkMusicSyncCallbackInfo_segmentInfo_fGridOffset_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000E76")]
	[Address(RVA = "0x2771D4", Offset = "0x2771D4", VA = "0x2771D4")]
	public static extern int CSharp_AkMusicSyncCallbackInfo_musicSyncType_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000E77")]
	[Address(RVA = "0x277350", Offset = "0x277350", VA = "0x277350")]
	public static extern IntPtr CSharp_AkMusicSyncCallbackInfo_userCueName_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000E78")]
	[Address(RVA = "0x2760BC", Offset = "0x2760BC", VA = "0x2760BC")]
	public static extern IntPtr CSharp_new_AkMusicSyncCallbackInfo();

	[PreserveSig]
	[Token(Token = "0x6000E79")]
	[Address(RVA = "0x2763E8", Offset = "0x2763E8", VA = "0x2763E8")]
	public static extern void CSharp_delete_AkMusicSyncCallbackInfo(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000E7A")]
	[Address(RVA = "0x275378", Offset = "0x275378", VA = "0x275378")]
	public static extern uint CSharp_AkMusicPlaylistCallbackInfo_playlistID_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000E7B")]
	[Address(RVA = "0x2754BC", Offset = "0x2754BC", VA = "0x2754BC")]
	public static extern uint CSharp_AkMusicPlaylistCallbackInfo_uNumPlaylistItems_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000E7C")]
	[Address(RVA = "0x275600", Offset = "0x275600", VA = "0x275600")]
	public static extern uint CSharp_AkMusicPlaylistCallbackInfo_uPlaylistSelection_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000E7D")]
	[Address(RVA = "0x275744", Offset = "0x275744", VA = "0x275744")]
	public static extern uint CSharp_AkMusicPlaylistCallbackInfo_uPlaylistItemDone_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000E7E")]
	[Address(RVA = "0x274EFC", Offset = "0x274EFC", VA = "0x274EFC")]
	public static extern IntPtr CSharp_new_AkMusicPlaylistCallbackInfo();

	[PreserveSig]
	[Token(Token = "0x6000E7F")]
	[Address(RVA = "0x275234", Offset = "0x275234", VA = "0x275234")]
	public static extern void CSharp_delete_AkMusicPlaylistCallbackInfo(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000E80")]
	[Address(RVA = "0x2C0214", Offset = "0x2C0214", VA = "0x2C0214")]
	public static extern uint CSharp_AkBankCallbackInfo_bankID_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000E81")]
	[Address(RVA = "0x2C02D4", Offset = "0x2C02D4", VA = "0x2C02D4")]
	public static extern IntPtr CSharp_AkBankCallbackInfo_inMemoryBankPtr_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000E82")]
	[Address(RVA = "0x2C0394", Offset = "0x2C0394", VA = "0x2C0394")]
	public static extern int CSharp_AkBankCallbackInfo_loadResult_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000E83")]
	[Address(RVA = "0x2C0454", Offset = "0x2C0454", VA = "0x2C0454")]
	public static extern int CSharp_AkBankCallbackInfo_memPoolId_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000E84")]
	[Address(RVA = "0x2C0514", Offset = "0x2C0514", VA = "0x2C0514")]
	public static extern IntPtr CSharp_new_AkBankCallbackInfo();

	[PreserveSig]
	[Token(Token = "0x6000E85")]
	[Address(RVA = "0x2C05C4", Offset = "0x2C05C4", VA = "0x2C05C4")]
	public static extern void CSharp_delete_AkBankCallbackInfo(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000E86")]
	[Address(RVA = "0x2745F0", Offset = "0x2745F0", VA = "0x2745F0")]
	public static extern int CSharp_AkMonitoringCallbackInfo_errorCode_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000E87")]
	[Address(RVA = "0x274734", Offset = "0x274734", VA = "0x274734")]
	public static extern int CSharp_AkMonitoringCallbackInfo_errorLevel_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000E88")]
	[Address(RVA = "0x274878", Offset = "0x274878", VA = "0x274878")]
	public static extern uint CSharp_AkMonitoringCallbackInfo_playingID_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000E89")]
	[Address(RVA = "0x2749BC", Offset = "0x2749BC", VA = "0x2749BC")]
	public static extern ulong CSharp_AkMonitoringCallbackInfo_gameObjID_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000E8A")]
	[Address(RVA = "0x274B38", Offset = "0x274B38", VA = "0x274B38")]
	public static extern IntPtr CSharp_AkMonitoringCallbackInfo_message_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000E8B")]
	[Address(RVA = "0x2741F8", Offset = "0x2741F8", VA = "0x2741F8")]
	public static extern IntPtr CSharp_new_AkMonitoringCallbackInfo();

	[PreserveSig]
	[Token(Token = "0x6000E8C")]
	[Address(RVA = "0x2744AC", Offset = "0x2744AC", VA = "0x2744AC")]
	public static extern void CSharp_delete_AkMonitoringCallbackInfo(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000E8D")]
	[Address(RVA = "0x2C0684", Offset = "0x2C0684", VA = "0x2C0684")]
	public static extern bool CSharp_AkAudioInterruptionCallbackInfo_bEnterInterruption_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000E8E")]
	[Address(RVA = "0x2C074C", Offset = "0x2C074C", VA = "0x2C074C")]
	public static extern IntPtr CSharp_new_AkAudioInterruptionCallbackInfo();

	[PreserveSig]
	[Token(Token = "0x6000E8F")]
	[Address(RVA = "0x2C07FC", Offset = "0x2C07FC", VA = "0x2C07FC")]
	public static extern void CSharp_delete_AkAudioInterruptionCallbackInfo(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000E90")]
	[Address(RVA = "0x2C08BC", Offset = "0x2C08BC", VA = "0x2C08BC")]
	public static extern bool CSharp_AkAudioSourceChangeCallbackInfo_bOtherAudioPlaying_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000E91")]
	[Address(RVA = "0x2C0984", Offset = "0x2C0984", VA = "0x2C0984")]
	public static extern IntPtr CSharp_new_AkAudioSourceChangeCallbackInfo();

	[PreserveSig]
	[Token(Token = "0x6000E92")]
	[Address(RVA = "0x2C0A34", Offset = "0x2C0A34", VA = "0x2C0A34")]
	public static extern void CSharp_delete_AkAudioSourceChangeCallbackInfo(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000E93")]
	[Address(RVA = "0x2C0AF4", Offset = "0x2C0AF4", VA = "0x2C0AF4")]
	public static extern int CSharp_AkCallbackSerializer_Init(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6000E94")]
	[Address(RVA = "0x2C0BBC", Offset = "0x2C0BBC", VA = "0x2C0BBC")]
	public static extern void CSharp_AkCallbackSerializer_Term();

	[PreserveSig]
	[Token(Token = "0x6000E95")]
	[Address(RVA = "0x2C0C6C", Offset = "0x2C0C6C", VA = "0x2C0C6C")]
	public static extern IntPtr CSharp_AkCallbackSerializer_Lock();

	[PreserveSig]
	[Token(Token = "0x6000E96")]
	[Address(RVA = "0x2C0D1C", Offset = "0x2C0D1C", VA = "0x2C0D1C")]
	public static extern void CSharp_AkCallbackSerializer_SetLocalOutput(uint jarg1);

	[PreserveSig]
	[Token(Token = "0x6000E97")]
	[Address(RVA = "0x2C0DDC", Offset = "0x2C0DDC", VA = "0x2C0DDC")]
	public static extern void CSharp_AkCallbackSerializer_Unlock();

	[PreserveSig]
	[Token(Token = "0x6000E98")]
	[Address(RVA = "0x2C0E8C", Offset = "0x2C0E8C", VA = "0x2C0E8C")]
	public static extern int CSharp_AkCallbackSerializer_AudioSourceChangeCallbackFunc(bool jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6000E99")]
	[Address(RVA = "0x2C0F54", Offset = "0x2C0F54", VA = "0x2C0F54")]
	public static extern IntPtr CSharp_new_AkCallbackSerializer();

	[PreserveSig]
	[Token(Token = "0x6000E9A")]
	[Address(RVA = "0x2C1004", Offset = "0x2C1004", VA = "0x2C1004")]
	public static extern void CSharp_delete_AkCallbackSerializer(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000E9B")]
	[Address(RVA = "0x2A87B4", Offset = "0x2A87B4", VA = "0x2A87B4")]
	public static extern int CSharp_PostCode__SWIG_0(int jarg1, int jarg2, uint jarg3, ulong jarg4, uint jarg5, bool jarg6);

	[PreserveSig]
	[Token(Token = "0x6000E9C")]
	[Address(RVA = "0x2A8984", Offset = "0x2A8984", VA = "0x2A8984")]
	public static extern int CSharp_PostCode__SWIG_1(int jarg1, int jarg2, uint jarg3, ulong jarg4, uint jarg5);

	[PreserveSig]
	[Token(Token = "0x6000E9D")]
	[Address(RVA = "0x2A8B48", Offset = "0x2A8B48", VA = "0x2A8B48")]
	public static extern int CSharp_PostCode__SWIG_2(int jarg1, int jarg2, uint jarg3, ulong jarg4);

	[PreserveSig]
	[Token(Token = "0x6000E9E")]
	[Address(RVA = "0x2A8CC0", Offset = "0x2A8CC0", VA = "0x2A8CC0")]
	public static extern int CSharp_PostCode__SWIG_3(int jarg1, int jarg2, uint jarg3);

	[PreserveSig]
	[Token(Token = "0x6000E9F")]
	[Address(RVA = "0x2A8E18", Offset = "0x2A8E18", VA = "0x2A8E18")]
	public static extern int CSharp_PostCode__SWIG_4(int jarg1, int jarg2);

	[PreserveSig]
	[Token(Token = "0x6000EA0")]
	[Address(RVA = "0x2A8FCC", Offset = "0x2A8FCC", VA = "0x2A8FCC")]
	public static extern int CSharp_PostString__SWIG_0(string jarg1, int jarg2, uint jarg3, ulong jarg4, uint jarg5, bool jarg6);

	[PreserveSig]
	[Token(Token = "0x6000EA1")]
	[Address(RVA = "0x2A91C0", Offset = "0x2A91C0", VA = "0x2A91C0")]
	public static extern int CSharp_PostString__SWIG_1(string jarg1, int jarg2, uint jarg3, ulong jarg4, uint jarg5);

	[PreserveSig]
	[Token(Token = "0x6000EA2")]
	[Address(RVA = "0x2A93A8", Offset = "0x2A93A8", VA = "0x2A93A8")]
	public static extern int CSharp_PostString__SWIG_2(string jarg1, int jarg2, uint jarg3, ulong jarg4);

	[PreserveSig]
	[Token(Token = "0x6000EA3")]
	[Address(RVA = "0x2A9540", Offset = "0x2A9540", VA = "0x2A9540")]
	public static extern int CSharp_PostString__SWIG_3(string jarg1, int jarg2, uint jarg3);

	[PreserveSig]
	[Token(Token = "0x6000EA4")]
	[Address(RVA = "0x2A96BC", Offset = "0x2A96BC", VA = "0x2A96BC")]
	public static extern int CSharp_PostString__SWIG_4(string jarg1, int jarg2);

	[PreserveSig]
	[Token(Token = "0x6000EA5")]
	[Address(RVA = "0x2A9820", Offset = "0x2A9820", VA = "0x2A9820")]
	public static extern int CSharp_GetTimeStamp();

	[PreserveSig]
	[Token(Token = "0x6000EA6")]
	[Address(RVA = "0x2A9950", Offset = "0x2A9950", VA = "0x2A9950")]
	public static extern uint CSharp_GetNumNonZeroBits(uint jarg1);

	[PreserveSig]
	[Token(Token = "0x6000EA7")]
	[Address(RVA = "0x2A9AB0", Offset = "0x2A9AB0", VA = "0x2A9AB0")]
	public static extern uint CSharp_ResolveDialogueEvent__SWIG_0(uint jarg1, [In] uint[] jarg2, uint jarg3, uint jarg4);

	[PreserveSig]
	[Token(Token = "0x6000EA8")]
	[Address(RVA = "0x2A9C24", Offset = "0x2A9C24", VA = "0x2A9C24")]
	public static extern uint CSharp_ResolveDialogueEvent__SWIG_1(uint jarg1, [In] uint[] jarg2, uint jarg3);

	[PreserveSig]
	[Token(Token = "0x6000EA9")]
	[Address(RVA = "0x2A9D94", Offset = "0x2A9D94", VA = "0x2A9D94")]
	public static extern int CSharp_GetDialogueEventCustomPropertyValue__SWIG_0(uint jarg1, uint jarg2, out int jarg3);

	[PreserveSig]
	[Token(Token = "0x6000EAA")]
	[Address(RVA = "0x2A9F0C", Offset = "0x2A9F0C", VA = "0x2A9F0C")]
	public static extern int CSharp_GetDialogueEventCustomPropertyValue__SWIG_1(uint jarg1, uint jarg2, out float jarg3);

	[PreserveSig]
	[Token(Token = "0x6000EAB")]
	[Address(RVA = "0x283068", Offset = "0x283068", VA = "0x283068")]
	public static extern void CSharp_AkPositioningInfo_fCenterPct_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x6000EAC")]
	[Address(RVA = "0x2831B4", Offset = "0x2831B4", VA = "0x2831B4")]
	public static extern float CSharp_AkPositioningInfo_fCenterPct_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000EAD")]
	[Address(RVA = "0x283300", Offset = "0x283300", VA = "0x283300")]
	public static extern void CSharp_AkPositioningInfo_pannerType_set(IntPtr jarg1, int jarg2);

	[PreserveSig]
	[Token(Token = "0x6000EAE")]
	[Address(RVA = "0x28344C", Offset = "0x28344C", VA = "0x28344C")]
	public static extern int CSharp_AkPositioningInfo_pannerType_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000EAF")]
	[Address(RVA = "0x283598", Offset = "0x283598", VA = "0x283598")]
	public static extern void CSharp_AkPositioningInfo_e3dPositioningType_set(IntPtr jarg1, int jarg2);

	[PreserveSig]
	[Token(Token = "0x6000EB0")]
	[Address(RVA = "0x2836E4", Offset = "0x2836E4", VA = "0x2836E4")]
	public static extern int CSharp_AkPositioningInfo_e3dPositioningType_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000EB1")]
	[Address(RVA = "0x283830", Offset = "0x283830", VA = "0x283830")]
	public static extern void CSharp_AkPositioningInfo_bHoldEmitterPosAndOrient_set(IntPtr jarg1, bool jarg2);

	[PreserveSig]
	[Token(Token = "0x6000EB2")]
	[Address(RVA = "0x28397C", Offset = "0x28397C", VA = "0x28397C")]
	public static extern bool CSharp_AkPositioningInfo_bHoldEmitterPosAndOrient_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000EB3")]
	[Address(RVA = "0x283AD0", Offset = "0x283AD0", VA = "0x283AD0")]
	public static extern void CSharp_AkPositioningInfo_e3DSpatializationMode_set(IntPtr jarg1, int jarg2);

	[PreserveSig]
	[Token(Token = "0x6000EB4")]
	[Address(RVA = "0x283C1C", Offset = "0x283C1C", VA = "0x283C1C")]
	public static extern int CSharp_AkPositioningInfo_e3DSpatializationMode_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000EB5")]
	[Address(RVA = "0x283D68", Offset = "0x283D68", VA = "0x283D68")]
	public static extern void CSharp_AkPositioningInfo_bUseAttenuation_set(IntPtr jarg1, bool jarg2);

	[PreserveSig]
	[Token(Token = "0x6000EB6")]
	[Address(RVA = "0x283EB4", Offset = "0x283EB4", VA = "0x283EB4")]
	public static extern bool CSharp_AkPositioningInfo_bUseAttenuation_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000EB7")]
	[Address(RVA = "0x284008", Offset = "0x284008", VA = "0x284008")]
	public static extern void CSharp_AkPositioningInfo_bUseConeAttenuation_set(IntPtr jarg1, bool jarg2);

	[PreserveSig]
	[Token(Token = "0x6000EB8")]
	[Address(RVA = "0x284154", Offset = "0x284154", VA = "0x284154")]
	public static extern bool CSharp_AkPositioningInfo_bUseConeAttenuation_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000EB9")]
	[Address(RVA = "0x2842A8", Offset = "0x2842A8", VA = "0x2842A8")]
	public static extern void CSharp_AkPositioningInfo_fInnerAngle_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x6000EBA")]
	[Address(RVA = "0x2843F4", Offset = "0x2843F4", VA = "0x2843F4")]
	public static extern float CSharp_AkPositioningInfo_fInnerAngle_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000EBB")]
	[Address(RVA = "0x284540", Offset = "0x284540", VA = "0x284540")]
	public static extern void CSharp_AkPositioningInfo_fOuterAngle_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x6000EBC")]
	[Address(RVA = "0x28468C", Offset = "0x28468C", VA = "0x28468C")]
	public static extern float CSharp_AkPositioningInfo_fOuterAngle_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000EBD")]
	[Address(RVA = "0x2847D8", Offset = "0x2847D8", VA = "0x2847D8")]
	public static extern void CSharp_AkPositioningInfo_fConeMaxAttenuation_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x6000EBE")]
	[Address(RVA = "0x284924", Offset = "0x284924", VA = "0x284924")]
	public static extern float CSharp_AkPositioningInfo_fConeMaxAttenuation_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000EBF")]
	[Address(RVA = "0x284A70", Offset = "0x284A70", VA = "0x284A70")]
	public static extern void CSharp_AkPositioningInfo_LPFCone_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x6000EC0")]
	[Address(RVA = "0x284BBC", Offset = "0x284BBC", VA = "0x284BBC")]
	public static extern float CSharp_AkPositioningInfo_LPFCone_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000EC1")]
	[Address(RVA = "0x284D08", Offset = "0x284D08", VA = "0x284D08")]
	public static extern void CSharp_AkPositioningInfo_HPFCone_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x6000EC2")]
	[Address(RVA = "0x284E54", Offset = "0x284E54", VA = "0x284E54")]
	public static extern float CSharp_AkPositioningInfo_HPFCone_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000EC3")]
	[Address(RVA = "0x284FA0", Offset = "0x284FA0", VA = "0x284FA0")]
	public static extern void CSharp_AkPositioningInfo_fMaxDistance_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x6000EC4")]
	[Address(RVA = "0x2850EC", Offset = "0x2850EC", VA = "0x2850EC")]
	public static extern float CSharp_AkPositioningInfo_fMaxDistance_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000EC5")]
	[Address(RVA = "0x285238", Offset = "0x285238", VA = "0x285238")]
	public static extern void CSharp_AkPositioningInfo_fVolDryAtMaxDist_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x6000EC6")]
	[Address(RVA = "0x285384", Offset = "0x285384", VA = "0x285384")]
	public static extern float CSharp_AkPositioningInfo_fVolDryAtMaxDist_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000EC7")]
	[Address(RVA = "0x2854D0", Offset = "0x2854D0", VA = "0x2854D0")]
	public static extern void CSharp_AkPositioningInfo_fVolAuxGameDefAtMaxDist_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x6000EC8")]
	[Address(RVA = "0x28561C", Offset = "0x28561C", VA = "0x28561C")]
	public static extern float CSharp_AkPositioningInfo_fVolAuxGameDefAtMaxDist_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000EC9")]
	[Address(RVA = "0x285768", Offset = "0x285768", VA = "0x285768")]
	public static extern void CSharp_AkPositioningInfo_fVolAuxUserDefAtMaxDist_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x6000ECA")]
	[Address(RVA = "0x2858B4", Offset = "0x2858B4", VA = "0x2858B4")]
	public static extern float CSharp_AkPositioningInfo_fVolAuxUserDefAtMaxDist_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000ECB")]
	[Address(RVA = "0x285A00", Offset = "0x285A00", VA = "0x285A00")]
	public static extern void CSharp_AkPositioningInfo_LPFValueAtMaxDist_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x6000ECC")]
	[Address(RVA = "0x285B4C", Offset = "0x285B4C", VA = "0x285B4C")]
	public static extern float CSharp_AkPositioningInfo_LPFValueAtMaxDist_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000ECD")]
	[Address(RVA = "0x285C98", Offset = "0x285C98", VA = "0x285C98")]
	public static extern void CSharp_AkPositioningInfo_HPFValueAtMaxDist_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x6000ECE")]
	[Address(RVA = "0x285DE4", Offset = "0x285DE4", VA = "0x285DE4")]
	public static extern float CSharp_AkPositioningInfo_HPFValueAtMaxDist_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000ECF")]
	[Address(RVA = "0x282C68", Offset = "0x282C68", VA = "0x282C68")]
	public static extern IntPtr CSharp_new_AkPositioningInfo();

	[PreserveSig]
	[Token(Token = "0x6000ED0")]
	[Address(RVA = "0x282F1C", Offset = "0x282F1C", VA = "0x282F1C")]
	public static extern void CSharp_delete_AkPositioningInfo(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000ED1")]
	[Address(RVA = "0x277958", Offset = "0x277958", VA = "0x277958")]
	public static extern void CSharp_AkObjectInfo_objID_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6000ED2")]
	[Address(RVA = "0x277AA4", Offset = "0x277AA4", VA = "0x277AA4")]
	public static extern uint CSharp_AkObjectInfo_objID_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000ED3")]
	[Address(RVA = "0x277BF0", Offset = "0x277BF0", VA = "0x277BF0")]
	public static extern void CSharp_AkObjectInfo_parentID_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6000ED4")]
	[Address(RVA = "0x277D3C", Offset = "0x277D3C", VA = "0x277D3C")]
	public static extern uint CSharp_AkObjectInfo_parentID_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000ED5")]
	[Address(RVA = "0x277E88", Offset = "0x277E88", VA = "0x277E88")]
	public static extern void CSharp_AkObjectInfo_iDepth_set(IntPtr jarg1, int jarg2);

	[PreserveSig]
	[Token(Token = "0x6000ED6")]
	[Address(RVA = "0x277FD4", Offset = "0x277FD4", VA = "0x277FD4")]
	public static extern int CSharp_AkObjectInfo_iDepth_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000ED7")]
	[Address(RVA = "0x277558", Offset = "0x277558", VA = "0x277558")]
	public static extern IntPtr CSharp_new_AkObjectInfo();

	[PreserveSig]
	[Token(Token = "0x6000ED8")]
	[Address(RVA = "0x27780C", Offset = "0x27780C", VA = "0x27780C")]
	public static extern void CSharp_delete_AkObjectInfo(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000ED9")]
	[Address(RVA = "0x2AA0D0", Offset = "0x2AA0D0", VA = "0x2AA0D0")]
	public static extern int CSharp_GetPosition(ulong jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6000EDA")]
	[Address(RVA = "0x2AA280", Offset = "0x2AA280", VA = "0x2AA280")]
	public static extern int CSharp_GetListenerPosition(ulong jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6000EDB")]
	[Address(RVA = "0x2AA430", Offset = "0x2AA430", VA = "0x2AA430")]
	public static extern int CSharp_GetRTPCValue__SWIG_0(uint jarg1, ulong jarg2, uint jarg3, out float jarg4, ref int jarg5);

	[PreserveSig]
	[Token(Token = "0x6000EDC")]
	[Address(RVA = "0x2AA60C", Offset = "0x2AA60C", VA = "0x2AA60C")]
	public static extern int CSharp_GetRTPCValue__SWIG_1(string jarg1, ulong jarg2, uint jarg3, out float jarg4, ref int jarg5);

	[PreserveSig]
	[Token(Token = "0x6000EDD")]
	[Address(RVA = "0x2AA7FC", Offset = "0x2AA7FC", VA = "0x2AA7FC")]
	public static extern int CSharp_GetSwitch__SWIG_0(uint jarg1, ulong jarg2, out uint jarg3);

	[PreserveSig]
	[Token(Token = "0x6000EDE")]
	[Address(RVA = "0x2AA9C0", Offset = "0x2AA9C0", VA = "0x2AA9C0")]
	public static extern int CSharp_GetSwitch__SWIG_1(string jarg1, ulong jarg2, out uint jarg3);

	[PreserveSig]
	[Token(Token = "0x6000EDF")]
	[Address(RVA = "0x2AAB58", Offset = "0x2AAB58", VA = "0x2AAB58")]
	public static extern int CSharp_GetState__SWIG_0(uint jarg1, out uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6000EE0")]
	[Address(RVA = "0x2AACB8", Offset = "0x2AACB8", VA = "0x2AACB8")]
	public static extern int CSharp_GetState__SWIG_1(string jarg1, out uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6000EE1")]
	[Address(RVA = "0x2AAEA8", Offset = "0x2AAEA8", VA = "0x2AAEA8")]
	public static extern int CSharp_GetGameObjectAuxSendValues(ulong jarg1, IntPtr jarg2, ref uint jarg3);

	[PreserveSig]
	[Token(Token = "0x6000EE2")]
	[Address(RVA = "0x2AB060", Offset = "0x2AB060", VA = "0x2AB060")]
	public static extern int CSharp_GetGameObjectDryLevelValue(ulong jarg1, ulong jarg2, out float jarg3);

	[PreserveSig]
	[Token(Token = "0x6000EE3")]
	[Address(RVA = "0x2AB234", Offset = "0x2AB234", VA = "0x2AB234")]
	public static extern int CSharp_GetObjectObstructionAndOcclusion(ulong jarg1, ulong jarg2, out float jarg3, out float jarg4);

	[PreserveSig]
	[Token(Token = "0x6000EE4")]
	[Address(RVA = "0x2AB410", Offset = "0x2AB410", VA = "0x2AB410")]
	public static extern int CSharp_QueryAudioObjectIDs__SWIG_0(uint jarg1, ref uint jarg2, IntPtr jarg3);

	[PreserveSig]
	[Token(Token = "0x6000EE5")]
	[Address(RVA = "0x2AB5C0", Offset = "0x2AB5C0", VA = "0x2AB5C0")]
	public static extern int CSharp_QueryAudioObjectIDs__SWIG_1(string jarg1, ref uint jarg2, IntPtr jarg3);

	[PreserveSig]
	[Token(Token = "0x6000EE6")]
	[Address(RVA = "0x2AB784", Offset = "0x2AB784", VA = "0x2AB784")]
	public static extern int CSharp_GetPositioningInfo(uint jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6000EE7")]
	[Address(RVA = "0x2AB914", Offset = "0x2AB914", VA = "0x2AB914")]
	public static extern bool CSharp_GetIsGameObjectActive(ulong jarg1);

	[PreserveSig]
	[Token(Token = "0x6000EE8")]
	[Address(RVA = "0x2ABAAC", Offset = "0x2ABAAC", VA = "0x2ABAAC")]
	public static extern float CSharp_GetMaxRadius(ulong jarg1);

	[PreserveSig]
	[Token(Token = "0x6000EE9")]
	[Address(RVA = "0x2ABBF4", Offset = "0x2ABBF4", VA = "0x2ABBF4")]
	public static extern uint CSharp_GetEventIDFromPlayingID(uint jarg1);

	[PreserveSig]
	[Token(Token = "0x6000EEA")]
	[Address(RVA = "0x2ABD34", Offset = "0x2ABD34", VA = "0x2ABD34")]
	public static extern ulong CSharp_GetGameObjectFromPlayingID(uint jarg1);

	[PreserveSig]
	[Token(Token = "0x6000EEB")]
	[Address(RVA = "0x2ABECC", Offset = "0x2ABECC", VA = "0x2ABECC")]
	public static extern int CSharp_GetPlayingIDsFromGameObject(ulong jarg1, ref uint jarg2, [Out] uint[] jarg3);

	[PreserveSig]
	[Token(Token = "0x6000EEC")]
	[Address(RVA = "0x2AC0D0", Offset = "0x2AC0D0", VA = "0x2AC0D0")]
	public static extern int CSharp_GetCustomPropertyValue__SWIG_0(uint jarg1, uint jarg2, out int jarg3);

	[PreserveSig]
	[Token(Token = "0x6000EED")]
	[Address(RVA = "0x2AC248", Offset = "0x2AC248", VA = "0x2AC248")]
	public static extern int CSharp_GetCustomPropertyValue__SWIG_1(uint jarg1, uint jarg2, out float jarg3);

	[PreserveSig]
	[Token(Token = "0x6000EEE")]
	[Address(RVA = "0x2AC3A8", Offset = "0x2AC3A8", VA = "0x2AC3A8")]
	public static extern void CSharp_AK_SPEAKER_SETUP_FIX_LEFT_TO_CENTER(ref uint jarg1);

	[PreserveSig]
	[Token(Token = "0x6000EEF")]
	[Address(RVA = "0x2AC4E8", Offset = "0x2AC4E8", VA = "0x2AC4E8")]
	public static extern void CSharp_AK_SPEAKER_SETUP_FIX_REAR_TO_SIDE(ref uint jarg1);

	[PreserveSig]
	[Token(Token = "0x6000EF0")]
	[Address(RVA = "0x2AC628", Offset = "0x2AC628", VA = "0x2AC628")]
	public static extern void CSharp_AK_SPEAKER_SETUP_CONVERT_TO_SUPPORTED(ref uint jarg1);

	[PreserveSig]
	[Token(Token = "0x6000EF1")]
	[Address(RVA = "0x2AC768", Offset = "0x2AC768", VA = "0x2AC768")]
	public static extern byte CSharp_ChannelMaskToNumChannels(uint jarg1);

	[PreserveSig]
	[Token(Token = "0x6000EF2")]
	[Address(RVA = "0x2AC8A8", Offset = "0x2AC8A8", VA = "0x2AC8A8")]
	public static extern uint CSharp_ChannelMaskFromNumChannels(uint jarg1);

	[PreserveSig]
	[Token(Token = "0x6000EF3")]
	[Address(RVA = "0x2AC9F0", Offset = "0x2AC9F0", VA = "0x2AC9F0")]
	public static extern byte CSharp_ChannelBitToIndex(uint jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6000EF4")]
	[Address(RVA = "0x2ACB38", Offset = "0x2ACB38", VA = "0x2ACB38")]
	public static extern bool CSharp_HasSurroundChannels(uint jarg1);

	[PreserveSig]
	[Token(Token = "0x6000EF5")]
	[Address(RVA = "0x2ACC80", Offset = "0x2ACC80", VA = "0x2ACC80")]
	public static extern bool CSharp_HasStrictlyOnePairOfSurroundChannels(uint jarg1);

	[PreserveSig]
	[Token(Token = "0x6000EF6")]
	[Address(RVA = "0x2ACDC8", Offset = "0x2ACDC8", VA = "0x2ACDC8")]
	public static extern bool CSharp_HasSideAndRearChannels(uint jarg1);

	[PreserveSig]
	[Token(Token = "0x6000EF7")]
	[Address(RVA = "0x2ACF10", Offset = "0x2ACF10", VA = "0x2ACF10")]
	public static extern bool CSharp_HasHeightChannels(uint jarg1);

	[PreserveSig]
	[Token(Token = "0x6000EF8")]
	[Address(RVA = "0x2AD058", Offset = "0x2AD058", VA = "0x2AD058")]
	public static extern uint CSharp_BackToSideChannels(uint jarg1);

	[PreserveSig]
	[Token(Token = "0x6000EF9")]
	[Address(RVA = "0x2AD1B0", Offset = "0x2AD1B0", VA = "0x2AD1B0")]
	public static extern uint CSharp_StdChannelIndexToDisplayIndex(int jarg1, uint jarg2, uint jarg3);

	[PreserveSig]
	[Token(Token = "0x6000EFA")]
	[Address(RVA = "0x2C10C4", Offset = "0x2C10C4", VA = "0x2C10C4")]
	public static extern void CSharp_AkChannelConfig_uNumChannels_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6000EFB")]
	[Address(RVA = "0x2C118C", Offset = "0x2C118C", VA = "0x2C118C")]
	public static extern uint CSharp_AkChannelConfig_uNumChannels_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000EFC")]
	[Address(RVA = "0x2C124C", Offset = "0x2C124C", VA = "0x2C124C")]
	public static extern void CSharp_AkChannelConfig_eConfigType_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6000EFD")]
	[Address(RVA = "0x2C1314", Offset = "0x2C1314", VA = "0x2C1314")]
	public static extern uint CSharp_AkChannelConfig_eConfigType_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000EFE")]
	[Address(RVA = "0x2C13D4", Offset = "0x2C13D4", VA = "0x2C13D4")]
	public static extern void CSharp_AkChannelConfig_uChannelMask_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6000EFF")]
	[Address(RVA = "0x2C149C", Offset = "0x2C149C", VA = "0x2C149C")]
	public static extern uint CSharp_AkChannelConfig_uChannelMask_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000F00")]
	[Address(RVA = "0x2C155C", Offset = "0x2C155C", VA = "0x2C155C")]
	public static extern IntPtr CSharp_new_AkChannelConfig__SWIG_0();

	[PreserveSig]
	[Token(Token = "0x6000F01")]
	[Address(RVA = "0x2C160C", Offset = "0x2C160C", VA = "0x2C160C")]
	public static extern IntPtr CSharp_new_AkChannelConfig__SWIG_1(uint jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6000F02")]
	[Address(RVA = "0x2C16D4", Offset = "0x2C16D4", VA = "0x2C16D4")]
	public static extern void CSharp_AkChannelConfig_Clear(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000F03")]
	[Address(RVA = "0x2C1794", Offset = "0x2C1794", VA = "0x2C1794")]
	public static extern void CSharp_AkChannelConfig_SetStandard(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6000F04")]
	[Address(RVA = "0x2C185C", Offset = "0x2C185C", VA = "0x2C185C")]
	public static extern void CSharp_AkChannelConfig_SetStandardOrAnonymous(IntPtr jarg1, uint jarg2, uint jarg3);

	[PreserveSig]
	[Token(Token = "0x6000F05")]
	[Address(RVA = "0x2C192C", Offset = "0x2C192C", VA = "0x2C192C")]
	public static extern void CSharp_AkChannelConfig_SetAnonymous(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6000F06")]
	[Address(RVA = "0x2C19F4", Offset = "0x2C19F4", VA = "0x2C19F4")]
	public static extern void CSharp_AkChannelConfig_SetAmbisonic(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6000F07")]
	[Address(RVA = "0x2C1ABC", Offset = "0x2C1ABC", VA = "0x2C1ABC")]
	public static extern bool CSharp_AkChannelConfig_IsValid(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000F08")]
	[Address(RVA = "0x2C1B84", Offset = "0x2C1B84", VA = "0x2C1B84")]
	public static extern uint CSharp_AkChannelConfig_Serialize(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000F09")]
	[Address(RVA = "0x2C1C44", Offset = "0x2C1C44", VA = "0x2C1C44")]
	public static extern void CSharp_AkChannelConfig_Deserialize(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6000F0A")]
	[Address(RVA = "0x2C1D0C", Offset = "0x2C1D0C", VA = "0x2C1D0C")]
	public static extern IntPtr CSharp_AkChannelConfig_RemoveLFE(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000F0B")]
	[Address(RVA = "0x2C1DCC", Offset = "0x2C1DCC", VA = "0x2C1DCC")]
	public static extern IntPtr CSharp_AkChannelConfig_RemoveCenter(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000F0C")]
	[Address(RVA = "0x2C1E8C", Offset = "0x2C1E8C", VA = "0x2C1E8C")]
	public static extern bool CSharp_AkChannelConfig_IsChannelConfigSupported(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000F0D")]
	[Address(RVA = "0x2C1F54", Offset = "0x2C1F54", VA = "0x2C1F54")]
	public static extern void CSharp_delete_AkChannelConfig(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000F0E")]
	[Address(RVA = "0x2C2014", Offset = "0x2C2014", VA = "0x2C2014")]
	public static extern IntPtr CSharp_new_AkImageSourceParams__SWIG_0();

	[PreserveSig]
	[Token(Token = "0x6000F0F")]
	[Address(RVA = "0x2C20C4", Offset = "0x2C20C4", VA = "0x2C20C4")]
	public static extern IntPtr CSharp_new_AkImageSourceParams__SWIG_1(IntPtr jarg1, float jarg2, float jarg3);

	[PreserveSig]
	[Token(Token = "0x6000F10")]
	[Address(RVA = "0x2C2194", Offset = "0x2C2194", VA = "0x2C2194")]
	public static extern void CSharp_AkImageSourceParams_sourcePosition_set(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6000F11")]
	[Address(RVA = "0x2C225C", Offset = "0x2C225C", VA = "0x2C225C")]
	public static extern IntPtr CSharp_AkImageSourceParams_sourcePosition_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000F12")]
	[Address(RVA = "0x2C231C", Offset = "0x2C231C", VA = "0x2C231C")]
	public static extern void CSharp_AkImageSourceParams_fDistanceScalingFactor_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x6000F13")]
	[Address(RVA = "0x2C23E4", Offset = "0x2C23E4", VA = "0x2C23E4")]
	public static extern float CSharp_AkImageSourceParams_fDistanceScalingFactor_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000F14")]
	[Address(RVA = "0x2C24A4", Offset = "0x2C24A4", VA = "0x2C24A4")]
	public static extern void CSharp_AkImageSourceParams_fLevel_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x6000F15")]
	[Address(RVA = "0x2C256C", Offset = "0x2C256C", VA = "0x2C256C")]
	public static extern float CSharp_AkImageSourceParams_fLevel_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000F16")]
	[Address(RVA = "0x2C262C", Offset = "0x2C262C", VA = "0x2C262C")]
	public static extern void CSharp_AkImageSourceParams_fDiffraction_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x6000F17")]
	[Address(RVA = "0x2C26F4", Offset = "0x2C26F4", VA = "0x2C26F4")]
	public static extern float CSharp_AkImageSourceParams_fDiffraction_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000F18")]
	[Address(RVA = "0x2C27B4", Offset = "0x2C27B4", VA = "0x2C27B4")]
	public static extern void CSharp_AkImageSourceParams_bDiffractedEmitterSide_set(IntPtr jarg1, bool jarg2);

	[PreserveSig]
	[Token(Token = "0x6000F19")]
	[Address(RVA = "0x2C287C", Offset = "0x2C287C", VA = "0x2C287C")]
	public static extern bool CSharp_AkImageSourceParams_bDiffractedEmitterSide_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000F1A")]
	[Address(RVA = "0x2C2944", Offset = "0x2C2944", VA = "0x2C2944")]
	public static extern void CSharp_AkImageSourceParams_bDiffractedListenerSide_set(IntPtr jarg1, bool jarg2);

	[PreserveSig]
	[Token(Token = "0x6000F1B")]
	[Address(RVA = "0x2C2A0C", Offset = "0x2C2A0C", VA = "0x2C2A0C")]
	public static extern bool CSharp_AkImageSourceParams_bDiffractedListenerSide_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000F1C")]
	[Address(RVA = "0x2C2AD4", Offset = "0x2C2AD4", VA = "0x2C2AD4")]
	public static extern void CSharp_delete_AkImageSourceParams(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000F1D")]
	[Address(RVA = "0x2AD2F8", Offset = "0x2AD2F8", VA = "0x2AD2F8")]
	public static extern float CSharp_kDefaultMaxPathLength_get();

	[PreserveSig]
	[Token(Token = "0x6000F1E")]
	[Address(RVA = "0x2AD420", Offset = "0x2AD420", VA = "0x2AD420")]
	public static extern float CSharp_kMaxDiffraction_get();

	[PreserveSig]
	[Token(Token = "0x6000F1F")]
	[Address(RVA = "0x2AD550", Offset = "0x2AD550", VA = "0x2AD550")]
	public static extern void CSharp_g_SpatialAudioPoolId_set(int jarg1);

	[PreserveSig]
	[Token(Token = "0x6000F20")]
	[Address(RVA = "0x2AD688", Offset = "0x2AD688", VA = "0x2AD688")]
	public static extern int CSharp_g_SpatialAudioPoolId_get();

	[PreserveSig]
	[Token(Token = "0x6000F21")]
	[Address(RVA = "0x2C2B94", Offset = "0x2C2B94", VA = "0x2C2B94")]
	public static extern int CSharp__ArrayPoolSpatialAudio_Get();

	[PreserveSig]
	[Token(Token = "0x6000F22")]
	[Address(RVA = "0x2C2C44", Offset = "0x2C2C44", VA = "0x2C2C44")]
	public static extern IntPtr CSharp_new__ArrayPoolSpatialAudio();

	[PreserveSig]
	[Token(Token = "0x6000F23")]
	[Address(RVA = "0x2C2CF4", Offset = "0x2C2CF4", VA = "0x2C2CF4")]
	public static extern void CSharp_delete__ArrayPoolSpatialAudio(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000F24")]
	[Address(RVA = "0x2C2DB4", Offset = "0x2C2DB4", VA = "0x2C2DB4")]
	public static extern IntPtr CSharp_new_AkSpatialAudioInitSettings();

	[PreserveSig]
	[Token(Token = "0x6000F25")]
	[Address(RVA = "0x2C2E64", Offset = "0x2C2E64", VA = "0x2C2E64")]
	public static extern void CSharp_AkSpatialAudioInitSettings_uPoolID_set(IntPtr jarg1, int jarg2);

	[PreserveSig]
	[Token(Token = "0x6000F26")]
	[Address(RVA = "0x2C2F2C", Offset = "0x2C2F2C", VA = "0x2C2F2C")]
	public static extern int CSharp_AkSpatialAudioInitSettings_uPoolID_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000F27")]
	[Address(RVA = "0x2C2FEC", Offset = "0x2C2FEC", VA = "0x2C2FEC")]
	public static extern void CSharp_AkSpatialAudioInitSettings_uPoolSize_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6000F28")]
	[Address(RVA = "0x2C30B4", Offset = "0x2C30B4", VA = "0x2C30B4")]
	public static extern uint CSharp_AkSpatialAudioInitSettings_uPoolSize_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000F29")]
	[Address(RVA = "0x2C3174", Offset = "0x2C3174", VA = "0x2C3174")]
	public static extern void CSharp_AkSpatialAudioInitSettings_uMaxSoundPropagationDepth_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6000F2A")]
	[Address(RVA = "0x2C323C", Offset = "0x2C323C", VA = "0x2C323C")]
	public static extern uint CSharp_AkSpatialAudioInitSettings_uMaxSoundPropagationDepth_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000F2B")]
	[Address(RVA = "0x2C32FC", Offset = "0x2C32FC", VA = "0x2C32FC")]
	public static extern void CSharp_AkSpatialAudioInitSettings_uDiffractionFlags_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6000F2C")]
	[Address(RVA = "0x2C33C4", Offset = "0x2C33C4", VA = "0x2C33C4")]
	public static extern uint CSharp_AkSpatialAudioInitSettings_uDiffractionFlags_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000F2D")]
	[Address(RVA = "0x2C3484", Offset = "0x2C3484", VA = "0x2C3484")]
	public static extern void CSharp_AkSpatialAudioInitSettings_fDiffractionShadowAttenFactor_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x6000F2E")]
	[Address(RVA = "0x2C354C", Offset = "0x2C354C", VA = "0x2C354C")]
	public static extern float CSharp_AkSpatialAudioInitSettings_fDiffractionShadowAttenFactor_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000F2F")]
	[Address(RVA = "0x2C360C", Offset = "0x2C360C", VA = "0x2C360C")]
	public static extern void CSharp_AkSpatialAudioInitSettings_fDiffractionShadowDegrees_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x6000F30")]
	[Address(RVA = "0x2C36D4", Offset = "0x2C36D4", VA = "0x2C36D4")]
	public static extern float CSharp_AkSpatialAudioInitSettings_fDiffractionShadowDegrees_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000F31")]
	[Address(RVA = "0x2C3794", Offset = "0x2C3794", VA = "0x2C3794")]
	public static extern void CSharp_delete_AkSpatialAudioInitSettings(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000F32")]
	[Address(RVA = "0x2C3854", Offset = "0x2C3854", VA = "0x2C3854")]
	public static extern IntPtr CSharp_new_AkImageSourceSettings__SWIG_0();

	[PreserveSig]
	[Token(Token = "0x6000F33")]
	[Address(RVA = "0x2C3904", Offset = "0x2C3904", VA = "0x2C3904")]
	public static extern IntPtr CSharp_new_AkImageSourceSettings__SWIG_1(IntPtr jarg1, float jarg2, float jarg3);

	[PreserveSig]
	[Token(Token = "0x6000F34")]
	[Address(RVA = "0x2C39D4", Offset = "0x2C39D4", VA = "0x2C39D4")]
	public static extern void CSharp_delete_AkImageSourceSettings(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000F35")]
	[Address(RVA = "0x2C3A94", Offset = "0x2C3A94", VA = "0x2C3A94")]
	public static extern void CSharp_AkImageSourceSettings_SetOneTexture(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6000F36")]
	[Address(RVA = "0x2C3B5C", Offset = "0x2C3B5C", VA = "0x2C3B5C")]
	public static extern void CSharp_AkImageSourceSettings_SetName(IntPtr jarg1, string jarg2);

	[PreserveSig]
	[Token(Token = "0x6000F37")]
	[Address(RVA = "0x2C3C40", Offset = "0x2C3C40", VA = "0x2C3C40")]
	public static extern void CSharp_AkImageSourceSettings_params__set(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6000F38")]
	[Address(RVA = "0x2C3D08", Offset = "0x2C3D08", VA = "0x2C3D08")]
	public static extern IntPtr CSharp_AkImageSourceSettings_params__get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000F39")]
	[Address(RVA = "0x2C3DC8", Offset = "0x2C3DC8", VA = "0x2C3DC8")]
	public static extern IntPtr CSharp_new_AkEmitterSettings();

	[PreserveSig]
	[Token(Token = "0x6000F3A")]
	[Address(RVA = "0x2C3E78", Offset = "0x2C3E78", VA = "0x2C3E78")]
	public static extern void CSharp_AkEmitterSettings_reflectAuxBusID_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6000F3B")]
	[Address(RVA = "0x2C3F40", Offset = "0x2C3F40", VA = "0x2C3F40")]
	public static extern uint CSharp_AkEmitterSettings_reflectAuxBusID_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000F3C")]
	[Address(RVA = "0x2C4000", Offset = "0x2C4000", VA = "0x2C4000")]
	public static extern void CSharp_AkEmitterSettings_reflectionMaxPathLength_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x6000F3D")]
	[Address(RVA = "0x2C40C8", Offset = "0x2C40C8", VA = "0x2C40C8")]
	public static extern float CSharp_AkEmitterSettings_reflectionMaxPathLength_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000F3E")]
	[Address(RVA = "0x2C4188", Offset = "0x2C4188", VA = "0x2C4188")]
	public static extern void CSharp_AkEmitterSettings_reflectionsAuxBusGain_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x6000F3F")]
	[Address(RVA = "0x2C4250", Offset = "0x2C4250", VA = "0x2C4250")]
	public static extern float CSharp_AkEmitterSettings_reflectionsAuxBusGain_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000F40")]
	[Address(RVA = "0x2C4310", Offset = "0x2C4310", VA = "0x2C4310")]
	public static extern void CSharp_AkEmitterSettings_reflectionsOrder_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6000F41")]
	[Address(RVA = "0x2C43D8", Offset = "0x2C43D8", VA = "0x2C43D8")]
	public static extern uint CSharp_AkEmitterSettings_reflectionsOrder_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000F42")]
	[Address(RVA = "0x2C4498", Offset = "0x2C4498", VA = "0x2C4498")]
	public static extern void CSharp_AkEmitterSettings_reflectorFilterMask_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6000F43")]
	[Address(RVA = "0x2C4560", Offset = "0x2C4560", VA = "0x2C4560")]
	public static extern uint CSharp_AkEmitterSettings_reflectorFilterMask_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000F44")]
	[Address(RVA = "0x2C4620", Offset = "0x2C4620", VA = "0x2C4620")]
	public static extern void CSharp_AkEmitterSettings_roomReverbAuxBusGain_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x6000F45")]
	[Address(RVA = "0x2C46E8", Offset = "0x2C46E8", VA = "0x2C46E8")]
	public static extern float CSharp_AkEmitterSettings_roomReverbAuxBusGain_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000F46")]
	[Address(RVA = "0x2C47A8", Offset = "0x2C47A8", VA = "0x2C47A8")]
	public static extern void CSharp_AkEmitterSettings_diffractionMaxEdges_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6000F47")]
	[Address(RVA = "0x2C4870", Offset = "0x2C4870", VA = "0x2C4870")]
	public static extern uint CSharp_AkEmitterSettings_diffractionMaxEdges_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000F48")]
	[Address(RVA = "0x2C4930", Offset = "0x2C4930", VA = "0x2C4930")]
	public static extern void CSharp_AkEmitterSettings_diffractionMaxPaths_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6000F49")]
	[Address(RVA = "0x2C49F8", Offset = "0x2C49F8", VA = "0x2C49F8")]
	public static extern uint CSharp_AkEmitterSettings_diffractionMaxPaths_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000F4A")]
	[Address(RVA = "0x2C4AB8", Offset = "0x2C4AB8", VA = "0x2C4AB8")]
	public static extern void CSharp_AkEmitterSettings_diffractionMaxPathLength_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x6000F4B")]
	[Address(RVA = "0x2C4B80", Offset = "0x2C4B80", VA = "0x2C4B80")]
	public static extern float CSharp_AkEmitterSettings_diffractionMaxPathLength_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000F4C")]
	[Address(RVA = "0x2C4C40", Offset = "0x2C4C40", VA = "0x2C4C40")]
	public static extern void CSharp_AkEmitterSettings_useImageSources_set(IntPtr jarg1, byte jarg2);

	[PreserveSig]
	[Token(Token = "0x6000F4D")]
	[Address(RVA = "0x2C4D08", Offset = "0x2C4D08", VA = "0x2C4D08")]
	public static extern byte CSharp_AkEmitterSettings_useImageSources_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000F4E")]
	[Address(RVA = "0x2C4DC8", Offset = "0x2C4DC8", VA = "0x2C4DC8")]
	public static extern void CSharp_delete_AkEmitterSettings(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000F4F")]
	[Address(RVA = "0x2C4E88", Offset = "0x2C4E88", VA = "0x2C4E88")]
	public static extern IntPtr CSharp_new_AkVertex__SWIG_0();

	[PreserveSig]
	[Token(Token = "0x6000F50")]
	[Address(RVA = "0x2C4F38", Offset = "0x2C4F38", VA = "0x2C4F38")]
	public static extern IntPtr CSharp_new_AkVertex__SWIG_1(float jarg1, float jarg2, float jarg3);

	[PreserveSig]
	[Token(Token = "0x6000F51")]
	[Address(RVA = "0x2C5008", Offset = "0x2C5008", VA = "0x2C5008")]
	public static extern void CSharp_AkVertex_X_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x6000F52")]
	[Address(RVA = "0x2C50D0", Offset = "0x2C50D0", VA = "0x2C50D0")]
	public static extern float CSharp_AkVertex_X_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000F53")]
	[Address(RVA = "0x2C5190", Offset = "0x2C5190", VA = "0x2C5190")]
	public static extern void CSharp_AkVertex_Y_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x6000F54")]
	[Address(RVA = "0x2C5258", Offset = "0x2C5258", VA = "0x2C5258")]
	public static extern float CSharp_AkVertex_Y_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000F55")]
	[Address(RVA = "0x2C5318", Offset = "0x2C5318", VA = "0x2C5318")]
	public static extern void CSharp_AkVertex_Z_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x6000F56")]
	[Address(RVA = "0x2C53E0", Offset = "0x2C53E0", VA = "0x2C53E0")]
	public static extern float CSharp_AkVertex_Z_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000F57")]
	[Address(RVA = "0x2C54A0", Offset = "0x2C54A0", VA = "0x2C54A0")]
	public static extern void CSharp_AkVertex_Clear(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000F58")]
	[Address(RVA = "0x2C5560", Offset = "0x2C5560", VA = "0x2C5560")]
	public static extern int CSharp_AkVertex_GetSizeOf();

	[PreserveSig]
	[Token(Token = "0x6000F59")]
	[Address(RVA = "0x2C5610", Offset = "0x2C5610", VA = "0x2C5610")]
	public static extern void CSharp_AkVertex_Clone(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6000F5A")]
	[Address(RVA = "0x2C56D8", Offset = "0x2C56D8", VA = "0x2C56D8")]
	public static extern void CSharp_delete_AkVertex(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000F5B")]
	[Address(RVA = "0x2C5798", Offset = "0x2C5798", VA = "0x2C5798")]
	public static extern IntPtr CSharp_new_AkTriangle__SWIG_0();

	[PreserveSig]
	[Token(Token = "0x6000F5C")]
	[Address(RVA = "0x2C5848", Offset = "0x2C5848", VA = "0x2C5848")]
	public static extern IntPtr CSharp_new_AkTriangle__SWIG_1(ushort jarg1, ushort jarg2, ushort jarg3, ushort jarg4);

	[PreserveSig]
	[Token(Token = "0x6000F5D")]
	[Address(RVA = "0x2C591C", Offset = "0x2C591C", VA = "0x2C591C")]
	public static extern void CSharp_AkTriangle_point0_set(IntPtr jarg1, ushort jarg2);

	[PreserveSig]
	[Token(Token = "0x6000F5E")]
	[Address(RVA = "0x2C59E4", Offset = "0x2C59E4", VA = "0x2C59E4")]
	public static extern ushort CSharp_AkTriangle_point0_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000F5F")]
	[Address(RVA = "0x2C5AA4", Offset = "0x2C5AA4", VA = "0x2C5AA4")]
	public static extern void CSharp_AkTriangle_point1_set(IntPtr jarg1, ushort jarg2);

	[PreserveSig]
	[Token(Token = "0x6000F60")]
	[Address(RVA = "0x2C5B6C", Offset = "0x2C5B6C", VA = "0x2C5B6C")]
	public static extern ushort CSharp_AkTriangle_point1_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000F61")]
	[Address(RVA = "0x2C5C2C", Offset = "0x2C5C2C", VA = "0x2C5C2C")]
	public static extern void CSharp_AkTriangle_point2_set(IntPtr jarg1, ushort jarg2);

	[PreserveSig]
	[Token(Token = "0x6000F62")]
	[Address(RVA = "0x2C5CF4", Offset = "0x2C5CF4", VA = "0x2C5CF4")]
	public static extern ushort CSharp_AkTriangle_point2_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000F63")]
	[Address(RVA = "0x2C5DB4", Offset = "0x2C5DB4", VA = "0x2C5DB4")]
	public static extern void CSharp_AkTriangle_surface_set(IntPtr jarg1, ushort jarg2);

	[PreserveSig]
	[Token(Token = "0x6000F64")]
	[Address(RVA = "0x2C5E7C", Offset = "0x2C5E7C", VA = "0x2C5E7C")]
	public static extern ushort CSharp_AkTriangle_surface_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000F65")]
	[Address(RVA = "0x2C5F3C", Offset = "0x2C5F3C", VA = "0x2C5F3C")]
	public static extern void CSharp_AkTriangle_Clear(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000F66")]
	[Address(RVA = "0x2C5FFC", Offset = "0x2C5FFC", VA = "0x2C5FFC")]
	public static extern int CSharp_AkTriangle_GetSizeOf();

	[PreserveSig]
	[Token(Token = "0x6000F67")]
	[Address(RVA = "0x2C60AC", Offset = "0x2C60AC", VA = "0x2C60AC")]
	public static extern void CSharp_AkTriangle_Clone(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6000F68")]
	[Address(RVA = "0x2C6174", Offset = "0x2C6174", VA = "0x2C6174")]
	public static extern void CSharp_delete_AkTriangle(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000F69")]
	[Address(RVA = "0x2C6234", Offset = "0x2C6234", VA = "0x2C6234")]
	public static extern IntPtr CSharp_new_AkAcousticSurface();

	[PreserveSig]
	[Token(Token = "0x6000F6A")]
	[Address(RVA = "0x2C62E4", Offset = "0x2C62E4", VA = "0x2C62E4")]
	public static extern void CSharp_AkAcousticSurface_textureID_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6000F6B")]
	[Address(RVA = "0x2C63AC", Offset = "0x2C63AC", VA = "0x2C63AC")]
	public static extern uint CSharp_AkAcousticSurface_textureID_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000F6C")]
	[Address(RVA = "0x2C646C", Offset = "0x2C646C", VA = "0x2C646C")]
	public static extern void CSharp_AkAcousticSurface_reflectorChannelMask_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6000F6D")]
	[Address(RVA = "0x2C6534", Offset = "0x2C6534", VA = "0x2C6534")]
	public static extern uint CSharp_AkAcousticSurface_reflectorChannelMask_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000F6E")]
	[Address(RVA = "0x2C65F4", Offset = "0x2C65F4", VA = "0x2C65F4")]
	public static extern void CSharp_AkAcousticSurface_strName_set(IntPtr jarg1, string jarg2);

	[PreserveSig]
	[Token(Token = "0x6000F6F")]
	[Address(RVA = "0x2C66D8", Offset = "0x2C66D8", VA = "0x2C66D8")]
	public static extern IntPtr CSharp_AkAcousticSurface_strName_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000F70")]
	[Address(RVA = "0x2C6798", Offset = "0x2C6798", VA = "0x2C6798")]
	public static extern void CSharp_AkAcousticSurface_Clear(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000F71")]
	[Address(RVA = "0x2C6858", Offset = "0x2C6858", VA = "0x2C6858")]
	public static extern void CSharp_AkAcousticSurface_DeleteName(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000F72")]
	[Address(RVA = "0x2C6918", Offset = "0x2C6918", VA = "0x2C6918")]
	public static extern int CSharp_AkAcousticSurface_GetSizeOf();

	[PreserveSig]
	[Token(Token = "0x6000F73")]
	[Address(RVA = "0x2C69C8", Offset = "0x2C69C8", VA = "0x2C69C8")]
	public static extern void CSharp_AkAcousticSurface_Clone(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6000F74")]
	[Address(RVA = "0x2C6A90", Offset = "0x2C6A90", VA = "0x2C6A90")]
	public static extern void CSharp_delete_AkAcousticSurface(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000F75")]
	[Address(RVA = "0x2889DC", Offset = "0x2889DC", VA = "0x2889DC")]
	public static extern void CSharp_AkReflectionPathInfo_imageSource_set(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6000F76")]
	[Address(RVA = "0x288B78", Offset = "0x288B78", VA = "0x288B78")]
	public static extern IntPtr CSharp_AkReflectionPathInfo_imageSource_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000F77")]
	[Address(RVA = "0x288CC4", Offset = "0x288CC4", VA = "0x288CC4")]
	public static extern void CSharp_AkReflectionPathInfo_numPathPoints_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6000F78")]
	[Address(RVA = "0x288E10", Offset = "0x288E10", VA = "0x288E10")]
	public static extern uint CSharp_AkReflectionPathInfo_numPathPoints_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000F79")]
	[Address(RVA = "0x288F5C", Offset = "0x288F5C", VA = "0x288F5C")]
	public static extern void CSharp_AkReflectionPathInfo_numReflections_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6000F7A")]
	[Address(RVA = "0x2890A8", Offset = "0x2890A8", VA = "0x2890A8")]
	public static extern uint CSharp_AkReflectionPathInfo_numReflections_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000F7B")]
	[Address(RVA = "0x289208", Offset = "0x289208", VA = "0x289208")]
	public static extern void CSharp_AkReflectionPathInfo_occlusionPoint_set(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6000F7C")]
	[Address(RVA = "0x2893A4", Offset = "0x2893A4", VA = "0x2893A4")]
	public static extern IntPtr CSharp_AkReflectionPathInfo_occlusionPoint_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000F7D")]
	[Address(RVA = "0x2894F0", Offset = "0x2894F0", VA = "0x2894F0")]
	public static extern void CSharp_AkReflectionPathInfo_level_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x6000F7E")]
	[Address(RVA = "0x28963C", Offset = "0x28963C", VA = "0x28963C")]
	public static extern float CSharp_AkReflectionPathInfo_level_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000F7F")]
	[Address(RVA = "0x289788", Offset = "0x289788", VA = "0x289788")]
	public static extern void CSharp_AkReflectionPathInfo_isOccluded_set(IntPtr jarg1, bool jarg2);

	[PreserveSig]
	[Token(Token = "0x6000F80")]
	[Address(RVA = "0x2898D4", Offset = "0x2898D4", VA = "0x2898D4")]
	public static extern bool CSharp_AkReflectionPathInfo_isOccluded_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000F81")]
	[Address(RVA = "0x289A14", Offset = "0x289A14", VA = "0x289A14")]
	public static extern int CSharp_AkReflectionPathInfo_GetSizeOf();

	[PreserveSig]
	[Token(Token = "0x6000F82")]
	[Address(RVA = "0x289BA0", Offset = "0x289BA0", VA = "0x289BA0")]
	public static extern IntPtr CSharp_AkReflectionPathInfo_GetPathPoint(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6000F83")]
	[Address(RVA = "0x289D24", Offset = "0x289D24", VA = "0x289D24")]
	public static extern IntPtr CSharp_AkReflectionPathInfo_GetAcousticSurface(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6000F84")]
	[Address(RVA = "0x289E78", Offset = "0x289E78", VA = "0x289E78")]
	public static extern float CSharp_AkReflectionPathInfo_GetDiffraction(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6000F85")]
	[Address(RVA = "0x28A014", Offset = "0x28A014", VA = "0x28A014")]
	public static extern void CSharp_AkReflectionPathInfo_Clone(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6000F86")]
	[Address(RVA = "0x2885C8", Offset = "0x2885C8", VA = "0x2885C8")]
	public static extern IntPtr CSharp_new_AkReflectionPathInfo();

	[PreserveSig]
	[Token(Token = "0x6000F87")]
	[Address(RVA = "0x28887C", Offset = "0x28887C", VA = "0x28887C")]
	public static extern void CSharp_delete_AkReflectionPathInfo(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000F88")]
	[Address(RVA = "0x2C6B50", Offset = "0x2C6B50", VA = "0x2C6B50")]
	public static extern void CSharp_AkDiffractionPathInfo_virtualPos_set(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6000F89")]
	[Address(RVA = "0x2C6C18", Offset = "0x2C6C18", VA = "0x2C6C18")]
	public static extern IntPtr CSharp_AkDiffractionPathInfo_virtualPos_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000F8A")]
	[Address(RVA = "0x2C6CD8", Offset = "0x2C6CD8", VA = "0x2C6CD8")]
	public static extern void CSharp_AkDiffractionPathInfo_nodeCount_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6000F8B")]
	[Address(RVA = "0x2C6DA0", Offset = "0x2C6DA0", VA = "0x2C6DA0")]
	public static extern uint CSharp_AkDiffractionPathInfo_nodeCount_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000F8C")]
	[Address(RVA = "0x2C6E60", Offset = "0x2C6E60", VA = "0x2C6E60")]
	public static extern void CSharp_AkDiffractionPathInfo_diffraction_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x6000F8D")]
	[Address(RVA = "0x2C6F28", Offset = "0x2C6F28", VA = "0x2C6F28")]
	public static extern float CSharp_AkDiffractionPathInfo_diffraction_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000F8E")]
	[Address(RVA = "0x2C6FE8", Offset = "0x2C6FE8", VA = "0x2C6FE8")]
	public static extern void CSharp_AkDiffractionPathInfo_totLength_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x6000F8F")]
	[Address(RVA = "0x2C70B0", Offset = "0x2C70B0", VA = "0x2C70B0")]
	public static extern float CSharp_AkDiffractionPathInfo_totLength_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000F90")]
	[Address(RVA = "0x2C7170", Offset = "0x2C7170", VA = "0x2C7170")]
	public static extern void CSharp_AkDiffractionPathInfo_obstructionValue_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x6000F91")]
	[Address(RVA = "0x2C7238", Offset = "0x2C7238", VA = "0x2C7238")]
	public static extern float CSharp_AkDiffractionPathInfo_obstructionValue_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000F92")]
	[Address(RVA = "0x2C72F8", Offset = "0x2C72F8", VA = "0x2C72F8")]
	public static extern int CSharp_AkDiffractionPathInfo_GetSizeOf();

	[PreserveSig]
	[Token(Token = "0x6000F93")]
	[Address(RVA = "0x2C73A8", Offset = "0x2C73A8", VA = "0x2C73A8")]
	public static extern IntPtr CSharp_AkDiffractionPathInfo_GetNodes(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6000F94")]
	[Address(RVA = "0x2C7470", Offset = "0x2C7470", VA = "0x2C7470")]
	public static extern float CSharp_AkDiffractionPathInfo_GetAngles(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6000F95")]
	[Address(RVA = "0x2C7538", Offset = "0x2C7538", VA = "0x2C7538")]
	public static extern void CSharp_AkDiffractionPathInfo_Clone(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6000F96")]
	[Address(RVA = "0x2C7600", Offset = "0x2C7600", VA = "0x2C7600")]
	public static extern IntPtr CSharp_new_AkDiffractionPathInfo();

	[PreserveSig]
	[Token(Token = "0x6000F97")]
	[Address(RVA = "0x2C76B0", Offset = "0x2C76B0", VA = "0x2C76B0")]
	public static extern void CSharp_delete_AkDiffractionPathInfo(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000F98")]
	[Address(RVA = "0x286378", Offset = "0x286378", VA = "0x286378")]
	public static extern void CSharp_AkPropagationPathInfo_nodePoint_set(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6000F99")]
	[Address(RVA = "0x286514", Offset = "0x286514", VA = "0x286514")]
	public static extern IntPtr CSharp_AkPropagationPathInfo_nodePoint_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000F9A")]
	[Address(RVA = "0x286660", Offset = "0x286660", VA = "0x286660")]
	public static extern void CSharp_AkPropagationPathInfo_numNodes_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6000F9B")]
	[Address(RVA = "0x2867AC", Offset = "0x2867AC", VA = "0x2867AC")]
	public static extern uint CSharp_AkPropagationPathInfo_numNodes_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000F9C")]
	[Address(RVA = "0x2868F8", Offset = "0x2868F8", VA = "0x2868F8")]
	public static extern void CSharp_AkPropagationPathInfo_length_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x6000F9D")]
	[Address(RVA = "0x286A44", Offset = "0x286A44", VA = "0x286A44")]
	public static extern float CSharp_AkPropagationPathInfo_length_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000F9E")]
	[Address(RVA = "0x286B90", Offset = "0x286B90", VA = "0x286B90")]
	public static extern void CSharp_AkPropagationPathInfo_gain_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x6000F9F")]
	[Address(RVA = "0x286CDC", Offset = "0x286CDC", VA = "0x286CDC")]
	public static extern float CSharp_AkPropagationPathInfo_gain_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000FA0")]
	[Address(RVA = "0x286E28", Offset = "0x286E28", VA = "0x286E28")]
	public static extern void CSharp_AkPropagationPathInfo_dryDiffraction_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x6000FA1")]
	[Address(RVA = "0x286F74", Offset = "0x286F74", VA = "0x286F74")]
	public static extern float CSharp_AkPropagationPathInfo_dryDiffraction_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000FA2")]
	[Address(RVA = "0x2870C0", Offset = "0x2870C0", VA = "0x2870C0")]
	public static extern void CSharp_AkPropagationPathInfo_wetDiffraction_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x6000FA3")]
	[Address(RVA = "0x28720C", Offset = "0x28720C", VA = "0x28720C")]
	public static extern float CSharp_AkPropagationPathInfo_wetDiffraction_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000FA4")]
	[Address(RVA = "0x287344", Offset = "0x287344", VA = "0x287344")]
	public static extern int CSharp_AkPropagationPathInfo_GetSizeOf();

	[PreserveSig]
	[Token(Token = "0x6000FA5")]
	[Address(RVA = "0x2874D0", Offset = "0x2874D0", VA = "0x2874D0")]
	public static extern IntPtr CSharp_AkPropagationPathInfo_GetNodePoint(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6000FA6")]
	[Address(RVA = "0x28766C", Offset = "0x28766C", VA = "0x28766C")]
	public static extern void CSharp_AkPropagationPathInfo_Clone(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6000FA7")]
	[Address(RVA = "0x285F64", Offset = "0x285F64", VA = "0x285F64")]
	public static extern IntPtr CSharp_new_AkPropagationPathInfo();

	[PreserveSig]
	[Token(Token = "0x6000FA8")]
	[Address(RVA = "0x286218", Offset = "0x286218", VA = "0x286218")]
	public static extern void CSharp_delete_AkPropagationPathInfo(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000FA9")]
	[Address(RVA = "0x28B9F0", Offset = "0x28B9F0", VA = "0x28B9F0")]
	public static extern IntPtr CSharp_new_AkRoomParams();

	[PreserveSig]
	[Token(Token = "0x6000FAA")]
	[Address(RVA = "0x28BE04", Offset = "0x28BE04", VA = "0x28BE04")]
	public static extern void CSharp_AkRoomParams_Up_set(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6000FAB")]
	[Address(RVA = "0x28BECC", Offset = "0x28BECC", VA = "0x28BECC")]
	public static extern IntPtr CSharp_AkRoomParams_Up_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000FAC")]
	[Address(RVA = "0x28C02C", Offset = "0x28C02C", VA = "0x28C02C")]
	public static extern void CSharp_AkRoomParams_Front_set(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6000FAD")]
	[Address(RVA = "0x28C0F4", Offset = "0x28C0F4", VA = "0x28C0F4")]
	public static extern IntPtr CSharp_AkRoomParams_Front_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000FAE")]
	[Address(RVA = "0x28C1B4", Offset = "0x28C1B4", VA = "0x28C1B4")]
	public static extern void CSharp_AkRoomParams_ReverbAuxBus_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6000FAF")]
	[Address(RVA = "0x28C300", Offset = "0x28C300", VA = "0x28C300")]
	public static extern uint CSharp_AkRoomParams_ReverbAuxBus_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000FB0")]
	[Address(RVA = "0x28C3C0", Offset = "0x28C3C0", VA = "0x28C3C0")]
	public static extern void CSharp_AkRoomParams_ReverbLevel_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x6000FB1")]
	[Address(RVA = "0x28C50C", Offset = "0x28C50C", VA = "0x28C50C")]
	public static extern float CSharp_AkRoomParams_ReverbLevel_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000FB2")]
	[Address(RVA = "0x28C5CC", Offset = "0x28C5CC", VA = "0x28C5CC")]
	public static extern void CSharp_AkRoomParams_WallOcclusion_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x6000FB3")]
	[Address(RVA = "0x28C718", Offset = "0x28C718", VA = "0x28C718")]
	public static extern float CSharp_AkRoomParams_WallOcclusion_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000FB4")]
	[Address(RVA = "0x28C7D8", Offset = "0x28C7D8", VA = "0x28C7D8")]
	public static extern void CSharp_AkRoomParams_RoomGameObj_AuxSendLevelToSelf_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x6000FB5")]
	[Address(RVA = "0x28C924", Offset = "0x28C924", VA = "0x28C924")]
	public static extern float CSharp_AkRoomParams_RoomGameObj_AuxSendLevelToSelf_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000FB6")]
	[Address(RVA = "0x28C9E4", Offset = "0x28C9E4", VA = "0x28C9E4")]
	public static extern void CSharp_AkRoomParams_RoomGameObj_KeepRegistered_set(IntPtr jarg1, bool jarg2);

	[PreserveSig]
	[Token(Token = "0x6000FB7")]
	[Address(RVA = "0x28CB30", Offset = "0x28CB30", VA = "0x28CB30")]
	public static extern bool CSharp_AkRoomParams_RoomGameObj_KeepRegistered_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000FB8")]
	[Address(RVA = "0x28BCA4", Offset = "0x28BCA4", VA = "0x28BCA4")]
	public static extern void CSharp_delete_AkRoomParams(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000FB9")]
	[Address(RVA = "0x2AD7B0", Offset = "0x2AD7B0", VA = "0x2AD7B0")]
	public static extern int CSharp_GetPoolID();

	[PreserveSig]
	[Token(Token = "0x6000FBA")]
	[Address(RVA = "0x2AD944", Offset = "0x2AD944", VA = "0x2AD944")]
	public static extern int CSharp_RegisterEmitter(ulong jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6000FBB")]
	[Address(RVA = "0x2ADAD8", Offset = "0x2ADAD8", VA = "0x2ADAD8")]
	public static extern int CSharp_UnregisterEmitter(ulong jarg1);

	[PreserveSig]
	[Token(Token = "0x6000FBC")]
	[Address(RVA = "0x2ADC94", Offset = "0x2ADC94", VA = "0x2ADC94")]
	public static extern int CSharp_SetEmitterAuxSendValues(ulong jarg1, IntPtr jarg2, uint jarg3);

	[PreserveSig]
	[Token(Token = "0x6000FBD")]
	[Address(RVA = "0x2ADE68", Offset = "0x2ADE68", VA = "0x2ADE68")]
	public static extern int CSharp_SetImageSource__SWIG_0(uint jarg1, IntPtr jarg2, uint jarg3, ulong jarg4, ulong jarg5);

	[PreserveSig]
	[Token(Token = "0x6000FBE")]
	[Address(RVA = "0x2AE010", Offset = "0x2AE010", VA = "0x2AE010")]
	public static extern int CSharp_SetImageSource__SWIG_1(uint jarg1, IntPtr jarg2, uint jarg3, ulong jarg4);

	[PreserveSig]
	[Token(Token = "0x6000FBF")]
	[Address(RVA = "0x2AE1C4", Offset = "0x2AE1C4", VA = "0x2AE1C4")]
	public static extern int CSharp_RemoveImageSource__SWIG_0(uint jarg1, uint jarg2, ulong jarg3);

	[PreserveSig]
	[Token(Token = "0x6000FC0")]
	[Address(RVA = "0x2AE31C", Offset = "0x2AE31C", VA = "0x2AE31C")]
	public static extern int CSharp_RemoveImageSource__SWIG_1(uint jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6000FC1")]
	[Address(RVA = "0x2AE474", Offset = "0x2AE474", VA = "0x2AE474")]
	public static extern int CSharp_RemoveGeometry(ulong jarg1);

	[PreserveSig]
	[Token(Token = "0x6000FC2")]
	[Address(RVA = "0x2AE670", Offset = "0x2AE670", VA = "0x2AE670")]
	public static extern int CSharp_QueryReflectionPaths(ulong jarg1, IntPtr jarg2, IntPtr jarg3, IntPtr jarg4, out uint jarg5);

	[PreserveSig]
	[Token(Token = "0x6000FC3")]
	[Address(RVA = "0x2AE760", Offset = "0x2AE760", VA = "0x2AE760")]
	public static extern int CSharp_RemoveRoom(ulong jarg1);

	[PreserveSig]
	[Token(Token = "0x6000FC4")]
	[Address(RVA = "0x2AE8B8", Offset = "0x2AE8B8", VA = "0x2AE8B8")]
	public static extern int CSharp_RemovePortal(ulong jarg1);

	[PreserveSig]
	[Token(Token = "0x6000FC5")]
	[Address(RVA = "0x2AEA58", Offset = "0x2AEA58", VA = "0x2AEA58")]
	public static extern int CSharp_SetGameObjectInRoom(ulong jarg1, ulong jarg2);

	[PreserveSig]
	[Token(Token = "0x6000FC6")]
	[Address(RVA = "0x2AEC10", Offset = "0x2AEC10", VA = "0x2AEC10")]
	public static extern int CSharp_SetEmitterObstructionAndOcclusion(ulong jarg1, float jarg2, float jarg3);

	[PreserveSig]
	[Token(Token = "0x6000FC7")]
	[Address(RVA = "0x2AECE8", Offset = "0x2AECE8", VA = "0x2AECE8")]
	public static extern int CSharp_SetPortalObstructionAndOcclusion(ulong jarg1, float jarg2, float jarg3);

	[PreserveSig]
	[Token(Token = "0x6000FC8")]
	[Address(RVA = "0x27C0D0", Offset = "0x27C0D0", VA = "0x27C0D0")]
	public static extern void CSharp_AkPlatformInitSettings_threadLEngine_set(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6000FC9")]
	[Address(RVA = "0x27C26C", Offset = "0x27C26C", VA = "0x27C26C")]
	public static extern IntPtr CSharp_AkPlatformInitSettings_threadLEngine_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000FCA")]
	[Address(RVA = "0x27C3CC", Offset = "0x27C3CC", VA = "0x27C3CC")]
	public static extern void CSharp_AkPlatformInitSettings_threadBankManager_set(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6000FCB")]
	[Address(RVA = "0x27C568", Offset = "0x27C568", VA = "0x27C568")]
	public static extern IntPtr CSharp_AkPlatformInitSettings_threadBankManager_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000FCC")]
	[Address(RVA = "0x27C6C8", Offset = "0x27C6C8", VA = "0x27C6C8")]
	public static extern void CSharp_AkPlatformInitSettings_threadMonitor_set(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6000FCD")]
	[Address(RVA = "0x27C864", Offset = "0x27C864", VA = "0x27C864")]
	public static extern IntPtr CSharp_AkPlatformInitSettings_threadMonitor_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000FCE")]
	[Address(RVA = "0x27C9B0", Offset = "0x27C9B0", VA = "0x27C9B0")]
	public static extern void CSharp_AkPlatformInitSettings_fLEngineDefaultPoolRatioThreshold_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x6000FCF")]
	[Address(RVA = "0x27CAFC", Offset = "0x27CAFC", VA = "0x27CAFC")]
	public static extern float CSharp_AkPlatformInitSettings_fLEngineDefaultPoolRatioThreshold_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000FD0")]
	[Address(RVA = "0x27CC48", Offset = "0x27CC48", VA = "0x27CC48")]
	public static extern void CSharp_AkPlatformInitSettings_uLEngineDefaultPoolSize_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6000FD1")]
	[Address(RVA = "0x27CD94", Offset = "0x27CD94", VA = "0x27CD94")]
	public static extern uint CSharp_AkPlatformInitSettings_uLEngineDefaultPoolSize_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000FD2")]
	[Address(RVA = "0x27CEE0", Offset = "0x27CEE0", VA = "0x27CEE0")]
	public static extern void CSharp_AkPlatformInitSettings_uSampleRate_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6000FD3")]
	[Address(RVA = "0x27D02C", Offset = "0x27D02C", VA = "0x27D02C")]
	public static extern uint CSharp_AkPlatformInitSettings_uSampleRate_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000FD4")]
	[Address(RVA = "0x27D178", Offset = "0x27D178", VA = "0x27D178")]
	public static extern void CSharp_AkPlatformInitSettings_uNumRefillsInVoice_set(IntPtr jarg1, ushort jarg2);

	[PreserveSig]
	[Token(Token = "0x6000FD5")]
	[Address(RVA = "0x27D2C4", Offset = "0x27D2C4", VA = "0x27D2C4")]
	public static extern ushort CSharp_AkPlatformInitSettings_uNumRefillsInVoice_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000FD6")]
	[Address(RVA = "0x27D410", Offset = "0x27D410", VA = "0x27D410")]
	public static extern void CSharp_AkPlatformInitSettings_uChannelMask_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6000FD7")]
	[Address(RVA = "0x27D55C", Offset = "0x27D55C", VA = "0x27D55C")]
	public static extern uint CSharp_AkPlatformInitSettings_uChannelMask_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000FD8")]
	[Address(RVA = "0x27D6A8", Offset = "0x27D6A8", VA = "0x27D6A8")]
	public static extern void CSharp_AkPlatformInitSettings_bRoundFrameSizeToHWSize_set(IntPtr jarg1, bool jarg2);

	[PreserveSig]
	[Token(Token = "0x6000FD9")]
	[Address(RVA = "0x27D7F4", Offset = "0x27D7F4", VA = "0x27D7F4")]
	public static extern bool CSharp_AkPlatformInitSettings_bRoundFrameSizeToHWSize_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000FDA")]
	[Address(RVA = "0x27BCBC", Offset = "0x27BCBC", VA = "0x27BCBC")]
	public static extern IntPtr CSharp_new_AkPlatformInitSettings();

	[PreserveSig]
	[Token(Token = "0x6000FDB")]
	[Address(RVA = "0x27BF70", Offset = "0x27BF70", VA = "0x27BF70")]
	public static extern void CSharp_delete_AkPlatformInitSettings(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000FDC")]
	[Address(RVA = "0x2AEEA4", Offset = "0x2AEEA4", VA = "0x2AEEA4")]
	public static extern int CSharp_GetFastPathSettings(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6000FDD")]
	[Address(RVA = "0x2C7770", Offset = "0x2C7770", VA = "0x2C7770")]
	public static extern void CSharp_AkStreamMgrSettings_uMemorySize_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6000FDE")]
	[Address(RVA = "0x2C7838", Offset = "0x2C7838", VA = "0x2C7838")]
	public static extern uint CSharp_AkStreamMgrSettings_uMemorySize_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000FDF")]
	[Address(RVA = "0x2C78F8", Offset = "0x2C78F8", VA = "0x2C78F8")]
	public static extern IntPtr CSharp_new_AkStreamMgrSettings();

	[PreserveSig]
	[Token(Token = "0x6000FE0")]
	[Address(RVA = "0x2C79A8", Offset = "0x2C79A8", VA = "0x2C79A8")]
	public static extern void CSharp_delete_AkStreamMgrSettings(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000FE1")]
	[Address(RVA = "0x2C7A68", Offset = "0x2C7A68", VA = "0x2C7A68")]
	public static extern void CSharp_AkDeviceSettings_pIOMemory_set(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6000FE2")]
	[Address(RVA = "0x2C7B30", Offset = "0x2C7B30", VA = "0x2C7B30")]
	public static extern IntPtr CSharp_AkDeviceSettings_pIOMemory_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000FE3")]
	[Address(RVA = "0x2C7BF0", Offset = "0x2C7BF0", VA = "0x2C7BF0")]
	public static extern void CSharp_AkDeviceSettings_uIOMemorySize_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6000FE4")]
	[Address(RVA = "0x2C7CB8", Offset = "0x2C7CB8", VA = "0x2C7CB8")]
	public static extern uint CSharp_AkDeviceSettings_uIOMemorySize_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000FE5")]
	[Address(RVA = "0x2C7D78", Offset = "0x2C7D78", VA = "0x2C7D78")]
	public static extern void CSharp_AkDeviceSettings_uIOMemoryAlignment_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6000FE6")]
	[Address(RVA = "0x2C7E40", Offset = "0x2C7E40", VA = "0x2C7E40")]
	public static extern uint CSharp_AkDeviceSettings_uIOMemoryAlignment_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000FE7")]
	[Address(RVA = "0x2C7F00", Offset = "0x2C7F00", VA = "0x2C7F00")]
	public static extern void CSharp_AkDeviceSettings_ePoolAttributes_set(IntPtr jarg1, int jarg2);

	[PreserveSig]
	[Token(Token = "0x6000FE8")]
	[Address(RVA = "0x2C7FC8", Offset = "0x2C7FC8", VA = "0x2C7FC8")]
	public static extern int CSharp_AkDeviceSettings_ePoolAttributes_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000FE9")]
	[Address(RVA = "0x2C8088", Offset = "0x2C8088", VA = "0x2C8088")]
	public static extern void CSharp_AkDeviceSettings_uGranularity_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6000FEA")]
	[Address(RVA = "0x2C8150", Offset = "0x2C8150", VA = "0x2C8150")]
	public static extern uint CSharp_AkDeviceSettings_uGranularity_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000FEB")]
	[Address(RVA = "0x2C8210", Offset = "0x2C8210", VA = "0x2C8210")]
	public static extern void CSharp_AkDeviceSettings_uSchedulerTypeFlags_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6000FEC")]
	[Address(RVA = "0x2C82D8", Offset = "0x2C82D8", VA = "0x2C82D8")]
	public static extern uint CSharp_AkDeviceSettings_uSchedulerTypeFlags_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000FED")]
	[Address(RVA = "0x2C8398", Offset = "0x2C8398", VA = "0x2C8398")]
	public static extern void CSharp_AkDeviceSettings_threadProperties_set(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6000FEE")]
	[Address(RVA = "0x2C8460", Offset = "0x2C8460", VA = "0x2C8460")]
	public static extern IntPtr CSharp_AkDeviceSettings_threadProperties_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000FEF")]
	[Address(RVA = "0x2C8520", Offset = "0x2C8520", VA = "0x2C8520")]
	public static extern void CSharp_AkDeviceSettings_fTargetAutoStmBufferLength_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x6000FF0")]
	[Address(RVA = "0x2C85E8", Offset = "0x2C85E8", VA = "0x2C85E8")]
	public static extern float CSharp_AkDeviceSettings_fTargetAutoStmBufferLength_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000FF1")]
	[Address(RVA = "0x2C86A8", Offset = "0x2C86A8", VA = "0x2C86A8")]
	public static extern void CSharp_AkDeviceSettings_uMaxConcurrentIO_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6000FF2")]
	[Address(RVA = "0x2C8770", Offset = "0x2C8770", VA = "0x2C8770")]
	public static extern uint CSharp_AkDeviceSettings_uMaxConcurrentIO_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000FF3")]
	[Address(RVA = "0x2C8830", Offset = "0x2C8830", VA = "0x2C8830")]
	public static extern void CSharp_AkDeviceSettings_bUseStreamCache_set(IntPtr jarg1, bool jarg2);

	[PreserveSig]
	[Token(Token = "0x6000FF4")]
	[Address(RVA = "0x2C88F8", Offset = "0x2C88F8", VA = "0x2C88F8")]
	public static extern bool CSharp_AkDeviceSettings_bUseStreamCache_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000FF5")]
	[Address(RVA = "0x2C89C0", Offset = "0x2C89C0", VA = "0x2C89C0")]
	public static extern void CSharp_AkDeviceSettings_uMaxCachePinnedBytes_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6000FF6")]
	[Address(RVA = "0x2C8A88", Offset = "0x2C8A88", VA = "0x2C8A88")]
	public static extern uint CSharp_AkDeviceSettings_uMaxCachePinnedBytes_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000FF7")]
	[Address(RVA = "0x2C8B48", Offset = "0x2C8B48", VA = "0x2C8B48")]
	public static extern IntPtr CSharp_new_AkDeviceSettings();

	[PreserveSig]
	[Token(Token = "0x6000FF8")]
	[Address(RVA = "0x2C8BF8", Offset = "0x2C8BF8", VA = "0x2C8BF8")]
	public static extern void CSharp_delete_AkDeviceSettings(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000FF9")]
	[Address(RVA = "0x2C8CB8", Offset = "0x2C8CB8", VA = "0x2C8CB8")]
	public static extern void CSharp_AkThreadProperties_nPriority_set(IntPtr jarg1, int jarg2);

	[PreserveSig]
	[Token(Token = "0x6000FFA")]
	[Address(RVA = "0x2C8D80", Offset = "0x2C8D80", VA = "0x2C8D80")]
	public static extern int CSharp_AkThreadProperties_nPriority_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000FFB")]
	[Address(RVA = "0x2C8E40", Offset = "0x2C8E40", VA = "0x2C8E40")]
	public static extern void CSharp_AkThreadProperties_uStackSize_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6000FFC")]
	[Address(RVA = "0x2C8F08", Offset = "0x2C8F08", VA = "0x2C8F08")]
	public static extern uint CSharp_AkThreadProperties_uStackSize_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000FFD")]
	[Address(RVA = "0x2C8FC8", Offset = "0x2C8FC8", VA = "0x2C8FC8")]
	public static extern void CSharp_AkThreadProperties_uSchedPolicy_set(IntPtr jarg1, int jarg2);

	[PreserveSig]
	[Token(Token = "0x6000FFE")]
	[Address(RVA = "0x2C9090", Offset = "0x2C9090", VA = "0x2C9090")]
	public static extern int CSharp_AkThreadProperties_uSchedPolicy_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000FFF")]
	[Address(RVA = "0x2C9150", Offset = "0x2C9150", VA = "0x2C9150")]
	public static extern void CSharp_AkThreadProperties_dwAffinityMask_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6001000")]
	[Address(RVA = "0x2C9218", Offset = "0x2C9218", VA = "0x2C9218")]
	public static extern uint CSharp_AkThreadProperties_dwAffinityMask_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001001")]
	[Address(RVA = "0x2C92D8", Offset = "0x2C92D8", VA = "0x2C92D8")]
	public static extern IntPtr CSharp_new_AkThreadProperties();

	[PreserveSig]
	[Token(Token = "0x6001002")]
	[Address(RVA = "0x2C9388", Offset = "0x2C9388", VA = "0x2C9388")]
	public static extern void CSharp_delete_AkThreadProperties(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001003")]
	[Address(RVA = "0x2AEFEC", Offset = "0x2AEFEC", VA = "0x2AEFEC")]
	public static extern void CSharp_SetErrorLogger__SWIG_0(AkLogger.ErrorLoggerInteropDelegate jarg1);

	[PreserveSig]
	[Token(Token = "0x6001004")]
	[Address(RVA = "0x2AF130", Offset = "0x2AF130", VA = "0x2AF130")]
	public static extern void CSharp_SetErrorLogger__SWIG_1();

	[PreserveSig]
	[Token(Token = "0x6001005")]
	[Address(RVA = "0x2AF268", Offset = "0x2AF268", VA = "0x2AF268")]
	public static extern void CSharp_SetAudioInputCallbacks(AkAudioInputManager.AudioSamplesInteropDelegate jarg1, AkAudioInputManager.AudioFormatInteropDelegate jarg2);

	[PreserveSig]
	[Token(Token = "0x6001006")]
	[Address(RVA = "0x27B40C", Offset = "0x27B40C", VA = "0x27B40C")]
	public static extern void CSharp_AkPathParams_listenerPos_set(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6001007")]
	[Address(RVA = "0x27B5A8", Offset = "0x27B5A8", VA = "0x27B5A8")]
	public static extern IntPtr CSharp_AkPathParams_listenerPos_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001008")]
	[Address(RVA = "0x27B708", Offset = "0x27B708", VA = "0x27B708")]
	public static extern void CSharp_AkPathParams_emitterPos_set(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6001009")]
	[Address(RVA = "0x27B8A4", Offset = "0x27B8A4", VA = "0x27B8A4")]
	public static extern IntPtr CSharp_AkPathParams_emitterPos_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600100A")]
	[Address(RVA = "0x27B9F0", Offset = "0x27B9F0", VA = "0x27B9F0")]
	public static extern void CSharp_AkPathParams_numValidPaths_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x600100B")]
	[Address(RVA = "0x27BB3C", Offset = "0x27BB3C", VA = "0x27BB3C")]
	public static extern uint CSharp_AkPathParams_numValidPaths_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600100C")]
	[Address(RVA = "0x27AFF8", Offset = "0x27AFF8", VA = "0x27AFF8")]
	public static extern IntPtr CSharp_new_AkPathParams();

	[PreserveSig]
	[Token(Token = "0x600100D")]
	[Address(RVA = "0x27B2AC", Offset = "0x27B2AC", VA = "0x27B2AC")]
	public static extern void CSharp_delete_AkPathParams(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600100E")]
	[Address(RVA = "0x2C9448", Offset = "0x2C9448", VA = "0x2C9448")]
	public static extern IntPtr CSharp_new_AkUnityPlatformSpecificSettings();

	[PreserveSig]
	[Token(Token = "0x600100F")]
	[Address(RVA = "0x2C94F8", Offset = "0x2C94F8", VA = "0x2C94F8")]
	public static extern void CSharp_delete_AkUnityPlatformSpecificSettings(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001010")]
	[Address(RVA = "0x2C95B8", Offset = "0x2C95B8", VA = "0x2C95B8")]
	public static extern IntPtr CSharp_new_AkCommunicationSettings();

	[PreserveSig]
	[Token(Token = "0x6001011")]
	[Address(RVA = "0x2C9668", Offset = "0x2C9668", VA = "0x2C9668")]
	public static extern void CSharp_AkCommunicationSettings_uPoolSize_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6001012")]
	[Address(RVA = "0x2C9730", Offset = "0x2C9730", VA = "0x2C9730")]
	public static extern uint CSharp_AkCommunicationSettings_uPoolSize_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001013")]
	[Address(RVA = "0x2C97F0", Offset = "0x2C97F0", VA = "0x2C97F0")]
	public static extern void CSharp_AkCommunicationSettings_uDiscoveryBroadcastPort_set(IntPtr jarg1, ushort jarg2);

	[PreserveSig]
	[Token(Token = "0x6001014")]
	[Address(RVA = "0x2C98B8", Offset = "0x2C98B8", VA = "0x2C98B8")]
	public static extern ushort CSharp_AkCommunicationSettings_uDiscoveryBroadcastPort_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001015")]
	[Address(RVA = "0x2C9978", Offset = "0x2C9978", VA = "0x2C9978")]
	public static extern void CSharp_AkCommunicationSettings_uCommandPort_set(IntPtr jarg1, ushort jarg2);

	[PreserveSig]
	[Token(Token = "0x6001016")]
	[Address(RVA = "0x2C9A40", Offset = "0x2C9A40", VA = "0x2C9A40")]
	public static extern ushort CSharp_AkCommunicationSettings_uCommandPort_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001017")]
	[Address(RVA = "0x2C9B00", Offset = "0x2C9B00", VA = "0x2C9B00")]
	public static extern void CSharp_AkCommunicationSettings_uNotificationPort_set(IntPtr jarg1, ushort jarg2);

	[PreserveSig]
	[Token(Token = "0x6001018")]
	[Address(RVA = "0x2C9BC8", Offset = "0x2C9BC8", VA = "0x2C9BC8")]
	public static extern ushort CSharp_AkCommunicationSettings_uNotificationPort_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001019")]
	[Address(RVA = "0x2C9C88", Offset = "0x2C9C88", VA = "0x2C9C88")]
	public static extern void CSharp_AkCommunicationSettings_bInitSystemLib_set(IntPtr jarg1, bool jarg2);

	[PreserveSig]
	[Token(Token = "0x600101A")]
	[Address(RVA = "0x2C9D50", Offset = "0x2C9D50", VA = "0x2C9D50")]
	public static extern bool CSharp_AkCommunicationSettings_bInitSystemLib_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600101B")]
	[Address(RVA = "0x2C9E18", Offset = "0x2C9E18", VA = "0x2C9E18")]
	public static extern void CSharp_AkCommunicationSettings_szAppNetworkName_set(IntPtr jarg1, string jarg2);

	[PreserveSig]
	[Token(Token = "0x600101C")]
	[Address(RVA = "0x2C9EFC", Offset = "0x2C9EFC", VA = "0x2C9EFC")]
	public static extern IntPtr CSharp_AkCommunicationSettings_szAppNetworkName_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600101D")]
	[Address(RVA = "0x2C9FBC", Offset = "0x2C9FBC", VA = "0x2C9FBC")]
	public static extern void CSharp_delete_AkCommunicationSettings(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600101E")]
	[Address(RVA = "0x2CA07C", Offset = "0x2CA07C", VA = "0x2CA07C")]
	public static extern IntPtr CSharp_new_AkInitializationSettings();

	[PreserveSig]
	[Token(Token = "0x600101F")]
	[Address(RVA = "0x2CA12C", Offset = "0x2CA12C", VA = "0x2CA12C")]
	public static extern void CSharp_AkInitializationSettings_memSettings_set(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6001020")]
	[Address(RVA = "0x2CA1F4", Offset = "0x2CA1F4", VA = "0x2CA1F4")]
	public static extern IntPtr CSharp_AkInitializationSettings_memSettings_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001021")]
	[Address(RVA = "0x2CA2B4", Offset = "0x2CA2B4", VA = "0x2CA2B4")]
	public static extern void CSharp_AkInitializationSettings_streamMgrSettings_set(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6001022")]
	[Address(RVA = "0x2CA37C", Offset = "0x2CA37C", VA = "0x2CA37C")]
	public static extern IntPtr CSharp_AkInitializationSettings_streamMgrSettings_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001023")]
	[Address(RVA = "0x2CA43C", Offset = "0x2CA43C", VA = "0x2CA43C")]
	public static extern void CSharp_AkInitializationSettings_deviceSettings_set(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6001024")]
	[Address(RVA = "0x2CA504", Offset = "0x2CA504", VA = "0x2CA504")]
	public static extern IntPtr CSharp_AkInitializationSettings_deviceSettings_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001025")]
	[Address(RVA = "0x2CA5C4", Offset = "0x2CA5C4", VA = "0x2CA5C4")]
	public static extern void CSharp_AkInitializationSettings_initSettings_set(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6001026")]
	[Address(RVA = "0x2CA68C", Offset = "0x2CA68C", VA = "0x2CA68C")]
	public static extern IntPtr CSharp_AkInitializationSettings_initSettings_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001027")]
	[Address(RVA = "0x2CA74C", Offset = "0x2CA74C", VA = "0x2CA74C")]
	public static extern void CSharp_AkInitializationSettings_platformSettings_set(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6001028")]
	[Address(RVA = "0x2CA814", Offset = "0x2CA814", VA = "0x2CA814")]
	public static extern IntPtr CSharp_AkInitializationSettings_platformSettings_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001029")]
	[Address(RVA = "0x2CA8D4", Offset = "0x2CA8D4", VA = "0x2CA8D4")]
	public static extern void CSharp_AkInitializationSettings_musicSettings_set(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x600102A")]
	[Address(RVA = "0x2CA99C", Offset = "0x2CA99C", VA = "0x2CA99C")]
	public static extern IntPtr CSharp_AkInitializationSettings_musicSettings_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600102B")]
	[Address(RVA = "0x2CAA5C", Offset = "0x2CAA5C", VA = "0x2CAA5C")]
	public static extern void CSharp_AkInitializationSettings_preparePoolSize_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x600102C")]
	[Address(RVA = "0x2CAB24", Offset = "0x2CAB24", VA = "0x2CAB24")]
	public static extern uint CSharp_AkInitializationSettings_preparePoolSize_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600102D")]
	[Address(RVA = "0x2CABE4", Offset = "0x2CABE4", VA = "0x2CABE4")]
	public static extern void CSharp_AkInitializationSettings_communicationSettings_set(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x600102E")]
	[Address(RVA = "0x2CACAC", Offset = "0x2CACAC", VA = "0x2CACAC")]
	public static extern IntPtr CSharp_AkInitializationSettings_communicationSettings_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600102F")]
	[Address(RVA = "0x2CAD6C", Offset = "0x2CAD6C", VA = "0x2CAD6C")]
	public static extern void CSharp_AkInitializationSettings_unityPlatformSpecificSettings_set(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6001030")]
	[Address(RVA = "0x2CAE34", Offset = "0x2CAE34", VA = "0x2CAE34")]
	public static extern IntPtr CSharp_AkInitializationSettings_unityPlatformSpecificSettings_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001031")]
	[Address(RVA = "0x2CAEF4", Offset = "0x2CAEF4", VA = "0x2CAEF4")]
	public static extern void CSharp_delete_AkInitializationSettings(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001032")]
	[Address(RVA = "0x2AF3E0", Offset = "0x2AF3E0", VA = "0x2AF3E0")]
	public static extern int CSharp_Init(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001033")]
	[Address(RVA = "0x2AF534", Offset = "0x2AF534", VA = "0x2AF534")]
	public static extern int CSharp_InitSpatialAudio(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001034")]
	[Address(RVA = "0x2AF688", Offset = "0x2AF688", VA = "0x2AF688")]
	public static extern int CSharp_InitCommunication(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001035")]
	[Address(RVA = "0x2AF7C0", Offset = "0x2AF7C0", VA = "0x2AF7C0")]
	public static extern void CSharp_Term();

	[PreserveSig]
	[Token(Token = "0x6001036")]
	[Address(RVA = "0x2AF938", Offset = "0x2AF938", VA = "0x2AF938")]
	public static extern int CSharp_RegisterGameObjInternal(ulong jarg1);

	[PreserveSig]
	[Token(Token = "0x6001037")]
	[Address(RVA = "0x2AFAC8", Offset = "0x2AFAC8", VA = "0x2AFAC8")]
	public static extern int CSharp_UnregisterGameObjInternal(ulong jarg1);

	[PreserveSig]
	[Token(Token = "0x6001038")]
	[Address(RVA = "0x2AFC60", Offset = "0x2AFC60", VA = "0x2AFC60")]
	public static extern int CSharp_RegisterGameObjInternal_WithName(ulong jarg1, string jarg2);

	[PreserveSig]
	[Token(Token = "0x6001039")]
	[Address(RVA = "0x2AFDD0", Offset = "0x2AFDD0", VA = "0x2AFDD0")]
	public static extern int CSharp_SetBasePath(string jarg1);

	[PreserveSig]
	[Token(Token = "0x600103A")]
	[Address(RVA = "0x2AFF34", Offset = "0x2AFF34", VA = "0x2AFF34")]
	public static extern int CSharp_SetCurrentLanguage(string jarg1);

	[PreserveSig]
	[Token(Token = "0x600103B")]
	[Address(RVA = "0x2B00B0", Offset = "0x2B00B0", VA = "0x2B00B0")]
	public static extern int CSharp_LoadFilePackage(string jarg1, out uint jarg2, int jarg3);

	[PreserveSig]
	[Token(Token = "0x600103C")]
	[Address(RVA = "0x2B0234", Offset = "0x2B0234", VA = "0x2B0234")]
	public static extern int CSharp_AddBasePath(string jarg1);

	[PreserveSig]
	[Token(Token = "0x600103D")]
	[Address(RVA = "0x2B0398", Offset = "0x2B0398", VA = "0x2B0398")]
	public static extern int CSharp_SetGameName(string jarg1);

	[PreserveSig]
	[Token(Token = "0x600103E")]
	[Address(RVA = "0x2B04FC", Offset = "0x2B04FC", VA = "0x2B04FC")]
	public static extern int CSharp_SetDecodedBankPath(string jarg1);

	[PreserveSig]
	[Token(Token = "0x600103F")]
	[Address(RVA = "0x2B0678", Offset = "0x2B0678", VA = "0x2B0678")]
	public static extern int CSharp_LoadAndDecodeBank(string jarg1, bool jarg2, out uint jarg3);

	[PreserveSig]
	[Token(Token = "0x6001040")]
	[Address(RVA = "0x2B0828", Offset = "0x2B0828", VA = "0x2B0828")]
	public static extern int CSharp_LoadAndDecodeBankFromMemory(IntPtr jarg1, uint jarg2, bool jarg3, string jarg4, bool jarg5, out uint jarg6);

	[PreserveSig]
	[Token(Token = "0x6001041")]
	[Address(RVA = "0x2B09F0", Offset = "0x2B09F0", VA = "0x2B09F0")]
	public static extern IntPtr CSharp_GetCurrentLanguage();

	[PreserveSig]
	[Token(Token = "0x6001042")]
	[Address(RVA = "0x2B0B20", Offset = "0x2B0B20", VA = "0x2B0B20")]
	public static extern int CSharp_UnloadFilePackage(uint jarg1);

	[PreserveSig]
	[Token(Token = "0x6001043")]
	[Address(RVA = "0x2B0C58", Offset = "0x2B0C58", VA = "0x2B0C58")]
	public static extern int CSharp_UnloadAllFilePackages();

	[PreserveSig]
	[Token(Token = "0x6001044")]
	[Address(RVA = "0x2B0E28", Offset = "0x2B0E28", VA = "0x2B0E28")]
	public static extern int CSharp_SetObjectPosition(ulong jarg1, float jarg2, float jarg3, float jarg4, float jarg5, float jarg6, float jarg7, float jarg8, float jarg9, float jarg10);

	[PreserveSig]
	[Token(Token = "0x6001045")]
	[Address(RVA = "0x2B0FE4", Offset = "0x2B0FE4", VA = "0x2B0FE4")]
	public static extern int CSharp_GetSourceMultiplePlayPositions(uint jarg1, [Out] uint[] jarg2, [Out] uint[] jarg3, [Out] int[] jarg4, ref uint jarg5, bool jarg6);

	[PreserveSig]
	[Token(Token = "0x6001046")]
	[Address(RVA = "0x2B12D4", Offset = "0x2B12D4", VA = "0x2B12D4")]
	public static extern int CSharp_SetListeners(ulong jarg1, ulong[] jarg2, uint jarg3);

	[PreserveSig]
	[Token(Token = "0x6001047")]
	[Address(RVA = "0x2B1434", Offset = "0x2B1434", VA = "0x2B1434")]
	public static extern int CSharp_SetDefaultListeners(ulong[] jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6001048")]
	[Address(RVA = "0x2B15EC", Offset = "0x2B15EC", VA = "0x2B15EC")]
	public static extern int CSharp_AddOutput(IntPtr jarg1, out ulong jarg2, ulong[] jarg3, uint jarg4);

	[PreserveSig]
	[Token(Token = "0x6001049")]
	[Address(RVA = "0x2B176C", Offset = "0x2B176C", VA = "0x2B176C")]
	public static extern void CSharp_GetDefaultStreamSettings(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600104A")]
	[Address(RVA = "0x2B18C0", Offset = "0x2B18C0", VA = "0x2B18C0")]
	public static extern void CSharp_GetDefaultDeviceSettings(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600104B")]
	[Address(RVA = "0x2B1A48", Offset = "0x2B1A48", VA = "0x2B1A48")]
	public static extern void CSharp_GetDefaultMusicSettings(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600104C")]
	[Address(RVA = "0x2B1B9C", Offset = "0x2B1B9C", VA = "0x2B1B9C")]
	public static extern void CSharp_GetDefaultInitSettings(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600104D")]
	[Address(RVA = "0x2B1D24", Offset = "0x2B1D24", VA = "0x2B1D24")]
	public static extern void CSharp_GetDefaultPlatformInitSettings(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600104E")]
	[Address(RVA = "0x2B1E5C", Offset = "0x2B1E5C", VA = "0x2B1E5C")]
	public static extern uint CSharp_GetMajorMinorVersion();

	[PreserveSig]
	[Token(Token = "0x600104F")]
	[Address(RVA = "0x2B1F84", Offset = "0x2B1F84", VA = "0x2B1F84")]
	public static extern uint CSharp_GetSubminorBuildVersion();

	[PreserveSig]
	[Token(Token = "0x6001050")]
	[Address(RVA = "0x2B2180", Offset = "0x2B2180", VA = "0x2B2180")]
	public static extern int CSharp_QueryIndirectPaths(ulong jarg1, IntPtr jarg2, IntPtr jarg3, uint jarg4);

	[PreserveSig]
	[Token(Token = "0x6001051")]
	[Address(RVA = "0x2B23A4", Offset = "0x2B23A4", VA = "0x2B23A4")]
	public static extern int CSharp_QuerySoundPropagationPaths(ulong jarg1, IntPtr jarg2, IntPtr jarg3, uint jarg4);

	[PreserveSig]
	[Token(Token = "0x6001052")]
	[Address(RVA = "0x2B25C8", Offset = "0x2B25C8", VA = "0x2B25C8")]
	public static extern int CSharp_QueryDiffractionPaths(ulong jarg1, IntPtr jarg2, IntPtr jarg3, uint jarg4);

	[PreserveSig]
	[Token(Token = "0x6001053")]
	[Address(RVA = "0x2B26A0", Offset = "0x2B26A0", VA = "0x2B26A0")]
	public static extern int CSharp_SetRoomPortal(ulong jarg1, IntPtr jarg2, IntPtr jarg3, bool jarg4, ulong jarg5, ulong jarg6);

	[PreserveSig]
	[Token(Token = "0x6001054")]
	[Address(RVA = "0x2B2794", Offset = "0x2B2794", VA = "0x2B2794")]
	public static extern int CSharp_SetRoom(ulong jarg1, IntPtr jarg2, string jarg3);

	[PreserveSig]
	[Token(Token = "0x6001055")]
	[Address(RVA = "0x2B2954", Offset = "0x2B2954", VA = "0x2B2954")]
	public static extern int CSharp_RegisterSpatialAudioListener(ulong jarg1);

	[PreserveSig]
	[Token(Token = "0x6001056")]
	[Address(RVA = "0x2B2AE4", Offset = "0x2B2AE4", VA = "0x2B2AE4")]
	public static extern int CSharp_UnregisterSpatialAudioListener(ulong jarg1);

	[PreserveSig]
	[Token(Token = "0x6001057")]
	[Address(RVA = "0x2B2CF0", Offset = "0x2B2CF0", VA = "0x2B2CF0")]
	public static extern int CSharp_SetGeometry(ulong jarg1, IntPtr jarg2, uint jarg3, IntPtr jarg4, uint jarg5, IntPtr jarg6, uint jarg7, bool jarg8, bool jarg9);

	[PreserveSig]
	[Token(Token = "0x6001058")]
	[Address(RVA = "0x27D960", Offset = "0x27D960", VA = "0x27D960")]
	public static extern IntPtr CSharp_AkPlaylist_SWIGUpcast(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001059")]
	[Address(RVA = "0x272D88", Offset = "0x272D88", VA = "0x272D88")]
	public static extern IntPtr CSharp_AkMIDIPost_SWIGUpcast(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600105A")]
	[Address(RVA = "0x2CAFB4", Offset = "0x2CAFB4", VA = "0x2CAFB4")]
	public static extern IntPtr CSharp_AkEventCallbackInfo_SWIGUpcast(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600105B")]
	[Address(RVA = "0x2715EC", Offset = "0x2715EC", VA = "0x2715EC")]
	public static extern IntPtr CSharp_AkMIDIEventCallbackInfo_SWIGUpcast(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600105C")]
	[Address(RVA = "0x2CB074", Offset = "0x2CB074", VA = "0x2CB074")]
	public static extern IntPtr CSharp_AkMarkerCallbackInfo_SWIGUpcast(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600105D")]
	[Address(RVA = "0x2CB134", Offset = "0x2CB134", VA = "0x2CB134")]
	public static extern IntPtr CSharp_AkDurationCallbackInfo_SWIGUpcast(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600105E")]
	[Address(RVA = "0x2CB1F4", Offset = "0x2CB1F4", VA = "0x2CB1F4")]
	public static extern IntPtr CSharp_AkDynamicSequenceItemCallbackInfo_SWIGUpcast(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600105F")]
	[Address(RVA = "0x275F70", Offset = "0x275F70", VA = "0x275F70")]
	public static extern IntPtr CSharp_AkMusicSyncCallbackInfo_SWIGUpcast(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001060")]
	[Address(RVA = "0x274DB0", Offset = "0x274DB0", VA = "0x274DB0")]
	public static extern IntPtr CSharp_AkMusicPlaylistCallbackInfo_SWIGUpcast(IntPtr jarg1);
}
[Token(Token = "0x2000200")]
public class AkThreadProperties : IDisposable
{
	[Token(Token = "0x4000D60")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private IntPtr swigCPtr;

	[Token(Token = "0x4000D61")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	protected bool swigCMemOwn;

	[Token(Token = "0x170000FF")]
	public int nPriority
	{
		[Token(Token = "0x6001068")]
		[Address(RVA = "0xCD9AAC", Offset = "0xCD9AAC", VA = "0xCD9AAC")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6001067")]
		[Address(RVA = "0xCD9A18", Offset = "0xCD9A18", VA = "0xCD9A18")]
		set
		{
		}
	}

	[Token(Token = "0x17000100")]
	public uint uStackSize
	{
		[Token(Token = "0x600106A")]
		[Address(RVA = "0xCD9BCC", Offset = "0xCD9BCC", VA = "0xCD9BCC")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x6001069")]
		[Address(RVA = "0xCD9B38", Offset = "0xCD9B38", VA = "0xCD9B38")]
		set
		{
		}
	}

	[Token(Token = "0x17000101")]
	public int uSchedPolicy
	{
		[Token(Token = "0x600106C")]
		[Address(RVA = "0xCD9CEC", Offset = "0xCD9CEC", VA = "0xCD9CEC")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x600106B")]
		[Address(RVA = "0xCD9C58", Offset = "0xCD9C58", VA = "0xCD9C58")]
		set
		{
		}
	}

	[Token(Token = "0x17000102")]
	public uint dwAffinityMask
	{
		[Token(Token = "0x600106E")]
		[Address(RVA = "0xCD9E0C", Offset = "0xCD9E0C", VA = "0xCD9E0C")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x600106D")]
		[Address(RVA = "0xCD9D78", Offset = "0xCD9D78", VA = "0xCD9D78")]
		set
		{
		}
	}

	[Token(Token = "0x6001061")]
	[Address(RVA = "0xCD9744", Offset = "0xCD9744", VA = "0xCD9744")]
	internal AkThreadProperties(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x6001062")]
	[Address(RVA = "0xCD976C", Offset = "0xCD976C", VA = "0xCD976C")]
	public AkThreadProperties()
	{
	}

	[Token(Token = "0x6001063")]
	[Address(RVA = "0xCD980C", Offset = "0xCD980C", VA = "0xCD980C")]
	internal static IntPtr getCPtr(AkThreadProperties obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6001064")]
	[Address(RVA = "0xCD9864", Offset = "0xCD9864", VA = "0xCD9864", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x6001065")]
	[Address(RVA = "0xCD9890", Offset = "0xCD9890", VA = "0xCD9890", Slot = "1")]
	~AkThreadProperties()
	{
	}

	[Token(Token = "0x6001066")]
	[Address(RVA = "0xCD98F0", Offset = "0xCD98F0", VA = "0xCD98F0", Slot = "6")]
	public virtual void Dispose()
	{
	}
}
[Token(Token = "0x2000201")]
public class AkUnityPlatformSpecificSettings : IDisposable
{
	[Token(Token = "0x4000D62")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private IntPtr swigCPtr;

	[Token(Token = "0x4000D63")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	protected bool swigCMemOwn;

	[Token(Token = "0x600106F")]
	[Address(RVA = "0xCDD43C", Offset = "0xCDD43C", VA = "0xCDD43C")]
	internal AkUnityPlatformSpecificSettings(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x6001070")]
	[Address(RVA = "0xCDD464", Offset = "0xCDD464", VA = "0xCDD464")]
	public AkUnityPlatformSpecificSettings()
	{
	}

	[Token(Token = "0x6001071")]
	[Address(RVA = "0xCDD504", Offset = "0xCDD504", VA = "0xCDD504")]
	internal static IntPtr getCPtr(AkUnityPlatformSpecificSettings obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6001072")]
	[Address(RVA = "0xCDD55C", Offset = "0xCDD55C", VA = "0xCDD55C", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x6001073")]
	[Address(RVA = "0xCDD588", Offset = "0xCDD588", VA = "0xCDD588", Slot = "1")]
	~AkUnityPlatformSpecificSettings()
	{
	}

	[Token(Token = "0x6001074")]
	[Address(RVA = "0xCDD5E8", Offset = "0xCDD5E8", VA = "0xCDD5E8", Slot = "6")]
	public virtual void Dispose()
	{
	}
}
[Token(Token = "0x2000202")]
public class _ArrayPoolDefault : IDisposable
{
	[Token(Token = "0x4000D64")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private IntPtr swigCPtr;

	[Token(Token = "0x4000D65")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	protected bool swigCMemOwn;

	[Token(Token = "0x6001075")]
	[Address(RVA = "0x463C94", Offset = "0x463C94", VA = "0x463C94")]
	internal _ArrayPoolDefault(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x6001076")]
	[Address(RVA = "0x463CBC", Offset = "0x463CBC", VA = "0x463CBC")]
	public _ArrayPoolDefault()
	{
	}

	[Token(Token = "0x6001077")]
	[Address(RVA = "0x463D5C", Offset = "0x463D5C", VA = "0x463D5C")]
	internal static IntPtr getCPtr(_ArrayPoolDefault obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6001078")]
	[Address(RVA = "0x463DB4", Offset = "0x463DB4", VA = "0x463DB4", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x6001079")]
	[Address(RVA = "0x463DE0", Offset = "0x463DE0", VA = "0x463DE0", Slot = "1")]
	~_ArrayPoolDefault()
	{
	}

	[Token(Token = "0x600107A")]
	[Address(RVA = "0x463E40", Offset = "0x463E40", VA = "0x463E40", Slot = "6")]
	public virtual void Dispose()
	{
	}

	[Token(Token = "0x600107B")]
	[Address(RVA = "0x463F68", Offset = "0x463F68", VA = "0x463F68")]
	public static int Get()
	{
		return default(int);
	}
}
[Token(Token = "0x2000203")]
public class _ArrayPoolLEngineDefault : IDisposable
{
	[Token(Token = "0x4000D66")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private IntPtr swigCPtr;

	[Token(Token = "0x4000D67")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	protected bool swigCMemOwn;

	[Token(Token = "0x600107C")]
	[Address(RVA = "0x463FE8", Offset = "0x463FE8", VA = "0x463FE8")]
	internal _ArrayPoolLEngineDefault(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x600107D")]
	[Address(RVA = "0x464010", Offset = "0x464010", VA = "0x464010")]
	public _ArrayPoolLEngineDefault()
	{
	}

	[Token(Token = "0x600107E")]
	[Address(RVA = "0x4640B0", Offset = "0x4640B0", VA = "0x4640B0")]
	internal static IntPtr getCPtr(_ArrayPoolLEngineDefault obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x600107F")]
	[Address(RVA = "0x464108", Offset = "0x464108", VA = "0x464108", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x6001080")]
	[Address(RVA = "0x464134", Offset = "0x464134", VA = "0x464134", Slot = "1")]
	~_ArrayPoolLEngineDefault()
	{
	}

	[Token(Token = "0x6001081")]
	[Address(RVA = "0x464194", Offset = "0x464194", VA = "0x464194", Slot = "6")]
	public virtual void Dispose()
	{
	}

	[Token(Token = "0x6001082")]
	[Address(RVA = "0x4642BC", Offset = "0x4642BC", VA = "0x4642BC")]
	public static int Get()
	{
		return default(int);
	}
}
[Token(Token = "0x2000204")]
public class _ArrayPoolSpatialAudio : IDisposable
{
	[Token(Token = "0x4000D68")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private IntPtr swigCPtr;

	[Token(Token = "0x4000D69")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	protected bool swigCMemOwn;

	[Token(Token = "0x6001083")]
	[Address(RVA = "0x46433C", Offset = "0x46433C", VA = "0x46433C")]
	internal _ArrayPoolSpatialAudio(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x6001084")]
	[Address(RVA = "0x464364", Offset = "0x464364", VA = "0x464364")]
	public _ArrayPoolSpatialAudio()
	{
	}

	[Token(Token = "0x6001085")]
	[Address(RVA = "0x464404", Offset = "0x464404", VA = "0x464404")]
	internal static IntPtr getCPtr(_ArrayPoolSpatialAudio obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6001086")]
	[Address(RVA = "0x46445C", Offset = "0x46445C", VA = "0x46445C", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x6001087")]
	[Address(RVA = "0x464488", Offset = "0x464488", VA = "0x464488", Slot = "1")]
	~_ArrayPoolSpatialAudio()
	{
	}

	[Token(Token = "0x6001088")]
	[Address(RVA = "0x4644E8", Offset = "0x4644E8", VA = "0x4644E8", Slot = "6")]
	public virtual void Dispose()
	{
	}

	[Token(Token = "0x6001089")]
	[Address(RVA = "0x464610", Offset = "0x464610", VA = "0x464610")]
	public static int Get()
	{
		return default(int);
	}
}
[Token(Token = "0x2000205")]
public enum Ak3DPositionType
{
	[Token(Token = "0x4000D6B")]
	AK_3DPositionType_Emitter,
	[Token(Token = "0x4000D6C")]
	AK_3DPositionType_EmitterWithAutomation,
	[Token(Token = "0x4000D6D")]
	AK_3DPositionType_ListenerWithAutomation
}
[Token(Token = "0x2000206")]
public enum Ak3DSpatializationMode
{
	[Token(Token = "0x4000D6F")]
	AK_SpatializationMode_None,
	[Token(Token = "0x4000D70")]
	AK_SpatializationMode_PositionOnly,
	[Token(Token = "0x4000D71")]
	AK_SpatializationMode_PositionAndOrientation
}
[Token(Token = "0x2000207")]
public class AkAcousticSurface : IDisposable
{
	[Token(Token = "0x4000D72")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private IntPtr swigCPtr;

	[Token(Token = "0x4000D73")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	protected bool swigCMemOwn;

	[Token(Token = "0x17000103")]
	public uint textureID
	{
		[Token(Token = "0x6001091")]
		[Address(RVA = "0x4670EC", Offset = "0x4670EC", VA = "0x4670EC")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x6001090")]
		[Address(RVA = "0x467058", Offset = "0x467058", VA = "0x467058")]
		set
		{
		}
	}

	[Token(Token = "0x17000104")]
	public uint reflectorChannelMask
	{
		[Token(Token = "0x6001093")]
		[Address(RVA = "0x46720C", Offset = "0x46720C", VA = "0x46720C")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x6001092")]
		[Address(RVA = "0x467178", Offset = "0x467178", VA = "0x467178")]
		set
		{
		}
	}

	[Token(Token = "0x17000105")]
	public string strName
	{
		[Token(Token = "0x6001095")]
		[Address(RVA = "0x46732C", Offset = "0x46732C", VA = "0x46732C")]
		get
		{
			return null;
		}
		[Token(Token = "0x6001094")]
		[Address(RVA = "0x467298", Offset = "0x467298", VA = "0x467298")]
		set
		{
		}
	}

	[Token(Token = "0x600108A")]
	[Address(RVA = "0x466D84", Offset = "0x466D84", VA = "0x466D84")]
	internal AkAcousticSurface(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x600108B")]
	[Address(RVA = "0x466DAC", Offset = "0x466DAC", VA = "0x466DAC")]
	public AkAcousticSurface()
	{
	}

	[Token(Token = "0x600108C")]
	[Address(RVA = "0x466E4C", Offset = "0x466E4C", VA = "0x466E4C")]
	internal static IntPtr getCPtr(AkAcousticSurface obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x600108D")]
	[Address(RVA = "0x466EA4", Offset = "0x466EA4", VA = "0x466EA4", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x600108E")]
	[Address(RVA = "0x466ED0", Offset = "0x466ED0", VA = "0x466ED0", Slot = "1")]
	~AkAcousticSurface()
	{
	}

	[Token(Token = "0x600108F")]
	[Address(RVA = "0x466F30", Offset = "0x466F30", VA = "0x466F30", Slot = "6")]
	public virtual void Dispose()
	{
	}

	[Token(Token = "0x6001096")]
	[Address(RVA = "0x4673F8", Offset = "0x4673F8", VA = "0x4673F8")]
	public void Clear()
	{
	}

	[Token(Token = "0x6001097")]
	[Address(RVA = "0x467484", Offset = "0x467484", VA = "0x467484")]
	public void DeleteName()
	{
	}

	[Token(Token = "0x6001098")]
	[Address(RVA = "0x467510", Offset = "0x467510", VA = "0x467510")]
	public static int GetSizeOf()
	{
		return default(int);
	}

	[Token(Token = "0x6001099")]
	[Address(RVA = "0x467590", Offset = "0x467590", VA = "0x467590")]
	public void Clone(AkAcousticSurface other)
	{
	}
}
[Token(Token = "0x2000208")]
public enum AkActionOnEventType
{
	[Token(Token = "0x4000D75")]
	AkActionOnEventType_Stop,
	[Token(Token = "0x4000D76")]
	AkActionOnEventType_Pause,
	[Token(Token = "0x4000D77")]
	AkActionOnEventType_Resume,
	[Token(Token = "0x4000D78")]
	AkActionOnEventType_Break,
	[Token(Token = "0x4000D79")]
	AkActionOnEventType_ReleaseEnvelope
}
[Token(Token = "0x2000209")]
public enum AkAudioDeviceState
{
	[Token(Token = "0x4000D7B")]
	AkDeviceState_Active = 1,
	[Token(Token = "0x4000D7C")]
	AkDeviceState_Disabled = 2,
	[Token(Token = "0x4000D7D")]
	AkDeviceState_NotPresent = 4,
	[Token(Token = "0x4000D7E")]
	AkDeviceState_Unplugged = 8,
	[Token(Token = "0x4000D7F")]
	AkDeviceState_All = 15
}
[Token(Token = "0x200020A")]
public class AkAudioFormat : IDisposable
{
	[Token(Token = "0x4000D80")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private IntPtr swigCPtr;

	[Token(Token = "0x4000D81")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	protected bool swigCMemOwn;

	[Token(Token = "0x17000106")]
	public uint uSampleRate
	{
		[Token(Token = "0x60010A1")]
		[Address(RVA = "0x469744", Offset = "0x469744", VA = "0x469744")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x60010A0")]
		[Address(RVA = "0x4696B0", Offset = "0x4696B0", VA = "0x4696B0")]
		set
		{
		}
	}

	[Token(Token = "0x17000107")]
	public AkChannelConfig channelConfig
	{
		[Token(Token = "0x60010A3")]
		[Address(RVA = "0x469904", Offset = "0x469904", VA = "0x469904")]
		get
		{
			return null;
		}
		[Token(Token = "0x60010A2")]
		[Address(RVA = "0x4697D0", Offset = "0x4697D0", VA = "0x4697D0")]
		set
		{
		}
	}

	[Token(Token = "0x17000108")]
	public uint uBitsPerSample
	{
		[Token(Token = "0x60010A5")]
		[Address(RVA = "0x469AA0", Offset = "0x469AA0", VA = "0x469AA0")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x60010A4")]
		[Address(RVA = "0x469A0C", Offset = "0x469A0C", VA = "0x469A0C")]
		set
		{
		}
	}

	[Token(Token = "0x17000109")]
	public uint uBlockAlign
	{
		[Token(Token = "0x60010A7")]
		[Address(RVA = "0x469BC0", Offset = "0x469BC0", VA = "0x469BC0")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x60010A6")]
		[Address(RVA = "0x469B2C", Offset = "0x469B2C", VA = "0x469B2C")]
		set
		{
		}
	}

	[Token(Token = "0x1700010A")]
	public uint uTypeID
	{
		[Token(Token = "0x60010A9")]
		[Address(RVA = "0x469CE0", Offset = "0x469CE0", VA = "0x469CE0")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x60010A8")]
		[Address(RVA = "0x469C4C", Offset = "0x469C4C", VA = "0x469C4C")]
		set
		{
		}
	}

	[Token(Token = "0x1700010B")]
	public uint uInterleaveID
	{
		[Token(Token = "0x60010AB")]
		[Address(RVA = "0x469E00", Offset = "0x469E00", VA = "0x469E00")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x60010AA")]
		[Address(RVA = "0x469D6C", Offset = "0x469D6C", VA = "0x469D6C")]
		set
		{
		}
	}

	[Token(Token = "0x600109A")]
	[Address(RVA = "0x4693DC", Offset = "0x4693DC", VA = "0x4693DC")]
	internal AkAudioFormat(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x600109B")]
	[Address(RVA = "0x469404", Offset = "0x469404", VA = "0x469404")]
	public AkAudioFormat()
	{
	}

	[Token(Token = "0x600109C")]
	[Address(RVA = "0x4694A4", Offset = "0x4694A4", VA = "0x4694A4")]
	internal static IntPtr getCPtr(AkAudioFormat obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x600109D")]
	[Address(RVA = "0x4694FC", Offset = "0x4694FC", VA = "0x4694FC", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x600109E")]
	[Address(RVA = "0x469528", Offset = "0x469528", VA = "0x469528", Slot = "1")]
	~AkAudioFormat()
	{
	}

	[Token(Token = "0x600109F")]
	[Address(RVA = "0x469588", Offset = "0x469588", VA = "0x469588", Slot = "6")]
	public virtual void Dispose()
	{
	}

	[Token(Token = "0x60010AC")]
	[Address(RVA = "0x469E8C", Offset = "0x469E8C", VA = "0x469E8C")]
	public uint GetNumChannels()
	{
		return default(uint);
	}

	[Token(Token = "0x60010AD")]
	[Address(RVA = "0x469F18", Offset = "0x469F18", VA = "0x469F18")]
	public uint GetBitsPerSample()
	{
		return default(uint);
	}

	[Token(Token = "0x60010AE")]
	[Address(RVA = "0x469FA4", Offset = "0x469FA4", VA = "0x469FA4")]
	public uint GetBlockAlign()
	{
		return default(uint);
	}

	[Token(Token = "0x60010AF")]
	[Address(RVA = "0x46A030", Offset = "0x46A030", VA = "0x46A030")]
	public uint GetTypeID()
	{
		return default(uint);
	}

	[Token(Token = "0x60010B0")]
	[Address(RVA = "0x46A0BC", Offset = "0x46A0BC", VA = "0x46A0BC")]
	public uint GetInterleaveID()
	{
		return default(uint);
	}

	[Token(Token = "0x60010B1")]
	[Address(RVA = "0x46A148", Offset = "0x46A148", VA = "0x46A148")]
	public void SetAll(uint in_uSampleRate, AkChannelConfig in_channelConfig, uint in_uBitsPerSample, uint in_uBlockAlign, uint in_uTypeID, uint in_uInterleaveID)
	{
	}

	[Token(Token = "0x60010B2")]
	[Address(RVA = "0x46A250", Offset = "0x46A250", VA = "0x46A250")]
	public bool IsChannelConfigSupported()
	{
		return default(bool);
	}
}
[Token(Token = "0x200020B")]
public class AkAudioInterruptionCallbackInfo : IDisposable
{
	[Token(Token = "0x4000D82")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private IntPtr swigCPtr;

	[Token(Token = "0x4000D83")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	protected bool swigCMemOwn;

	[Token(Token = "0x1700010C")]
	public bool bEnterInterruption
	{
		[Token(Token = "0x60010B9")]
		[Address(RVA = "0x46C374", Offset = "0x46C374", VA = "0x46C374")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x60010B3")]
	[Address(RVA = "0x46C0A0", Offset = "0x46C0A0", VA = "0x46C0A0")]
	internal AkAudioInterruptionCallbackInfo(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x60010B4")]
	[Address(RVA = "0x46C0C8", Offset = "0x46C0C8", VA = "0x46C0C8")]
	public AkAudioInterruptionCallbackInfo()
	{
	}

	[Token(Token = "0x60010B5")]
	[Address(RVA = "0x46C168", Offset = "0x46C168", VA = "0x46C168")]
	internal static IntPtr getCPtr(AkAudioInterruptionCallbackInfo obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x60010B6")]
	[Address(RVA = "0x46C1C0", Offset = "0x46C1C0", VA = "0x46C1C0", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x60010B7")]
	[Address(RVA = "0x46C1EC", Offset = "0x46C1EC", VA = "0x46C1EC", Slot = "1")]
	~AkAudioInterruptionCallbackInfo()
	{
	}

	[Token(Token = "0x60010B8")]
	[Address(RVA = "0x46C24C", Offset = "0x46C24C", VA = "0x46C24C", Slot = "6")]
	public virtual void Dispose()
	{
	}
}
[Token(Token = "0x200020C")]
public class AkAudioSettings : IDisposable
{
	[Token(Token = "0x4000D84")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private IntPtr swigCPtr;

	[Token(Token = "0x4000D85")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	protected bool swigCMemOwn;

	[Token(Token = "0x1700010D")]
	public uint uNumSamplesPerFrame
	{
		[Token(Token = "0x60010C1")]
		[Address(RVA = "0x46D828", Offset = "0x46D828", VA = "0x46D828")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x60010C0")]
		[Address(RVA = "0x46D794", Offset = "0x46D794", VA = "0x46D794")]
		set
		{
		}
	}

	[Token(Token = "0x1700010E")]
	public uint uNumSamplesPerSecond
	{
		[Token(Token = "0x60010C3")]
		[Address(RVA = "0x46D948", Offset = "0x46D948", VA = "0x46D948")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x60010C2")]
		[Address(RVA = "0x46D8B4", Offset = "0x46D8B4", VA = "0x46D8B4")]
		set
		{
		}
	}

	[Token(Token = "0x60010BA")]
	[Address(RVA = "0x46D4C0", Offset = "0x46D4C0", VA = "0x46D4C0")]
	internal AkAudioSettings(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x60010BB")]
	[Address(RVA = "0x46D4E8", Offset = "0x46D4E8", VA = "0x46D4E8")]
	public AkAudioSettings()
	{
	}

	[Token(Token = "0x60010BC")]
	[Address(RVA = "0x46D588", Offset = "0x46D588", VA = "0x46D588")]
	internal static IntPtr getCPtr(AkAudioSettings obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x60010BD")]
	[Address(RVA = "0x46D5E0", Offset = "0x46D5E0", VA = "0x46D5E0", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x60010BE")]
	[Address(RVA = "0x46D60C", Offset = "0x46D60C", VA = "0x46D60C", Slot = "1")]
	~AkAudioSettings()
	{
	}

	[Token(Token = "0x60010BF")]
	[Address(RVA = "0x46D66C", Offset = "0x46D66C", VA = "0x46D66C", Slot = "6")]
	public virtual void Dispose()
	{
	}
}
[Token(Token = "0x200020D")]
public class AkAudioSourceChangeCallbackInfo : IDisposable
{
	[Token(Token = "0x4000D86")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private IntPtr swigCPtr;

	[Token(Token = "0x4000D87")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	protected bool swigCMemOwn;

	[Token(Token = "0x1700010F")]
	public bool bOtherAudioPlaying
	{
		[Token(Token = "0x60010CA")]
		[Address(RVA = "0x46DCA8", Offset = "0x46DCA8", VA = "0x46DCA8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x60010C4")]
	[Address(RVA = "0x46D9D4", Offset = "0x46D9D4", VA = "0x46D9D4")]
	internal AkAudioSourceChangeCallbackInfo(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x60010C5")]
	[Address(RVA = "0x46D9FC", Offset = "0x46D9FC", VA = "0x46D9FC")]
	public AkAudioSourceChangeCallbackInfo()
	{
	}

	[Token(Token = "0x60010C6")]
	[Address(RVA = "0x46DA9C", Offset = "0x46DA9C", VA = "0x46DA9C")]
	internal static IntPtr getCPtr(AkAudioSourceChangeCallbackInfo obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x60010C7")]
	[Address(RVA = "0x46DAF4", Offset = "0x46DAF4", VA = "0x46DAF4", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x60010C8")]
	[Address(RVA = "0x46DB20", Offset = "0x46DB20", VA = "0x46DB20", Slot = "1")]
	~AkAudioSourceChangeCallbackInfo()
	{
	}

	[Token(Token = "0x60010C9")]
	[Address(RVA = "0x46DB80", Offset = "0x46DB80", VA = "0x46DB80", Slot = "6")]
	public virtual void Dispose()
	{
	}
}
[Token(Token = "0x200020E")]
public class AkAuxSendValue : IDisposable
{
	[Token(Token = "0x4000D88")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private IntPtr swigCPtr;

	[Token(Token = "0x4000D89")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	protected bool swigCMemOwn;

	[Token(Token = "0x17000110")]
	public ulong listenerID
	{
		[Token(Token = "0x60010D1")]
		[Address(RVA = "0x46EAF8", Offset = "0x46EAF8", VA = "0x46EAF8")]
		get
		{
			return default(ulong);
		}
		[Token(Token = "0x60010D0")]
		[Address(RVA = "0x46EA50", Offset = "0x46EA50", VA = "0x46EA50")]
		set
		{
		}
	}

	[Token(Token = "0x17000111")]
	public uint auxBusID
	{
		[Token(Token = "0x60010D3")]
		[Address(RVA = "0x46EC18", Offset = "0x46EC18", VA = "0x46EC18")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x60010D2")]
		[Address(RVA = "0x46EB84", Offset = "0x46EB84", VA = "0x46EB84")]
		set
		{
		}
	}

	[Token(Token = "0x17000112")]
	public float fControlValue
	{
		[Token(Token = "0x60010D5")]
		[Address(RVA = "0x46ED38", Offset = "0x46ED38", VA = "0x46ED38")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60010D4")]
		[Address(RVA = "0x46ECA4", Offset = "0x46ECA4", VA = "0x46ECA4")]
		set
		{
		}
	}

	[Token(Token = "0x60010CB")]
	[Address(RVA = "0x46DF78", Offset = "0x46DF78", VA = "0x46DF78")]
	internal AkAuxSendValue(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x60010CC")]
	[Address(RVA = "0x46E844", Offset = "0x46E844", VA = "0x46E844")]
	internal static IntPtr getCPtr(AkAuxSendValue obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x60010CD")]
	[Address(RVA = "0x46E89C", Offset = "0x46E89C", VA = "0x46E89C", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x60010CE")]
	[Address(RVA = "0x46E8C8", Offset = "0x46E8C8", VA = "0x46E8C8", Slot = "1")]
	~AkAuxSendValue()
	{
	}

	[Token(Token = "0x60010CF")]
	[Address(RVA = "0x46E928", Offset = "0x46E928", VA = "0x46E928", Slot = "6")]
	public virtual void Dispose()
	{
	}

	[Token(Token = "0x60010D6")]
	[Address(RVA = "0x46EDC4", Offset = "0x46EDC4", VA = "0x46EDC4")]
	public void Set(GameObject listener, uint id, float value)
	{
	}

	[Token(Token = "0x60010D7")]
	[Address(RVA = "0x46EEE0", Offset = "0x46EEE0", VA = "0x46EEE0")]
	public bool IsSame(GameObject listener, uint id)
	{
		return default(bool);
	}

	[Token(Token = "0x60010D8")]
	[Address(RVA = "0x46EFE4", Offset = "0x46EFE4", VA = "0x46EFE4")]
	public static int GetSizeOf()
	{
		return default(int);
	}

	[Token(Token = "0x60010D9")]
	[Address(RVA = "0x46F064", Offset = "0x46F064", VA = "0x46F064")]
	public AKRESULT SetGameObjectAuxSendValues(GameObject in_gameObjectID, uint in_uNumSendValues)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60010DA")]
	[Address(RVA = "0x46F168", Offset = "0x46F168", VA = "0x46F168")]
	public AKRESULT GetGameObjectAuxSendValues(GameObject in_gameObjectID, ref uint io_ruNumSendValues)
	{
		return default(AKRESULT);
	}
}
[Token(Token = "0x200020F")]
public class AkBankCallbackInfo : IDisposable
{
	[Token(Token = "0x4000D8A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private IntPtr swigCPtr;

	[Token(Token = "0x4000D8B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	protected bool swigCMemOwn;

	[Token(Token = "0x17000113")]
	public uint bankID
	{
		[Token(Token = "0x60010E1")]
		[Address(RVA = "0x46FAE0", Offset = "0x46FAE0", VA = "0x46FAE0")]
		get
		{
			return default(uint);
		}
	}

	[Token(Token = "0x17000114")]
	public IntPtr inMemoryBankPtr
	{
		[Token(Token = "0x60010E2")]
		[Address(RVA = "0x46FB6C", Offset = "0x46FB6C", VA = "0x46FB6C")]
		get
		{
			return default(IntPtr);
		}
	}

	[Token(Token = "0x17000115")]
	public AKRESULT loadResult
	{
		[Token(Token = "0x60010E3")]
		[Address(RVA = "0x46FBF8", Offset = "0x46FBF8", VA = "0x46FBF8")]
		get
		{
			return default(AKRESULT);
		}
	}

	[Token(Token = "0x17000116")]
	public int memPoolId
	{
		[Token(Token = "0x60010E4")]
		[Address(RVA = "0x46FC84", Offset = "0x46FC84", VA = "0x46FC84")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x60010DB")]
	[Address(RVA = "0x46F80C", Offset = "0x46F80C", VA = "0x46F80C")]
	internal AkBankCallbackInfo(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x60010DC")]
	[Address(RVA = "0x46F834", Offset = "0x46F834", VA = "0x46F834")]
	public AkBankCallbackInfo()
	{
	}

	[Token(Token = "0x60010DD")]
	[Address(RVA = "0x46F8D4", Offset = "0x46F8D4", VA = "0x46F8D4")]
	internal static IntPtr getCPtr(AkBankCallbackInfo obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x60010DE")]
	[Address(RVA = "0x46F92C", Offset = "0x46F92C", VA = "0x46F92C", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x60010DF")]
	[Address(RVA = "0x46F958", Offset = "0x46F958", VA = "0x46F958", Slot = "1")]
	~AkBankCallbackInfo()
	{
	}

	[Token(Token = "0x60010E0")]
	[Address(RVA = "0x46F9B8", Offset = "0x46F9B8", VA = "0x46F9B8", Slot = "6")]
	public virtual void Dispose()
	{
	}
}
[Token(Token = "0x2000210")]
public enum AkBankContent
{
	[Token(Token = "0x4000D8D")]
	AkBankContent_StructureOnly,
	[Token(Token = "0x4000D8E")]
	AkBankContent_All
}
[Token(Token = "0x2000211")]
public enum AkBusHierarchyFlags
{
	[Token(Token = "0x4000D90")]
	AkBusHierarchy_Primary = 1,
	[Token(Token = "0x4000D91")]
	AkBusHierarchy_Secondary = 2,
	[Token(Token = "0x4000D92")]
	AkBusHierarchy_IsMaster = 0x80
}
[Token(Token = "0x2000212")]
public class AkCallbackInfo : IDisposable
{
	[Token(Token = "0x4000D93")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private IntPtr swigCPtr;

	[Token(Token = "0x4000D94")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	protected bool swigCMemOwn;

	[Token(Token = "0x17000117")]
	public IntPtr pCookie
	{
		[Token(Token = "0x60010EB")]
		[Address(RVA = "0x472418", Offset = "0x472418", VA = "0x472418")]
		get
		{
			return default(IntPtr);
		}
	}

	[Token(Token = "0x17000118")]
	public ulong gameObjID
	{
		[Token(Token = "0x60010EC")]
		[Address(RVA = "0x4724A4", Offset = "0x4724A4", VA = "0x4724A4")]
		get
		{
			return default(ulong);
		}
	}

	[Token(Token = "0x60010E5")]
	[Address(RVA = "0x472144", Offset = "0x472144", VA = "0x472144")]
	internal AkCallbackInfo(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x60010E6")]
	[Address(RVA = "0x47216C", Offset = "0x47216C", VA = "0x47216C")]
	public AkCallbackInfo()
	{
	}

	[Token(Token = "0x60010E7")]
	[Address(RVA = "0x47220C", Offset = "0x47220C", VA = "0x47220C")]
	internal static IntPtr getCPtr(AkCallbackInfo obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x60010E8")]
	[Address(RVA = "0x472264", Offset = "0x472264", VA = "0x472264", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x60010E9")]
	[Address(RVA = "0x472290", Offset = "0x472290", VA = "0x472290", Slot = "1")]
	~AkCallbackInfo()
	{
	}

	[Token(Token = "0x60010EA")]
	[Address(RVA = "0x4722F0", Offset = "0x4722F0", VA = "0x4722F0", Slot = "6")]
	public virtual void Dispose()
	{
	}
}
[Token(Token = "0x2000213")]
public class AkCallbackSerializer : IDisposable
{
	[Token(Token = "0x4000D95")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private IntPtr swigCPtr;

	[Token(Token = "0x4000D96")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	protected bool swigCMemOwn;

	[Token(Token = "0x60010ED")]
	[Address(RVA = "0x47620C", Offset = "0x47620C", VA = "0x47620C")]
	internal AkCallbackSerializer(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x60010EE")]
	[Address(RVA = "0x476234", Offset = "0x476234", VA = "0x476234")]
	public AkCallbackSerializer()
	{
	}

	[Token(Token = "0x60010EF")]
	[Address(RVA = "0x4762D4", Offset = "0x4762D4", VA = "0x4762D4")]
	internal static IntPtr getCPtr(AkCallbackSerializer obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x60010F0")]
	[Address(RVA = "0x47632C", Offset = "0x47632C", VA = "0x47632C", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x60010F1")]
	[Address(RVA = "0x476358", Offset = "0x476358", VA = "0x476358", Slot = "1")]
	~AkCallbackSerializer()
	{
	}

	[Token(Token = "0x60010F2")]
	[Address(RVA = "0x4763B8", Offset = "0x4763B8", VA = "0x4763B8", Slot = "6")]
	public virtual void Dispose()
	{
	}

	[Token(Token = "0x60010F3")]
	[Address(RVA = "0x473360", Offset = "0x473360", VA = "0x473360")]
	public static AKRESULT Init(IntPtr in_pMemory, uint in_uSize)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60010F4")]
	[Address(RVA = "0x473534", Offset = "0x473534", VA = "0x473534")]
	public static void Term()
	{
	}

	[Token(Token = "0x60010F5")]
	[Address(RVA = "0x474AB0", Offset = "0x474AB0", VA = "0x474AB0")]
	public static IntPtr Lock()
	{
		return default(IntPtr);
	}

	[Token(Token = "0x60010F6")]
	[Address(RVA = "0x473658", Offset = "0x473658", VA = "0x473658")]
	public static void SetLocalOutput(uint in_uErrorLevel)
	{
	}

	[Token(Token = "0x60010F7")]
	[Address(RVA = "0x47541C", Offset = "0x47541C", VA = "0x47541C")]
	public static void Unlock()
	{
	}

	[Token(Token = "0x60010F8")]
	[Address(RVA = "0x4764E0", Offset = "0x4764E0", VA = "0x4764E0")]
	public static AKRESULT AudioSourceChangeCallbackFunc(bool in_bOtherAudioPlaying, object in_pCookie)
	{
		return default(AKRESULT);
	}
}
[Token(Token = "0x2000214")]
public enum AkCallbackType
{
	[Token(Token = "0x4000D98")]
	AK_EndOfEvent = 1,
	[Token(Token = "0x4000D99")]
	AK_EndOfDynamicSequenceItem = 2,
	[Token(Token = "0x4000D9A")]
	AK_Marker = 4,
	[Token(Token = "0x4000D9B")]
	AK_Duration = 8,
	[Token(Token = "0x4000D9C")]
	AK_SpeakerVolumeMatrix = 16,
	[Token(Token = "0x4000D9D")]
	AK_Starvation = 32,
	[Token(Token = "0x4000D9E")]
	AK_MusicPlaylistSelect = 64,
	[Token(Token = "0x4000D9F")]
	AK_MusicPlayStarted = 128,
	[Token(Token = "0x4000DA0")]
	AK_MusicSyncBeat = 256,
	[Token(Token = "0x4000DA1")]
	AK_MusicSyncBar = 512,
	[Token(Token = "0x4000DA2")]
	AK_MusicSyncEntry = 1024,
	[Token(Token = "0x4000DA3")]
	AK_MusicSyncExit = 2048,
	[Token(Token = "0x4000DA4")]
	AK_MusicSyncGrid = 4096,
	[Token(Token = "0x4000DA5")]
	AK_MusicSyncUserCue = 8192,
	[Token(Token = "0x4000DA6")]
	AK_MusicSyncPoint = 16384,
	[Token(Token = "0x4000DA7")]
	AK_MusicSyncAll = 32512,
	[Token(Token = "0x4000DA8")]
	AK_MIDIEvent = 65536,
	[Token(Token = "0x4000DA9")]
	AK_CallbackBits = 1048575,
	[Token(Token = "0x4000DAA")]
	AK_EnableGetSourcePlayPosition = 1048576,
	[Token(Token = "0x4000DAB")]
	AK_EnableGetMusicPlayPosition = 2097152,
	[Token(Token = "0x4000DAC")]
	AK_EnableGetSourceStreamBuffering = 4194304,
	[Token(Token = "0x4000DAD")]
	AK_Monitoring = 536870912,
	[Token(Token = "0x4000DAE")]
	AK_AudioSourceChange = 587202560,
	[Token(Token = "0x4000DAF")]
	AK_Bank = 1073741824,
	[Token(Token = "0x4000DB0")]
	AK_AudioInterruption = 570425344
}
[Token(Token = "0x2000215")]
public class AkChannelConfig : IDisposable
{
	[Token(Token = "0x4000DB1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private IntPtr swigCPtr;

	[Token(Token = "0x4000DB2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	protected bool swigCMemOwn;

	[Token(Token = "0x17000119")]
	public uint uNumChannels
	{
		[Token(Token = "0x6001101")]
		[Address(RVA = "0x47693C", Offset = "0x47693C", VA = "0x47693C")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x6001100")]
		[Address(RVA = "0x4768A8", Offset = "0x4768A8", VA = "0x4768A8")]
		set
		{
		}
	}

	[Token(Token = "0x1700011A")]
	public uint eConfigType
	{
		[Token(Token = "0x6001103")]
		[Address(RVA = "0x476A5C", Offset = "0x476A5C", VA = "0x476A5C")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x6001102")]
		[Address(RVA = "0x4769C8", Offset = "0x4769C8", VA = "0x4769C8")]
		set
		{
		}
	}

	[Token(Token = "0x1700011B")]
	public uint uChannelMask
	{
		[Token(Token = "0x6001105")]
		[Address(RVA = "0x476B7C", Offset = "0x476B7C", VA = "0x476B7C")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x6001104")]
		[Address(RVA = "0x476AE8", Offset = "0x476AE8", VA = "0x476AE8")]
		set
		{
		}
	}

	[Token(Token = "0x60010F9")]
	[Address(RVA = "0x4699E4", Offset = "0x4699E4", VA = "0x4699E4")]
	internal AkChannelConfig(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x60010FA")]
	[Address(RVA = "0x4765A4", Offset = "0x4765A4", VA = "0x4765A4")]
	public AkChannelConfig()
	{
	}

	[Token(Token = "0x60010FB")]
	[Address(RVA = "0x476644", Offset = "0x476644", VA = "0x476644")]
	public AkChannelConfig(uint in_uNumChannels, uint in_uChannelMask)
	{
	}

	[Token(Token = "0x60010FC")]
	[Address(RVA = "0x4698AC", Offset = "0x4698AC", VA = "0x4698AC")]
	internal static IntPtr getCPtr(AkChannelConfig obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x60010FD")]
	[Address(RVA = "0x4766F4", Offset = "0x4766F4", VA = "0x4766F4", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x60010FE")]
	[Address(RVA = "0x476720", Offset = "0x476720", VA = "0x476720", Slot = "1")]
	~AkChannelConfig()
	{
	}

	[Token(Token = "0x60010FF")]
	[Address(RVA = "0x476780", Offset = "0x476780", VA = "0x476780", Slot = "6")]
	public virtual void Dispose()
	{
	}

	[Token(Token = "0x6001106")]
	[Address(RVA = "0x476C08", Offset = "0x476C08", VA = "0x476C08")]
	public void Clear()
	{
	}

	[Token(Token = "0x6001107")]
	[Address(RVA = "0x476C94", Offset = "0x476C94", VA = "0x476C94")]
	public void SetStandard(uint in_uChannelMask)
	{
	}

	[Token(Token = "0x6001108")]
	[Address(RVA = "0x476D28", Offset = "0x476D28", VA = "0x476D28")]
	public void SetStandardOrAnonymous(uint in_uNumChannels, uint in_uChannelMask)
	{
	}

	[Token(Token = "0x6001109")]
	[Address(RVA = "0x476DD0", Offset = "0x476DD0", VA = "0x476DD0")]
	public void SetAnonymous(uint in_uNumChannels)
	{
	}

	[Token(Token = "0x600110A")]
	[Address(RVA = "0x476E64", Offset = "0x476E64", VA = "0x476E64")]
	public void SetAmbisonic(uint in_uNumChannels)
	{
	}

	[Token(Token = "0x600110B")]
	[Address(RVA = "0x476EF8", Offset = "0x476EF8", VA = "0x476EF8")]
	public bool IsValid()
	{
		return default(bool);
	}

	[Token(Token = "0x600110C")]
	[Address(RVA = "0x476F84", Offset = "0x476F84", VA = "0x476F84")]
	public uint Serialize()
	{
		return default(uint);
	}

	[Token(Token = "0x600110D")]
	[Address(RVA = "0x477010", Offset = "0x477010", VA = "0x477010")]
	public void Deserialize(uint in_uChannelConfig)
	{
	}

	[Token(Token = "0x600110E")]
	[Address(RVA = "0x4770A4", Offset = "0x4770A4", VA = "0x4770A4")]
	public AkChannelConfig RemoveLFE()
	{
		return null;
	}

	[Token(Token = "0x600110F")]
	[Address(RVA = "0x477164", Offset = "0x477164", VA = "0x477164")]
	public AkChannelConfig RemoveCenter()
	{
		return null;
	}

	[Token(Token = "0x6001110")]
	[Address(RVA = "0x477224", Offset = "0x477224", VA = "0x477224")]
	public bool IsChannelConfigSupported()
	{
		return default(bool);
	}
}
[Token(Token = "0x2000216")]
public enum AkChannelConfigType
{
	[Token(Token = "0x4000DB4")]
	AK_ChannelConfigType_Anonymous,
	[Token(Token = "0x4000DB5")]
	AK_ChannelConfigType_Standard,
	[Token(Token = "0x4000DB6")]
	AK_ChannelConfigType_Ambisonic
}
[Token(Token = "0x2000217")]
public class AkChannelEmitter : IDisposable
{
	[Token(Token = "0x4000DB7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private IntPtr swigCPtr;

	[Token(Token = "0x4000DB8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	protected bool swigCMemOwn;

	[Token(Token = "0x1700011C")]
	public AkTransform position
	{
		[Token(Token = "0x6001118")]
		[Address(RVA = "0x47762C", Offset = "0x47762C", VA = "0x47762C")]
		get
		{
			return null;
		}
		[Token(Token = "0x6001117")]
		[Address(RVA = "0x477584", Offset = "0x477584", VA = "0x477584")]
		set
		{
		}
	}

	[Token(Token = "0x1700011D")]
	public uint uInputChannels
	{
		[Token(Token = "0x600111A")]
		[Address(RVA = "0x47779C", Offset = "0x47779C", VA = "0x47779C")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x6001119")]
		[Address(RVA = "0x477708", Offset = "0x477708", VA = "0x477708")]
		set
		{
		}
	}

	[Token(Token = "0x6001111")]
	[Address(RVA = "0x4772B0", Offset = "0x4772B0", VA = "0x4772B0")]
	internal AkChannelEmitter(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x6001112")]
	[Address(RVA = "0x4772D8", Offset = "0x4772D8", VA = "0x4772D8")]
	public AkChannelEmitter()
	{
	}

	[Token(Token = "0x6001113")]
	[Address(RVA = "0x477378", Offset = "0x477378", VA = "0x477378")]
	internal static IntPtr getCPtr(AkChannelEmitter obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6001114")]
	[Address(RVA = "0x4773D0", Offset = "0x4773D0", VA = "0x4773D0", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x6001115")]
	[Address(RVA = "0x4773FC", Offset = "0x4773FC", VA = "0x4773FC", Slot = "1")]
	~AkChannelEmitter()
	{
	}

	[Token(Token = "0x6001116")]
	[Address(RVA = "0x47745C", Offset = "0x47745C", VA = "0x47745C", Slot = "6")]
	public virtual void Dispose()
	{
	}
}
[Token(Token = "0x2000218")]
public enum AkChannelOrdering
{
	[Token(Token = "0x4000DBA")]
	ChannelOrdering_Standard,
	[Token(Token = "0x4000DBB")]
	ChannelOrdering_RunTime
}
[Token(Token = "0x2000219")]
public enum AkConnectionType
{
	[Token(Token = "0x4000DBD")]
	ConnectionType_Direct,
	[Token(Token = "0x4000DBE")]
	ConnectionType_GameDefSend,
	[Token(Token = "0x4000DBF")]
	ConnectionType_UserDefSend
}
[Token(Token = "0x200021A")]
public enum AkCurveInterpolation
{
	[Token(Token = "0x4000DC1")]
	AkCurveInterpolation_Log3 = 0,
	[Token(Token = "0x4000DC2")]
	AkCurveInterpolation_Sine = 1,
	[Token(Token = "0x4000DC3")]
	AkCurveInterpolation_Log1 = 2,
	[Token(Token = "0x4000DC4")]
	AkCurveInterpolation_InvSCurve = 3,
	[Token(Token = "0x4000DC5")]
	AkCurveInterpolation_Linear = 4,
	[Token(Token = "0x4000DC6")]
	AkCurveInterpolation_SCurve = 5,
	[Token(Token = "0x4000DC7")]
	AkCurveInterpolation_Exp1 = 6,
	[Token(Token = "0x4000DC8")]
	AkCurveInterpolation_SineRecip = 7,
	[Token(Token = "0x4000DC9")]
	AkCurveInterpolation_Exp3 = 8,
	[Token(Token = "0x4000DCA")]
	AkCurveInterpolation_LastFadeCurve = 8,
	[Token(Token = "0x4000DCB")]
	AkCurveInterpolation_Constant = 9
}
[Token(Token = "0x200021B")]
public class AkDeviceSettings : IDisposable
{
	[Token(Token = "0x4000DCC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private IntPtr swigCPtr;

	[Token(Token = "0x4000DCD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	protected bool swigCMemOwn;

	[Token(Token = "0x1700011E")]
	public IntPtr pIOMemory
	{
		[Token(Token = "0x6001122")]
		[Address(RVA = "0x47AA2C", Offset = "0x47AA2C", VA = "0x47AA2C")]
		get
		{
			return default(IntPtr);
		}
		[Token(Token = "0x6001121")]
		[Address(RVA = "0x47A998", Offset = "0x47A998", VA = "0x47A998")]
		set
		{
		}
	}

	[Token(Token = "0x1700011F")]
	public uint uIOMemorySize
	{
		[Token(Token = "0x6001124")]
		[Address(RVA = "0x47AAB8", Offset = "0x47AAB8", VA = "0x47AAB8")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x6001123")]
		[Address(RVA = "0x477F9C", Offset = "0x477F9C", VA = "0x477F9C")]
		set
		{
		}
	}

	[Token(Token = "0x17000120")]
	public uint uIOMemoryAlignment
	{
		[Token(Token = "0x6001126")]
		[Address(RVA = "0x47ABD8", Offset = "0x47ABD8", VA = "0x47ABD8")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x6001125")]
		[Address(RVA = "0x47AB44", Offset = "0x47AB44", VA = "0x47AB44")]
		set
		{
		}
	}

	[Token(Token = "0x17000121")]
	public int ePoolAttributes
	{
		[Token(Token = "0x6001128")]
		[Address(RVA = "0x47ACF8", Offset = "0x47ACF8", VA = "0x47ACF8")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6001127")]
		[Address(RVA = "0x47AC64", Offset = "0x47AC64", VA = "0x47AC64")]
		set
		{
		}
	}

	[Token(Token = "0x17000122")]
	public uint uGranularity
	{
		[Token(Token = "0x600112A")]
		[Address(RVA = "0x47AE18", Offset = "0x47AE18", VA = "0x47AE18")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x6001129")]
		[Address(RVA = "0x47AD84", Offset = "0x47AD84", VA = "0x47AD84")]
		set
		{
		}
	}

	[Token(Token = "0x17000123")]
	public uint uSchedulerTypeFlags
	{
		[Token(Token = "0x600112C")]
		[Address(RVA = "0x47AF38", Offset = "0x47AF38", VA = "0x47AF38")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x600112B")]
		[Address(RVA = "0x47AEA4", Offset = "0x47AEA4", VA = "0x47AEA4")]
		set
		{
		}
	}

	[Token(Token = "0x17000124")]
	public AkThreadProperties threadProperties
	{
		[Token(Token = "0x600112E")]
		[Address(RVA = "0x47B06C", Offset = "0x47B06C", VA = "0x47B06C")]
		get
		{
			return null;
		}
		[Token(Token = "0x600112D")]
		[Address(RVA = "0x47AFC4", Offset = "0x47AFC4", VA = "0x47AFC4")]
		set
		{
		}
	}

	[Token(Token = "0x17000125")]
	public float fTargetAutoStmBufferLength
	{
		[Token(Token = "0x6001130")]
		[Address(RVA = "0x47B148", Offset = "0x47B148", VA = "0x47B148")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x600112F")]
		[Address(RVA = "0x478030", Offset = "0x478030", VA = "0x478030")]
		set
		{
		}
	}

	[Token(Token = "0x17000126")]
	public uint uMaxConcurrentIO
	{
		[Token(Token = "0x6001132")]
		[Address(RVA = "0x47B268", Offset = "0x47B268", VA = "0x47B268")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x6001131")]
		[Address(RVA = "0x47B1D4", Offset = "0x47B1D4", VA = "0x47B1D4")]
		set
		{
		}
	}

	[Token(Token = "0x17000127")]
	public bool bUseStreamCache
	{
		[Token(Token = "0x6001134")]
		[Address(RVA = "0x47B2F4", Offset = "0x47B2F4", VA = "0x47B2F4")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6001133")]
		[Address(RVA = "0x4780C4", Offset = "0x4780C4", VA = "0x4780C4")]
		set
		{
		}
	}

	[Token(Token = "0x17000128")]
	public uint uMaxCachePinnedBytes
	{
		[Token(Token = "0x6001136")]
		[Address(RVA = "0x47B380", Offset = "0x47B380", VA = "0x47B380")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x6001135")]
		[Address(RVA = "0x478158", Offset = "0x478158", VA = "0x478158")]
		set
		{
		}
	}

	[Token(Token = "0x600111B")]
	[Address(RVA = "0x47A6C4", Offset = "0x47A6C4", VA = "0x47A6C4")]
	internal AkDeviceSettings(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x600111C")]
	[Address(RVA = "0x47A6EC", Offset = "0x47A6EC", VA = "0x47A6EC")]
	public AkDeviceSettings()
	{
	}

	[Token(Token = "0x600111D")]
	[Address(RVA = "0x47A78C", Offset = "0x47A78C", VA = "0x47A78C")]
	internal static IntPtr getCPtr(AkDeviceSettings obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x600111E")]
	[Address(RVA = "0x47A7E4", Offset = "0x47A7E4", VA = "0x47A7E4", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x600111F")]
	[Address(RVA = "0x47A810", Offset = "0x47A810", VA = "0x47A810", Slot = "1")]
	~AkDeviceSettings()
	{
	}

	[Token(Token = "0x6001120")]
	[Address(RVA = "0x47A870", Offset = "0x47A870", VA = "0x47A870", Slot = "6")]
	public virtual void Dispose()
	{
	}
}
[Token(Token = "0x200021C")]
public enum AkDiffractionFlags
{
	[Token(Token = "0x4000DCF")]
	DiffractionFlags_UseBuiltInParam = 1,
	[Token(Token = "0x4000DD0")]
	DiffractionFlags_UseObstruction = 2,
	[Token(Token = "0x4000DD1")]
	DiffractionFlags_CalcEmitterVirtualPosition = 8,
	[Token(Token = "0x4000DD2")]
	DefaultDiffractionFlags = 11
}
[Token(Token = "0x200021D")]
public class AkDiffractionPathInfo : IDisposable
{
	[Token(Token = "0x4000DD3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private IntPtr swigCPtr;

	[Token(Token = "0x4000DD4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	protected bool swigCMemOwn;

	[Token(Token = "0x4000DD5")]
	public const uint kMaxNodes = 8u;

	[Token(Token = "0x17000129")]
	public AkTransform virtualPos
	{
		[Token(Token = "0x600113E")]
		[Address(RVA = "0x47B788", Offset = "0x47B788", VA = "0x47B788")]
		get
		{
			return null;
		}
		[Token(Token = "0x600113D")]
		[Address(RVA = "0x47B6E0", Offset = "0x47B6E0", VA = "0x47B6E0")]
		set
		{
		}
	}

	[Token(Token = "0x1700012A")]
	public uint nodeCount
	{
		[Token(Token = "0x6001140")]
		[Address(RVA = "0x47B8F8", Offset = "0x47B8F8", VA = "0x47B8F8")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x600113F")]
		[Address(RVA = "0x47B864", Offset = "0x47B864", VA = "0x47B864")]
		set
		{
		}
	}

	[Token(Token = "0x1700012B")]
	public float diffraction
	{
		[Token(Token = "0x6001142")]
		[Address(RVA = "0x47BA18", Offset = "0x47BA18", VA = "0x47BA18")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6001141")]
		[Address(RVA = "0x47B984", Offset = "0x47B984", VA = "0x47B984")]
		set
		{
		}
	}

	[Token(Token = "0x1700012C")]
	public float totLength
	{
		[Token(Token = "0x6001144")]
		[Address(RVA = "0x47BB38", Offset = "0x47BB38", VA = "0x47BB38")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6001143")]
		[Address(RVA = "0x47BAA4", Offset = "0x47BAA4", VA = "0x47BAA4")]
		set
		{
		}
	}

	[Token(Token = "0x1700012D")]
	public float obstructionValue
	{
		[Token(Token = "0x6001146")]
		[Address(RVA = "0x47BC58", Offset = "0x47BC58", VA = "0x47BC58")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6001145")]
		[Address(RVA = "0x47BBC4", Offset = "0x47BBC4", VA = "0x47BBC4")]
		set
		{
		}
	}

	[Token(Token = "0x6001137")]
	[Address(RVA = "0x47B40C", Offset = "0x47B40C", VA = "0x47B40C")]
	internal AkDiffractionPathInfo(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x6001138")]
	[Address(RVA = "0x47B434", Offset = "0x47B434", VA = "0x47B434")]
	public AkDiffractionPathInfo()
	{
	}

	[Token(Token = "0x6001139")]
	[Address(RVA = "0x47B4D4", Offset = "0x47B4D4", VA = "0x47B4D4")]
	internal static IntPtr getCPtr(AkDiffractionPathInfo obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x600113A")]
	[Address(RVA = "0x47B52C", Offset = "0x47B52C", VA = "0x47B52C", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x600113B")]
	[Address(RVA = "0x47B558", Offset = "0x47B558", VA = "0x47B558", Slot = "1")]
	~AkDiffractionPathInfo()
	{
	}

	[Token(Token = "0x600113C")]
	[Address(RVA = "0x47B5B8", Offset = "0x47B5B8", VA = "0x47B5B8", Slot = "6")]
	public virtual void Dispose()
	{
	}

	[Token(Token = "0x6001147")]
	[Address(RVA = "0x47BCE4", Offset = "0x47BCE4", VA = "0x47BCE4")]
	public static int GetSizeOf()
	{
		return default(int);
	}

	[Token(Token = "0x6001148")]
	[Address(RVA = "0x47BD64", Offset = "0x47BD64", VA = "0x47BD64")]
	public AkVector GetNodes(uint idx)
	{
		return null;
	}

	[Token(Token = "0x6001149")]
	[Address(RVA = "0x47BE48", Offset = "0x47BE48", VA = "0x47BE48")]
	public float GetAngles(uint idx)
	{
		return default(float);
	}

	[Token(Token = "0x600114A")]
	[Address(RVA = "0x47BEDC", Offset = "0x47BEDC", VA = "0x47BEDC")]
	public void Clone(AkDiffractionPathInfo other)
	{
	}
}
[Token(Token = "0x200021E")]
public class AkDurationCallbackInfo : AkEventCallbackInfo
{
	[Token(Token = "0x4000DD6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private IntPtr swigCPtr;

	[Token(Token = "0x1700012E")]
	public float fDuration
	{
		[Token(Token = "0x6001151")]
		[Address(RVA = "0x47C74C", Offset = "0x47C74C", VA = "0x47C74C")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x1700012F")]
	public float fEstimatedDuration
	{
		[Token(Token = "0x6001152")]
		[Address(RVA = "0x47C7D8", Offset = "0x47C7D8", VA = "0x47C7D8")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000130")]
	public uint audioNodeID
	{
		[Token(Token = "0x6001153")]
		[Address(RVA = "0x47C864", Offset = "0x47C864", VA = "0x47C864")]
		get
		{
			return default(uint);
		}
	}

	[Token(Token = "0x17000131")]
	public uint mediaID
	{
		[Token(Token = "0x6001154")]
		[Address(RVA = "0x47C8F0", Offset = "0x47C8F0", VA = "0x47C8F0")]
		get
		{
			return default(uint);
		}
	}

	[Token(Token = "0x17000132")]
	public bool bStreaming
	{
		[Token(Token = "0x6001155")]
		[Address(RVA = "0x47C97C", Offset = "0x47C97C", VA = "0x47C97C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x600114B")]
	[Address(RVA = "0x47596C", Offset = "0x47596C", VA = "0x47596C")]
	internal AkDurationCallbackInfo(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x600114C")]
	[Address(RVA = "0x47C1F8", Offset = "0x47C1F8", VA = "0x47C1F8")]
	public AkDurationCallbackInfo()
	{
	}

	[Token(Token = "0x600114D")]
	[Address(RVA = "0x47C28C", Offset = "0x47C28C", VA = "0x47C28C")]
	internal static IntPtr getCPtr(AkDurationCallbackInfo obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x600114E")]
	[Address(RVA = "0x47C2E4", Offset = "0x47C2E4", VA = "0x47C2E4", Slot = "5")]
	internal override void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x600114F")]
	[Address(RVA = "0x47C42C", Offset = "0x47C42C", VA = "0x47C42C", Slot = "1")]
	~AkDurationCallbackInfo()
	{
	}

	[Token(Token = "0x6001150")]
	[Address(RVA = "0x47C4EC", Offset = "0x47C4EC", VA = "0x47C4EC", Slot = "6")]
	public override void Dispose()
	{
	}
}
[Token(Token = "0x200021F")]
public class AkDynamicSequenceItemCallbackInfo : AkCallbackInfo
{
	[Token(Token = "0x4000DD7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x17000133")]
	public uint playingID
	{
		[Token(Token = "0x600115C")]
		[Address(RVA = "0x47CD28", Offset = "0x47CD28", VA = "0x47CD28")]
		get
		{
			return default(uint);
		}
	}

	[Token(Token = "0x17000134")]
	public uint audioNodeID
	{
		[Token(Token = "0x600115D")]
		[Address(RVA = "0x47CDB4", Offset = "0x47CDB4", VA = "0x47CDB4")]
		get
		{
			return default(uint);
		}
	}

	[Token(Token = "0x17000135")]
	public IntPtr pCustomInfo
	{
		[Token(Token = "0x600115E")]
		[Address(RVA = "0x47CE40", Offset = "0x47CE40", VA = "0x47CE40")]
		get
		{
			return default(IntPtr);
		}
	}

	[Token(Token = "0x6001156")]
	[Address(RVA = "0x47581C", Offset = "0x47581C", VA = "0x47581C")]
	internal AkDynamicSequenceItemCallbackInfo(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x6001157")]
	[Address(RVA = "0x47CA08", Offset = "0x47CA08", VA = "0x47CA08")]
	public AkDynamicSequenceItemCallbackInfo()
	{
	}

	[Token(Token = "0x6001158")]
	[Address(RVA = "0x47CA9C", Offset = "0x47CA9C", VA = "0x47CA9C")]
	internal static IntPtr getCPtr(AkDynamicSequenceItemCallbackInfo obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6001159")]
	[Address(RVA = "0x47CAF4", Offset = "0x47CAF4", VA = "0x47CAF4", Slot = "5")]
	internal override void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x600115A")]
	[Address(RVA = "0x47CBA0", Offset = "0x47CBA0", VA = "0x47CBA0", Slot = "1")]
	~AkDynamicSequenceItemCallbackInfo()
	{
	}

	[Token(Token = "0x600115B")]
	[Address(RVA = "0x47CBF8", Offset = "0x47CBF8", VA = "0x47CBF8", Slot = "6")]
	public override void Dispose()
	{
	}
}
[Token(Token = "0x2000220")]
public enum AkDynamicSequenceType
{
	[Token(Token = "0x4000DD9")]
	DynamicSequenceType_SampleAccurate,
	[Token(Token = "0x4000DDA")]
	DynamicSequenceType_NormalTransition
}
[Token(Token = "0x2000221")]
public class AkEmitterSettings : IDisposable
{
	[Token(Token = "0x4000DDB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private IntPtr swigCPtr;

	[Token(Token = "0x4000DDC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	protected bool swigCMemOwn;

	[Token(Token = "0x17000136")]
	public uint reflectAuxBusID
	{
		[Token(Token = "0x6001166")]
		[Address(RVA = "0x47D654", Offset = "0x47D654", VA = "0x47D654")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x6001165")]
		[Address(RVA = "0x47D5C0", Offset = "0x47D5C0", VA = "0x47D5C0")]
		set
		{
		}
	}

	[Token(Token = "0x17000137")]
	public float reflectionMaxPathLength
	{
		[Token(Token = "0x6001168")]
		[Address(RVA = "0x47D774", Offset = "0x47D774", VA = "0x47D774")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6001167")]
		[Address(RVA = "0x47D6E0", Offset = "0x47D6E0", VA = "0x47D6E0")]
		set
		{
		}
	}

	[Token(Token = "0x17000138")]
	public float reflectionsAuxBusGain
	{
		[Token(Token = "0x600116A")]
		[Address(RVA = "0x47D894", Offset = "0x47D894", VA = "0x47D894")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6001169")]
		[Address(RVA = "0x47D800", Offset = "0x47D800", VA = "0x47D800")]
		set
		{
		}
	}

	[Token(Token = "0x17000139")]
	public uint reflectionsOrder
	{
		[Token(Token = "0x600116C")]
		[Address(RVA = "0x47D9B4", Offset = "0x47D9B4", VA = "0x47D9B4")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x600116B")]
		[Address(RVA = "0x47D920", Offset = "0x47D920", VA = "0x47D920")]
		set
		{
		}
	}

	[Token(Token = "0x1700013A")]
	public uint reflectorFilterMask
	{
		[Token(Token = "0x600116E")]
		[Address(RVA = "0x47DAD4", Offset = "0x47DAD4", VA = "0x47DAD4")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x600116D")]
		[Address(RVA = "0x47DA40", Offset = "0x47DA40", VA = "0x47DA40")]
		set
		{
		}
	}

	[Token(Token = "0x1700013B")]
	public float roomReverbAuxBusGain
	{
		[Token(Token = "0x6001170")]
		[Address(RVA = "0x47DBF4", Offset = "0x47DBF4", VA = "0x47DBF4")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x600116F")]
		[Address(RVA = "0x47DB60", Offset = "0x47DB60", VA = "0x47DB60")]
		set
		{
		}
	}

	[Token(Token = "0x1700013C")]
	public uint diffractionMaxEdges
	{
		[Token(Token = "0x6001172")]
		[Address(RVA = "0x47DD14", Offset = "0x47DD14", VA = "0x47DD14")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x6001171")]
		[Address(RVA = "0x47DC80", Offset = "0x47DC80", VA = "0x47DC80")]
		set
		{
		}
	}

	[Token(Token = "0x1700013D")]
	public uint diffractionMaxPaths
	{
		[Token(Token = "0x6001174")]
		[Address(RVA = "0x47DE34", Offset = "0x47DE34", VA = "0x47DE34")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x6001173")]
		[Address(RVA = "0x47DDA0", Offset = "0x47DDA0", VA = "0x47DDA0")]
		set
		{
		}
	}

	[Token(Token = "0x1700013E")]
	public float diffractionMaxPathLength
	{
		[Token(Token = "0x6001176")]
		[Address(RVA = "0x47DF54", Offset = "0x47DF54", VA = "0x47DF54")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6001175")]
		[Address(RVA = "0x47DEC0", Offset = "0x47DEC0", VA = "0x47DEC0")]
		set
		{
		}
	}

	[Token(Token = "0x1700013F")]
	public byte useImageSources
	{
		[Token(Token = "0x6001178")]
		[Address(RVA = "0x47E074", Offset = "0x47E074", VA = "0x47E074")]
		get
		{
			return default(byte);
		}
		[Token(Token = "0x6001177")]
		[Address(RVA = "0x47DFE0", Offset = "0x47DFE0", VA = "0x47DFE0")]
		set
		{
		}
	}

	[Token(Token = "0x600115F")]
	[Address(RVA = "0x47D2EC", Offset = "0x47D2EC", VA = "0x47D2EC")]
	internal AkEmitterSettings(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x6001160")]
	[Address(RVA = "0x47D314", Offset = "0x47D314", VA = "0x47D314")]
	public AkEmitterSettings()
	{
	}

	[Token(Token = "0x6001161")]
	[Address(RVA = "0x47D3B4", Offset = "0x47D3B4", VA = "0x47D3B4")]
	internal static IntPtr getCPtr(AkEmitterSettings obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6001162")]
	[Address(RVA = "0x47D40C", Offset = "0x47D40C", VA = "0x47D40C", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x6001163")]
	[Address(RVA = "0x47D438", Offset = "0x47D438", VA = "0x47D438", Slot = "1")]
	~AkEmitterSettings()
	{
	}

	[Token(Token = "0x6001164")]
	[Address(RVA = "0x47D498", Offset = "0x47D498", VA = "0x47D498", Slot = "6")]
	public virtual void Dispose()
	{
	}
}
[Token(Token = "0x2000222")]
public class AkEventCallbackInfo : AkCallbackInfo
{
	[Token(Token = "0x4000DDD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x17000140")]
	public uint playingID
	{
		[Token(Token = "0x600117F")]
		[Address(RVA = "0x46B55C", Offset = "0x46B55C", VA = "0x46B55C")]
		get
		{
			return default(uint);
		}
	}

	[Token(Token = "0x17000141")]
	public uint eventID
	{
		[Token(Token = "0x6001180")]
		[Address(RVA = "0x47ED14", Offset = "0x47ED14", VA = "0x47ED14")]
		get
		{
			return default(uint);
		}
	}

	[Token(Token = "0x6001179")]
	[Address(RVA = "0x475770", Offset = "0x475770", VA = "0x475770")]
	internal AkEventCallbackInfo(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x600117A")]
	[Address(RVA = "0x47EC28", Offset = "0x47EC28", VA = "0x47EC28")]
	public AkEventCallbackInfo()
	{
	}

	[Token(Token = "0x600117B")]
	[Address(RVA = "0x47ECBC", Offset = "0x47ECBC", VA = "0x47ECBC")]
	internal static IntPtr getCPtr(AkEventCallbackInfo obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x600117C")]
	[Address(RVA = "0x47C380", Offset = "0x47C380", VA = "0x47C380", Slot = "5")]
	internal override void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x600117D")]
	[Address(RVA = "0x47C494", Offset = "0x47C494", VA = "0x47C494", Slot = "1")]
	~AkEventCallbackInfo()
	{
	}

	[Token(Token = "0x600117E")]
	[Address(RVA = "0x47C61C", Offset = "0x47C61C", VA = "0x47C61C", Slot = "6")]
	public override void Dispose()
	{
	}
}
[Token(Token = "0x2000223")]
public class AkExternalSourceInfo : IDisposable
{
	[Token(Token = "0x4000DDE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private IntPtr swigCPtr;

	[Token(Token = "0x4000DDF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	protected bool swigCMemOwn;

	[Token(Token = "0x17000142")]
	public uint iExternalSrcCookie
	{
		[Token(Token = "0x600118B")]
		[Address(RVA = "0x482658", Offset = "0x482658", VA = "0x482658")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x600118A")]
		[Address(RVA = "0x4825C4", Offset = "0x4825C4", VA = "0x4825C4")]
		set
		{
		}
	}

	[Token(Token = "0x17000143")]
	public uint idCodec
	{
		[Token(Token = "0x600118D")]
		[Address(RVA = "0x482778", Offset = "0x482778", VA = "0x482778")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x600118C")]
		[Address(RVA = "0x4826E4", Offset = "0x4826E4", VA = "0x4826E4")]
		set
		{
		}
	}

	[Token(Token = "0x17000144")]
	public string szFile
	{
		[Token(Token = "0x600118F")]
		[Address(RVA = "0x482898", Offset = "0x482898", VA = "0x482898")]
		get
		{
			return null;
		}
		[Token(Token = "0x600118E")]
		[Address(RVA = "0x482804", Offset = "0x482804", VA = "0x482804")]
		set
		{
		}
	}

	[Token(Token = "0x17000145")]
	public IntPtr pInMemory
	{
		[Token(Token = "0x6001191")]
		[Address(RVA = "0x4829B8", Offset = "0x4829B8", VA = "0x4829B8")]
		get
		{
			return default(IntPtr);
		}
		[Token(Token = "0x6001190")]
		[Address(RVA = "0x482924", Offset = "0x482924", VA = "0x482924")]
		set
		{
		}
	}

	[Token(Token = "0x17000146")]
	public uint uiMemorySize
	{
		[Token(Token = "0x6001193")]
		[Address(RVA = "0x482AD8", Offset = "0x482AD8", VA = "0x482AD8")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x6001192")]
		[Address(RVA = "0x482A44", Offset = "0x482A44", VA = "0x482A44")]
		set
		{
		}
	}

	[Token(Token = "0x17000147")]
	public uint idFile
	{
		[Token(Token = "0x6001195")]
		[Address(RVA = "0x482BF8", Offset = "0x482BF8", VA = "0x482BF8")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x6001194")]
		[Address(RVA = "0x482B64", Offset = "0x482B64", VA = "0x482B64")]
		set
		{
		}
	}

	[Token(Token = "0x6001181")]
	[Address(RVA = "0x48209C", Offset = "0x48209C", VA = "0x48209C")]
	internal AkExternalSourceInfo(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x6001182")]
	[Address(RVA = "0x4820C4", Offset = "0x4820C4", VA = "0x4820C4")]
	public AkExternalSourceInfo()
	{
	}

	[Token(Token = "0x6001183")]
	[Address(RVA = "0x482164", Offset = "0x482164", VA = "0x482164")]
	public AkExternalSourceInfo(IntPtr in_pInMemory, uint in_uiMemorySize, uint in_iExternalSrcCookie, uint in_idCodec)
	{
	}

	[Token(Token = "0x6001184")]
	[Address(RVA = "0x482230", Offset = "0x482230", VA = "0x482230")]
	public AkExternalSourceInfo(string in_pszFileName, uint in_iExternalSrcCookie, uint in_idCodec)
	{
	}

	[Token(Token = "0x6001185")]
	[Address(RVA = "0x4822F4", Offset = "0x4822F4", VA = "0x4822F4")]
	public AkExternalSourceInfo(uint in_idFile, uint in_iExternalSrcCookie, uint in_idCodec)
	{
	}

	[Token(Token = "0x6001186")]
	[Address(RVA = "0x4823B8", Offset = "0x4823B8", VA = "0x4823B8")]
	internal static IntPtr getCPtr(AkExternalSourceInfo obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6001187")]
	[Address(RVA = "0x482410", Offset = "0x482410", VA = "0x482410", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x6001188")]
	[Address(RVA = "0x48243C", Offset = "0x48243C", VA = "0x48243C", Slot = "1")]
	~AkExternalSourceInfo()
	{
	}

	[Token(Token = "0x6001189")]
	[Address(RVA = "0x48249C", Offset = "0x48249C", VA = "0x48249C", Slot = "6")]
	public virtual void Dispose()
	{
	}
}
[Token(Token = "0x2000224")]
public enum AkFloorPlane
{
	[Token(Token = "0x4000DE1")]
	AkFloorPlane_XZ = 0,
	[Token(Token = "0x4000DE2")]
	AkFloorPlane_XY = 1,
	[Token(Token = "0x4000DE3")]
	AkFloorPlane_YZ = 2,
	[Token(Token = "0x4000DE4")]
	AkFloorPlane_Default = 0
}
[Token(Token = "0x2000225")]
public enum AkGlobalCallbackLocation
{
	[Token(Token = "0x4000DE6")]
	AkGlobalCallbackLocation_Register = 1,
	[Token(Token = "0x4000DE7")]
	AkGlobalCallbackLocation_Begin = 2,
	[Token(Token = "0x4000DE8")]
	AkGlobalCallbackLocation_PreProcessMessageQueueForRender = 4,
	[Token(Token = "0x4000DE9")]
	AkGlobalCallbackLocation_PostMessagesProcessed = 8,
	[Token(Token = "0x4000DEA")]
	AkGlobalCallbackLocation_BeginRender = 16,
	[Token(Token = "0x4000DEB")]
	AkGlobalCallbackLocation_EndRender = 32,
	[Token(Token = "0x4000DEC")]
	AkGlobalCallbackLocation_End = 64,
	[Token(Token = "0x4000DED")]
	AkGlobalCallbackLocation_Term = 128,
	[Token(Token = "0x4000DEE")]
	AkGlobalCallbackLocation_Monitor = 256,
	[Token(Token = "0x4000DEF")]
	AkGlobalCallbackLocation_MonitorRecap = 512,
	[Token(Token = "0x4000DF0")]
	AkGlobalCallbackLocation_Num = 10
}
[Token(Token = "0x2000226")]
public enum AkGroupType
{
	[Token(Token = "0x4000DF2")]
	AkGroupType_Switch,
	[Token(Token = "0x4000DF3")]
	AkGroupType_State
}
[Token(Token = "0x2000227")]
public class AkImageSourceParams : IDisposable
{
	[Token(Token = "0x4000DF4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private IntPtr swigCPtr;

	[Token(Token = "0x4000DF5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	protected bool swigCMemOwn;

	[Token(Token = "0x17000148")]
	public AkVector sourcePosition
	{
		[Token(Token = "0x600119E")]
		[Address(RVA = "0x4852E8", Offset = "0x4852E8", VA = "0x4852E8")]
		get
		{
			return null;
		}
		[Token(Token = "0x600119D")]
		[Address(RVA = "0x485240", Offset = "0x485240", VA = "0x485240")]
		set
		{
		}
	}

	[Token(Token = "0x17000149")]
	public float fDistanceScalingFactor
	{
		[Token(Token = "0x60011A0")]
		[Address(RVA = "0x485458", Offset = "0x485458", VA = "0x485458")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x600119F")]
		[Address(RVA = "0x4853C4", Offset = "0x4853C4", VA = "0x4853C4")]
		set
		{
		}
	}

	[Token(Token = "0x1700014A")]
	public float fLevel
	{
		[Token(Token = "0x60011A2")]
		[Address(RVA = "0x485578", Offset = "0x485578", VA = "0x485578")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60011A1")]
		[Address(RVA = "0x4854E4", Offset = "0x4854E4", VA = "0x4854E4")]
		set
		{
		}
	}

	[Token(Token = "0x1700014B")]
	public float fDiffraction
	{
		[Token(Token = "0x60011A4")]
		[Address(RVA = "0x485698", Offset = "0x485698", VA = "0x485698")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60011A3")]
		[Address(RVA = "0x485604", Offset = "0x485604", VA = "0x485604")]
		set
		{
		}
	}

	[Token(Token = "0x1700014C")]
	public bool bDiffractedEmitterSide
	{
		[Token(Token = "0x60011A6")]
		[Address(RVA = "0x4857B8", Offset = "0x4857B8", VA = "0x4857B8")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60011A5")]
		[Address(RVA = "0x485724", Offset = "0x485724", VA = "0x485724")]
		set
		{
		}
	}

	[Token(Token = "0x1700014D")]
	public bool bDiffractedListenerSide
	{
		[Token(Token = "0x60011A8")]
		[Address(RVA = "0x4858D8", Offset = "0x4858D8", VA = "0x4858D8")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60011A7")]
		[Address(RVA = "0x485844", Offset = "0x485844", VA = "0x485844")]
		set
		{
		}
	}

	[Token(Token = "0x6001196")]
	[Address(RVA = "0x484E94", Offset = "0x484E94", VA = "0x484E94")]
	internal AkImageSourceParams(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x6001197")]
	[Address(RVA = "0x484EBC", Offset = "0x484EBC", VA = "0x484EBC")]
	public AkImageSourceParams()
	{
	}

	[Token(Token = "0x6001198")]
	[Address(RVA = "0x484F5C", Offset = "0x484F5C", VA = "0x484F5C")]
	public AkImageSourceParams(AkVector in_sourcePosition, float in_fDistanceScalingFactor, float in_fLevel)
	{
	}

	[Token(Token = "0x6001199")]
	[Address(RVA = "0x485034", Offset = "0x485034", VA = "0x485034")]
	internal static IntPtr getCPtr(AkImageSourceParams obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x600119A")]
	[Address(RVA = "0x48508C", Offset = "0x48508C", VA = "0x48508C", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x600119B")]
	[Address(RVA = "0x4850B8", Offset = "0x4850B8", VA = "0x4850B8", Slot = "1")]
	~AkImageSourceParams()
	{
	}

	[Token(Token = "0x600119C")]
	[Address(RVA = "0x485118", Offset = "0x485118", VA = "0x485118", Slot = "6")]
	public virtual void Dispose()
	{
	}
}
[Token(Token = "0x2000228")]
public class AkImageSourceSettings : IDisposable
{
	[Token(Token = "0x4000DF6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private IntPtr swigCPtr;

	[Token(Token = "0x4000DF7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	protected bool swigCMemOwn;

	[Token(Token = "0x1700014E")]
	public AkImageSourceParams params_
	{
		[Token(Token = "0x60011B3")]
		[Address(RVA = "0x485F14", Offset = "0x485F14", VA = "0x485F14")]
		get
		{
			return null;
		}
		[Token(Token = "0x60011B2")]
		[Address(RVA = "0x485E38", Offset = "0x485E38", VA = "0x485E38")]
		set
		{
		}
	}

	[Token(Token = "0x60011A9")]
	[Address(RVA = "0x485964", Offset = "0x485964", VA = "0x485964")]
	internal AkImageSourceSettings(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x60011AA")]
	[Address(RVA = "0x48598C", Offset = "0x48598C", VA = "0x48598C")]
	public AkImageSourceSettings()
	{
	}

	[Token(Token = "0x60011AB")]
	[Address(RVA = "0x485A2C", Offset = "0x485A2C", VA = "0x485A2C")]
	public AkImageSourceSettings(AkVector in_sourcePosition, float in_fDistanceScalingFactor, float in_fLevel)
	{
	}

	[Token(Token = "0x60011AC")]
	[Address(RVA = "0x485B04", Offset = "0x485B04", VA = "0x485B04")]
	internal static IntPtr getCPtr(AkImageSourceSettings obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x60011AD")]
	[Address(RVA = "0x485B5C", Offset = "0x485B5C", VA = "0x485B5C", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x60011AE")]
	[Address(RVA = "0x485B88", Offset = "0x485B88", VA = "0x485B88", Slot = "1")]
	~AkImageSourceSettings()
	{
	}

	[Token(Token = "0x60011AF")]
	[Address(RVA = "0x485BE8", Offset = "0x485BE8", VA = "0x485BE8", Slot = "6")]
	public virtual void Dispose()
	{
	}

	[Token(Token = "0x60011B0")]
	[Address(RVA = "0x485D10", Offset = "0x485D10", VA = "0x485D10")]
	public void SetOneTexture(uint in_texture)
	{
	}

	[Token(Token = "0x60011B1")]
	[Address(RVA = "0x485DA4", Offset = "0x485DA4", VA = "0x485DA4")]
	public void SetName(string in_pName)
	{
	}
}
[Token(Token = "0x2000229")]
public class AkInitializationSettings : IDisposable
{
	[Token(Token = "0x4000DF8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private IntPtr swigCPtr;

	[Token(Token = "0x4000DF9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	protected bool swigCMemOwn;

	[Token(Token = "0x1700014F")]
	public AkMemSettings memSettings
	{
		[Token(Token = "0x60011BB")]
		[Address(RVA = "0x479138", Offset = "0x479138", VA = "0x479138")]
		get
		{
			return null;
		}
		[Token(Token = "0x60011BA")]
		[Address(RVA = "0x486228", Offset = "0x486228", VA = "0x486228")]
		set
		{
		}
	}

	[Token(Token = "0x17000150")]
	public AkStreamMgrSettings streamMgrSettings
	{
		[Token(Token = "0x60011BD")]
		[Address(RVA = "0x479324", Offset = "0x479324", VA = "0x479324")]
		get
		{
			return null;
		}
		[Token(Token = "0x60011BC")]
		[Address(RVA = "0x486384", Offset = "0x486384", VA = "0x486384")]
		set
		{
		}
	}

	[Token(Token = "0x17000151")]
	public AkDeviceSettings deviceSettings
	{
		[Token(Token = "0x60011BF")]
		[Address(RVA = "0x479244", Offset = "0x479244", VA = "0x479244")]
		get
		{
			return null;
		}
		[Token(Token = "0x60011BE")]
		[Address(RVA = "0x48642C", Offset = "0x48642C", VA = "0x48642C")]
		set
		{
		}
	}

	[Token(Token = "0x17000152")]
	public AkInitSettings initSettings
	{
		[Token(Token = "0x60011C1")]
		[Address(RVA = "0x479430", Offset = "0x479430", VA = "0x479430")]
		get
		{
			return null;
		}
		[Token(Token = "0x60011C0")]
		[Address(RVA = "0x486508", Offset = "0x486508", VA = "0x486508")]
		set
		{
		}
	}

	[Token(Token = "0x17000153")]
	public AkPlatformInitSettings platformSettings
	{
		[Token(Token = "0x60011C3")]
		[Address(RVA = "0x479510", Offset = "0x479510", VA = "0x479510")]
		get
		{
			return null;
		}
		[Token(Token = "0x60011C2")]
		[Address(RVA = "0x486664", Offset = "0x486664", VA = "0x486664")]
		set
		{
		}
	}

	[Token(Token = "0x17000154")]
	public AkMusicSettings musicSettings
	{
		[Token(Token = "0x60011C5")]
		[Address(RVA = "0x4795EC", Offset = "0x4795EC", VA = "0x4795EC")]
		get
		{
			return null;
		}
		[Token(Token = "0x60011C4")]
		[Address(RVA = "0x48670C", Offset = "0x48670C", VA = "0x48670C")]
		set
		{
		}
	}

	[Token(Token = "0x17000155")]
	public uint preparePoolSize
	{
		[Token(Token = "0x60011C7")]
		[Address(RVA = "0x4867B4", Offset = "0x4867B4", VA = "0x4867B4")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x60011C6")]
		[Address(RVA = "0x479700", Offset = "0x479700", VA = "0x479700")]
		set
		{
		}
	}

	[Token(Token = "0x17000156")]
	public AkCommunicationSettings communicationSettings
	{
		[Token(Token = "0x60011C9")]
		[Address(RVA = "0x48691C", Offset = "0x48691C", VA = "0x48691C")]
		get
		{
			return null;
		}
		[Token(Token = "0x60011C8")]
		[Address(RVA = "0x486840", Offset = "0x486840", VA = "0x486840")]
		set
		{
		}
	}

	[Token(Token = "0x17000157")]
	public AkUnityPlatformSpecificSettings unityPlatformSpecificSettings
	{
		[Token(Token = "0x60011CB")]
		[Address(RVA = "0x486AA4", Offset = "0x486AA4", VA = "0x486AA4")]
		get
		{
			return null;
		}
		[Token(Token = "0x60011CA")]
		[Address(RVA = "0x4869FC", Offset = "0x4869FC", VA = "0x4869FC")]
		set
		{
		}
	}

	[Token(Token = "0x60011B4")]
	[Address(RVA = "0x485FF4", Offset = "0x485FF4", VA = "0x485FF4")]
	internal AkInitializationSettings(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x60011B5")]
	[Address(RVA = "0x471D24", Offset = "0x471D24", VA = "0x471D24")]
	public AkInitializationSettings()
	{
	}

	[Token(Token = "0x60011B6")]
	[Address(RVA = "0x48601C", Offset = "0x48601C", VA = "0x48601C")]
	internal static IntPtr getCPtr(AkInitializationSettings obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x60011B7")]
	[Address(RVA = "0x486074", Offset = "0x486074", VA = "0x486074", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x60011B8")]
	[Address(RVA = "0x4860A0", Offset = "0x4860A0", VA = "0x4860A0", Slot = "1")]
	~AkInitializationSettings()
	{
	}

	[Token(Token = "0x60011B9")]
	[Address(RVA = "0x486100", Offset = "0x486100", VA = "0x486100", Slot = "6")]
	public virtual void Dispose()
	{
	}
}
[Token(Token = "0x200022A")]
public class AkInitSettings : IDisposable
{
	[Token(Token = "0x4000DFA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private IntPtr swigCPtr;

	[Token(Token = "0x4000DFB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	protected bool swigCMemOwn;

	[Token(Token = "0x17000158")]
	public int pfnAssertHook
	{
		[Token(Token = "0x60011D3")]
		[Address(RVA = "0x48752C", Offset = "0x48752C", VA = "0x48752C")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60011D2")]
		[Address(RVA = "0x487528", Offset = "0x487528", VA = "0x487528")]
		set
		{
		}
	}

	[Token(Token = "0x17000159")]
	public uint uMaxNumPaths
	{
		[Token(Token = "0x60011D5")]
		[Address(RVA = "0x487534", Offset = "0x487534", VA = "0x487534")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x60011D4")]
		[Address(RVA = "0x479B3C", Offset = "0x479B3C", VA = "0x479B3C")]
		set
		{
		}
	}

	[Token(Token = "0x1700015A")]
	public uint uDefaultPoolSize
	{
		[Token(Token = "0x60011D7")]
		[Address(RVA = "0x4875C0", Offset = "0x4875C0", VA = "0x4875C0")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x60011D6")]
		[Address(RVA = "0x479BD0", Offset = "0x479BD0", VA = "0x479BD0")]
		set
		{
		}
	}

	[Token(Token = "0x1700015B")]
	public float fDefaultPoolRatioThreshold
	{
		[Token(Token = "0x60011D9")]
		[Address(RVA = "0x48764C", Offset = "0x48764C", VA = "0x48764C")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60011D8")]
		[Address(RVA = "0x479C64", Offset = "0x479C64", VA = "0x479C64")]
		set
		{
		}
	}

	[Token(Token = "0x1700015C")]
	public uint uCommandQueueSize
	{
		[Token(Token = "0x60011DB")]
		[Address(RVA = "0x4876D8", Offset = "0x4876D8", VA = "0x4876D8")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x60011DA")]
		[Address(RVA = "0x479CF8", Offset = "0x479CF8", VA = "0x479CF8")]
		set
		{
		}
	}

	[Token(Token = "0x1700015D")]
	public int uPrepareEventMemoryPoolID
	{
		[Token(Token = "0x60011DD")]
		[Address(RVA = "0x487764", Offset = "0x487764", VA = "0x487764")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60011DC")]
		[Address(RVA = "0x4782D0", Offset = "0x4782D0", VA = "0x4782D0")]
		set
		{
		}
	}

	[Token(Token = "0x1700015E")]
	public bool bEnableGameSyncPreparation
	{
		[Token(Token = "0x60011DF")]
		[Address(RVA = "0x4877F0", Offset = "0x4877F0", VA = "0x4877F0")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60011DE")]
		[Address(RVA = "0x478364", Offset = "0x478364", VA = "0x478364")]
		set
		{
		}
	}

	[Token(Token = "0x1700015F")]
	public uint uContinuousPlaybackLookAhead
	{
		[Token(Token = "0x60011E1")]
		[Address(RVA = "0x48787C", Offset = "0x48787C", VA = "0x48787C")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x60011E0")]
		[Address(RVA = "0x4783F8", Offset = "0x4783F8", VA = "0x4783F8")]
		set
		{
		}
	}

	[Token(Token = "0x17000160")]
	public uint uNumSamplesPerFrame
	{
		[Token(Token = "0x60011E3")]
		[Address(RVA = "0x487908", Offset = "0x487908", VA = "0x487908")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x60011E2")]
		[Address(RVA = "0x479D8C", Offset = "0x479D8C", VA = "0x479D8C")]
		set
		{
		}
	}

	[Token(Token = "0x17000161")]
	public uint uMonitorPoolSize
	{
		[Token(Token = "0x60011E5")]
		[Address(RVA = "0x487994", Offset = "0x487994", VA = "0x487994")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x60011E4")]
		[Address(RVA = "0x47848C", Offset = "0x47848C", VA = "0x47848C")]
		set
		{
		}
	}

	[Token(Token = "0x17000162")]
	public uint uMonitorQueuePoolSize
	{
		[Token(Token = "0x60011E7")]
		[Address(RVA = "0x487A20", Offset = "0x487A20", VA = "0x487A20")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x60011E6")]
		[Address(RVA = "0x478520", Offset = "0x478520", VA = "0x478520")]
		set
		{
		}
	}

	[Token(Token = "0x17000163")]
	public AkOutputSettings settingsMainOutput
	{
		[Token(Token = "0x60011E9")]
		[Address(RVA = "0x479E20", Offset = "0x479E20", VA = "0x479E20")]
		get
		{
			return null;
		}
		[Token(Token = "0x60011E8")]
		[Address(RVA = "0x487AAC", Offset = "0x487AAC", VA = "0x487AAC")]
		set
		{
		}
	}

	[Token(Token = "0x17000164")]
	public uint uMaxHardwareTimeoutMs
	{
		[Token(Token = "0x60011EB")]
		[Address(RVA = "0x487B54", Offset = "0x487B54", VA = "0x487B54")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x60011EA")]
		[Address(RVA = "0x4785B4", Offset = "0x4785B4", VA = "0x4785B4")]
		set
		{
		}
	}

	[Token(Token = "0x17000165")]
	public bool bUseSoundBankMgrThread
	{
		[Token(Token = "0x60011ED")]
		[Address(RVA = "0x487C74", Offset = "0x487C74", VA = "0x487C74")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60011EC")]
		[Address(RVA = "0x487BE0", Offset = "0x487BE0", VA = "0x487BE0")]
		set
		{
		}
	}

	[Token(Token = "0x17000166")]
	public bool bUseLEngineThread
	{
		[Token(Token = "0x60011EF")]
		[Address(RVA = "0x487D94", Offset = "0x487D94", VA = "0x487D94")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60011EE")]
		[Address(RVA = "0x487D00", Offset = "0x487D00", VA = "0x487D00")]
		set
		{
		}
	}

	[Token(Token = "0x17000167")]
	public string szPluginDLLPath
	{
		[Token(Token = "0x60011F1")]
		[Address(RVA = "0x487E20", Offset = "0x487E20", VA = "0x487E20")]
		get
		{
			return null;
		}
		[Token(Token = "0x60011F0")]
		[Address(RVA = "0x479EFC", Offset = "0x479EFC", VA = "0x479EFC")]
		set
		{
		}
	}

	[Token(Token = "0x17000168")]
	public AkFloorPlane eFloorPlane
	{
		[Token(Token = "0x60011F3")]
		[Address(RVA = "0x487F80", Offset = "0x487F80", VA = "0x487F80")]
		get
		{
			return default(AkFloorPlane);
		}
		[Token(Token = "0x60011F2")]
		[Address(RVA = "0x487EEC", Offset = "0x487EEC", VA = "0x487EEC")]
		set
		{
		}
	}

	[Token(Token = "0x60011CC")]
	[Address(RVA = "0x48663C", Offset = "0x48663C", VA = "0x48663C")]
	internal AkInitSettings(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x60011CD")]
	[Address(RVA = "0x4872D4", Offset = "0x4872D4", VA = "0x4872D4")]
	public AkInitSettings()
	{
	}

	[Token(Token = "0x60011CE")]
	[Address(RVA = "0x4865E4", Offset = "0x4865E4", VA = "0x4865E4")]
	internal static IntPtr getCPtr(AkInitSettings obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x60011CF")]
	[Address(RVA = "0x487374", Offset = "0x487374", VA = "0x487374", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x60011D0")]
	[Address(RVA = "0x4873A0", Offset = "0x4873A0", VA = "0x4873A0", Slot = "1")]
	~AkInitSettings()
	{
	}

	[Token(Token = "0x60011D1")]
	[Address(RVA = "0x487400", Offset = "0x487400", VA = "0x487400", Slot = "6")]
	public virtual void Dispose()
	{
	}
}
[Token(Token = "0x200022B")]
public class AkIterator : IDisposable
{
	[Token(Token = "0x4000DFC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private IntPtr swigCPtr;

	[Token(Token = "0x4000DFD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	protected bool swigCMemOwn;

	[Token(Token = "0x17000169")]
	public AkPlaylistItem pItem
	{
		[Token(Token = "0x60011FB")]
		[Address(RVA = "0x488388", Offset = "0x488388", VA = "0x488388")]
		get
		{
			return null;
		}
		[Token(Token = "0x60011FA")]
		[Address(RVA = "0x4882E0", Offset = "0x4882E0", VA = "0x4882E0")]
		set
		{
		}
	}

	[Token(Token = "0x60011F4")]
	[Address(RVA = "0x48800C", Offset = "0x48800C", VA = "0x48800C")]
	internal AkIterator(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x60011F5")]
	[Address(RVA = "0x488034", Offset = "0x488034", VA = "0x488034")]
	public AkIterator()
	{
	}

	[Token(Token = "0x60011F6")]
	[Address(RVA = "0x4880D4", Offset = "0x4880D4", VA = "0x4880D4")]
	internal static IntPtr getCPtr(AkIterator obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x60011F7")]
	[Address(RVA = "0x48812C", Offset = "0x48812C", VA = "0x48812C", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x60011F8")]
	[Address(RVA = "0x488158", Offset = "0x488158", VA = "0x488158", Slot = "1")]
	~AkIterator()
	{
	}

	[Token(Token = "0x60011F9")]
	[Address(RVA = "0x4881B8", Offset = "0x4881B8", VA = "0x4881B8", Slot = "6")]
	public virtual void Dispose()
	{
	}

	[Token(Token = "0x60011FC")]
	[Address(RVA = "0x488464", Offset = "0x488464", VA = "0x488464")]
	public AkIterator NextIter()
	{
		return null;
	}

	[Token(Token = "0x60011FD")]
	[Address(RVA = "0x488524", Offset = "0x488524", VA = "0x488524")]
	public AkIterator PrevIter()
	{
		return null;
	}

	[Token(Token = "0x60011FE")]
	[Address(RVA = "0x4885E4", Offset = "0x4885E4", VA = "0x4885E4")]
	public AkPlaylistItem GetItem()
	{
		return null;
	}

	[Token(Token = "0x60011FF")]
	[Address(RVA = "0x4886A0", Offset = "0x4886A0", VA = "0x4886A0")]
	public bool IsEqualTo(AkIterator in_rOp)
	{
		return default(bool);
	}

	[Token(Token = "0x6001200")]
	[Address(RVA = "0x48877C", Offset = "0x48877C", VA = "0x48877C")]
	public bool IsDifferentFrom(AkIterator in_rOp)
	{
		return default(bool);
	}
}
[Token(Token = "0x200022C")]
public class AkMarkerCallbackInfo : AkEventCallbackInfo
{
	[Token(Token = "0x4000DFE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private IntPtr swigCPtr;

	[Token(Token = "0x1700016A")]
	public uint uIdentifier
	{
		[Token(Token = "0x6001207")]
		[Address(RVA = "0x4897B4", Offset = "0x4897B4", VA = "0x4897B4")]
		get
		{
			return default(uint);
		}
	}

	[Token(Token = "0x1700016B")]
	public uint uPosition
	{
		[Token(Token = "0x6001208")]
		[Address(RVA = "0x489840", Offset = "0x489840", VA = "0x489840")]
		get
		{
			return default(uint);
		}
	}

	[Token(Token = "0x1700016C")]
	public string strLabel
	{
		[Token(Token = "0x6001209")]
		[Address(RVA = "0x4898CC", Offset = "0x4898CC", VA = "0x4898CC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6001201")]
	[Address(RVA = "0x4758C8", Offset = "0x4758C8", VA = "0x4758C8")]
	internal AkMarkerCallbackInfo(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x6001202")]
	[Address(RVA = "0x489494", Offset = "0x489494", VA = "0x489494")]
	public AkMarkerCallbackInfo()
	{
	}

	[Token(Token = "0x6001203")]
	[Address(RVA = "0x489528", Offset = "0x489528", VA = "0x489528")]
	internal static IntPtr getCPtr(AkMarkerCallbackInfo obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6001204")]
	[Address(RVA = "0x489580", Offset = "0x489580", VA = "0x489580", Slot = "5")]
	internal override void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x6001205")]
	[Address(RVA = "0x48961C", Offset = "0x48961C", VA = "0x48961C", Slot = "1")]
	~AkMarkerCallbackInfo()
	{
	}

	[Token(Token = "0x6001206")]
	[Address(RVA = "0x489684", Offset = "0x489684", VA = "0x489684", Slot = "6")]
	public override void Dispose()
	{
	}
}
[Token(Token = "0x200022D")]
public class AkMemSettings : IDisposable
{
	[Token(Token = "0x4000DFF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private IntPtr swigCPtr;

	[Token(Token = "0x4000E00")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	protected bool swigCMemOwn;

	[Token(Token = "0x1700016D")]
	public uint uMaxNumPools
	{
		[Token(Token = "0x6001211")]
		[Address(RVA = "0x48A778", Offset = "0x48A778", VA = "0x48A778")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x6001210")]
		[Address(RVA = "0x4799A0", Offset = "0x4799A0", VA = "0x4799A0")]
		set
		{
		}
	}

	[Token(Token = "0x1700016E")]
	public uint uDebugFlags
	{
		[Token(Token = "0x6001213")]
		[Address(RVA = "0x48A898", Offset = "0x48A898", VA = "0x48A898")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x6001212")]
		[Address(RVA = "0x48A804", Offset = "0x48A804", VA = "0x48A804")]
		set
		{
		}
	}

	[Token(Token = "0x600120A")]
	[Address(RVA = "0x48635C", Offset = "0x48635C", VA = "0x48635C")]
	internal AkMemSettings(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x600120B")]
	[Address(RVA = "0x48A524", Offset = "0x48A524", VA = "0x48A524")]
	public AkMemSettings()
	{
	}

	[Token(Token = "0x600120C")]
	[Address(RVA = "0x486304", Offset = "0x486304", VA = "0x486304")]
	internal static IntPtr getCPtr(AkMemSettings obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x600120D")]
	[Address(RVA = "0x48A5C4", Offset = "0x48A5C4", VA = "0x48A5C4", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x600120E")]
	[Address(RVA = "0x48A5F0", Offset = "0x48A5F0", VA = "0x48A5F0", Slot = "1")]
	~AkMemSettings()
	{
	}

	[Token(Token = "0x600120F")]
	[Address(RVA = "0x48A650", Offset = "0x48A650", VA = "0x48A650", Slot = "6")]
	public virtual void Dispose()
	{
	}
}
[Token(Token = "0x200022E")]
public enum AkMeteringFlags
{
	[Token(Token = "0x4000E02")]
	AK_NoMetering = 0,
	[Token(Token = "0x4000E03")]
	AK_EnableBusMeter_Peak = 1,
	[Token(Token = "0x4000E04")]
	AK_EnableBusMeter_TruePeak = 2,
	[Token(Token = "0x4000E05")]
	AK_EnableBusMeter_RMS = 4,
	[Token(Token = "0x4000E06")]
	AK_EnableBusMeter_KPower = 0x10,
	[Token(Token = "0x4000E07")]
	AK_EnableBusMeter_3DMeter = 0x20
}
[Token(Token = "0x200022F")]
public enum AkMIDICcTypes
{
	[Token(Token = "0x4000E09")]
	BANK_SELECT_COARSE = 0,
	[Token(Token = "0x4000E0A")]
	MOD_WHEEL_COARSE = 1,
	[Token(Token = "0x4000E0B")]
	BREATH_CTRL_COARSE = 2,
	[Token(Token = "0x4000E0C")]
	CTRL_3_COARSE = 3,
	[Token(Token = "0x4000E0D")]
	FOOT_PEDAL_COARSE = 4,
	[Token(Token = "0x4000E0E")]
	PORTAMENTO_COARSE = 5,
	[Token(Token = "0x4000E0F")]
	DATA_ENTRY_COARSE = 6,
	[Token(Token = "0x4000E10")]
	VOLUME_COARSE = 7,
	[Token(Token = "0x4000E11")]
	BALANCE_COARSE = 8,
	[Token(Token = "0x4000E12")]
	CTRL_9_COARSE = 9,
	[Token(Token = "0x4000E13")]
	PAN_POSITION_COARSE = 10,
	[Token(Token = "0x4000E14")]
	EXPRESSION_COARSE = 11,
	[Token(Token = "0x4000E15")]
	EFFECT_CTRL_1_COARSE = 12,
	[Token(Token = "0x4000E16")]
	EFFECT_CTRL_2_COARSE = 13,
	[Token(Token = "0x4000E17")]
	CTRL_14_COARSE = 14,
	[Token(Token = "0x4000E18")]
	CTRL_15_COARSE = 15,
	[Token(Token = "0x4000E19")]
	GEN_SLIDER_1 = 16,
	[Token(Token = "0x4000E1A")]
	GEN_SLIDER_2 = 17,
	[Token(Token = "0x4000E1B")]
	GEN_SLIDER_3 = 18,
	[Token(Token = "0x4000E1C")]
	GEN_SLIDER_4 = 19,
	[Token(Token = "0x4000E1D")]
	CTRL_20_COARSE = 20,
	[Token(Token = "0x4000E1E")]
	CTRL_21_COARSE = 21,
	[Token(Token = "0x4000E1F")]
	CTRL_22_COARSE = 22,
	[Token(Token = "0x4000E20")]
	CTRL_23_COARSE = 23,
	[Token(Token = "0x4000E21")]
	CTRL_24_COARSE = 24,
	[Token(Token = "0x4000E22")]
	CTRL_25_COARSE = 25,
	[Token(Token = "0x4000E23")]
	CTRL_26_COARSE = 26,
	[Token(Token = "0x4000E24")]
	CTRL_27_COARSE = 27,
	[Token(Token = "0x4000E25")]
	CTRL_28_COARSE = 28,
	[Token(Token = "0x4000E26")]
	CTRL_29_COARSE = 29,
	[Token(Token = "0x4000E27")]
	CTRL_30_COARSE = 30,
	[Token(Token = "0x4000E28")]
	CTRL_31_COARSE = 31,
	[Token(Token = "0x4000E29")]
	BANK_SELECT_FINE = 32,
	[Token(Token = "0x4000E2A")]
	MOD_WHEEL_FINE = 33,
	[Token(Token = "0x4000E2B")]
	BREATH_CTRL_FINE = 34,
	[Token(Token = "0x4000E2C")]
	CTRL_3_FINE = 35,
	[Token(Token = "0x4000E2D")]
	FOOT_PEDAL_FINE = 36,
	[Token(Token = "0x4000E2E")]
	PORTAMENTO_FINE = 37,
	[Token(Token = "0x4000E2F")]
	DATA_ENTRY_FINE = 38,
	[Token(Token = "0x4000E30")]
	VOLUME_FINE = 39,
	[Token(Token = "0x4000E31")]
	BALANCE_FINE = 40,
	[Token(Token = "0x4000E32")]
	CTRL_9_FINE = 41,
	[Token(Token = "0x4000E33")]
	PAN_POSITION_FINE = 42,
	[Token(Token = "0x4000E34")]
	EXPRESSION_FINE = 43,
	[Token(Token = "0x4000E35")]
	EFFECT_CTRL_1_FINE = 44,
	[Token(Token = "0x4000E36")]
	EFFECT_CTRL_2_FINE = 45,
	[Token(Token = "0x4000E37")]
	CTRL_14_FINE = 46,
	[Token(Token = "0x4000E38")]
	CTRL_15_FINE = 47,
	[Token(Token = "0x4000E39")]
	CTRL_20_FINE = 52,
	[Token(Token = "0x4000E3A")]
	CTRL_21_FINE = 53,
	[Token(Token = "0x4000E3B")]
	CTRL_22_FINE = 54,
	[Token(Token = "0x4000E3C")]
	CTRL_23_FINE = 55,
	[Token(Token = "0x4000E3D")]
	CTRL_24_FINE = 56,
	[Token(Token = "0x4000E3E")]
	CTRL_25_FINE = 57,
	[Token(Token = "0x4000E3F")]
	CTRL_26_FINE = 58,
	[Token(Token = "0x4000E40")]
	CTRL_27_FINE = 59,
	[Token(Token = "0x4000E41")]
	CTRL_28_FINE = 60,
	[Token(Token = "0x4000E42")]
	CTRL_29_FINE = 61,
	[Token(Token = "0x4000E43")]
	CTRL_30_FINE = 62,
	[Token(Token = "0x4000E44")]
	CTRL_31_FINE = 63,
	[Token(Token = "0x4000E45")]
	HOLD_PEDAL = 64,
	[Token(Token = "0x4000E46")]
	PORTAMENTO_ON_OFF = 65,
	[Token(Token = "0x4000E47")]
	SUSTENUTO_PEDAL = 66,
	[Token(Token = "0x4000E48")]
	SOFT_PEDAL = 67,
	[Token(Token = "0x4000E49")]
	LEGATO_PEDAL = 68,
	[Token(Token = "0x4000E4A")]
	HOLD_PEDAL_2 = 69,
	[Token(Token = "0x4000E4B")]
	SOUND_VARIATION = 70,
	[Token(Token = "0x4000E4C")]
	SOUND_TIMBRE = 71,
	[Token(Token = "0x4000E4D")]
	SOUND_RELEASE_TIME = 72,
	[Token(Token = "0x4000E4E")]
	SOUND_ATTACK_TIME = 73,
	[Token(Token = "0x4000E4F")]
	SOUND_BRIGHTNESS = 74,
	[Token(Token = "0x4000E50")]
	SOUND_CTRL_6 = 75,
	[Token(Token = "0x4000E51")]
	SOUND_CTRL_7 = 76,
	[Token(Token = "0x4000E52")]
	SOUND_CTRL_8 = 77,
	[Token(Token = "0x4000E53")]
	SOUND_CTRL_9 = 78,
	[Token(Token = "0x4000E54")]
	SOUND_CTRL_10 = 79,
	[Token(Token = "0x4000E55")]
	GENERAL_BUTTON_1 = 80,
	[Token(Token = "0x4000E56")]
	GENERAL_BUTTON_2 = 81,
	[Token(Token = "0x4000E57")]
	GENERAL_BUTTON_3 = 82,
	[Token(Token = "0x4000E58")]
	GENERAL_BUTTON_4 = 83,
	[Token(Token = "0x4000E59")]
	REVERB_LEVEL = 91,
	[Token(Token = "0x4000E5A")]
	TREMOLO_LEVEL = 92,
	[Token(Token = "0x4000E5B")]
	CHORUS_LEVEL = 93,
	[Token(Token = "0x4000E5C")]
	CELESTE_LEVEL = 94,
	[Token(Token = "0x4000E5D")]
	PHASER_LEVEL = 95,
	[Token(Token = "0x4000E5E")]
	DATA_BUTTON_P1 = 96,
	[Token(Token = "0x4000E5F")]
	DATA_BUTTON_M1 = 97,
	[Token(Token = "0x4000E60")]
	NON_REGISTER_COARSE = 98,
	[Token(Token = "0x4000E61")]
	NON_REGISTER_FINE = 99,
	[Token(Token = "0x4000E62")]
	ALL_SOUND_OFF = 120,
	[Token(Token = "0x4000E63")]
	ALL_CONTROLLERS_OFF = 121,
	[Token(Token = "0x4000E64")]
	LOCAL_KEYBOARD = 122,
	[Token(Token = "0x4000E65")]
	ALL_NOTES_OFF = 123,
	[Token(Token = "0x4000E66")]
	OMNI_MODE_OFF = 124,
	[Token(Token = "0x4000E67")]
	OMNI_MODE_ON = 125,
	[Token(Token = "0x4000E68")]
	OMNI_MONOPHONIC_ON = 126,
	[Token(Token = "0x4000E69")]
	OMNI_POLYPHONIC_ON = 127
}
[Token(Token = "0x2000230")]
public class AkMIDIEvent : IDisposable
{
	[Token(Token = "0x2000231")]
	public class tGen : IDisposable
	{
		[Token(Token = "0x4000E6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private IntPtr swigCPtr;

		[Token(Token = "0x4000E6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		protected bool swigCMemOwn;

		[Token(Token = "0x17000182")]
		public byte byParam1
		{
			[Token(Token = "0x6001247")]
			[Address(RVA = "0x48D354", Offset = "0x48D354", VA = "0x48D354")]
			get
			{
				return default(byte);
			}
			[Token(Token = "0x6001246")]
			[Address(RVA = "0x48D2C0", Offset = "0x48D2C0", VA = "0x48D2C0")]
			set
			{
			}
		}

		[Token(Token = "0x17000183")]
		public byte byParam2
		{
			[Token(Token = "0x6001249")]
			[Address(RVA = "0x48D474", Offset = "0x48D474", VA = "0x48D474")]
			get
			{
				return default(byte);
			}
			[Token(Token = "0x6001248")]
			[Address(RVA = "0x48D3E0", Offset = "0x48D3E0", VA = "0x48D3E0")]
			set
			{
			}
		}

		[Token(Token = "0x6001240")]
		[Address(RVA = "0x48AF2C", Offset = "0x48AF2C", VA = "0x48AF2C")]
		internal tGen(IntPtr cPtr, bool cMemoryOwn)
		{
		}

		[Token(Token = "0x6001241")]
		[Address(RVA = "0x48D06C", Offset = "0x48D06C", VA = "0x48D06C")]
		public tGen()
		{
		}

		[Token(Token = "0x6001242")]
		[Address(RVA = "0x48ADF4", Offset = "0x48ADF4", VA = "0x48ADF4")]
		internal static IntPtr getCPtr(tGen obj)
		{
			return default(IntPtr);
		}

		[Token(Token = "0x6001243")]
		[Address(RVA = "0x48D10C", Offset = "0x48D10C", VA = "0x48D10C", Slot = "5")]
		internal virtual void setCPtr(IntPtr cPtr)
		{
		}

		[Token(Token = "0x6001244")]
		[Address(RVA = "0x48D138", Offset = "0x48D138", VA = "0x48D138", Slot = "1")]
		~tGen()
		{
		}

		[Token(Token = "0x6001245")]
		[Address(RVA = "0x48D198", Offset = "0x48D198", VA = "0x48D198", Slot = "6")]
		public virtual void Dispose()
		{
		}
	}

	[Token(Token = "0x2000232")]
	public class tNoteOnOff : IDisposable
	{
		[Token(Token = "0x4000E6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private IntPtr swigCPtr;

		[Token(Token = "0x4000E6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		protected bool swigCMemOwn;

		[Token(Token = "0x17000184")]
		public byte byNote
		{
			[Token(Token = "0x6001251")]
			[Address(RVA = "0x48DC7C", Offset = "0x48DC7C", VA = "0x48DC7C")]
			get
			{
				return default(byte);
			}
			[Token(Token = "0x6001250")]
			[Address(RVA = "0x48DBE8", Offset = "0x48DBE8", VA = "0x48DBE8")]
			set
			{
			}
		}

		[Token(Token = "0x17000185")]
		public byte byVelocity
		{
			[Token(Token = "0x6001253")]
			[Address(RVA = "0x48DD9C", Offset = "0x48DD9C", VA = "0x48DD9C")]
			get
			{
				return default(byte);
			}
			[Token(Token = "0x6001252")]
			[Address(RVA = "0x48DD08", Offset = "0x48DD08", VA = "0x48DD08")]
			set
			{
			}
		}

		[Token(Token = "0x600124A")]
		[Address(RVA = "0x48B3A4", Offset = "0x48B3A4", VA = "0x48B3A4")]
		internal tNoteOnOff(IntPtr cPtr, bool cMemoryOwn)
		{
		}

		[Token(Token = "0x600124B")]
		[Address(RVA = "0x48D994", Offset = "0x48D994", VA = "0x48D994")]
		public tNoteOnOff()
		{
		}

		[Token(Token = "0x600124C")]
		[Address(RVA = "0x48B26C", Offset = "0x48B26C", VA = "0x48B26C")]
		internal static IntPtr getCPtr(tNoteOnOff obj)
		{
			return default(IntPtr);
		}

		[Token(Token = "0x600124D")]
		[Address(RVA = "0x48DA34", Offset = "0x48DA34", VA = "0x48DA34", Slot = "5")]
		internal virtual void setCPtr(IntPtr cPtr)
		{
		}

		[Token(Token = "0x600124E")]
		[Address(RVA = "0x48DA60", Offset = "0x48DA60", VA = "0x48DA60", Slot = "1")]
		~tNoteOnOff()
		{
		}

		[Token(Token = "0x600124F")]
		[Address(RVA = "0x48DAC0", Offset = "0x48DAC0", VA = "0x48DAC0", Slot = "6")]
		public virtual void Dispose()
		{
		}
	}

	[Token(Token = "0x2000233")]
	public class tCc : IDisposable
	{
		[Token(Token = "0x4000E70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private IntPtr swigCPtr;

		[Token(Token = "0x4000E71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		protected bool swigCMemOwn;

		[Token(Token = "0x17000186")]
		public byte byCc
		{
			[Token(Token = "0x600125B")]
			[Address(RVA = "0x48CB4C", Offset = "0x48CB4C", VA = "0x48CB4C")]
			get
			{
				return default(byte);
			}
			[Token(Token = "0x600125A")]
			[Address(RVA = "0x48CAB8", Offset = "0x48CAB8", VA = "0x48CAB8")]
			set
			{
			}
		}

		[Token(Token = "0x17000187")]
		public byte byValue
		{
			[Token(Token = "0x600125D")]
			[Address(RVA = "0x48CC6C", Offset = "0x48CC6C", VA = "0x48CC6C")]
			get
			{
				return default(byte);
			}
			[Token(Token = "0x600125C")]
			[Address(RVA = "0x48CBD8", Offset = "0x48CBD8", VA = "0x48CBD8")]
			set
			{
			}
		}

		[Token(Token = "0x6001254")]
		[Address(RVA = "0x48B168", Offset = "0x48B168", VA = "0x48B168")]
		internal tCc(IntPtr cPtr, bool cMemoryOwn)
		{
		}

		[Token(Token = "0x6001255")]
		[Address(RVA = "0x48C864", Offset = "0x48C864", VA = "0x48C864")]
		public tCc()
		{
		}

		[Token(Token = "0x6001256")]
		[Address(RVA = "0x48B030", Offset = "0x48B030", VA = "0x48B030")]
		internal static IntPtr getCPtr(tCc obj)
		{
			return default(IntPtr);
		}

		[Token(Token = "0x6001257")]
		[Address(RVA = "0x48C904", Offset = "0x48C904", VA = "0x48C904", Slot = "5")]
		internal virtual void setCPtr(IntPtr cPtr)
		{
		}

		[Token(Token = "0x6001258")]
		[Address(RVA = "0x48C930", Offset = "0x48C930", VA = "0x48C930", Slot = "1")]
		~tCc()
		{
		}

		[Token(Token = "0x6001259")]
		[Address(RVA = "0x48C990", Offset = "0x48C990", VA = "0x48C990", Slot = "6")]
		public virtual void Dispose()
		{
		}
	}

	[Token(Token = "0x2000234")]
	public class tPitchBend : IDisposable
	{
		[Token(Token = "0x4000E72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private IntPtr swigCPtr;

		[Token(Token = "0x4000E73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		protected bool swigCMemOwn;

		[Token(Token = "0x17000188")]
		public byte byValueLsb
		{
			[Token(Token = "0x6001265")]
			[Address(RVA = "0x48E110", Offset = "0x48E110", VA = "0x48E110")]
			get
			{
				return default(byte);
			}
			[Token(Token = "0x6001264")]
			[Address(RVA = "0x48E07C", Offset = "0x48E07C", VA = "0x48E07C")]
			set
			{
			}
		}

		[Token(Token = "0x17000189")]
		public byte byValueMsb
		{
			[Token(Token = "0x6001267")]
			[Address(RVA = "0x48E230", Offset = "0x48E230", VA = "0x48E230")]
			get
			{
				return default(byte);
			}
			[Token(Token = "0x6001266")]
			[Address(RVA = "0x48E19C", Offset = "0x48E19C", VA = "0x48E19C")]
			set
			{
			}
		}

		[Token(Token = "0x600125E")]
		[Address(RVA = "0x48B5E0", Offset = "0x48B5E0", VA = "0x48B5E0")]
		internal tPitchBend(IntPtr cPtr, bool cMemoryOwn)
		{
		}

		[Token(Token = "0x600125F")]
		[Address(RVA = "0x48DE28", Offset = "0x48DE28", VA = "0x48DE28")]
		public tPitchBend()
		{
		}

		[Token(Token = "0x6001260")]
		[Address(RVA = "0x48B4A8", Offset = "0x48B4A8", VA = "0x48B4A8")]
		internal static IntPtr getCPtr(tPitchBend obj)
		{
			return default(IntPtr);
		}

		[Token(Token = "0x6001261")]
		[Address(RVA = "0x48DEC8", Offset = "0x48DEC8", VA = "0x48DEC8", Slot = "5")]
		internal virtual void setCPtr(IntPtr cPtr)
		{
		}

		[Token(Token = "0x6001262")]
		[Address(RVA = "0x48DEF4", Offset = "0x48DEF4", VA = "0x48DEF4", Slot = "1")]
		~tPitchBend()
		{
		}

		[Token(Token = "0x6001263")]
		[Address(RVA = "0x48DF54", Offset = "0x48DF54", VA = "0x48DF54", Slot = "6")]
		public virtual void Dispose()
		{
		}
	}

	[Token(Token = "0x2000235")]
	public class tNoteAftertouch : IDisposable
	{
		[Token(Token = "0x4000E74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private IntPtr swigCPtr;

		[Token(Token = "0x4000E75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		protected bool swigCMemOwn;

		[Token(Token = "0x1700018A")]
		public byte byNote
		{
			[Token(Token = "0x600126F")]
			[Address(RVA = "0x48D7E8", Offset = "0x48D7E8", VA = "0x48D7E8")]
			get
			{
				return default(byte);
			}
			[Token(Token = "0x600126E")]
			[Address(RVA = "0x48D754", Offset = "0x48D754", VA = "0x48D754")]
			set
			{
			}
		}

		[Token(Token = "0x1700018B")]
		public byte byValue
		{
			[Token(Token = "0x6001271")]
			[Address(RVA = "0x48D908", Offset = "0x48D908", VA = "0x48D908")]
			get
			{
				return default(byte);
			}
			[Token(Token = "0x6001270")]
			[Address(RVA = "0x48D874", Offset = "0x48D874", VA = "0x48D874")]
			set
			{
			}
		}

		[Token(Token = "0x6001268")]
		[Address(RVA = "0x48B81C", Offset = "0x48B81C", VA = "0x48B81C")]
		internal tNoteAftertouch(IntPtr cPtr, bool cMemoryOwn)
		{
		}

		[Token(Token = "0x6001269")]
		[Address(RVA = "0x48D500", Offset = "0x48D500", VA = "0x48D500")]
		public tNoteAftertouch()
		{
		}

		[Token(Token = "0x600126A")]
		[Address(RVA = "0x48B6E4", Offset = "0x48B6E4", VA = "0x48B6E4")]
		internal static IntPtr getCPtr(tNoteAftertouch obj)
		{
			return default(IntPtr);
		}

		[Token(Token = "0x600126B")]
		[Address(RVA = "0x48D5A0", Offset = "0x48D5A0", VA = "0x48D5A0", Slot = "5")]
		internal virtual void setCPtr(IntPtr cPtr)
		{
		}

		[Token(Token = "0x600126C")]
		[Address(RVA = "0x48D5CC", Offset = "0x48D5CC", VA = "0x48D5CC", Slot = "1")]
		~tNoteAftertouch()
		{
		}

		[Token(Token = "0x600126D")]
		[Address(RVA = "0x48D62C", Offset = "0x48D62C", VA = "0x48D62C", Slot = "6")]
		public virtual void Dispose()
		{
		}
	}

	[Token(Token = "0x2000236")]
	public class tChanAftertouch : IDisposable
	{
		[Token(Token = "0x4000E76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private IntPtr swigCPtr;

		[Token(Token = "0x4000E77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		protected bool swigCMemOwn;

		[Token(Token = "0x1700018C")]
		public byte byValue
		{
			[Token(Token = "0x6001279")]
			[Address(RVA = "0x48CFE0", Offset = "0x48CFE0", VA = "0x48CFE0")]
			get
			{
				return default(byte);
			}
			[Token(Token = "0x6001278")]
			[Address(RVA = "0x48CF4C", Offset = "0x48CF4C", VA = "0x48CF4C")]
			set
			{
			}
		}

		[Token(Token = "0x6001272")]
		[Address(RVA = "0x48BA58", Offset = "0x48BA58", VA = "0x48BA58")]
		internal tChanAftertouch(IntPtr cPtr, bool cMemoryOwn)
		{
		}

		[Token(Token = "0x6001273")]
		[Address(RVA = "0x48CCF8", Offset = "0x48CCF8", VA = "0x48CCF8")]
		public tChanAftertouch()
		{
		}

		[Token(Token = "0x6001274")]
		[Address(RVA = "0x48B920", Offset = "0x48B920", VA = "0x48B920")]
		internal static IntPtr getCPtr(tChanAftertouch obj)
		{
			return default(IntPtr);
		}

		[Token(Token = "0x6001275")]
		[Address(RVA = "0x48CD98", Offset = "0x48CD98", VA = "0x48CD98", Slot = "5")]
		internal virtual void setCPtr(IntPtr cPtr)
		{
		}

		[Token(Token = "0x6001276")]
		[Address(RVA = "0x48CDC4", Offset = "0x48CDC4", VA = "0x48CDC4", Slot = "1")]
		~tChanAftertouch()
		{
		}

		[Token(Token = "0x6001277")]
		[Address(RVA = "0x48CE24", Offset = "0x48CE24", VA = "0x48CE24", Slot = "6")]
		public virtual void Dispose()
		{
		}
	}

	[Token(Token = "0x2000237")]
	public class tProgramChange : IDisposable
	{
		[Token(Token = "0x4000E78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private IntPtr swigCPtr;

		[Token(Token = "0x4000E79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		protected bool swigCMemOwn;

		[Token(Token = "0x1700018D")]
		public byte byProgramNum
		{
			[Token(Token = "0x6001281")]
			[Address(RVA = "0x271408", Offset = "0x271408", VA = "0x271408")]
			get
			{
				return default(byte);
			}
			[Token(Token = "0x6001280")]
			[Address(RVA = "0x2712B4", Offset = "0x2712B4", VA = "0x2712B4")]
			set
			{
			}
		}

		[Token(Token = "0x600127A")]
		[Address(RVA = "0x270E80", Offset = "0x270E80", VA = "0x270E80")]
		internal tProgramChange(IntPtr cPtr, bool cMemoryOwn)
		{
		}

		[Token(Token = "0x600127B")]
		[Address(RVA = "0x270EA8", Offset = "0x270EA8", VA = "0x270EA8")]
		public tProgramChange()
		{
		}

		[Token(Token = "0x600127C")]
		[Address(RVA = "0x270FF0", Offset = "0x270FF0", VA = "0x270FF0")]
		internal static IntPtr getCPtr(tProgramChange obj)
		{
			return default(IntPtr);
		}

		[Token(Token = "0x600127D")]
		[Address(RVA = "0x271048", Offset = "0x271048", VA = "0x271048", Slot = "5")]
		internal virtual void setCPtr(IntPtr cPtr)
		{
		}

		[Token(Token = "0x600127E")]
		[Address(RVA = "0x271074", Offset = "0x271074", VA = "0x271074", Slot = "1")]
		~tProgramChange()
		{
		}

		[Token(Token = "0x600127F")]
		[Address(RVA = "0x2710D4", Offset = "0x2710D4", VA = "0x2710D4", Slot = "6")]
		public virtual void Dispose()
		{
		}
	}

	[Token(Token = "0x4000E6A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private IntPtr swigCPtr;

	[Token(Token = "0x4000E6B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	protected bool swigCMemOwn;

	[Token(Token = "0x1700016F")]
	public byte byChan
	{
		[Token(Token = "0x600121B")]
		[Address(RVA = "0x48AC8C", Offset = "0x48AC8C", VA = "0x48AC8C")]
		get
		{
			return default(byte);
		}
		[Token(Token = "0x600121A")]
		[Address(RVA = "0x48ABF8", Offset = "0x48ABF8", VA = "0x48ABF8")]
		set
		{
		}
	}

	[Token(Token = "0x17000170")]
	public tGen Gen
	{
		[Token(Token = "0x600121D")]
		[Address(RVA = "0x48AE4C", Offset = "0x48AE4C", VA = "0x48AE4C")]
		get
		{
			return null;
		}
		[Token(Token = "0x600121C")]
		[Address(RVA = "0x48AD18", Offset = "0x48AD18", VA = "0x48AD18")]
		set
		{
		}
	}

	[Token(Token = "0x17000171")]
	public tCc Cc
	{
		[Token(Token = "0x600121F")]
		[Address(RVA = "0x48B088", Offset = "0x48B088", VA = "0x48B088")]
		get
		{
			return null;
		}
		[Token(Token = "0x600121E")]
		[Address(RVA = "0x48AF54", Offset = "0x48AF54", VA = "0x48AF54")]
		set
		{
		}
	}

	[Token(Token = "0x17000172")]
	public tNoteOnOff NoteOnOff
	{
		[Token(Token = "0x6001221")]
		[Address(RVA = "0x48B2C4", Offset = "0x48B2C4", VA = "0x48B2C4")]
		get
		{
			return null;
		}
		[Token(Token = "0x6001220")]
		[Address(RVA = "0x48B190", Offset = "0x48B190", VA = "0x48B190")]
		set
		{
		}
	}

	[Token(Token = "0x17000173")]
	public tPitchBend PitchBend
	{
		[Token(Token = "0x6001223")]
		[Address(RVA = "0x48B500", Offset = "0x48B500", VA = "0x48B500")]
		get
		{
			return null;
		}
		[Token(Token = "0x6001222")]
		[Address(RVA = "0x48B3CC", Offset = "0x48B3CC", VA = "0x48B3CC")]
		set
		{
		}
	}

	[Token(Token = "0x17000174")]
	public tNoteAftertouch NoteAftertouch
	{
		[Token(Token = "0x6001225")]
		[Address(RVA = "0x48B73C", Offset = "0x48B73C", VA = "0x48B73C")]
		get
		{
			return null;
		}
		[Token(Token = "0x6001224")]
		[Address(RVA = "0x48B608", Offset = "0x48B608", VA = "0x48B608")]
		set
		{
		}
	}

	[Token(Token = "0x17000175")]
	public tChanAftertouch ChanAftertouch
	{
		[Token(Token = "0x6001227")]
		[Address(RVA = "0x48B978", Offset = "0x48B978", VA = "0x48B978")]
		get
		{
			return null;
		}
		[Token(Token = "0x6001226")]
		[Address(RVA = "0x48B844", Offset = "0x48B844", VA = "0x48B844")]
		set
		{
		}
	}

	[Token(Token = "0x17000176")]
	public tProgramChange ProgramChange
	{
		[Token(Token = "0x6001229")]
		[Address(RVA = "0x48BB28", Offset = "0x48BB28", VA = "0x48BB28")]
		get
		{
			return null;
		}
		[Token(Token = "0x6001228")]
		[Address(RVA = "0x48BA80", Offset = "0x48BA80", VA = "0x48BA80")]
		set
		{
		}
	}

	[Token(Token = "0x17000177")]
	public AkMIDIEventTypes byType
	{
		[Token(Token = "0x600122B")]
		[Address(RVA = "0x48BC98", Offset = "0x48BC98", VA = "0x48BC98")]
		get
		{
			return default(AkMIDIEventTypes);
		}
		[Token(Token = "0x600122A")]
		[Address(RVA = "0x48BC04", Offset = "0x48BC04", VA = "0x48BC04")]
		set
		{
		}
	}

	[Token(Token = "0x17000178")]
	public byte byOnOffNote
	{
		[Token(Token = "0x600122D")]
		[Address(RVA = "0x48BDB8", Offset = "0x48BDB8", VA = "0x48BDB8")]
		get
		{
			return default(byte);
		}
		[Token(Token = "0x600122C")]
		[Address(RVA = "0x48BD24", Offset = "0x48BD24", VA = "0x48BD24")]
		set
		{
		}
	}

	[Token(Token = "0x17000179")]
	public byte byVelocity
	{
		[Token(Token = "0x600122F")]
		[Address(RVA = "0x48BED8", Offset = "0x48BED8", VA = "0x48BED8")]
		get
		{
			return default(byte);
		}
		[Token(Token = "0x600122E")]
		[Address(RVA = "0x48BE44", Offset = "0x48BE44", VA = "0x48BE44")]
		set
		{
		}
	}

	[Token(Token = "0x1700017A")]
	public AkMIDICcTypes byCc
	{
		[Token(Token = "0x6001231")]
		[Address(RVA = "0x48BFF8", Offset = "0x48BFF8", VA = "0x48BFF8")]
		get
		{
			return default(AkMIDICcTypes);
		}
		[Token(Token = "0x6001230")]
		[Address(RVA = "0x48BF64", Offset = "0x48BF64", VA = "0x48BF64")]
		set
		{
		}
	}

	[Token(Token = "0x1700017B")]
	public byte byCcValue
	{
		[Token(Token = "0x6001233")]
		[Address(RVA = "0x48C118", Offset = "0x48C118", VA = "0x48C118")]
		get
		{
			return default(byte);
		}
		[Token(Token = "0x6001232")]
		[Address(RVA = "0x48C084", Offset = "0x48C084", VA = "0x48C084")]
		set
		{
		}
	}

	[Token(Token = "0x1700017C")]
	public byte byValueLsb
	{
		[Token(Token = "0x6001235")]
		[Address(RVA = "0x48C238", Offset = "0x48C238", VA = "0x48C238")]
		get
		{
			return default(byte);
		}
		[Token(Token = "0x6001234")]
		[Address(RVA = "0x48C1A4", Offset = "0x48C1A4", VA = "0x48C1A4")]
		set
		{
		}
	}

	[Token(Token = "0x1700017D")]
	public byte byValueMsb
	{
		[Token(Token = "0x6001237")]
		[Address(RVA = "0x48C358", Offset = "0x48C358", VA = "0x48C358")]
		get
		{
			return default(byte);
		}
		[Token(Token = "0x6001236")]
		[Address(RVA = "0x48C2C4", Offset = "0x48C2C4", VA = "0x48C2C4")]
		set
		{
		}
	}

	[Token(Token = "0x1700017E")]
	public byte byAftertouchNote
	{
		[Token(Token = "0x6001239")]
		[Address(RVA = "0x48C478", Offset = "0x48C478", VA = "0x48C478")]
		get
		{
			return default(byte);
		}
		[Token(Token = "0x6001238")]
		[Address(RVA = "0x48C3E4", Offset = "0x48C3E4", VA = "0x48C3E4")]
		set
		{
		}
	}

	[Token(Token = "0x1700017F")]
	public byte byNoteAftertouchValue
	{
		[Token(Token = "0x600123B")]
		[Address(RVA = "0x48C598", Offset = "0x48C598", VA = "0x48C598")]
		get
		{
			return default(byte);
		}
		[Token(Token = "0x600123A")]
		[Address(RVA = "0x48C504", Offset = "0x48C504", VA = "0x48C504")]
		set
		{
		}
	}

	[Token(Token = "0x17000180")]
	public byte byChanAftertouchValue
	{
		[Token(Token = "0x600123D")]
		[Address(RVA = "0x48C6B8", Offset = "0x48C6B8", VA = "0x48C6B8")]
		get
		{
			return default(byte);
		}
		[Token(Token = "0x600123C")]
		[Address(RVA = "0x48C624", Offset = "0x48C624", VA = "0x48C624")]
		set
		{
		}
	}

	[Token(Token = "0x17000181")]
	public byte byProgramNum
	{
		[Token(Token = "0x600123F")]
		[Address(RVA = "0x48C7D8", Offset = "0x48C7D8", VA = "0x48C7D8")]
		get
		{
			return default(byte);
		}
		[Token(Token = "0x600123E")]
		[Address(RVA = "0x48C744", Offset = "0x48C744", VA = "0x48C744")]
		set
		{
		}
	}

	[Token(Token = "0x6001214")]
	[Address(RVA = "0x48A924", Offset = "0x48A924", VA = "0x48A924")]
	internal AkMIDIEvent(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x6001215")]
	[Address(RVA = "0x48A94C", Offset = "0x48A94C", VA = "0x48A94C")]
	public AkMIDIEvent()
	{
	}

	[Token(Token = "0x6001216")]
	[Address(RVA = "0x48A9EC", Offset = "0x48A9EC", VA = "0x48A9EC")]
	internal static IntPtr getCPtr(AkMIDIEvent obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6001217")]
	[Address(RVA = "0x48AA44", Offset = "0x48AA44", VA = "0x48AA44", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x6001218")]
	[Address(RVA = "0x48AA70", Offset = "0x48AA70", VA = "0x48AA70", Slot = "1")]
	~AkMIDIEvent()
	{
	}

	[Token(Token = "0x6001219")]
	[Address(RVA = "0x48AAD0", Offset = "0x48AAD0", VA = "0x48AAD0", Slot = "6")]
	public virtual void Dispose()
	{
	}
}
[Token(Token = "0x2000238")]
public class AkMIDIEventCallbackInfo : AkEventCallbackInfo
{
	[Token(Token = "0x4000E7A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private IntPtr swigCPtr;

	[Token(Token = "0x1700018E")]
	public byte byChan
	{
		[Token(Token = "0x6001288")]
		[Address(RVA = "0x271B30", Offset = "0x271B30", VA = "0x271B30")]
		get
		{
			return default(byte);
		}
	}

	[Token(Token = "0x1700018F")]
	public byte byParam1
	{
		[Token(Token = "0x6001289")]
		[Address(RVA = "0x271C74", Offset = "0x271C74", VA = "0x271C74")]
		get
		{
			return default(byte);
		}
	}

	[Token(Token = "0x17000190")]
	public byte byParam2
	{
		[Token(Token = "0x600128A")]
		[Address(RVA = "0x271DB8", Offset = "0x271DB8", VA = "0x271DB8")]
		get
		{
			return default(byte);
		}
	}

	[Token(Token = "0x17000191")]
	public AkMIDIEventTypes byType
	{
		[Token(Token = "0x600128B")]
		[Address(RVA = "0x271EFC", Offset = "0x271EFC", VA = "0x271EFC")]
		get
		{
			return default(AkMIDIEventTypes);
		}
	}

	[Token(Token = "0x17000192")]
	public byte byOnOffNote
	{
		[Token(Token = "0x600128C")]
		[Address(RVA = "0x272040", Offset = "0x272040", VA = "0x272040")]
		get
		{
			return default(byte);
		}
	}

	[Token(Token = "0x17000193")]
	public byte byVelocity
	{
		[Token(Token = "0x600128D")]
		[Address(RVA = "0x272184", Offset = "0x272184", VA = "0x272184")]
		get
		{
			return default(byte);
		}
	}

	[Token(Token = "0x17000194")]
	public AkMIDICcTypes byCc
	{
		[Token(Token = "0x600128E")]
		[Address(RVA = "0x2722C8", Offset = "0x2722C8", VA = "0x2722C8")]
		get
		{
			return default(AkMIDICcTypes);
		}
	}

	[Token(Token = "0x17000195")]
	public byte byCcValue
	{
		[Token(Token = "0x600128F")]
		[Address(RVA = "0x27240C", Offset = "0x27240C", VA = "0x27240C")]
		get
		{
			return default(byte);
		}
	}

	[Token(Token = "0x17000196")]
	public byte byValueLsb
	{
		[Token(Token = "0x6001290")]
		[Address(RVA = "0x272550", Offset = "0x272550", VA = "0x272550")]
		get
		{
			return default(byte);
		}
	}

	[Token(Token = "0x17000197")]
	public byte byValueMsb
	{
		[Token(Token = "0x6001291")]
		[Address(RVA = "0x272694", Offset = "0x272694", VA = "0x272694")]
		get
		{
			return default(byte);
		}
	}

	[Token(Token = "0x17000198")]
	public byte byAftertouchNote
	{
		[Token(Token = "0x6001292")]
		[Address(RVA = "0x2727D8", Offset = "0x2727D8", VA = "0x2727D8")]
		get
		{
			return default(byte);
		}
	}

	[Token(Token = "0x17000199")]
	public byte byNoteAftertouchValue
	{
		[Token(Token = "0x6001293")]
		[Address(RVA = "0x27291C", Offset = "0x27291C", VA = "0x27291C")]
		get
		{
			return default(byte);
		}
	}

	[Token(Token = "0x1700019A")]
	public byte byChanAftertouchValue
	{
		[Token(Token = "0x6001294")]
		[Address(RVA = "0x272A60", Offset = "0x272A60", VA = "0x272A60")]
		get
		{
			return default(byte);
		}
	}

	[Token(Token = "0x1700019B")]
	public byte byProgramNum
	{
		[Token(Token = "0x6001295")]
		[Address(RVA = "0x272BA4", Offset = "0x272BA4", VA = "0x272BA4")]
		get
		{
			return default(byte);
		}
	}

	[Token(Token = "0x6001282")]
	[Address(RVA = "0x27154C", Offset = "0x27154C", VA = "0x27154C")]
	internal AkMIDIEventCallbackInfo(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x6001283")]
	[Address(RVA = "0x2716AC", Offset = "0x2716AC", VA = "0x2716AC")]
	public AkMIDIEventCallbackInfo()
	{
	}

	[Token(Token = "0x6001284")]
	[Address(RVA = "0x2717E8", Offset = "0x2717E8", VA = "0x2717E8")]
	internal static IntPtr getCPtr(AkMIDIEventCallbackInfo obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6001285")]
	[Address(RVA = "0x271840", Offset = "0x271840", VA = "0x271840", Slot = "5")]
	internal override void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x6001286")]
	[Address(RVA = "0x2718D8", Offset = "0x2718D8", VA = "0x2718D8", Slot = "1")]
	~AkMIDIEventCallbackInfo()
	{
	}

	[Token(Token = "0x6001287")]
	[Address(RVA = "0x271944", Offset = "0x271944", VA = "0x271944", Slot = "6")]
	public override void Dispose()
	{
	}
}
[Token(Token = "0x2000239")]
public enum AkMIDIEventTypes
{
	[Token(Token = "0x4000E7C")]
	NOTE_OFF = 128,
	[Token(Token = "0x4000E7D")]
	NOTE_ON = 144,
	[Token(Token = "0x4000E7E")]
	NOTE_AFTERTOUCH = 160,
	[Token(Token = "0x4000E7F")]
	CONTROLLER = 176,
	[Token(Token = "0x4000E80")]
	PROGRAM_CHANGE = 192,
	[Token(Token = "0x4000E81")]
	CHANNEL_AFTERTOUCH = 208,
	[Token(Token = "0x4000E82")]
	PITCH_BEND = 224,
	[Token(Token = "0x4000E83")]
	SYSEX = 240,
	[Token(Token = "0x4000E84")]
	ESCAPE = 247,
	[Token(Token = "0x4000E85")]
	META = 255
}
[Token(Token = "0x200023A")]
public class AkMIDIPost : AkMIDIEvent
{
	[Token(Token = "0x4000E86")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x1700019C")]
	public uint uOffset
	{
		[Token(Token = "0x600129D")]
		[Address(RVA = "0x273414", Offset = "0x273414", VA = "0x273414")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x600129C")]
		[Address(RVA = "0x2732C0", Offset = "0x2732C0", VA = "0x2732C0")]
		set
		{
		}
	}

	[Token(Token = "0x6001296")]
	[Address(RVA = "0x272CE8", Offset = "0x272CE8", VA = "0x272CE8")]
	internal AkMIDIPost(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x6001297")]
	[Address(RVA = "0x272E48", Offset = "0x272E48", VA = "0x272E48")]
	public AkMIDIPost()
	{
	}

	[Token(Token = "0x6001298")]
	[Address(RVA = "0x272F84", Offset = "0x272F84", VA = "0x272F84")]
	internal static IntPtr getCPtr(AkMIDIPost obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6001299")]
	[Address(RVA = "0x272FDC", Offset = "0x272FDC", VA = "0x272FDC", Slot = "5")]
	internal override void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x600129A")]
	[Address(RVA = "0x273074", Offset = "0x273074", VA = "0x273074", Slot = "1")]
	~AkMIDIPost()
	{
	}

	[Token(Token = "0x600129B")]
	[Address(RVA = "0x2730D4", Offset = "0x2730D4", VA = "0x2730D4", Slot = "6")]
	public override void Dispose()
	{
	}

	[Token(Token = "0x600129E")]
	[Address(RVA = "0x273558", Offset = "0x273558", VA = "0x273558")]
	public AKRESULT PostOnEvent(uint in_eventID, GameObject in_gameObjectID, uint in_uNumPosts)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600129F")]
	[Address(RVA = "0x2737C0", Offset = "0x2737C0", VA = "0x2737C0")]
	public void Clone(AkMIDIPost other)
	{
	}

	[Token(Token = "0x60012A0")]
	[Address(RVA = "0x27395C", Offset = "0x27395C", VA = "0x27395C")]
	public static int GetSizeOf()
	{
		return default(int);
	}
}
[Token(Token = "0x200023B")]
public enum AkMonitorErrorCode
{
	[Token(Token = "0x4000E88")]
	ErrorCode_NoError,
	[Token(Token = "0x4000E89")]
	ErrorCode_FileNotFound,
	[Token(Token = "0x4000E8A")]
	ErrorCode_CannotOpenFile,
	[Token(Token = "0x4000E8B")]
	ErrorCode_CannotStartStreamNoMemory,
	[Token(Token = "0x4000E8C")]
	ErrorCode_IODevice,
	[Token(Token = "0x4000E8D")]
	ErrorCode_IncompatibleIOSettings,
	[Token(Token = "0x4000E8E")]
	ErrorCode_PluginUnsupportedChannelConfiguration,
	[Token(Token = "0x4000E8F")]
	ErrorCode_PluginMediaUnavailable,
	[Token(Token = "0x4000E90")]
	ErrorCode_PluginInitialisationFailed,
	[Token(Token = "0x4000E91")]
	ErrorCode_PluginProcessingFailed,
	[Token(Token = "0x4000E92")]
	ErrorCode_PluginExecutionInvalid,
	[Token(Token = "0x4000E93")]
	ErrorCode_PluginAllocationFailed,
	[Token(Token = "0x4000E94")]
	ErrorCode_VorbisRequireSeekTable,
	[Token(Token = "0x4000E95")]
	ErrorCode_VorbisDecodeError,
	[Token(Token = "0x4000E96")]
	ErrorCode_AACDecodeError,
	[Token(Token = "0x4000E97")]
	ErrorCode_xWMACreateDecoderFailed,
	[Token(Token = "0x4000E98")]
	ErrorCode_ATRAC9CreateDecoderFailed,
	[Token(Token = "0x4000E99")]
	ErrorCode_ATRAC9CreateDecoderFailedChShortage,
	[Token(Token = "0x4000E9A")]
	ErrorCode_ATRAC9DecodeFailed,
	[Token(Token = "0x4000E9B")]
	ErrorCode_ATRAC9ClearContextFailed,
	[Token(Token = "0x4000E9C")]
	ErrorCode_ATRAC9LoopSectionTooSmall,
	[Token(Token = "0x4000E9D")]
	ErrorCode_InvalidAudioFileHeader,
	[Token(Token = "0x4000E9E")]
	ErrorCode_AudioFileHeaderTooLarge,
	[Token(Token = "0x4000E9F")]
	ErrorCode_FileTooSmall,
	[Token(Token = "0x4000EA0")]
	ErrorCode_TransitionNotAccurateChannel,
	[Token(Token = "0x4000EA1")]
	ErrorCode_TransitionNotAccurateStarvation,
	[Token(Token = "0x4000EA2")]
	ErrorCode_NothingToPlay,
	[Token(Token = "0x4000EA3")]
	ErrorCode_PlayFailed,
	[Token(Token = "0x4000EA4")]
	ErrorCode_StingerCouldNotBeScheduled,
	[Token(Token = "0x4000EA5")]
	ErrorCode_TooLongSegmentLookAhead,
	[Token(Token = "0x4000EA6")]
	ErrorCode_CannotScheduleMusicSwitch,
	[Token(Token = "0x4000EA7")]
	ErrorCode_TooManySimultaneousMusicSegments,
	[Token(Token = "0x4000EA8")]
	ErrorCode_PlaylistStoppedForEditing,
	[Token(Token = "0x4000EA9")]
	ErrorCode_MusicClipsRescheduledAfterTrackEdit,
	[Token(Token = "0x4000EAA")]
	ErrorCode_CannotPlaySource_Create,
	[Token(Token = "0x4000EAB")]
	ErrorCode_CannotPlaySource_VirtualOff,
	[Token(Token = "0x4000EAC")]
	ErrorCode_CannotPlaySource_TimeSkip,
	[Token(Token = "0x4000EAD")]
	ErrorCode_CannotPlaySource_InconsistentState,
	[Token(Token = "0x4000EAE")]
	ErrorCode_MediaNotLoaded,
	[Token(Token = "0x4000EAF")]
	ErrorCode_VoiceStarving,
	[Token(Token = "0x4000EB0")]
	ErrorCode_StreamingSourceStarving,
	[Token(Token = "0x4000EB1")]
	ErrorCode_XMADecoderSourceStarving,
	[Token(Token = "0x4000EB2")]
	ErrorCode_XMADecodingError,
	[Token(Token = "0x4000EB3")]
	ErrorCode_InvalidXMAData,
	[Token(Token = "0x4000EB4")]
	ErrorCode_PluginNotRegistered,
	[Token(Token = "0x4000EB5")]
	ErrorCode_CodecNotRegistered,
	[Token(Token = "0x4000EB6")]
	ErrorCode_PluginVersionMismatch,
	[Token(Token = "0x4000EB7")]
	ErrorCode_EventIDNotFound,
	[Token(Token = "0x4000EB8")]
	ErrorCode_InvalidGroupID,
	[Token(Token = "0x4000EB9")]
	ErrorCode_SelectedChildNotAvailable,
	[Token(Token = "0x4000EBA")]
	ErrorCode_SelectedNodeNotAvailable,
	[Token(Token = "0x4000EBB")]
	ErrorCode_SelectedMediaNotAvailable,
	[Token(Token = "0x4000EBC")]
	ErrorCode_NoValidSwitch,
	[Token(Token = "0x4000EBD")]
	ErrorCode_SelectedNodeNotAvailablePlay,
	[Token(Token = "0x4000EBE")]
	ErrorCode_FeedbackVoiceStarving,
	[Token(Token = "0x4000EBF")]
	ErrorCode_BankLoadFailed,
	[Token(Token = "0x4000EC0")]
	ErrorCode_BankUnloadFailed,
	[Token(Token = "0x4000EC1")]
	ErrorCode_ErrorWhileLoadingBank,
	[Token(Token = "0x4000EC2")]
	ErrorCode_InsufficientSpaceToLoadBank,
	[Token(Token = "0x4000EC3")]
	ErrorCode_LowerEngineCommandListFull,
	[Token(Token = "0x4000EC4")]
	ErrorCode_SeekNoMarker,
	[Token(Token = "0x4000EC5")]
	ErrorCode_CannotSeekContinuous,
	[Token(Token = "0x4000EC6")]
	ErrorCode_SeekAfterEof,
	[Token(Token = "0x4000EC7")]
	ErrorCode_UnknownGameObject,
	[Token(Token = "0x4000EC8")]
	ErrorCode_UnknownEmitter,
	[Token(Token = "0x4000EC9")]
	ErrorCode_UnknownListener,
	[Token(Token = "0x4000ECA")]
	ErrorCode_GameObjectIsNotListener,
	[Token(Token = "0x4000ECB")]
	ErrorCode_GameObjectIsNotEmitter,
	[Token(Token = "0x4000ECC")]
	ErrorCode_UnknownGameObjectEvent,
	[Token(Token = "0x4000ECD")]
	ErrorCode_GameObjectIsNotEmitterEvent,
	[Token(Token = "0x4000ECE")]
	ErrorCode_ExternalSourceNotResolved,
	[Token(Token = "0x4000ECF")]
	ErrorCode_FileFormatMismatch,
	[Token(Token = "0x4000ED0")]
	ErrorCode_CommandQueueFull,
	[Token(Token = "0x4000ED1")]
	ErrorCode_CommandTooLarge,
	[Token(Token = "0x4000ED2")]
	ErrorCode_XMACreateDecoderLimitReached,
	[Token(Token = "0x4000ED3")]
	ErrorCode_XMAStreamBufferTooSmall,
	[Token(Token = "0x4000ED4")]
	ErrorCode_ModulatorScopeError_Inst,
	[Token(Token = "0x4000ED5")]
	ErrorCode_ModulatorScopeError_Obj,
	[Token(Token = "0x4000ED6")]
	ErrorCode_SeekAfterEndOfPlaylist,
	[Token(Token = "0x4000ED7")]
	ErrorCode_OpusRequireSeekTable,
	[Token(Token = "0x4000ED8")]
	ErrorCode_OpusDecodeError,
	[Token(Token = "0x4000ED9")]
	ErrorCode_OpusCreateDecoderFailed,
	[Token(Token = "0x4000EDA")]
	ErrorCode_SourcePluginNotFound,
	[Token(Token = "0x4000EDB")]
	ErrorCode_VirtualVoiceLimit,
	[Token(Token = "0x4000EDC")]
	ErrorCode_AudioDeviceShareSetNotFound,
	[Token(Token = "0x4000EDD")]
	ErrorCode_NotEnoughMemoryToStart,
	[Token(Token = "0x4000EDE")]
	ErrorCode_UnkownOpusError,
	[Token(Token = "0x4000EDF")]
	ErrorCode_AudioDeviceInitFailure,
	[Token(Token = "0x4000EE0")]
	Num_ErrorCodes
}
[Token(Token = "0x200023C")]
public enum AkMonitorErrorLevel
{
	[Token(Token = "0x4000EE2")]
	ErrorLevel_Message = 1,
	[Token(Token = "0x4000EE3")]
	ErrorLevel_Error,
	[Token(Token = "0x4000EE4")]
	ErrorLevel_All
}
[Token(Token = "0x200023D")]
public class AkMonitoringCallbackInfo : IDisposable
{
	[Token(Token = "0x4000EE5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private IntPtr swigCPtr;

	[Token(Token = "0x4000EE6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	protected bool swigCMemOwn;

	[Token(Token = "0x1700019D")]
	public AkMonitorErrorCode errorCode
	{
		[Token(Token = "0x60012A7")]
		[Address(RVA = "0x27456C", Offset = "0x27456C", VA = "0x27456C")]
		get
		{
			return default(AkMonitorErrorCode);
		}
	}

	[Token(Token = "0x1700019E")]
	public AkMonitorErrorLevel errorLevel
	{
		[Token(Token = "0x60012A8")]
		[Address(RVA = "0x2746B0", Offset = "0x2746B0", VA = "0x2746B0")]
		get
		{
			return default(AkMonitorErrorLevel);
		}
	}

	[Token(Token = "0x1700019F")]
	public uint playingID
	{
		[Token(Token = "0x60012A9")]
		[Address(RVA = "0x2747F4", Offset = "0x2747F4", VA = "0x2747F4")]
		get
		{
			return default(uint);
		}
	}

	[Token(Token = "0x170001A0")]
	public ulong gameObjID
	{
		[Token(Token = "0x60012AA")]
		[Address(RVA = "0x274938", Offset = "0x274938", VA = "0x274938")]
		get
		{
			return default(ulong);
		}
	}

	[Token(Token = "0x170001A1")]
	public string message
	{
		[Token(Token = "0x60012AB")]
		[Address(RVA = "0x274A7C", Offset = "0x274A7C", VA = "0x274A7C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60012A1")]
	[Address(RVA = "0x274138", Offset = "0x274138", VA = "0x274138")]
	internal AkMonitoringCallbackInfo(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x60012A2")]
	[Address(RVA = "0x274160", Offset = "0x274160", VA = "0x274160")]
	public AkMonitoringCallbackInfo()
	{
	}

	[Token(Token = "0x60012A3")]
	[Address(RVA = "0x2742A8", Offset = "0x2742A8", VA = "0x2742A8")]
	internal static IntPtr getCPtr(AkMonitoringCallbackInfo obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x60012A4")]
	[Address(RVA = "0x274300", Offset = "0x274300", VA = "0x274300", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x60012A5")]
	[Address(RVA = "0x27432C", Offset = "0x27432C", VA = "0x27432C", Slot = "1")]
	~AkMonitoringCallbackInfo()
	{
	}

	[Token(Token = "0x60012A6")]
	[Address(RVA = "0x27438C", Offset = "0x27438C", VA = "0x27438C", Slot = "6")]
	public virtual void Dispose()
	{
	}
}
[Token(Token = "0x200023E")]
public enum AkMultiPositionType
{
	[Token(Token = "0x4000EE8")]
	MultiPositionType_SingleSource,
	[Token(Token = "0x4000EE9")]
	MultiPositionType_MultiSources,
	[Token(Token = "0x4000EEA")]
	MultiPositionType_MultiDirections
}
[Token(Token = "0x200023F")]
public class AkMusicPlaylistCallbackInfo : AkEventCallbackInfo
{
	[Token(Token = "0x4000EEB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private IntPtr swigCPtr;

	[Token(Token = "0x170001A2")]
	public uint playlistID
	{
		[Token(Token = "0x60012B2")]
		[Address(RVA = "0x2752F4", Offset = "0x2752F4", VA = "0x2752F4")]
		get
		{
			return default(uint);
		}
	}

	[Token(Token = "0x170001A3")]
	public uint uNumPlaylistItems
	{
		[Token(Token = "0x60012B3")]
		[Address(RVA = "0x275438", Offset = "0x275438", VA = "0x275438")]
		get
		{
			return default(uint);
		}
	}

	[Token(Token = "0x170001A4")]
	public uint uPlaylistSelection
	{
		[Token(Token = "0x60012B4")]
		[Address(RVA = "0x27557C", Offset = "0x27557C", VA = "0x27557C")]
		get
		{
			return default(uint);
		}
	}

	[Token(Token = "0x170001A5")]
	public uint uPlaylistItemDone
	{
		[Token(Token = "0x60012B5")]
		[Address(RVA = "0x2756C0", Offset = "0x2756C0", VA = "0x2756C0")]
		get
		{
			return default(uint);
		}
	}

	[Token(Token = "0x60012AC")]
	[Address(RVA = "0x274D10", Offset = "0x274D10", VA = "0x274D10")]
	internal AkMusicPlaylistCallbackInfo(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x60012AD")]
	[Address(RVA = "0x274E70", Offset = "0x274E70", VA = "0x274E70")]
	public AkMusicPlaylistCallbackInfo()
	{
	}

	[Token(Token = "0x60012AE")]
	[Address(RVA = "0x274FAC", Offset = "0x274FAC", VA = "0x274FAC")]
	internal static IntPtr getCPtr(AkMusicPlaylistCallbackInfo obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x60012AF")]
	[Address(RVA = "0x275004", Offset = "0x275004", VA = "0x275004", Slot = "5")]
	internal override void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x60012B0")]
	[Address(RVA = "0x27509C", Offset = "0x27509C", VA = "0x27509C", Slot = "1")]
	~AkMusicPlaylistCallbackInfo()
	{
	}

	[Token(Token = "0x60012B1")]
	[Address(RVA = "0x275108", Offset = "0x275108", VA = "0x275108", Slot = "6")]
	public override void Dispose()
	{
	}
}
[Token(Token = "0x2000240")]
public class AkMusicSettings : IDisposable
{
	[Token(Token = "0x4000EEC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private IntPtr swigCPtr;

	[Token(Token = "0x4000EED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	protected bool swigCMemOwn;

	[Token(Token = "0x170001A6")]
	public float fStreamingLookAheadRatio
	{
		[Token(Token = "0x60012BD")]
		[Address(RVA = "0x275D8C", Offset = "0x275D8C", VA = "0x275D8C")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60012BC")]
		[Address(RVA = "0x275C38", Offset = "0x275C38", VA = "0x275C38")]
		set
		{
		}
	}

	[Token(Token = "0x60012B6")]
	[Address(RVA = "0x275804", Offset = "0x275804", VA = "0x275804")]
	internal AkMusicSettings(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x60012B7")]
	[Address(RVA = "0x27582C", Offset = "0x27582C", VA = "0x27582C")]
	public AkMusicSettings()
	{
	}

	[Token(Token = "0x60012B8")]
	[Address(RVA = "0x275974", Offset = "0x275974", VA = "0x275974")]
	internal static IntPtr getCPtr(AkMusicSettings obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x60012B9")]
	[Address(RVA = "0x2759CC", Offset = "0x2759CC", VA = "0x2759CC", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x60012BA")]
	[Address(RVA = "0x2759F8", Offset = "0x2759F8", VA = "0x2759F8", Slot = "1")]
	~AkMusicSettings()
	{
	}

	[Token(Token = "0x60012BB")]
	[Address(RVA = "0x275A58", Offset = "0x275A58", VA = "0x275A58", Slot = "6")]
	public virtual void Dispose()
	{
	}
}
[Token(Token = "0x2000241")]
public class AkMusicSyncCallbackInfo : AkCallbackInfo
{
	[Token(Token = "0x4000EEE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x170001A7")]
	public uint playingID
	{
		[Token(Token = "0x60012C4")]
		[Address(RVA = "0x2764A8", Offset = "0x2764A8", VA = "0x2764A8")]
		get
		{
			return default(uint);
		}
	}

	[Token(Token = "0x170001A8")]
	public int segmentInfo_iCurrentPosition
	{
		[Token(Token = "0x60012C5")]
		[Address(RVA = "0x2765EC", Offset = "0x2765EC", VA = "0x2765EC")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x170001A9")]
	public int segmentInfo_iPreEntryDuration
	{
		[Token(Token = "0x60012C6")]
		[Address(RVA = "0x276730", Offset = "0x276730", VA = "0x276730")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x170001AA")]
	public int segmentInfo_iActiveDuration
	{
		[Token(Token = "0x60012C7")]
		[Address(RVA = "0x276874", Offset = "0x276874", VA = "0x276874")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x170001AB")]
	public int segmentInfo_iPostExitDuration
	{
		[Token(Token = "0x60012C8")]
		[Address(RVA = "0x2769B8", Offset = "0x2769B8", VA = "0x2769B8")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x170001AC")]
	public int segmentInfo_iRemainingLookAheadTime
	{
		[Token(Token = "0x60012C9")]
		[Address(RVA = "0x276AFC", Offset = "0x276AFC", VA = "0x276AFC")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x170001AD")]
	public float segmentInfo_fBeatDuration
	{
		[Token(Token = "0x60012CA")]
		[Address(RVA = "0x276C40", Offset = "0x276C40", VA = "0x276C40")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x170001AE")]
	public float segmentInfo_fBarDuration
	{
		[Token(Token = "0x60012CB")]
		[Address(RVA = "0x276D84", Offset = "0x276D84", VA = "0x276D84")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x170001AF")]
	public float segmentInfo_fGridDuration
	{
		[Token(Token = "0x60012CC")]
		[Address(RVA = "0x276EC8", Offset = "0x276EC8", VA = "0x276EC8")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x170001B0")]
	public float segmentInfo_fGridOffset
	{
		[Token(Token = "0x60012CD")]
		[Address(RVA = "0x27700C", Offset = "0x27700C", VA = "0x27700C")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x170001B1")]
	public AkCallbackType musicSyncType
	{
		[Token(Token = "0x60012CE")]
		[Address(RVA = "0x277150", Offset = "0x277150", VA = "0x277150")]
		get
		{
			return default(AkCallbackType);
		}
	}

	[Token(Token = "0x170001B2")]
	public string userCueName
	{
		[Token(Token = "0x60012CF")]
		[Address(RVA = "0x277294", Offset = "0x277294", VA = "0x277294")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60012BE")]
	[Address(RVA = "0x275ED0", Offset = "0x275ED0", VA = "0x275ED0")]
	internal AkMusicSyncCallbackInfo(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x60012BF")]
	[Address(RVA = "0x276030", Offset = "0x276030", VA = "0x276030")]
	public AkMusicSyncCallbackInfo()
	{
	}

	[Token(Token = "0x60012C0")]
	[Address(RVA = "0x27616C", Offset = "0x27616C", VA = "0x27616C")]
	internal static IntPtr getCPtr(AkMusicSyncCallbackInfo obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x60012C1")]
	[Address(RVA = "0x2761C4", Offset = "0x2761C4", VA = "0x2761C4", Slot = "5")]
	internal override void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x60012C2")]
	[Address(RVA = "0x27625C", Offset = "0x27625C", VA = "0x27625C", Slot = "1")]
	~AkMusicSyncCallbackInfo()
	{
	}

	[Token(Token = "0x60012C3")]
	[Address(RVA = "0x2762BC", Offset = "0x2762BC", VA = "0x2762BC", Slot = "6")]
	public override void Dispose()
	{
	}
}
[Token(Token = "0x2000242")]
public class AkObjectInfo : IDisposable
{
	[Token(Token = "0x4000EEF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private IntPtr swigCPtr;

	[Token(Token = "0x4000EF0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	protected bool swigCMemOwn;

	[Token(Token = "0x170001B3")]
	public uint objID
	{
		[Token(Token = "0x60012D7")]
		[Address(RVA = "0x277A20", Offset = "0x277A20", VA = "0x277A20")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x60012D6")]
		[Address(RVA = "0x2778CC", Offset = "0x2778CC", VA = "0x2778CC")]
		set
		{
		}
	}

	[Token(Token = "0x170001B4")]
	public uint parentID
	{
		[Token(Token = "0x60012D9")]
		[Address(RVA = "0x277CB8", Offset = "0x277CB8", VA = "0x277CB8")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x60012D8")]
		[Address(RVA = "0x277B64", Offset = "0x277B64", VA = "0x277B64")]
		set
		{
		}
	}

	[Token(Token = "0x170001B5")]
	public int iDepth
	{
		[Token(Token = "0x60012DB")]
		[Address(RVA = "0x277F50", Offset = "0x277F50", VA = "0x277F50")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60012DA")]
		[Address(RVA = "0x277DFC", Offset = "0x277DFC", VA = "0x277DFC")]
		set
		{
		}
	}

	[Token(Token = "0x60012D0")]
	[Address(RVA = "0x277498", Offset = "0x277498", VA = "0x277498")]
	internal AkObjectInfo(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x60012D1")]
	[Address(RVA = "0x2774C0", Offset = "0x2774C0", VA = "0x2774C0")]
	public AkObjectInfo()
	{
	}

	[Token(Token = "0x60012D2")]
	[Address(RVA = "0x277608", Offset = "0x277608", VA = "0x277608")]
	internal static IntPtr getCPtr(AkObjectInfo obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x60012D3")]
	[Address(RVA = "0x277660", Offset = "0x277660", VA = "0x277660", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x60012D4")]
	[Address(RVA = "0x27768C", Offset = "0x27768C", VA = "0x27768C", Slot = "1")]
	~AkObjectInfo()
	{
	}

	[Token(Token = "0x60012D5")]
	[Address(RVA = "0x2776EC", Offset = "0x2776EC", VA = "0x2776EC", Slot = "6")]
	public virtual void Dispose()
	{
	}
}
[Token(Token = "0x2000243")]
public class AkObstructionOcclusionValues : IDisposable
{
	[Token(Token = "0x4000EF1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private IntPtr swigCPtr;

	[Token(Token = "0x4000EF2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	protected bool swigCMemOwn;

	[Token(Token = "0x170001B6")]
	public float occlusion
	{
		[Token(Token = "0x60012E3")]
		[Address(RVA = "0x2795BC", Offset = "0x2795BC", VA = "0x2795BC")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60012E2")]
		[Address(RVA = "0x279468", Offset = "0x279468", VA = "0x279468")]
		set
		{
		}
	}

	[Token(Token = "0x170001B7")]
	public float obstruction
	{
		[Token(Token = "0x60012E5")]
		[Address(RVA = "0x279854", Offset = "0x279854", VA = "0x279854")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60012E4")]
		[Address(RVA = "0x279700", Offset = "0x279700", VA = "0x279700")]
		set
		{
		}
	}

	[Token(Token = "0x60012DC")]
	[Address(RVA = "0x279034", Offset = "0x279034", VA = "0x279034")]
	internal AkObstructionOcclusionValues(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x60012DD")]
	[Address(RVA = "0x27905C", Offset = "0x27905C", VA = "0x27905C")]
	public AkObstructionOcclusionValues()
	{
	}

	[Token(Token = "0x60012DE")]
	[Address(RVA = "0x2791A4", Offset = "0x2791A4", VA = "0x2791A4")]
	internal static IntPtr getCPtr(AkObstructionOcclusionValues obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x60012DF")]
	[Address(RVA = "0x2791FC", Offset = "0x2791FC", VA = "0x2791FC", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x60012E0")]
	[Address(RVA = "0x279228", Offset = "0x279228", VA = "0x279228", Slot = "1")]
	~AkObstructionOcclusionValues()
	{
	}

	[Token(Token = "0x60012E1")]
	[Address(RVA = "0x279288", Offset = "0x279288", VA = "0x279288", Slot = "6")]
	public virtual void Dispose()
	{
	}
}
[Token(Token = "0x2000244")]
public class AkOutputSettings : IDisposable
{
	[Token(Token = "0x4000EF3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private IntPtr swigCPtr;

	[Token(Token = "0x4000EF4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	protected bool swigCMemOwn;

	[Token(Token = "0x170001B8")]
	public uint audioDeviceShareset
	{
		[Token(Token = "0x60012F1")]
		[Address(RVA = "0x27A5C8", Offset = "0x27A5C8", VA = "0x27A5C8")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x60012F0")]
		[Address(RVA = "0x27A474", Offset = "0x27A474", VA = "0x27A474")]
		set
		{
		}
	}

	[Token(Token = "0x170001B9")]
	public uint idDevice
	{
		[Token(Token = "0x60012F3")]
		[Address(RVA = "0x27A860", Offset = "0x27A860", VA = "0x27A860")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x60012F2")]
		[Address(RVA = "0x27A70C", Offset = "0x27A70C", VA = "0x27A70C")]
		set
		{
		}
	}

	[Token(Token = "0x170001BA")]
	public AkPanningRule ePanningRule
	{
		[Token(Token = "0x60012F5")]
		[Address(RVA = "0x27AAF8", Offset = "0x27AAF8", VA = "0x27AAF8")]
		get
		{
			return default(AkPanningRule);
		}
		[Token(Token = "0x60012F4")]
		[Address(RVA = "0x27A9A4", Offset = "0x27A9A4", VA = "0x27A9A4")]
		set
		{
		}
	}

	[Token(Token = "0x170001BB")]
	public AkChannelConfig channelConfig
	{
		[Token(Token = "0x60012F7")]
		[Address(RVA = "0x27ADA4", Offset = "0x27ADA4", VA = "0x27ADA4")]
		get
		{
			return null;
		}
		[Token(Token = "0x60012F6")]
		[Address(RVA = "0x27AC3C", Offset = "0x27AC3C", VA = "0x27AC3C")]
		set
		{
		}
	}

	[Token(Token = "0x60012E6")]
	[Address(RVA = "0x279998", Offset = "0x279998", VA = "0x279998")]
	internal AkOutputSettings(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x60012E7")]
	[Address(RVA = "0x2799C0", Offset = "0x2799C0", VA = "0x2799C0")]
	public AkOutputSettings()
	{
	}

	[Token(Token = "0x60012E8")]
	[Address(RVA = "0x279B08", Offset = "0x279B08", VA = "0x279B08")]
	public AkOutputSettings(string in_szDeviceShareSet, uint in_idDevice, AkChannelConfig in_channelConfig, AkPanningRule in_ePanning)
	{
	}

	[Token(Token = "0x60012E9")]
	[Address(RVA = "0x279CD8", Offset = "0x279CD8", VA = "0x279CD8")]
	public AkOutputSettings(string in_szDeviceShareSet, uint in_idDevice, AkChannelConfig in_channelConfig)
	{
	}

	[Token(Token = "0x60012EA")]
	[Address(RVA = "0x279E98", Offset = "0x279E98", VA = "0x279E98")]
	public AkOutputSettings(string in_szDeviceShareSet, uint in_idDevice)
	{
	}

	[Token(Token = "0x60012EB")]
	[Address(RVA = "0x27A02C", Offset = "0x27A02C", VA = "0x27A02C")]
	public AkOutputSettings(string in_szDeviceShareSet)
	{
	}

	[Token(Token = "0x60012EC")]
	[Address(RVA = "0x27A1B0", Offset = "0x27A1B0", VA = "0x27A1B0")]
	internal static IntPtr getCPtr(AkOutputSettings obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x60012ED")]
	[Address(RVA = "0x27A208", Offset = "0x27A208", VA = "0x27A208", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x60012EE")]
	[Address(RVA = "0x27A234", Offset = "0x27A234", VA = "0x27A234", Slot = "1")]
	~AkOutputSettings()
	{
	}

	[Token(Token = "0x60012EF")]
	[Address(RVA = "0x27A294", Offset = "0x27A294", VA = "0x27A294", Slot = "6")]
	public virtual void Dispose()
	{
	}
}
[Token(Token = "0x2000245")]
public enum AkPanningRule
{
	[Token(Token = "0x4000EF6")]
	AkPanningRule_Speakers,
	[Token(Token = "0x4000EF7")]
	AkPanningRule_Headphones
}
[Token(Token = "0x2000246")]
public class AkPathParams : IDisposable
{
	[Token(Token = "0x4000EF8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private IntPtr swigCPtr;

	[Token(Token = "0x4000EF9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	protected bool swigCMemOwn;

	[Token(Token = "0x170001BC")]
	public AkVector listenerPos
	{
		[Token(Token = "0x60012FF")]
		[Address(RVA = "0x27B4D4", Offset = "0x27B4D4", VA = "0x27B4D4")]
		get
		{
			return null;
		}
		[Token(Token = "0x60012FE")]
		[Address(RVA = "0x27B36C", Offset = "0x27B36C", VA = "0x27B36C")]
		set
		{
		}
	}

	[Token(Token = "0x170001BD")]
	public AkVector emitterPos
	{
		[Token(Token = "0x6001301")]
		[Address(RVA = "0x27B7D0", Offset = "0x27B7D0", VA = "0x27B7D0")]
		get
		{
			return null;
		}
		[Token(Token = "0x6001300")]
		[Address(RVA = "0x27B668", Offset = "0x27B668", VA = "0x27B668")]
		set
		{
		}
	}

	[Token(Token = "0x170001BE")]
	public uint numValidPaths
	{
		[Token(Token = "0x6001303")]
		[Address(RVA = "0x27BAB8", Offset = "0x27BAB8", VA = "0x27BAB8")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x6001302")]
		[Address(RVA = "0x27B964", Offset = "0x27B964", VA = "0x27B964")]
		set
		{
		}
	}

	[Token(Token = "0x60012F8")]
	[Address(RVA = "0x27AF38", Offset = "0x27AF38", VA = "0x27AF38")]
	internal AkPathParams(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x60012F9")]
	[Address(RVA = "0x27AF60", Offset = "0x27AF60", VA = "0x27AF60")]
	public AkPathParams()
	{
	}

	[Token(Token = "0x60012FA")]
	[Address(RVA = "0x27B0A8", Offset = "0x27B0A8", VA = "0x27B0A8")]
	internal static IntPtr getCPtr(AkPathParams obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x60012FB")]
	[Address(RVA = "0x27B100", Offset = "0x27B100", VA = "0x27B100", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x60012FC")]
	[Address(RVA = "0x27B12C", Offset = "0x27B12C", VA = "0x27B12C", Slot = "1")]
	~AkPathParams()
	{
	}

	[Token(Token = "0x60012FD")]
	[Address(RVA = "0x27B18C", Offset = "0x27B18C", VA = "0x27B18C", Slot = "6")]
	public virtual void Dispose()
	{
	}
}
[Token(Token = "0x2000247")]
public class AkPlaylist : AkPlaylistArray
{
	[Token(Token = "0x4000EFA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x6001304")]
	[Address(RVA = "0x27D8BC", Offset = "0x27D8BC", VA = "0x27D8BC")]
	internal AkPlaylist(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x6001305")]
	[Address(RVA = "0x27DA48", Offset = "0x27DA48", VA = "0x27DA48")]
	public AkPlaylist()
	{
	}

	[Token(Token = "0x6001306")]
	[Address(RVA = "0x27DB84", Offset = "0x27DB84", VA = "0x27DB84")]
	internal static IntPtr getCPtr(AkPlaylist obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6001307")]
	[Address(RVA = "0x27DBDC", Offset = "0x27DBDC", VA = "0x27DBDC", Slot = "5")]
	internal override void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x6001308")]
	[Address(RVA = "0x27DCAC", Offset = "0x27DCAC", VA = "0x27DCAC", Slot = "1")]
	~AkPlaylist()
	{
	}

	[Token(Token = "0x6001309")]
	[Address(RVA = "0x27DD64", Offset = "0x27DD64", VA = "0x27DD64", Slot = "6")]
	public override void Dispose()
	{
	}

	[Token(Token = "0x600130A")]
	[Address(RVA = "0x27E06C", Offset = "0x27E06C", VA = "0x27E06C")]
	public AKRESULT Enqueue(uint in_audioNodeID, int in_msDelay, IntPtr in_pCustomInfo, uint in_cExternals, AkExternalSourceInfo in_pExternalSources)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600130B")]
	[Address(RVA = "0x27E214", Offset = "0x27E214", VA = "0x27E214")]
	public AKRESULT Enqueue(uint in_audioNodeID, int in_msDelay, IntPtr in_pCustomInfo, uint in_cExternals)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600130C")]
	[Address(RVA = "0x27E398", Offset = "0x27E398", VA = "0x27E398")]
	public AKRESULT Enqueue(uint in_audioNodeID, int in_msDelay, IntPtr in_pCustomInfo)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600130D")]
	[Address(RVA = "0x27E510", Offset = "0x27E510", VA = "0x27E510")]
	public AKRESULT Enqueue(uint in_audioNodeID, int in_msDelay)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600130E")]
	[Address(RVA = "0x27E67C", Offset = "0x27E67C", VA = "0x27E67C")]
	public AKRESULT Enqueue(uint in_audioNodeID)
	{
		return default(AKRESULT);
	}
}
[Token(Token = "0x2000248")]
public class AkPlaylistArray : IDisposable
{
	[Token(Token = "0x4000EFB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private IntPtr swigCPtr;

	[Token(Token = "0x4000EFC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	protected bool swigCMemOwn;

	[Token(Token = "0x600130F")]
	[Address(RVA = "0x27DA20", Offset = "0x27DA20", VA = "0x27DA20")]
	internal AkPlaylistArray(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x6001310")]
	[Address(RVA = "0x27E7D0", Offset = "0x27E7D0", VA = "0x27E7D0")]
	public AkPlaylistArray()
	{
	}

	[Token(Token = "0x6001311")]
	[Address(RVA = "0x27E918", Offset = "0x27E918", VA = "0x27E918")]
	internal static IntPtr getCPtr(AkPlaylistArray obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6001312")]
	[Address(RVA = "0x27DC80", Offset = "0x27DC80", VA = "0x27DC80", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x6001313")]
	[Address(RVA = "0x27DD04", Offset = "0x27DD04", VA = "0x27DD04", Slot = "1")]
	~AkPlaylistArray()
	{
	}

	[Token(Token = "0x6001314")]
	[Address(RVA = "0x27DF4C", Offset = "0x27DF4C", VA = "0x27DF4C", Slot = "6")]
	public virtual void Dispose()
	{
	}

	[Token(Token = "0x6001315")]
	[Address(RVA = "0x27EA30", Offset = "0x27EA30", VA = "0x27EA30")]
	public AkIterator Begin()
	{
		return null;
	}

	[Token(Token = "0x6001316")]
	[Address(RVA = "0x27EBA4", Offset = "0x27EBA4", VA = "0x27EBA4")]
	public AkIterator End()
	{
		return null;
	}

	[Token(Token = "0x6001317")]
	[Address(RVA = "0x27ED18", Offset = "0x27ED18", VA = "0x27ED18")]
	public AkIterator FindEx(AkPlaylistItem in_Item)
	{
		return null;
	}

	[Token(Token = "0x6001318")]
	[Address(RVA = "0x27EF3C", Offset = "0x27EF3C", VA = "0x27EF3C")]
	public AkIterator Erase(AkIterator in_rIter)
	{
		return null;
	}

	[Token(Token = "0x6001319")]
	[Address(RVA = "0x27F0D4", Offset = "0x27F0D4", VA = "0x27F0D4")]
	public void Erase(uint in_uIndex)
	{
	}

	[Token(Token = "0x600131A")]
	[Address(RVA = "0x27F228", Offset = "0x27F228", VA = "0x27F228")]
	public AkIterator EraseSwap(AkIterator in_rIter)
	{
		return null;
	}

	[Token(Token = "0x600131B")]
	[Address(RVA = "0x27F3C0", Offset = "0x27F3C0", VA = "0x27F3C0")]
	public AKRESULT Reserve(uint in_ulReserve)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600131C")]
	[Address(RVA = "0x27F514", Offset = "0x27F514", VA = "0x27F514")]
	public uint Reserved()
	{
		return default(uint);
	}

	[Token(Token = "0x600131D")]
	[Address(RVA = "0x27F658", Offset = "0x27F658", VA = "0x27F658")]
	public void Term()
	{
	}

	[Token(Token = "0x600131E")]
	[Address(RVA = "0x27F79C", Offset = "0x27F79C", VA = "0x27F79C")]
	public uint Length()
	{
		return default(uint);
	}

	[Token(Token = "0x600131F")]
	[Address(RVA = "0x27F8E0", Offset = "0x27F8E0", VA = "0x27F8E0")]
	public AkPlaylistItem Data()
	{
		return null;
	}

	[Token(Token = "0x6001320")]
	[Address(RVA = "0x27FAA0", Offset = "0x27FAA0", VA = "0x27FAA0")]
	public bool IsEmpty()
	{
		return default(bool);
	}

	[Token(Token = "0x6001321")]
	[Address(RVA = "0x27FBEC", Offset = "0x27FBEC", VA = "0x27FBEC")]
	public AkPlaylistItem Exists(AkPlaylistItem in_Item)
	{
		return null;
	}

	[Token(Token = "0x6001322")]
	[Address(RVA = "0x27FDDC", Offset = "0x27FDDC", VA = "0x27FDDC")]
	public AkPlaylistItem AddLast()
	{
		return null;
	}

	[Token(Token = "0x6001323")]
	[Address(RVA = "0x27FF74", Offset = "0x27FF74", VA = "0x27FF74")]
	public AkPlaylistItem AddLast(AkPlaylistItem in_rItem)
	{
		return null;
	}

	[Token(Token = "0x6001324")]
	[Address(RVA = "0x280164", Offset = "0x280164", VA = "0x280164")]
	public AkPlaylistItem Last()
	{
		return null;
	}

	[Token(Token = "0x6001325")]
	[Address(RVA = "0x2802DC", Offset = "0x2802DC", VA = "0x2802DC")]
	public void RemoveLast()
	{
	}

	[Token(Token = "0x6001326")]
	[Address(RVA = "0x280420", Offset = "0x280420", VA = "0x280420")]
	public AKRESULT Remove(AkPlaylistItem in_rItem)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001327")]
	[Address(RVA = "0x2805BC", Offset = "0x2805BC", VA = "0x2805BC")]
	public AKRESULT RemoveSwap(AkPlaylistItem in_rItem)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001328")]
	[Address(RVA = "0x280758", Offset = "0x280758", VA = "0x280758")]
	public void RemoveAll()
	{
	}

	[Token(Token = "0x6001329")]
	[Address(RVA = "0x28089C", Offset = "0x28089C", VA = "0x28089C")]
	public AkPlaylistItem ItemAtIndex(uint uiIndex)
	{
		return null;
	}

	[Token(Token = "0x600132A")]
	[Address(RVA = "0x280A24", Offset = "0x280A24", VA = "0x280A24")]
	public AkPlaylistItem Insert(uint in_uIndex)
	{
		return null;
	}

	[Token(Token = "0x600132B")]
	[Address(RVA = "0x280BCC", Offset = "0x280BCC", VA = "0x280BCC")]
	public bool GrowArray(uint in_uGrowBy)
	{
		return default(bool);
	}

	[Token(Token = "0x600132C")]
	[Address(RVA = "0x280D28", Offset = "0x280D28", VA = "0x280D28")]
	public bool GrowArray()
	{
		return default(bool);
	}

	[Token(Token = "0x600132D")]
	[Address(RVA = "0x280E74", Offset = "0x280E74", VA = "0x280E74")]
	public bool Resize(uint in_uiSize)
	{
		return default(bool);
	}

	[Token(Token = "0x600132E")]
	[Address(RVA = "0x280FD0", Offset = "0x280FD0", VA = "0x280FD0")]
	public void Transfer(AkPlaylistArray in_rSource)
	{
	}

	[Token(Token = "0x600132F")]
	[Address(RVA = "0x28116C", Offset = "0x28116C", VA = "0x28116C")]
	public AKRESULT Copy(AkPlaylistArray in_rSource)
	{
		return default(AKRESULT);
	}
}
[Token(Token = "0x2000249")]
public class AkPlaylistItem : IDisposable
{
	[Token(Token = "0x4000EFD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private IntPtr swigCPtr;

	[Token(Token = "0x4000EFE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	protected bool swigCMemOwn;

	[Token(Token = "0x170001BF")]
	public uint audioNodeID
	{
		[Token(Token = "0x600133B")]
		[Address(RVA = "0x281EAC", Offset = "0x281EAC", VA = "0x281EAC")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x600133A")]
		[Address(RVA = "0x281D58", Offset = "0x281D58", VA = "0x281D58")]
		set
		{
		}
	}

	[Token(Token = "0x170001C0")]
	public int msDelay
	{
		[Token(Token = "0x600133D")]
		[Address(RVA = "0x282144", Offset = "0x282144", VA = "0x282144")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x600133C")]
		[Address(RVA = "0x281FF0", Offset = "0x281FF0", VA = "0x281FF0")]
		set
		{
		}
	}

	[Token(Token = "0x170001C1")]
	public IntPtr pCustomInfo
	{
		[Token(Token = "0x600133F")]
		[Address(RVA = "0x2823DC", Offset = "0x2823DC", VA = "0x2823DC")]
		get
		{
			return default(IntPtr);
		}
		[Token(Token = "0x600133E")]
		[Address(RVA = "0x282288", Offset = "0x282288", VA = "0x282288")]
		set
		{
		}
	}

	[Token(Token = "0x6001330")]
	[Address(RVA = "0x27FA78", Offset = "0x27FA78", VA = "0x27FA78")]
	internal AkPlaylistItem(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x6001331")]
	[Address(RVA = "0x281308", Offset = "0x281308", VA = "0x281308")]
	public AkPlaylistItem()
	{
	}

	[Token(Token = "0x6001332")]
	[Address(RVA = "0x281450", Offset = "0x281450", VA = "0x281450")]
	public AkPlaylistItem(AkPlaylistItem in_rCopy)
	{
	}

	[Token(Token = "0x6001333")]
	[Address(RVA = "0x27EE1C", Offset = "0x27EE1C", VA = "0x27EE1C")]
	internal static IntPtr getCPtr(AkPlaylistItem obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6001334")]
	[Address(RVA = "0x2815F8", Offset = "0x2815F8", VA = "0x2815F8", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x6001335")]
	[Address(RVA = "0x281624", Offset = "0x281624", VA = "0x281624", Slot = "1")]
	~AkPlaylistItem()
	{
	}

	[Token(Token = "0x6001336")]
	[Address(RVA = "0x281684", Offset = "0x281684", VA = "0x281684", Slot = "6")]
	public virtual void Dispose()
	{
	}

	[Token(Token = "0x6001337")]
	[Address(RVA = "0x281864", Offset = "0x281864", VA = "0x281864")]
	public AkPlaylistItem Assign(AkPlaylistItem in_rCopy)
	{
		return null;
	}

	[Token(Token = "0x6001338")]
	[Address(RVA = "0x281A34", Offset = "0x281A34", VA = "0x281A34")]
	public bool IsEqualTo(AkPlaylistItem in_rCopy)
	{
		return default(bool);
	}

	[Token(Token = "0x6001339")]
	[Address(RVA = "0x281BD8", Offset = "0x281BD8", VA = "0x281BD8")]
	public AKRESULT SetExternalSources(uint in_nExternalSrc, AkExternalSourceInfo in_pExternalSrc)
	{
		return default(AKRESULT);
	}
}
[Token(Token = "0x200024A")]
public enum AkPluginType
{
	[Token(Token = "0x4000F00")]
	AkPluginTypeNone = 0,
	[Token(Token = "0x4000F01")]
	AkPluginTypeCodec = 1,
	[Token(Token = "0x4000F02")]
	AkPluginTypeSource = 2,
	[Token(Token = "0x4000F03")]
	AkPluginTypeEffect = 3,
	[Token(Token = "0x4000F04")]
	AkPluginTypeMixer = 6,
	[Token(Token = "0x4000F05")]
	AkPluginTypeSink = 7,
	[Token(Token = "0x4000F06")]
	AkPluginTypeGlobalExtension = 8,
	[Token(Token = "0x4000F07")]
	AkPluginTypeMask = 15
}
[Token(Token = "0x200024B")]
public class AkPositioningInfo : IDisposable
{
	[Token(Token = "0x4000F08")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private IntPtr swigCPtr;

	[Token(Token = "0x4000F09")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	protected bool swigCMemOwn;

	[Token(Token = "0x170001C2")]
	public float fCenterPct
	{
		[Token(Token = "0x6001347")]
		[Address(RVA = "0x283130", Offset = "0x283130", VA = "0x283130")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6001346")]
		[Address(RVA = "0x282FDC", Offset = "0x282FDC", VA = "0x282FDC")]
		set
		{
		}
	}

	[Token(Token = "0x170001C3")]
	public AkSpeakerPanningType pannerType
	{
		[Token(Token = "0x6001349")]
		[Address(RVA = "0x2833C8", Offset = "0x2833C8", VA = "0x2833C8")]
		get
		{
			return default(AkSpeakerPanningType);
		}
		[Token(Token = "0x6001348")]
		[Address(RVA = "0x283274", Offset = "0x283274", VA = "0x283274")]
		set
		{
		}
	}

	[Token(Token = "0x170001C4")]
	public Ak3DPositionType e3dPositioningType
	{
		[Token(Token = "0x600134B")]
		[Address(RVA = "0x283660", Offset = "0x283660", VA = "0x283660")]
		get
		{
			return default(Ak3DPositionType);
		}
		[Token(Token = "0x600134A")]
		[Address(RVA = "0x28350C", Offset = "0x28350C", VA = "0x28350C")]
		set
		{
		}
	}

	[Token(Token = "0x170001C5")]
	public bool bHoldEmitterPosAndOrient
	{
		[Token(Token = "0x600134D")]
		[Address(RVA = "0x2838F8", Offset = "0x2838F8", VA = "0x2838F8")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600134C")]
		[Address(RVA = "0x2837A4", Offset = "0x2837A4", VA = "0x2837A4")]
		set
		{
		}
	}

	[Token(Token = "0x170001C6")]
	public Ak3DSpatializationMode e3DSpatializationMode
	{
		[Token(Token = "0x600134F")]
		[Address(RVA = "0x283B98", Offset = "0x283B98", VA = "0x283B98")]
		get
		{
			return default(Ak3DSpatializationMode);
		}
		[Token(Token = "0x600134E")]
		[Address(RVA = "0x283A44", Offset = "0x283A44", VA = "0x283A44")]
		set
		{
		}
	}

	[Token(Token = "0x170001C7")]
	public bool bUseAttenuation
	{
		[Token(Token = "0x6001351")]
		[Address(RVA = "0x283E30", Offset = "0x283E30", VA = "0x283E30")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6001350")]
		[Address(RVA = "0x283CDC", Offset = "0x283CDC", VA = "0x283CDC")]
		set
		{
		}
	}

	[Token(Token = "0x170001C8")]
	public bool bUseConeAttenuation
	{
		[Token(Token = "0x6001353")]
		[Address(RVA = "0x2840D0", Offset = "0x2840D0", VA = "0x2840D0")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6001352")]
		[Address(RVA = "0x283F7C", Offset = "0x283F7C", VA = "0x283F7C")]
		set
		{
		}
	}

	[Token(Token = "0x170001C9")]
	public float fInnerAngle
	{
		[Token(Token = "0x6001355")]
		[Address(RVA = "0x284370", Offset = "0x284370", VA = "0x284370")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6001354")]
		[Address(RVA = "0x28421C", Offset = "0x28421C", VA = "0x28421C")]
		set
		{
		}
	}

	[Token(Token = "0x170001CA")]
	public float fOuterAngle
	{
		[Token(Token = "0x6001357")]
		[Address(RVA = "0x284608", Offset = "0x284608", VA = "0x284608")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6001356")]
		[Address(RVA = "0x2844B4", Offset = "0x2844B4", VA = "0x2844B4")]
		set
		{
		}
	}

	[Token(Token = "0x170001CB")]
	public float fConeMaxAttenuation
	{
		[Token(Token = "0x6001359")]
		[Address(RVA = "0x2848A0", Offset = "0x2848A0", VA = "0x2848A0")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6001358")]
		[Address(RVA = "0x28474C", Offset = "0x28474C", VA = "0x28474C")]
		set
		{
		}
	}

	[Token(Token = "0x170001CC")]
	public float LPFCone
	{
		[Token(Token = "0x600135B")]
		[Address(RVA = "0x284B38", Offset = "0x284B38", VA = "0x284B38")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x600135A")]
		[Address(RVA = "0x2849E4", Offset = "0x2849E4", VA = "0x2849E4")]
		set
		{
		}
	}

	[Token(Token = "0x170001CD")]
	public float HPFCone
	{
		[Token(Token = "0x600135D")]
		[Address(RVA = "0x284DD0", Offset = "0x284DD0", VA = "0x284DD0")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x600135C")]
		[Address(RVA = "0x284C7C", Offset = "0x284C7C", VA = "0x284C7C")]
		set
		{
		}
	}

	[Token(Token = "0x170001CE")]
	public float fMaxDistance
	{
		[Token(Token = "0x600135F")]
		[Address(RVA = "0x285068", Offset = "0x285068", VA = "0x285068")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x600135E")]
		[Address(RVA = "0x284F14", Offset = "0x284F14", VA = "0x284F14")]
		set
		{
		}
	}

	[Token(Token = "0x170001CF")]
	public float fVolDryAtMaxDist
	{
		[Token(Token = "0x6001361")]
		[Address(RVA = "0x285300", Offset = "0x285300", VA = "0x285300")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6001360")]
		[Address(RVA = "0x2851AC", Offset = "0x2851AC", VA = "0x2851AC")]
		set
		{
		}
	}

	[Token(Token = "0x170001D0")]
	public float fVolAuxGameDefAtMaxDist
	{
		[Token(Token = "0x6001363")]
		[Address(RVA = "0x285598", Offset = "0x285598", VA = "0x285598")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6001362")]
		[Address(RVA = "0x285444", Offset = "0x285444", VA = "0x285444")]
		set
		{
		}
	}

	[Token(Token = "0x170001D1")]
	public float fVolAuxUserDefAtMaxDist
	{
		[Token(Token = "0x6001365")]
		[Address(RVA = "0x285830", Offset = "0x285830", VA = "0x285830")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6001364")]
		[Address(RVA = "0x2856DC", Offset = "0x2856DC", VA = "0x2856DC")]
		set
		{
		}
	}

	[Token(Token = "0x170001D2")]
	public float LPFValueAtMaxDist
	{
		[Token(Token = "0x6001367")]
		[Address(RVA = "0x285AC8", Offset = "0x285AC8", VA = "0x285AC8")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6001366")]
		[Address(RVA = "0x285974", Offset = "0x285974", VA = "0x285974")]
		set
		{
		}
	}

	[Token(Token = "0x170001D3")]
	public float HPFValueAtMaxDist
	{
		[Token(Token = "0x6001369")]
		[Address(RVA = "0x285D60", Offset = "0x285D60", VA = "0x285D60")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6001368")]
		[Address(RVA = "0x285C0C", Offset = "0x285C0C", VA = "0x285C0C")]
		set
		{
		}
	}

	[Token(Token = "0x6001340")]
	[Address(RVA = "0x282BA8", Offset = "0x282BA8", VA = "0x282BA8")]
	internal AkPositioningInfo(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x6001341")]
	[Address(RVA = "0x282BD0", Offset = "0x282BD0", VA = "0x282BD0")]
	public AkPositioningInfo()
	{
	}

	[Token(Token = "0x6001342")]
	[Address(RVA = "0x282D18", Offset = "0x282D18", VA = "0x282D18")]
	internal static IntPtr getCPtr(AkPositioningInfo obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6001343")]
	[Address(RVA = "0x282D70", Offset = "0x282D70", VA = "0x282D70", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x6001344")]
	[Address(RVA = "0x282D9C", Offset = "0x282D9C", VA = "0x282D9C", Slot = "1")]
	~AkPositioningInfo()
	{
	}

	[Token(Token = "0x6001345")]
	[Address(RVA = "0x282DFC", Offset = "0x282DFC", VA = "0x282DFC", Slot = "6")]
	public virtual void Dispose()
	{
	}
}
[Token(Token = "0x200024C")]
public enum AkPreparationType
{
	[Token(Token = "0x4000F0B")]
	Preparation_Load,
	[Token(Token = "0x4000F0C")]
	Preparation_Unload,
	[Token(Token = "0x4000F0D")]
	Preparation_LoadAndDecode
}
[Token(Token = "0x200024D")]
public class AkPropagationPathInfo : IDisposable
{
	[Token(Token = "0x4000F0E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private IntPtr swigCPtr;

	[Token(Token = "0x4000F0F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	protected bool swigCMemOwn;

	[Token(Token = "0x4000F10")]
	public const uint kMaxNodes = 8u;

	[Token(Token = "0x170001D4")]
	public AkVector nodePoint
	{
		[Token(Token = "0x6001371")]
		[Address(RVA = "0x286440", Offset = "0x286440", VA = "0x286440")]
		get
		{
			return null;
		}
		[Token(Token = "0x6001370")]
		[Address(RVA = "0x2862D8", Offset = "0x2862D8", VA = "0x2862D8")]
		set
		{
		}
	}

	[Token(Token = "0x170001D5")]
	public uint numNodes
	{
		[Token(Token = "0x6001373")]
		[Address(RVA = "0x286728", Offset = "0x286728", VA = "0x286728")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x6001372")]
		[Address(RVA = "0x2865D4", Offset = "0x2865D4", VA = "0x2865D4")]
		set
		{
		}
	}

	[Token(Token = "0x170001D6")]
	public float length
	{
		[Token(Token = "0x6001375")]
		[Address(RVA = "0x2869C0", Offset = "0x2869C0", VA = "0x2869C0")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6001374")]
		[Address(RVA = "0x28686C", Offset = "0x28686C", VA = "0x28686C")]
		set
		{
		}
	}

	[Token(Token = "0x170001D7")]
	public float gain
	{
		[Token(Token = "0x6001377")]
		[Address(RVA = "0x286C58", Offset = "0x286C58", VA = "0x286C58")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6001376")]
		[Address(RVA = "0x286B04", Offset = "0x286B04", VA = "0x286B04")]
		set
		{
		}
	}

	[Token(Token = "0x170001D8")]
	public float dryDiffraction
	{
		[Token(Token = "0x6001379")]
		[Address(RVA = "0x286EF0", Offset = "0x286EF0", VA = "0x286EF0")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6001378")]
		[Address(RVA = "0x286D9C", Offset = "0x286D9C", VA = "0x286D9C")]
		set
		{
		}
	}

	[Token(Token = "0x170001D9")]
	public float wetDiffraction
	{
		[Token(Token = "0x600137B")]
		[Address(RVA = "0x287188", Offset = "0x287188", VA = "0x287188")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x600137A")]
		[Address(RVA = "0x287034", Offset = "0x287034", VA = "0x287034")]
		set
		{
		}
	}

	[Token(Token = "0x600136A")]
	[Address(RVA = "0x285EA4", Offset = "0x285EA4", VA = "0x285EA4")]
	internal AkPropagationPathInfo(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x600136B")]
	[Address(RVA = "0x285ECC", Offset = "0x285ECC", VA = "0x285ECC")]
	public AkPropagationPathInfo()
	{
	}

	[Token(Token = "0x600136C")]
	[Address(RVA = "0x286014", Offset = "0x286014", VA = "0x286014")]
	internal static IntPtr getCPtr(AkPropagationPathInfo obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x600136D")]
	[Address(RVA = "0x28606C", Offset = "0x28606C", VA = "0x28606C", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x600136E")]
	[Address(RVA = "0x286098", Offset = "0x286098", VA = "0x286098", Slot = "1")]
	~AkPropagationPathInfo()
	{
	}

	[Token(Token = "0x600136F")]
	[Address(RVA = "0x2860F8", Offset = "0x2860F8", VA = "0x2860F8", Slot = "6")]
	public virtual void Dispose()
	{
	}

	[Token(Token = "0x600137C")]
	[Address(RVA = "0x2872CC", Offset = "0x2872CC", VA = "0x2872CC")]
	public static int GetSizeOf()
	{
		return default(int);
	}

	[Token(Token = "0x600137D")]
	[Address(RVA = "0x2873F4", Offset = "0x2873F4", VA = "0x2873F4")]
	public AkVector GetNodePoint(uint idx)
	{
		return null;
	}

	[Token(Token = "0x600137E")]
	[Address(RVA = "0x287598", Offset = "0x287598", VA = "0x287598")]
	public void Clone(AkPropagationPathInfo other)
	{
	}
}
[Token(Token = "0x200024E")]
public enum AkQueryRTPCValue
{
	[Token(Token = "0x4000F12")]
	RTPCValue_Default,
	[Token(Token = "0x4000F13")]
	RTPCValue_Global,
	[Token(Token = "0x4000F14")]
	RTPCValue_GameObject,
	[Token(Token = "0x4000F15")]
	RTPCValue_PlayingID,
	[Token(Token = "0x4000F16")]
	RTPCValue_Unavailable
}
[Token(Token = "0x200024F")]
public class AkRamp : IDisposable
{
	[Token(Token = "0x4000F17")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private IntPtr swigCPtr;

	[Token(Token = "0x4000F18")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	protected bool swigCMemOwn;

	[Token(Token = "0x170001DA")]
	public float fPrev
	{
		[Token(Token = "0x6001387")]
		[Address(RVA = "0x28812C", Offset = "0x28812C", VA = "0x28812C")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6001386")]
		[Address(RVA = "0x287FD8", Offset = "0x287FD8", VA = "0x287FD8")]
		set
		{
		}
	}

	[Token(Token = "0x170001DB")]
	public float fNext
	{
		[Token(Token = "0x6001389")]
		[Address(RVA = "0x2883C4", Offset = "0x2883C4", VA = "0x2883C4")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6001388")]
		[Address(RVA = "0x288270", Offset = "0x288270", VA = "0x288270")]
		set
		{
		}
	}

	[Token(Token = "0x600137F")]
	[Address(RVA = "0x287A34", Offset = "0x287A34", VA = "0x287A34")]
	internal AkRamp(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x6001380")]
	[Address(RVA = "0x287A5C", Offset = "0x287A5C", VA = "0x287A5C")]
	public AkRamp()
	{
	}

	[Token(Token = "0x6001381")]
	[Address(RVA = "0x287BA4", Offset = "0x287BA4", VA = "0x287BA4")]
	public AkRamp(float in_fPrev, float in_fNext)
	{
	}

	[Token(Token = "0x6001382")]
	[Address(RVA = "0x287D14", Offset = "0x287D14", VA = "0x287D14")]
	internal static IntPtr getCPtr(AkRamp obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6001383")]
	[Address(RVA = "0x287D6C", Offset = "0x287D6C", VA = "0x287D6C", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x6001384")]
	[Address(RVA = "0x287D98", Offset = "0x287D98", VA = "0x287D98", Slot = "1")]
	~AkRamp()
	{
	}

	[Token(Token = "0x6001385")]
	[Address(RVA = "0x287DF8", Offset = "0x287DF8", VA = "0x287DF8", Slot = "6")]
	public virtual void Dispose()
	{
	}
}
[Token(Token = "0x2000250")]
public class AkReflectionPathInfo : IDisposable
{
	[Token(Token = "0x4000F19")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private IntPtr swigCPtr;

	[Token(Token = "0x4000F1A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	protected bool swigCMemOwn;

	[Token(Token = "0x170001DC")]
	public AkVector imageSource
	{
		[Token(Token = "0x6001391")]
		[Address(RVA = "0x288AA4", Offset = "0x288AA4", VA = "0x288AA4")]
		get
		{
			return null;
		}
		[Token(Token = "0x6001390")]
		[Address(RVA = "0x28893C", Offset = "0x28893C", VA = "0x28893C")]
		set
		{
		}
	}

	[Token(Token = "0x170001DD")]
	public uint numPathPoints
	{
		[Token(Token = "0x6001393")]
		[Address(RVA = "0x288D8C", Offset = "0x288D8C", VA = "0x288D8C")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x6001392")]
		[Address(RVA = "0x288C38", Offset = "0x288C38", VA = "0x288C38")]
		set
		{
		}
	}

	[Token(Token = "0x170001DE")]
	public uint numReflections
	{
		[Token(Token = "0x6001395")]
		[Address(RVA = "0x289024", Offset = "0x289024", VA = "0x289024")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x6001394")]
		[Address(RVA = "0x288ED0", Offset = "0x288ED0", VA = "0x288ED0")]
		set
		{
		}
	}

	[Token(Token = "0x170001DF")]
	public AkVector occlusionPoint
	{
		[Token(Token = "0x6001397")]
		[Address(RVA = "0x2892D0", Offset = "0x2892D0", VA = "0x2892D0")]
		get
		{
			return null;
		}
		[Token(Token = "0x6001396")]
		[Address(RVA = "0x289168", Offset = "0x289168", VA = "0x289168")]
		set
		{
		}
	}

	[Token(Token = "0x170001E0")]
	public float level
	{
		[Token(Token = "0x6001399")]
		[Address(RVA = "0x2895B8", Offset = "0x2895B8", VA = "0x2895B8")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6001398")]
		[Address(RVA = "0x289464", Offset = "0x289464", VA = "0x289464")]
		set
		{
		}
	}

	[Token(Token = "0x170001E1")]
	public bool isOccluded
	{
		[Token(Token = "0x600139B")]
		[Address(RVA = "0x289850", Offset = "0x289850", VA = "0x289850")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600139A")]
		[Address(RVA = "0x2896FC", Offset = "0x2896FC", VA = "0x2896FC")]
		set
		{
		}
	}

	[Token(Token = "0x600138A")]
	[Address(RVA = "0x288508", Offset = "0x288508", VA = "0x288508")]
	internal AkReflectionPathInfo(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x600138B")]
	[Address(RVA = "0x288530", Offset = "0x288530", VA = "0x288530")]
	public AkReflectionPathInfo()
	{
	}

	[Token(Token = "0x600138C")]
	[Address(RVA = "0x288678", Offset = "0x288678", VA = "0x288678")]
	internal static IntPtr getCPtr(AkReflectionPathInfo obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x600138D")]
	[Address(RVA = "0x2886D0", Offset = "0x2886D0", VA = "0x2886D0", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x600138E")]
	[Address(RVA = "0x2886FC", Offset = "0x2886FC", VA = "0x2886FC", Slot = "1")]
	~AkReflectionPathInfo()
	{
	}

	[Token(Token = "0x600138F")]
	[Address(RVA = "0x28875C", Offset = "0x28875C", VA = "0x28875C", Slot = "6")]
	public virtual void Dispose()
	{
	}

	[Token(Token = "0x600139C")]
	[Address(RVA = "0x28999C", Offset = "0x28999C", VA = "0x28999C")]
	public static int GetSizeOf()
	{
		return default(int);
	}

	[Token(Token = "0x600139D")]
	[Address(RVA = "0x289AC4", Offset = "0x289AC4", VA = "0x289AC4")]
	public AkVector GetPathPoint(uint idx)
	{
		return null;
	}

	[Token(Token = "0x600139E")]
	[Address(RVA = "0x289C68", Offset = "0x289C68", VA = "0x289C68")]
	public AkAcousticSurface GetAcousticSurface(uint idx)
	{
		return null;
	}

	[Token(Token = "0x600139F")]
	[Address(RVA = "0x289DEC", Offset = "0x289DEC", VA = "0x289DEC")]
	public float GetDiffraction(uint idx)
	{
		return default(float);
	}

	[Token(Token = "0x60013A0")]
	[Address(RVA = "0x289F40", Offset = "0x289F40", VA = "0x289F40")]
	public void Clone(AkReflectionPathInfo other)
	{
	}
}
[Token(Token = "0x2000251")]
public enum AKRESULT
{
	[Token(Token = "0x4000F1C")]
	AK_NotImplemented = 0,
	[Token(Token = "0x4000F1D")]
	AK_Success = 1,
	[Token(Token = "0x4000F1E")]
	AK_Fail = 2,
	[Token(Token = "0x4000F1F")]
	AK_PartialSuccess = 3,
	[Token(Token = "0x4000F20")]
	AK_NotCompatible = 4,
	[Token(Token = "0x4000F21")]
	AK_AlreadyConnected = 5,
	[Token(Token = "0x4000F22")]
	AK_NameNotSet = 6,
	[Token(Token = "0x4000F23")]
	AK_InvalidFile = 7,
	[Token(Token = "0x4000F24")]
	AK_AudioFileHeaderTooLarge = 8,
	[Token(Token = "0x4000F25")]
	AK_MaxReached = 9,
	[Token(Token = "0x4000F26")]
	AK_InputsInUsed = 10,
	[Token(Token = "0x4000F27")]
	AK_OutputsInUsed = 11,
	[Token(Token = "0x4000F28")]
	AK_InvalidName = 12,
	[Token(Token = "0x4000F29")]
	AK_NameAlreadyInUse = 13,
	[Token(Token = "0x4000F2A")]
	AK_InvalidID = 14,
	[Token(Token = "0x4000F2B")]
	AK_IDNotFound = 15,
	[Token(Token = "0x4000F2C")]
	AK_InvalidInstanceID = 16,
	[Token(Token = "0x4000F2D")]
	AK_NoMoreData = 17,
	[Token(Token = "0x4000F2E")]
	AK_NoSourceAvailable = 18,
	[Token(Token = "0x4000F2F")]
	AK_StateGroupAlreadyExists = 19,
	[Token(Token = "0x4000F30")]
	AK_InvalidStateGroup = 20,
	[Token(Token = "0x4000F31")]
	AK_ChildAlreadyHasAParent = 21,
	[Token(Token = "0x4000F32")]
	AK_InvalidLanguage = 22,
	[Token(Token = "0x4000F33")]
	AK_CannotAddItseflAsAChild = 23,
	[Token(Token = "0x4000F34")]
	AK_UserNotInList = 29,
	[Token(Token = "0x4000F35")]
	AK_NoTransitionPoint = 30,
	[Token(Token = "0x4000F36")]
	AK_InvalidParameter = 31,
	[Token(Token = "0x4000F37")]
	AK_ParameterAdjusted = 32,
	[Token(Token = "0x4000F38")]
	AK_IsA3DSound = 33,
	[Token(Token = "0x4000F39")]
	AK_NotA3DSound = 34,
	[Token(Token = "0x4000F3A")]
	AK_ElementAlreadyInList = 35,
	[Token(Token = "0x4000F3B")]
	AK_PathNotFound = 36,
	[Token(Token = "0x4000F3C")]
	AK_PathNoVertices = 37,
	[Token(Token = "0x4000F3D")]
	AK_PathNotRunning = 38,
	[Token(Token = "0x4000F3E")]
	AK_PathNotPaused = 39,
	[Token(Token = "0x4000F3F")]
	AK_PathNodeAlreadyInList = 40,
	[Token(Token = "0x4000F40")]
	AK_PathNodeNotInList = 41,
	[Token(Token = "0x4000F41")]
	AK_VoiceNotFound = 42,
	[Token(Token = "0x4000F42")]
	AK_DataNeeded = 43,
	[Token(Token = "0x4000F43")]
	AK_NoDataNeeded = 44,
	[Token(Token = "0x4000F44")]
	AK_DataReady = 45,
	[Token(Token = "0x4000F45")]
	AK_NoDataReady = 46,
	[Token(Token = "0x4000F46")]
	AK_NoMoreSlotAvailable = 47,
	[Token(Token = "0x4000F47")]
	AK_SlotNotFound = 48,
	[Token(Token = "0x4000F48")]
	AK_ProcessingOnly = 49,
	[Token(Token = "0x4000F49")]
	AK_MemoryLeak = 50,
	[Token(Token = "0x4000F4A")]
	AK_CorruptedBlockList = 51,
	[Token(Token = "0x4000F4B")]
	AK_InsufficientMemory = 52,
	[Token(Token = "0x4000F4C")]
	AK_Cancelled = 53,
	[Token(Token = "0x4000F4D")]
	AK_UnknownBankID = 54,
	[Token(Token = "0x4000F4E")]
	AK_IsProcessing = 55,
	[Token(Token = "0x4000F4F")]
	AK_BankReadError = 56,
	[Token(Token = "0x4000F50")]
	AK_InvalidSwitchType = 57,
	[Token(Token = "0x4000F51")]
	AK_VoiceDone = 58,
	[Token(Token = "0x4000F52")]
	AK_UnknownEnvironment = 59,
	[Token(Token = "0x4000F53")]
	AK_EnvironmentInUse = 60,
	[Token(Token = "0x4000F54")]
	AK_UnknownObject = 61,
	[Token(Token = "0x4000F55")]
	AK_NoConversionNeeded = 62,
	[Token(Token = "0x4000F56")]
	AK_FormatNotReady = 63,
	[Token(Token = "0x4000F57")]
	AK_WrongBankVersion = 64,
	[Token(Token = "0x4000F58")]
	AK_DataReadyNoProcess = 65,
	[Token(Token = "0x4000F59")]
	AK_FileNotFound = 66,
	[Token(Token = "0x4000F5A")]
	AK_DeviceNotReady = 67,
	[Token(Token = "0x4000F5B")]
	AK_CouldNotCreateSecBuffer = 68,
	[Token(Token = "0x4000F5C")]
	AK_BankAlreadyLoaded = 69,
	[Token(Token = "0x4000F5D")]
	AK_RenderedFX = 71,
	[Token(Token = "0x4000F5E")]
	AK_ProcessNeeded = 72,
	[Token(Token = "0x4000F5F")]
	AK_ProcessDone = 73,
	[Token(Token = "0x4000F60")]
	AK_MemManagerNotInitialized = 74,
	[Token(Token = "0x4000F61")]
	AK_StreamMgrNotInitialized = 75,
	[Token(Token = "0x4000F62")]
	AK_SSEInstructionsNotSupported = 76,
	[Token(Token = "0x4000F63")]
	AK_Busy = 77,
	[Token(Token = "0x4000F64")]
	AK_UnsupportedChannelConfig = 78,
	[Token(Token = "0x4000F65")]
	AK_PluginMediaNotAvailable = 79,
	[Token(Token = "0x4000F66")]
	AK_MustBeVirtualized = 80,
	[Token(Token = "0x4000F67")]
	AK_CommandTooLarge = 81,
	[Token(Token = "0x4000F68")]
	AK_RejectedByFilter = 82,
	[Token(Token = "0x4000F69")]
	AK_InvalidCustomPlatformName = 83,
	[Token(Token = "0x4000F6A")]
	AK_DLLCannotLoad = 84,
	[Token(Token = "0x4000F6B")]
	AK_DLLPathNotFound = 85,
	[Token(Token = "0x4000F6C")]
	AK_NoJavaVM = 86,
	[Token(Token = "0x4000F6D")]
	AK_OpenSLError = 87,
	[Token(Token = "0x4000F6E")]
	AK_PluginNotRegistered = 88,
	[Token(Token = "0x4000F6F")]
	AK_DataAlignmentError = 89,
	[Token(Token = "0x4000F70")]
	AK_DeviceNotCompatible = 90,
	[Token(Token = "0x4000F71")]
	AK_DuplicateUniqueID = 91
}
[Token(Token = "0x2000252")]
public class AkRoomParams : IDisposable
{
	[Token(Token = "0x4000F72")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private IntPtr swigCPtr;

	[Token(Token = "0x4000F73")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	protected bool swigCMemOwn;

	[Token(Token = "0x170001E2")]
	public AkVector Up
	{
		[Token(Token = "0x60013A8")]
		[Address(RVA = "0x28AA34", Offset = "0x28AA34", VA = "0x28AA34")]
		get
		{
			return null;
		}
		[Token(Token = "0x60013A7")]
		[Address(RVA = "0x28BD64", Offset = "0x28BD64", VA = "0x28BD64")]
		set
		{
		}
	}

	[Token(Token = "0x170001E3")]
	public AkVector Front
	{
		[Token(Token = "0x60013AA")]
		[Address(RVA = "0x28AB08", Offset = "0x28AB08", VA = "0x28AB08")]
		get
		{
			return null;
		}
		[Token(Token = "0x60013A9")]
		[Address(RVA = "0x28BF8C", Offset = "0x28BF8C", VA = "0x28BF8C")]
		set
		{
		}
	}

	[Token(Token = "0x170001E4")]
	public uint ReverbAuxBus
	{
		[Token(Token = "0x60013AC")]
		[Address(RVA = "0x28C27C", Offset = "0x28C27C", VA = "0x28C27C")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x60013AB")]
		[Address(RVA = "0x28ABDC", Offset = "0x28ABDC", VA = "0x28ABDC")]
		set
		{
		}
	}

	[Token(Token = "0x170001E5")]
	public float ReverbLevel
	{
		[Token(Token = "0x60013AE")]
		[Address(RVA = "0x28C488", Offset = "0x28C488", VA = "0x28C488")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60013AD")]
		[Address(RVA = "0x28AC68", Offset = "0x28AC68", VA = "0x28AC68")]
		set
		{
		}
	}

	[Token(Token = "0x170001E6")]
	public float WallOcclusion
	{
		[Token(Token = "0x60013B0")]
		[Address(RVA = "0x28C694", Offset = "0x28C694", VA = "0x28C694")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60013AF")]
		[Address(RVA = "0x28ACF4", Offset = "0x28ACF4", VA = "0x28ACF4")]
		set
		{
		}
	}

	[Token(Token = "0x170001E7")]
	public float RoomGameObj_AuxSendLevelToSelf
	{
		[Token(Token = "0x60013B2")]
		[Address(RVA = "0x28C8A0", Offset = "0x28C8A0", VA = "0x28C8A0")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60013B1")]
		[Address(RVA = "0x28AD80", Offset = "0x28AD80", VA = "0x28AD80")]
		set
		{
		}
	}

	[Token(Token = "0x170001E8")]
	public bool RoomGameObj_KeepRegistered
	{
		[Token(Token = "0x60013B4")]
		[Address(RVA = "0x28CAAC", Offset = "0x28CAAC", VA = "0x28CAAC")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60013B3")]
		[Address(RVA = "0x28AE0C", Offset = "0x28AE0C", VA = "0x28AE0C")]
		set
		{
		}
	}

	[Token(Token = "0x60013A1")]
	[Address(RVA = "0x28B9C8", Offset = "0x28B9C8", VA = "0x28B9C8")]
	internal AkRoomParams(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x60013A2")]
	[Address(RVA = "0x28A99C", Offset = "0x28A99C", VA = "0x28A99C")]
	public AkRoomParams()
	{
	}

	[Token(Token = "0x60013A3")]
	[Address(RVA = "0x28BAA0", Offset = "0x28BAA0", VA = "0x28BAA0")]
	internal static IntPtr getCPtr(AkRoomParams obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x60013A4")]
	[Address(RVA = "0x28BAF8", Offset = "0x28BAF8", VA = "0x28BAF8", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x60013A5")]
	[Address(RVA = "0x28BB24", Offset = "0x28BB24", VA = "0x28BB24", Slot = "1")]
	~AkRoomParams()
	{
	}

	[Token(Token = "0x60013A6")]
	[Address(RVA = "0x28BB84", Offset = "0x28BB84", VA = "0x28BB84", Slot = "6")]
	public virtual void Dispose()
	{
	}
}
[Token(Token = "0x2000253")]
public class AkSegmentInfo : IDisposable
{
	[Token(Token = "0x4000F74")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private IntPtr swigCPtr;

	[Token(Token = "0x4000F75")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	protected bool swigCMemOwn;

	[Token(Token = "0x170001E9")]
	public int iCurrentPosition
	{
		[Token(Token = "0x60013BC")]
		[Address(RVA = "0x28FCFC", Offset = "0x28FCFC", VA = "0x28FCFC")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60013BB")]
		[Address(RVA = "0x28FBA8", Offset = "0x28FBA8", VA = "0x28FBA8")]
		set
		{
		}
	}

	[Token(Token = "0x170001EA")]
	public int iPreEntryDuration
	{
		[Token(Token = "0x60013BE")]
		[Address(RVA = "0x28FF94", Offset = "0x28FF94", VA = "0x28FF94")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60013BD")]
		[Address(RVA = "0x28FE40", Offset = "0x28FE40", VA = "0x28FE40")]
		set
		{
		}
	}

	[Token(Token = "0x170001EB")]
	public int iActiveDuration
	{
		[Token(Token = "0x60013C0")]
		[Address(RVA = "0x29022C", Offset = "0x29022C", VA = "0x29022C")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60013BF")]
		[Address(RVA = "0x2900D8", Offset = "0x2900D8", VA = "0x2900D8")]
		set
		{
		}
	}

	[Token(Token = "0x170001EC")]
	public int iPostExitDuration
	{
		[Token(Token = "0x60013C2")]
		[Address(RVA = "0x2904C4", Offset = "0x2904C4", VA = "0x2904C4")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60013C1")]
		[Address(RVA = "0x290370", Offset = "0x290370", VA = "0x290370")]
		set
		{
		}
	}

	[Token(Token = "0x170001ED")]
	public int iRemainingLookAheadTime
	{
		[Token(Token = "0x60013C4")]
		[Address(RVA = "0x29075C", Offset = "0x29075C", VA = "0x29075C")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60013C3")]
		[Address(RVA = "0x290608", Offset = "0x290608", VA = "0x290608")]
		set
		{
		}
	}

	[Token(Token = "0x170001EE")]
	public float fBeatDuration
	{
		[Token(Token = "0x60013C6")]
		[Address(RVA = "0x2909F4", Offset = "0x2909F4", VA = "0x2909F4")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60013C5")]
		[Address(RVA = "0x2908A0", Offset = "0x2908A0", VA = "0x2908A0")]
		set
		{
		}
	}

	[Token(Token = "0x170001EF")]
	public float fBarDuration
	{
		[Token(Token = "0x60013C8")]
		[Address(RVA = "0x290C8C", Offset = "0x290C8C", VA = "0x290C8C")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60013C7")]
		[Address(RVA = "0x290B38", Offset = "0x290B38", VA = "0x290B38")]
		set
		{
		}
	}

	[Token(Token = "0x170001F0")]
	public float fGridDuration
	{
		[Token(Token = "0x60013CA")]
		[Address(RVA = "0x290F24", Offset = "0x290F24", VA = "0x290F24")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60013C9")]
		[Address(RVA = "0x290DD0", Offset = "0x290DD0", VA = "0x290DD0")]
		set
		{
		}
	}

	[Token(Token = "0x170001F1")]
	public float fGridOffset
	{
		[Token(Token = "0x60013CC")]
		[Address(RVA = "0x2911BC", Offset = "0x2911BC", VA = "0x2911BC")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60013CB")]
		[Address(RVA = "0x291068", Offset = "0x291068", VA = "0x291068")]
		set
		{
		}
	}

	[Token(Token = "0x60013B5")]
	[Address(RVA = "0x28F774", Offset = "0x28F774", VA = "0x28F774")]
	internal AkSegmentInfo(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x60013B6")]
	[Address(RVA = "0x28F79C", Offset = "0x28F79C", VA = "0x28F79C")]
	public AkSegmentInfo()
	{
	}

	[Token(Token = "0x60013B7")]
	[Address(RVA = "0x28F8E4", Offset = "0x28F8E4", VA = "0x28F8E4")]
	internal static IntPtr getCPtr(AkSegmentInfo obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x60013B8")]
	[Address(RVA = "0x28F93C", Offset = "0x28F93C", VA = "0x28F93C", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x60013B9")]
	[Address(RVA = "0x28F968", Offset = "0x28F968", VA = "0x28F968", Slot = "1")]
	~AkSegmentInfo()
	{
	}

	[Token(Token = "0x60013BA")]
	[Address(RVA = "0x28F9C8", Offset = "0x28F9C8", VA = "0x28F9C8", Slot = "6")]
	public virtual void Dispose()
	{
	}
}
[Token(Token = "0x2000254")]
public class AkSerializedCallbackHeader : IDisposable
{
	[Token(Token = "0x4000F76")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private IntPtr swigCPtr;

	[Token(Token = "0x4000F77")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	protected bool swigCMemOwn;

	[Token(Token = "0x170001F2")]
	public IntPtr pPackage
	{
		[Token(Token = "0x60013D3")]
		[Address(RVA = "0x291734", Offset = "0x291734", VA = "0x291734")]
		get
		{
			return default(IntPtr);
		}
	}

	[Token(Token = "0x170001F3")]
	public AkSerializedCallbackHeader pNext
	{
		[Token(Token = "0x60013D4")]
		[Address(RVA = "0x291878", Offset = "0x291878", VA = "0x291878")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170001F4")]
	public AkCallbackType eType
	{
		[Token(Token = "0x60013D5")]
		[Address(RVA = "0x291A10", Offset = "0x291A10", VA = "0x291A10")]
		get
		{
			return default(AkCallbackType);
		}
	}

	[Token(Token = "0x60013CD")]
	[Address(RVA = "0x291300", Offset = "0x291300", VA = "0x291300")]
	internal AkSerializedCallbackHeader(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x60013CE")]
	[Address(RVA = "0x291328", Offset = "0x291328", VA = "0x291328")]
	public AkSerializedCallbackHeader()
	{
	}

	[Token(Token = "0x60013CF")]
	[Address(RVA = "0x291470", Offset = "0x291470", VA = "0x291470")]
	internal static IntPtr getCPtr(AkSerializedCallbackHeader obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x60013D0")]
	[Address(RVA = "0x2914C8", Offset = "0x2914C8", VA = "0x2914C8", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x60013D1")]
	[Address(RVA = "0x2914F4", Offset = "0x2914F4", VA = "0x2914F4", Slot = "1")]
	~AkSerializedCallbackHeader()
	{
	}

	[Token(Token = "0x60013D2")]
	[Address(RVA = "0x291554", Offset = "0x291554", VA = "0x291554", Slot = "6")]
	public virtual void Dispose()
	{
	}

	[Token(Token = "0x60013D6")]
	[Address(RVA = "0x291B54", Offset = "0x291B54", VA = "0x291B54")]
	public IntPtr GetData()
	{
		return default(IntPtr);
	}
}
[Token(Token = "0x2000255")]
public enum AkSourceChannelOrdering
{
	[Token(Token = "0x4000F79")]
	SourceChannelOrdering_Standard,
	[Token(Token = "0x4000F7A")]
	SourceChannelOrdering_Film,
	[Token(Token = "0x4000F7B")]
	SourceChannelOrdering_FuMa
}
[Token(Token = "0x2000256")]
public class AkSourceSettings : IDisposable
{
	[Token(Token = "0x4000F7C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private IntPtr swigCPtr;

	[Token(Token = "0x4000F7D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	protected bool swigCMemOwn;

	[Token(Token = "0x170001F5")]
	public uint sourceID
	{
		[Token(Token = "0x60013DE")]
		[Address(RVA = "0xCD57F8", Offset = "0xCD57F8", VA = "0xCD57F8")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x60013DD")]
		[Address(RVA = "0xCD5764", Offset = "0xCD5764", VA = "0xCD5764")]
		set
		{
		}
	}

	[Token(Token = "0x170001F6")]
	public IntPtr pMediaMemory
	{
		[Token(Token = "0x60013E0")]
		[Address(RVA = "0xCD5918", Offset = "0xCD5918", VA = "0xCD5918")]
		get
		{
			return default(IntPtr);
		}
		[Token(Token = "0x60013DF")]
		[Address(RVA = "0xCD5884", Offset = "0xCD5884", VA = "0xCD5884")]
		set
		{
		}
	}

	[Token(Token = "0x170001F7")]
	public uint uMediaSize
	{
		[Token(Token = "0x60013E2")]
		[Address(RVA = "0xCD5A38", Offset = "0xCD5A38", VA = "0xCD5A38")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x60013E1")]
		[Address(RVA = "0xCD59A4", Offset = "0xCD59A4", VA = "0xCD59A4")]
		set
		{
		}
	}

	[Token(Token = "0x60013D7")]
	[Address(RVA = "0xCD5490", Offset = "0xCD5490", VA = "0xCD5490")]
	internal AkSourceSettings(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x60013D8")]
	[Address(RVA = "0xCD54B8", Offset = "0xCD54B8", VA = "0xCD54B8")]
	public AkSourceSettings()
	{
	}

	[Token(Token = "0x60013D9")]
	[Address(RVA = "0xCD5558", Offset = "0xCD5558", VA = "0xCD5558")]
	internal static IntPtr getCPtr(AkSourceSettings obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x60013DA")]
	[Address(RVA = "0xCD55B0", Offset = "0xCD55B0", VA = "0xCD55B0", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x60013DB")]
	[Address(RVA = "0xCD55DC", Offset = "0xCD55DC", VA = "0xCD55DC", Slot = "1")]
	~AkSourceSettings()
	{
	}

	[Token(Token = "0x60013DC")]
	[Address(RVA = "0xCD563C", Offset = "0xCD563C", VA = "0xCD563C", Slot = "6")]
	public virtual void Dispose()
	{
	}
}
[Token(Token = "0x2000257")]
public class AkSpatialAudioInitSettings : IDisposable
{
	[Token(Token = "0x4000F7E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private IntPtr swigCPtr;

	[Token(Token = "0x4000F7F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	protected bool swigCMemOwn;

	[Token(Token = "0x170001F8")]
	public int uPoolID
	{
		[Token(Token = "0x60013EA")]
		[Address(RVA = "0xCD64B4", Offset = "0xCD64B4", VA = "0xCD64B4")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60013E9")]
		[Address(RVA = "0xCD6420", Offset = "0xCD6420", VA = "0xCD6420")]
		set
		{
		}
	}

	[Token(Token = "0x170001F9")]
	public uint uPoolSize
	{
		[Token(Token = "0x60013EC")]
		[Address(RVA = "0xCD65D4", Offset = "0xCD65D4", VA = "0xCD65D4")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x60013EB")]
		[Address(RVA = "0xCD6540", Offset = "0xCD6540", VA = "0xCD6540")]
		set
		{
		}
	}

	[Token(Token = "0x170001FA")]
	public uint uMaxSoundPropagationDepth
	{
		[Token(Token = "0x60013EE")]
		[Address(RVA = "0xCD66F4", Offset = "0xCD66F4", VA = "0xCD66F4")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x60013ED")]
		[Address(RVA = "0xCD6660", Offset = "0xCD6660", VA = "0xCD6660")]
		set
		{
		}
	}

	[Token(Token = "0x170001FB")]
	public uint uDiffractionFlags
	{
		[Token(Token = "0x60013F0")]
		[Address(RVA = "0xCD6814", Offset = "0xCD6814", VA = "0xCD6814")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x60013EF")]
		[Address(RVA = "0xCD6780", Offset = "0xCD6780", VA = "0xCD6780")]
		set
		{
		}
	}

	[Token(Token = "0x170001FC")]
	public float fDiffractionShadowAttenFactor
	{
		[Token(Token = "0x60013F2")]
		[Address(RVA = "0xCD6934", Offset = "0xCD6934", VA = "0xCD6934")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60013F1")]
		[Address(RVA = "0xCD68A0", Offset = "0xCD68A0", VA = "0xCD68A0")]
		set
		{
		}
	}

	[Token(Token = "0x170001FD")]
	public float fDiffractionShadowDegrees
	{
		[Token(Token = "0x60013F4")]
		[Address(RVA = "0xCD6A54", Offset = "0xCD6A54", VA = "0xCD6A54")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60013F3")]
		[Address(RVA = "0xCD69C0", Offset = "0xCD69C0", VA = "0xCD69C0")]
		set
		{
		}
	}

	[Token(Token = "0x60013E3")]
	[Address(RVA = "0xCD614C", Offset = "0xCD614C", VA = "0xCD614C")]
	internal AkSpatialAudioInitSettings(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x60013E4")]
	[Address(RVA = "0xCD6174", Offset = "0xCD6174", VA = "0xCD6174")]
	public AkSpatialAudioInitSettings()
	{
	}

	[Token(Token = "0x60013E5")]
	[Address(RVA = "0xCD6214", Offset = "0xCD6214", VA = "0xCD6214")]
	internal static IntPtr getCPtr(AkSpatialAudioInitSettings obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x60013E6")]
	[Address(RVA = "0xCD626C", Offset = "0xCD626C", VA = "0xCD626C", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x60013E7")]
	[Address(RVA = "0xCD6298", Offset = "0xCD6298", VA = "0xCD6298", Slot = "1")]
	~AkSpatialAudioInitSettings()
	{
	}

	[Token(Token = "0x60013E8")]
	[Address(RVA = "0xCD62F8", Offset = "0xCD62F8", VA = "0xCD62F8", Slot = "6")]
	public virtual void Dispose()
	{
	}
}
[Token(Token = "0x2000258")]
public enum AkSpeakerPanningType
{
	[Token(Token = "0x4000F81")]
	AK_DirectSpeakerAssignment,
	[Token(Token = "0x4000F82")]
	AK_BalanceFadeHeight
}
[Token(Token = "0x2000259")]
public class AkStreamMgrSettings : IDisposable
{
	[Token(Token = "0x4000F83")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private IntPtr swigCPtr;

	[Token(Token = "0x4000F84")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	protected bool swigCMemOwn;

	[Token(Token = "0x170001FE")]
	public uint uMemorySize
	{
		[Token(Token = "0x60013FC")]
		[Address(RVA = "0xCD7B14", Offset = "0xCD7B14", VA = "0xCD7B14")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x60013FB")]
		[Address(RVA = "0xCD7A80", Offset = "0xCD7A80", VA = "0xCD7A80")]
		set
		{
		}
	}

	[Token(Token = "0x60013F5")]
	[Address(RVA = "0xCD77AC", Offset = "0xCD77AC", VA = "0xCD77AC")]
	internal AkStreamMgrSettings(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x60013F6")]
	[Address(RVA = "0xCD77D4", Offset = "0xCD77D4", VA = "0xCD77D4")]
	public AkStreamMgrSettings()
	{
	}

	[Token(Token = "0x60013F7")]
	[Address(RVA = "0xCD7874", Offset = "0xCD7874", VA = "0xCD7874")]
	internal static IntPtr getCPtr(AkStreamMgrSettings obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x60013F8")]
	[Address(RVA = "0xCD78CC", Offset = "0xCD78CC", VA = "0xCD78CC", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x60013F9")]
	[Address(RVA = "0xCD78F8", Offset = "0xCD78F8", VA = "0xCD78F8", Slot = "1")]
	~AkStreamMgrSettings()
	{
	}

	[Token(Token = "0x60013FA")]
	[Address(RVA = "0xCD7958", Offset = "0xCD7958", VA = "0xCD7958", Slot = "6")]
	public virtual void Dispose()
	{
	}
}
[Token(Token = "0x200025A")]
public class AkTaskContext : IDisposable
{
	[Token(Token = "0x4000F85")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private IntPtr swigCPtr;

	[Token(Token = "0x4000F86")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	protected bool swigCMemOwn;

	[Token(Token = "0x170001FF")]
	public uint uIdxThread
	{
		[Token(Token = "0x6001404")]
		[Address(RVA = "0xCD96B0", Offset = "0xCD96B0", VA = "0xCD96B0")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x6001403")]
		[Address(RVA = "0xCD961C", Offset = "0xCD961C", VA = "0xCD961C")]
		set
		{
		}
	}

	[Token(Token = "0x60013FD")]
	[Address(RVA = "0xCD9348", Offset = "0xCD9348", VA = "0xCD9348")]
	internal AkTaskContext(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x60013FE")]
	[Address(RVA = "0xCD9370", Offset = "0xCD9370", VA = "0xCD9370")]
	public AkTaskContext()
	{
	}

	[Token(Token = "0x60013FF")]
	[Address(RVA = "0xCD9410", Offset = "0xCD9410", VA = "0xCD9410")]
	internal static IntPtr getCPtr(AkTaskContext obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6001400")]
	[Address(RVA = "0xCD9468", Offset = "0xCD9468", VA = "0xCD9468", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x6001401")]
	[Address(RVA = "0xCD9494", Offset = "0xCD9494", VA = "0xCD9494", Slot = "1")]
	~AkTaskContext()
	{
	}

	[Token(Token = "0x6001402")]
	[Address(RVA = "0xCD94F4", Offset = "0xCD94F4", VA = "0xCD94F4", Slot = "6")]
	public virtual void Dispose()
	{
	}
}
[Token(Token = "0x200025B")]
public class AkTransform : IDisposable
{
	[Token(Token = "0x4000F87")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private IntPtr swigCPtr;

	[Token(Token = "0x4000F88")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	protected bool swigCMemOwn;

	[Token(Token = "0x6001405")]
	[Address(RVA = "0xCD9E98", Offset = "0xCD9E98", VA = "0xCD9E98")]
	internal AkTransform(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x6001406")]
	[Address(RVA = "0xCD9EC0", Offset = "0xCD9EC0", VA = "0xCD9EC0")]
	public AkTransform()
	{
	}

	[Token(Token = "0x6001407")]
	[Address(RVA = "0xCD9F60", Offset = "0xCD9F60", VA = "0xCD9F60")]
	internal static IntPtr getCPtr(AkTransform obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6001408")]
	[Address(RVA = "0xCD9FB8", Offset = "0xCD9FB8", VA = "0xCD9FB8", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x6001409")]
	[Address(RVA = "0xCD9FE4", Offset = "0xCD9FE4", VA = "0xCD9FE4", Slot = "1")]
	~AkTransform()
	{
	}

	[Token(Token = "0x600140A")]
	[Address(RVA = "0xCDA044", Offset = "0xCDA044", VA = "0xCDA044", Slot = "6")]
	public virtual void Dispose()
	{
	}

	[Token(Token = "0x600140B")]
	[Address(RVA = "0xCDA16C", Offset = "0xCDA16C", VA = "0xCDA16C")]
	public AkVector Position()
	{
		return null;
	}

	[Token(Token = "0x600140C")]
	[Address(RVA = "0xCDA254", Offset = "0xCDA254", VA = "0xCDA254")]
	public AkVector OrientationFront()
	{
		return null;
	}

	[Token(Token = "0x600140D")]
	[Address(RVA = "0xCDA314", Offset = "0xCDA314", VA = "0xCDA314")]
	public AkVector OrientationTop()
	{
		return null;
	}

	[Token(Token = "0x600140E")]
	[Address(RVA = "0xCDA3D4", Offset = "0xCDA3D4", VA = "0xCDA3D4")]
	public void Set(AkVector in_position, AkVector in_orientationFront, AkVector in_orientationTop)
	{
	}

	[Token(Token = "0x600140F")]
	[Address(RVA = "0xCDA53C", Offset = "0xCDA53C", VA = "0xCDA53C")]
	public void Set(float in_positionX, float in_positionY, float in_positionZ, float in_orientFrontX, float in_orientFrontY, float in_orientFrontZ, float in_orientTopX, float in_orientTopY, float in_orientTopZ)
	{
	}

	[Token(Token = "0x6001410")]
	[Address(RVA = "0xCDA628", Offset = "0xCDA628", VA = "0xCDA628")]
	public void SetPosition(AkVector in_position)
	{
	}

	[Token(Token = "0x6001411")]
	[Address(RVA = "0xCDA704", Offset = "0xCDA704", VA = "0xCDA704")]
	public void SetPosition(float in_x, float in_y, float in_z)
	{
	}

	[Token(Token = "0x6001412")]
	[Address(RVA = "0xCDA7C0", Offset = "0xCDA7C0", VA = "0xCDA7C0")]
	public void SetOrientation(AkVector in_orientationFront, AkVector in_orientationTop)
	{
	}

	[Token(Token = "0x6001413")]
	[Address(RVA = "0xCDA8BC", Offset = "0xCDA8BC", VA = "0xCDA8BC")]
	public void SetOrientation(float in_orientFrontX, float in_orientFrontY, float in_orientFrontZ, float in_orientTopX, float in_orientTopY, float in_orientTopZ)
	{
	}
}
[Token(Token = "0x200025C")]
public class AkTriangle : IDisposable
{
	[Token(Token = "0x4000F89")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private IntPtr swigCPtr;

	[Token(Token = "0x4000F8A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	protected bool swigCMemOwn;

	[Token(Token = "0x17000200")]
	public ushort point0
	{
		[Token(Token = "0x600141C")]
		[Address(RVA = "0xCDAD30", Offset = "0xCDAD30", VA = "0xCDAD30")]
		get
		{
			return default(ushort);
		}
		[Token(Token = "0x600141B")]
		[Address(RVA = "0xCD8DC0", Offset = "0xCD8DC0", VA = "0xCD8DC0")]
		set
		{
		}
	}

	[Token(Token = "0x17000201")]
	public ushort point1
	{
		[Token(Token = "0x600141E")]
		[Address(RVA = "0xCDADBC", Offset = "0xCDADBC", VA = "0xCDADBC")]
		get
		{
			return default(ushort);
		}
		[Token(Token = "0x600141D")]
		[Address(RVA = "0xCD8E54", Offset = "0xCD8E54", VA = "0xCD8E54")]
		set
		{
		}
	}

	[Token(Token = "0x17000202")]
	public ushort point2
	{
		[Token(Token = "0x6001420")]
		[Address(RVA = "0xCDAE48", Offset = "0xCDAE48", VA = "0xCDAE48")]
		get
		{
			return default(ushort);
		}
		[Token(Token = "0x600141F")]
		[Address(RVA = "0xCD8EE8", Offset = "0xCD8EE8", VA = "0xCD8EE8")]
		set
		{
		}
	}

	[Token(Token = "0x17000203")]
	public ushort surface
	{
		[Token(Token = "0x6001422")]
		[Address(RVA = "0xCDAED4", Offset = "0xCDAED4", VA = "0xCDAED4")]
		get
		{
			return default(ushort);
		}
		[Token(Token = "0x6001421")]
		[Address(RVA = "0xCD8F7C", Offset = "0xCD8F7C", VA = "0xCD8F7C")]
		set
		{
		}
	}

	[Token(Token = "0x6001414")]
	[Address(RVA = "0xCDA990", Offset = "0xCDA990", VA = "0xCDA990")]
	internal AkTriangle(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x6001415")]
	[Address(RVA = "0xCDA9B8", Offset = "0xCDA9B8", VA = "0xCDA9B8")]
	public AkTriangle()
	{
	}

	[Token(Token = "0x6001416")]
	[Address(RVA = "0xCDAA58", Offset = "0xCDAA58", VA = "0xCDAA58")]
	public AkTriangle(ushort in_pt0, ushort in_pt1, ushort in_pt2, ushort in_surfaceInfo)
	{
	}

	[Token(Token = "0x6001417")]
	[Address(RVA = "0xCDAB24", Offset = "0xCDAB24", VA = "0xCDAB24")]
	internal static IntPtr getCPtr(AkTriangle obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6001418")]
	[Address(RVA = "0xCDAB7C", Offset = "0xCDAB7C", VA = "0xCDAB7C", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x6001419")]
	[Address(RVA = "0xCDABA8", Offset = "0xCDABA8", VA = "0xCDABA8", Slot = "1")]
	~AkTriangle()
	{
	}

	[Token(Token = "0x600141A")]
	[Address(RVA = "0xCDAC08", Offset = "0xCDAC08", VA = "0xCDAC08", Slot = "6")]
	public virtual void Dispose()
	{
	}

	[Token(Token = "0x6001423")]
	[Address(RVA = "0xCDAF60", Offset = "0xCDAF60", VA = "0xCDAF60")]
	public void Clear()
	{
	}

	[Token(Token = "0x6001424")]
	[Address(RVA = "0xCDAFEC", Offset = "0xCDAFEC", VA = "0xCDAFEC")]
	public static int GetSizeOf()
	{
		return default(int);
	}

	[Token(Token = "0x6001425")]
	[Address(RVA = "0xCDB06C", Offset = "0xCDB06C", VA = "0xCDB06C")]
	public void Clone(AkTriangle other)
	{
	}
}
[Token(Token = "0x200025D")]
public class AkVector : IDisposable
{
	[Token(Token = "0x4000F8B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private IntPtr swigCPtr;

	[Token(Token = "0x4000F8C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	protected bool swigCMemOwn;

	[Token(Token = "0x17000204")]
	public float X
	{
		[Token(Token = "0x600142E")]
		[Address(RVA = "0xCDDBE4", Offset = "0xCDDBE4", VA = "0xCDDBE4")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x600142D")]
		[Address(RVA = "0xCDDB50", Offset = "0xCDDB50", VA = "0xCDDB50")]
		set
		{
		}
	}

	[Token(Token = "0x17000205")]
	public float Y
	{
		[Token(Token = "0x6001430")]
		[Address(RVA = "0xCDDD04", Offset = "0xCDDD04", VA = "0xCDDD04")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x600142F")]
		[Address(RVA = "0xCDDC70", Offset = "0xCDDC70", VA = "0xCDDC70")]
		set
		{
		}
	}

	[Token(Token = "0x17000206")]
	public float Z
	{
		[Token(Token = "0x6001432")]
		[Address(RVA = "0xCDDE24", Offset = "0xCDDE24", VA = "0xCDDE24")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6001431")]
		[Address(RVA = "0xCDDD90", Offset = "0xCDDD90", VA = "0xCDDD90")]
		set
		{
		}
	}

	[Token(Token = "0x6001426")]
	[Address(RVA = "0xCDA22C", Offset = "0xCDA22C", VA = "0xCDA22C")]
	internal AkVector(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x6001427")]
	[Address(RVA = "0xCDD870", Offset = "0xCDD870", VA = "0xCDD870")]
	public AkVector()
	{
	}

	[Token(Token = "0x6001428")]
	[Address(RVA = "0xCDA4E4", Offset = "0xCDA4E4", VA = "0xCDA4E4")]
	internal static IntPtr getCPtr(AkVector obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6001429")]
	[Address(RVA = "0xCDD910", Offset = "0xCDD910", VA = "0xCDD910", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x600142A")]
	[Address(RVA = "0xCDD93C", Offset = "0xCDD93C", VA = "0xCDD93C", Slot = "1")]
	~AkVector()
	{
	}

	[Token(Token = "0x600142B")]
	[Address(RVA = "0xCDD99C", Offset = "0xCDD99C", VA = "0xCDD99C", Slot = "6")]
	public virtual void Dispose()
	{
	}

	[Token(Token = "0x600142C")]
	[Address(RVA = "0xCDDAC4", Offset = "0xCDDAC4", VA = "0xCDDAC4")]
	public void Zero()
	{
	}
}
[Token(Token = "0x200025E")]
public class AkVertex : IDisposable
{
	[Token(Token = "0x4000F8D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private IntPtr swigCPtr;

	[Token(Token = "0x4000F8E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	protected bool swigCMemOwn;

	[Token(Token = "0x17000207")]
	public float X
	{
		[Token(Token = "0x600143B")]
		[Address(RVA = "0xCDE248", Offset = "0xCDE248", VA = "0xCDE248")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x600143A")]
		[Address(RVA = "0xCD8B98", Offset = "0xCD8B98", VA = "0xCD8B98")]
		set
		{
		}
	}

	[Token(Token = "0x17000208")]
	public float Y
	{
		[Token(Token = "0x600143D")]
		[Address(RVA = "0xCDE2D4", Offset = "0xCDE2D4", VA = "0xCDE2D4")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x600143C")]
		[Address(RVA = "0xCD8C2C", Offset = "0xCD8C2C", VA = "0xCD8C2C")]
		set
		{
		}
	}

	[Token(Token = "0x17000209")]
	public float Z
	{
		[Token(Token = "0x600143F")]
		[Address(RVA = "0xCDE360", Offset = "0xCDE360", VA = "0xCDE360")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x600143E")]
		[Address(RVA = "0xCD8CC0", Offset = "0xCD8CC0", VA = "0xCD8CC0")]
		set
		{
		}
	}

	[Token(Token = "0x6001433")]
	[Address(RVA = "0xCDDEB0", Offset = "0xCDDEB0", VA = "0xCDDEB0")]
	internal AkVertex(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x6001434")]
	[Address(RVA = "0xCDDED8", Offset = "0xCDDED8", VA = "0xCDDED8")]
	public AkVertex()
	{
	}

	[Token(Token = "0x6001435")]
	[Address(RVA = "0xCDDF78", Offset = "0xCDDF78", VA = "0xCDDF78")]
	public AkVertex(float in_X, float in_Y, float in_Z)
	{
	}

	[Token(Token = "0x6001436")]
	[Address(RVA = "0xCDE03C", Offset = "0xCDE03C", VA = "0xCDE03C")]
	internal static IntPtr getCPtr(AkVertex obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6001437")]
	[Address(RVA = "0xCDE094", Offset = "0xCDE094", VA = "0xCDE094", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x6001438")]
	[Address(RVA = "0xCDE0C0", Offset = "0xCDE0C0", VA = "0xCDE0C0", Slot = "1")]
	~AkVertex()
	{
	}

	[Token(Token = "0x6001439")]
	[Address(RVA = "0xCDE120", Offset = "0xCDE120", VA = "0xCDE120", Slot = "6")]
	public virtual void Dispose()
	{
	}

	[Token(Token = "0x6001440")]
	[Address(RVA = "0xCDE3EC", Offset = "0xCDE3EC", VA = "0xCDE3EC")]
	public void Clear()
	{
	}

	[Token(Token = "0x6001441")]
	[Address(RVA = "0xCDE478", Offset = "0xCDE478", VA = "0xCDE478")]
	public static int GetSizeOf()
	{
		return default(int);
	}

	[Token(Token = "0x6001442")]
	[Address(RVA = "0xCDE4F8", Offset = "0xCDE4F8", VA = "0xCDE4F8")]
	public void Clone(AkVertex other)
	{
	}
}
[Token(Token = "0x200025F")]
public class AkAndroidSettings : AkWwiseInitializationSettings.PlatformSettings
{
	[Serializable]
	[Token(Token = "0x2000260")]
	public class PlatformAdvancedSettings : AkCommonAdvancedSettings
	{
		[Token(Token = "0x4000F92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1F8D48", Offset = "0x1F8D48")]
		public bool m_RoundFrameSizeToHardwareSize;

		[Token(Token = "0x6001447")]
		[Address(RVA = "0x469310", Offset = "0x469310", VA = "0x469310")]
		public PlatformAdvancedSettings()
		{
		}

		[Token(Token = "0x6001448")]
		[Address(RVA = "0x4693A4", Offset = "0x4693A4", VA = "0x4693A4")]
		public void CopyTo(AkPlatformInitSettings settings)
		{
		}
	}

	[Token(Token = "0x4000F8F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[HideInInspector]
	public AkCommonUserSettings UserSettings;

	[Token(Token = "0x4000F90")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[HideInInspector]
	public PlatformAdvancedSettings AdvancedSettings;

	[Token(Token = "0x4000F91")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[HideInInspector]
	public AkCommonCommSettings CommsSettings;

	[Token(Token = "0x6001443")]
	[Address(RVA = "0x468F60", Offset = "0x468F60", VA = "0x468F60")]
	public AkAndroidSettings()
	{
	}

	[Token(Token = "0x6001444")]
	[Address(RVA = "0x4692F8", Offset = "0x4692F8", VA = "0x4692F8", Slot = "10")]
	protected override AkCommonUserSettings GetUserSettings()
	{
		return null;
	}

	[Token(Token = "0x6001445")]
	[Address(RVA = "0x469300", Offset = "0x469300", VA = "0x469300", Slot = "11")]
	protected override AkCommonAdvancedSettings GetAdvancedSettings()
	{
		return null;
	}

	[Token(Token = "0x6001446")]
	[Address(RVA = "0x469308", Offset = "0x469308", VA = "0x469308", Slot = "12")]
	protected override AkCommonCommSettings GetCommsSettings()
	{
		return null;
	}
}
[Token(Token = "0x2000261")]
public class AkAcousticSurfaceArray : AkBaseArray<AkAcousticSurface>
{
	[Token(Token = "0x1700020A")]
	protected override int StructureSize
	{
		[Token(Token = "0x600144A")]
		[Address(RVA = "0x4676D8", Offset = "0x4676D8", VA = "0x4676D8", Slot = "6")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x6001449")]
	[Address(RVA = "0x46766C", Offset = "0x46766C", VA = "0x46766C")]
	public AkAcousticSurfaceArray(int count)
	{
	}

	[Token(Token = "0x600144B")]
	[Address(RVA = "0x467758", Offset = "0x467758", VA = "0x467758", Slot = "7")]
	protected override void ClearAtIntPtr(IntPtr address)
	{
	}

	[Token(Token = "0x600144C")]
	[Address(RVA = "0x4677E0", Offset = "0x4677E0", VA = "0x4677E0", Slot = "8")]
	protected override AkAcousticSurface CreateNewReferenceFromIntPtr(IntPtr address)
	{
		return null;
	}

	[Token(Token = "0x600144D")]
	[Address(RVA = "0x46785C", Offset = "0x46785C", VA = "0x46785C", Slot = "9")]
	protected override void CloneIntoReferenceFromIntPtr(IntPtr address, AkAcousticSurface other)
	{
	}
}
[Token(Token = "0x2000262")]
public static class AkAudioInputManager
{
	[Token(Token = "0x2000263")]
	public delegate void AudioFormatDelegate(uint playingID, AkAudioFormat format);

	[Token(Token = "0x2000264")]
	[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x1F8EBC", Offset = "0x1F8EBC")]
	public delegate void AudioFormatInteropDelegate(uint playingID, IntPtr format);

	[Token(Token = "0x2000265")]
	public delegate bool AudioSamplesDelegate(uint playingID, uint channelIndex, float[] samples);

	[Token(Token = "0x2000266")]
	[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x1F8ED0", Offset = "0x1F8ED0")]
	public delegate bool AudioSamplesInteropDelegate(uint playingID, [In][Out] float[] samples, uint channelIndex, uint frames);

	[Token(Token = "0x4000F93")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static bool initialized;

	[Token(Token = "0x4000F94")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	private static readonly Dictionary<uint, AudioSamplesDelegate> audioSamplesDelegates;

	[Token(Token = "0x4000F95")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static readonly Dictionary<uint, AudioFormatDelegate> audioFormatDelegates;

	[Token(Token = "0x4000F96")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private static readonly AkAudioFormat audioFormat;

	[Token(Token = "0x4000F97")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static readonly AudioSamplesInteropDelegate audioSamplesDelegate;

	[Token(Token = "0x4000F98")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private static readonly AudioFormatInteropDelegate audioFormatDelegate;

	[Token(Token = "0x4000F99")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1F8D7C", Offset = "0x1F8D7C")]
	private static AkCallbackManager.EventCallback <>f__mg$cache0;

	[Token(Token = "0x4000F9A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1F8D8C", Offset = "0x1F8D8C")]
	private static AkCallbackManager.EventCallback <>f__mg$cache1;

	[Token(Token = "0x4000F9B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1F8D9C", Offset = "0x1F8D9C")]
	private static AkCallbackManager.EventCallback <>f__mg$cache2;

	[Token(Token = "0x4000F9C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1F8DAC", Offset = "0x1F8DAC")]
	private static AudioSamplesInteropDelegate <>f__mg$cache3;

	[Token(Token = "0x4000F9D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1F8DBC", Offset = "0x1F8DBC")]
	private static AudioFormatInteropDelegate <>f__mg$cache4;

	[Token(Token = "0x600144E")]
	[Address(RVA = "0x46A7BC", Offset = "0x46A7BC", VA = "0x46A7BC")]
	public static uint PostAudioInputEvent(Event akEvent, GameObject gameObject, AudioSamplesDelegate sampleDelegate, [Optional] AudioFormatDelegate formatDelegate)
	{
		return default(uint);
	}

	[Token(Token = "0x600144F")]
	[Address(RVA = "0x46ABE4", Offset = "0x46ABE4", VA = "0x46ABE4")]
	public static uint PostAudioInputEvent(uint akEventID, GameObject gameObject, AudioSamplesDelegate sampleDelegate, [Optional] AudioFormatDelegate formatDelegate)
	{
		return default(uint);
	}

	[Token(Token = "0x6001450")]
	[Address(RVA = "0x46ADC0", Offset = "0x46ADC0", VA = "0x46ADC0")]
	public static uint PostAudioInputEvent(string akEventName, GameObject gameObject, AudioSamplesDelegate sampleDelegate, [Optional] AudioFormatDelegate formatDelegate)
	{
		return default(uint);
	}

	[Token(Token = "0x6001451")]
	[Address(RVA = "0x46A440", Offset = "0x46A440", VA = "0x46A440")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x1F8DCC", Offset = "0x1F8DCC")]
	private static bool InternalAudioSamplesDelegate(uint playingID, float[] samples, uint channelIndex, uint frames)
	{
		return default(bool);
	}

	[Token(Token = "0x6001452")]
	[Address(RVA = "0x46A614", Offset = "0x46A614", VA = "0x46A614")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x1F8E44", Offset = "0x1F8E44")]
	private static void InternalAudioFormatDelegate(uint playingID, IntPtr format)
	{
	}

	[Token(Token = "0x6001453")]
	[Address(RVA = "0x46A970", Offset = "0x46A970", VA = "0x46A970")]
	private static void TryInitialize()
	{
	}

	[Token(Token = "0x6001454")]
	[Address(RVA = "0x46AA98", Offset = "0x46AA98", VA = "0x46AA98")]
	private static void AddPlayingID(uint playingID, AudioSamplesDelegate sampleDelegate, AudioFormatDelegate formatDelegate)
	{
	}

	[Token(Token = "0x6001455")]
	[Address(RVA = "0x46B3F4", Offset = "0x46B3F4", VA = "0x46B3F4")]
	private static void EventCallback(object cookie, AkCallbackType type, AkCallbackInfo callbackInfo)
	{
	}
}
[Token(Token = "0x2000267")]
[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0x1F8EE4", Offset = "0x1F8EE4")]
public class AkAuxSendArray : IDisposable
{
	[Token(Token = "0x4000F9E")]
	private const int MAX_COUNT = 4;

	[Token(Token = "0x4000F9F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private readonly int SIZE_OF_AKAUXSENDVALUE;

	[Token(Token = "0x4000FA0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private IntPtr m_Buffer;

	[Token(Token = "0x4000FA1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private int m_Count;

	[Token(Token = "0x1700020B")]
	public AkAuxSendValue Item
	{
		[Token(Token = "0x6001468")]
		[Address(RVA = "0x46DE14", Offset = "0x46DE14", VA = "0x46DE14")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700020C")]
	public bool isFull
	{
		[Token(Token = "0x6001469")]
		[Address(RVA = "0x46DFA0", Offset = "0x46DFA0", VA = "0x46DFA0")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6001467")]
	[Address(RVA = "0x46DD34", Offset = "0x46DD34", VA = "0x46DD34")]
	public AkAuxSendArray()
	{
	}

	[Token(Token = "0x600146A")]
	[Address(RVA = "0x46E010", Offset = "0x46E010", VA = "0x46E010", Slot = "4")]
	public void Dispose()
	{
	}

	[Token(Token = "0x600146B")]
	[Address(RVA = "0x46E0C4", Offset = "0x46E0C4", VA = "0x46E0C4", Slot = "1")]
	~AkAuxSendArray()
	{
	}

	[Token(Token = "0x600146C")]
	[Address(RVA = "0x46E120", Offset = "0x46E120", VA = "0x46E120")]
	public void Reset()
	{
	}

	[Token(Token = "0x600146D")]
	[Address(RVA = "0x46E12C", Offset = "0x46E12C", VA = "0x46E12C")]
	public bool Add(GameObject in_listenerGameObj, uint in_AuxBusID, float in_fValue)
	{
		return default(bool);
	}

	[Token(Token = "0x600146E")]
	[Address(RVA = "0x46E28C", Offset = "0x46E28C", VA = "0x46E28C")]
	public bool Add(uint in_AuxBusID, float in_fValue)
	{
		return default(bool);
	}

	[Token(Token = "0x600146F")]
	[Address(RVA = "0x46E3A0", Offset = "0x46E3A0", VA = "0x46E3A0")]
	public bool Contains(GameObject in_listenerGameObj, uint in_AuxBusID)
	{
		return default(bool);
	}

	[Token(Token = "0x6001470")]
	[Address(RVA = "0x46E524", Offset = "0x46E524", VA = "0x46E524")]
	public bool Contains(uint in_AuxBusID)
	{
		return default(bool);
	}

	[Token(Token = "0x6001471")]
	[Address(RVA = "0x46E64C", Offset = "0x46E64C", VA = "0x46E64C")]
	public AKRESULT SetValues(GameObject gameObject)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001472")]
	[Address(RVA = "0x46E738", Offset = "0x46E738", VA = "0x46E738")]
	public AKRESULT GetValues(GameObject gameObject)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001473")]
	[Address(RVA = "0x46E834", Offset = "0x46E834", VA = "0x46E834")]
	public IntPtr GetBuffer()
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6001474")]
	[Address(RVA = "0x46E83C", Offset = "0x46E83C", VA = "0x46E83C")]
	public int Count()
	{
		return default(int);
	}

	[Token(Token = "0x6001475")]
	[Address(RVA = "0x46DF2C", Offset = "0x46DF2C", VA = "0x46DF2C")]
	private IntPtr GetObjectPtr(int index)
	{
		return default(IntPtr);
	}
}
[Token(Token = "0x2000268")]
public static class AkBankManager
{
	[Token(Token = "0x2000269")]
	private class BankHandle
	{
		[Token(Token = "0x4000FA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		protected readonly string bankName;

		[Token(Token = "0x4000FA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		protected uint m_BankID;

		[Token(Token = "0x4000FA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1F8F18", Offset = "0x1F8F18")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0x1F8F18", Offset = "0x1F8F18")]
		private int <RefCount>k__BackingField;

		[Token(Token = "0x1700020D")]
		public int RefCount
		{
			[Token(Token = "0x600147D")]
			[Address(RVA = "0x4705C8", Offset = "0x4705C8", VA = "0x4705C8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1F8F4C", Offset = "0x1F8F4C")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x600147E")]
			[Address(RVA = "0x471024", Offset = "0x471024", VA = "0x471024")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1F8F5C", Offset = "0x1F8F5C")]
			private set
			{
			}
		}

		[Token(Token = "0x600147C")]
		[Address(RVA = "0x470340", Offset = "0x470340", VA = "0x470340")]
		public BankHandle(string name)
		{
		}

		[Token(Token = "0x600147F")]
		[Address(RVA = "0x47102C", Offset = "0x47102C", VA = "0x47102C", Slot = "4")]
		public virtual AKRESULT DoLoadBank()
		{
			return default(AKRESULT);
		}

		[Token(Token = "0x6001480")]
		[Address(RVA = "0x470360", Offset = "0x470360", VA = "0x470360")]
		public void LoadBank()
		{
		}

		[Token(Token = "0x6001481")]
		[Address(RVA = "0x4710D0", Offset = "0x4710D0", VA = "0x4710D0", Slot = "5")]
		public virtual void UnloadBank()
		{
		}

		[Token(Token = "0x6001482")]
		[Address(RVA = "0x4704C8", Offset = "0x4704C8", VA = "0x4704C8")]
		public void IncRef()
		{
		}

		[Token(Token = "0x6001483")]
		[Address(RVA = "0x470500", Offset = "0x470500", VA = "0x470500")]
		public void DecRef()
		{
		}

		[Token(Token = "0x6001484")]
		[Address(RVA = "0x47091C", Offset = "0x47091C", VA = "0x47091C")]
		protected void LogLoadResult(AKRESULT result)
		{
		}
	}

	[Token(Token = "0x200026A")]
	private class AsyncBankHandle : BankHandle
	{
		[Token(Token = "0x4000FA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private readonly AkCallbackManager.BankCallback bankCallback;

		[Token(Token = "0x4000FA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1F8F6C", Offset = "0x1F8F6C")]
		private static AkCallbackManager.BankCallback <>f__mg$cache0;

		[Token(Token = "0x6001485")]
		[Address(RVA = "0x4704D8", Offset = "0x4704D8", VA = "0x4704D8")]
		public AsyncBankHandle(string name, AkCallbackManager.BankCallback callback)
		{
		}

		[Token(Token = "0x6001486")]
		[Address(RVA = "0x4706C8", Offset = "0x4706C8", VA = "0x4706C8")]
		private static void GlobalBankCallback(uint in_bankID, IntPtr in_pInMemoryBankPtr, AKRESULT in_eLoadResult, uint in_memPoolId, object in_Cookie)
		{
		}

		[Token(Token = "0x6001487")]
		[Address(RVA = "0x470EE8", Offset = "0x470EE8", VA = "0x470EE8", Slot = "4")]
		public override AKRESULT DoLoadBank()
		{
			return default(AKRESULT);
		}
	}

	[Token(Token = "0x200026B")]
	private class DecodableBankHandle : BankHandle
	{
		[Token(Token = "0x4000FAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private readonly bool decodeBank;

		[Token(Token = "0x4000FAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly string decodedBankPath;

		[Token(Token = "0x4000FAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private readonly bool saveDecodedBank;

		[Token(Token = "0x6001488")]
		[Address(RVA = "0x46FFC4", Offset = "0x46FFC4", VA = "0x46FFC4")]
		public DecodableBankHandle(string name, bool save)
		{
		}

		[Token(Token = "0x6001489")]
		[Address(RVA = "0x4712F8", Offset = "0x4712F8", VA = "0x4712F8", Slot = "4")]
		public override AKRESULT DoLoadBank()
		{
			return default(AKRESULT);
		}

		[Token(Token = "0x600148A")]
		[Address(RVA = "0x471560", Offset = "0x471560", VA = "0x471560", Slot = "5")]
		public override void UnloadBank()
		{
		}
	}

	[Token(Token = "0x4000FA2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly Dictionary<string, BankHandle> m_BankHandles;

	[Token(Token = "0x4000FA3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	private static readonly List<BankHandle> BanksToUnload;

	[Token(Token = "0x4000FA4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static readonly Mutex m_Mutex;

	[Token(Token = "0x6001476")]
	[Address(RVA = "0x46FD10", Offset = "0x46FD10", VA = "0x46FD10")]
	internal static void DoUnloadBanks()
	{
	}

	[Token(Token = "0x6001477")]
	[Address(RVA = "0x46FED8", Offset = "0x46FED8", VA = "0x46FED8")]
	internal static void Reset()
	{
	}

	[Token(Token = "0x6001478")]
	[Address(RVA = "0x4659D0", Offset = "0x4659D0", VA = "0x4659D0")]
	public static void LoadBank(string name, bool decodeBank, bool saveDecodedBank)
	{
	}

	[Token(Token = "0x6001479")]
	[Address(RVA = "0x465D24", Offset = "0x465D24", VA = "0x465D24")]
	public static void LoadBankAsync(string name, [Optional] AkCallbackManager.BankCallback callback)
	{
	}

	[Token(Token = "0x600147A")]
	[Address(RVA = "0x466034", Offset = "0x466034", VA = "0x466034")]
	public static void UnloadBank(string name)
	{
	}
}
[Token(Token = "0x200026C")]
[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0x1F8F7C", Offset = "0x1F8F7C")]
public abstract class AkBaseArray<T> : IDisposable
{
	[Token(Token = "0x4000FAD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1F8FB0", Offset = "0x1F8FB0")]
	[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0x1F8FB0", Offset = "0x1F8FB0")]
	private int <Capacity>k__BackingField;

	[Token(Token = "0x4000FAE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private IntPtr m_Buffer;

	[Token(Token = "0x1700020E")]
	public int Capacity
	{
		[Token(Token = "0x600148E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1F8FE4", Offset = "0x1F8FE4")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x600148F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1F8FF4", Offset = "0x1F8FF4")]
		private set
		{
		}
	}

	[Token(Token = "0x1700020F")]
	protected abstract int StructureSize
	{
		[Token(Token = "0x6001491")]
		get;
	}

	[Token(Token = "0x17000210")]
	public T Item
	{
		[Token(Token = "0x6001495")]
		get
		{
			return (T)null;
		}
		[Token(Token = "0x6001496")]
		set
		{
		}
	}

	[Token(Token = "0x600148B")]
	public AkBaseArray(int capacity)
	{
	}

	[Token(Token = "0x600148C")]
	public void Dispose()
	{
	}

	[Token(Token = "0x600148D")]
	~AkBaseArray()
	{
	}

	[Token(Token = "0x6001490")]
	public virtual int Count()
	{
		return default(int);
	}

	[Token(Token = "0x6001492")]
	protected virtual void ClearAtIntPtr(IntPtr address)
	{
	}

	[Token(Token = "0x6001493")]
	protected abstract T CreateNewReferenceFromIntPtr(IntPtr address);

	[Token(Token = "0x6001494")]
	protected abstract void CloneIntoReferenceFromIntPtr(IntPtr address, T other);

	[Token(Token = "0x6001497")]
	public IntPtr GetBuffer()
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6001498")]
	protected IntPtr GetObjectPtr(int index)
	{
		return default(IntPtr);
	}
}
[Token(Token = "0x200026D")]
public class AkBasePathGetter
{
	[Token(Token = "0x4000FAF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static string DefaultBasePath;

	[Token(Token = "0x6001499")]
	[Address(RVA = "0x471614", Offset = "0x471614", VA = "0x471614")]
	public AkBasePathGetter()
	{
	}

	[Token(Token = "0x600149A")]
	[Address(RVA = "0x47161C", Offset = "0x47161C", VA = "0x47161C")]
	public static string GetPlatformName()
	{
		return null;
	}

	[Token(Token = "0x600149B")]
	[Address(RVA = "0x4716D4", Offset = "0x4716D4", VA = "0x4716D4")]
	public static string GetPlatformBasePath()
	{
		return null;
	}

	[Token(Token = "0x600149C")]
	[Address(RVA = "0x4717B8", Offset = "0x4717B8", VA = "0x4717B8")]
	public static string GetFullSoundBankPath()
	{
		return null;
	}

	[Token(Token = "0x600149D")]
	[Address(RVA = "0x4719EC", Offset = "0x4719EC", VA = "0x4719EC")]
	public static void FixSlashes(ref string path, char separatorChar, char badChar, bool addTrailingSlash)
	{
	}

	[Token(Token = "0x600149E")]
	[Address(RVA = "0x471904", Offset = "0x471904", VA = "0x471904")]
	public static void FixSlashes(ref string path)
	{
	}

	[Token(Token = "0x600149F")]
	[Address(RVA = "0x471174", Offset = "0x471174", VA = "0x471174")]
	public static string GetSoundbankBasePath()
	{
		return null;
	}
}
[Token(Token = "0x200026E")]
public static class AkCallbackManager
{
	[Token(Token = "0x200026F")]
	public delegate void EventCallback(object in_cookie, AkCallbackType in_type, AkCallbackInfo in_info);

	[Token(Token = "0x2000270")]
	public delegate void MonitoringCallback(AkMonitorErrorCode in_errorCode, AkMonitorErrorLevel in_errorLevel, uint in_playingID, ulong in_gameObjID, string in_msg);

	[Token(Token = "0x2000271")]
	public delegate void BankCallback(uint in_bankID, IntPtr in_InMemoryBankPtr, AKRESULT in_eLoadResult, uint in_memPoolId, object in_Cookie);

	[Token(Token = "0x2000272")]
	public class EventCallbackPackage
	{
		[Token(Token = "0x4000FC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public bool m_bNotifyEndOfEvent;

		[Token(Token = "0x4000FC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public EventCallback m_Callback;

		[Token(Token = "0x4000FC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public object m_Cookie;

		[Token(Token = "0x4000FC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public uint m_playingID;

		[Token(Token = "0x60014B9")]
		[Address(RVA = "0x475DB0", Offset = "0x475DB0", VA = "0x475DB0")]
		public EventCallbackPackage()
		{
		}

		[Token(Token = "0x60014BA")]
		[Address(RVA = "0x475DB8", Offset = "0x475DB8", VA = "0x475DB8")]
		public static EventCallbackPackage Create(EventCallback in_cb, object in_cookie, ref uint io_Flags)
		{
			return null;
		}

		[Token(Token = "0x60014BB")]
		[Address(RVA = "0x475F34", Offset = "0x475F34", VA = "0x475F34", Slot = "1")]
		~EventCallbackPackage()
		{
		}
	}

	[Token(Token = "0x2000273")]
	public class BankCallbackPackage
	{
		[Token(Token = "0x4000FC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public BankCallback m_Callback;

		[Token(Token = "0x4000FC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public object m_Cookie;

		[Token(Token = "0x60014BC")]
		[Address(RVA = "0x475B18", Offset = "0x475B18", VA = "0x475B18")]
		public BankCallbackPackage(BankCallback in_cb, object in_cookie)
		{
		}
	}

	[Token(Token = "0x2000274")]
	public delegate AKRESULT BGMCallback(bool in_bOtherAudioPlaying, object in_Cookie);

	[Token(Token = "0x2000275")]
	public class BGMCallbackPackage
	{
		[Token(Token = "0x4000FC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public BGMCallback m_Callback;

		[Token(Token = "0x4000FC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public object m_Cookie;

		[Token(Token = "0x60014C1")]
		[Address(RVA = "0x4737B8", Offset = "0x4737B8", VA = "0x4737B8")]
		public BGMCallbackPackage()
		{
		}
	}

	[Token(Token = "0x2000276")]
	public class InitializationSettings
	{
		[Token(Token = "0x4000FC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static int DefaultBufferSize;

		[Token(Token = "0x4000FCA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public static bool DefaultIsLoggingEnabled;

		[Token(Token = "0x4000FCB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public int BufferSize;

		[Token(Token = "0x4000FCC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public bool IsLoggingEnabled;

		[Token(Token = "0x60014C2")]
		[Address(RVA = "0x471E98", Offset = "0x471E98", VA = "0x471E98")]
		public InitializationSettings()
		{
		}
	}

	[Token(Token = "0x4000FB0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1F9004", Offset = "0x1F9004")]
	[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0x1F9004", Offset = "0x1F9004")]
	private static bool <IsLoggingEnabled>k__BackingField;

	[Token(Token = "0x4000FB1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	private static readonly AkEventCallbackInfo AkEventCallbackInfo;

	[Token(Token = "0x4000FB2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static readonly AkDynamicSequenceItemCallbackInfo AkDynamicSequenceItemCallbackInfo;

	[Token(Token = "0x4000FB3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private static readonly AkMIDIEventCallbackInfo AkMIDIEventCallbackInfo;

	[Token(Token = "0x4000FB4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static readonly AkMarkerCallbackInfo AkMarkerCallbackInfo;

	[Token(Token = "0x4000FB5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private static readonly AkDurationCallbackInfo AkDurationCallbackInfo;

	[Token(Token = "0x4000FB6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static readonly AkMusicSyncCallbackInfo AkMusicSyncCallbackInfo;

	[Token(Token = "0x4000FB7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private static readonly AkMusicPlaylistCallbackInfo AkMusicPlaylistCallbackInfo;

	[Token(Token = "0x4000FB8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private static readonly AkAudioSourceChangeCallbackInfo AkAudioSourceChangeCallbackInfo;

	[Token(Token = "0x4000FB9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private static readonly AkMonitoringCallbackInfo AkMonitoringCallbackInfo;

	[Token(Token = "0x4000FBA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private static readonly AkBankCallbackInfo AkBankCallbackInfo;

	[Token(Token = "0x4000FBB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private static readonly Dictionary<int, EventCallbackPackage> m_mapEventCallbacks;

	[Token(Token = "0x4000FBC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private static readonly Dictionary<int, BankCallbackPackage> m_mapBankCallbacks;

	[Token(Token = "0x4000FBD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private static EventCallbackPackage m_LastAddedEventPackage;

	[Token(Token = "0x4000FBE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private static IntPtr m_pNotifMem;

	[Token(Token = "0x4000FBF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private static MonitoringCallback m_MonitoringCB;

	[Token(Token = "0x4000FC0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private static BGMCallbackPackage ms_sourceChangeCallbackPkg;

	[Token(Token = "0x17000211")]
	private static bool IsLoggingEnabled
	{
		[Token(Token = "0x60014A1")]
		[Address(RVA = "0x472530", Offset = "0x472530", VA = "0x472530")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1F9038", Offset = "0x1F9038")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60014A2")]
		[Address(RVA = "0x4725BC", Offset = "0x4725BC", VA = "0x4725BC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1F9048", Offset = "0x1F9048")]
		set
		{
		}
	}

	[Token(Token = "0x60014A3")]
	[Address(RVA = "0x47264C", Offset = "0x47264C", VA = "0x47264C")]
	public static void RemoveEventCallback(uint in_playingID)
	{
	}

	[Token(Token = "0x60014A4")]
	[Address(RVA = "0x4729B4", Offset = "0x4729B4", VA = "0x4729B4")]
	public static void RemoveEventCallbackCookie(object in_cookie)
	{
	}

	[Token(Token = "0x60014A5")]
	[Address(RVA = "0x472D40", Offset = "0x472D40", VA = "0x472D40")]
	public static void RemoveBankCallback(object in_cookie)
	{
	}

	[Token(Token = "0x60014A6")]
	[Address(RVA = "0x4730CC", Offset = "0x4730CC", VA = "0x4730CC")]
	public static void SetLastAddedPlayingID(uint in_playingID)
	{
	}

	[Token(Token = "0x60014A7")]
	[Address(RVA = "0x473204", Offset = "0x473204", VA = "0x473204")]
	public static AKRESULT Init(InitializationSettings settings)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60014A8")]
	[Address(RVA = "0x4733F0", Offset = "0x4733F0", VA = "0x4733F0")]
	public static void Term()
	{
	}

	[Token(Token = "0x60014A9")]
	[Address(RVA = "0x4735B4", Offset = "0x4735B4", VA = "0x4735B4")]
	public static void SetMonitoringCallback(AkMonitorErrorLevel in_Level, MonitoringCallback in_CB)
	{
	}

	[Token(Token = "0x60014AA")]
	[Address(RVA = "0x4736E0", Offset = "0x4736E0", VA = "0x4736E0")]
	public static void SetBGMCallback(BGMCallback in_CB, object in_cookie)
	{
	}

	[Token(Token = "0x60014AB")]
	[Address(RVA = "0x4737C0", Offset = "0x4737C0", VA = "0x4737C0")]
	public static int PostCallbacks()
	{
		return default(int);
	}
}
[Token(Token = "0x2000277")]
public class AkChannelEmitterArray : IDisposable
{
	[Token(Token = "0x4000FCD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public IntPtr m_Buffer;

	[Token(Token = "0x4000FCE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private IntPtr m_Current;

	[Token(Token = "0x4000FCF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private uint m_MaxCount;

	[Token(Token = "0x4000FD0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1F9058", Offset = "0x1F9058")]
	[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0x1F9058", Offset = "0x1F9058")]
	private uint <Count>k__BackingField;

	[Token(Token = "0x17000212")]
	public uint Count
	{
		[Token(Token = "0x60014C5")]
		[Address(RVA = "0x4778DC", Offset = "0x4778DC", VA = "0x4778DC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1F908C", Offset = "0x1F908C")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x60014C6")]
		[Address(RVA = "0x4778D4", Offset = "0x4778D4", VA = "0x4778D4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1F909C", Offset = "0x1F909C")]
		private set
		{
		}
	}

	[Token(Token = "0x60014C4")]
	[Address(RVA = "0x477828", Offset = "0x477828", VA = "0x477828")]
	public AkChannelEmitterArray(uint in_Count)
	{
	}

	[Token(Token = "0x60014C7")]
	[Address(RVA = "0x4778E4", Offset = "0x4778E4", VA = "0x4778E4", Slot = "4")]
	public void Dispose()
	{
	}

	[Token(Token = "0x60014C8")]
	[Address(RVA = "0x477998", Offset = "0x477998", VA = "0x477998", Slot = "1")]
	~AkChannelEmitterArray()
	{
	}

	[Token(Token = "0x60014C9")]
	[Address(RVA = "0x4779F4", Offset = "0x4779F4", VA = "0x4779F4")]
	public void Reset()
	{
	}

	[Token(Token = "0x60014CA")]
	[Address(RVA = "0x477A08", Offset = "0x477A08", VA = "0x477A08")]
	public void Add(Vector3 in_Pos, Vector3 in_Forward, Vector3 in_Top, uint in_ChannelMask)
	{
	}
}
[Token(Token = "0x2000278")]
public class AkBasePlatformSettings : ScriptableObject
{
	[Token(Token = "0x17000213")]
	public virtual AkInitializationSettings AkInitializationSettings
	{
		[Token(Token = "0x60014CC")]
		[Address(RVA = "0x471CBC", Offset = "0x471CBC", VA = "0x471CBC", Slot = "4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000214")]
	public virtual AkSpatialAudioInitSettings AkSpatialAudioInitSettings
	{
		[Token(Token = "0x60014CD")]
		[Address(RVA = "0x471DC4", Offset = "0x471DC4", VA = "0x471DC4", Slot = "5")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000215")]
	public virtual AkCallbackManager.InitializationSettings CallbackManagerInitializationSettings
	{
		[Token(Token = "0x60014CE")]
		[Address(RVA = "0x471E30", Offset = "0x471E30", VA = "0x471E30", Slot = "6")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000216")]
	public virtual string InitialLanguage
	{
		[Token(Token = "0x60014CF")]
		[Address(RVA = "0x471F54", Offset = "0x471F54", VA = "0x471F54", Slot = "7")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000217")]
	public virtual string SoundbankPath
	{
		[Token(Token = "0x60014D0")]
		[Address(RVA = "0x471FB0", Offset = "0x471FB0", VA = "0x471FB0", Slot = "8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000218")]
	public virtual AkCommunicationSettings AkCommunicationSettings
	{
		[Token(Token = "0x60014D1")]
		[Address(RVA = "0x47203C", Offset = "0x47203C", VA = "0x47203C", Slot = "9")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60014CB")]
	[Address(RVA = "0x471CB4", Offset = "0x471CB4", VA = "0x471CB4")]
	public AkBasePlatformSettings()
	{
	}
}
[Serializable]
[Token(Token = "0x2000279")]
public class AkCommonOutputSettings
{
	[Token(Token = "0x200027A")]
	public enum PanningRule
	{
		[Token(Token = "0x4000FD6")]
		Speakers,
		[Token(Token = "0x4000FD7")]
		Headphones
	}

	[Serializable]
	[Token(Token = "0x200027B")]
	public class ChannelConfiguration
	{
		[Token(Token = "0x200027C")]
		public enum ChannelConfigType
		{
			[Token(Token = "0x4000FDC")]
			Anonymous,
			[Token(Token = "0x4000FDD")]
			Standard,
			[Token(Token = "0x4000FDE")]
			Ambisonic
		}

		[Token(Token = "0x200027D")]
		public enum ChannelMask
		{
			[Token(Token = "0x4000FE0")]
			NONE = 0,
			[Token(Token = "0x4000FE1")]
			FRONT_LEFT = 1,
			[Token(Token = "0x4000FE2")]
			FRONT_RIGHT = 2,
			[Token(Token = "0x4000FE3")]
			FRONT_CENTER = 4,
			[Token(Token = "0x4000FE4")]
			LOW_FREQUENCY = 8,
			[Token(Token = "0x4000FE5")]
			BACK_LEFT = 16,
			[Token(Token = "0x4000FE6")]
			BACK_RIGHT = 32,
			[Token(Token = "0x4000FE7")]
			BACK_CENTER = 256,
			[Token(Token = "0x4000FE8")]
			SIDE_LEFT = 512,
			[Token(Token = "0x4000FE9")]
			SIDE_RIGHT = 1024,
			[Token(Token = "0x4000FEA")]
			TOP = 2048,
			[Token(Token = "0x4000FEB")]
			HEIGHT_FRONT_LEFT = 4096,
			[Token(Token = "0x4000FEC")]
			HEIGHT_FRONT_CENTER = 8192,
			[Token(Token = "0x4000FED")]
			HEIGHT_FRONT_RIGHT = 16384,
			[Token(Token = "0x4000FEE")]
			HEIGHT_BACK_LEFT = 32768,
			[Token(Token = "0x4000FEF")]
			HEIGHT_BACK_CENTER = 65536,
			[Token(Token = "0x4000FF0")]
			HEIGHT_BACK_RIGHT = 131072,
			[Token(Token = "0x4000FF1")]
			SETUP_MONO = 4,
			[Token(Token = "0x4000FF2")]
			SETUP_0POINT1 = 8,
			[Token(Token = "0x4000FF3")]
			SETUP_1POINT1 = 12,
			[Token(Token = "0x4000FF4")]
			SETUP_STEREO = 3,
			[Token(Token = "0x4000FF5")]
			SETUP_2POINT1 = 11,
			[Token(Token = "0x4000FF6")]
			SETUP_3STEREO = 7,
			[Token(Token = "0x4000FF7")]
			SETUP_3POINT1 = 15,
			[Token(Token = "0x4000FF8")]
			SETUP_4 = 1539,
			[Token(Token = "0x4000FF9")]
			SETUP_4POINT1 = 1547,
			[Token(Token = "0x4000FFA")]
			SETUP_5 = 1543,
			[Token(Token = "0x4000FFB")]
			SETUP_5POINT1 = 1551,
			[Token(Token = "0x4000FFC")]
			SETUP_6 = 1587,
			[Token(Token = "0x4000FFD")]
			SETUP_6POINT1 = 1595,
			[Token(Token = "0x4000FFE")]
			SETUP_7 = 1591,
			[Token(Token = "0x4000FFF")]
			SETUP_7POINT1 = 1599,
			[Token(Token = "0x4001000")]
			SETUP_SURROUND = 259,
			[Token(Token = "0x4001001")]
			SETUP_DPL2 = 1539,
			[Token(Token = "0x4001002")]
			SETUP_HEIGHT_4 = 184320,
			[Token(Token = "0x4001003")]
			SETUP_HEIGHT_5 = 192512,
			[Token(Token = "0x4001004")]
			SETUP_HEIGHT_ALL = 258048,
			[Token(Token = "0x4001005")]
			SETUP_AURO_222 = 22019,
			[Token(Token = "0x4001006")]
			SETUP_AURO_8 = 185859,
			[Token(Token = "0x4001007")]
			SETUP_AURO_9 = 185863,
			[Token(Token = "0x4001008")]
			SETUP_AURO_9POINT1 = 185871,
			[Token(Token = "0x4001009")]
			SETUP_AURO_10 = 187911,
			[Token(Token = "0x400100A")]
			SETUP_AURO_10POINT1 = 187919,
			[Token(Token = "0x400100B")]
			SETUP_AURO_11 = 196103,
			[Token(Token = "0x400100C")]
			SETUP_AURO_11POINT1 = 196111,
			[Token(Token = "0x400100D")]
			SETUP_AURO_11_740 = 185911,
			[Token(Token = "0x400100E")]
			SETUP_AURO_11POINT1_740 = 185919,
			[Token(Token = "0x400100F")]
			SETUP_AURO_13_751 = 196151,
			[Token(Token = "0x4001010")]
			SETUP_AURO_13POINT1_751 = 196159,
			[Token(Token = "0x4001011")]
			SETUP_DOLBY_5_0_2 = 22023,
			[Token(Token = "0x4001012")]
			SETUP_DOLBY_5_1_2 = 22031,
			[Token(Token = "0x4001013")]
			SETUP_DOLBY_6_0_2 = 22067,
			[Token(Token = "0x4001014")]
			SETUP_DOLBY_6_1_2 = 22075,
			[Token(Token = "0x4001015")]
			SETUP_DOLBY_6_0_4 = 185907,
			[Token(Token = "0x4001016")]
			SETUP_DOLBY_6_1_4 = 185915,
			[Token(Token = "0x4001017")]
			SETUP_DOLBY_7_0_2 = 22071,
			[Token(Token = "0x4001018")]
			SETUP_DOLBY_7_1_2 = 22079,
			[Token(Token = "0x4001019")]
			SETUP_DOLBY_7_0_4 = 185911,
			[Token(Token = "0x400101A")]
			SETUP_DOLBY_7_1_4 = 185919,
			[Token(Token = "0x400101B")]
			SETUP_ALL_SPEAKERS = 261951
		}

		[Token(Token = "0x4000FD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1F917C", Offset = "0x1F917C")]
		public ChannelConfigType m_ChannelConfigType;

		[Token(Token = "0x4000FD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1F91B0", Offset = "0x1F91B0")]
		[AttributeAttribute(Name = "AkEnumFlagAttribute", RVA = "0x1F91B0", Offset = "0x1F91B0")]
		public ChannelMask m_ChannelMask;

		[Token(Token = "0x4000FDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1F9250", Offset = "0x1F9250")]
		public uint m_NumberOfChannels;

		[Token(Token = "0x60014D4")]
		[Address(RVA = "0x4692F0", Offset = "0x4692F0", VA = "0x4692F0")]
		public ChannelConfiguration()
		{
		}

		[Token(Token = "0x60014D5")]
		[Address(RVA = "0x478E60", Offset = "0x478E60", VA = "0x478E60")]
		public void CopyTo(AkChannelConfig config)
		{
		}
	}

	[Token(Token = "0x4000FD1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1F90AC", Offset = "0x1F90AC")]
	public string m_AudioDeviceShareset;

	[Token(Token = "0x4000FD2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1F90E0", Offset = "0x1F90E0")]
	public uint m_DeviceID;

	[Token(Token = "0x4000FD3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1F9114", Offset = "0x1F9114")]
	public PanningRule m_PanningRule;

	[Token(Token = "0x4000FD4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1F9148", Offset = "0x1F9148")]
	public ChannelConfiguration m_ChannelConfig;

	[Token(Token = "0x60014D2")]
	[Address(RVA = "0x46922C", Offset = "0x46922C", VA = "0x46922C")]
	public AkCommonOutputSettings()
	{
	}

	[Token(Token = "0x60014D3")]
	[Address(RVA = "0x478CC4", Offset = "0x478CC4", VA = "0x478CC4")]
	public void CopyTo(AkOutputSettings settings)
	{
	}
}
[Serializable]
[Token(Token = "0x200027E")]
public class AkCommonUserSettings
{
	[Serializable]
	[Token(Token = "0x200027F")]
	public class SpatialAudioSettings
	{
		[Token(Token = "0x2000280")]
		public enum DiffractionFlags
		{
			[Token(Token = "0x4001033")]
			UseBuiltInParam = 1,
			[Token(Token = "0x4001034")]
			UseObstruction = 2,
			[Token(Token = "0x4001035")]
			CalcEmitterVirtualPosition = 8
		}

		[Token(Token = "0x400102F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1F96B4", Offset = "0x1F96B4")]
		public uint m_PoolSize;

		[Token(Token = "0x4001030")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1F96E8", Offset = "0x1F96E8")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x1F96E8", Offset = "0x1F96E8")]
		public uint m_MaxSoundPropagationDepth;

		[Token(Token = "0x4001031")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1F9738", Offset = "0x1F9738")]
		[AttributeAttribute(Name = "AkEnumFlagAttribute", RVA = "0x1F9738", Offset = "0x1F9738")]
		public DiffractionFlags m_DiffractionFlags;

		[Token(Token = "0x60014DE")]
		[Address(RVA = "0x47A0EC", Offset = "0x47A0EC", VA = "0x47A0EC")]
		public SpatialAudioSettings()
		{
		}
	}

	[Token(Token = "0x400101C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1F9284", Offset = "0x1F9284")]
	public string m_BasePath;

	[Token(Token = "0x400101D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1F92B8", Offset = "0x1F92B8")]
	public string m_StartupLanguage;

	[Token(Token = "0x400101E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1F92EC", Offset = "0x1F92EC")]
	public uint m_PreparePoolSize;

	[Token(Token = "0x400101F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1F9320", Offset = "0x1F9320")]
	public int m_CallbackManagerBufferSize;

	[Token(Token = "0x4001020")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1F9354", Offset = "0x1F9354")]
	public bool m_EngineLogging;

	[Token(Token = "0x4001021")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1F9388", Offset = "0x1F9388")]
	public uint m_MaximumNumberOfMemoryPools;

	[Token(Token = "0x4001022")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1F93BC", Offset = "0x1F93BC")]
	public uint m_MaximumNumberOfPositioningPaths;

	[Token(Token = "0x4001023")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1F93F0", Offset = "0x1F93F0")]
	public uint m_DefaultPoolSize;

	[Token(Token = "0x4001024")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1F9424", Offset = "0x1F9424")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x1F9424", Offset = "0x1F9424")]
	public float m_MemoryCutoffThreshold;

	[Token(Token = "0x4001025")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1F9474", Offset = "0x1F9474")]
	public uint m_CommandQueueSize;

	[Token(Token = "0x4001026")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1F94A8", Offset = "0x1F94A8")]
	public uint m_SamplesPerFrame;

	[Token(Token = "0x4001027")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1F94DC", Offset = "0x1F94DC")]
	public AkCommonOutputSettings m_MainOutputSettings;

	[Token(Token = "0x4001028")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1F9510", Offset = "0x1F9510")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x1F9510", Offset = "0x1F9510")]
	public float m_StreamingLookAheadRatio;

	[Token(Token = "0x4001029")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1F9560", Offset = "0x1F9560")]
	public uint m_StreamManagerPoolSize;

	[Token(Token = "0x400102A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1F9594", Offset = "0x1F9594")]
	public uint m_SampleRate;

	[Token(Token = "0x400102B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1F95C8", Offset = "0x1F95C8")]
	public uint m_LowerEnginePoolSize;

	[Token(Token = "0x400102C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1F95FC", Offset = "0x1F95FC")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x1F95FC", Offset = "0x1F95FC")]
	public float m_LowerEngineMemoryCutoffThreshold;

	[Token(Token = "0x400102D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1F964C", Offset = "0x1F964C")]
	public ushort m_NumberOfRefillsInVoice;

	[Token(Token = "0x400102E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1F9680", Offset = "0x1F9680")]
	public SpatialAudioSettings m_SpatialAudioSettings;

	[Token(Token = "0x60014D6")]
	[Address(RVA = "0x4690C4", Offset = "0x4690C4", VA = "0x4690C4")]
	public AkCommonUserSettings()
	{
	}

	[Token(Token = "0x60014D7")]
	[Address(RVA = "0x479218", Offset = "0x479218", VA = "0x479218")]
	public void CopyTo(AkMemSettings settings)
	{
	}

	[Token(Token = "0x60014D8")]
	[Address(RVA = "0x479A34", Offset = "0x479A34", VA = "0x479A34", Slot = "4")]
	public virtual void CopyTo(AkInitSettings settings)
	{
	}

	[Token(Token = "0x60014D9")]
	[Address(RVA = "0x4796C8", Offset = "0x4796C8", VA = "0x4796C8")]
	public void CopyTo(AkMusicSettings settings)
	{
	}

	[Token(Token = "0x60014DA")]
	[Address(RVA = "0x479400", Offset = "0x479400", VA = "0x479400")]
	public void CopyTo(AkStreamMgrSettings settings)
	{
	}

	[Token(Token = "0x60014DB")]
	[Address(RVA = "0x479F90", Offset = "0x479F90", VA = "0x479F90", Slot = "5")]
	public virtual void CopyTo(AkDeviceSettings settings)
	{
	}

	[Token(Token = "0x60014DC")]
	[Address(RVA = "0x479F94", Offset = "0x479F94", VA = "0x479F94", Slot = "6")]
	public virtual void CopyTo(AkPlatformInitSettings settings)
	{
	}

	[Token(Token = "0x60014DD")]
	[Address(RVA = "0x47A048", Offset = "0x47A048", VA = "0x47A048", Slot = "7")]
	public virtual void CopyTo(AkSpatialAudioInitSettings settings)
	{
	}
}
[Serializable]
[Token(Token = "0x2000281")]
public class AkCommonAdvancedSettings
{
	[Serializable]
	[Token(Token = "0x2000282")]
	public class SpatialAudioSettings
	{
		[Token(Token = "0x4001041")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1F9A14", Offset = "0x1F9A14")]
		public float m_DiffractionShadowAttenuationFactor;

		[Token(Token = "0x4001042")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1F9A48", Offset = "0x1F9A48")]
		public float m_DiffractionShadowDegrees;

		[Token(Token = "0x60014E3")]
		[Address(RVA = "0x4786C4", Offset = "0x4786C4", VA = "0x4786C4")]
		public SpatialAudioSettings()
		{
		}
	}

	[Token(Token = "0x4001036")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1F97D8", Offset = "0x1F97D8")]
	public uint m_IOMemorySize;

	[Token(Token = "0x4001037")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1F980C", Offset = "0x1F980C")]
	public float m_TargetAutoStreamBufferLengthMs;

	[Token(Token = "0x4001038")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1F9840", Offset = "0x1F9840")]
	public bool m_UseStreamCache;

	[Token(Token = "0x4001039")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1F9874", Offset = "0x1F9874")]
	public uint m_MaximumPinnedBytesInCache;

	[Token(Token = "0x400103A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1F98A8", Offset = "0x1F98A8")]
	public int m_PrepareEventMemoryPoolID;

	[Token(Token = "0x400103B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1F98DC", Offset = "0x1F98DC")]
	public bool m_EnableGameSyncPreparation;

	[Token(Token = "0x400103C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1F9910", Offset = "0x1F9910")]
	public uint m_ContinuousPlaybackLookAhead;

	[Token(Token = "0x400103D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1F9944", Offset = "0x1F9944")]
	public uint m_MonitorPoolSize;

	[Token(Token = "0x400103E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1F9978", Offset = "0x1F9978")]
	public uint m_MonitorQueuePoolSize;

	[Token(Token = "0x400103F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1F99AC", Offset = "0x1F99AC")]
	public uint m_MaximumHardwareTimeoutMs;

	[Token(Token = "0x4001040")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1F99E0", Offset = "0x1F99E0")]
	public SpatialAudioSettings m_SpatialAudioSettings;

	[Token(Token = "0x60014DF")]
	[Address(RVA = "0x46935C", Offset = "0x46935C", VA = "0x46935C")]
	public AkCommonAdvancedSettings()
	{
	}

	[Token(Token = "0x60014E0")]
	[Address(RVA = "0x477EE8", Offset = "0x477EE8", VA = "0x477EE8", Slot = "4")]
	public virtual void CopyTo(AkDeviceSettings settings)
	{
	}

	[Token(Token = "0x60014E1")]
	[Address(RVA = "0x4781EC", Offset = "0x4781EC", VA = "0x4781EC", Slot = "5")]
	public virtual void CopyTo(AkInitSettings settings)
	{
	}

	[Token(Token = "0x60014E2")]
	[Address(RVA = "0x478648", Offset = "0x478648", VA = "0x478648", Slot = "6")]
	public virtual void CopyTo(AkSpatialAudioInitSettings settings)
	{
	}
}
[Serializable]
[Token(Token = "0x2000283")]
public class AkCommonCommSettings
{
	[Token(Token = "0x4001043")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1F9A7C", Offset = "0x1F9A7C")]
	public uint m_PoolSize;

	[Token(Token = "0x4001044")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static ushort DefaultDiscoveryBroadcastPort;

	[Token(Token = "0x4001045")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1F9AB0", Offset = "0x1F9AB0")]
	public ushort m_DiscoveryBroadcastPort;

	[Token(Token = "0x4001046")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1F9AE4", Offset = "0x1F9AE4")]
	public ushort m_CommandPort;

	[Token(Token = "0x4001047")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1F9B18", Offset = "0x1F9B18")]
	public ushort m_NotificationPort;

	[Token(Token = "0x4001048")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x12")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1F9B4C", Offset = "0x1F9B4C")]
	public bool m_InitializeSystemComms;

	[Token(Token = "0x4001049")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1F9B80", Offset = "0x1F9B80")]
	public string m_NetworkName;

	[Token(Token = "0x60014E4")]
	[Address(RVA = "0x4786CC", Offset = "0x4786CC", VA = "0x4786CC")]
	public AkCommonCommSettings()
	{
	}

	[Token(Token = "0x60014E5")]
	[Address(RVA = "0x47877C", Offset = "0x47877C", VA = "0x47877C", Slot = "4")]
	public virtual void CopyTo(AkCommunicationSettings settings)
	{
	}
}
[Token(Token = "0x2000284")]
public abstract class AkCommonPlatformSettings : AkBasePlatformSettings
{
	[Token(Token = "0x17000219")]
	public override AkInitializationSettings AkInitializationSettings
	{
		[Token(Token = "0x60014EB")]
		[Address(RVA = "0x478EF0", Offset = "0x478EF0", VA = "0x478EF0", Slot = "4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700021A")]
	public override AkSpatialAudioInitSettings AkSpatialAudioInitSettings
	{
		[Token(Token = "0x60014EC")]
		[Address(RVA = "0x479794", Offset = "0x479794", VA = "0x479794", Slot = "5")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700021B")]
	public override AkCallbackManager.InitializationSettings CallbackManagerInitializationSettings
	{
		[Token(Token = "0x60014ED")]
		[Address(RVA = "0x479828", Offset = "0x479828", VA = "0x479828", Slot = "6")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700021C")]
	public override string InitialLanguage
	{
		[Token(Token = "0x60014EE")]
		[Address(RVA = "0x4798E8", Offset = "0x4798E8", VA = "0x4798E8", Slot = "7")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700021D")]
	public override string SoundbankPath
	{
		[Token(Token = "0x60014EF")]
		[Address(RVA = "0x479918", Offset = "0x479918", VA = "0x479918", Slot = "8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700021E")]
	public override AkCommunicationSettings AkCommunicationSettings
	{
		[Token(Token = "0x60014F0")]
		[Address(RVA = "0x479948", Offset = "0x479948", VA = "0x479948", Slot = "9")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60014E7")]
	[Address(RVA = "0x478EE8", Offset = "0x478EE8", VA = "0x478EE8")]
	protected AkCommonPlatformSettings()
	{
	}

	[Token(Token = "0x60014E8")]
	protected abstract AkCommonUserSettings GetUserSettings();

	[Token(Token = "0x60014E9")]
	protected abstract AkCommonAdvancedSettings GetAdvancedSettings();

	[Token(Token = "0x60014EA")]
	protected abstract AkCommonCommSettings GetCommsSettings();
}
[Token(Token = "0x2000285")]
public class AkDiffractionPathInfoArray : AkBaseArray<AkDiffractionPathInfo>
{
	[Token(Token = "0x1700021F")]
	protected override int StructureSize
	{
		[Token(Token = "0x60014F2")]
		[Address(RVA = "0x47C024", Offset = "0x47C024", VA = "0x47C024", Slot = "6")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x60014F1")]
	[Address(RVA = "0x47BFB8", Offset = "0x47BFB8", VA = "0x47BFB8")]
	public AkDiffractionPathInfoArray(int count)
	{
	}

	[Token(Token = "0x60014F3")]
	[Address(RVA = "0x47C0A4", Offset = "0x47C0A4", VA = "0x47C0A4", Slot = "8")]
	protected override AkDiffractionPathInfo CreateNewReferenceFromIntPtr(IntPtr address)
	{
		return null;
	}

	[Token(Token = "0x60014F4")]
	[Address(RVA = "0x47C120", Offset = "0x47C120", VA = "0x47C120", Slot = "9")]
	protected override void CloneIntoReferenceFromIntPtr(IntPtr address, AkDiffractionPathInfo other)
	{
	}
}
[Token(Token = "0x2000286")]
[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0x1F9BB4", Offset = "0x1F9BB4")]
public class AkEnumFlagAttribute : PropertyAttribute
{
	[Token(Token = "0x400104A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public Type Type;

	[Token(Token = "0x60014F5")]
	[Address(RVA = "0x47E100", Offset = "0x47E100", VA = "0x47E100")]
	public AkEnumFlagAttribute(Type type)
	{
	}
}
[Token(Token = "0x2000287")]
public class AkLogger
{
	[Token(Token = "0x2000288")]
	[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x1F9C70", Offset = "0x1F9C70")]
	public delegate void ErrorLoggerInteropDelegate(string message);

	[Token(Token = "0x400104B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static AkLogger ms_Instance;

	[Token(Token = "0x400104C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private ErrorLoggerInteropDelegate errorLoggerDelegate;

	[Token(Token = "0x400104D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1F9BE8", Offset = "0x1F9BE8")]
	private static ErrorLoggerInteropDelegate <>f__mg$cache0;

	[Token(Token = "0x17000220")]
	public static AkLogger Instance
	{
		[Token(Token = "0x60014F7")]
		[Address(RVA = "0x488BB4", Offset = "0x488BB4", VA = "0x488BB4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60014F6")]
	[Address(RVA = "0x488994", Offset = "0x488994", VA = "0x488994")]
	private AkLogger()
	{
	}

	[Token(Token = "0x60014F8")]
	[Address(RVA = "0x488C40", Offset = "0x488C40", VA = "0x488C40", Slot = "1")]
	~AkLogger()
	{
	}

	[Token(Token = "0x60014F9")]
	[Address(RVA = "0x488D94", Offset = "0x488D94", VA = "0x488D94")]
	public void Init()
	{
	}

	[Token(Token = "0x60014FA")]
	[Address(RVA = "0x4888BC", Offset = "0x4888BC", VA = "0x4888BC")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x1F9BF8", Offset = "0x1F9BF8")]
	public static void WwiseInternalLogError(string message)
	{
	}

	[Token(Token = "0x60014FB")]
	[Address(RVA = "0x488D98", Offset = "0x488D98", VA = "0x488D98")]
	public static void Message(string message)
	{
	}

	[Token(Token = "0x60014FC")]
	[Address(RVA = "0x488E70", Offset = "0x488E70", VA = "0x488E70")]
	public static void Warning(string message)
	{
	}

	[Token(Token = "0x60014FD")]
	[Address(RVA = "0x488F48", Offset = "0x488F48", VA = "0x488F48")]
	public static void Error(string message)
	{
	}
}
[Token(Token = "0x2000289")]
[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0x1F9C84", Offset = "0x1F9C84")]
public class AkMIDIPostArray
{
	[Token(Token = "0x400104E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private readonly int m_Count;

	[Token(Token = "0x400104F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private readonly int SIZE_OF;

	[Token(Token = "0x4001050")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr m_Buffer;

	[Token(Token = "0x17000221")]
	public AkMIDIPost Item
	{
		[Token(Token = "0x6001504")]
		[Address(RVA = "0x273B64", Offset = "0x273B64", VA = "0x273B64")]
		get
		{
			return null;
		}
		[Token(Token = "0x6001505")]
		[Address(RVA = "0x273CC4", Offset = "0x273CC4", VA = "0x273CC4")]
		set
		{
		}
	}

	[Token(Token = "0x6001503")]
	[Address(RVA = "0x273A84", Offset = "0x273A84", VA = "0x273A84")]
	public AkMIDIPostArray(int size)
	{
	}

	[Token(Token = "0x6001506")]
	[Address(RVA = "0x273E30", Offset = "0x273E30", VA = "0x273E30", Slot = "1")]
	~AkMIDIPostArray()
	{
	}

	[Token(Token = "0x6001507")]
	[Address(RVA = "0x273F08", Offset = "0x273F08", VA = "0x273F08")]
	public void PostOnEvent(uint in_eventID, GameObject gameObject)
	{
	}

	[Token(Token = "0x6001508")]
	[Address(RVA = "0x273FE8", Offset = "0x273FE8", VA = "0x273FE8")]
	public void PostOnEvent(uint in_eventID, GameObject gameObject, int count)
	{
	}

	[Token(Token = "0x6001509")]
	[Address(RVA = "0x274128", Offset = "0x274128", VA = "0x274128")]
	public IntPtr GetBuffer()
	{
		return default(IntPtr);
	}

	[Token(Token = "0x600150A")]
	[Address(RVA = "0x274130", Offset = "0x274130", VA = "0x274130")]
	public int Count()
	{
		return default(int);
	}

	[Token(Token = "0x600150B")]
	[Address(RVA = "0x273C78", Offset = "0x273C78", VA = "0x273C78")]
	private IntPtr GetObjectPtr(int index)
	{
		return default(IntPtr);
	}
}
[Token(Token = "0x200028A")]
public class AkPositionArray : IDisposable
{
	[Token(Token = "0x4001051")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public IntPtr m_Buffer;

	[Token(Token = "0x4001052")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private IntPtr m_Current;

	[Token(Token = "0x4001053")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private uint m_MaxCount;

	[Token(Token = "0x4001054")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1F9CB8", Offset = "0x1F9CB8")]
	[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0x1F9CB8", Offset = "0x1F9CB8")]
	private uint <Count>k__BackingField;

	[Token(Token = "0x17000222")]
	public uint Count
	{
		[Token(Token = "0x600150D")]
		[Address(RVA = "0x2825D4", Offset = "0x2825D4", VA = "0x2825D4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1F9CEC", Offset = "0x1F9CEC")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x600150E")]
		[Address(RVA = "0x2825CC", Offset = "0x2825CC", VA = "0x2825CC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1F9CFC", Offset = "0x1F9CFC")]
		private set
		{
		}
	}

	[Token(Token = "0x600150C")]
	[Address(RVA = "0x282520", Offset = "0x282520", VA = "0x282520")]
	public AkPositionArray(uint in_Count)
	{
	}

	[Token(Token = "0x600150F")]
	[Address(RVA = "0x2825DC", Offset = "0x2825DC", VA = "0x2825DC", Slot = "4")]
	public void Dispose()
	{
	}

	[Token(Token = "0x6001510")]
	[Address(RVA = "0x282690", Offset = "0x282690", VA = "0x282690", Slot = "1")]
	~AkPositionArray()
	{
	}

	[Token(Token = "0x6001511")]
	[Address(RVA = "0x2826EC", Offset = "0x2826EC", VA = "0x2826EC")]
	public void Reset()
	{
	}

	[Token(Token = "0x6001512")]
	[Address(RVA = "0x282700", Offset = "0x282700", VA = "0x282700")]
	public void Add(Vector3 in_Pos, Vector3 in_Forward, Vector3 in_Top)
	{
	}
}
[Token(Token = "0x200028B")]
public class AkPropagationPathInfoArray : AkBaseArray<AkPropagationPathInfo>
{
	[Token(Token = "0x17000223")]
	protected override int StructureSize
	{
		[Token(Token = "0x6001514")]
		[Address(RVA = "0x2877A0", Offset = "0x2877A0", VA = "0x2877A0", Slot = "6")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x6001513")]
	[Address(RVA = "0x287734", Offset = "0x287734", VA = "0x287734")]
	public AkPropagationPathInfoArray(int count)
	{
	}

	[Token(Token = "0x6001515")]
	[Address(RVA = "0x287818", Offset = "0x287818", VA = "0x287818", Slot = "8")]
	protected override AkPropagationPathInfo CreateNewReferenceFromIntPtr(IntPtr address)
	{
		return null;
	}

	[Token(Token = "0x6001516")]
	[Address(RVA = "0x287894", Offset = "0x287894", VA = "0x287894", Slot = "9")]
	protected override void CloneIntoReferenceFromIntPtr(IntPtr address, AkPropagationPathInfo other)
	{
	}
}
[Token(Token = "0x200028C")]
public class AkReflectionPathInfoArray : AkBaseArray<AkReflectionPathInfo>
{
	[Token(Token = "0x17000224")]
	protected override int StructureSize
	{
		[Token(Token = "0x6001518")]
		[Address(RVA = "0x28A148", Offset = "0x28A148", VA = "0x28A148", Slot = "6")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x6001517")]
	[Address(RVA = "0x28A0DC", Offset = "0x28A0DC", VA = "0x28A0DC")]
	public AkReflectionPathInfoArray(int count)
	{
	}

	[Token(Token = "0x6001519")]
	[Address(RVA = "0x28A1C0", Offset = "0x28A1C0", VA = "0x28A1C0", Slot = "8")]
	protected override AkReflectionPathInfo CreateNewReferenceFromIntPtr(IntPtr address)
	{
		return null;
	}

	[Token(Token = "0x600151A")]
	[Address(RVA = "0x28A23C", Offset = "0x28A23C", VA = "0x28A23C", Slot = "9")]
	protected override void CloneIntoReferenceFromIntPtr(IntPtr address, AkReflectionPathInfo other)
	{
	}
}
[Token(Token = "0x200028E")]
public class AkTriangleArray : AkBaseArray<AkTriangle>
{
	[Token(Token = "0x17000225")]
	protected override int StructureSize
	{
		[Token(Token = "0x6001520")]
		[Address(RVA = "0xCDB148", Offset = "0xCDB148", VA = "0xCDB148", Slot = "6")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x600151F")]
	[Address(RVA = "0xCD8D54", Offset = "0xCD8D54", VA = "0xCD8D54")]
	public AkTriangleArray(int count)
	{
	}

	[Token(Token = "0x6001521")]
	[Address(RVA = "0xCDB1C8", Offset = "0xCDB1C8", VA = "0xCDB1C8", Slot = "7")]
	protected override void ClearAtIntPtr(IntPtr address)
	{
	}

	[Token(Token = "0x6001522")]
	[Address(RVA = "0xCDB250", Offset = "0xCDB250", VA = "0xCDB250", Slot = "8")]
	protected override AkTriangle CreateNewReferenceFromIntPtr(IntPtr address)
	{
		return null;
	}

	[Token(Token = "0x6001523")]
	[Address(RVA = "0xCDB2CC", Offset = "0xCDB2CC", VA = "0xCDB2CC", Slot = "9")]
	protected override void CloneIntoReferenceFromIntPtr(IntPtr address, AkTriangle other)
	{
	}
}
[Token(Token = "0x200028F")]
public class AkUtilities
{
	[Token(Token = "0x2000290")]
	public class ShortIDGenerator
	{
		[Token(Token = "0x4001055")]
		private const uint s_prime32 = 16777619u;

		[Token(Token = "0x4001056")]
		private const uint s_offsetBasis32 = 2166136261u;

		[Token(Token = "0x4001057")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static byte s_hashSize;

		[Token(Token = "0x4001058")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private static uint s_mask;

		[Token(Token = "0x17000226")]
		public static byte HashSize
		{
			[Token(Token = "0x6001527")]
			[Address(RVA = "0xCDD7E4", Offset = "0xCDD7E4", VA = "0xCDD7E4")]
			get
			{
				return default(byte);
			}
			[Token(Token = "0x6001528")]
			[Address(RVA = "0xCDD720", Offset = "0xCDD720", VA = "0xCDD720")]
			set
			{
			}
		}

		[Token(Token = "0x6001525")]
		[Address(RVA = "0xCDD718", Offset = "0xCDD718", VA = "0xCDD718")]
		static ShortIDGenerator()
		{
		}

		[Token(Token = "0x6001526")]
		[Address(RVA = "0xCDD7DC", Offset = "0xCDD7DC", VA = "0xCDD7DC")]
		public ShortIDGenerator()
		{
		}

		[Token(Token = "0x6001529")]
		[Address(RVA = "0xCDB7E0", Offset = "0xCDB7E0", VA = "0xCDB7E0")]
		public static uint Compute(string in_name)
		{
			return default(uint);
		}
	}

	[Token(Token = "0x6001524")]
	[Address(RVA = "0xCDD710", Offset = "0xCDD710", VA = "0xCDD710")]
	public AkUtilities()
	{
	}
}
[Token(Token = "0x2000291")]
public class AkVertexArray : AkBaseArray<AkVertex>
{
	[Token(Token = "0x17000227")]
	protected override int StructureSize
	{
		[Token(Token = "0x600152B")]
		[Address(RVA = "0xCDE5D4", Offset = "0xCDE5D4", VA = "0xCDE5D4", Slot = "6")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x600152A")]
	[Address(RVA = "0xCD8B2C", Offset = "0xCD8B2C", VA = "0xCD8B2C")]
	public AkVertexArray(int count)
	{
	}

	[Token(Token = "0x600152C")]
	[Address(RVA = "0xCDE654", Offset = "0xCDE654", VA = "0xCDE654", Slot = "7")]
	protected override void ClearAtIntPtr(IntPtr address)
	{
	}

	[Token(Token = "0x600152D")]
	[Address(RVA = "0xCDE6DC", Offset = "0xCDE6DC", VA = "0xCDE6DC", Slot = "8")]
	protected override AkVertex CreateNewReferenceFromIntPtr(IntPtr address)
	{
		return null;
	}

	[Token(Token = "0x600152E")]
	[Address(RVA = "0xCDE758", Offset = "0xCDE758", VA = "0xCDE758", Slot = "9")]
	protected override void CloneIntoReferenceFromIntPtr(IntPtr address, AkVertex other)
	{
	}
}
[Token(Token = "0x2000292")]
public class AkWwiseInitializationSettings : AkCommonPlatformSettings
{
	[Token(Token = "0x2000293")]
	public abstract class PlatformSettings : AkCommonPlatformSettings
	{
		[Token(Token = "0x4001062")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		[SerializeField]
		[HideInInspector]
		private List<string> IgnorePropertyNameList;

		[Token(Token = "0x4001063")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		[HideInInspector]
		private List<string> GlobalPropertyNameList;

		[Token(Token = "0x4001064")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private HashSet<string> _GlobalPropertyHashSet;

		[Token(Token = "0x1700022C")]
		public HashSet<string> GlobalPropertyHashSet
		{
			[Token(Token = "0x6001545")]
			[Address(RVA = "0xCE1990", Offset = "0xCE1990", VA = "0xCE1990")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001546")]
			[Address(RVA = "0xCE1A28", Offset = "0xCE1A28", VA = "0xCE1A28")]
			set
			{
			}
		}

		[Token(Token = "0x600153F")]
		[Address(RVA = "0xCDE834", Offset = "0xCDE834", VA = "0xCDE834")]
		protected PlatformSettings()
		{
		}

		[Token(Token = "0x6001540")]
		[Address(RVA = "0xCE1730", Offset = "0xCE1730", VA = "0xCE1730")]
		public void IgnorePropertyValue(string propertyPath)
		{
		}

		[Token(Token = "0x6001541")]
		[Address(RVA = "0xCE17D0", Offset = "0xCE17D0", VA = "0xCE17D0")]
		public bool IsPropertyIgnored(string propertyPath)
		{
			return default(bool);
		}

		[Token(Token = "0x6001542")]
		[Address(RVA = "0xCE184C", Offset = "0xCE184C", VA = "0xCE184C")]
		public void SetUseGlobalPropertyValue(string propertyPath, bool use)
		{
		}

		[Token(Token = "0x6001543")]
		[Address(RVA = "0xCE13E4", Offset = "0xCE13E4", VA = "0xCE13E4")]
		public void SetGlobalPropertyValues(IEnumerable enumerable)
		{
		}

		[Token(Token = "0x6001544")]
		[Address(RVA = "0xCE1914", Offset = "0xCE1914", VA = "0xCE1914")]
		private bool IsUsingGlobalPropertyValue(string propertyPath)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x2000294")]
	public class CommonPlatformSettings : PlatformSettings
	{
		[Token(Token = "0x4001065")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[HideInInspector]
		public AkCommonUserSettings UserSettings;

		[Token(Token = "0x4001066")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[HideInInspector]
		public AkCommonAdvancedSettings AdvancedSettings;

		[Token(Token = "0x4001067")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[HideInInspector]
		public AkCommonCommSettings CommsSettings;

		[Token(Token = "0x6001547")]
		[Address(RVA = "0xCE13C8", Offset = "0xCE13C8", VA = "0xCE13C8")]
		public CommonPlatformSettings()
		{
		}

		[Token(Token = "0x6001548")]
		[Address(RVA = "0xCE13CC", Offset = "0xCE13CC", VA = "0xCE13CC", Slot = "10")]
		protected override AkCommonUserSettings GetUserSettings()
		{
			return null;
		}

		[Token(Token = "0x6001549")]
		[Address(RVA = "0xCE13D4", Offset = "0xCE13D4", VA = "0xCE13D4", Slot = "11")]
		protected override AkCommonAdvancedSettings GetAdvancedSettings()
		{
			return null;
		}

		[Token(Token = "0x600154A")]
		[Address(RVA = "0xCE13DC", Offset = "0xCE13DC", VA = "0xCE13DC", Slot = "12")]
		protected override AkCommonCommSettings GetCommsSettings()
		{
			return null;
		}
	}

	[Token(Token = "0x4001059")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	[HideInInspector]
	public List<string> PlatformSettingsNameList;

	[Token(Token = "0x400105A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[HideInInspector]
	public List<PlatformSettings> PlatformSettingsList;

	[Token(Token = "0x400105B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	[HideInInspector]
	public List<string> InvalidReferencePlatforms;

	[Token(Token = "0x400105C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[HideInInspector]
	public AkCommonUserSettings UserSettings;

	[Token(Token = "0x400105D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[HideInInspector]
	public AkCommonAdvancedSettings AdvancedSettings;

	[Token(Token = "0x400105E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[HideInInspector]
	public AkCommonCommSettings CommsSettings;

	[Token(Token = "0x400105F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly string[] AllGlobalValues;

	[Token(Token = "0x4001060")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	private static AkWwiseInitializationSettings m_Instance;

	[Token(Token = "0x4001061")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static AkBasePlatformSettings m_ActivePlatformSettings;

	[Token(Token = "0x17000228")]
	public bool IsValid
	{
		[Token(Token = "0x6001530")]
		[Address(RVA = "0xCDEA30", Offset = "0xCDEA30", VA = "0xCDEA30")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000229")]
	public int Count
	{
		[Token(Token = "0x6001531")]
		[Address(RVA = "0xCDEAE0", Offset = "0xCDEAE0", VA = "0xCDEAE0")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x1700022A")]
	public static AkWwiseInitializationSettings Instance
	{
		[Token(Token = "0x6001535")]
		[Address(RVA = "0xCDEB6C", Offset = "0xCDEB6C", VA = "0xCDEB6C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700022B")]
	public static AkBasePlatformSettings ActivePlatformSettings
	{
		[Token(Token = "0x6001537")]
		[Address(RVA = "0xCDEFB0", Offset = "0xCDEFB0", VA = "0xCDEFB0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600152F")]
	[Address(RVA = "0xCDE958", Offset = "0xCDE958", VA = "0xCDE958")]
	public AkWwiseInitializationSettings()
	{
	}

	[Token(Token = "0x6001532")]
	[Address(RVA = "0xCDEB54", Offset = "0xCDEB54", VA = "0xCDEB54", Slot = "10")]
	protected override AkCommonUserSettings GetUserSettings()
	{
		return null;
	}

	[Token(Token = "0x6001533")]
	[Address(RVA = "0xCDEB5C", Offset = "0xCDEB5C", VA = "0xCDEB5C", Slot = "11")]
	protected override AkCommonAdvancedSettings GetAdvancedSettings()
	{
		return null;
	}

	[Token(Token = "0x6001534")]
	[Address(RVA = "0xCDEB64", Offset = "0xCDEB64", VA = "0xCDEB64", Slot = "12")]
	protected override AkCommonCommSettings GetCommsSettings()
	{
		return null;
	}

	[Token(Token = "0x6001536")]
	[Address(RVA = "0xCDED2C", Offset = "0xCDED2C", VA = "0xCDED2C")]
	private static AkBasePlatformSettings GetPlatformSettings(string platformName)
	{
		return null;
	}

	[Token(Token = "0x6001538")]
	[Address(RVA = "0xCDF150", Offset = "0xCDF150", VA = "0xCDF150")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6001539")]
	[Address(RVA = "0xCDF340", Offset = "0xCDF340", VA = "0xCDF340")]
	public static bool InitializeSoundEngine()
	{
		return default(bool);
	}

	[Token(Token = "0x600153A")]
	[Address(RVA = "0xCDFC64", Offset = "0xCDFC64", VA = "0xCDFC64")]
	public static bool ResetSoundEngine(bool isPlaying)
	{
		return default(bool);
	}

	[Token(Token = "0x600153B")]
	[Address(RVA = "0xCDFACC", Offset = "0xCDFACC", VA = "0xCDFACC")]
	private static void LoadInitBank()
	{
	}

	[Token(Token = "0x600153C")]
	[Address(RVA = "0xCDFDB8", Offset = "0xCDFDB8", VA = "0xCDFDB8")]
	public static void TerminateSoundEngine()
	{
	}

	[Token(Token = "0x600153D")]
	[Address(RVA = "0xCE003C", Offset = "0xCE003C", VA = "0xCE003C")]
	private static void SleepForMilliseconds(double milliseconds)
	{
	}
}
namespace AK.Wwise
{
	[Serializable]
	[Token(Token = "0x2000295")]
	public class BaseType
	{
		[Token(Token = "0x4001068")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public int ID;

		[Token(Token = "0x600154B")]
		[Address(RVA = "0x465900", Offset = "0x465900", VA = "0x465900")]
		public BaseType()
		{
		}

		[Token(Token = "0x600154C")]
		[Address(RVA = "0x4662D0", Offset = "0x4662D0", VA = "0x4662D0")]
		protected uint GetID()
		{
			return default(uint);
		}

		[Token(Token = "0x600154D")]
		[Address(RVA = "0x46628C", Offset = "0x46628C", VA = "0x46628C", Slot = "4")]
		public virtual bool IsValid()
		{
			return default(bool);
		}

		[Token(Token = "0x600154E")]
		[Address(RVA = "0x4662D8", Offset = "0x4662D8", VA = "0x4662D8")]
		public bool Validate()
		{
			return default(bool);
		}

		[Token(Token = "0x600154F")]
		[Address(RVA = "0x466424", Offset = "0x466424", VA = "0x466424")]
		protected void Verify(AKRESULT result)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000296")]
	public class BaseGroupType : BaseType
	{
		[Token(Token = "0x4001069")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public int groupID;

		[Token(Token = "0x6001550")]
		[Address(RVA = "0x46629C", Offset = "0x46629C", VA = "0x46629C")]
		public BaseGroupType()
		{
		}

		[Token(Token = "0x6001551")]
		[Address(RVA = "0x4662A4", Offset = "0x4662A4", VA = "0x4662A4")]
		protected uint GetGroupID()
		{
			return default(uint);
		}

		[Token(Token = "0x6001552")]
		[Address(RVA = "0x4662AC", Offset = "0x4662AC", VA = "0x4662AC", Slot = "4")]
		public override bool IsValid()
		{
			return default(bool);
		}
	}
	[Serializable]
	[Token(Token = "0x2000297")]
	public class CallbackFlags
	{
		[Token(Token = "0x400106A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public uint value;

		[Token(Token = "0x6001553")]
		[Address(RVA = "0x466428", Offset = "0x466428", VA = "0x466428")]
		public CallbackFlags()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000298")]
	public class Event : BaseType
	{
		[Token(Token = "0x6001554")]
		[Address(RVA = "0x466430", Offset = "0x466430", VA = "0x466430")]
		public Event()
		{
		}

		[Token(Token = "0x6001555")]
		[Address(RVA = "0x466438", Offset = "0x466438", VA = "0x466438")]
		private void VerifyPlayingID(uint playingId)
		{
		}

		[Token(Token = "0x6001556")]
		[Address(RVA = "0x46643C", Offset = "0x46643C", VA = "0x46643C")]
		public uint Post(GameObject gameObject)
		{
			return default(uint);
		}

		[Token(Token = "0x6001557")]
		[Address(RVA = "0x4664F0", Offset = "0x4664F0", VA = "0x4664F0")]
		public uint Post(GameObject gameObject, CallbackFlags flags, AkCallbackManager.EventCallback callback, [Optional] object cookie)
		{
			return default(uint);
		}

		[Token(Token = "0x6001558")]
		[Address(RVA = "0x4665DC", Offset = "0x4665DC", VA = "0x4665DC")]
		public uint Post(GameObject gameObject, uint flags, AkCallbackManager.EventCallback callback, [Optional] object cookie)
		{
			return default(uint);
		}

		[Token(Token = "0x6001559")]
		[Address(RVA = "0x4666B8", Offset = "0x4666B8", VA = "0x4666B8")]
		public void Stop(GameObject gameObject, int transitionDuration = 0, AkCurveInterpolation curveInterpolation = AkCurveInterpolation.AkCurveInterpolation_Linear)
		{
		}

		[Token(Token = "0x600155A")]
		[Address(RVA = "0x4666E0", Offset = "0x4666E0", VA = "0x4666E0")]
		public void ExecuteAction(GameObject gameObject, AkActionOnEventType actionOnEventType, int transitionDuration, AkCurveInterpolation curveInterpolation)
		{
		}

		[Token(Token = "0x600155B")]
		[Address(RVA = "0x4667B0", Offset = "0x4667B0", VA = "0x4667B0")]
		public void PostMIDI(GameObject gameObject, AkMIDIPostArray array)
		{
		}

		[Token(Token = "0x600155C")]
		[Address(RVA = "0x466808", Offset = "0x466808", VA = "0x466808")]
		public void PostMIDI(GameObject gameObject, AkMIDIPostArray array, int count)
		{
		}

		[Token(Token = "0x600155D")]
		[Address(RVA = "0x466874", Offset = "0x466874", VA = "0x466874")]
		public void StopMIDI(GameObject gameObject)
		{
		}

		[Token(Token = "0x600155E")]
		[Address(RVA = "0x466924", Offset = "0x466924", VA = "0x466924")]
		public void StopMIDI()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000299")]
	public class RTPC : BaseType
	{
		[Token(Token = "0x600155F")]
		[Address(RVA = "0x4669CC", Offset = "0x4669CC", VA = "0x4669CC")]
		public RTPC()
		{
		}

		[Token(Token = "0x6001560")]
		[Address(RVA = "0x4669D4", Offset = "0x4669D4", VA = "0x4669D4")]
		public void SetValue(GameObject gameObject, float value)
		{
		}

		[Token(Token = "0x6001561")]
		[Address(RVA = "0x466A98", Offset = "0x466A98", VA = "0x466A98")]
		public void SetGlobalValue(float value)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200029A")]
	public class Trigger : BaseType
	{
		[Token(Token = "0x6001562")]
		[Address(RVA = "0x466CCC", Offset = "0x466CCC", VA = "0x466CCC")]
		public Trigger()
		{
		}

		[Token(Token = "0x6001563")]
		[Address(RVA = "0x466CD4", Offset = "0x466CD4", VA = "0x466CD4")]
		public void Post(GameObject gameObject)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200029B")]
	public class State : BaseGroupType
	{
		[Token(Token = "0x6001564")]
		[Address(RVA = "0x466B48", Offset = "0x466B48", VA = "0x466B48")]
		public State()
		{
		}

		[Token(Token = "0x6001565")]
		[Address(RVA = "0x466B50", Offset = "0x466B50", VA = "0x466B50")]
		public void SetValue()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200029C")]
	public class Switch : BaseGroupType
	{
		[Token(Token = "0x6001566")]
		[Address(RVA = "0x466C00", Offset = "0x466C00", VA = "0x466C00")]
		public Switch()
		{
		}

		[Token(Token = "0x6001567")]
		[Address(RVA = "0x466C08", Offset = "0x466C08", VA = "0x466C08")]
		public void SetValue(GameObject gameObject)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200029D")]
	public class AuxBus : BaseType
	{
		[Token(Token = "0x6001568")]
		[Address(RVA = "0x465908", Offset = "0x465908", VA = "0x465908")]
		public AuxBus()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200029E")]
	public class Bank : BaseType
	{
		[Token(Token = "0x400106B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public string name;

		[Token(Token = "0x6001569")]
		[Address(RVA = "0x465910", Offset = "0x465910", VA = "0x465910")]
		public Bank()
		{
		}

		[Token(Token = "0x600156A")]
		[Address(RVA = "0x465918", Offset = "0x465918", VA = "0x465918")]
		public void Load(bool decodeBank = false, bool saveDecodedBank = false)
		{
		}

		[Token(Token = "0x600156B")]
		[Address(RVA = "0x465C7C", Offset = "0x465C7C", VA = "0x465C7C")]
		public void LoadAsync([Optional] AkCallbackManager.BankCallback callback)
		{
		}

		[Token(Token = "0x600156C")]
		[Address(RVA = "0x465F94", Offset = "0x465F94", VA = "0x465F94")]
		public void Unload()
		{
		}

		[Token(Token = "0x600156D")]
		[Address(RVA = "0x466244", Offset = "0x466244", VA = "0x466244", Slot = "4")]
		public override bool IsValid()
		{
			return default(bool);
		}
	}
	[Serializable]
	[Token(Token = "0x200029F")]
	public class AcousticTexture : BaseType
	{
		[Token(Token = "0x600156E")]
		[Address(RVA = "0x4658F8", Offset = "0x4658F8", VA = "0x4658F8")]
		public AcousticTexture()
		{
		}
	}
}
[Token(Token = "0x20002A0")]
public class AkPS4Settings : AkWwiseInitializationSettings.PlatformSettings
{
	[Serializable]
	[Token(Token = "0x20002A1")]
	public class PlatformAdvancedSettings : AkCommonAdvancedSettings
	{
		[Token(Token = "0x400106F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1F9E2C", Offset = "0x1F9E2C")]
		public uint ACPBatchBufferSize;

		[Token(Token = "0x4001070")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1F9E60", Offset = "0x1F9E60")]
		public bool UseHardwareCodecLowLatencyMode;

		[Token(Token = "0x6001573")]
		[Address(RVA = "0x287A28", Offset = "0x287A28", VA = "0x287A28")]
		public PlatformAdvancedSettings()
		{
		}

		[Token(Token = "0x6001574")]
		[Address(RVA = "0x287A30", Offset = "0x287A30", VA = "0x287A30")]
		public void CopyTo(AkPlatformInitSettings settings)
		{
		}
	}

	[Token(Token = "0x400106C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[HideInInspector]
	public AkCommonUserSettings UserSettings;

	[Token(Token = "0x400106D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[HideInInspector]
	public PlatformAdvancedSettings AdvancedSettings;

	[Token(Token = "0x400106E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[HideInInspector]
	public AkCommonCommSettings CommsSettings;

	[Token(Token = "0x600156F")]
	[Address(RVA = "0x287964", Offset = "0x287964", VA = "0x287964")]
	public AkPS4Settings()
	{
	}

	[Token(Token = "0x6001570")]
	[Address(RVA = "0x287A10", Offset = "0x287A10", VA = "0x287A10", Slot = "10")]
	protected override AkCommonUserSettings GetUserSettings()
	{
		return null;
	}

	[Token(Token = "0x6001571")]
	[Address(RVA = "0x287A18", Offset = "0x287A18", VA = "0x287A18", Slot = "11")]
	protected override AkCommonAdvancedSettings GetAdvancedSettings()
	{
		return null;
	}

	[Token(Token = "0x6001572")]
	[Address(RVA = "0x287A20", Offset = "0x287A20", VA = "0x287A20", Slot = "12")]
	protected override AkCommonCommSettings GetCommsSettings()
	{
		return null;
	}
}
[Token(Token = "0x20002A2")]
public class AkWindowsSettings : AkWwiseInitializationSettings.PlatformSettings
{
	[Serializable]
	[Token(Token = "0x20002A3")]
	public class PlatformAdvancedSettings : AkCommonAdvancedSettings
	{
		[Token(Token = "0x20002A4")]
		public enum AudioAPI
		{
			[Token(Token = "0x4001077")]
			None = 0,
			[Token(Token = "0x4001078")]
			Wasapi = 1,
			[Token(Token = "0x4001079")]
			XAudio2 = 2,
			[Token(Token = "0x400107A")]
			DirectSound = 4,
			[Token(Token = "0x400107B")]
			Default = -1
		}

		[Token(Token = "0x4001074")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1F9EC4", Offset = "0x1F9EC4")]
		[AttributeAttribute(Name = "AkEnumFlagAttribute", RVA = "0x1F9EC4", Offset = "0x1F9EC4")]
		public AudioAPI m_AudioAPI;

		[Token(Token = "0x4001075")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1F9F64", Offset = "0x1F9F64")]
		public bool m_GlobalFocus;

		[Token(Token = "0x6001579")]
		[Address(RVA = "0xCDE93C", Offset = "0xCDE93C", VA = "0xCDE93C")]
		public PlatformAdvancedSettings()
		{
		}

		[Token(Token = "0x600157A")]
		[Address(RVA = "0xCDE954", Offset = "0xCDE954", VA = "0xCDE954")]
		public void CopyTo(AkPlatformInitSettings settings)
		{
		}
	}

	[Token(Token = "0x4001071")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[HideInInspector]
	public AkCommonUserSettings UserSettings;

	[Token(Token = "0x4001072")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[HideInInspector]
	public PlatformAdvancedSettings AdvancedSettings;

	[Token(Token = "0x4001073")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[HideInInspector]
	public AkCommonCommSettings CommsSettings;

	[Token(Token = "0x6001575")]
	[Address(RVA = "0xCDE830", Offset = "0xCDE830", VA = "0xCDE830")]
	public AkWindowsSettings()
	{
	}

	[Token(Token = "0x6001576")]
	[Address(RVA = "0xCDE924", Offset = "0xCDE924", VA = "0xCDE924", Slot = "10")]
	protected override AkCommonUserSettings GetUserSettings()
	{
		return null;
	}

	[Token(Token = "0x6001577")]
	[Address(RVA = "0xCDE92C", Offset = "0xCDE92C", VA = "0xCDE92C", Slot = "11")]
	protected override AkCommonAdvancedSettings GetAdvancedSettings()
	{
		return null;
	}

	[Token(Token = "0x6001578")]
	[Address(RVA = "0xCDE934", Offset = "0xCDE934", VA = "0xCDE934", Slot = "12")]
	protected override AkCommonCommSettings GetCommsSettings()
	{
		return null;
	}
}
[Token(Token = "0x20002A5")]
public enum MultiPositionTypeLabel
{
	[Token(Token = "0x400107D")]
	Simple_Mode,
	[Token(Token = "0x400107E")]
	Large_Mode,
	[Token(Token = "0x400107F")]
	MultiPosition_Mode
}
[Token(Token = "0x20002A6")]
public class AkMultiPosEvent
{
	[Token(Token = "0x4001080")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public bool eventIsPlaying;

	[Token(Token = "0x4001081")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public List<AkAmbient> list;

	[Token(Token = "0x600157B")]
	[Address(RVA = "0x274C78", Offset = "0x274C78", VA = "0x274C78")]
	public AkMultiPosEvent()
	{
	}

	[Token(Token = "0x600157C")]
	[Address(RVA = "0x274D04", Offset = "0x274D04", VA = "0x274D04")]
	public void FinishedPlaying(object in_cookie, AkCallbackType in_type, object in_info)
	{
	}
}
[Token(Token = "0x20002A7")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x1F9F98", Offset = "0x1F9F98")]
public class AkAmbient : AkEvent
{
	[Token(Token = "0x4001082")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Dictionary<int, AkMultiPosEvent> multiPosEventTree;

	[Token(Token = "0x4001083")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public List<Vector3> multiPositionArray;

	[Token(Token = "0x4001084")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public AkMultiPositionType MultiPositionType;

	[Token(Token = "0x4001085")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public MultiPositionTypeLabel multiPositionTypeLabel;

	[Token(Token = "0x4001086")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1F9FCC", Offset = "0x1F9FCC")]
	[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0x1F9FCC", Offset = "0x1F9FCC")]
	private AkAmbient <ParentAkAmbience>k__BackingField;

	[Token(Token = "0x1700022D")]
	public AkAmbient ParentAkAmbience
	{
		[Token(Token = "0x600157E")]
		[Address(RVA = "0x467A50", Offset = "0x467A50", VA = "0x467A50")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1FA000", Offset = "0x1FA000")]
		get
		{
			return null;
		}
		[Token(Token = "0x600157F")]
		[Address(RVA = "0x467A58", Offset = "0x467A58", VA = "0x467A58")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1FA010", Offset = "0x1FA010")]
		set
		{
		}
	}

	[Token(Token = "0x600157D")]
	[Address(RVA = "0x467934", Offset = "0x467934", VA = "0x467934")]
	public AkAmbient()
	{
	}

	[Token(Token = "0x6001580")]
	[Address(RVA = "0x467A60", Offset = "0x467A60", VA = "0x467A60")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6001581")]
	[Address(RVA = "0x4684C8", Offset = "0x4684C8", VA = "0x4684C8")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6001582")]
	[Address(RVA = "0x468748", Offset = "0x468748", VA = "0x468748", Slot = "4")]
	public override void HandleEvent(GameObject in_gameObject)
	{
	}

	[Token(Token = "0x6001583")]
	[Address(RVA = "0x468E24", Offset = "0x468E24", VA = "0x468E24")]
	public void OnDrawGizmosSelected()
	{
	}

	[Token(Token = "0x6001584")]
	[Address(RVA = "0x4681FC", Offset = "0x4681FC", VA = "0x4681FC")]
	public AkPositionArray BuildMultiDirectionArray(AkMultiPosEvent eventPosList)
	{
		return null;
	}

	[Token(Token = "0x6001585")]
	[Address(RVA = "0x467F90", Offset = "0x467F90", VA = "0x467F90")]
	private AkPositionArray BuildAkPositionArray()
	{
		return null;
	}
}
[Token(Token = "0x20002A8")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x1FA020", Offset = "0x1FA020")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x1FA020", Offset = "0x1FA020")]
[DisallowMultipleComponent]
public class AkAudioListener : MonoBehaviour
{
	[Token(Token = "0x20002A9")]
	public class BaseListenerList
	{
		[Token(Token = "0x400108D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private readonly List<ulong> listenerIdList;

		[Token(Token = "0x400108E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private readonly List<AkAudioListener> listenerList;

		[Token(Token = "0x1700022F")]
		public List<AkAudioListener> ListenerList
		{
			[Token(Token = "0x6001594")]
			[Address(RVA = "0x46CF8C", Offset = "0x46CF8C", VA = "0x46CF8C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001593")]
		[Address(RVA = "0x46CECC", Offset = "0x46CECC", VA = "0x46CECC")]
		public BaseListenerList()
		{
		}

		[Token(Token = "0x6001595")]
		[Address(RVA = "0x46CF94", Offset = "0x46CF94", VA = "0x46CF94", Slot = "4")]
		public virtual bool Add(AkAudioListener listener)
		{
			return default(bool);
		}

		[Token(Token = "0x6001596")]
		[Address(RVA = "0x46D0EC", Offset = "0x46D0EC", VA = "0x46D0EC", Slot = "5")]
		public virtual bool Remove(AkAudioListener listener)
		{
			return default(bool);
		}

		[Token(Token = "0x6001597")]
		[Address(RVA = "0x46D244", Offset = "0x46D244", VA = "0x46D244")]
		public ulong[] GetListenerIds()
		{
			return null;
		}
	}

	[Token(Token = "0x20002AA")]
	public class DefaultListenerList : BaseListenerList
	{
		[Token(Token = "0x6001598")]
		[Address(RVA = "0x46CEC8", Offset = "0x46CEC8", VA = "0x46CEC8")]
		public DefaultListenerList()
		{
		}

		[Token(Token = "0x6001599")]
		[Address(RVA = "0x46D2B8", Offset = "0x46D2B8", VA = "0x46D2B8", Slot = "4")]
		public override bool Add(AkAudioListener listener)
		{
			return default(bool);
		}

		[Token(Token = "0x600159A")]
		[Address(RVA = "0x46D3BC", Offset = "0x46D3BC", VA = "0x46D3BC", Slot = "5")]
		public override bool Remove(AkAudioListener listener)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x4001087")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly DefaultListenerList defaultListeners;

	[Token(Token = "0x4001088")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private ulong akGameObjectID;

	[Token(Token = "0x4001089")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private List<AkGameObj> EmittersToStartListeningTo;

	[Token(Token = "0x400108A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private List<AkGameObj> EmittersToStopListeningTo;

	[Token(Token = "0x400108B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool isDefaultListener;

	[Token(Token = "0x400108C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	public int listenerId;

	[Token(Token = "0x1700022E")]
	public static DefaultListenerList DefaultListeners
	{
		[Token(Token = "0x6001588")]
		[Address(RVA = "0x46C4B8", Offset = "0x46C4B8", VA = "0x46C4B8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6001587")]
	[Address(RVA = "0x46C400", Offset = "0x46C400", VA = "0x46C400")]
	public AkAudioListener()
	{
	}

	[Token(Token = "0x6001589")]
	[Address(RVA = "0x46C544", Offset = "0x46C544", VA = "0x46C544")]
	public void StartListeningToEmitter(AkGameObj emitter)
	{
	}

	[Token(Token = "0x600158A")]
	[Address(RVA = "0x46C5EC", Offset = "0x46C5EC", VA = "0x46C5EC")]
	public void StopListeningToEmitter(AkGameObj emitter)
	{
	}

	[Token(Token = "0x600158B")]
	[Address(RVA = "0x46C694", Offset = "0x46C694", VA = "0x46C694")]
	public void SetIsDefaultListener(bool isDefault)
	{
	}

	[Token(Token = "0x600158C")]
	[Address(RVA = "0x46C7A0", Offset = "0x46C7A0", VA = "0x46C7A0")]
	private void Awake()
	{
	}

	[Token(Token = "0x600158D")]
	[Address(RVA = "0x46C990", Offset = "0x46C990", VA = "0x46C990")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600158E")]
	[Address(RVA = "0x46CA40", Offset = "0x46CA40", VA = "0x46CA40")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600158F")]
	[Address(RVA = "0x46CAF0", Offset = "0x46CAF0", VA = "0x46CAF0")]
	private void Update()
	{
	}

	[Token(Token = "0x6001590")]
	[Address(RVA = "0x46CD2C", Offset = "0x46CD2C", VA = "0x46CD2C")]
	public ulong GetAkGameObjectID()
	{
		return default(ulong);
	}

	[Token(Token = "0x6001591")]
	[Address(RVA = "0x46CD34", Offset = "0x46CD34", VA = "0x46CD34")]
	public void Migrate14()
	{
	}
}
[Token(Token = "0x20002AB")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x1FA0E0", Offset = "0x1FA0E0")]
[ExecuteInEditMode]
public class AkBank : AkUnityEventHandler
{
	[Token(Token = "0x400108F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string bankName;

	[Token(Token = "0x4001090")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool decodeBank;

	[Token(Token = "0x4001091")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
	public bool loadAsynchronous;

	[Token(Token = "0x4001092")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E")]
	public bool saveDecodedBank;

	[Token(Token = "0x4001093")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<int> unloadTriggerList;

	[Token(Token = "0x600159B")]
	[Address(RVA = "0x46F26C", Offset = "0x46F26C", VA = "0x46F26C")]
	public AkBank()
	{
	}

	[Token(Token = "0x600159C")]
	[Address(RVA = "0x46F398", Offset = "0x46F398", VA = "0x46F398", Slot = "5")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x600159D")]
	[Address(RVA = "0x46F54C", Offset = "0x46F54C", VA = "0x46F54C", Slot = "6")]
	protected override void Start()
	{
	}

	[Token(Token = "0x600159E")]
	[Address(RVA = "0x46F5E4", Offset = "0x46F5E4", VA = "0x46F5E4", Slot = "4")]
	public override void HandleEvent(GameObject in_gameObject)
	{
	}

	[Token(Token = "0x600159F")]
	[Address(RVA = "0x46F480", Offset = "0x46F480", VA = "0x46F480")]
	public void UnloadBank(GameObject in_gameObject)
	{
	}

	[Token(Token = "0x60015A0")]
	[Address(RVA = "0x46F724", Offset = "0x46F724", VA = "0x46F724", Slot = "7")]
	protected override void OnDestroy()
	{
	}
}
[Token(Token = "0x20002AC")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x1FA128", Offset = "0x1FA128")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x1FA128", Offset = "0x1FA128")]
public class AkEmitterObstructionOcclusion : AkObstructionOcclusion
{
	[Token(Token = "0x4001094")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private AkGameObj m_gameObj;

	[Token(Token = "0x60015A1")]
	[Address(RVA = "0x47CECC", Offset = "0x47CECC", VA = "0x47CECC")]
	public AkEmitterObstructionOcclusion()
	{
	}

	[Token(Token = "0x60015A2")]
	[Address(RVA = "0x47CED4", Offset = "0x47CED4", VA = "0x47CED4")]
	private void Awake()
	{
	}

	[Token(Token = "0x60015A3")]
	[Address(RVA = "0x47CF48", Offset = "0x47CF48", VA = "0x47CF48", Slot = "4")]
	protected override void UpdateObstructionOcclusionValuesForListeners()
	{
	}

	[Token(Token = "0x60015A4")]
	[Address(RVA = "0x47D10C", Offset = "0x47D10C", VA = "0x47D10C", Slot = "5")]
	protected override void SetObstructionOcclusion(KeyValuePair<AkAudioListener, ObstructionOcclusionValue> ObsOccPair)
	{
	}
}
[Token(Token = "0x20002AD")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x1FA1C8", Offset = "0x1FA1C8")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x1FA1C8", Offset = "0x1FA1C8")]
[ExecuteInEditMode]
public class AkEnvironment : MonoBehaviour
{
	[Token(Token = "0x20002AE")]
	public class AkEnvironment_CompareByPriority : IComparer<AkEnvironment>
	{
		[Token(Token = "0x60015AC")]
		[Address(RVA = "0x47E25C", Offset = "0x47E25C", VA = "0x47E25C")]
		public AkEnvironment_CompareByPriority()
		{
		}

		[Token(Token = "0x60015AD")]
		[Address(RVA = "0x47E26C", Offset = "0x47E26C", VA = "0x47E26C", Slot = "5")]
		public virtual int Compare(AkEnvironment a, AkEnvironment b)
		{
			return default(int);
		}
	}

	[Token(Token = "0x20002AF")]
	public class AkEnvironment_CompareBySelectionAlgorithm : AkEnvironment_CompareByPriority
	{
		[Token(Token = "0x60015AE")]
		[Address(RVA = "0x47E264", Offset = "0x47E264", VA = "0x47E264")]
		public AkEnvironment_CompareBySelectionAlgorithm()
		{
		}

		[Token(Token = "0x60015AF")]
		[Address(RVA = "0x47E34C", Offset = "0x47E34C", VA = "0x47E34C", Slot = "5")]
		public override int Compare(AkEnvironment a, AkEnvironment b)
		{
			return default(int);
		}
	}

	[Token(Token = "0x4001095")]
	public const int MAX_NB_ENVIRONMENTS = 4;

	[Token(Token = "0x4001096")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static AkEnvironment_CompareByPriority s_compareByPriority;

	[Token(Token = "0x4001097")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public static AkEnvironment_CompareBySelectionAlgorithm s_compareBySelectionAlgorithm;

	[Token(Token = "0x4001098")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public bool excludeOthers;

	[Token(Token = "0x4001099")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD")]
	public bool isDefault;

	[Token(Token = "0x400109A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int m_auxBusID;

	[Token(Token = "0x400109B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private Collider m_Collider;

	[Token(Token = "0x400109C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int priority;

	[Token(Token = "0x60015A5")]
	[Address(RVA = "0x47E120", Offset = "0x47E120", VA = "0x47E120")]
	public AkEnvironment()
	{
	}

	[Token(Token = "0x60015A6")]
	[Address(RVA = "0x47E128", Offset = "0x47E128", VA = "0x47E128")]
	public uint GetAuxBusID()
	{
		return default(uint);
	}

	[Token(Token = "0x60015A7")]
	[Address(RVA = "0x47E130", Offset = "0x47E130", VA = "0x47E130")]
	public void SetAuxBusID(int in_auxBusID)
	{
	}

	[Token(Token = "0x60015A8")]
	[Address(RVA = "0x47E138", Offset = "0x47E138", VA = "0x47E138")]
	public float GetAuxSendValueForPosition(Vector3 in_position)
	{
		return default(float);
	}

	[Token(Token = "0x60015A9")]
	[Address(RVA = "0x47E140", Offset = "0x47E140", VA = "0x47E140")]
	public Collider GetCollider()
	{
		return null;
	}

	[Token(Token = "0x60015AA")]
	[Address(RVA = "0x47E148", Offset = "0x47E148", VA = "0x47E148")]
	public void Awake()
	{
	}
}
[Token(Token = "0x20002B0")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x1FA278", Offset = "0x1FA278")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x1FA278", Offset = "0x1FA278")]
[ExecuteInEditMode]
public class AkEnvironmentPortal : MonoBehaviour
{
	[Token(Token = "0x400109D")]
	public const int MAX_ENVIRONMENTS_PER_PORTAL = 2;

	[Token(Token = "0x400109E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Vector3 axis;

	[Token(Token = "0x400109F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AkEnvironment[] environments;

	[Token(Token = "0x60015B0")]
	[Address(RVA = "0x47E3E0", Offset = "0x47E3E0", VA = "0x47E3E0")]
	public AkEnvironmentPortal()
	{
	}

	[Token(Token = "0x60015B1")]
	[Address(RVA = "0x47E4A0", Offset = "0x47E4A0", VA = "0x47E4A0")]
	public float GetAuxSendValueForPosition(Vector3 in_position, int index)
	{
		return default(float);
	}
}
[Token(Token = "0x20002B1")]
public class AkEventCallbackMsg
{
	[Token(Token = "0x40010A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public AkCallbackInfo info;

	[Token(Token = "0x40010A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public GameObject sender;

	[Token(Token = "0x40010A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public AkCallbackType type;

	[Token(Token = "0x60015B2")]
	[Address(RVA = "0x47EA68", Offset = "0x47EA68", VA = "0x47EA68")]
	public AkEventCallbackMsg()
	{
	}
}
[Token(Token = "0x20002B2")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x1FA328", Offset = "0x1FA328")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x1FA328", Offset = "0x1FA328")]
public class AkEvent : AkUnityEventHandler
{
	[Token(Token = "0x40010A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AkActionOnEventType actionOnEventType;

	[Token(Token = "0x40010A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public AkCurveInterpolation curveInterpolation;

	[Token(Token = "0x40010A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool enableActionOnEvent;

	[Token(Token = "0x40010A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int eventID;

	[Token(Token = "0x40010A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AkEventCallbackData m_callbackData;

	[Token(Token = "0x40010A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public uint playingId;

	[Token(Token = "0x40010A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject soundEmitterObject;

	[Token(Token = "0x40010AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float transitionDuration;

	[Token(Token = "0x60015B3")]
	[Address(RVA = "0x4679C4", Offset = "0x4679C4", VA = "0x4679C4")]
	public AkEvent()
	{
	}

	[Token(Token = "0x60015B4")]
	[Address(RVA = "0x47E7A8", Offset = "0x47E7A8", VA = "0x47E7A8")]
	private void Callback(object in_cookie, AkCallbackType in_type, AkCallbackInfo in_info)
	{
	}

	[Token(Token = "0x60015B5")]
	[Address(RVA = "0x468A74", Offset = "0x468A74", VA = "0x468A74", Slot = "4")]
	public override void HandleEvent(GameObject in_gameObject)
	{
	}

	[Token(Token = "0x60015B6")]
	[Address(RVA = "0x47EA70", Offset = "0x47EA70", VA = "0x47EA70")]
	public void Stop(int _transitionDuration)
	{
	}

	[Token(Token = "0x60015B7")]
	[Address(RVA = "0x47EA78", Offset = "0x47EA78", VA = "0x47EA78")]
	public void Stop(int _transitionDuration, AkCurveInterpolation _curveInterpolation)
	{
	}
}
[Token(Token = "0x20002B3")]
public class AkEventCallbackData : ScriptableObject
{
	[Token(Token = "0x40010AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public List<int> callbackFlags;

	[Token(Token = "0x40010AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public List<string> callbackFunc;

	[Token(Token = "0x40010AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public List<GameObject> callbackGameObj;

	[Token(Token = "0x40010AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int uFlags;

	[Token(Token = "0x60015B8")]
	[Address(RVA = "0x47EB34", Offset = "0x47EB34", VA = "0x47EB34")]
	public AkEventCallbackData()
	{
	}
}
[Token(Token = "0x20002B4")]
public class WwiseEventTracker
{
	[Token(Token = "0x40010AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float currentDuration;

	[Token(Token = "0x40010B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public float currentDurationProportion;

	[Token(Token = "0x40010B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public bool eventIsPlaying;

	[Token(Token = "0x40010B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
	public bool fadeoutTriggered;

	[Token(Token = "0x40010B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public uint playingID;

	[Token(Token = "0x40010B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float previousEventStartTime;

	[Token(Token = "0x60015B9")]
	[Address(RVA = "0x41AC60", Offset = "0x41AC60", VA = "0x41AC60")]
	public WwiseEventTracker()
	{
	}

	[Token(Token = "0x60015BA")]
	[Address(RVA = "0x41AC7C", Offset = "0x41AC7C", VA = "0x41AC7C")]
	public void CallbackHandler(object in_cookie, AkCallbackType in_type, object in_info)
	{
	}
}
[Serializable]
[Token(Token = "0x20002B5")]
public class AkEventPlayable : PlayableAsset, ITimelineClipAsset
{
	[Token(Token = "0x40010B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private readonly WwiseEventTracker eventTracker;

	[Token(Token = "0x40010B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Event akEvent;

	[Token(Token = "0x40010B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private float blendInDuration;

	[Token(Token = "0x40010B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float blendOutDuration;

	[Token(Token = "0x40010B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private float easeInDuration;

	[Token(Token = "0x40010BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float easeOutDuration;

	[Token(Token = "0x40010BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public ExposedReference<GameObject> emitterObjectRef;

	[Token(Token = "0x40010BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[SerializeField]
	private float eventDurationMax;

	[Token(Token = "0x40010BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private float eventDurationMin;

	[Token(Token = "0x40010BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public bool overrideTrackEmitterObject;

	[Token(Token = "0x40010BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private TimelineClip owningClip;

	[Token(Token = "0x40010C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public bool retriggerEvent;

	[Token(Token = "0x17000230")]
	public TimelineClip OwningClip
	{
		[Token(Token = "0x60015BC")]
		[Address(RVA = "0x47EE2C", Offset = "0x47EE2C", VA = "0x47EE2C")]
		get
		{
			return null;
		}
		[Token(Token = "0x60015BD")]
		[Address(RVA = "0x47EE34", Offset = "0x47EE34", VA = "0x47EE34")]
		set
		{
		}
	}

	[Token(Token = "0x17000231")]
	public override double duration
	{
		[Token(Token = "0x60015BE")]
		[Address(RVA = "0x47EE3C", Offset = "0x47EE3C", VA = "0x47EE3C", Slot = "7")]
		get
		{
			return default(double);
		}
	}

	[Token(Token = "0x17000232")]
	public ClipCaps clipCaps
	{
		[Token(Token = "0x60015BF")]
		[Address(RVA = "0x47EE60", Offset = "0x47EE60", VA = "0x47EE60", Slot = "9")]
		get
		{
			return default(ClipCaps);
		}
	}

	[Token(Token = "0x60015BB")]
	[Address(RVA = "0x47EDA0", Offset = "0x47EDA0", VA = "0x47EDA0")]
	public AkEventPlayable()
	{
	}

	[Token(Token = "0x60015C0")]
	[Address(RVA = "0x47EE70", Offset = "0x47EE70", VA = "0x47EE70")]
	public void setEaseInDuration(float d)
	{
	}

	[Token(Token = "0x60015C1")]
	[Address(RVA = "0x47EE78", Offset = "0x47EE78", VA = "0x47EE78")]
	public void setEaseOutDuration(float d)
	{
	}

	[Token(Token = "0x60015C2")]
	[Address(RVA = "0x47EE80", Offset = "0x47EE80", VA = "0x47EE80")]
	public void setBlendInDuration(float d)
	{
	}

	[Token(Token = "0x60015C3")]
	[Address(RVA = "0x47EE88", Offset = "0x47EE88", VA = "0x47EE88")]
	public void setBlendOutDuration(float d)
	{
	}

	[Token(Token = "0x60015C4")]
	[Address(RVA = "0x47EE90", Offset = "0x47EE90", VA = "0x47EE90", Slot = "6")]
	public override Playable CreatePlayable(PlayableGraph graph, GameObject owner)
	{
		return default(Playable);
	}

	[Token(Token = "0x60015C5")]
	[Address(RVA = "0x47EFF0", Offset = "0x47EFF0", VA = "0x47EFF0")]
	public void initializeBehaviour(PlayableGraph graph, AkEventPlayableBehavior b, GameObject owner)
	{
	}
}
[Token(Token = "0x20002B6")]
public class AkEventPlayableBehavior : PlayableBehaviour
{
	[Token(Token = "0x20002B7")]
	public enum AkPlayableAction
	{
		[Token(Token = "0x40010D0")]
		None = 0,
		[Token(Token = "0x40010D1")]
		Playback = 1,
		[Token(Token = "0x40010D2")]
		Retrigger = 2,
		[Token(Token = "0x40010D3")]
		Stop = 4,
		[Token(Token = "0x40010D4")]
		DelayedStop = 8,
		[Token(Token = "0x40010D5")]
		Seek = 0x10,
		[Token(Token = "0x40010D6")]
		FadeIn = 0x20,
		[Token(Token = "0x40010D7")]
		FadeOut = 0x40
	}

	[Token(Token = "0x40010C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int scrubPlaybackLengthMs;

	[Token(Token = "0x40010C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public Event akEvent;

	[Token(Token = "0x40010C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public float akEventMaxDuration;

	[Token(Token = "0x40010C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float akEventMinDuration;

	[Token(Token = "0x40010C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float blendInDuration;

	[Token(Token = "0x40010C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float blendOutDuration;

	[Token(Token = "0x40010C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float easeInDuration;

	[Token(Token = "0x40010C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float easeOutDuration;

	[Token(Token = "0x40010C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public GameObject eventObject;

	[Token(Token = "0x40010CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool eventShouldRetrigger;

	[Token(Token = "0x40010CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public WwiseEventTracker eventTracker;

	[Token(Token = "0x40010CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float lastEffectiveWeight;

	[Token(Token = "0x40010CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public bool overrideTrackEmittorObject;

	[Token(Token = "0x40010CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public uint requiredActions;

	[Token(Token = "0x60015C6")]
	[Address(RVA = "0x47F154", Offset = "0x47F154", VA = "0x47F154")]
	public AkEventPlayableBehavior()
	{
	}

	[Token(Token = "0x60015C7")]
	[Address(RVA = "0x47F174", Offset = "0x47F174", VA = "0x47F174", Slot = "7")]
	public override void PrepareFrame(Playable playable, FrameData info)
	{
	}

	[Token(Token = "0x60015C8")]
	[Address(RVA = "0x47F588", Offset = "0x47F588", VA = "0x47F588", Slot = "5")]
	public override void OnBehaviourPlay(Playable playable, FrameData info)
	{
	}

	[Token(Token = "0x60015C9")]
	[Address(RVA = "0x47F8C4", Offset = "0x47F8C4", VA = "0x47F8C4", Slot = "6")]
	public override void OnBehaviourPause(Playable playable, FrameData info)
	{
	}

	[Token(Token = "0x60015CA")]
	[Address(RVA = "0x47FA74", Offset = "0x47FA74", VA = "0x47FA74", Slot = "8")]
	public override void ProcessFrame(Playable playable, FrameData info, object playerData)
	{
	}

	[Token(Token = "0x60015CB")]
	[Address(RVA = "0x47FD60", Offset = "0x47FD60", VA = "0x47FD60")]
	private bool actionIsRequired(AkPlayableAction actionType)
	{
		return default(bool);
	}

	[Token(Token = "0x60015CC")]
	[Address(RVA = "0x47F3AC", Offset = "0x47F3AC", VA = "0x47F3AC")]
	private bool ShouldPlay(Playable playable)
	{
		return default(bool);
	}

	[Token(Token = "0x60015CD")]
	[Address(RVA = "0x480494", Offset = "0x480494", VA = "0x480494")]
	private bool fadeInRequired(float currentClipTime)
	{
		return default(bool);
	}

	[Token(Token = "0x60015CE")]
	[Address(RVA = "0x47F510", Offset = "0x47F510", VA = "0x47F510")]
	private void checkForFadeIn(float currentClipTime)
	{
	}

	[Token(Token = "0x60015CF")]
	[Address(RVA = "0x4804D0", Offset = "0x4804D0", VA = "0x4804D0")]
	private void checkForFadeInImmediate(float currentClipTime)
	{
	}

	[Token(Token = "0x60015D0")]
	[Address(RVA = "0x480500", Offset = "0x480500", VA = "0x480500")]
	private bool fadeOutRequired(Playable playable)
	{
		return default(bool);
	}

	[Token(Token = "0x60015D1")]
	[Address(RVA = "0x4805E0", Offset = "0x4805E0", VA = "0x4805E0")]
	private void checkForFadeOutImmediate(Playable playable)
	{
	}

	[Token(Token = "0x60015D2")]
	[Address(RVA = "0x47F548", Offset = "0x47F548", VA = "0x47F548")]
	private void checkForFadeOut(Playable playable)
	{
	}

	[Token(Token = "0x60015D3")]
	[Address(RVA = "0x4801F4", Offset = "0x4801F4", VA = "0x4801F4")]
	protected void triggerFadeIn(float currentClipTime)
	{
	}

	[Token(Token = "0x60015D4")]
	[Address(RVA = "0x48037C", Offset = "0x48037C", VA = "0x48037C")]
	protected void triggerFadeOut(float fadeDuration)
	{
	}

	[Token(Token = "0x60015D5")]
	[Address(RVA = "0x47F968", Offset = "0x47F968", VA = "0x47F968")]
	protected void stopEvent(int transition = 0)
	{
	}

	[Token(Token = "0x60015D6")]
	[Address(RVA = "0x47FD70", Offset = "0x47FD70", VA = "0x47FD70")]
	protected void playEvent()
	{
	}

	[Token(Token = "0x60015D7")]
	[Address(RVA = "0x47FEE0", Offset = "0x47FEE0", VA = "0x47FEE0")]
	protected void retriggerEvent(Playable playable)
	{
	}

	[Token(Token = "0x60015D8")]
	[Address(RVA = "0x47F750", Offset = "0x47F750", VA = "0x47F750")]
	protected float getProportionalTime(Playable playable)
	{
		return default(float);
	}

	[Token(Token = "0x60015D9")]
	[Address(RVA = "0x48009C", Offset = "0x48009C", VA = "0x48009C")]
	protected float seekToTime(Playable playable)
	{
		return default(float);
	}
}
[Token(Token = "0x20002B8")]
[AttributeAttribute(Name = "TrackColorAttribute", RVA = "0x1FA3E8", Offset = "0x1FA3E8")]
[AttributeAttribute(Name = "TrackClipTypeAttribute", RVA = "0x1FA3E8", Offset = "0x1FA3E8")]
[AttributeAttribute(Name = "TrackBindingTypeAttribute", RVA = "0x1FA3E8", Offset = "0x1FA3E8")]
public class AkEventTrack : TrackAsset
{
	[Token(Token = "0x60015DB")]
	[Address(RVA = "0x480738", Offset = "0x480738", VA = "0x480738")]
	public AkEventTrack()
	{
	}

	[Token(Token = "0x60015DC")]
	[Address(RVA = "0x4807BC", Offset = "0x4807BC", VA = "0x4807BC", Slot = "15")]
	public override Playable CreateTrackMixer(PlayableGraph graph, GameObject go, int inputCount)
	{
		return default(Playable);
	}

	[Token(Token = "0x60015DD")]
	[Address(RVA = "0x4808E4", Offset = "0x4808E4", VA = "0x4808E4")]
	public void setFadeTimes()
	{
	}

	[Token(Token = "0x60015DE")]
	[Address(RVA = "0x480CCC", Offset = "0x480CCC", VA = "0x480CCC")]
	public void setOwnerClips()
	{
	}

	[Token(Token = "0x60015DF")]
	[Address(RVA = "0x481040", Offset = "0x481040", VA = "0x481040")]
	public double getBlendInTime(AkEventPlayable playableClip)
	{
		return default(double);
	}

	[Token(Token = "0x60015E0")]
	[Address(RVA = "0x481458", Offset = "0x481458", VA = "0x481458")]
	public double getBlendOutTime(AkEventPlayable playableClip)
	{
		return default(double);
	}

	[Token(Token = "0x60015E1")]
	[Address(RVA = "0x481870", Offset = "0x481870", VA = "0x481870")]
	public double getEaseInTime(AkEventPlayable playableClip)
	{
		return default(double);
	}

	[Token(Token = "0x60015E2")]
	[Address(RVA = "0x481C88", Offset = "0x481C88", VA = "0x481C88")]
	public double getEaseOutTime(AkEventPlayable playableClip)
	{
		return default(double);
	}
}
[Token(Token = "0x20002B9")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x1FA4C0", Offset = "0x1FA4C0")]
[DisallowMultipleComponent]
[ExecuteInEditMode]
public class AkGameObj : MonoBehaviour
{
	[Token(Token = "0x40010D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	[SerializeField]
	private AkGameObjListenerList m_listeners;

	[Token(Token = "0x40010D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public bool isEnvironmentAware;

	[Token(Token = "0x40010DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
	[SerializeField]
	private bool isStaticObject;

	[Token(Token = "0x40010DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private Collider m_Collider;

	[Token(Token = "0x40010DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private AkGameObjEnvironmentData m_envData;

	[Token(Token = "0x40010DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private AkGameObjPositionData m_posData;

	[Token(Token = "0x40010DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AkGameObjPositionOffsetData m_positionOffsetData;

	[Token(Token = "0x40010DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private bool isRegistered;

	[Token(Token = "0x40010E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private AkGameObjPosOffsetData m_posOffsetData;

	[Token(Token = "0x40010E1")]
	private const int AK_NUM_LISTENERS = 8;

	[Token(Token = "0x40010E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[SerializeField]
	private int listenerMask;

	[Token(Token = "0x17000233")]
	public bool IsUsingDefaultListeners
	{
		[Token(Token = "0x60015E4")]
		[Address(RVA = "0x47D0CC", Offset = "0x47D0CC", VA = "0x47D0CC")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000234")]
	public List<AkAudioListener> ListenerList
	{
		[Token(Token = "0x60015E5")]
		[Address(RVA = "0x47D0EC", Offset = "0x47D0EC", VA = "0x47D0EC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60015E3")]
	[Address(RVA = "0x482C84", Offset = "0x482C84", VA = "0x482C84")]
	public AkGameObj()
	{
	}

	[Token(Token = "0x60015E6")]
	[Address(RVA = "0x46CCBC", Offset = "0x46CCBC", VA = "0x46CCBC")]
	internal void AddListener(AkAudioListener listener)
	{
	}

	[Token(Token = "0x60015E7")]
	[Address(RVA = "0x46CCF4", Offset = "0x46CCF4", VA = "0x46CCF4")]
	internal void RemoveListener(AkAudioListener listener)
	{
	}

	[Token(Token = "0x60015E8")]
	[Address(RVA = "0x46C8B0", Offset = "0x46C8B0", VA = "0x46C8B0")]
	public AKRESULT Register()
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60015E9")]
	[Address(RVA = "0x482D98", Offset = "0x482D98", VA = "0x482D98")]
	private void Awake()
	{
	}

	[Token(Token = "0x60015EA")]
	[Address(RVA = "0x483634", Offset = "0x483634", VA = "0x483634")]
	private void CheckStaticStatus()
	{
	}

	[Token(Token = "0x60015EB")]
	[Address(RVA = "0x483638", Offset = "0x483638", VA = "0x483638")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60015EC")]
	[Address(RVA = "0x483650", Offset = "0x483650", VA = "0x483650")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60015ED")]
	[Address(RVA = "0x483818", Offset = "0x483818", VA = "0x483818")]
	private void Update()
	{
	}

	[Token(Token = "0x60015EE")]
	[Address(RVA = "0x483BB4", Offset = "0x483BB4", VA = "0x483BB4", Slot = "4")]
	public virtual Vector3 GetPosition()
	{
		return default(Vector3);
	}

	[Token(Token = "0x60015EF")]
	[Address(RVA = "0x483D50", Offset = "0x483D50", VA = "0x483D50", Slot = "5")]
	public virtual Vector3 GetForward()
	{
		return default(Vector3);
	}

	[Token(Token = "0x60015F0")]
	[Address(RVA = "0x483D8C", Offset = "0x483D8C", VA = "0x483D8C", Slot = "6")]
	public virtual Vector3 GetUpward()
	{
		return default(Vector3);
	}

	[Token(Token = "0x60015F1")]
	[Address(RVA = "0x483DC8", Offset = "0x483DC8", VA = "0x483DC8")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60015F2")]
	[Address(RVA = "0x483DE4", Offset = "0x483DE4", VA = "0x483DE4")]
	private void OnTriggerExit(Collider other)
	{
	}
}
[Token(Token = "0x20002BA")]
public class AkGameObjEnvironmentData
{
	[Token(Token = "0x40010E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private readonly List<AkEnvironment> activeEnvironments;

	[Token(Token = "0x40010E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private readonly List<AkEnvironment> activeEnvironmentsFromPortals;

	[Token(Token = "0x40010E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private readonly List<AkEnvironmentPortal> activePortals;

	[Token(Token = "0x40010E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private readonly AkAuxSendArray auxSendValues;

	[Token(Token = "0x40010E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Vector3 lastPosition;

	[Token(Token = "0x40010E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private bool hasEnvironmentListChanged;

	[Token(Token = "0x40010E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
	private bool hasActivePortalListChanged;

	[Token(Token = "0x40010EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x26")]
	private bool hasSentZero;

	[Token(Token = "0x60015F3")]
	[Address(RVA = "0x483030", Offset = "0x483030", VA = "0x483030")]
	public AkGameObjEnvironmentData()
	{
	}

	[Token(Token = "0x60015F4")]
	[Address(RVA = "0x484104", Offset = "0x484104", VA = "0x484104")]
	private void AddHighestPriorityEnvironmentsFromPortals(Vector3 position)
	{
	}

	[Token(Token = "0x60015F5")]
	[Address(RVA = "0x4843D8", Offset = "0x4843D8", VA = "0x4843D8")]
	private void AddHighestPriorityEnvironments(Vector3 position)
	{
	}

	[Token(Token = "0x60015F6")]
	[Address(RVA = "0x4832FC", Offset = "0x4832FC", VA = "0x4832FC")]
	public void UpdateAuxSend(GameObject gameObject, Vector3 position)
	{
	}

	[Token(Token = "0x60015F7")]
	[Address(RVA = "0x4845B4", Offset = "0x4845B4", VA = "0x4845B4")]
	private void TryAddEnvironment(AkEnvironment env)
	{
	}

	[Token(Token = "0x60015F8")]
	[Address(RVA = "0x4847B8", Offset = "0x4847B8", VA = "0x4847B8")]
	private void RemoveEnvironment(AkEnvironment env)
	{
	}

	[Token(Token = "0x60015F9")]
	[Address(RVA = "0x483180", Offset = "0x483180", VA = "0x483180")]
	public void AddAkEnvironment(Collider environmentCollider, Collider gameObjectCollider)
	{
	}

	[Token(Token = "0x60015FA")]
	[Address(RVA = "0x484868", Offset = "0x484868", VA = "0x484868")]
	private bool AkEnvironmentBelongsToActivePortals(AkEnvironment env)
	{
		return default(bool);
	}

	[Token(Token = "0x60015FB")]
	[Address(RVA = "0x483E08", Offset = "0x483E08", VA = "0x483E08")]
	public void RemoveAkEnvironment(Collider environmentCollider, Collider gameObjectCollider)
	{
	}
}
[Serializable]
[Token(Token = "0x20002BB")]
public class AkGameObjListenerList : AkAudioListener.BaseListenerList
{
	[NonSerialized]
	[Token(Token = "0x40010EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private AkGameObj akGameObj;

	[Token(Token = "0x40010EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	[SerializeField]
	public List<AkAudioListener> initialListenerList;

	[Token(Token = "0x40010ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	public bool useDefaultListeners;

	[Token(Token = "0x60015FC")]
	[Address(RVA = "0x482D08", Offset = "0x482D08", VA = "0x482D08")]
	public AkGameObjListenerList()
	{
	}

	[Token(Token = "0x60015FD")]
	[Address(RVA = "0x4849DC", Offset = "0x4849DC", VA = "0x4849DC")]
	public void SetUseDefaultListeners(bool useDefault)
	{
	}

	[Token(Token = "0x60015FE")]
	[Address(RVA = "0x4834E0", Offset = "0x4834E0", VA = "0x4834E0")]
	public void Init(AkGameObj akGameObj)
	{
	}

	[Token(Token = "0x60015FF")]
	[Address(RVA = "0x484C1C", Offset = "0x484C1C", VA = "0x484C1C", Slot = "4")]
	public override bool Add(AkAudioListener listener)
	{
		return default(bool);
	}

	[Token(Token = "0x6001600")]
	[Address(RVA = "0x484D44", Offset = "0x484D44", VA = "0x484D44", Slot = "5")]
	public override bool Remove(AkAudioListener listener)
	{
		return default(bool);
	}
}
[Token(Token = "0x20002BC")]
public class AkGameObjPositionData
{
	[Token(Token = "0x40010EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public Vector3 forward;

	[Token(Token = "0x40010EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public Vector3 position;

	[Token(Token = "0x40010F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Vector3 up;

	[Token(Token = "0x6001601")]
	[Address(RVA = "0x483028", Offset = "0x483028", VA = "0x483028")]
	public AkGameObjPositionData()
	{
	}
}
[Serializable]
[Token(Token = "0x20002BD")]
public class AkGameObjPositionOffsetData
{
	[Token(Token = "0x40010F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public bool KeepMe;

	[Token(Token = "0x40010F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Vector3 positionOffset;

	[Token(Token = "0x6001602")]
	[Address(RVA = "0x484E6C", Offset = "0x484E6C", VA = "0x484E6C")]
	public AkGameObjPositionOffsetData(bool IReallyWantToBeConstructed = false)
	{
	}
}
[Token(Token = "0x20002BE")]
public class AkGameObjPosOffsetData : ScriptableObject
{
	[Token(Token = "0x40010F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Vector3 positionOffset;

	[Token(Token = "0x6001603")]
	[Address(RVA = "0x484E8C", Offset = "0x484E8C", VA = "0x484E8C")]
	public AkGameObjPosOffsetData()
	{
	}
}
[Token(Token = "0x20002BF")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x1FA578", Offset = "0x1FA578")]
[DisallowMultipleComponent]
[ExecuteInEditMode]
public class AkInitializer : MonoBehaviour
{
	[Token(Token = "0x40010F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static AkInitializer ms_Instance;

	[Token(Token = "0x40010F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public AkWwiseInitializationSettings InitializationSettings;

	[Token(Token = "0x6001604")]
	[Address(RVA = "0x486B80", Offset = "0x486B80", VA = "0x486B80")]
	public AkInitializer()
	{
	}

	[Token(Token = "0x6001605")]
	[Address(RVA = "0x486B88", Offset = "0x486B88", VA = "0x486B88")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001606")]
	[Address(RVA = "0x486CC4", Offset = "0x486CC4", VA = "0x486CC4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6001607")]
	[Address(RVA = "0x486DD8", Offset = "0x486DD8", VA = "0x486DD8")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6001608")]
	[Address(RVA = "0x486EAC", Offset = "0x486EAC", VA = "0x486EAC")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6001609")]
	[Address(RVA = "0x486F74", Offset = "0x486F74", VA = "0x486F74")]
	private void OnApplicationPause(bool pauseStatus)
	{
	}

	[Token(Token = "0x600160A")]
	[Address(RVA = "0x487050", Offset = "0x487050", VA = "0x487050")]
	private void OnApplicationFocus(bool focus)
	{
	}

	[Token(Token = "0x600160B")]
	[Address(RVA = "0x48712C", Offset = "0x48712C", VA = "0x48712C")]
	private void OnApplicationQuit()
	{
	}

	[Token(Token = "0x600160C")]
	[Address(RVA = "0x487200", Offset = "0x487200", VA = "0x487200")]
	private void LateUpdate()
	{
	}
}
[Token(Token = "0x20002C0")]
public class AkMemBankLoader : MonoBehaviour
{
	[Token(Token = "0x200035A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1FA5F0", Offset = "0x1FA5F0")]
	private sealed class <LoadFile>c__Iterator0 : IEnumerator, IDisposable, IEnumerator<object>
	{
		[Token(Token = "0x40013C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal uint <in_uInMemoryBankSize>__0;

		[Token(Token = "0x40013C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		internal AKRESULT <result>__0;

		[Token(Token = "0x40013C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal AkMemBankLoader $this;

		[Token(Token = "0x40013C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		internal object $current;

		[Token(Token = "0x40013C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal bool $disposing;

		[Token(Token = "0x40013C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		internal int $PC;

		[Token(Token = "0x17000311")]
		private object System.Collections.Generic.IEnumerator<object>.Current
		{
			[Token(Token = "0x600193D")]
			[Address(RVA = "0x48A47C", Offset = "0x48A47C", VA = "0x48A47C", Slot = "8")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000312")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600193E")]
			[Address(RVA = "0x48A484", Offset = "0x48A484", VA = "0x48A484", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600193B")]
		[Address(RVA = "0x489DB0", Offset = "0x489DB0", VA = "0x489DB0")]
		[DebuggerHidden]
		public <LoadFile>c__Iterator0()
		{
		}

		[Token(Token = "0x600193C")]
		[Address(RVA = "0x489E80", Offset = "0x489E80", VA = "0x489E80", Slot = "5")]
		public bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600193F")]
		[Address(RVA = "0x48A48C", Offset = "0x48A48C", VA = "0x48A48C", Slot = "7")]
		[DebuggerHidden]
		public void Dispose()
		{
		}

		[Token(Token = "0x6001940")]
		[Address(RVA = "0x48A4A0", Offset = "0x48A4A0", VA = "0x48A4A0", Slot = "6")]
		[DebuggerHidden]
		public void Reset()
		{
		}
	}

	[Token(Token = "0x40010F6")]
	private const int WaitMs = 50;

	[Token(Token = "0x40010F7")]
	private const long AK_BANK_PLATFORM_DATA_ALIGNMENT = 16L;

	[Token(Token = "0x40010F8")]
	private const long AK_BANK_PLATFORM_DATA_ALIGNMENT_MASK = 15L;

	[Token(Token = "0x40010F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public string bankName;

	[Token(Token = "0x40010FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public bool isLocalizedBank;

	[Token(Token = "0x40010FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private string m_bankPath;

	[Token(Token = "0x40010FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[HideInInspector]
	public uint ms_bankID;

	[Token(Token = "0x40010FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private IntPtr ms_pInMemoryBankPtr;

	[Token(Token = "0x40010FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private GCHandle ms_pinnedArray;

	[Token(Token = "0x40010FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private WWW ms_www;

	[Token(Token = "0x600160D")]
	[Address(RVA = "0x489998", Offset = "0x489998", VA = "0x489998")]
	public AkMemBankLoader()
	{
	}

	[Token(Token = "0x600160E")]
	[Address(RVA = "0x489A40", Offset = "0x489A40", VA = "0x489A40")]
	private void Start()
	{
	}

	[Token(Token = "0x600160F")]
	[Address(RVA = "0x489BD8", Offset = "0x489BD8", VA = "0x489BD8")]
	public void LoadNonLocalizedBank(string in_bankFilename)
	{
	}

	[Token(Token = "0x6001610")]
	[Address(RVA = "0x489A58", Offset = "0x489A58", VA = "0x489A58")]
	public void LoadLocalizedBank(string in_bankFilename)
	{
	}

	[Token(Token = "0x6001611")]
	[Address(RVA = "0x489D30", Offset = "0x489D30", VA = "0x489D30")]
	[DebuggerHidden]
	private IEnumerator LoadFile()
	{
		return null;
	}

	[Token(Token = "0x6001612")]
	[Address(RVA = "0x489D08", Offset = "0x489D08", VA = "0x489D08")]
	private void DoLoadBank(string in_bankPath)
	{
	}

	[Token(Token = "0x6001613")]
	[Address(RVA = "0x489DB8", Offset = "0x489DB8", VA = "0x489DB8")]
	private void OnDestroy()
	{
	}
}
[Token(Token = "0x20002C1")]
public abstract class AkObstructionOcclusion : MonoBehaviour
{
	[Token(Token = "0x20002C2")]
	protected class ObstructionOcclusionValue
	{
		[Token(Token = "0x4001108")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float currentValue;

		[Token(Token = "0x4001109")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float targetValue;

		[Token(Token = "0x600161C")]
		[Address(RVA = "0x27857C", Offset = "0x27857C", VA = "0x27857C")]
		public ObstructionOcclusionValue()
		{
		}

		[Token(Token = "0x600161D")]
		[Address(RVA = "0x278EE8", Offset = "0x278EE8", VA = "0x278EE8")]
		public bool Update(float fadeRate)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x4001100")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private readonly List<AkAudioListener> listenersToRemove;

	[Token(Token = "0x4001101")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private readonly Dictionary<AkAudioListener, ObstructionOcclusionValue> ObstructionOcclusionValues;

	[Token(Token = "0x4001102")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	protected float fadeRate;

	[Token(Token = "0x4001103")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1FA650", Offset = "0x1FA650")]
	public float fadeTime;

	[Token(Token = "0x4001104")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1FA684", Offset = "0x1FA684")]
	public LayerMask LayerMask;

	[Token(Token = "0x4001105")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1FA6B8", Offset = "0x1FA6B8")]
	public float maxDistance;

	[Token(Token = "0x4001106")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1FA6EC", Offset = "0x1FA6EC")]
	public float refreshInterval;

	[Token(Token = "0x4001107")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float refreshTime;

	[Token(Token = "0x6001614")]
	[Address(RVA = "0x278094", Offset = "0x278094", VA = "0x278094")]
	protected AkObstructionOcclusion()
	{
	}

	[Token(Token = "0x6001615")]
	[Address(RVA = "0x278180", Offset = "0x278180", VA = "0x278180")]
	protected void InitIntervalsAndFadeRates()
	{
	}

	[Token(Token = "0x6001616")]
	[Address(RVA = "0x2781BC", Offset = "0x2781BC", VA = "0x2781BC")]
	protected void UpdateObstructionOcclusionValues(List<AkAudioListener> listenerList)
	{
	}

	[Token(Token = "0x6001617")]
	[Address(RVA = "0x278584", Offset = "0x278584", VA = "0x278584")]
	protected void UpdateObstructionOcclusionValues(AkAudioListener listener)
	{
	}

	[Token(Token = "0x6001618")]
	[Address(RVA = "0x2788E4", Offset = "0x2788E4", VA = "0x2788E4")]
	private void CastRays()
	{
	}

	[Token(Token = "0x6001619")]
	protected abstract void UpdateObstructionOcclusionValuesForListeners();

	[Token(Token = "0x600161A")]
	protected abstract void SetObstructionOcclusion(KeyValuePair<AkAudioListener, ObstructionOcclusionValue> ObsOccPair);

	[Token(Token = "0x600161B")]
	[Address(RVA = "0x278D24", Offset = "0x278D24", VA = "0x278D24")]
	private void Update()
	{
	}
}
[Token(Token = "0x20002C3")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x1FA720", Offset = "0x1FA720")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x1FA720", Offset = "0x1FA720")]
[DisallowMultipleComponent]
public class AkRoom : AkUnityEventHandler
{
	[Token(Token = "0x20002C4")]
	public class PriorityList
	{
		[Token(Token = "0x20002C5")]
		private class CompareByPriority : IComparer<AkRoom>
		{
			[Token(Token = "0x6001630")]
			[Address(RVA = "0x28B8E0", Offset = "0x28B8E0", VA = "0x28B8E0")]
			public CompareByPriority()
			{
			}

			[Token(Token = "0x6001631")]
			[Address(RVA = "0x28B8E8", Offset = "0x28B8E8", VA = "0x28B8E8", Slot = "5")]
			public virtual int Compare(AkRoom a, AkRoom b)
			{
				return default(int);
			}
		}

		[Token(Token = "0x4001112")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly CompareByPriority s_compareByPriority;

		[Token(Token = "0x4001113")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public List<AkRoom> rooms;

		[Token(Token = "0x6001628")]
		[Address(RVA = "0x28B3E0", Offset = "0x28B3E0", VA = "0x28B3E0")]
		public PriorityList()
		{
		}

		[Token(Token = "0x6001629")]
		[Address(RVA = "0x28B46C", Offset = "0x28B46C", VA = "0x28B46C")]
		public ulong GetHighestPriorityRoomID()
		{
			return default(ulong);
		}

		[Token(Token = "0x600162A")]
		[Address(RVA = "0x28B568", Offset = "0x28B568", VA = "0x28B568")]
		public AkRoom GetHighestPriorityRoom()
		{
			return null;
		}

		[Token(Token = "0x600162B")]
		[Address(RVA = "0x28B618", Offset = "0x28B618", VA = "0x28B618")]
		public void Add(AkRoom room)
		{
		}

		[Token(Token = "0x600162C")]
		[Address(RVA = "0x28B7C4", Offset = "0x28B7C4", VA = "0x28B7C4")]
		public void Remove(AkRoom room)
		{
		}

		[Token(Token = "0x600162D")]
		[Address(RVA = "0x28B840", Offset = "0x28B840", VA = "0x28B840")]
		public bool Contains(AkRoom room)
		{
			return default(bool);
		}

		[Token(Token = "0x600162E")]
		[Address(RVA = "0x28B6B4", Offset = "0x28B6B4", VA = "0x28B6B4")]
		public int BinarySearch(AkRoom room)
		{
			return default(int);
		}
	}

	[Token(Token = "0x400110A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static ulong INVALID_ROOM_ID;

	[Token(Token = "0x400110B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static int RoomCount;

	[Token(Token = "0x400110C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1FA7D0", Offset = "0x1FA7D0")]
	public int priority;

	[Token(Token = "0x400110D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public AuxBus reverbAuxBus;

	[Token(Token = "0x400110E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x1FA804", Offset = "0x1FA804")]
	public float reverbLevel;

	[Token(Token = "0x400110F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x1FA81C", Offset = "0x1FA81C")]
	public float wallOcclusion;

	[Token(Token = "0x4001110")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Event roomToneEvent;

	[Token(Token = "0x4001111")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x1FA834", Offset = "0x1FA834")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1FA834", Offset = "0x1FA834")]
	public float roomToneAuxSend;

	[Token(Token = "0x17000235")]
	public static bool IsSpatialAudioEnabled
	{
		[Token(Token = "0x600161F")]
		[Address(RVA = "0x28A39C", Offset = "0x28A39C", VA = "0x28A39C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x600161E")]
	[Address(RVA = "0x28A30C", Offset = "0x28A30C", VA = "0x28A30C")]
	public AkRoom()
	{
	}

	[Token(Token = "0x6001620")]
	[Address(RVA = "0x28A4C0", Offset = "0x28A4C0", VA = "0x28A4C0")]
	public ulong GetID()
	{
		return default(ulong);
	}

	[Token(Token = "0x6001621")]
	[Address(RVA = "0x28A550", Offset = "0x28A550", VA = "0x28A550")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6001622")]
	[Address(RVA = "0x28AF7C", Offset = "0x28AF7C", VA = "0x28AF7C", Slot = "6")]
	protected override void Start()
	{
	}

	[Token(Token = "0x6001623")]
	[Address(RVA = "0x28AF84", Offset = "0x28AF84", VA = "0x28AF84", Slot = "4")]
	public override void HandleEvent(GameObject in_gameObject)
	{
	}

	[Token(Token = "0x6001624")]
	[Address(RVA = "0x28AFBC", Offset = "0x28AFBC", VA = "0x28AFBC")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6001625")]
	[Address(RVA = "0x28B134", Offset = "0x28B134", VA = "0x28B134")]
	private void OnTriggerEnter(Collider in_other)
	{
	}

	[Token(Token = "0x6001626")]
	[Address(RVA = "0x28B254", Offset = "0x28B254", VA = "0x28B254")]
	private void OnTriggerExit(Collider in_other)
	{
	}
}
[Token(Token = "0x20002C6")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x1FA884", Offset = "0x1FA884")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x1FA884", Offset = "0x1FA884")]
[DisallowMultipleComponent]
public class AkRoomPortal : AkUnityEventHandler
{
	[Token(Token = "0x4001114")]
	public const int MAX_ROOMS_PER_PORTAL = 2;

	[Token(Token = "0x4001115")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private readonly AkVector extent;

	[Token(Token = "0x4001116")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private readonly AkTransform portalTransform;

	[Token(Token = "0x4001117")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private ulong backRoomID;

	[Token(Token = "0x4001118")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public List<int> closePortalTriggerList;

	[Token(Token = "0x4001119")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private ulong frontRoomID;

	[Token(Token = "0x400111A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public AkRoom[] rooms;

	[Token(Token = "0x6001632")]
	[Address(RVA = "0x28CBF8", Offset = "0x28CBF8", VA = "0x28CBF8")]
	public AkRoomPortal()
	{
	}

	[Token(Token = "0x6001633")]
	[Address(RVA = "0x28CD8C", Offset = "0x28CD8C", VA = "0x28CD8C")]
	public ulong GetID()
	{
		return default(ulong);
	}

	[Token(Token = "0x6001634")]
	[Address(RVA = "0x28CDA4", Offset = "0x28CDA4", VA = "0x28CDA4", Slot = "5")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x6001635")]
	[Address(RVA = "0x28D530", Offset = "0x28D530", VA = "0x28D530", Slot = "6")]
	protected override void Start()
	{
	}

	[Token(Token = "0x6001636")]
	[Address(RVA = "0x28D5CC", Offset = "0x28D5CC", VA = "0x28D5CC", Slot = "4")]
	public override void HandleEvent(GameObject in_gameObject)
	{
	}

	[Token(Token = "0x6001637")]
	[Address(RVA = "0x28D528", Offset = "0x28D528", VA = "0x28D528")]
	public void ClosePortal(GameObject in_gameObject)
	{
	}

	[Token(Token = "0x6001638")]
	[Address(RVA = "0x28D5E4", Offset = "0x28D5E4", VA = "0x28D5E4", Slot = "7")]
	protected override void OnDestroy()
	{
	}

	[Token(Token = "0x6001639")]
	[Address(RVA = "0x28D5D4", Offset = "0x28D5D4", VA = "0x28D5D4")]
	public void Open()
	{
	}

	[Token(Token = "0x600163A")]
	[Address(RVA = "0x28D5DC", Offset = "0x28D5DC", VA = "0x28D5DC")]
	public void Close()
	{
	}

	[Token(Token = "0x600163B")]
	[Address(RVA = "0x28D6D0", Offset = "0x28D6D0", VA = "0x28D6D0")]
	private void ActivatePortal(bool active)
	{
	}

	[Token(Token = "0x600163C")]
	[Address(RVA = "0x28D96C", Offset = "0x28D96C", VA = "0x28D96C")]
	public void FindOverlappingRooms(AkRoom.PriorityList[] roomList)
	{
	}

	[Token(Token = "0x600163D")]
	[Address(RVA = "0x28DCB4", Offset = "0x28DCB4", VA = "0x28DCB4")]
	private void FillRoomList(Vector3 center, Vector3 halfExtents, AkRoom.PriorityList list)
	{
	}

	[Token(Token = "0x600163E")]
	[Address(RVA = "0x28DF14", Offset = "0x28DF14", VA = "0x28DF14")]
	public void SetFrontRoom(AkRoom room)
	{
	}

	[Token(Token = "0x600163F")]
	[Address(RVA = "0x28E0E0", Offset = "0x28E0E0", VA = "0x28E0E0")]
	public void SetBackRoom(AkRoom room)
	{
	}

	[Token(Token = "0x6001640")]
	[Address(RVA = "0x28E2AC", Offset = "0x28E2AC", VA = "0x28E2AC")]
	public void UpdateOverlappingRooms()
	{
	}
}
[Token(Token = "0x20002C7")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x1FA934", Offset = "0x1FA934")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x1FA934", Offset = "0x1FA934")]
public class AkRoomPortalObstruction : AkObstructionOcclusion
{
	[Token(Token = "0x400111B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private AkRoomPortal m_portal;

	[Token(Token = "0x6001641")]
	[Address(RVA = "0x28E76C", Offset = "0x28E76C", VA = "0x28E76C")]
	public AkRoomPortalObstruction()
	{
	}

	[Token(Token = "0x6001642")]
	[Address(RVA = "0x28E770", Offset = "0x28E770", VA = "0x28E770")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001643")]
	[Address(RVA = "0x28E804", Offset = "0x28E804", VA = "0x28E804", Slot = "4")]
	protected override void UpdateObstructionOcclusionValuesForListeners()
	{
	}

	[Token(Token = "0x6001644")]
	[Address(RVA = "0x28E894", Offset = "0x28E894", VA = "0x28E894", Slot = "5")]
	protected override void SetObstructionOcclusion(KeyValuePair<AkAudioListener, ObstructionOcclusionValue> ObsOccPair)
	{
	}
}
[Serializable]
[Token(Token = "0x20002C8")]
public class AkRTPCPlayable : PlayableAsset, ITimelineClipAsset
{
	[Token(Token = "0x400111C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public bool overrideTrackObject;

	[Token(Token = "0x400111D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private TimelineClip owningClip;

	[Token(Token = "0x400111E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private RTPC RTPC;

	[Token(Token = "0x400111F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ExposedReference<GameObject> RTPCObject;

	[Token(Token = "0x4001120")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool setRTPCGlobally;

	[Token(Token = "0x4001121")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public AkRTPCPlayableBehaviour template;

	[Token(Token = "0x17000236")]
	public RTPC Parameter
	{
		[Token(Token = "0x6001646")]
		[Address(RVA = "0x28EAB4", Offset = "0x28EAB4", VA = "0x28EAB4")]
		get
		{
			return null;
		}
		[Token(Token = "0x6001647")]
		[Address(RVA = "0x28EABC", Offset = "0x28EABC", VA = "0x28EABC")]
		set
		{
		}
	}

	[Token(Token = "0x17000237")]
	public TimelineClip OwningClip
	{
		[Token(Token = "0x6001648")]
		[Address(RVA = "0x28EAC4", Offset = "0x28EAC4", VA = "0x28EAC4")]
		get
		{
			return null;
		}
		[Token(Token = "0x6001649")]
		[Address(RVA = "0x28EACC", Offset = "0x28EACC", VA = "0x28EACC")]
		set
		{
		}
	}

	[Token(Token = "0x17000238")]
	public ClipCaps clipCaps
	{
		[Token(Token = "0x600164A")]
		[Address(RVA = "0x28EAD4", Offset = "0x28EAD4", VA = "0x28EAD4", Slot = "9")]
		get
		{
			return default(ClipCaps);
		}
	}

	[Token(Token = "0x6001645")]
	[Address(RVA = "0x28EA30", Offset = "0x28EA30", VA = "0x28EA30")]
	public AkRTPCPlayable()
	{
	}

	[Token(Token = "0x600164B")]
	[Address(RVA = "0x28EADC", Offset = "0x28EADC", VA = "0x28EADC", Slot = "6")]
	public override Playable CreatePlayable(PlayableGraph graph, GameObject go)
	{
		return default(Playable);
	}

	[Token(Token = "0x600164C")]
	[Address(RVA = "0x28EC10", Offset = "0x28EC10", VA = "0x28EC10")]
	public void InitializeBehavior(PlayableGraph graph, ref AkRTPCPlayableBehaviour b, GameObject owner)
	{
	}
}
[Serializable]
[Token(Token = "0x20002C9")]
public class AkRTPCPlayableBehaviour : PlayableBehaviour
{
	[Token(Token = "0x4001122")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private bool m_OverrideTrackObject;

	[Token(Token = "0x4001123")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private RTPC m_Parameter;

	[Token(Token = "0x4001124")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private GameObject m_RTPCObject;

	[Token(Token = "0x4001125")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private bool m_SetRTPCGlobally;

	[Token(Token = "0x4001126")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float RTPCValue;

	[Token(Token = "0x17000239")]
	public bool setRTPCGlobally
	{
		[Token(Token = "0x600164E")]
		[Address(RVA = "0x28ED10", Offset = "0x28ED10", VA = "0x28ED10")]
		set
		{
		}
	}

	[Token(Token = "0x1700023A")]
	public bool overrideTrackObject
	{
		[Token(Token = "0x600164F")]
		[Address(RVA = "0x28ED08", Offset = "0x28ED08", VA = "0x28ED08")]
		set
		{
		}
	}

	[Token(Token = "0x1700023B")]
	public GameObject rtpcObject
	{
		[Token(Token = "0x6001651")]
		[Address(RVA = "0x28ED28", Offset = "0x28ED28", VA = "0x28ED28")]
		get
		{
			return null;
		}
		[Token(Token = "0x6001650")]
		[Address(RVA = "0x28ED18", Offset = "0x28ED18", VA = "0x28ED18")]
		set
		{
		}
	}

	[Token(Token = "0x1700023C")]
	public RTPC parameter
	{
		[Token(Token = "0x6001652")]
		[Address(RVA = "0x28ED20", Offset = "0x28ED20", VA = "0x28ED20")]
		set
		{
		}
	}

	[Token(Token = "0x600164D")]
	[Address(RVA = "0x28EAAC", Offset = "0x28EAAC", VA = "0x28EAAC")]
	public AkRTPCPlayableBehaviour()
	{
	}

	[Token(Token = "0x6001653")]
	[Address(RVA = "0x28ED30", Offset = "0x28ED30", VA = "0x28ED30", Slot = "8")]
	public override void ProcessFrame(Playable playable, FrameData info, object playerData)
	{
	}
}
[Token(Token = "0x20002CA")]
[AttributeAttribute(Name = "TrackColorAttribute", RVA = "0x1FA9D4", Offset = "0x1FA9D4")]
[AttributeAttribute(Name = "TrackClipTypeAttribute", RVA = "0x1FA9D4", Offset = "0x1FA9D4")]
[AttributeAttribute(Name = "TrackBindingTypeAttribute", RVA = "0x1FA9D4", Offset = "0x1FA9D4")]
public class AkRTPCTrack : TrackAsset
{
	[Token(Token = "0x4001127")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public RTPC Parameter;

	[Token(Token = "0x6001654")]
	[Address(RVA = "0x28EED4", Offset = "0x28EED4", VA = "0x28EED4")]
	public AkRTPCTrack()
	{
	}

	[Token(Token = "0x6001655")]
	[Address(RVA = "0x28EF58", Offset = "0x28EF58", VA = "0x28EF58", Slot = "15")]
	public override Playable CreateTrackMixer(PlayableGraph graph, GameObject go, int inputCount)
	{
		return default(Playable);
	}

	[Token(Token = "0x6001656")]
	[Address(RVA = "0x28F04C", Offset = "0x28F04C", VA = "0x28F04C")]
	public void setPlayableProperties()
	{
	}

	[Token(Token = "0x6001657")]
	[Address(RVA = "0x28F3E4", Offset = "0x28F3E4", VA = "0x28F3E4")]
	public void OnValidate()
	{
	}
}
[Token(Token = "0x20002CB")]
public class AkSoundEngineController
{
	[Token(Token = "0x4001128")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static AkSoundEngineController ms_Instance;

	[Token(Token = "0x1700023D")]
	public static AkSoundEngineController Instance
	{
		[Token(Token = "0x6001659")]
		[Address(RVA = "0x2B3B60", Offset = "0x2B3B60", VA = "0x2B3B60")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6001658")]
	[Address(RVA = "0x2B3B58", Offset = "0x2B3B58", VA = "0x2B3B58")]
	public AkSoundEngineController()
	{
	}

	[Token(Token = "0x600165A")]
	[Address(RVA = "0x2B3C00", Offset = "0x2B3C00", VA = "0x2B3C00", Slot = "1")]
	~AkSoundEngineController()
	{
	}

	[Token(Token = "0x600165B")]
	[Address(RVA = "0x2B3C7C", Offset = "0x2B3C7C", VA = "0x2B3C7C")]
	public static string GetDecodedBankFolder()
	{
		return null;
	}

	[Token(Token = "0x600165C")]
	[Address(RVA = "0x2B3CD8", Offset = "0x2B3CD8", VA = "0x2B3CD8")]
	public static string GetDecodedBankFullPath()
	{
		return null;
	}

	[Token(Token = "0x600165D")]
	[Address(RVA = "0x2B3DBC", Offset = "0x2B3DBC", VA = "0x2B3DBC")]
	public void LateUpdate()
	{
	}

	[Token(Token = "0x600165E")]
	[Address(RVA = "0x2B3EA4", Offset = "0x2B3EA4", VA = "0x2B3EA4")]
	public void Init(AkInitializer akInitializer)
	{
	}

	[Token(Token = "0x600165F")]
	[Address(RVA = "0x2B3FB4", Offset = "0x2B3FB4", VA = "0x2B3FB4")]
	public void OnDisable()
	{
	}

	[Token(Token = "0x6001660")]
	[Address(RVA = "0x2B3FB8", Offset = "0x2B3FB8", VA = "0x2B3FB8")]
	public void Terminate()
	{
	}

	[Token(Token = "0x6001661")]
	[Address(RVA = "0x2B4038", Offset = "0x2B4038", VA = "0x2B4038")]
	public void OnApplicationPause(bool pauseStatus)
	{
	}

	[Token(Token = "0x6001662")]
	[Address(RVA = "0x2B4154", Offset = "0x2B4154", VA = "0x2B4154")]
	public void OnApplicationFocus(bool focus)
	{
	}

	[Token(Token = "0x6001663")]
	[Address(RVA = "0x2B4040", Offset = "0x2B4040", VA = "0x2B4040")]
	private static void ActivateAudio(bool activate)
	{
	}
}
[Token(Token = "0x20002CC")]
public abstract class AkSpatialAudioBase : MonoBehaviour
{
	[Token(Token = "0x4001129")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private readonly AkRoom.PriorityList roomPriorityList;

	[Token(Token = "0x6001664")]
	[Address(RVA = "0xCD5AC4", Offset = "0xCD5AC4", VA = "0xCD5AC4")]
	protected AkSpatialAudioBase()
	{
	}

	[Token(Token = "0x6001665")]
	[Address(RVA = "0xCD5B40", Offset = "0xCD5B40", VA = "0xCD5B40")]
	protected void SetGameObjectInHighestPriorityRoom()
	{
	}

	[Token(Token = "0x6001666")]
	[Address(RVA = "0xCD5C10", Offset = "0xCD5C10", VA = "0xCD5C10")]
	public void EnteredRoom(AkRoom room)
	{
	}

	[Token(Token = "0x6001667")]
	[Address(RVA = "0xCD5C4C", Offset = "0xCD5C4C", VA = "0xCD5C4C")]
	public void ExitedRoom(AkRoom room)
	{
	}

	[Token(Token = "0x6001668")]
	[Address(RVA = "0xCD5C88", Offset = "0xCD5C88", VA = "0xCD5C88")]
	public void SetGameObjectInRoom()
	{
	}
}
[Token(Token = "0x20002CD")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x1FAAA8", Offset = "0x1FAAA8")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x1FAAA8", Offset = "0x1FAAA8")]
public class AkSpatialAudioEmitter : AkSpatialAudioBase
{
	[Token(Token = "0x400112A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x1FAB48", Offset = "0x1FAB48")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1FAB48", Offset = "0x1FAB48")]
	public AuxBus reflectAuxBus;

	[Token(Token = "0x400112B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1FABA8", Offset = "0x1FABA8")]
	public float reflectionMaxPathLength;

	[Token(Token = "0x400112C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x1FABDC", Offset = "0x1FABDC")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1FABDC", Offset = "0x1FABDC")]
	public float reflectionsAuxBusGain;

	[Token(Token = "0x400112D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x1FAC2C", Offset = "0x1FAC2C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1FAC2C", Offset = "0x1FAC2C")]
	public uint reflectionsOrder;

	[Token(Token = "0x400112E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x1FAC80", Offset = "0x1FAC80")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x1FAC80", Offset = "0x1FAC80")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1FAC80", Offset = "0x1FAC80")]
	public float roomReverbAuxBusGain;

	[Token(Token = "0x400112F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x1FACF8", Offset = "0x1FACF8")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1FACF8", Offset = "0x1FACF8")]
	public uint diffractionMaxEdges;

	[Token(Token = "0x4001130")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1FAD58", Offset = "0x1FAD58")]
	public uint diffractionMaxPaths;

	[Token(Token = "0x4001131")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1FAD8C", Offset = "0x1FAD8C")]
	public uint diffractionMaxPathLength;

	[Token(Token = "0x6001669")]
	[Address(RVA = "0xCD5E24", Offset = "0xCD5E24", VA = "0xCD5E24")]
	public AkSpatialAudioEmitter()
	{
	}

	[Token(Token = "0x600166A")]
	[Address(RVA = "0xCD5E44", Offset = "0xCD5E44", VA = "0xCD5E44")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600166B")]
	[Address(RVA = "0xCD60B4", Offset = "0xCD60B4", VA = "0xCD60B4")]
	private void OnDisable()
	{
	}
}
[Token(Token = "0x20002CE")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x1FADC0", Offset = "0x1FADC0")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x1FADC0", Offset = "0x1FADC0")]
[DisallowMultipleComponent]
public class AkSpatialAudioListener : AkSpatialAudioBase
{
	[Token(Token = "0x20002CF")]
	public class SpatialAudioListenerList
	{
		[Token(Token = "0x4001135")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private readonly List<AkSpatialAudioListener> listenerList;

		[Token(Token = "0x17000240")]
		public List<AkSpatialAudioListener> ListenerList
		{
			[Token(Token = "0x6001674")]
			[Address(RVA = "0xCD7178", Offset = "0xCD7178", VA = "0xCD7178")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001673")]
		[Address(RVA = "0xCD70EC", Offset = "0xCD70EC", VA = "0xCD70EC")]
		public SpatialAudioListenerList()
		{
		}

		[Token(Token = "0x6001675")]
		[Address(RVA = "0xCD6DB0", Offset = "0xCD6DB0", VA = "0xCD6DB0")]
		public bool Add(AkSpatialAudioListener listener)
		{
			return default(bool);
		}

		[Token(Token = "0x6001676")]
		[Address(RVA = "0xCD6F64", Offset = "0xCD6F64", VA = "0xCD6F64")]
		public bool Remove(AkSpatialAudioListener listener)
		{
			return default(bool);
		}

		[Token(Token = "0x6001677")]
		[Address(RVA = "0xCD7180", Offset = "0xCD7180", VA = "0xCD7180")]
		private void Refresh()
		{
		}
	}

	[Token(Token = "0x4001132")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static AkSpatialAudioListener s_SpatialAudioListener;

	[Token(Token = "0x4001133")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	private static readonly SpatialAudioListenerList spatialAudioListeners;

	[Token(Token = "0x4001134")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private AkAudioListener AkAudioListener;

	[Token(Token = "0x1700023E")]
	public static AkAudioListener TheSpatialAudioListener
	{
		[Token(Token = "0x600166D")]
		[Address(RVA = "0xCD6AE4", Offset = "0xCD6AE4", VA = "0xCD6AE4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700023F")]
	public static SpatialAudioListenerList SpatialAudioListeners
	{
		[Token(Token = "0x600166E")]
		[Address(RVA = "0xCD6C14", Offset = "0xCD6C14", VA = "0xCD6C14")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600166C")]
	[Address(RVA = "0xCD6AE0", Offset = "0xCD6AE0", VA = "0xCD6AE0")]
	public AkSpatialAudioListener()
	{
	}

	[Token(Token = "0x600166F")]
	[Address(RVA = "0xCD6CA0", Offset = "0xCD6CA0", VA = "0xCD6CA0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001670")]
	[Address(RVA = "0xCD6D08", Offset = "0xCD6D08", VA = "0xCD6D08")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6001671")]
	[Address(RVA = "0xCD6EBC", Offset = "0xCD6EBC", VA = "0xCD6EBC")]
	private void OnDisable()
	{
	}
}
[Token(Token = "0x20002D0")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x1FAE70", Offset = "0x1FAE70")]
public class AkState : AkUnityEventHandler
{
	[Token(Token = "0x4001136")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int groupID;

	[Token(Token = "0x4001137")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int valueID;

	[Token(Token = "0x6001678")]
	[Address(RVA = "0xCD75E0", Offset = "0xCD75E0", VA = "0xCD75E0")]
	public AkState()
	{
	}

	[Token(Token = "0x6001679")]
	[Address(RVA = "0xCD7718", Offset = "0xCD7718", VA = "0xCD7718", Slot = "4")]
	public override void HandleEvent(GameObject in_gameObject)
	{
	}
}
[Token(Token = "0x20002D1")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x1FAEA4", Offset = "0x1FAEA4")]
[DisallowMultipleComponent]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x1FAEA4", Offset = "0x1FAEA4")]
public class AkSurfaceReflector : MonoBehaviour
{
	[Token(Token = "0x4001138")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1FAF54", Offset = "0x1FAF54")]
	public AcousticTexture AcousticTexture;

	[Token(Token = "0x4001139")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x1FAF88", Offset = "0x1FAF88")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1FAF88", Offset = "0x1FAF88")]
	public bool EnableDiffraction;

	[Token(Token = "0x400113A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1FAFE8", Offset = "0x1FAFE8")]
	public bool EnableDiffractionOnBoundaryEdges;

	[Token(Token = "0x400113B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private MeshFilter MeshFilter;

	[Token(Token = "0x600167A")]
	[Address(RVA = "0xCD7BA0", Offset = "0xCD7BA0", VA = "0xCD7BA0")]
	public AkSurfaceReflector()
	{
	}

	[Token(Token = "0x600167B")]
	[Address(RVA = "0xCD7BA8", Offset = "0xCD7BA8", VA = "0xCD7BA8")]
	public static ulong GetAkGeometrySetID(MeshFilter meshFilter)
	{
		return default(ulong);
	}

	[Token(Token = "0x600167C")]
	[Address(RVA = "0xCD7BD4", Offset = "0xCD7BD4", VA = "0xCD7BD4")]
	public static void AddGeometrySet(AcousticTexture acousticTexture, MeshFilter meshFilter, bool enableDiffraction, bool enableDiffractionOnBoundaryEdges)
	{
	}

	[Token(Token = "0x600167D")]
	[Address(RVA = "0xCD9010", Offset = "0xCD9010", VA = "0xCD9010")]
	public static void RemoveGeometrySet(MeshFilter meshFilter)
	{
	}

	[Token(Token = "0x600167E")]
	[Address(RVA = "0xCD910C", Offset = "0xCD910C", VA = "0xCD910C")]
	private void Awake()
	{
	}

	[Token(Token = "0x600167F")]
	[Address(RVA = "0xCD9174", Offset = "0xCD9174", VA = "0xCD9174")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6001680")]
	[Address(RVA = "0xCD91B4", Offset = "0xCD91B4", VA = "0xCD91B4")]
	private void OnDisable()
	{
	}
}
[Token(Token = "0x20002D2")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x1FB01C", Offset = "0x1FB01C")]
public class AkSwitch : AkUnityEventHandler
{
	[Token(Token = "0x400113C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int groupID;

	[Token(Token = "0x400113D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int valueID;

	[Token(Token = "0x6001681")]
	[Address(RVA = "0xCD91BC", Offset = "0xCD91BC", VA = "0xCD91BC")]
	public AkSwitch()
	{
	}

	[Token(Token = "0x6001682")]
	[Address(RVA = "0xCD923C", Offset = "0xCD923C", VA = "0xCD923C", Slot = "4")]
	public override void HandleEvent(GameObject in_gameObject)
	{
	}
}
[Token(Token = "0x20002D3")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x1FB050", Offset = "0x1FB050")]
[DisallowMultipleComponent]
[ExecuteInEditMode]
public class AkTerminator : MonoBehaviour
{
	[Token(Token = "0x6001683")]
	[Address(RVA = "0xCD973C", Offset = "0xCD973C", VA = "0xCD973C")]
	public AkTerminator()
	{
	}
}
[Token(Token = "0x20002D4")]
public abstract class AkTriggerBase : MonoBehaviour
{
	[Token(Token = "0x20002D5")]
	public delegate void Trigger(GameObject in_gameObject);

	[Token(Token = "0x400113E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Trigger triggerDelegate;

	[Token(Token = "0x6001684")]
	[Address(RVA = "0xCDB3A4", Offset = "0xCDB3A4", VA = "0xCDB3A4")]
	protected AkTriggerBase()
	{
	}

	[Token(Token = "0x6001685")]
	[Address(RVA = "0xCDB3AC", Offset = "0xCDB3AC", VA = "0xCDB3AC")]
	public static Dictionary<uint, string> GetAllDerivedTypes()
	{
		return null;
	}
}
[Token(Token = "0x20002D6")]
public class AkTriggerCollisionEnter : AkTriggerBase
{
	[Token(Token = "0x400113F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public GameObject triggerObject;

	[Token(Token = "0x600168A")]
	[Address(RVA = "0xCDBD88", Offset = "0xCDBD88", VA = "0xCDBD88")]
	public AkTriggerCollisionEnter()
	{
	}

	[Token(Token = "0x600168B")]
	[Address(RVA = "0xCDBD90", Offset = "0xCDBD90", VA = "0xCDBD90")]
	private void OnCollisionEnter(Collision in_other)
	{
	}

	[Token(Token = "0x600168C")]
	[Address(RVA = "0xCDBEE0", Offset = "0xCDBEE0", VA = "0xCDBEE0")]
	private void OnTriggerEnter(Collider in_other)
	{
	}
}
[Token(Token = "0x20002D7")]
public class AkTriggerCollisionExit : AkTriggerBase
{
	[Token(Token = "0x4001140")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public GameObject triggerObject;

	[Token(Token = "0x600168D")]
	[Address(RVA = "0xCDC030", Offset = "0xCDC030", VA = "0xCDC030")]
	public AkTriggerCollisionExit()
	{
	}

	[Token(Token = "0x600168E")]
	[Address(RVA = "0xCDC038", Offset = "0xCDC038", VA = "0xCDC038")]
	private void OnCollisionExit(Collision in_other)
	{
	}
}
[Token(Token = "0x20002D8")]
public class AkTriggerDisable : AkTriggerBase
{
	[Token(Token = "0x600168F")]
	[Address(RVA = "0xCDC188", Offset = "0xCDC188", VA = "0xCDC188")]
	public AkTriggerDisable()
	{
	}

	[Token(Token = "0x6001690")]
	[Address(RVA = "0xCDC190", Offset = "0xCDC190", VA = "0xCDC190")]
	private void OnDisable()
	{
	}
}
[Token(Token = "0x20002D9")]
public class AkTriggerEnable : AkTriggerBase
{
	[Token(Token = "0x6001691")]
	[Address(RVA = "0xCDC1A8", Offset = "0xCDC1A8", VA = "0xCDC1A8")]
	public AkTriggerEnable()
	{
	}

	[Token(Token = "0x6001692")]
	[Address(RVA = "0xCDC1B0", Offset = "0xCDC1B0", VA = "0xCDC1B0")]
	private void OnEnable()
	{
	}
}
[Token(Token = "0x20002DA")]
public class AkTriggerEnter : AkTriggerBase
{
	[Token(Token = "0x4001141")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public GameObject triggerObject;

	[Token(Token = "0x6001693")]
	[Address(RVA = "0xCDC1C8", Offset = "0xCDC1C8", VA = "0xCDC1C8")]
	public AkTriggerEnter()
	{
	}

	[Token(Token = "0x6001694")]
	[Address(RVA = "0xCDC1D0", Offset = "0xCDC1D0", VA = "0xCDC1D0")]
	private void OnTriggerEnter(Collider in_other)
	{
	}
}
[Token(Token = "0x20002DB")]
public class AkTriggerExit : AkTriggerBase
{
	[Token(Token = "0x4001142")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public GameObject triggerObject;

	[Token(Token = "0x6001695")]
	[Address(RVA = "0xCDC320", Offset = "0xCDC320", VA = "0xCDC320")]
	public AkTriggerExit()
	{
	}

	[Token(Token = "0x6001696")]
	[Address(RVA = "0xCDC328", Offset = "0xCDC328", VA = "0xCDC328")]
	private void OnTriggerExit(Collider in_other)
	{
	}
}
[Token(Token = "0x20002DC")]
public class AkTriggerMouseDown : AkTriggerBase
{
	[Token(Token = "0x6001697")]
	[Address(RVA = "0xCDC478", Offset = "0xCDC478", VA = "0xCDC478")]
	public AkTriggerMouseDown()
	{
	}

	[Token(Token = "0x6001698")]
	[Address(RVA = "0xCDC480", Offset = "0xCDC480", VA = "0xCDC480")]
	private void OnMouseDown()
	{
	}
}
[Token(Token = "0x20002DD")]
public class AkTriggerMouseEnter : AkTriggerBase
{
	[Token(Token = "0x6001699")]
	[Address(RVA = "0xCDC498", Offset = "0xCDC498", VA = "0xCDC498")]
	public AkTriggerMouseEnter()
	{
	}

	[Token(Token = "0x600169A")]
	[Address(RVA = "0xCDC4A0", Offset = "0xCDC4A0", VA = "0xCDC4A0")]
	private void OnMouseEnter()
	{
	}
}
[Token(Token = "0x20002DE")]
public class AkTriggerMouseExit : AkTriggerBase
{
	[Token(Token = "0x600169B")]
	[Address(RVA = "0xCDC4B8", Offset = "0xCDC4B8", VA = "0xCDC4B8")]
	public AkTriggerMouseExit()
	{
	}

	[Token(Token = "0x600169C")]
	[Address(RVA = "0xCDC4C0", Offset = "0xCDC4C0", VA = "0xCDC4C0")]
	private void OnMouseExit()
	{
	}
}
[Token(Token = "0x20002DF")]
public class AkTriggerMouseUp : AkTriggerBase
{
	[Token(Token = "0x600169D")]
	[Address(RVA = "0xCDC4D8", Offset = "0xCDC4D8", VA = "0xCDC4D8")]
	public AkTriggerMouseUp()
	{
	}

	[Token(Token = "0x600169E")]
	[Address(RVA = "0xCDC4E0", Offset = "0xCDC4E0", VA = "0xCDC4E0")]
	private void OnMouseUp()
	{
	}
}
[Token(Token = "0x20002E0")]
public abstract class AkUnityEventHandler : MonoBehaviour
{
	[Token(Token = "0x4001143")]
	public const int AWAKE_TRIGGER_ID = 1151176110;

	[Token(Token = "0x4001144")]
	public const int START_TRIGGER_ID = 1281810935;

	[Token(Token = "0x4001145")]
	public const int DESTROY_TRIGGER_ID = -358577003;

	[Token(Token = "0x4001146")]
	public const int MAX_NB_TRIGGERS = 32;

	[Token(Token = "0x4001147")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Dictionary<uint, string> triggerTypes;

	[Token(Token = "0x4001148")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private bool didDestroy;

	[Token(Token = "0x4001149")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public List<int> triggerList;

	[Token(Token = "0x400114A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public bool useOtherObject;

	[Token(Token = "0x600169F")]
	[Address(RVA = "0xCD7660", Offset = "0xCD7660", VA = "0xCD7660")]
	protected AkUnityEventHandler()
	{
	}

	[Token(Token = "0x60016A0")]
	public abstract void HandleEvent(GameObject in_gameObject);

	[Token(Token = "0x60016A1")]
	[Address(RVA = "0xCDC4F8", Offset = "0xCDC4F8", VA = "0xCDC4F8", Slot = "5")]
	protected virtual void Awake()
	{
	}

	[Token(Token = "0x60016A2")]
	[Address(RVA = "0xCDCC8C", Offset = "0xCDCC8C", VA = "0xCDCC8C", Slot = "6")]
	protected virtual void Start()
	{
	}

	[Token(Token = "0x60016A3")]
	[Address(RVA = "0xCDCD28", Offset = "0xCDCD28", VA = "0xCDCD28", Slot = "7")]
	protected virtual void OnDestroy()
	{
	}

	[Token(Token = "0x60016A4")]
	[Address(RVA = "0xCDCD38", Offset = "0xCDCD38", VA = "0xCDCD38")]
	public void DoDestroy()
	{
	}

	[Token(Token = "0x60016A5")]
	[Address(RVA = "0xCDC5E0", Offset = "0xCDC5E0", VA = "0xCDC5E0")]
	protected void RegisterTriggers(List<int> in_triggerList, AkTriggerBase.Trigger in_delegate)
	{
	}

	[Token(Token = "0x60016A6")]
	[Address(RVA = "0xCDCE28", Offset = "0xCDCE28", VA = "0xCDCE28")]
	protected void UnregisterTriggers(List<int> in_triggerList, AkTriggerBase.Trigger in_delegate)
	{
	}
}
