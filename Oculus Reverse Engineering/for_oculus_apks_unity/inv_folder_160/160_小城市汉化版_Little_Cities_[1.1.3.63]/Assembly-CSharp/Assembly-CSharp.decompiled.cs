using System;
using System.Collections;
using System.Collections.Generic;
using System.Diagnostics;
using System.Globalization;
using System.IO;
using System.Reflection;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using System.Text;
using System.Threading;
using System.Xml.Serialization;
using Il2CppDummyDll;
using Oculus.Platform;
using Oculus.Platform.Models;
using Oculus.Spatializer.Propagation;
using TMPro;
using Unity.Collections;
using Unity.Mathematics;
using UnityEngine;
using UnityEngine.AI;
using UnityEngine.Analytics;
using UnityEngine.Audio;
using UnityEngine.EventSystems;
using UnityEngine.Events;
using UnityEngine.Networking;
using UnityEngine.Rendering;
using UnityEngine.UI;
using UnityEngine.Video;
using UnityEngine.XR;

[assembly: AssemblyVersion("0.0.0.0")]
[Token(Token = "0x2000002")]
public class BirdFlock : MonoBehaviour
{
	[Token(Token = "0x200025A")]
	[Flags]
	public enum BirdType
	{
		[Token(Token = "0x40010FF")]
		Seagull = 1,
		[Token(Token = "0x4001100")]
		Vulture = 2
	}

	[Token(Token = "0x200025B")]
	public enum State
	{
		[Token(Token = "0x4001102")]
		Flying,
		[Token(Token = "0x4001103")]
		Landing,
		[Token(Token = "0x4001104")]
		Landed,
		[Token(Token = "0x4001105")]
		Destroying
	}

	[Token(Token = "0x200025C")]
	public class Bird
	{
		[Token(Token = "0x4001106")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public BirdFlock flock;

		[Token(Token = "0x4001107")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject flyingObject;

		[Token(Token = "0x4001108")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject sittingObject;

		[Token(Token = "0x4001109")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Vector3 flightHeading;

		[Token(Token = "0x400110A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public Vector3 landingPosition;

		[Token(Token = "0x400110B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public State state;

		[Token(Token = "0x400110C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public BirdManager.PerchTransform perchTransform;

		[Token(Token = "0x60013A5")]
		[Address(RVA = "0x10A8224", Offset = "0x10A8224", VA = "0x10A8224")]
		public void OnPerchRemoved()
		{
		}

		[Token(Token = "0x60013A6")]
		[Address(RVA = "0x10A58FC", Offset = "0x10A58FC", VA = "0x10A58FC")]
		public Bird()
		{
		}
	}

	[Token(Token = "0x4000001")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject flyingBirdPrefab;

	[Token(Token = "0x4000002")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject sittingBirdPrefab;

	[Token(Token = "0x4000003")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int flockSize;

	[Token(Token = "0x4000004")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float flightSpeed;

	[Token(Token = "0x4000005")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float flightAltitude;

	[Token(Token = "0x4000006")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float sittingTime;

	[Token(Token = "0x4000007")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float maxLandingTime;

	[Token(Token = "0x4000008")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public Vector3 flyingToSittingPositionOffset;

	[Token(Token = "0x4000009")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float flyingToSittingRotationOffset;

	[Token(Token = "0x400000A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public AudioSource audioSource;

	[Token(Token = "0x400000B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public BirdType birdType;

	[Token(Token = "0x400000C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public bool enableDebugDraw;

	[Token(Token = "0x400000D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private List<Bird> birds;

	[Token(Token = "0x400000E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private BirdManager birdManager;

	[Token(Token = "0x400000F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private City city;

	[Token(Token = "0x4000010")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private State flockState;

	[Token(Token = "0x4000011")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private float timeInFlockState;

	[Token(Token = "0x6000001")]
	[Address(RVA = "0x10A5618", Offset = "0x10A5618", VA = "0x10A5618")]
	private void Start()
	{
	}

	[Token(Token = "0x6000002")]
	[Address(RVA = "0x10A5904", Offset = "0x10A5904", VA = "0x10A5904")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000003")]
	[Address(RVA = "0x10A59A0", Offset = "0x10A59A0", VA = "0x10A59A0")]
	private Vector3 CalculateAvoidance(Bird bird, List<BirdFlockAvoidancePoint> avoidancePoints)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000004")]
	[Address(RVA = "0x10A5C30", Offset = "0x10A5C30", VA = "0x10A5C30")]
	private void TakeOff(Bird bird)
	{
	}

	[Token(Token = "0x6000005")]
	[Address(RVA = "0x10A5DE4", Offset = "0x10A5DE4", VA = "0x10A5DE4")]
	private void PickLandingPoint(Bird bird)
	{
	}

	[Token(Token = "0x6000006")]
	[Address(RVA = "0x10A6680", Offset = "0x10A6680", VA = "0x10A6680")]
	private bool DoesOverlapAvoidancePoint(Vector3 position)
	{
		return default(bool);
	}

	[Token(Token = "0x6000007")]
	[Address(RVA = "0x10A6938", Offset = "0x10A6938", VA = "0x10A6938")]
	private void Update()
	{
	}

	[Token(Token = "0x6000008")]
	[Address(RVA = "0x10A8198", Offset = "0x10A8198", VA = "0x10A8198")]
	public BirdFlock()
	{
	}
}
[Token(Token = "0x2000003")]
public class BirdFlockAvoidancePoint : MonoBehaviour
{
	[Token(Token = "0x4000012")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float radius;

	[Token(Token = "0x4000013")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float strength;

	[Token(Token = "0x4000014")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private City city;

	[Token(Token = "0x6000009")]
	[Address(RVA = "0x10A8240", Offset = "0x10A8240", VA = "0x10A8240")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600000A")]
	[Address(RVA = "0x10A832C", Offset = "0x10A832C", VA = "0x10A832C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600000B")]
	[Address(RVA = "0x10A8440", Offset = "0x10A8440", VA = "0x10A8440")]
	public BirdFlockAvoidancePoint()
	{
	}
}
[Token(Token = "0x2000004")]
public class BirdPerchPoint : MonoBehaviour
{
	[Token(Token = "0x4000015")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public BirdFlock.BirdType birdType;

	[Token(Token = "0x600000C")]
	[Address(RVA = "0x10A9524", Offset = "0x10A9524", VA = "0x10A9524")]
	private void Awake()
	{
	}

	[Token(Token = "0x600000D")]
	[Address(RVA = "0x10A95D4", Offset = "0x10A95D4", VA = "0x10A95D4")]
	public BirdPerchPoint()
	{
	}
}
[Token(Token = "0x2000005")]
public class Dolphin : MonoBehaviour
{
	[Token(Token = "0x4000016")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float swimRotationSpeed;

	[Token(Token = "0x4000017")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float moveSpeed;

	[Token(Token = "0x4000018")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform target;

	[Token(Token = "0x4000019")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform splashPoint;

	[Token(Token = "0x400001A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ParticleSystem splashEffect;

	[Token(Token = "0x400001B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Quaternion direction;

	[Token(Token = "0x400001C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float rotationAngle;

	[Token(Token = "0x400001D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private float underWaterTimer;

	[Token(Token = "0x400001E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private MeshRenderer meshRenderer;

	[Token(Token = "0x400001F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Vector3 targetRelativePosition;

	[Token(Token = "0x4000020")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private City city;

	[Token(Token = "0x17000001")]
	public bool isVisible
	{
		[Token(Token = "0x600000E")]
		[Address(RVA = "0x1030898", Offset = "0x1030898", VA = "0x1030898")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x600000F")]
	[Address(RVA = "0x10308B4", Offset = "0x10308B4", VA = "0x10308B4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000010")]
	[Address(RVA = "0x10309C0", Offset = "0x10309C0", VA = "0x10309C0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000011")]
	[Address(RVA = "0x1030F38", Offset = "0x1030F38", VA = "0x1030F38")]
	public Dolphin()
	{
	}
}
[Token(Token = "0x2000006")]
public class Whale : MonoBehaviour
{
	[Token(Token = "0x4000021")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ParticleSystem sprayEffect;

	[Token(Token = "0x4000022")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ParticleSystem splashEffect;

	[Token(Token = "0x4000023")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ParticleSystem surfaceParticlesEffect;

	[Token(Token = "0x4000024")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform splashCenter;

	[Token(Token = "0x4000025")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public AudioClip[] surfaceSounds;

	[Token(Token = "0x4000026")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public AudioClip[] diveSounds;

	[Token(Token = "0x4000027")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public AudioClip[] spraySounds;

	[Token(Token = "0x4000028")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public AudioClip[] songSounds;

	[Token(Token = "0x4000029")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Animator animator;

	[Token(Token = "0x400002A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private AudioSource audioSource;

	[Token(Token = "0x400002B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private float timeBeforeDive;

	[Token(Token = "0x400002C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private float timeBeforeShow;

	[Token(Token = "0x400002D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6A875C", Offset = "0x6A875C")]
	private bool <isShowing>k__BackingField;

	[Token(Token = "0x17000002")]
	public bool isShowing
	{
		[Token(Token = "0x6000012")]
		[Address(RVA = "0x101ADFC", Offset = "0x101ADFC", VA = "0x101ADFC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6AD858", Offset = "0x6AD858")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000013")]
		[Address(RVA = "0x101AE04", Offset = "0x101AE04", VA = "0x101AE04")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6AD868", Offset = "0x6AD868")]
		private set
		{
		}
	}

	[Token(Token = "0x17000003")]
	public bool waitingToShow
	{
		[Token(Token = "0x6000014")]
		[Address(RVA = "0x101AE10", Offset = "0x101AE10", VA = "0x101AE10")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000015")]
	[Address(RVA = "0x101AE20", Offset = "0x101AE20", VA = "0x101AE20")]
	private void Start()
	{
	}

	[Token(Token = "0x6000016")]
	[Address(RVA = "0x101AE94", Offset = "0x101AE94", VA = "0x101AE94")]
	public void Hide()
	{
	}

	[Token(Token = "0x6000017")]
	[Address(RVA = "0x101AEA0", Offset = "0x101AEA0", VA = "0x101AEA0")]
	public void PlaySprayEffect()
	{
	}

	[Token(Token = "0x6000018")]
	[Address(RVA = "0x101AEF4", Offset = "0x101AEF4", VA = "0x101AEF4")]
	public void Sing()
	{
	}

	[Token(Token = "0x6000019")]
	[Address(RVA = "0x101AF38", Offset = "0x101AF38", VA = "0x101AF38")]
	public void Splash()
	{
	}

	[Token(Token = "0x600001A")]
	[Address(RVA = "0x101B00C", Offset = "0x101B00C", VA = "0x101B00C")]
	public void Show(float delay, float duration)
	{
	}

	[Token(Token = "0x600001B")]
	[Address(RVA = "0x101B018", Offset = "0x101B018", VA = "0x101B018")]
	public void Simulate(float deltaTime)
	{
	}

	[Token(Token = "0x600001C")]
	[Address(RVA = "0x101B168", Offset = "0x101B168", VA = "0x101B168")]
	public Whale()
	{
	}
}
[Token(Token = "0x2000007")]
public class ButtonAudio : MonoBehaviour, IPointerEnterHandler, IEventSystemHandler, IPointerDownHandler, IPointerUpHandler
{
	[Token(Token = "0x400002E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Button button;

	[Token(Token = "0x17000004")]
	private Player player
	{
		[Token(Token = "0x600001D")]
		[Address(RVA = "0x10DA7FC", Offset = "0x10DA7FC", VA = "0x10DA7FC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600001E")]
	[Address(RVA = "0x10DA84C", Offset = "0x10DA84C", VA = "0x10DA84C")]
	private void Awake()
	{
	}

	[Token(Token = "0x600001F")]
	[Address(RVA = "0x10DA8A4", Offset = "0x10DA8A4", VA = "0x10DA8A4", Slot = "4")]
	public void OnPointerEnter(PointerEventData eventData)
	{
	}

	[Token(Token = "0x6000020")]
	[Address(RVA = "0x10DA9B8", Offset = "0x10DA9B8", VA = "0x10DA9B8", Slot = "5")]
	public void OnPointerDown(PointerEventData eventData)
	{
	}

	[Token(Token = "0x6000021")]
	[Address(RVA = "0x10DAACC", Offset = "0x10DAACC", VA = "0x10DAACC", Slot = "6")]
	public void OnPointerUp(PointerEventData eventData)
	{
	}

	[Token(Token = "0x6000022")]
	[Address(RVA = "0x10DAB80", Offset = "0x10DAB80", VA = "0x10DAB80")]
	public ButtonAudio()
	{
	}
}
[Token(Token = "0x2000008")]
public class MusicList : ScriptableObjectSingleton<MusicList>
{
	[Token(Token = "0x400002F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioClip mainTheme;

	[Token(Token = "0x4000030")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AudioClip[] mainTracks;

	[Token(Token = "0x4000031")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AudioClip[] tropicalTracks;

	[Token(Token = "0x4000032")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AudioClip[] desertTracks;

	[Token(Token = "0x4000033")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public AudioClip[] volcanoTracks;

	[Token(Token = "0x4000034")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public AudioClip volcanoEruptTrack;

	[Token(Token = "0x6000023")]
	[Address(RVA = "0x1008720", Offset = "0x1008720", VA = "0x1008720")]
	public MusicList()
	{
	}
}
[Token(Token = "0x2000009")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x6A70D0", Offset = "0x6A70D0")]
public class MusicManager : SingletonBehaviour<MusicManager>
{
	[Token(Token = "0x4000035")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float desiredMusicVolume;

	[Token(Token = "0x4000036")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float defaultMusicVolume;

	[Token(Token = "0x4000037")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float musicTransitionTime;

	[Token(Token = "0x4000038")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private AudioSource musicSource;

	[Token(Token = "0x4000039")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private AudioClip queuedClip;

	[Token(Token = "0x400003A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private AudioClip[] trackSelection;

	[Token(Token = "0x17000005")]
	public float musicVolume
	{
		[Token(Token = "0x6000024")]
		[Address(RVA = "0x1008790", Offset = "0x1008790", VA = "0x1008790")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000025")]
		[Address(RVA = "0x1008798", Offset = "0x1008798", VA = "0x1008798")]
		set
		{
		}
	}

	[Token(Token = "0x17000006")]
	private Player player
	{
		[Token(Token = "0x6000026")]
		[Address(RVA = "0x10087BC", Offset = "0x10087BC", VA = "0x10087BC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000027")]
	[Address(RVA = "0x100880C", Offset = "0x100880C", VA = "0x100880C", Slot = "4")]
	public override void Awake()
	{
	}

	[Token(Token = "0x6000028")]
	[Address(RVA = "0x1008878", Offset = "0x1008878", VA = "0x1008878")]
	private void Start()
	{
	}

	[Token(Token = "0x6000029")]
	[Address(RVA = "0x10088A0", Offset = "0x10088A0", VA = "0x10088A0")]
	private void Update()
	{
	}

	[Token(Token = "0x600002A")]
	[Address(RVA = "0x1008D34", Offset = "0x1008D34", VA = "0x1008D34")]
	private void PlayTrack(AudioClip track)
	{
	}

	[Token(Token = "0x600002B")]
	[Address(RVA = "0x1008F2C", Offset = "0x1008F2C", VA = "0x1008F2C")]
	public void PlayFirstTrack()
	{
	}

	[Token(Token = "0x600002C")]
	[Address(RVA = "0x1008F4C", Offset = "0x1008F4C", VA = "0x1008F4C")]
	public void SetTrackSelection(AudioClip[] newTrackSelection)
	{
	}

	[Token(Token = "0x600002D")]
	[Address(RVA = "0x1008BF8", Offset = "0x1008BF8", VA = "0x1008BF8")]
	public void PickRandomTrack()
	{
	}

	[Token(Token = "0x600002E")]
	[Address(RVA = "0x1008F54", Offset = "0x1008F54", VA = "0x1008F54")]
	public void PlayMainTheme()
	{
	}

	[Token(Token = "0x600002F")]
	[Address(RVA = "0x1009048", Offset = "0x1009048", VA = "0x1009048")]
	public void PlayVolcanoEruption()
	{
	}

	[Token(Token = "0x6000030")]
	[Address(RVA = "0x100913C", Offset = "0x100913C", VA = "0x100913C")]
	public MusicManager()
	{
	}
}
[Token(Token = "0x200000A")]
public class SFX : ScriptableObjectSingleton<SFX>
{
	[Serializable]
	[Token(Token = "0x200025D")]
	public class UI
	{
		[Token(Token = "0x400110D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public AudioClip buttonClick;

		[Token(Token = "0x400110E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AudioClip buttonHover;

		[Token(Token = "0x400110F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AudioClip buttonRelease;

		[Token(Token = "0x4001110")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public AudioClip zoomClick;

		[Token(Token = "0x4001111")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public AudioClip menuOpen;

		[Token(Token = "0x4001112")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public AudioClip menuClose;

		[Token(Token = "0x4001113")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public AudioClip wheelMenuOpen;

		[Token(Token = "0x4001114")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public AudioClip wheelMenuClose;

		[Token(Token = "0x4001115")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public AudioClip selectTab;

		[Token(Token = "0x4001116")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public AudioClip lockedClick;

		[Token(Token = "0x4001117")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public AudioClip[] rotateView;

		[Token(Token = "0x4001118")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public AudioClip bubblePop;

		[Token(Token = "0x4001119")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public AudioClip watchMenuOpen;

		[Token(Token = "0x400111A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public AudioClip watchMenuClose;

		[Token(Token = "0x400111B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public AudioClip watchMenuChange;

		[Token(Token = "0x400111C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public AudioClip levelUp;

		[Token(Token = "0x400111D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public AudioClip regionUnlockLevelUp;

		[Token(Token = "0x400111E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public AudioClip notification;

		[Token(Token = "0x400111F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public AudioClip zoomIn;

		[Token(Token = "0x4001120")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public AudioClip zoomOut;

		[Token(Token = "0x4001121")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public AudioClip[] zoomTransition;

		[Token(Token = "0x4001122")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public AudioClip transitionToCity;

		[Token(Token = "0x4001123")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public AudioClip transitionToWorldMap;

		[Token(Token = "0x4001124")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public AudioClip toggleOn;

		[Token(Token = "0x4001125")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		public AudioClip toggleOff;

		[Token(Token = "0x4001126")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		public AudioClip cycleLeft;

		[Token(Token = "0x4001127")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		public AudioClip cycleRight;

		[Token(Token = "0x4001128")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		public AudioClip undo;

		[Token(Token = "0x4001129")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		public AudioClip happySmall;

		[Token(Token = "0x400112A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		public AudioClip happyMedium;

		[Token(Token = "0x400112B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		public AudioClip happyLarge;

		[Token(Token = "0x400112C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		public AudioClip sadSmall;

		[Token(Token = "0x400112D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		public AudioClip sadMedium;

		[Token(Token = "0x400112E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		public AudioClip sadLarge;

		[Token(Token = "0x400112F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		public AudioClip completeTutorialStep;

		[Token(Token = "0x4001130")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		public AudioClip completeCity;

		[Token(Token = "0x60013A7")]
		[Address(RVA = "0x1042628", Offset = "0x1042628", VA = "0x1042628")]
		public UI()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x200025E")]
	public class Construction
	{
		[Token(Token = "0x4001131")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public AudioClip cannotBuild;

		[Token(Token = "0x4001132")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AudioClip placeBuilding;

		[Token(Token = "0x4001133")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AudioClip upgradeBuilding;

		[Token(Token = "0x4001134")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public AudioClip startRoad;

		[Token(Token = "0x4001135")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public AudioClip[] dragRoad;

		[Token(Token = "0x4001136")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public AudioClip finishRoad;

		[Token(Token = "0x4001137")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public AudioClip startZone;

		[Token(Token = "0x4001138")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public AudioClip[] zoneRegionDrag;

		[Token(Token = "0x4001139")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public AudioClip finishZone;

		[Token(Token = "0x400113A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public AudioClip startBulldoze;

		[Token(Token = "0x400113B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public AudioClip[] bulldozeRegionDrag;

		[Token(Token = "0x400113C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public AudioClip finishBulldoze;

		[Token(Token = "0x400113D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public AudioClip[] demolishBoulder;

		[Token(Token = "0x400113E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public AudioClip[] zoneBuildingPopUp;

		[Token(Token = "0x400113F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public AudioClip[] buildingCollapse;

		[Token(Token = "0x4001140")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public AudioClip[] placeTrees;

		[Token(Token = "0x4001141")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public AudioClip[] placeBridge;

		[Token(Token = "0x60013A8")]
		[Address(RVA = "0x1042618", Offset = "0x1042618", VA = "0x1042618")]
		public Construction()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x200025F")]
	public class TimeShift
	{
		[Token(Token = "0x4001142")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public AudioClip playToPause;

		[Token(Token = "0x4001143")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AudioClip pauseToPlay;

		[Token(Token = "0x4001144")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AudioClip fastToNormal;

		[Token(Token = "0x4001145")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public AudioClip normalToFast;

		[Token(Token = "0x60013A9")]
		[Address(RVA = "0x1042620", Offset = "0x1042620", VA = "0x1042620")]
		public TimeShift()
		{
		}
	}

	[Token(Token = "0x400003B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public UI uiValues;

	[Token(Token = "0x400003C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Construction constructionValues;

	[Token(Token = "0x400003D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public TimeShift timeShiftValues;

	[Token(Token = "0x17000007")]
	public static UI ui
	{
		[Token(Token = "0x6000031")]
		[Address(RVA = "0x1041C68", Offset = "0x1041C68", VA = "0x1041C68")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000008")]
	public static Construction construction
	{
		[Token(Token = "0x6000032")]
		[Address(RVA = "0x1041CE0", Offset = "0x1041CE0", VA = "0x1041CE0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000009")]
	public static TimeShift timeShift
	{
		[Token(Token = "0x6000033")]
		[Address(RVA = "0x1041D58", Offset = "0x1041D58", VA = "0x1041D58")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700000A")]
	public static float volume
	{
		[Token(Token = "0x6000034")]
		[Address(RVA = "0x1041DD0", Offset = "0x1041DD0", VA = "0x1041DD0")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000035")]
		[Address(RVA = "0x1041E20", Offset = "0x1041E20", VA = "0x1041E20")]
		set
		{
		}
	}

	[Token(Token = "0x6000036")]
	[Address(RVA = "0x1041E7C", Offset = "0x1041E7C", VA = "0x1041E7C")]
	public static void Play(AudioClip clip, float sfxVolume = 1f)
	{
	}

	[Token(Token = "0x6000037")]
	[Address(RVA = "0x1041F84", Offset = "0x1041F84", VA = "0x1041F84")]
	public static void Play(AudioClip[] clipCollection, float sfxVolume = 1f)
	{
	}

	[Token(Token = "0x6000038")]
	[Address(RVA = "0x1041FF4", Offset = "0x1041FF4", VA = "0x1041FF4")]
	public static void PlaySpatialised(AudioClip[] clipCollection, Vector3 worldPosition, [Optional] AudioSource sourceParameters)
	{
	}

	[Token(Token = "0x6000039")]
	[Address(RVA = "0x1042088", Offset = "0x1042088", VA = "0x1042088")]
	public static void PlaySpatialised(AudioClip clip, Vector3 worldPosition, [Optional] AudioSource sourceParameters)
	{
	}

	[Token(Token = "0x600003A")]
	private void LoadAudioData<T>(T group)
	{
	}

	[Token(Token = "0x600003B")]
	[Address(RVA = "0x1042524", Offset = "0x1042524", VA = "0x1042524")]
	public void LoadAudioData()
	{
	}

	[Token(Token = "0x600003C")]
	[Address(RVA = "0x10425A8", Offset = "0x10425A8", VA = "0x10425A8")]
	public SFX()
	{
	}
}
[Token(Token = "0x200000B")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x6A7134", Offset = "0x6A7134")]
public class SFXManager : SingletonBehaviour<SFXManager>
{
	[Token(Token = "0x400003E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6A876C", Offset = "0x6A876C")]
	private AudioSource <audioSource>k__BackingField;

	[Token(Token = "0x1700000B")]
	public AudioSource audioSource
	{
		[Token(Token = "0x600003D")]
		[Address(RVA = "0x1042630", Offset = "0x1042630", VA = "0x1042630")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6AD878", Offset = "0x6AD878")]
		get
		{
			return null;
		}
		[Token(Token = "0x600003E")]
		[Address(RVA = "0x1042638", Offset = "0x1042638", VA = "0x1042638")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6AD888", Offset = "0x6AD888")]
		private set
		{
		}
	}

	[Token(Token = "0x600003F")]
	[Address(RVA = "0x1042640", Offset = "0x1042640", VA = "0x1042640", Slot = "4")]
	public override void Awake()
	{
	}

	[Token(Token = "0x6000040")]
	[Address(RVA = "0x10426AC", Offset = "0x10426AC", VA = "0x10426AC")]
	public SFXManager()
	{
	}
}
[Token(Token = "0x200000C")]
public class SFXSpatialisedOneShot : MonoBehaviour
{
	[Token(Token = "0x400003F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private AudioSource source;

	[Token(Token = "0x4000040")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool didStartPlay;

	[Token(Token = "0x4000041")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static AudioClip lastClip;

	[Token(Token = "0x4000042")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static float lastClipPlayTime;

	[Token(Token = "0x4000043")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private static float lastClipPitch;

	[Token(Token = "0x6000041")]
	[Address(RVA = "0x10426FC", Offset = "0x10426FC", VA = "0x10426FC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000042")]
	[Address(RVA = "0x10422A8", Offset = "0x10422A8", VA = "0x10422A8")]
	public void Play(AudioClip clip, [Optional] AudioSource sourceParameters)
	{
	}

	[Token(Token = "0x6000043")]
	[Address(RVA = "0x10427A0", Offset = "0x10427A0", VA = "0x10427A0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000044")]
	[Address(RVA = "0x1042848", Offset = "0x1042848", VA = "0x1042848")]
	public SFXSpatialisedOneShot()
	{
	}
}
[Token(Token = "0x200000D")]
public class AirportInfo : MonoBehaviour
{
	[Token(Token = "0x4000044")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AnimatorOverrideController animatorOverrideController;

	[Token(Token = "0x4000045")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform landingTransform;

	[Token(Token = "0x4000046")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float landingShadowPlaneHeight;

	[Token(Token = "0x6000046")]
	[Address(RVA = "0x10A2DBC", Offset = "0x10A2DBC", VA = "0x10A2DBC")]
	public AirportInfo()
	{
	}
}
[Token(Token = "0x200000E")]
public class BuildingDatabase : ScriptableObjectSingleton<BuildingDatabase>
{
	[Token(Token = "0x2000260")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6A7B94", Offset = "0x6A7B94")]
	private sealed class <>c__DisplayClass2_0
	{
		[Token(Token = "0x4001146")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public BuildingInfo info;

		[Token(Token = "0x60013AA")]
		[Address(RVA = "0x10B016C", Offset = "0x10B016C", VA = "0x10B016C")]
		public <>c__DisplayClass2_0()
		{
		}

		[Token(Token = "0x60013AB")]
		[Address(RVA = "0x10B0354", Offset = "0x10B0354", VA = "0x10B0354")]
		internal bool <GetIndex>b__0(BuildingInfo x)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x4000047")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public BuildingInfo[] allBuildings;

	[Token(Token = "0x6000047")]
	[Address(RVA = "0x10AFFB0", Offset = "0x10AFFB0", VA = "0x10AFFB0")]
	public BuildingInfo GetFromIndex(int index)
	{
		return null;
	}

	[Token(Token = "0x6000048")]
	[Address(RVA = "0x10AFFFC", Offset = "0x10AFFFC", VA = "0x10AFFFC")]
	public int GetIndex(BuildingInfo info)
	{
		return default(int);
	}

	[Token(Token = "0x6000049")]
	[Address(RVA = "0x10B0174", Offset = "0x10B0174", VA = "0x10B0174")]
	public BuildingInfo GetUpgradedBuilding(BuildingInfo info)
	{
		return null;
	}

	[Token(Token = "0x600004A")]
	[Address(RVA = "0x10B02E4", Offset = "0x10B02E4", VA = "0x10B02E4")]
	public BuildingDatabase()
	{
	}
}
[Token(Token = "0x200000F")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x6A7198", Offset = "0x6A7198")]
public class BuildingEffectCalculator : MonoBehaviour
{
	[Token(Token = "0x2000261")]
	private struct EffectedBuilding
	{
		[Token(Token = "0x4001147")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public BuildingInstance building;

		[Token(Token = "0x4001148")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public uint iconsEnabledMask;

		[Token(Token = "0x4001149")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public int iconCount;

		[Token(Token = "0x400114A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int zoneX;

		[Token(Token = "0x400114B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int zoneY;
	}

	[Token(Token = "0x2000262")]
	private struct ParticleAnimationData
	{
		[Token(Token = "0x400114C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float animateStartTime;

		[Token(Token = "0x400114D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public Vector3 startPosition;

		[Token(Token = "0x400114E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float bobEndTime;

		[Token(Token = "0x400114F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float fadeEndTime;

		[Token(Token = "0x4001150")]
		private const float fadeOutDuration = 1f;

		[Token(Token = "0x4001151")]
		private const float bobDuration = 0.75f;

		[Token(Token = "0x60013AC")]
		[Address(RVA = "0x72226C", Offset = "0x72226C", VA = "0x72226C")]
		public void GenerateFade(float startTime, Vector3 position)
		{
		}

		[Token(Token = "0x60013AD")]
		[Address(RVA = "0x722284", Offset = "0x722284", VA = "0x722284")]
		public void GenerateBob(float startTime, Vector3 position)
		{
		}
	}

	[Token(Token = "0x2000263")]
	public struct Icons
	{
		[Token(Token = "0x4001152")]
		public const int positiveHappiness = 0;

		[Token(Token = "0x4001153")]
		public const int noPower = 1;

		[Token(Token = "0x4001154")]
		public const int upgrade = 2;

		[Token(Token = "0x4001155")]
		public const int positivePower = 3;

		[Token(Token = "0x4001156")]
		public const int positiveWater = 4;

		[Token(Token = "0x4001157")]
		public const int positiveNetwork = 5;

		[Token(Token = "0x4001158")]
		public const int positivePolice = 6;

		[Token(Token = "0x4001159")]
		public const int positiveFire = 7;

		[Token(Token = "0x400115A")]
		public const int positiveSchool = 14;

		[Token(Token = "0x400115B")]
		public const int positiveHospital = 15;

		[Token(Token = "0x400115C")]
		public const int increasedSmelly = 9;

		[Token(Token = "0x400115D")]
		public const int positiveResidential = 11;

		[Token(Token = "0x400115E")]
		public const int positiveCommercial = 12;

		[Token(Token = "0x400115F")]
		public const int positiveIndustrial = 13;

		[Token(Token = "0x4001160")]
		public const int negativeHappiness = 16;

		[Token(Token = "0x4001161")]
		public const int downgrade = 18;

		[Token(Token = "0x4001162")]
		public const int negativePower = 19;

		[Token(Token = "0x4001163")]
		public const int negativeWater = 20;

		[Token(Token = "0x4001164")]
		public const int negativeNetwork = 21;

		[Token(Token = "0x4001165")]
		public const int negativePolice = 22;

		[Token(Token = "0x4001166")]
		public const int negativeFire = 23;

		[Token(Token = "0x4001167")]
		public const int negativeSchool = 30;

		[Token(Token = "0x4001168")]
		public const int negativeHospital = 31;

		[Token(Token = "0x4001169")]
		public const int negativeResidential = 27;

		[Token(Token = "0x400116A")]
		public const int negativeCommercial = 28;

		[Token(Token = "0x400116B")]
		public const int negativeIndustrial = 29;

		[Token(Token = "0x400116C")]
		public const int bulldoze = 8;

		[Token(Token = "0x400116D")]
		public const int positiveSandstorm = 10;

		[Token(Token = "0x400116E")]
		public const int negativeSandstorm = 26;

		[Token(Token = "0x400116F")]
		public const int negativeIconShift = 16;
	}

	[Token(Token = "0x2000264")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6A7BA4", Offset = "0x6A7BA4")]
	private sealed class <>c__DisplayClass54_0
	{
		[Token(Token = "0x4001170")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public BuildingInfo newBuilding;

		[Token(Token = "0x4001171")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public BuildingEffectCalculator <>4__this;

		[Token(Token = "0x60013AE")]
		[Address(RVA = "0x10B1950", Offset = "0x10B1950", VA = "0x10B1950")]
		public <>c__DisplayClass54_0()
		{
		}

		[Token(Token = "0x60013AF")]
		[Address(RVA = "0x10B3158", Offset = "0x10B3158", VA = "0x10B3158")]
		internal void <AddBuilding>b__0(BuildingInstance building)
		{
		}
	}

	[Token(Token = "0x2000265")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6A7BB4", Offset = "0x6A7BB4")]
	private sealed class <>c__DisplayClass56_0
	{
		[Token(Token = "0x4001172")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public BuildingInstance buildingToDemolish;

		[Token(Token = "0x4001173")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public BuildingEffectCalculator <>4__this;

		[Token(Token = "0x60013B0")]
		[Address(RVA = "0x10B1CA4", Offset = "0x10B1CA4", VA = "0x10B1CA4")]
		public <>c__DisplayClass56_0()
		{
		}

		[Token(Token = "0x60013B1")]
		[Address(RVA = "0x10B3530", Offset = "0x10B3530", VA = "0x10B3530")]
		internal void <RemoveBuilding>b__0(BuildingInstance building)
		{
		}
	}

	[Token(Token = "0x4000048")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float iconSize;

	[Token(Token = "0x4000049")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float iconSpacing;

	[Token(Token = "0x400004A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private ParticleSystem particleSystem;

	[Token(Token = "0x400004B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private NativeArray<ParticleSystem.Particle> particles;

	[Token(Token = "0x400004C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private ParticleAnimationData[] particleAnimationData;

	[Token(Token = "0x400004D")]
	private const int maxParticles = 1000;

	[Token(Token = "0x400004E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private int numParticles;

	[Token(Token = "0x400004F")]
	private const int maxEffectedBuildings = 500;

	[Token(Token = "0x4000050")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private EffectedBuilding[] effectedBuildings;

	[Token(Token = "0x4000051")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private int numEffectedBuildings;

	[Token(Token = "0x4000052")]
	private const int numIconTypes = 32;

	[Token(Token = "0x4000053")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public float animationDuration;

	[Token(Token = "0x4000054")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float totalAnimationDuration;

	[Token(Token = "0x4000055")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private float animationTime;

	[Token(Token = "0x4000056")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6A877C", Offset = "0x6A877C")]
	private bool <isAnimating>k__BackingField;

	[Token(Token = "0x4000057")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Player player;

	[Token(Token = "0x4000058")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6A878C", Offset = "0x6A878C")]
	private int <totalHappinessScore>k__BackingField;

	[Token(Token = "0x4000059")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6A879C", Offset = "0x6A879C")]
	private int <totalCommercialIncomeScore>k__BackingField;

	[Token(Token = "0x400005A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6A87AC", Offset = "0x6A87AC")]
	private int <totalIndustrialIncomeScore>k__BackingField;

	[Token(Token = "0x400005B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6A87BC", Offset = "0x6A87BC")]
	private int <totalBuildingEffect>k__BackingField;

	[Token(Token = "0x400005C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6A87CC", Offset = "0x6A87CC")]
	private int[] <iconTypeCounters>k__BackingField;

	[Token(Token = "0x400005D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public float bobEffectScale;

	[Token(Token = "0x400005E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	public float fadeRiseDistance;

	[Token(Token = "0x400005F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public float maxAnimationDuration;

	[Token(Token = "0x1700000C")]
	public bool isAnimating
	{
		[Token(Token = "0x600004B")]
		[Address(RVA = "0x10B03D0", Offset = "0x10B03D0", VA = "0x10B03D0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6AD898", Offset = "0x6AD898")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600004C")]
		[Address(RVA = "0x10B03D8", Offset = "0x10B03D8", VA = "0x10B03D8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6AD8A8", Offset = "0x6AD8A8")]
		private set
		{
		}
	}

	[Token(Token = "0x1700000D")]
	public int totalHappinessScore
	{
		[Token(Token = "0x600004D")]
		[Address(RVA = "0x10B03E4", Offset = "0x10B03E4", VA = "0x10B03E4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6AD8B8", Offset = "0x6AD8B8")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x600004E")]
		[Address(RVA = "0x10B03EC", Offset = "0x10B03EC", VA = "0x10B03EC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6AD8C8", Offset = "0x6AD8C8")]
		set
		{
		}
	}

	[Token(Token = "0x1700000E")]
	public int totalCommercialIncomeScore
	{
		[Token(Token = "0x600004F")]
		[Address(RVA = "0x10B03F4", Offset = "0x10B03F4", VA = "0x10B03F4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6AD8D8", Offset = "0x6AD8D8")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000050")]
		[Address(RVA = "0x10B03FC", Offset = "0x10B03FC", VA = "0x10B03FC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6AD8E8", Offset = "0x6AD8E8")]
		set
		{
		}
	}

	[Token(Token = "0x1700000F")]
	public int totalIndustrialIncomeScore
	{
		[Token(Token = "0x6000051")]
		[Address(RVA = "0x10B0404", Offset = "0x10B0404", VA = "0x10B0404")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6AD8F8", Offset = "0x6AD8F8")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000052")]
		[Address(RVA = "0x10B040C", Offset = "0x10B040C", VA = "0x10B040C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6AD908", Offset = "0x6AD908")]
		set
		{
		}
	}

	[Token(Token = "0x17000010")]
	public int totalBuildingEffect
	{
		[Token(Token = "0x6000053")]
		[Address(RVA = "0x10B0414", Offset = "0x10B0414", VA = "0x10B0414")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6AD918", Offset = "0x6AD918")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000054")]
		[Address(RVA = "0x10B041C", Offset = "0x10B041C", VA = "0x10B041C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6AD928", Offset = "0x6AD928")]
		set
		{
		}
	}

	[Token(Token = "0x17000011")]
	public int[] iconTypeCounters
	{
		[Token(Token = "0x6000055")]
		[Address(RVA = "0x10B0424", Offset = "0x10B0424", VA = "0x10B0424")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6AD938", Offset = "0x6AD938")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000056")]
		[Address(RVA = "0x10B042C", Offset = "0x10B042C", VA = "0x10B042C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6AD948", Offset = "0x6AD948")]
		private set
		{
		}
	}

	[Token(Token = "0x6000057")]
	[Address(RVA = "0x10B0434", Offset = "0x10B0434", VA = "0x10B0434")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000058")]
	[Address(RVA = "0x10B057C", Offset = "0x10B057C", VA = "0x10B057C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000059")]
	[Address(RVA = "0x10B05F4", Offset = "0x10B05F4", VA = "0x10B05F4")]
	public int GetMaxIconCountForZoneRange(int x, int y, int width, int height)
	{
		return default(int);
	}

	[Token(Token = "0x600005A")]
	[Address(RVA = "0x10B069C", Offset = "0x10B069C", VA = "0x10B069C")]
	public static void VisitBuildings(City city, Vector3 center, int radius, Action<BuildingInstance> visitor)
	{
	}

	[Token(Token = "0x600005B")]
	[Address(RVA = "0x10B0880", Offset = "0x10B0880", VA = "0x10B0880")]
	public int GetIconCountForBuilding(BuildingInstance building)
	{
		return default(int);
	}

	[Token(Token = "0x600005C")]
	[Address(RVA = "0x10B08F0", Offset = "0x10B08F0", VA = "0x10B08F0")]
	public void Clear()
	{
	}

	[Token(Token = "0x600005D")]
	[Address(RVA = "0x10B0944", Offset = "0x10B0944", VA = "0x10B0944")]
	public void HideIfNotAnimating()
	{
	}

	[Token(Token = "0x600005E")]
	[Address(RVA = "0x10B0990", Offset = "0x10B0990", VA = "0x10B0990")]
	private void AddParticle(Vector3 position, int iconIndex)
	{
	}

	[Token(Token = "0x600005F")]
	[Address(RVA = "0x10B0AB8", Offset = "0x10B0AB8", VA = "0x10B0AB8")]
	private bool AddIcon(int zoneX, int zoneY, int index)
	{
		return default(bool);
	}

	[Token(Token = "0x6000060")]
	[Address(RVA = "0x10B0C54", Offset = "0x10B0C54", VA = "0x10B0C54")]
	private bool AddIcon(BuildingInstance building, int index)
	{
		return default(bool);
	}

	[Token(Token = "0x6000061")]
	[Address(RVA = "0x10B0D90", Offset = "0x10B0D90", VA = "0x10B0D90")]
	private Vector3 GetEffectCenter(BuildingInfo building, int x, int y, int rotation)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000062")]
	[Address(RVA = "0x10B0FE4", Offset = "0x10B0FE4", VA = "0x10B0FE4")]
	public void AddZone(ZoneManager.ZoneType zoneType, int x, int y)
	{
	}

	[Token(Token = "0x6000063")]
	[Address(RVA = "0x10B1688", Offset = "0x10B1688", VA = "0x10B1688")]
	public void AddBuilding(City city, BuildingInfo newBuilding, int x, int y, int rotation)
	{
	}

	[Token(Token = "0x6000064")]
	[Address(RVA = "0x10B1958", Offset = "0x10B1958", VA = "0x10B1958")]
	public void RemoveBuildings(City city, List<BuildingInstance> buildings)
	{
	}

	[Token(Token = "0x6000065")]
	[Address(RVA = "0x10B19F8", Offset = "0x10B19F8", VA = "0x10B19F8")]
	public void RemoveBuilding(City city, BuildingInstance buildingToDemolish)
	{
	}

	[Token(Token = "0x6000066")]
	[Address(RVA = "0x10B1CAC", Offset = "0x10B1CAC", VA = "0x10B1CAC")]
	public void ShowNetworkTowersWithoutPower(City city)
	{
	}

	[Token(Token = "0x6000067")]
	[Address(RVA = "0x10B1D80", Offset = "0x10B1D80", VA = "0x10B1D80")]
	private void ApplyUtilityAndServiceChanges(City city)
	{
	}

	[Token(Token = "0x6000068")]
	[Address(RVA = "0x10B22C0", Offset = "0x10B22C0", VA = "0x10B22C0")]
	public void Apply(PlayerInterface playerInterface)
	{
	}

	[Token(Token = "0x6000069")]
	[Address(RVA = "0x10B2688", Offset = "0x10B2688", VA = "0x10B2688")]
	private void PlaySounds()
	{
	}

	[Token(Token = "0x600006A")]
	[Address(RVA = "0x10B2750", Offset = "0x10B2750", VA = "0x10B2750")]
	public void Animate()
	{
	}

	[Token(Token = "0x600006B")]
	[Address(RVA = "0x10B2B8C", Offset = "0x10B2B8C", VA = "0x10B2B8C")]
	public void AnimateFadeOut()
	{
	}

	[Token(Token = "0x600006C")]
	[Address(RVA = "0x10B2D18", Offset = "0x10B2D18", VA = "0x10B2D18")]
	private void Update()
	{
	}

	[Token(Token = "0x600006D")]
	[Address(RVA = "0x10B30BC", Offset = "0x10B30BC", VA = "0x10B30BC")]
	public BuildingEffectCalculator()
	{
	}
}
[Token(Token = "0x2000010")]
public class BuildingFire : MonoBehaviour
{
	[Token(Token = "0x600006E")]
	[Address(RVA = "0x10CCCFC", Offset = "0x10CCCFC", VA = "0x10CCCFC")]
	public BuildingFire()
	{
	}
}
[Token(Token = "0x2000011")]
public class BuildingHelicopterPad : MonoBehaviour
{
	[Token(Token = "0x4000060")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Helicopter helicopterPrefab;

	[Token(Token = "0x600006F")]
	[Address(RVA = "0x10CCD04", Offset = "0x10CCD04", VA = "0x10CCD04")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000070")]
	[Address(RVA = "0x10CCDB4", Offset = "0x10CCDB4", VA = "0x10CCDB4")]
	public BuildingHelicopterPad()
	{
	}
}
[Token(Token = "0x2000012")]
public enum PortType
{
	[Token(Token = "0x4000062")]
	None,
	[Token(Token = "0x4000063")]
	Airport,
	[Token(Token = "0x4000064")]
	Seaport
}
[Token(Token = "0x2000013")]
public class BuildingInfo : MonoBehaviour
{
	[Token(Token = "0x2000266")]
	public enum UtilityUsage
	{
		[Token(Token = "0x4001175")]
		None,
		[Token(Token = "0x4001176")]
		Low,
		[Token(Token = "0x4001177")]
		Medium,
		[Token(Token = "0x4001178")]
		High
	}

	[Token(Token = "0x2000267")]
	[Flags]
	public enum SpecialBehaviour
	{
		[Token(Token = "0x400117A")]
		None = 0,
		[Token(Token = "0x400117B")]
		IncreaseWaterSupply = 1,
		[Token(Token = "0x400117C")]
		BoostNearbyResidentialHappiness = 2,
		[Token(Token = "0x400117D")]
		BoostNearbyCommercialIncome = 4,
		[Token(Token = "0x400117E")]
		BoostNearbyIndustrialIncome = 8,
		[Token(Token = "0x400117F")]
		BoostSchoolRadius = 0x10,
		[Token(Token = "0x4001180")]
		BoostOverallHappiness = 0x40,
		[Token(Token = "0x4001181")]
		EyeSore = 0x80,
		[Token(Token = "0x4001182")]
		Smelly = 0x100,
		[Token(Token = "0x4001183")]
		BoostZoneDensity = 0x200,
		[Token(Token = "0x4001184")]
		Noisy = 0x400
	}

	[Token(Token = "0x4000065")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string displayName;

	[Token(Token = "0x4000066")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Sprite icon;

	[Token(Token = "0x4000067")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int width;

	[Token(Token = "0x4000068")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public int height;

	[Token(Token = "0x4000069")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float elevation;

	[Token(Token = "0x400006A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float foundation;

	[Token(Token = "0x400006B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public int requiredClearance;

	[Token(Token = "0x400006C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public int cost;

	[Token(Token = "0x400006D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public int weeklyCost;

	[Token(Token = "0x400006E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public UtilityUsage powerUsageType;

	[Token(Token = "0x400006F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public int powerSupply;

	[Token(Token = "0x4000070")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public bool powerOutputBasedOnWind;

	[Token(Token = "0x4000071")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public UtilityUsage waterUsageType;

	[Token(Token = "0x4000072")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public int waterSupply;

	[Token(Token = "0x4000073")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public int groundWaterUsageRadius;

	[Token(Token = "0x4000074")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public int networkSupplyRange;

	[Token(Token = "0x4000075")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public CityInfo.Theme theme;

	[Token(Token = "0x4000076")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private int citizenCapacityCached;

	[Token(Token = "0x4000077")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public bool requiresRoadAccess;

	[Token(Token = "0x4000078")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x69")]
	public ZoneManager.ZoneType zoneType;

	[Token(Token = "0x4000079")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public ZoneDensity zoneDensity;

	[Token(Token = "0x400007A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public BudgetManager.ExpenseCategory expenseCategory;

	[Token(Token = "0x400007B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public CityServiceManager.ServiceType serviceType;

	[Token(Token = "0x400007C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public int serviceStrength;

	[Token(Token = "0x400007D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public bool canDemolish;

	[Token(Token = "0x400007E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7D")]
	public bool useMeshBatcher;

	[Token(Token = "0x400007F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public VehicleCollection carSpawnType;

	[Token(Token = "0x4000080")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public float carSpawnChance;

	[Token(Token = "0x4000081")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	public GroundMap.GroundTile buildRestriction;

	[Token(Token = "0x4000082")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public PortType portType;

	[Token(Token = "0x4000083")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	public bool makeHoleInTerrain;

	[Token(Token = "0x4000084")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x95")]
	public bool isConstructionSite;

	[Token(Token = "0x4000085")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public BuildingInfo constructionSiteBuildingInfo;

	[Token(Token = "0x4000086")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public bool isUnique;

	[Token(Token = "0x4000087")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public BuildingInfo isUpgradeOfBuildingType;

	[Token(Token = "0x4000088")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public SpecialBehaviour specialBehaviour;

	[Token(Token = "0x4000089")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	public int specialBehaviourInfluenceRadius;

	[Token(Token = "0x17000012")]
	public int citizenCapacity
	{
		[Token(Token = "0x6000071")]
		[Address(RVA = "0x10CD9C8", Offset = "0x10CD9C8", VA = "0x10CD9C8")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000013")]
	public int powerUsage
	{
		[Token(Token = "0x6000072")]
		[Address(RVA = "0x10CDA40", Offset = "0x10CDA40", VA = "0x10CDA40")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000014")]
	public int waterUsage
	{
		[Token(Token = "0x6000073")]
		[Address(RVA = "0x10CDAB4", Offset = "0x10CDAB4", VA = "0x10CDAB4")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000015")]
	public int maximumPotentialIncome
	{
		[Token(Token = "0x6000075")]
		[Address(RVA = "0x10CDB28", Offset = "0x10CDB28", VA = "0x10CDB28")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000016")]
	public bool requiresGameObjectPlacement
	{
		[Token(Token = "0x6000076")]
		[Address(RVA = "0x10CDB6C", Offset = "0x10CDB6C", VA = "0x10CDB6C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000017")]
	public bool requiresNetwork
	{
		[Token(Token = "0x600007A")]
		[Address(RVA = "0x10CE048", Offset = "0x10CE048", VA = "0x10CE048")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000018")]
	public bool isZonedBuilding
	{
		[Token(Token = "0x600007B")]
		[Address(RVA = "0x10CDFB8", Offset = "0x10CDFB8", VA = "0x10CDFB8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000074")]
	[Address(RVA = "0x10CD9FC", Offset = "0x10CD9FC", VA = "0x10CD9FC")]
	private int CalculateCitizenCapacity()
	{
		return default(int);
	}

	[Token(Token = "0x6000077")]
	[Address(RVA = "0x10CDEB8", Offset = "0x10CDEB8", VA = "0x10CDEB8")]
	public bool IsUpgradeOfBuilding(BuildingInfo other)
	{
		return default(bool);
	}

	[Token(Token = "0x6000078")]
	[Address(RVA = "0x10CDF98", Offset = "0x10CDF98", VA = "0x10CDF98")]
	public bool RequiresService(CityServiceManager.ServiceType service)
	{
		return default(bool);
	}

	[Token(Token = "0x6000079")]
	[Address(RVA = "0x10CDFC8", Offset = "0x10CDFC8", VA = "0x10CDFC8")]
	public void GetRoadAccess(int x, int y, int rotation, out int roadX, out int roadY)
	{
	}

	[Token(Token = "0x600007C")]
	[Address(RVA = "0x10CE058", Offset = "0x10CE058", VA = "0x10CE058")]
	public bool HasSpecialBehaviour(SpecialBehaviour mask)
	{
		return default(bool);
	}

	[Token(Token = "0x600007D")]
	[Address(RVA = "0x10CE068", Offset = "0x10CE068", VA = "0x10CE068")]
	public BuildingInfo()
	{
	}
}
[Token(Token = "0x2000014")]
public interface IBuildingBehaviourExtension
{
	[Token(Token = "0x600007E")]
	void OnPlaceBuilding(BuildingInstance building, bool fromSaveData);

	[Token(Token = "0x600007F")]
	void OnDemolishBuilding(BuildingInstance building);

	[Token(Token = "0x6000080")]
	void Simulate(float deltaTime);
}
[Token(Token = "0x2000015")]
public class BuildingInstance
{
	[Token(Token = "0x2000268")]
	public enum State
	{
		[Token(Token = "0x4001186")]
		Building,
		[Token(Token = "0x4001187")]
		Built,
		[Token(Token = "0x4001188")]
		Burning,
		[Token(Token = "0x4001189")]
		Collapsing
	}

	[Token(Token = "0x400008A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public BuildingManager manager;

	[Token(Token = "0x400008B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public BuildingInfo info;

	[Token(Token = "0x400008C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int x;

	[Token(Token = "0x400008D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int y;

	[Token(Token = "0x400008E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int rotation;

	[Token(Token = "0x400008F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public MeshBatcherV2.InstanceId meshInstanceId;

	[Token(Token = "0x4000090")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public MeshBatcherV2.InstanceId shadowProxyMeshInstanceId;

	[Token(Token = "0x4000091")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject gameObject;

	[Token(Token = "0x4000092")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public IBuildingBehaviourExtension behaviourExtension;

	[Token(Token = "0x4000093")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public List<CitizenManager.CitizenId> citizens;

	[Token(Token = "0x4000094")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public CarManager.CarId carId;

	[Token(Token = "0x4000095")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public BadgeGroup badges;

	[Token(Token = "0x4000096")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public double buildTime;

	[Token(Token = "0x4000097")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public double lastPoweredTime;

	[Token(Token = "0x4000098")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public double lastWateredTime;

	[Token(Token = "0x4000099")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public double lastOccupiedTime;

	[Token(Token = "0x400009A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public double lastOnFireTime;

	[Token(Token = "0x400009B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public bool isAbandoned;

	[Token(Token = "0x400009C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	public State state;

	[Token(Token = "0x400009D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public double timeEnteredState;

	[Token(Token = "0x400009E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public List<GameObject> fireEffects;

	[Token(Token = "0x400009F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public BuildingInfo buildingInfoToConstruct;

	[Token(Token = "0x40000A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public double constructionStartTime;

	[Token(Token = "0x40000A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public Helicopter helicopter;

	[Token(Token = "0x40000A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public bool hasHelicopterPad;

	[Token(Token = "0x40000A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	public Vector3 helicopterPadPosition;

	[Token(Token = "0x40000A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public Quaternion helicopterPadRotation;

	[Token(Token = "0x40000A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public float happinessScore;

	[Token(Token = "0x17000019")]
	public City city
	{
		[Token(Token = "0x6000081")]
		[Address(RVA = "0x10CE110", Offset = "0x10CE110", VA = "0x10CE110")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700001A")]
	public bool hasEmploymentSpaceAvailable
	{
		[Token(Token = "0x6000085")]
		[Address(RVA = "0x10CE2A0", Offset = "0x10CE2A0", VA = "0x10CE2A0")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700001B")]
	public bool hasResidenceSpaceAvailable
	{
		[Token(Token = "0x6000086")]
		[Address(RVA = "0x10CE32C", Offset = "0x10CE32C", VA = "0x10CE32C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700001C")]
	public int effectiveWidth
	{
		[Token(Token = "0x6000087")]
		[Address(RVA = "0x10CD158", Offset = "0x10CD158", VA = "0x10CD158")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x1700001D")]
	public int effectiveHeight
	{
		[Token(Token = "0x6000088")]
		[Address(RVA = "0x10CD188", Offset = "0x10CD188", VA = "0x10CD188")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x1700001E")]
	public int numEmployedCitizens
	{
		[Token(Token = "0x6000089")]
		[Address(RVA = "0x10CE3B8", Offset = "0x10CE3B8", VA = "0x10CE3B8")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x1700001F")]
	public bool hasPower
	{
		[Token(Token = "0x600008A")]
		[Address(RVA = "0x10CE48C", Offset = "0x10CE48C", VA = "0x10CE48C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000020")]
	public bool hasPowerInPreview
	{
		[Token(Token = "0x600008B")]
		[Address(RVA = "0x10CE4EC", Offset = "0x10CE4EC", VA = "0x10CE4EC")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000021")]
	public bool hasWater
	{
		[Token(Token = "0x600008C")]
		[Address(RVA = "0x10CE554", Offset = "0x10CE554", VA = "0x10CE554")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000022")]
	public bool isInSandStorm
	{
		[Token(Token = "0x600008D")]
		[Address(RVA = "0x10CE5B4", Offset = "0x10CE5B4", VA = "0x10CE5B4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000023")]
	public bool isInSandStormInPreview
	{
		[Token(Token = "0x600008E")]
		[Address(RVA = "0x10CE620", Offset = "0x10CE620", VA = "0x10CE620")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000024")]
	public bool hasNetwork
	{
		[Token(Token = "0x600008F")]
		[Address(RVA = "0x10CE68C", Offset = "0x10CE68C", VA = "0x10CE68C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000025")]
	public float timeWithoutPower
	{
		[Token(Token = "0x6000090")]
		[Address(RVA = "0x10CE6F0", Offset = "0x10CE6F0", VA = "0x10CE6F0")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000026")]
	public float timeWithoutWater
	{
		[Token(Token = "0x6000091")]
		[Address(RVA = "0x10CE748", Offset = "0x10CE748", VA = "0x10CE748")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000027")]
	public float timeWithoutOccupants
	{
		[Token(Token = "0x6000092")]
		[Address(RVA = "0x10CE7A0", Offset = "0x10CE7A0", VA = "0x10CE7A0")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000028")]
	public float timeSinceBuilt
	{
		[Token(Token = "0x6000093")]
		[Address(RVA = "0x10CE828", Offset = "0x10CE828", VA = "0x10CE828")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000029")]
	public float timeSinceConstructionStarted
	{
		[Token(Token = "0x6000094")]
		[Address(RVA = "0x10CE874", Offset = "0x10CE874", VA = "0x10CE874")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x1700002A")]
	public float timeSinceLastOnFire
	{
		[Token(Token = "0x6000095")]
		[Address(RVA = "0x10CE8C0", Offset = "0x10CE8C0", VA = "0x10CE8C0")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x1700002B")]
	public bool isOnFire
	{
		[Token(Token = "0x6000099")]
		[Address(RVA = "0x10CEC50", Offset = "0x10CEC50", VA = "0x10CEC50")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700002C")]
	public bool canDemolish
	{
		[Token(Token = "0x600009A")]
		[Address(RVA = "0x10CECA0", Offset = "0x10CECA0", VA = "0x10CECA0")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700002D")]
	public int pollutionGeneration
	{
		[Token(Token = "0x600009B")]
		[Address(RVA = "0x10CECD0", Offset = "0x10CECD0", VA = "0x10CECD0")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x1700002E")]
	public bool isZonedBuilding
	{
		[Token(Token = "0x600009C")]
		[Address(RVA = "0x10CECF4", Offset = "0x10CECF4", VA = "0x10CECF4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700002F")]
	public bool canSpawnCar
	{
		[Token(Token = "0x600009D")]
		[Address(RVA = "0x10CEDA8", Offset = "0x10CEDA8", VA = "0x10CEDA8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000082")]
	[Address(RVA = "0x10CE12C", Offset = "0x10CE12C", VA = "0x10CE12C")]
	public void SetState(State newState)
	{
	}

	[Token(Token = "0x6000083")]
	[Address(RVA = "0x10CE174", Offset = "0x10CE174", VA = "0x10CE174")]
	public BuildingInstance(BuildingManager manager)
	{
	}

	[Token(Token = "0x6000084")]
	[Address(RVA = "0x10CE284", Offset = "0x10CE284", VA = "0x10CE284")]
	public void OnDemolish()
	{
	}

	[Token(Token = "0x6000096")]
	[Address(RVA = "0x10CE90C", Offset = "0x10CE90C", VA = "0x10CE90C")]
	public void GetRoadAccess(out int roadX, out int roadY)
	{
	}

	[Token(Token = "0x6000097")]
	[Address(RVA = "0x10CE938", Offset = "0x10CE938", VA = "0x10CE938")]
	public bool IsInFrontOfBuilding(int roadX, int roadY)
	{
		return default(bool);
	}

	[Token(Token = "0x6000098")]
	[Address(RVA = "0x10CEA40", Offset = "0x10CEA40", VA = "0x10CEA40")]
	public int CalculateIncome()
	{
		return default(int);
	}

	[Token(Token = "0x600009E")]
	[Address(RVA = "0x10CEEFC", Offset = "0x10CEEFC", VA = "0x10CEEFC")]
	public bool MakeDelivery()
	{
		return default(bool);
	}

	[Token(Token = "0x600009F")]
	[Address(RVA = "0x10CF1E0", Offset = "0x10CF1E0", VA = "0x10CF1E0")]
	public Bounds CalculateWorldBounds()
	{
		return default(Bounds);
	}

	[Token(Token = "0x60000A0")]
	[Address(RVA = "0x10CF34C", Offset = "0x10CF34C", VA = "0x10CF34C")]
	public void GetMeshTransform(out Vector3 meshPosition, out Quaternion meshRotation)
	{
	}

	[Token(Token = "0x60000A1")]
	[Address(RVA = "0x10CF4FC", Offset = "0x10CF4FC", VA = "0x10CF4FC")]
	public bool IsAffectedBySpecialBehaviour(BuildingInfo.SpecialBehaviour behaviour)
	{
		return default(bool);
	}

	[Token(Token = "0x60000A2")]
	[Address(RVA = "0x10CEBDC", Offset = "0x10CEBDC", VA = "0x10CEBDC")]
	public int GetCountAffectedBySpecialBehaviour(BuildingInfo.SpecialBehaviour behaviour)
	{
		return default(int);
	}

	[Token(Token = "0x60000A3")]
	[Address(RVA = "0x10CF570", Offset = "0x10CF570", VA = "0x10CF570")]
	public Vector3 GetSpecialEffectRadiusCenter()
	{
		return default(Vector3);
	}
}
[Token(Token = "0x2000016")]
public class BuildingParkingSpace : MonoBehaviour
{
	[Token(Token = "0x40000A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool reservedForOwner;

	[Token(Token = "0x60000A4")]
	[Address(RVA = "0x10D618C", Offset = "0x10D618C", VA = "0x10D618C")]
	private void Awake()
	{
	}

	[Token(Token = "0x60000A5")]
	[Address(RVA = "0x10D623C", Offset = "0x10D623C", VA = "0x10D623C")]
	public int CalculateSpaceIndex()
	{
		return default(int);
	}

	[Token(Token = "0x60000A6")]
	[Address(RVA = "0x10D6350", Offset = "0x10D6350", VA = "0x10D6350")]
	public BuildingParkingSpace()
	{
	}
}
[Token(Token = "0x2000017")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x6A71FC", Offset = "0x6A71FC")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x6A71FC", Offset = "0x6A71FC")]
public class BuildingPlacement : MonoBehaviour
{
	[Token(Token = "0x2000269")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6A7BD4", Offset = "0x6A7BD4")]
	private sealed class <Start>d__1 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400118A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400118B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400118C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public BuildingPlacement <>4__this;

		[Token(Token = "0x1700032A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60013B5")]
			[Address(RVA = "0x10D66C8", Offset = "0x10D66C8", VA = "0x10D66C8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700032B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60013B7")]
			[Address(RVA = "0x10D6730", Offset = "0x10D6730", VA = "0x10D6730", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60013B2")]
		[Address(RVA = "0x10D63C8", Offset = "0x10D63C8", VA = "0x10D63C8")]
		[DebuggerHidden]
		public <Start>d__1(int <>1__state)
		{
		}

		[Token(Token = "0x60013B3")]
		[Address(RVA = "0x10D6618", Offset = "0x10D6618", VA = "0x10D6618", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60013B4")]
		[Address(RVA = "0x10D661C", Offset = "0x10D661C", VA = "0x10D661C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60013B6")]
		[Address(RVA = "0x10D66D0", Offset = "0x10D66D0", VA = "0x10D66D0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40000A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public BuildingInfo buildingType;

	[Token(Token = "0x60000A7")]
	[Address(RVA = "0x10D6358", Offset = "0x10D6358", VA = "0x10D6358")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6AD958", Offset = "0x6AD958")]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x60000A8")]
	[Address(RVA = "0x10D63F4", Offset = "0x10D63F4", VA = "0x10D63F4")]
	public void Place(City city)
	{
	}

	[Token(Token = "0x60000A9")]
	[Address(RVA = "0x10D6610", Offset = "0x10D6610", VA = "0x10D6610")]
	public BuildingPlacement()
	{
	}
}
[Token(Token = "0x2000018")]
public class BuildingTester : CityModule, ISimulationModule
{
	[Token(Token = "0x200026A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6A7BE4", Offset = "0x6A7BE4")]
	private sealed class <Simulate>d__2 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400118D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400118E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400118F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public BuildingTester <>4__this;

		[Token(Token = "0x1700032C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60013BB")]
			[Address(RVA = "0x10D691C", Offset = "0x10D691C", VA = "0x10D691C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700032D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60013BD")]
			[Address(RVA = "0x10D6984", Offset = "0x10D6984", VA = "0x10D6984", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60013B8")]
		[Address(RVA = "0x10D67AC", Offset = "0x10D67AC", VA = "0x10D67AC")]
		[DebuggerHidden]
		public <Simulate>d__2(int <>1__state)
		{
		}

		[Token(Token = "0x60013B9")]
		[Address(RVA = "0x10D67E8", Offset = "0x10D67E8", VA = "0x10D67E8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60013BA")]
		[Address(RVA = "0x10D67EC", Offset = "0x10D67EC", VA = "0x10D67EC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60013BC")]
		[Address(RVA = "0x10D6924", Offset = "0x10D6924", VA = "0x10D6924", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40000A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public BuildingInfo[] prefabs;

	[Token(Token = "0x60000AA")]
	[Address(RVA = "0x10D6738", Offset = "0x10D6738", VA = "0x10D6738")]
	private void Start()
	{
	}

	[Token(Token = "0x60000AB")]
	[Address(RVA = "0x10D673C", Offset = "0x10D673C", VA = "0x10D673C", Slot = "11")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6AD9BC", Offset = "0x6AD9BC")]
	public IEnumerator Simulate(float deltaTime)
	{
		return null;
	}

	[Token(Token = "0x60000AC")]
	[Address(RVA = "0x10D67D8", Offset = "0x10D67D8", VA = "0x10D67D8")]
	public BuildingTester()
	{
	}

	[SpecialName]
	[Token(Token = "0x60000AD")]
	[Address(RVA = "0x10D67E0", Offset = "0x10D67E0", VA = "0x10D67E0", Slot = "12")]
	private GameObject ISimulationModule.get_gameObject()
	{
		return null;
	}
}
[Token(Token = "0x2000019")]
public class BuildingVFX : MonoBehaviour
{
	[Token(Token = "0x60000AE")]
	[Address(RVA = "0x10D9E44", Offset = "0x10D9E44", VA = "0x10D9E44")]
	public BuildingVFX()
	{
	}
}
[Token(Token = "0x200001A")]
public class CellTower : MonoBehaviour, IBuildingBehaviourExtension
{
	[Token(Token = "0x40000A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ParticleSystem signalEffect;

	[Token(Token = "0x40000AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private BuildingInstance building;

	[Token(Token = "0x60000AF")]
	[Address(RVA = "0x1117548", Offset = "0x1117548", VA = "0x1117548", Slot = "5")]
	public void OnDemolishBuilding(BuildingInstance inBuilding)
	{
	}

	[Token(Token = "0x60000B0")]
	[Address(RVA = "0x111754C", Offset = "0x111754C", VA = "0x111754C", Slot = "4")]
	public void OnPlaceBuilding(BuildingInstance inBuilding, bool fromSaveData)
	{
	}

	[Token(Token = "0x60000B1")]
	[Address(RVA = "0x1117594", Offset = "0x1117594", VA = "0x1117594", Slot = "6")]
	public void Simulate(float deltaTime)
	{
	}

	[Token(Token = "0x60000B2")]
	[Address(RVA = "0x111766C", Offset = "0x111766C", VA = "0x111766C")]
	public CellTower()
	{
	}
}
[Token(Token = "0x200001B")]
public class CityHall : MonoBehaviour, IBuildingBehaviourExtension
{
	[Token(Token = "0x40000AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Animator lightsAnimator;

	[Token(Token = "0x40000AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject[] lights;

	[Token(Token = "0x40000AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float lightAppearanceDuration;

	[Token(Token = "0x40000AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float showTime;

	[Token(Token = "0x40000AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6A87DC", Offset = "0x6A87DC")]
	private BuildingInstance <building>k__BackingField;

	[Token(Token = "0x17000030")]
	public BuildingInstance building
	{
		[Token(Token = "0x60000B3")]
		[Address(RVA = "0x1120584", Offset = "0x1120584", VA = "0x1120584")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6ADA20", Offset = "0x6ADA20")]
		get
		{
			return null;
		}
		[Token(Token = "0x60000B4")]
		[Address(RVA = "0x112058C", Offset = "0x112058C", VA = "0x112058C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6ADA30", Offset = "0x6ADA30")]
		private set
		{
		}
	}

	[Token(Token = "0x17000031")]
	private City city
	{
		[Token(Token = "0x60000B5")]
		[Address(RVA = "0x1120594", Offset = "0x1120594", VA = "0x1120594")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60000B6")]
	[Address(RVA = "0x11205BC", Offset = "0x11205BC", VA = "0x11205BC")]
	private void SetLightsVisible(bool visible)
	{
	}

	[Token(Token = "0x60000B7")]
	[Address(RVA = "0x1120668", Offset = "0x1120668", VA = "0x1120668")]
	public void ShowCelebrationLights()
	{
	}

	[Token(Token = "0x60000B8")]
	[Address(RVA = "0x1120670", Offset = "0x1120670", VA = "0x1120670", Slot = "4")]
	public void OnPlaceBuilding(BuildingInstance inBuilding, bool fromSaveData)
	{
	}

	[Token(Token = "0x60000B9")]
	[Address(RVA = "0x11206B0", Offset = "0x11206B0", VA = "0x11206B0", Slot = "5")]
	public void OnDemolishBuilding(BuildingInstance building)
	{
	}

	[Token(Token = "0x60000BA")]
	[Address(RVA = "0x11206D8", Offset = "0x11206D8", VA = "0x11206D8", Slot = "6")]
	public void Simulate(float deltaTime)
	{
	}

	[Token(Token = "0x60000BB")]
	[Address(RVA = "0x11207B4", Offset = "0x11207B4", VA = "0x11207B4")]
	public CityHall()
	{
	}
}
[Token(Token = "0x200001C")]
public class RocketLaunchSite : MonoBehaviour, IBuildingBehaviourExtension
{
	[Token(Token = "0x200026B")]
	private enum State
	{
		[Token(Token = "0x4001191")]
		Idle,
		[Token(Token = "0x4001192")]
		PreparingLaunch,
		[Token(Token = "0x4001193")]
		Launching,
		[Token(Token = "0x4001194")]
		Launched,
		[Token(Token = "0x4001195")]
		AwaitingLanding,
		[Token(Token = "0x4001196")]
		Landing
	}

	[Token(Token = "0x40000B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject rocket;

	[Token(Token = "0x40000B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ParticleSystem groundSmoke;

	[Token(Token = "0x40000B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ParticleSystem rocketSmoke;

	[Token(Token = "0x40000B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AudioSource launchSoundSource;

	[Token(Token = "0x40000B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public AudioSource rocketSoundSource;

	[Token(Token = "0x40000B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public AudioClip launchSound;

	[Token(Token = "0x40000B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public AudioClip landSound;

	[Token(Token = "0x40000B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float acceleration;

	[Token(Token = "0x40000B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public float takeoffVelocity;

	[Token(Token = "0x40000B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public float rotationSpeed;

	[Token(Token = "0x40000BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public float maxHeight;

	[Token(Token = "0x40000BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public float groundSmokeHeightThreshold;

	[Token(Token = "0x40000BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public float cutoffHeight;

	[Token(Token = "0x40000BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public float landingDuration;

	[Token(Token = "0x40000BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public float delayUntilLanding;

	[Token(Token = "0x40000BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6A87EC", Offset = "0x6A87EC")]
	private BuildingInstance <building>k__BackingField;

	[Token(Token = "0x40000C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private State state;

	[Token(Token = "0x40000C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private float timeInState;

	[Token(Token = "0x40000C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Vector3 padPosition;

	[Token(Token = "0x40000C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private Quaternion padRotation;

	[Token(Token = "0x40000C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	private float velocity;

	[Token(Token = "0x40000C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public float launchAngleDegrees;

	[Token(Token = "0x40000C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	private Quaternion launchRotation;

	[Token(Token = "0x40000C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	private float launchCountdown;

	[Token(Token = "0x40000C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private GazeTimer gazeTimer;

	[Token(Token = "0x17000032")]
	public bool isActive
	{
		[Token(Token = "0x60000BC")]
		[Address(RVA = "0x1111CD4", Offset = "0x1111CD4", VA = "0x1111CD4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000033")]
	public BuildingInstance building
	{
		[Token(Token = "0x60000BD")]
		[Address(RVA = "0x1111CF4", Offset = "0x1111CF4", VA = "0x1111CF4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6ADA40", Offset = "0x6ADA40")]
		get
		{
			return null;
		}
		[Token(Token = "0x60000BE")]
		[Address(RVA = "0x1111CFC", Offset = "0x1111CFC", VA = "0x1111CFC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6ADA50", Offset = "0x6ADA50")]
		private set
		{
		}
	}

	[Token(Token = "0x17000034")]
	private Player player
	{
		[Token(Token = "0x60000BF")]
		[Address(RVA = "0x1111D04", Offset = "0x1111D04", VA = "0x1111D04")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60000C0")]
	[Address(RVA = "0x1111D54", Offset = "0x1111D54", VA = "0x1111D54")]
	private void Start()
	{
	}

	[Token(Token = "0x60000C1")]
	[Address(RVA = "0x1111E90", Offset = "0x1111E90", VA = "0x1111E90")]
	private void EnterState(State newState)
	{
	}

	[Token(Token = "0x60000C2")]
	[Address(RVA = "0x1112070", Offset = "0x1112070", VA = "0x1112070")]
	public void Launch(float countdown)
	{
	}

	[Token(Token = "0x60000C3")]
	[Address(RVA = "0x1112078", Offset = "0x1112078", VA = "0x1112078", Slot = "6")]
	public void Simulate(float deltaTime)
	{
	}

	[Token(Token = "0x60000C4")]
	[Address(RVA = "0x1112780", Offset = "0x1112780", VA = "0x1112780", Slot = "4")]
	public void OnPlaceBuilding(BuildingInstance inBuilding, bool fromSaveData)
	{
	}

	[Token(Token = "0x60000C5")]
	[Address(RVA = "0x1112794", Offset = "0x1112794", VA = "0x1112794", Slot = "5")]
	public void OnDemolishBuilding(BuildingInstance building)
	{
	}

	[Token(Token = "0x60000C6")]
	[Address(RVA = "0x1112798", Offset = "0x1112798", VA = "0x1112798")]
	public RocketLaunchSite()
	{
	}
}
[Token(Token = "0x200001D")]
public class WindTurbine : MonoBehaviour, IBuildingBehaviourExtension
{
	[Token(Token = "0x40000C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject pole;

	[Token(Token = "0x60000C7")]
	[Address(RVA = "0x1025EA8", Offset = "0x1025EA8", VA = "0x1025EA8", Slot = "5")]
	public void OnDemolishBuilding(BuildingInstance building)
	{
	}

	[Token(Token = "0x60000C8")]
	[Address(RVA = "0x1025EAC", Offset = "0x1025EAC", VA = "0x1025EAC", Slot = "4")]
	public void OnPlaceBuilding(BuildingInstance building, bool fromSaveData)
	{
	}

	[Token(Token = "0x60000C9")]
	[Address(RVA = "0x1025EE4", Offset = "0x1025EE4", VA = "0x1025EE4")]
	public void UpdateRotation(City city)
	{
	}

	[Token(Token = "0x60000CA")]
	[Address(RVA = "0x1025FE0", Offset = "0x1025FE0", VA = "0x1025FE0", Slot = "6")]
	public void Simulate(float deltaTime)
	{
	}

	[Token(Token = "0x60000CB")]
	[Address(RVA = "0x1025FE4", Offset = "0x1025FE4", VA = "0x1025FE4")]
	public WindTurbine()
	{
	}
}
[Token(Token = "0x200001E")]
public class PlaneData
{
	[Token(Token = "0x200026C")]
	public enum PlaneState
	{
		[Token(Token = "0x4001198")]
		HeadingToAirport,
		[Token(Token = "0x4001199")]
		Landing,
		[Token(Token = "0x400119A")]
		Landed,
		[Token(Token = "0x400119B")]
		TakingOff,
		[Token(Token = "0x400119C")]
		HeadingOutOfMap,
		[Token(Token = "0x400119D")]
		LeavingMap
	}

	[Token(Token = "0x40000CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float exitAngle;

	[Token(Token = "0x40000CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float cruisingAltitude;

	[Token(Token = "0x40000CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject gameObject;

	[Token(Token = "0x40000CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public PlaneInfo planeInfo;

	[Token(Token = "0x40000CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public TrailRenderer trailRenderer;

	[Token(Token = "0x40000CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Animator animator;

	[Token(Token = "0x40000D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float trailDuration;

	[Token(Token = "0x40000D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public PlaneState state;

	[Token(Token = "0x40000D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public int airportX;

	[Token(Token = "0x40000D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public int airportY;

	[Token(Token = "0x40000D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float landingTime;

	[Token(Token = "0x40000D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public int spawnHash;

	[Token(Token = "0x60000CC")]
	[Address(RVA = "0xFD1990", Offset = "0xFD1990", VA = "0xFD1990")]
	public PlaneData()
	{
	}
}
[Token(Token = "0x200001F")]
public class AirTrafficManager : CityModule, IDebugPanelProvider
{
	[Token(Token = "0x200026D")]
	public class PlaneSaveData
	{
		[Token(Token = "0x400119E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float exitAngle;

		[Token(Token = "0x400119F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float cruisingAltitude;

		[Token(Token = "0x40011A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int spawnHash;

		[Token(Token = "0x40011A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float trailDuration;

		[Token(Token = "0x40011A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Vector3 position;

		[Token(Token = "0x40011A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public Quaternion rotation;

		[Token(Token = "0x40011A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public int airportX;

		[Token(Token = "0x40011A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public int airportY;

		[Token(Token = "0x40011A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public PlaneData.PlaneState state;

		[Token(Token = "0x40011A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public float landingTime;

		[Token(Token = "0x60013BE")]
		[Address(RVA = "0x10A2DB4", Offset = "0x10A2DB4", VA = "0x10A2DB4")]
		public PlaneSaveData()
		{
		}

		[Token(Token = "0x60013BF")]
		[Address(RVA = "0x10A2578", Offset = "0x10A2578", VA = "0x10A2578")]
		public PlaneSaveData(AirTrafficManager manager, PlaneData inData)
		{
		}

		[Token(Token = "0x60013C0")]
		[Address(RVA = "0x10A2848", Offset = "0x10A2848", VA = "0x10A2848")]
		public PlaneData ToPlaneData(AirTrafficManager manager)
		{
			return null;
		}
	}

	[Token(Token = "0x200026E")]
	public class AirTrafficManagerSaveData : SaveSystem.ModuleData
	{
		[Token(Token = "0x40011A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float timeSincePlaneSpawned;

		[Token(Token = "0x40011A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PlaneSaveData[] planeData;

		[Token(Token = "0x60013C1")]
		[Address(RVA = "0x10A2570", Offset = "0x10A2570", VA = "0x10A2570")]
		public AirTrafficManagerSaveData()
		{
		}
	}

	[Token(Token = "0x40000D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float outerCullDistance;

	[Token(Token = "0x40000D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float minCruisingAltitude;

	[Token(Token = "0x40000D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float maxCruisingAltitude;

	[Token(Token = "0x40000D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float minTimeBetweenSpawningPlanes;

	[Token(Token = "0x40000DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public VehicleCollection vehicleCollection;

	[Token(Token = "0x40000DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public List<PlaneData> planes;

	[Token(Token = "0x40000DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float landingDuration;

	[Token(Token = "0x40000DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private float timeSincePlaneSpawned;

	[Token(Token = "0x40000DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private int desiredNumPlanes;

	[Token(Token = "0x40000DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private Vector3 cityCenter;

	[Token(Token = "0x40000E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float innerCullDistanceSqr;

	[Token(Token = "0x40000E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private float outerCullDistanceSqr;

	[Token(Token = "0x40000E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private float cruiseSpeed;

	[Token(Token = "0x17000035")]
	private Player player
	{
		[Token(Token = "0x60000CD")]
		[Address(RVA = "0x10A0378", Offset = "0x10A0378", VA = "0x10A0378")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000036")]
	public override Type saveModuleDataType
	{
		[Token(Token = "0x60000D8")]
		[Address(RVA = "0x10A236C", Offset = "0x10A236C", VA = "0x10A236C", Slot = "4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60000CE")]
	[Address(RVA = "0x10A03C8", Offset = "0x10A03C8", VA = "0x10A03C8", Slot = "8")]
	public override void Init()
	{
	}

	[Token(Token = "0x60000CF")]
	[Address(RVA = "0x10A0510", Offset = "0x10A0510", VA = "0x10A0510")]
	private Vector3 AngleToLocation(float angle, float altitude)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60000D0")]
	[Address(RVA = "0x10A0644", Offset = "0x10A0644", VA = "0x10A0644")]
	private float AngleFromDestination(Vector3 destination)
	{
		return default(float);
	}

	[Token(Token = "0x60000D1")]
	[Address(RVA = "0x10A0754", Offset = "0x10A0754", VA = "0x10A0754")]
	private bool IsVisible(Vector3 position)
	{
		return default(bool);
	}

	[Token(Token = "0x60000D2")]
	[Address(RVA = "0x10A081C", Offset = "0x10A081C", VA = "0x10A081C")]
	private void Update()
	{
	}

	[Token(Token = "0x60000D3")]
	[Address(RVA = "0x10A1F8C", Offset = "0x10A1F8C", VA = "0x10A1F8C")]
	private PlaneData GetPlaneAtAirport(int x, int y)
	{
		return null;
	}

	[Token(Token = "0x60000D4")]
	[Address(RVA = "0x10A2118", Offset = "0x10A2118", VA = "0x10A2118")]
	private void SteerPlaneToPosition(PlaneData plane, Vector3 location, float deltaTime)
	{
	}

	[Token(Token = "0x60000D5")]
	[Address(RVA = "0x10A16C8", Offset = "0x10A16C8", VA = "0x10A16C8")]
	private bool SteerPlaneToTransform(PlaneData plane, Vector3 location, Quaternion rotation, float deltaTime)
	{
		return default(bool);
	}

	[Token(Token = "0x60000D6")]
	[Address(RVA = "0x10A1E64", Offset = "0x10A1E64", VA = "0x10A1E64")]
	private AirportInfo GetAirport(int x, int y)
	{
		return null;
	}

	[Token(Token = "0x60000D7")]
	[Address(RVA = "0x10A120C", Offset = "0x10A120C", VA = "0x10A120C")]
	private void SpawnPlane()
	{
	}

	[Token(Token = "0x60000D9")]
	[Address(RVA = "0x10A23DC", Offset = "0x10A23DC", VA = "0x10A23DC", Slot = "5")]
	public override SaveSystem.ModuleData OnSave()
	{
		return null;
	}

	[Token(Token = "0x60000DA")]
	[Address(RVA = "0x10A2630", Offset = "0x10A2630", VA = "0x10A2630", Slot = "6")]
	public override void OnLoad(SaveSystem.SaveGame saveGame, SaveSystem.ModuleData data)
	{
	}

	[Token(Token = "0x60000DB")]
	[Address(RVA = "0x10A2A10", Offset = "0x10A2A10", VA = "0x10A2A10", Slot = "11")]
	public void OnDebugPanel()
	{
	}

	[Token(Token = "0x60000DC")]
	[Address(RVA = "0x10A2D20", Offset = "0x10A2D20", VA = "0x10A2D20")]
	public AirTrafficManager()
	{
	}
}
[Token(Token = "0x2000020")]
public class BirdManager : CityModule
{
	[Token(Token = "0x200026F")]
	public class PerchTransform
	{
		[Token(Token = "0x40011AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public BirdFlock.BirdType birdType;

		[Token(Token = "0x40011AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public Vector3 position;

		[Token(Token = "0x40011AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Quaternion rotation;

		[Token(Token = "0x40011AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public BirdFlock.Bird bird;

		[Token(Token = "0x60013C2")]
		[Address(RVA = "0x10A8ED0", Offset = "0x10A8ED0", VA = "0x10A8ED0")]
		public PerchTransform()
		{
		}
	}

	[Token(Token = "0x2000270")]
	public class PerchTile
	{
		[Token(Token = "0x40011AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public List<PerchTransform> perches;

		[Token(Token = "0x60013C3")]
		[Address(RVA = "0x10A8560", Offset = "0x10A8560", VA = "0x10A8560")]
		public PerchTile()
		{
		}
	}

	[Token(Token = "0x40000E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public BirdFlock seagullFlockPrefab;

	[Token(Token = "0x40000E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public BirdFlock vultureFlockPrefab;

	[Token(Token = "0x40000E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public BirdFlock parrotFlockPrefab;

	[Token(Token = "0x40000E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private PerchTile[] perchTiles;

	[Token(Token = "0x40000E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[HideInInspector]
	public List<BirdFlockAvoidancePoint> avoidancePoints;

	[Token(Token = "0x40000E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static List<BirdFlockAvoidancePoint> generalAvoidancePoints;

	[Token(Token = "0x40000E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private List<BirdFlock> birdFlocks;

	[Token(Token = "0x60000DD")]
	[Address(RVA = "0x10A8450", Offset = "0x10A8450", VA = "0x10A8450", Slot = "8")]
	public override void Init()
	{
	}

	[Token(Token = "0x60000DE")]
	[Address(RVA = "0x10A85D0", Offset = "0x10A85D0", VA = "0x10A85D0")]
	private void SpawnBirdFlocks()
	{
	}

	[Token(Token = "0x60000DF")]
	[Address(RVA = "0x10A89D0", Offset = "0x10A89D0", VA = "0x10A89D0", Slot = "10")]
	public override void OnResetProgress()
	{
	}

	[Token(Token = "0x60000E0")]
	[Address(RVA = "0x10A8BB8", Offset = "0x10A8BB8", VA = "0x10A8BB8")]
	public void OnPlaceBuilding(BuildingInstance building)
	{
	}

	[Token(Token = "0x60000E1")]
	[Address(RVA = "0x10A8ED8", Offset = "0x10A8ED8", VA = "0x10A8ED8")]
	public void OnDemolishBuilding(BuildingInstance building)
	{
	}

	[Token(Token = "0x60000E2")]
	[Address(RVA = "0x10A818C", Offset = "0x10A818C", VA = "0x10A818C")]
	public bool IsOnFire(Vector3 position)
	{
		return default(bool);
	}

	[Token(Token = "0x60000E3")]
	[Address(RVA = "0x10A9090", Offset = "0x10A9090", VA = "0x10A9090")]
	public bool IsOnFire(int tileX, int tileY)
	{
		return default(bool);
	}

	[Token(Token = "0x60000E4")]
	[Address(RVA = "0x10A64AC", Offset = "0x10A64AC", VA = "0x10A64AC")]
	public PerchTransform GetFreePerch(int tileX, int tileY, BirdFlock.BirdType birdType)
	{
		return null;
	}

	[Token(Token = "0x60000E5")]
	[Address(RVA = "0x10A90E4", Offset = "0x10A90E4", VA = "0x10A90E4")]
	public PerchTransform AddPerch(BirdFlock.BirdType birdType, Vector3 position, Quaternion rotation)
	{
		return null;
	}

	[Token(Token = "0x60000E6")]
	[Address(RVA = "0x10A9208", Offset = "0x10A9208", VA = "0x10A9208")]
	public PerchTransform AddPerch(BirdPerchPoint perchPoint)
	{
		return null;
	}

	[Token(Token = "0x60000E7")]
	[Address(RVA = "0x10A9338", Offset = "0x10A9338", VA = "0x10A9338")]
	public void RemovePerch(PerchTransform perch)
	{
	}

	[Token(Token = "0x60000E8")]
	[Address(RVA = "0x10A9418", Offset = "0x10A9418", VA = "0x10A9418")]
	public BirdManager()
	{
	}
}
[Token(Token = "0x2000021")]
public class BridgeManager : CityModule
{
	[Token(Token = "0x2000271")]
	public class Bridge
	{
		[Token(Token = "0x40011AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int x;

		[Token(Token = "0x40011B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int y;

		[Token(Token = "0x40011B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int length;

		[Token(Token = "0x40011B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int dirX;

		[Token(Token = "0x40011B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int dirY;

		[NonSerialized]
		[Token(Token = "0x40011B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[XmlIgnore]
		public List<MeshBatcherV2.InstanceId> batchIds;

		[Token(Token = "0x1700032E")]
		public Bounds bounds
		{
			[Token(Token = "0x60013CA")]
			[Address(RVA = "0x10AB0E4", Offset = "0x10AB0E4", VA = "0x10AB0E4")]
			get
			{
				return default(Bounds);
			}
		}

		[Token(Token = "0x1700032F")]
		public Vector3 center
		{
			[Token(Token = "0x60013CB")]
			[Address(RVA = "0x10AC3E0", Offset = "0x10AC3E0", VA = "0x10AC3E0")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x60013C4")]
		[Address(RVA = "0x10AB2D0", Offset = "0x10AB2D0", VA = "0x10AB2D0")]
		public Bridge(Bridge inBridge)
		{
		}

		[Token(Token = "0x60013C5")]
		[Address(RVA = "0x10AC29C", Offset = "0x10AC29C", VA = "0x10AC29C")]
		public Bridge()
		{
		}

		[Token(Token = "0x60013C6")]
		[Address(RVA = "0x10AAE98", Offset = "0x10AAE98", VA = "0x10AAE98")]
		public void Visit(Action<int, int> action)
		{
		}

		[Token(Token = "0x60013C7")]
		[Address(RVA = "0x10AB380", Offset = "0x10AB380", VA = "0x10AB380")]
		public void VisitAdjacentTiles(Action<int, int> action)
		{
		}

		[Token(Token = "0x60013C8")]
		[Address(RVA = "0x10AB6B0", Offset = "0x10AB6B0", VA = "0x10AB6B0")]
		public bool IsOnBridge(int testX, int testY)
		{
			return default(bool);
		}

		[Token(Token = "0x60013C9")]
		[Address(RVA = "0x10AC30C", Offset = "0x10AC30C", VA = "0x10AC30C")]
		public bool IsAdjacentToBridge(int testX, int testY)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x2000272")]
	public class BridgeSaveData : SaveSystem.ModuleData
	{
		[Token(Token = "0x40011B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Bridge[] bridges;

		[Token(Token = "0x60013CC")]
		[Address(RVA = "0x10AB9B8", Offset = "0x10AB9B8", VA = "0x10AB9B8")]
		public BridgeSaveData()
		{
		}
	}

	[Token(Token = "0x2000273")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6A7BF4", Offset = "0x6A7BF4")]
	private sealed class <>c__DisplayClass20_0
	{
		[Token(Token = "0x40011B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Action<GameObject, Vector3, Quaternion> tileConstructor;

		[Token(Token = "0x40011B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public BridgeManager <>4__this;

		[Token(Token = "0x40011B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Quaternion bridgePieceRotation;

		[Token(Token = "0x60013CD")]
		[Address(RVA = "0x10AAE88", Offset = "0x10AAE88", VA = "0x10AAE88")]
		public <>c__DisplayClass20_0()
		{
		}
	}

	[Token(Token = "0x2000274")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6A7C04", Offset = "0x6A7C04")]
	private sealed class <>c__DisplayClass20_1
	{
		[Token(Token = "0x40011B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool piece;

		[Token(Token = "0x40011BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public <>c__DisplayClass20_0 CS$<>8__locals1;

		[Token(Token = "0x60013CE")]
		[Address(RVA = "0x10AAE90", Offset = "0x10AAE90", VA = "0x10AAE90")]
		public <>c__DisplayClass20_1()
		{
		}

		[Token(Token = "0x60013CF")]
		[Address(RVA = "0x10ABE84", Offset = "0x10ABE84", VA = "0x10ABE84")]
		internal void <ConstructBridge>b__0(int x, int y)
		{
		}
	}

	[Token(Token = "0x2000275")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6A7C14", Offset = "0x6A7C14")]
	private sealed class <>c__DisplayClass20_2
	{
		[Token(Token = "0x40011BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int index;

		[Token(Token = "0x40011BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int largePieceTilePosition;

		[Token(Token = "0x40011BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public <>c__DisplayClass20_0 CS$<>8__locals2;

		[Token(Token = "0x60013D0")]
		[Address(RVA = "0x10AAF30", Offset = "0x10AAF30", VA = "0x10AAF30")]
		public <>c__DisplayClass20_2()
		{
		}

		[Token(Token = "0x60013D1")]
		[Address(RVA = "0x10ABF68", Offset = "0x10ABF68", VA = "0x10ABF68")]
		internal void <ConstructBridge>b__1(int x, int y)
		{
		}
	}

	[Token(Token = "0x2000276")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6A7C24", Offset = "0x6A7C24")]
	private sealed class <>c__DisplayClass22_0
	{
		[Token(Token = "0x40011BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public BridgeManager <>4__this;

		[Token(Token = "0x40011BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Bridge bridge;

		[Token(Token = "0x60013D2")]
		[Address(RVA = "0x10AB0DC", Offset = "0x10AB0DC", VA = "0x10AB0DC")]
		public <>c__DisplayClass22_0()
		{
		}

		[Token(Token = "0x60013D3")]
		[Address(RVA = "0x10AC068", Offset = "0x10AC068", VA = "0x10AC068")]
		internal void <PlaceBridgeMesh>b__0(GameObject prefab, Vector3 position, Quaternion rotation)
		{
		}
	}

	[Token(Token = "0x2000277")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6A7C34", Offset = "0x6A7C34")]
	private sealed class <>c__DisplayClass26_0
	{
		[Token(Token = "0x40011C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public ConstructionCost costReport;

		[Token(Token = "0x40011C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public BridgeManager <>4__this;

		[Token(Token = "0x60013D4")]
		[Address(RVA = "0x10AB8BC", Offset = "0x10AB8BC", VA = "0x10AB8BC")]
		public <>c__DisplayClass26_0()
		{
		}

		[Token(Token = "0x60013D5")]
		[Address(RVA = "0x10AC1E4", Offset = "0x10AC1E4", VA = "0x10AC1E4")]
		internal void <AdjustConstructionCost>b__0(int x, int y)
		{
		}

		[Token(Token = "0x60013D6")]
		[Address(RVA = "0x10AC224", Offset = "0x10AC224", VA = "0x10AC224")]
		internal void <AdjustConstructionCost>b__1(int x, int y)
		{
		}
	}

	[Token(Token = "0x40000EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int maxBridgeLength;

	[Token(Token = "0x40000EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int maxSmallBridgeLength;

	[Token(Token = "0x40000EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int largeBridgePieceLength;

	[Token(Token = "0x40000ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject smallBridgePrefab1;

	[Token(Token = "0x40000EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject smallBridgePrefab2;

	[Token(Token = "0x40000EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject largeBridgePrefab;

	[Token(Token = "0x40000F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject largeBridgeEndPrefab;

	[Token(Token = "0x40000F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Dictionary<GameObject, List<GameObject>> previewPrefabPool;

	[Token(Token = "0x40000F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private List<GameObject> previewPrefabObjects;

	[Token(Token = "0x40000F3")]
	private const float bridgePlacementHeight = 0.009f;

	[Token(Token = "0x40000F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6A880C", Offset = "0x6A880C")]
	private List<Bridge> <bridges>k__BackingField;

	[Token(Token = "0x40000F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public MeshBatcherV2 meshBatcher;

	[Token(Token = "0x17000037")]
	public List<Bridge> bridges
	{
		[Token(Token = "0x60000EA")]
		[Address(RVA = "0x10AA618", Offset = "0x10AA618", VA = "0x10AA618")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6ADA60", Offset = "0x6ADA60")]
		get
		{
			return null;
		}
		[Token(Token = "0x60000EB")]
		[Address(RVA = "0x10AA620", Offset = "0x10AA620", VA = "0x10AA620")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6ADA70", Offset = "0x6ADA70")]
		private set
		{
		}
	}

	[Token(Token = "0x17000038")]
	public override Type saveModuleDataType
	{
		[Token(Token = "0x60000F7")]
		[Address(RVA = "0x10AB8C4", Offset = "0x10AB8C4", VA = "0x10AB8C4", Slot = "4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60000EC")]
	[Address(RVA = "0x10AA628", Offset = "0x10AA628", VA = "0x10AA628", Slot = "8")]
	public override void Init()
	{
	}

	[Token(Token = "0x60000ED")]
	[Address(RVA = "0x10AA690", Offset = "0x10AA690", VA = "0x10AA690")]
	private GameObject SpawnPreviewPrefab(GameObject obj, Vector3 position, Quaternion rotation)
	{
		return null;
	}

	[Token(Token = "0x60000EE")]
	[Address(RVA = "0x10AA91C", Offset = "0x10AA91C", VA = "0x10AA91C")]
	private void Clear()
	{
	}

	[Token(Token = "0x60000EF")]
	[Address(RVA = "0x10AAB6C", Offset = "0x10AAB6C", VA = "0x10AAB6C")]
	public void ClearPreview()
	{
	}

	[Token(Token = "0x60000F0")]
	[Address(RVA = "0x10AAC08", Offset = "0x10AAC08", VA = "0x10AAC08")]
	private void ConstructBridge(Bridge bridge, Action<GameObject, Vector3, Quaternion> tileConstructor)
	{
	}

	[Token(Token = "0x60000F1")]
	[Address(RVA = "0x10AAF38", Offset = "0x10AAF38", VA = "0x10AAF38")]
	public void ShowPreview(Bridge bridge)
	{
	}

	[Token(Token = "0x60000F2")]
	[Address(RVA = "0x10AAFC4", Offset = "0x10AAFC4", VA = "0x10AAFC4")]
	private void PlaceBridgeMesh(Bridge bridge)
	{
	}

	[Token(Token = "0x60000F3")]
	[Address(RVA = "0x10AB190", Offset = "0x10AB190", VA = "0x10AB190")]
	public void PlaceBridge(Bridge bridge)
	{
	}

	[Token(Token = "0x60000F4")]
	[Address(RVA = "0x10AB440", Offset = "0x10AB440", VA = "0x10AB440")]
	private void DemolishBridge(Bridge bridge)
	{
	}

	[Token(Token = "0x60000F5")]
	[Address(RVA = "0x10AB5E0", Offset = "0x10AB5E0", VA = "0x10AB5E0")]
	public void DemolishBridge(int x, int y)
	{
	}

	[Token(Token = "0x60000F6")]
	[Address(RVA = "0x10AB7CC", Offset = "0x10AB7CC", VA = "0x10AB7CC")]
	public void AdjustConstructionCost(ConstructionCost costReport, Bridge bridge)
	{
	}

	[Token(Token = "0x60000F8")]
	[Address(RVA = "0x10AB934", Offset = "0x10AB934", VA = "0x10AB934", Slot = "5")]
	public override SaveSystem.ModuleData OnSave()
	{
		return null;
	}

	[Token(Token = "0x60000F9")]
	[Address(RVA = "0x10AB9C0", Offset = "0x10AB9C0", VA = "0x10AB9C0", Slot = "6")]
	public override void OnLoad(SaveSystem.SaveGame saveGame, SaveSystem.ModuleData data)
	{
	}

	[Token(Token = "0x60000FA")]
	[Address(RVA = "0x10ABB30", Offset = "0x10ABB30", VA = "0x10ABB30", Slot = "10")]
	public override void OnResetProgress()
	{
	}

	[Token(Token = "0x60000FB")]
	[Address(RVA = "0x10ABC44", Offset = "0x10ABC44", VA = "0x10ABC44")]
	public BridgeManager()
	{
	}

	[Token(Token = "0x60000FC")]
	[Address(RVA = "0x10ABCF0", Offset = "0x10ABCF0", VA = "0x10ABCF0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6ADA80", Offset = "0x6ADA80")]
	private void <ShowPreview>b__21_0(GameObject prefab, Vector3 position, Quaternion rotation)
	{
	}

	[Token(Token = "0x60000FD")]
	[Address(RVA = "0x10ABCF4", Offset = "0x10ABCF4", VA = "0x10ABCF4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6ADA90", Offset = "0x6ADA90")]
	private void <PlaceBridge>b__23_0(int x, int y)
	{
	}

	[Token(Token = "0x60000FE")]
	[Address(RVA = "0x10ABD98", Offset = "0x10ABD98", VA = "0x10ABD98")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6ADAA0", Offset = "0x6ADAA0")]
	private void <PlaceBridge>b__23_1(int x, int y)
	{
	}

	[Token(Token = "0x60000FF")]
	[Address(RVA = "0x10ABE14", Offset = "0x10ABE14", VA = "0x10ABE14")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6ADAB0", Offset = "0x6ADAB0")]
	private void <DemolishBridge>b__24_0(int x, int y)
	{
	}
}
[Token(Token = "0x2000022")]
public class BuildingManager : CityModule, ISimulationModule, IDebugPanelProvider
{
	[Token(Token = "0x2000278")]
	[Flags]
	public enum BuildPlacementQueryResult
	{
		[Token(Token = "0x40011C3")]
		Success = 0,
		[Token(Token = "0x40011C4")]
		NoGroundWater = 1,
		[Token(Token = "0x40011C5")]
		NoRoadAccess = 2,
		[Token(Token = "0x40011C6")]
		NoThermalVent = 4,
		[Token(Token = "0x40011C7")]
		BlockedByBuilding = 8,
		[Token(Token = "0x40011C8")]
		UniqueBuildingAlreadyExists = 0x10,
		[Token(Token = "0x40011C9")]
		BlockedByProp = 0x20,
		[Token(Token = "0x40011CA")]
		IncorrectZoning = 0x40,
		[Token(Token = "0x40011CB")]
		IncorrectTileType = 0x80
	}

	[Token(Token = "0x2000279")]
	public class BuildingSaveData : SaveSystem.ModuleData
	{
		[Token(Token = "0x40011CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public BuildingInstanceSaveData[] buildings;

		[Token(Token = "0x60013D7")]
		[Address(RVA = "0x10D4678", Offset = "0x10D4678", VA = "0x10D4678")]
		public BuildingSaveData()
		{
		}
	}

	[Token(Token = "0x200027A")]
	public class BuildingInstanceSaveData
	{
		[Token(Token = "0x40011CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int buildingInfoIndex;

		[Token(Token = "0x40011CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int buildingInfoToConstructIndex;

		[Token(Token = "0x40011CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int x;

		[Token(Token = "0x40011D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int y;

		[Token(Token = "0x40011D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int rot;

		[Token(Token = "0x40011D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public short carIndex;

		[Token(Token = "0x40011D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public double buildTime;

		[Token(Token = "0x40011D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public double lastWateredTime;

		[Token(Token = "0x40011D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public double lastPoweredTime;

		[Token(Token = "0x40011D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public double lastOccupiedTime;

		[Token(Token = "0x40011D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public double constructionStartTime;

		[Token(Token = "0x40011D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public bool isAbandoned;

		[Token(Token = "0x40011D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public List<CitizenManager.CitizenId> citizens;

		[Token(Token = "0x40011DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Helicopter.HelicopterSaveData helicopterSaveData;

		[Token(Token = "0x40011DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public BuildingInstance.State state;

		[Token(Token = "0x40011DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public double timeEnteredState;

		[Token(Token = "0x60013D8")]
		[Address(RVA = "0x10D6184", Offset = "0x10D6184", VA = "0x10D6184")]
		public BuildingInstanceSaveData()
		{
		}

		[Token(Token = "0x60013D9")]
		[Address(RVA = "0x10D4680", Offset = "0x10D4680", VA = "0x10D4680")]
		public BuildingInstanceSaveData(BuildingInstance copyFrom)
		{
		}
	}

	[Token(Token = "0x200027B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6A7C54", Offset = "0x6A7C54")]
	private sealed class <Simulate>d__57 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40011DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40011DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40011DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public BuildingManager <>4__this;

		[Token(Token = "0x40011E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int <numUpgradeConstructionSites>5__2;

		[Token(Token = "0x40011E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private int <n>5__3;

		[Token(Token = "0x17000330")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60013DD")]
			[Address(RVA = "0x10D6114", Offset = "0x10D6114", VA = "0x10D6114", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000331")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60013DF")]
			[Address(RVA = "0x10D617C", Offset = "0x10D617C", VA = "0x10D617C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60013DA")]
		[Address(RVA = "0x10D42C0", Offset = "0x10D42C0", VA = "0x10D42C0")]
		[DebuggerHidden]
		public <Simulate>d__57(int <>1__state)
		{
		}

		[Token(Token = "0x60013DB")]
		[Address(RVA = "0x10D53A0", Offset = "0x10D53A0", VA = "0x10D53A0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60013DC")]
		[Address(RVA = "0x10D53A4", Offset = "0x10D53A4", VA = "0x10D53A4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60013DE")]
		[Address(RVA = "0x10D611C", Offset = "0x10D611C", VA = "0x10D611C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40000F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public MeshBatcherV2 buildingMeshBatcher;

	[Token(Token = "0x40000F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public RuntimeAnimatorController buildingAnimatorController;

	[Token(Token = "0x40000F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject buildingCollapseEffectPrefab;

	[Token(Token = "0x40000F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject buildingDemolishEffectPrefab;

	[Token(Token = "0x40000FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject fireEffectPrefab;

	[Token(Token = "0x40000FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public MeshBatcherV2 shadowProxyMeshBatcher;

	[Token(Token = "0x40000FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Material shadowProxyMaterial;

	[Token(Token = "0x40000FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public List<BuildingInstance> buildings;

	[Token(Token = "0x40000FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public List<BuildingInstance> uniqueBuildings;

	[Token(Token = "0x40000FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6A881C", Offset = "0x6A881C")]
	private BuildingInstance <airport>k__BackingField;

	[Token(Token = "0x4000100")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6A882C", Offset = "0x6A882C")]
	private CityHall <cityHall>k__BackingField;

	[Token(Token = "0x4000101")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6A883C", Offset = "0x6A883C")]
	private int <airportTileX>k__BackingField;

	[Token(Token = "0x4000102")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6A884C", Offset = "0x6A884C")]
	private int <airportTileY>k__BackingField;

	[Token(Token = "0x4000103")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6A885C", Offset = "0x6A885C")]
	private int <airportTileDir>k__BackingField;

	[Token(Token = "0x4000104")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private bool enableBuildingAbandonment;

	[Token(Token = "0x4000105")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private List<IBuildingBehaviourExtension> buildingBehaviours;

	[Token(Token = "0x4000106")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private BuildingInstance[] buildingMap;

	[Token(Token = "0x17000039")]
	public static BuildingManager current
	{
		[Token(Token = "0x6000100")]
		[Address(RVA = "0x10CD438", Offset = "0x10CD438", VA = "0x10CD438")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700003A")]
	public BuildingInstance airport
	{
		[Token(Token = "0x6000101")]
		[Address(RVA = "0x10CF76C", Offset = "0x10CF76C", VA = "0x10CF76C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6ADAC0", Offset = "0x6ADAC0")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000102")]
		[Address(RVA = "0x10CF774", Offset = "0x10CF774", VA = "0x10CF774")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6ADAD0", Offset = "0x6ADAD0")]
		private set
		{
		}
	}

	[Token(Token = "0x1700003B")]
	public CityHall cityHall
	{
		[Token(Token = "0x6000103")]
		[Address(RVA = "0x10CF77C", Offset = "0x10CF77C", VA = "0x10CF77C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6ADAE0", Offset = "0x6ADAE0")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000104")]
		[Address(RVA = "0x10CF784", Offset = "0x10CF784", VA = "0x10CF784")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6ADAF0", Offset = "0x6ADAF0")]
		set
		{
		}
	}

	[Token(Token = "0x1700003C")]
	public int airportTileX
	{
		[Token(Token = "0x6000105")]
		[Address(RVA = "0x10CF78C", Offset = "0x10CF78C", VA = "0x10CF78C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6ADB00", Offset = "0x6ADB00")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000106")]
		[Address(RVA = "0x10CF794", Offset = "0x10CF794", VA = "0x10CF794")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6ADB10", Offset = "0x6ADB10")]
		private set
		{
		}
	}

	[Token(Token = "0x1700003D")]
	public int airportTileY
	{
		[Token(Token = "0x6000107")]
		[Address(RVA = "0x10CF79C", Offset = "0x10CF79C", VA = "0x10CF79C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6ADB20", Offset = "0x6ADB20")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000108")]
		[Address(RVA = "0x10CF7A4", Offset = "0x10CF7A4", VA = "0x10CF7A4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6ADB30", Offset = "0x6ADB30")]
		private set
		{
		}
	}

	[Token(Token = "0x1700003E")]
	public int airportTileDir
	{
		[Token(Token = "0x6000109")]
		[Address(RVA = "0x10CF7AC", Offset = "0x10CF7AC", VA = "0x10CF7AC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6ADB40", Offset = "0x6ADB40")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x600010A")]
		[Address(RVA = "0x10CF7B4", Offset = "0x10CF7B4", VA = "0x10CF7B4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6ADB50", Offset = "0x6ADB50")]
		private set
		{
		}
	}

	[Token(Token = "0x1700003F")]
	private Player player
	{
		[Token(Token = "0x600010B")]
		[Address(RVA = "0x10CF7BC", Offset = "0x10CF7BC", VA = "0x10CF7BC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000040")]
	public override Type saveModuleDataType
	{
		[Token(Token = "0x6000122")]
		[Address(RVA = "0x10D44C0", Offset = "0x10D44C0", VA = "0x10D44C0", Slot = "4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600010C")]
	[Address(RVA = "0x10CF80C", Offset = "0x10CF80C", VA = "0x10CF80C", Slot = "8")]
	public override void Init()
	{
	}

	[Token(Token = "0x600010D")]
	[Address(RVA = "0x10CF884", Offset = "0x10CF884", VA = "0x10CF884")]
	public void IgniteBuilding(BuildingInstance building, bool fromLoad = false)
	{
	}

	[Token(Token = "0x600010E")]
	[Address(RVA = "0x10CFF34", Offset = "0x10CFF34", VA = "0x10CFF34")]
	public void ExtinguishBuilding(BuildingInstance building)
	{
	}

	[Token(Token = "0x600010F")]
	[Address(RVA = "0x10D010C", Offset = "0x10D010C", VA = "0x10D010C")]
	public void PlayDemolishParticleEffect(GameObject effectPrefab, BuildingInstance building)
	{
	}

	[Token(Token = "0x6000110")]
	[Address(RVA = "0x10D03E8", Offset = "0x10D03E8", VA = "0x10D03E8")]
	public void CollapseBuilding(BuildingInstance building, bool playSound = true)
	{
	}

	[Token(Token = "0x6000111")]
	[Address(RVA = "0x10D0D4C", Offset = "0x10D0D4C", VA = "0x10D0D4C")]
	public static bool CanPreviewPlacement(BuildingInfo info, BuildPlacementQueryResult result)
	{
		return default(bool);
	}

	[Token(Token = "0x6000112")]
	[Address(RVA = "0x10D0D88", Offset = "0x10D0D88", VA = "0x10D0D88")]
	public bool DoesBuildingTypeExist(BuildingInfo info)
	{
		return default(bool);
	}

	[Token(Token = "0x6000113")]
	[Address(RVA = "0x10D0EF4", Offset = "0x10D0EF4", VA = "0x10D0EF4")]
	public BuildPlacementQueryResult CanPlace(BuildingInfo info, int x, int y, int rotation, bool allowDemolition = false)
	{
		return default(BuildPlacementQueryResult);
	}

	[Token(Token = "0x6000114")]
	[Address(RVA = "0x10D07E0", Offset = "0x10D07E0", VA = "0x10D07E0")]
	private void SpawnBuildingGameObject(BuildingInstance building, bool spawnAsDynamic)
	{
	}

	[Token(Token = "0x6000115")]
	[Address(RVA = "0x10D1860", Offset = "0x10D1860", VA = "0x10D1860")]
	public BuildingInstance Place(BuildingInfo info, int x, int y, int rotation)
	{
		return null;
	}

	[Token(Token = "0x6000116")]
	[Address(RVA = "0x10D24FC", Offset = "0x10D24FC", VA = "0x10D24FC")]
	private void SetupHelicopters(BuildingInstance building)
	{
	}

	[Token(Token = "0x6000117")]
	[Address(RVA = "0x10D1A68", Offset = "0x10D1A68", VA = "0x10D1A68")]
	private BuildingInstance PlaceInternal(BuildingInfo info, int x, int y, int rotation, bool fromSaveData)
	{
		return null;
	}

	[Token(Token = "0x6000118")]
	[Address(RVA = "0x10D2DDC", Offset = "0x10D2DDC", VA = "0x10D2DDC")]
	public void UpgradeBuilding(BuildingInstance existingBuilding, BuildingInfo replacementInfo)
	{
	}

	[Token(Token = "0x6000119")]
	[Address(RVA = "0x10D19B0", Offset = "0x10D19B0", VA = "0x10D19B0")]
	public void Demolish(BuildingInstance building)
	{
	}

	[Token(Token = "0x600011A")]
	[Address(RVA = "0x10D31D8", Offset = "0x10D31D8", VA = "0x10D31D8")]
	private void DemolishInternal(BuildingInstance building, bool fromSaveData, bool allowDemolishEffects)
	{
	}

	[Token(Token = "0x600011B")]
	[Address(RVA = "0x10D3960", Offset = "0x10D3960", VA = "0x10D3960")]
	private void Clear()
	{
	}

	[Token(Token = "0x600011C")]
	[Address(RVA = "0x10D39D4", Offset = "0x10D39D4", VA = "0x10D39D4")]
	public BuildingInstance GetBuildingUnsafe(int x, int y)
	{
		return null;
	}

	[Token(Token = "0x600011D")]
	[Address(RVA = "0x10D17BC", Offset = "0x10D17BC", VA = "0x10D17BC")]
	public BuildingInstance GetBuilding(int x, int y)
	{
		return null;
	}

	[Token(Token = "0x600011E")]
	[Address(RVA = "0x10D3A34", Offset = "0x10D3A34", VA = "0x10D3A34")]
	public BuildingInstance Raycast(Ray ray)
	{
		return null;
	}

	[Token(Token = "0x600011F")]
	[Address(RVA = "0x10D4008", Offset = "0x10D4008", VA = "0x10D4008")]
	private void ForEachNearbyBuilding(BuildingInstance building, int range, Action<BuildingInstance> action)
	{
	}

	[Token(Token = "0x6000120")]
	[Address(RVA = "0x10D4250", Offset = "0x10D4250", VA = "0x10D4250", Slot = "11")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6ADB60", Offset = "0x6ADB60")]
	public IEnumerator Simulate(float deltaTime)
	{
		return null;
	}

	[Token(Token = "0x6000121")]
	[Address(RVA = "0x10D42EC", Offset = "0x10D42EC", VA = "0x10D42EC")]
	private void TestRebatch()
	{
	}

	[Token(Token = "0x6000123")]
	[Address(RVA = "0x10D4530", Offset = "0x10D4530", VA = "0x10D4530", Slot = "5")]
	public override SaveSystem.ModuleData OnSave()
	{
		return null;
	}

	[Token(Token = "0x6000124")]
	[Address(RVA = "0x10D482C", Offset = "0x10D482C", VA = "0x10D482C", Slot = "6")]
	public override void OnLoad(SaveSystem.SaveGame saveGame, SaveSystem.ModuleData data)
	{
	}

	[Token(Token = "0x6000125")]
	[Address(RVA = "0x10D4B40", Offset = "0x10D4B40", VA = "0x10D4B40", Slot = "7")]
	public override void OnPostLoad()
	{
	}

	[Token(Token = "0x6000126")]
	[Address(RVA = "0x10D4B5C", Offset = "0x10D4B5C", VA = "0x10D4B5C", Slot = "13")]
	public void OnDebugPanel()
	{
	}

	[Token(Token = "0x6000127")]
	[Address(RVA = "0x10D4B60", Offset = "0x10D4B60", VA = "0x10D4B60")]
	public BuildingInfo GetAvailableMostUpgradedBuilding(BuildingInfo info)
	{
		return null;
	}

	[Token(Token = "0x6000128")]
	[Address(RVA = "0x10D4C90", Offset = "0x10D4C90", VA = "0x10D4C90")]
	public void OnRemoveRoadTile(int x, int y)
	{
	}

	[Token(Token = "0x6000129")]
	[Address(RVA = "0x10D4DB0", Offset = "0x10D4DB0", VA = "0x10D4DB0")]
	public void AdjustConstructionCostForRoadTileDemolish(ConstructionCost costReport, int x, int y)
	{
	}

	[Token(Token = "0x600012A")]
	[Address(RVA = "0x10D4EF8", Offset = "0x10D4EF8", VA = "0x10D4EF8", Slot = "10")]
	public override void OnResetProgress()
	{
	}

	[Token(Token = "0x600012B")]
	[Address(RVA = "0x10D516C", Offset = "0x10D516C", VA = "0x10D516C")]
	private void Update()
	{
	}

	[Token(Token = "0x600012C")]
	[Address(RVA = "0x10D52E0", Offset = "0x10D52E0", VA = "0x10D52E0")]
	public BuildingManager()
	{
	}

	[SpecialName]
	[Token(Token = "0x600012D")]
	[Address(RVA = "0x10D5398", Offset = "0x10D5398", VA = "0x10D5398", Slot = "12")]
	private GameObject ISimulationModule.get_gameObject()
	{
		return null;
	}
}
[Token(Token = "0x2000023")]
public class CarManager : CityModule, IDebugPanelProvider
{
	[Token(Token = "0x200027C")]
	public struct CarId
	{
		[Token(Token = "0x40011E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public short index;

		[Token(Token = "0x17000332")]
		public bool isValid
		{
			[Token(Token = "0x60013E1")]
			[Address(RVA = "0x722594", Offset = "0x722594", VA = "0x722594")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000333")]
		public static CarId invalidId
		{
			[Token(Token = "0x60013E2")]
			[Address(RVA = "0x1113988", Offset = "0x1113988", VA = "0x1113988")]
			get
			{
				return default(CarId);
			}
		}

		[Token(Token = "0x60013E0")]
		[Address(RVA = "0x72258C", Offset = "0x72258C", VA = "0x72258C")]
		public CarId(short index)
		{
		}
	}

	[Token(Token = "0x200027D")]
	public enum CarState : byte
	{
		[Token(Token = "0x40011E4")]
		Null,
		[Token(Token = "0x40011E5")]
		Parked,
		[Token(Token = "0x40011E6")]
		SearchingForParking,
		[Token(Token = "0x40011E7")]
		EnteringPark,
		[Token(Token = "0x40011E8")]
		ExitingPark,
		[Token(Token = "0x40011E9")]
		Driving,
		[Token(Token = "0x40011EA")]
		Repathing,
		[Token(Token = "0x40011EB")]
		PullingOver,
		[Token(Token = "0x40011EC")]
		PulledOver,
		[Token(Token = "0x40011ED")]
		ExitingPulledOver,
		[Token(Token = "0x40011EE")]
		OnFire
	}

	[Token(Token = "0x200027E")]
	public struct Location
	{
		[Token(Token = "0x40011EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public byte x;

		[Token(Token = "0x40011F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
		public byte y;

		[Token(Token = "0x60013E3")]
		[Address(RVA = "0x7225A4", Offset = "0x7225A4", VA = "0x7225A4")]
		public Location(int _x, int _y)
		{
		}

		[Token(Token = "0x60013E4")]
		[Address(RVA = "0x7225B0", Offset = "0x7225B0", VA = "0x7225B0", Slot = "0")]
		public override bool Equals(object obj)
		{
			return default(bool);
		}

		[Token(Token = "0x60013E5")]
		[Address(RVA = "0x7225B8", Offset = "0x7225B8", VA = "0x7225B8", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}

		[Token(Token = "0x60013E6")]
		[Address(RVA = "0x1113A84", Offset = "0x1113A84", VA = "0x1113A84")]
		public static bool operator ==(Location a, Location b)
		{
			return default(bool);
		}

		[Token(Token = "0x60013E7")]
		[Address(RVA = "0x1113AE0", Offset = "0x1113AE0", VA = "0x1113AE0")]
		public static bool operator !=(Location a, Location b)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x200027F")]
	public struct CarDataGameObjects
	{
		[Token(Token = "0x40011F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public GameObject gameObject;

		[Token(Token = "0x40011F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public GameObject emergencyLightsGameObject;

		[Token(Token = "0x40011F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public GameObject fireEffectObject;

		[Token(Token = "0x60013E8")]
		[Address(RVA = "0x722584", Offset = "0x722584", VA = "0x722584")]
		public void SetInitialTransform(Vector3 position, Quaternion rotation)
		{
		}
	}

	[Token(Token = "0x2000280")]
	public struct CarData
	{
		[Token(Token = "0x40011F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public CarState state;

		[Token(Token = "0x40011F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
		public Location previous;

		[Token(Token = "0x40011F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3")]
		public Location current;

		[Token(Token = "0x40011F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5")]
		public Location next;

		[Token(Token = "0x40011F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7")]
		public Location nextNext;

		[Token(Token = "0x40011F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float progress;

		[Token(Token = "0x40011FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float timeWaiting;

		[Token(Token = "0x40011FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float suppressionTimer;

		[Token(Token = "0x40011FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool reachedDestination;

		[Token(Token = "0x40011FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		public bool isSirenEnabled;

		[Token(Token = "0x40011FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<int> claimed;

		[Token(Token = "0x40011FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public PathFinder.Path path;

		[Token(Token = "0x4001200")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float speed;

		[Token(Token = "0x4001201")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public Vector3 previousGameObjectPosition;

		[Token(Token = "0x4001202")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Quaternion previousGameObjectRotation;

		[Token(Token = "0x4001203")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Vector3 nextGameObjectPosition;

		[Token(Token = "0x4001204")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public Quaternion nextGameObjectRotation;

		[Token(Token = "0x4001205")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public int homeX;

		[Token(Token = "0x4001206")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public int homeY;

		[Token(Token = "0x60013E9")]
		[Address(RVA = "0x722508", Offset = "0x722508", VA = "0x722508")]
		public BuildingInstance GetHomeBuilding(City city)
		{
			return null;
		}

		[Token(Token = "0x60013EA")]
		[Address(RVA = "0x722510", Offset = "0x722510", VA = "0x722510")]
		public void SetHomeBuilding(BuildingInstance building)
		{
		}

		[Token(Token = "0x60013EB")]
		[Address(RVA = "0x722528", Offset = "0x722528", VA = "0x722528")]
		public void SetInitialTransform(Vector3 position, Quaternion rotation)
		{
		}
	}

	[Token(Token = "0x2000281")]
	public enum ParkingType
	{
		[Token(Token = "0x4001208")]
		None,
		[Token(Token = "0x4001209")]
		Horizontal,
		[Token(Token = "0x400120A")]
		Vertical
	}

	[Token(Token = "0x2000282")]
	public class CarSaveData : SaveSystem.ModuleData
	{
		[Token(Token = "0x400120B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public CarData[] cars;

		[Token(Token = "0x400120C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string carMap;

		[Token(Token = "0x400120D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string parkedMap;

		[NonSerialized]
		[Token(Token = "0x400120E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[XmlIgnore]
		public short[] carMapRaw;

		[NonSerialized]
		[Token(Token = "0x400120F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[XmlIgnore]
		public short[] parkedMapRaw;

		[Token(Token = "0x60013EC")]
		[Address(RVA = "0x1113990", Offset = "0x1113990", VA = "0x1113990", Slot = "4")]
		public override void OnPreWrite()
		{
		}

		[Token(Token = "0x60013ED")]
		[Address(RVA = "0x11139D4", Offset = "0x11139D4", VA = "0x11139D4")]
		public CarSaveData()
		{
		}
	}

	[Token(Token = "0x2000283")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6A7C64", Offset = "0x6A7C64")]
	private sealed class <>c__DisplayClass108_0
	{
		[Token(Token = "0x4001210")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public RoadManager.Road nextRoad;

		[Token(Token = "0x60013EE")]
		[Address(RVA = "0x11137BC", Offset = "0x11137BC", VA = "0x11137BC")]
		public <>c__DisplayClass108_0()
		{
		}

		[Token(Token = "0x60013EF")]
		[Address(RVA = "0x11137C4", Offset = "0x11137C4", VA = "0x11137C4")]
		internal bool <ProgressNextNodeBehaviour>b__0(short x)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x4000107")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float cullDistance;

	[Token(Token = "0x4000108")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public bool driveOnLeft;

	[Token(Token = "0x4000109")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
	public bool allowUTurns;

	[Token(Token = "0x400010A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float parkingSpeed;

	[Token(Token = "0x400010B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float minDrivingSpeed;

	[Token(Token = "0x400010C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float maxDrivingSpeed;

	[Token(Token = "0x400010D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float stoppingSpeed;

	[Token(Token = "0x400010E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float acceleration;

	[Token(Token = "0x400010F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float deceleration;

	[Token(Token = "0x4000110")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float emergencySpeedMultiplier;

	[Token(Token = "0x4000111")]
	private const float pullOverTime = 2f;

	[Token(Token = "0x4000112")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public bool enableDebugDraw;

	[Token(Token = "0x4000113")]
	private const float carLength = 0.22f;

	[Token(Token = "0x4000114")]
	private const float halfCarLength = 0.11f;

	[Token(Token = "0x4000115")]
	private const float parkAdjustSpeed = 0.25f;

	[Token(Token = "0x4000116")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private int currentInterpolationFrame;

	[Token(Token = "0x4000117")]
	private const int numInterpolationFrames = 4;

	[Token(Token = "0x4000118")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject fireEffectPrefab;

	[Token(Token = "0x4000119")]
	private const int MaxCars = 256;

	[Token(Token = "0x400011A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private int carMapWidth;

	[Token(Token = "0x400011B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private int carMapHeight;

	[Token(Token = "0x400011C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private short[] carMap;

	[Token(Token = "0x400011D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private short[] parkedMap;

	[Token(Token = "0x400011E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public CarData[] cars;

	[Token(Token = "0x400011F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public CarDataGameObjects[] carGameObjects;

	[Token(Token = "0x4000120")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private int numActiveCars;

	[Token(Token = "0x4000121")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private int numAllocatedCars;

	[Token(Token = "0x4000122")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public float speedUpHack;

	[Token(Token = "0x4000123")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private float[] interpolationAlphas;

	[Token(Token = "0x4000124")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private int lastLoadedSaveVersion;

	[Token(Token = "0x17000041")]
	public bool useInterpolation
	{
		[Token(Token = "0x600012E")]
		[Address(RVA = "0x10DB848", Offset = "0x10DB848", VA = "0x10DB848")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000042")]
	private bool useCarCulling
	{
		[Token(Token = "0x600012F")]
		[Address(RVA = "0x10DB8B8", Offset = "0x10DB8B8", VA = "0x10DB8B8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000043")]
	public override Type saveModuleDataType
	{
		[Token(Token = "0x600017B")]
		[Address(RVA = "0x10E4038", Offset = "0x10E4038", VA = "0x10E4038", Slot = "4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000130")]
	[Address(RVA = "0x10DB928", Offset = "0x10DB928", VA = "0x10DB928", Slot = "8")]
	public override void Init()
	{
	}

	[Token(Token = "0x6000131")]
	[Address(RVA = "0x10DBA64", Offset = "0x10DBA64", VA = "0x10DBA64")]
	private void Update()
	{
	}

	[Token(Token = "0x6000132")]
	[Address(RVA = "0x10DD988", Offset = "0x10DD988", VA = "0x10DD988")]
	private void DebugDraw()
	{
	}

	[Token(Token = "0x6000133")]
	[Address(RVA = "0x10DE7AC", Offset = "0x10DE7AC", VA = "0x10DE7AC")]
	public bool IsCarAtWorldTile(int x, int y)
	{
		return default(bool);
	}

	[Token(Token = "0x6000134")]
	[Address(RVA = "0x10DE890", Offset = "0x10DE890", VA = "0x10DE890")]
	public bool IsCarInFrontOfBuilding(CarId id, BuildingInstance building)
	{
		return default(bool);
	}

	[Token(Token = "0x6000135")]
	[Address(RVA = "0x10CF054", Offset = "0x10CF054", VA = "0x10CF054")]
	public bool IsParked(CarId id)
	{
		return default(bool);
	}

	[Token(Token = "0x6000136")]
	[Address(RVA = "0x10D60D0", Offset = "0x10D60D0", VA = "0x10D60D0")]
	public bool DidReachDestination(CarId id)
	{
		return default(bool);
	}

	[Token(Token = "0x6000137")]
	[Address(RVA = "0x10DE8EC", Offset = "0x10DE8EC", VA = "0x10DE8EC")]
	public BuildingInstance GetCarHomeBuilding(CarId id)
	{
		return null;
	}

	[Token(Token = "0x6000138")]
	[Address(RVA = "0x10DE94C", Offset = "0x10DE94C", VA = "0x10DE94C")]
	public void GetCarLocation(CarId id, out int x, out int y)
	{
	}

	[Token(Token = "0x6000139")]
	[Address(RVA = "0x10DE9C0", Offset = "0x10DE9C0", VA = "0x10DE9C0")]
	public GameObject GetCarGameObject(CarId id)
	{
		return null;
	}

	[Token(Token = "0x600013A")]
	[Address(RVA = "0x10DEA04", Offset = "0x10DEA04", VA = "0x10DEA04")]
	public void IgniteCars(int x, int y)
	{
	}

	[Token(Token = "0x600013B")]
	[Address(RVA = "0x10DED90", Offset = "0x10DED90", VA = "0x10DED90")]
	private int CalculateNeighbourMask(int x, int y)
	{
		return default(int);
	}

	[Token(Token = "0x600013C")]
	[Address(RVA = "0x10DEE94", Offset = "0x10DEE94", VA = "0x10DEE94")]
	public ParkingType GetParkingType(int x, int y)
	{
		return default(ParkingType);
	}

	[Token(Token = "0x600013D")]
	[Address(RVA = "0x10DEF14", Offset = "0x10DEF14", VA = "0x10DEF14")]
	private bool IsParkingSpaceAvailable(Location loc)
	{
		return default(bool);
	}

	[Token(Token = "0x600013E")]
	[Address(RVA = "0x10DEFAC", Offset = "0x10DEFAC", VA = "0x10DEFAC")]
	private bool FindAnyParkingSpace(Location current, out Location result)
	{
		return default(bool);
	}

	[Token(Token = "0x600013F")]
	[Address(RVA = "0x10DF24C", Offset = "0x10DF24C", VA = "0x10DF24C")]
	private bool FindNearbyParking(BuildingInstance building, out Location space)
	{
		return default(bool);
	}

	[Token(Token = "0x6000140")]
	[Address(RVA = "0x10DF620", Offset = "0x10DF620", VA = "0x10DF620")]
	private bool FindAdjacentParking(BuildingInstance building, out Location result)
	{
		return default(bool);
	}

	[Token(Token = "0x6000141")]
	[Address(RVA = "0x10DF964", Offset = "0x10DF964", VA = "0x10DF964")]
	private void SetCarParked(short index, Location parkedLocation)
	{
	}

	[Token(Token = "0x6000142")]
	[Address(RVA = "0x10E00A8", Offset = "0x10E00A8", VA = "0x10E00A8")]
	private void SpawnGameObject(short index)
	{
	}

	[Token(Token = "0x6000143")]
	[Address(RVA = "0x10D2A6C", Offset = "0x10D2A6C", VA = "0x10D2A6C")]
	public CarId SpawnCarAtPort(BuildingInstance homeBuilding)
	{
		return default(CarId);
	}

	[Token(Token = "0x6000144")]
	[Address(RVA = "0x10E0454", Offset = "0x10E0454", VA = "0x10E0454")]
	private bool IsPortFree(int portX, int portY, int portDir)
	{
		return default(bool);
	}

	[Token(Token = "0x6000145")]
	[Address(RVA = "0x10E09DC", Offset = "0x10E09DC", VA = "0x10E09DC")]
	private void GetSpawnParamsFromPort(int portX, int portY, int portDir, out int spawnX, out int spawnY, out int dirX, out int dirY)
	{
	}

	[Token(Token = "0x6000146")]
	[Address(RVA = "0x10E04A0", Offset = "0x10E04A0", VA = "0x10E04A0")]
	private CarId SpawnCarAtPortInternal(BuildingInstance homeBuilding, int portX, int portY, int portDir)
	{
		return default(CarId);
	}

	[Token(Token = "0x6000147")]
	[Address(RVA = "0x10D2994", Offset = "0x10D2994", VA = "0x10D2994")]
	public CarId SpawnParkedCar(BuildingInstance homeBuilding)
	{
		return default(CarId);
	}

	[Token(Token = "0x6000148")]
	[Address(RVA = "0x10E0BD4", Offset = "0x10E0BD4", VA = "0x10E0BD4")]
	private bool IsUTurn(Location current, Location next)
	{
		return default(bool);
	}

	[Token(Token = "0x6000149")]
	[Address(RVA = "0x10DFED4", Offset = "0x10DFED4", VA = "0x10DFED4")]
	private void GetFollowDirection(Location current, out int dirX, out int dirY)
	{
	}

	[Token(Token = "0x600014A")]
	[Address(RVA = "0x10E0CA4", Offset = "0x10E0CA4", VA = "0x10E0CA4")]
	private short GetRoadIndex(int x, int y)
	{
		return default(short);
	}

	[Token(Token = "0x600014B")]
	[Address(RVA = "0x10E0CF4", Offset = "0x10E0CF4", VA = "0x10E0CF4")]
	private short FindConnectedRoadInDirection(int x, int y, int dirX, int dirY, out int distance)
	{
		return default(short);
	}

	[Token(Token = "0x600014C")]
	[Address(RVA = "0x10E0EB0", Offset = "0x10E0EB0", VA = "0x10E0EB0")]
	private bool GetDirectionTo(int x, int y, short roadIndex, out int dirX, out int dirY)
	{
		return default(bool);
	}

	[Token(Token = "0x600014D")]
	[Address(RVA = "0x10E1078", Offset = "0x10E1078", VA = "0x10E1078")]
	private bool FollowRoadToPoint(int x, int y, int endX, int endY, int dirX, int dirY)
	{
		return default(bool);
	}

	[Token(Token = "0x600014E")]
	[Address(RVA = "0x10E1284", Offset = "0x10E1284", VA = "0x10E1284")]
	private bool GetDirectionTo(int x, int y, int endX, int endY, out int dirX, out int dirY)
	{
		return default(bool);
	}

	[Token(Token = "0x600014F")]
	[Address(RVA = "0x10E13C4", Offset = "0x10E13C4", VA = "0x10E13C4")]
	private void GetCarDirectionFromPathDirection(Location carLocation, int pathDirX, int pathDirY, out int carDirX, out int carDirY)
	{
	}

	[Token(Token = "0x6000150")]
	[Address(RVA = "0x10E1474", Offset = "0x10E1474", VA = "0x10E1474")]
	private bool GetNextCarLocation(PathFinder.Path path, Location current, out Location next)
	{
		return default(bool);
	}

	[Token(Token = "0x6000151")]
	[Address(RVA = "0x10CF0A0", Offset = "0x10CF0A0", VA = "0x10CF0A0")]
	public bool PathCarTo(CarId id, BuildingInstance building)
	{
		return default(bool);
	}

	[Token(Token = "0x6000152")]
	[Address(RVA = "0x10E1900", Offset = "0x10E1900", VA = "0x10E1900")]
	public void SetSirenEnabled(CarId id, bool enabled)
	{
	}

	[Token(Token = "0x6000153")]
	[Address(RVA = "0x10E1948", Offset = "0x10E1948", VA = "0x10E1948")]
	public bool PathCarTo(CarId id, int endX, int endY)
	{
		return default(bool);
	}

	[Token(Token = "0x6000154")]
	[Address(RVA = "0x10E1A74", Offset = "0x10E1A74", VA = "0x10E1A74")]
	public bool IsCarPathingTo(CarId id, int endX, int endY)
	{
		return default(bool);
	}

	[Token(Token = "0x6000155")]
	[Address(RVA = "0x10E1618", Offset = "0x10E1618", VA = "0x10E1618")]
	private bool PathCar(CarId id)
	{
		return default(bool);
	}

	[Token(Token = "0x6000156")]
	[Address(RVA = "0x10E1C1C", Offset = "0x10E1C1C", VA = "0x10E1C1C")]
	private void RepathCar(short index)
	{
	}

	[Token(Token = "0x6000157")]
	[Address(RVA = "0x10E1ADC", Offset = "0x10E1ADC", VA = "0x10E1ADC")]
	private void GetNextCarLocationWander(Location current, out Location next)
	{
	}

	[Token(Token = "0x6000158")]
	[Address(RVA = "0x10E1CE4", Offset = "0x10E1CE4", VA = "0x10E1CE4")]
	private bool IsCarLocationAdjacentToBuilding(Location location, BuildingInstance building)
	{
		return default(bool);
	}

	[Token(Token = "0x6000159")]
	[Address(RVA = "0x10E1DF4", Offset = "0x10E1DF4", VA = "0x10E1DF4")]
	private void GetNextCarLocationFindParking(Location current, out Location next, BuildingInstance building)
	{
	}

	[Token(Token = "0x600015A")]
	[Address(RVA = "0x10E1F18", Offset = "0x10E1F18", VA = "0x10E1F18")]
	private void GetNextCarLocationFindParking(Location current, out Location next, Location parkingLocation)
	{
	}

	[Token(Token = "0x600015B")]
	[Address(RVA = "0x10E0AB8", Offset = "0x10E0AB8", VA = "0x10E0AB8")]
	private short AddCar()
	{
		return default(short);
	}

	[Token(Token = "0x600015C")]
	[Address(RVA = "0x10D395C", Offset = "0x10D395C", VA = "0x10D395C")]
	public void RemoveCar(CarId car)
	{
	}

	[Token(Token = "0x600015D")]
	[Address(RVA = "0x10E1FCC", Offset = "0x10E1FCC", VA = "0x10E1FCC")]
	private void RemoveCar(short index)
	{
	}

	[Token(Token = "0x600015E")]
	[Address(RVA = "0x10E22A8", Offset = "0x10E22A8", VA = "0x10E22A8")]
	private bool IsClaimed(short carIndex, int x, int y)
	{
		return default(bool);
	}

	[Token(Token = "0x600015F")]
	[Address(RVA = "0x10E22F4", Offset = "0x10E22F4", VA = "0x10E22F4")]
	private bool CanClaim(short carIndex, int x, int y)
	{
		return default(bool);
	}

	[Token(Token = "0x6000160")]
	[Address(RVA = "0x10E0A74", Offset = "0x10E0A74", VA = "0x10E0A74")]
	private short GetCarIndexAtSpace(int x, int y)
	{
		return default(short);
	}

	[Token(Token = "0x6000161")]
	[Address(RVA = "0x10E23AC", Offset = "0x10E23AC", VA = "0x10E23AC")]
	private short GetCarIndexAtParkingSpace(int x, int y)
	{
		return default(short);
	}

	[Token(Token = "0x6000162")]
	[Address(RVA = "0x10E1B30", Offset = "0x10E1B30", VA = "0x10E1B30")]
	private bool Claim(short carIndex, int x, int y)
	{
		return default(bool);
	}

	[Token(Token = "0x6000163")]
	[Address(RVA = "0x10DFFF8", Offset = "0x10DFFF8", VA = "0x10DFFF8")]
	private bool ClaimParking(short carIndex, int x, int y)
	{
		return default(bool);
	}

	[Token(Token = "0x6000164")]
	[Address(RVA = "0x10E23F0", Offset = "0x10E23F0", VA = "0x10E23F0")]
	public int GetNumCarsAtTile(int x, int y)
	{
		return default(int);
	}

	[Token(Token = "0x6000165")]
	[Address(RVA = "0x10E24A4", Offset = "0x10E24A4", VA = "0x10E24A4")]
	private void ReleaseParking(short carIndex, int x, int y)
	{
	}

	[Token(Token = "0x6000166")]
	[Address(RVA = "0x10E24F8", Offset = "0x10E24F8", VA = "0x10E24F8")]
	private void Release(short carIndex, int x, int y)
	{
	}

	[Token(Token = "0x6000167")]
	[Address(RVA = "0x10E2244", Offset = "0x10E2244", VA = "0x10E2244")]
	private void ReleaseAllParking(short carIndex)
	{
	}

	[Token(Token = "0x6000168")]
	[Address(RVA = "0x10DFD60", Offset = "0x10DFD60", VA = "0x10DFD60")]
	private void ReleaseAll(short carIndex)
	{
	}

	[Token(Token = "0x6000169")]
	[Address(RVA = "0x10E0C6C", Offset = "0x10E0C6C", VA = "0x10E0C6C")]
	private bool IsJunctionTypeAtLocation(Location loc)
	{
		return default(bool);
	}

	[Token(Token = "0x600016A")]
	[Address(RVA = "0x10E25E4", Offset = "0x10E25E4", VA = "0x10E25E4")]
	private void PredictStep(short index, Location current, out Location next)
	{
	}

	[Token(Token = "0x600016B")]
	[Address(RVA = "0x10E26A8", Offset = "0x10E26A8", VA = "0x10E26A8")]
	private bool IsValidFreeSpace(short index, Location location)
	{
		return default(bool);
	}

	[Token(Token = "0x600016C")]
	[Address(RVA = "0x10E271C", Offset = "0x10E271C", VA = "0x10E271C")]
	private void FindAlternativeRoute(short index, Location current, Location next, out Location alternativeNext)
	{
	}

	[Token(Token = "0x600016D")]
	[Address(RVA = "0x10E2834", Offset = "0x10E2834", VA = "0x10E2834")]
	private bool ForwardSpaceIsClear(short index)
	{
		return default(bool);
	}

	[Token(Token = "0x600016E")]
	[Address(RVA = "0x10E0B78", Offset = "0x10E0B78", VA = "0x10E0B78")]
	private Vector3 GetSpacePosition(Location loc, bool isParked = false)
	{
		return default(Vector3);
	}

	[Token(Token = "0x600016F")]
	[Address(RVA = "0x10E2B10", Offset = "0x10E2B10", VA = "0x10E2B10")]
	private Vector3 GetSpacePositionOld(Location loc, Location next, bool isParked = false)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000170")]
	[Address(RVA = "0x10E2C00", Offset = "0x10E2C00", VA = "0x10E2C00")]
	public bool TeleportToSafeLocation(CarId carId)
	{
		return default(bool);
	}

	[Token(Token = "0x6000171")]
	[Address(RVA = "0x10E2C04", Offset = "0x10E2C04", VA = "0x10E2C04")]
	private bool TeleportToSafeLocation(short index)
	{
		return default(bool);
	}

	[Token(Token = "0x6000172")]
	[Address(RVA = "0x10E2D18", Offset = "0x10E2D18", VA = "0x10E2D18")]
	public void OnRemoveRoadTile(int x, int y)
	{
	}

	[Token(Token = "0x6000173")]
	[Address(RVA = "0x10E2DFC", Offset = "0x10E2DFC", VA = "0x10E2DFC")]
	private void TryPullCarOver(short index)
	{
	}

	[Token(Token = "0x6000174")]
	[Address(RVA = "0x10E2F38", Offset = "0x10E2F38", VA = "0x10E2F38")]
	private bool IsTileAdjacentToBuilding(int tileX, int tileY, BuildingInstance building)
	{
		return default(bool);
	}

	[Token(Token = "0x6000175")]
	[Address(RVA = "0x10E3018", Offset = "0x10E3018", VA = "0x10E3018")]
	private bool IsCarLocationAtEndOfPath(PathFinder.Path path, Location loc)
	{
		return default(bool);
	}

	[Token(Token = "0x6000176")]
	[Address(RVA = "0x10E30A4", Offset = "0x10E30A4", VA = "0x10E30A4")]
	private void ProgressNextNodeBehaviour(short index)
	{
	}

	[Token(Token = "0x6000177")]
	[Address(RVA = "0x10E3A9C", Offset = "0x10E3A9C", VA = "0x10E3A9C")]
	private bool FindAvailableBuildingParkingSpace(short index, BuildingInstance building, out int spaceX, out int spaceY)
	{
		return default(bool);
	}

	[Token(Token = "0x6000178")]
	[Address(RVA = "0x10E37E8", Offset = "0x10E37E8", VA = "0x10E37E8")]
	private void SearchForParkingBehaviour(short index)
	{
	}

	[Token(Token = "0x6000179")]
	[Address(RVA = "0x10DBBA4", Offset = "0x10DBBA4", VA = "0x10DBBA4")]
	public void Simulate(float deltaTime)
	{
	}

	[Token(Token = "0x600017A")]
	[Address(RVA = "0x10E3E2C", Offset = "0x10E3E2C", VA = "0x10E3E2C")]
	private void Clear()
	{
	}

	[Token(Token = "0x600017C")]
	[Address(RVA = "0x10E40A8", Offset = "0x10E40A8", VA = "0x10E40A8", Slot = "5")]
	public override SaveSystem.ModuleData OnSave()
	{
		return null;
	}

	[Token(Token = "0x600017D")]
	[Address(RVA = "0x10E41AC", Offset = "0x10E41AC", VA = "0x10E41AC", Slot = "6")]
	public override void OnLoad(SaveSystem.SaveGame saveGame, SaveSystem.ModuleData data)
	{
	}

	[Token(Token = "0x600017E")]
	[Address(RVA = "0x10E4300", Offset = "0x10E4300", VA = "0x10E4300", Slot = "7")]
	public override void OnPostLoad()
	{
	}

	[Token(Token = "0x600017F")]
	[Address(RVA = "0x10DD98C", Offset = "0x10DD98C", VA = "0x10DD98C")]
	private bool ValidateCarSpaces()
	{
		return default(bool);
	}

	[Token(Token = "0x6000180")]
	[Address(RVA = "0x10E43F0", Offset = "0x10E43F0", VA = "0x10E43F0")]
	public bool GetTrafficHappiness(CarId carId, out float happiness)
	{
		return default(bool);
	}

	[Token(Token = "0x6000181")]
	[Address(RVA = "0x10E44B4", Offset = "0x10E44B4", VA = "0x10E44B4", Slot = "10")]
	public override void OnResetProgress()
	{
	}

	[Token(Token = "0x6000182")]
	[Address(RVA = "0x10E468C", Offset = "0x10E468C", VA = "0x10E468C", Slot = "11")]
	public void OnDebugPanel()
	{
	}

	[Token(Token = "0x6000183")]
	[Address(RVA = "0x10E4690", Offset = "0x10E4690", VA = "0x10E4690")]
	public CarManager()
	{
	}
}
[Token(Token = "0x2000024")]
public class CarSpaceMap : CityModule
{
	[Serializable]
	[Token(Token = "0x2000284")]
	public class LayoutTile
	{
		[Token(Token = "0x4001211")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vector2 lowerLeft;

		[Token(Token = "0x4001212")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector2 lowerRight;

		[Token(Token = "0x4001213")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Vector2 upperLeft;

		[Token(Token = "0x4001214")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Vector2 upperRight;

		[Token(Token = "0x4001215")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Vector2 parkingLowerLeft;

		[Token(Token = "0x4001216")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Vector2 parkingLowerRight;

		[Token(Token = "0x4001217")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Vector2 parkingUpperLeft;

		[Token(Token = "0x4001218")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Vector2 parkingUpperRight;

		[Token(Token = "0x4001219")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public float parkingLowerLeftRotation;

		[Token(Token = "0x400121A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public float parkingLowerRightRotation;

		[Token(Token = "0x400121B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public float parkingUpperLeftRotation;

		[Token(Token = "0x400121C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public float parkingUpperRightRotation;

		[Token(Token = "0x60013F0")]
		[Address(RVA = "0x1116084", Offset = "0x1116084", VA = "0x1116084")]
		public LayoutTile()
		{
		}
	}

	[Token(Token = "0x4000125")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool recalculateEveryFrame;

	[Token(Token = "0x4000126")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	public bool enableDebugDraw;

	[Token(Token = "0x4000127")]
	private const int roadTileStub = 0;

	[Token(Token = "0x4000128")]
	private const int roadTileStraight = 1;

	[Token(Token = "0x4000129")]
	private const int roadTileCorner = 3;

	[Token(Token = "0x400012A")]
	private const int roadTileTJunction = 2;

	[Token(Token = "0x400012B")]
	private const int roadTileCrossRoads = 5;

	[Token(Token = "0x400012C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public LayoutTile[] layoutTiles;

	[Token(Token = "0x400012D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private int spaceMapWidth;

	[Token(Token = "0x400012E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private int spaceMapHeight;

	[Token(Token = "0x400012F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Vector3[] spaceLocationCache;

	[Token(Token = "0x4000130")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool[] spaceLocationValidCache;

	[Token(Token = "0x4000131")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Vector3[] parkingSpaceLocationCache;

	[Token(Token = "0x4000132")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Quaternion[] parkingSpaceRotationCache;

	[Token(Token = "0x4000133")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool[] parkingSpaceLocationValidCache;

	[Token(Token = "0x4000134")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Vector3[] parkingSpaceBuildingLocationCache;

	[Token(Token = "0x4000135")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Quaternion[] parkingSpaceBuildingRotationCache;

	[Token(Token = "0x4000136")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private BuildingParkingSpace[] parkingSpaceBuildingOverride;

	[Token(Token = "0x6000184")]
	[Address(RVA = "0x1113B04", Offset = "0x1113B04", VA = "0x1113B04")]
	private Vector3 TransformSpace(int tileX, int tileY, Vector2 space, int rotation)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000185")]
	[Address(RVA = "0x1113C60", Offset = "0x1113C60", VA = "0x1113C60")]
	public void UpdateRoadTile(int x, int y, int roadTileType, int rotation)
	{
	}

	[Token(Token = "0x6000186")]
	[Address(RVA = "0x11150A0", Offset = "0x11150A0", VA = "0x11150A0")]
	public void ClearRoadTile(int x, int y)
	{
	}

	[Token(Token = "0x6000187")]
	[Address(RVA = "0x1115200", Offset = "0x1115200", VA = "0x1115200")]
	public bool IsSpaceValid(int x, int y)
	{
		return default(bool);
	}

	[Token(Token = "0x6000188")]
	[Address(RVA = "0x1115244", Offset = "0x1115244", VA = "0x1115244")]
	public Vector3 GetSpacePosition(int x, int y)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000189")]
	[Address(RVA = "0x1115294", Offset = "0x1115294", VA = "0x1115294")]
	public BuildingParkingSpace GetBuildingParkingSpaceOverride(int x, int y)
	{
		return null;
	}

	[Token(Token = "0x600018A")]
	[Address(RVA = "0x11152D8", Offset = "0x11152D8", VA = "0x11152D8")]
	public bool IsParkingSpaceValid(int x, int y, bool streetParkingOnly = false)
	{
		return default(bool);
	}

	[Token(Token = "0x600018B")]
	[Address(RVA = "0x11153F8", Offset = "0x11153F8", VA = "0x11153F8")]
	public Vector3 GetParkingSpacePosition(int x, int y, bool streetParkingOnly = false)
	{
		return default(Vector3);
	}

	[Token(Token = "0x600018C")]
	[Address(RVA = "0x1115508", Offset = "0x1115508", VA = "0x1115508")]
	public Quaternion GetParkingSpaceRotation(int x, int y, bool streetParkingOnly = false)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x600018D")]
	[Address(RVA = "0x111561C", Offset = "0x111561C", VA = "0x111561C", Slot = "8")]
	public override void Init()
	{
	}

	[Token(Token = "0x600018E")]
	[Address(RVA = "0x1115794", Offset = "0x1115794", VA = "0x1115794")]
	private void RecalculateSpaces()
	{
	}

	[Token(Token = "0x600018F")]
	[Address(RVA = "0x11158B8", Offset = "0x11158B8", VA = "0x11158B8")]
	private void CalculateBuildingParkingSpaceVars(BuildingInstance building, BuildingParkingSpace space, out Vector3 parkingPosition, out Quaternion parkingRotation, out int spaceX, out int spaceY)
	{
	}

	[Token(Token = "0x6000190")]
	[Address(RVA = "0x1115C84", Offset = "0x1115C84", VA = "0x1115C84")]
	public void AddBuildingParkingSpaces(BuildingInstance building)
	{
	}

	[Token(Token = "0x6000191")]
	[Address(RVA = "0x1115E2C", Offset = "0x1115E2C", VA = "0x1115E2C")]
	public void RemoveBuildingParkingSpaces(BuildingInstance building)
	{
	}

	[Token(Token = "0x6000192")]
	[Address(RVA = "0x1115F64", Offset = "0x1115F64", VA = "0x1115F64", Slot = "10")]
	public override void OnResetProgress()
	{
	}

	[Token(Token = "0x6000193")]
	[Address(RVA = "0x111606C", Offset = "0x111606C", VA = "0x111606C")]
	public CarSpaceMap()
	{
	}
}
[Token(Token = "0x2000025")]
public class CitizenManager : CityModule, ISimulationModule, IDebugPanelProvider
{
	[Token(Token = "0x2000285")]
	public struct CitizenId
	{
		[Token(Token = "0x400121D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public short index;

		[Token(Token = "0x17000334")]
		public bool isValid
		{
			[Token(Token = "0x60013F2")]
			[Address(RVA = "0x722694", Offset = "0x722694", VA = "0x722694")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60013F1")]
		[Address(RVA = "0x72268C", Offset = "0x72268C", VA = "0x72268C")]
		public CitizenId(short index)
		{
		}
	}

	[Token(Token = "0x2000286")]
	public enum CitizenState : byte
	{
		[Token(Token = "0x400121F")]
		Null,
		[Token(Token = "0x4001220")]
		SearchingForResidence,
		[Token(Token = "0x4001221")]
		SearchingForEmployment,
		[Token(Token = "0x4001222")]
		Idle,
		[Token(Token = "0x4001223")]
		CommutingToWork,
		[Token(Token = "0x4001224")]
		CommutingHome,
		[Token(Token = "0x4001225")]
		Working,
		[Token(Token = "0x4001226")]
		MakingWorkDelivery,
		[Token(Token = "0x4001227")]
		ReturningToWork
	}

	[Token(Token = "0x2000287")]
	[Flags]
	public enum CitizenFlags : byte
	{
		[Token(Token = "0x4001229")]
		None = 0,
		[Token(Token = "0x400122A")]
		HasHome = 1,
		[Token(Token = "0x400122B")]
		Employed = 2,
		[Token(Token = "0x400122C")]
		OwnsCar = 4,
		[Token(Token = "0x400122D")]
		DrivingWorkCar = 8
	}

	[Token(Token = "0x2000288")]
	public struct CitizenData
	{
		[Token(Token = "0x400122E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public CitizenState state;

		[Token(Token = "0x400122F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
		public CitizenFlags flags;

		[Token(Token = "0x4001230")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2")]
		public byte homeX;

		[Token(Token = "0x4001231")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3")]
		public byte homeY;

		[Token(Token = "0x4001232")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public byte workX;

		[Token(Token = "0x4001233")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5")]
		public byte workY;

		[Token(Token = "0x4001234")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6")]
		public ushort timer;

		[Token(Token = "0x4001235")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public short commuteDistance;

		[Token(Token = "0x60013F3")]
		[Address(RVA = "0x7225F4", Offset = "0x7225F4", VA = "0x7225F4")]
		public void Init()
		{
		}

		[Token(Token = "0x60013F4")]
		[Address(RVA = "0x722600", Offset = "0x722600", VA = "0x722600")]
		public BuildingInstance GetHomeBuilding(City city)
		{
			return null;
		}

		[Token(Token = "0x60013F5")]
		[Address(RVA = "0x722608", Offset = "0x722608", VA = "0x722608")]
		public void SetHomeBuilding(BuildingInstance building)
		{
		}

		[Token(Token = "0x60013F6")]
		[Address(RVA = "0x722648", Offset = "0x722648", VA = "0x722648")]
		public BuildingInstance GetWorkBuilding(City city)
		{
			return null;
		}

		[Token(Token = "0x60013F7")]
		[Address(RVA = "0x722650", Offset = "0x722650", VA = "0x722650")]
		public void SetWorkBuilding(BuildingInstance building)
		{
		}
	}

	[Token(Token = "0x2000289")]
	public class CitizenSaveData : SaveSystem.ModuleData
	{
		[Token(Token = "0x4001236")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public CitizenData[] citizens;

		[Token(Token = "0x4001237")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int numHomelessCitizens;

		[Token(Token = "0x60013F8")]
		[Address(RVA = "0x111B000", Offset = "0x111B000", VA = "0x111B000")]
		public CitizenSaveData()
		{
		}
	}

	[Token(Token = "0x200028A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6A7C84", Offset = "0x6A7C84")]
	private sealed class <Simulate>d__47 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001238")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001239")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400123A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float deltaTime;

		[Token(Token = "0x400123B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public CitizenManager <>4__this;

		[Token(Token = "0x400123C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private short <index>5__2;

		[Token(Token = "0x400123D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private int <updatesLeft>5__3;

		[Token(Token = "0x400123E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private ushort <timerTicks>5__4;

		[Token(Token = "0x400123F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private int <homelessCitizenCount>5__5;

		[Token(Token = "0x4001240")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private int <homedCitizensCount>5__6;

		[Token(Token = "0x4001241")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private int <employedCitizensCount>5__7;

		[Token(Token = "0x17000335")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60013FC")]
			[Address(RVA = "0x111C5FC", Offset = "0x111C5FC", VA = "0x111C5FC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000336")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60013FE")]
			[Address(RVA = "0x111C664", Offset = "0x111C664", VA = "0x111C664", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60013F9")]
		[Address(RVA = "0x111A2B4", Offset = "0x111A2B4", VA = "0x111A2B4")]
		[DebuggerHidden]
		public <Simulate>d__47(int <>1__state)
		{
		}

		[Token(Token = "0x60013FA")]
		[Address(RVA = "0x111B1D0", Offset = "0x111B1D0", VA = "0x111B1D0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60013FB")]
		[Address(RVA = "0x111B1D4", Offset = "0x111B1D4", VA = "0x111B1D4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60013FD")]
		[Address(RVA = "0x111C604", Offset = "0x111C604", VA = "0x111C604", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000137")]
	private const int MaxCitizens = 65536;

	[Token(Token = "0x4000138")]
	private const int CitizensPerUpdate = 2000;

	[Token(Token = "0x4000139")]
	private const int TimerTicksPerSecond = 30;

	[Token(Token = "0x400013A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int ResidenceSearchTimeSeconds;

	[Token(Token = "0x400013B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int EmploymentSearchTimeSeconds;

	[Token(Token = "0x400013C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int TileTraversalTimeSeconds;

	[Token(Token = "0x400013D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public int WorkTimeSeconds;

	[Token(Token = "0x400013E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public int RestTimeSeconds;

	[Token(Token = "0x400013F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public int VehicleJourneyWaitTimeSeconds;

	[Token(Token = "0x4000140")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int numActiveCitizens;

	[Token(Token = "0x4000141")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private int numAllocatedCitizens;

	[Token(Token = "0x4000142")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6A886C", Offset = "0x6A886C")]
	private int <numHomelessCitizens>k__BackingField;

	[Token(Token = "0x4000143")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6A887C", Offset = "0x6A887C")]
	private int <numHomedCitizens>k__BackingField;

	[Token(Token = "0x4000144")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6A888C", Offset = "0x6A888C")]
	private int <numEmployedCitizens>k__BackingField;

	[Token(Token = "0x4000145")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private CitizenData[] citizens;

	[Token(Token = "0x4000146")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool debugShowCommutes;

	[Token(Token = "0x17000044")]
	private ushort ResidenceSearchTime
	{
		[Token(Token = "0x6000194")]
		[Address(RVA = "0x1119D44", Offset = "0x1119D44", VA = "0x1119D44")]
		get
		{
			return default(ushort);
		}
	}

	[Token(Token = "0x17000045")]
	private ushort EmploymentSearchTime
	{
		[Token(Token = "0x6000195")]
		[Address(RVA = "0x1119D54", Offset = "0x1119D54", VA = "0x1119D54")]
		get
		{
			return default(ushort);
		}
	}

	[Token(Token = "0x17000046")]
	private int TileTraversalTime
	{
		[Token(Token = "0x6000196")]
		[Address(RVA = "0x1119D64", Offset = "0x1119D64", VA = "0x1119D64")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000047")]
	private ushort WorkTime
	{
		[Token(Token = "0x6000197")]
		[Address(RVA = "0x1119D74", Offset = "0x1119D74", VA = "0x1119D74")]
		get
		{
			return default(ushort);
		}
	}

	[Token(Token = "0x17000048")]
	private ushort RestTime
	{
		[Token(Token = "0x6000198")]
		[Address(RVA = "0x1119D84", Offset = "0x1119D84", VA = "0x1119D84")]
		get
		{
			return default(ushort);
		}
	}

	[Token(Token = "0x17000049")]
	private ushort VehicleJourneyWaitTime
	{
		[Token(Token = "0x6000199")]
		[Address(RVA = "0x1119D94", Offset = "0x1119D94", VA = "0x1119D94")]
		get
		{
			return default(ushort);
		}
	}

	[Token(Token = "0x1700004A")]
	public int numHomelessCitizens
	{
		[Token(Token = "0x600019A")]
		[Address(RVA = "0x1119DA4", Offset = "0x1119DA4", VA = "0x1119DA4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6ADBC4", Offset = "0x6ADBC4")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x600019B")]
		[Address(RVA = "0x1119DAC", Offset = "0x1119DAC", VA = "0x1119DAC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6ADBD4", Offset = "0x6ADBD4")]
		private set
		{
		}
	}

	[Token(Token = "0x1700004B")]
	public int numHomedCitizens
	{
		[Token(Token = "0x600019C")]
		[Address(RVA = "0x1119DB4", Offset = "0x1119DB4", VA = "0x1119DB4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6ADBE4", Offset = "0x6ADBE4")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x600019D")]
		[Address(RVA = "0x1119DBC", Offset = "0x1119DBC", VA = "0x1119DBC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6ADBF4", Offset = "0x6ADBF4")]
		private set
		{
		}
	}

	[Token(Token = "0x1700004C")]
	public int numEmployedCitizens
	{
		[Token(Token = "0x600019E")]
		[Address(RVA = "0x1119DC4", Offset = "0x1119DC4", VA = "0x1119DC4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6ADC04", Offset = "0x6ADC04")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x600019F")]
		[Address(RVA = "0x1119DCC", Offset = "0x1119DCC", VA = "0x1119DCC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6ADC14", Offset = "0x6ADC14")]
		private set
		{
		}
	}

	[Token(Token = "0x1700004D")]
	public int populationCount
	{
		[Token(Token = "0x60001A0")]
		[Address(RVA = "0x1119DD4", Offset = "0x1119DD4", VA = "0x1119DD4")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x1700004E")]
	public override Type saveModuleDataType
	{
		[Token(Token = "0x60001AD")]
		[Address(RVA = "0x111AEF4", Offset = "0x111AEF4", VA = "0x111AEF4", Slot = "4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60001A1")]
	[Address(RVA = "0x1119DDC", Offset = "0x1119DDC", VA = "0x1119DDC")]
	private void Start()
	{
	}

	[Token(Token = "0x60001A2")]
	[Address(RVA = "0x1119DE0", Offset = "0x1119DE0", VA = "0x1119DE0", Slot = "10")]
	public override void OnResetProgress()
	{
	}

	[Token(Token = "0x60001A3")]
	[Address(RVA = "0x1119E5C", Offset = "0x1119E5C", VA = "0x1119E5C")]
	public float CalculateCitizenHappiness()
	{
		return default(float);
	}

	[Token(Token = "0x60001A4")]
	[Address(RVA = "0x111A0D0", Offset = "0x111A0D0", VA = "0x111A0D0")]
	private int AddCitizen()
	{
		return default(int);
	}

	[Token(Token = "0x60001A5")]
	[Address(RVA = "0x111A188", Offset = "0x111A188", VA = "0x111A188")]
	private void RemoveCitizen(int index)
	{
	}

	[Token(Token = "0x60001A6")]
	[Address(RVA = "0x111A234", Offset = "0x111A234", VA = "0x111A234", Slot = "11")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6ADC24", Offset = "0x6ADC24")]
	public IEnumerator Simulate(float deltaTime)
	{
		return null;
	}

	[Token(Token = "0x60001A7")]
	[Address(RVA = "0x111A2E0", Offset = "0x111A2E0", VA = "0x111A2E0")]
	private BuildingInstance SearchForResidence()
	{
		return null;
	}

	[Token(Token = "0x60001A8")]
	[Address(RVA = "0x111A440", Offset = "0x111A440", VA = "0x111A440")]
	private bool TrySwapJobs()
	{
		return default(bool);
	}

	[Token(Token = "0x60001A9")]
	[Address(RVA = "0x111A8BC", Offset = "0x111A8BC", VA = "0x111A8BC")]
	private bool SearchForJob(short index)
	{
		return default(bool);
	}

	[Token(Token = "0x60001AA")]
	[Address(RVA = "0x111ABE8", Offset = "0x111ABE8", VA = "0x111ABE8")]
	public bool IsEmployed(CitizenId id)
	{
		return default(bool);
	}

	[Token(Token = "0x60001AB")]
	[Address(RVA = "0x111AC64", Offset = "0x111AC64", VA = "0x111AC64")]
	public CitizenData GetCitizenDataCopy(CitizenId id)
	{
		return default(CitizenData);
	}

	[Token(Token = "0x60001AC")]
	[Address(RVA = "0x111ACAC", Offset = "0x111ACAC", VA = "0x111ACAC")]
	public void OnDemolishedBuilding(BuildingInstance building)
	{
	}

	[Token(Token = "0x60001AE")]
	[Address(RVA = "0x111AF64", Offset = "0x111AF64", VA = "0x111AF64", Slot = "5")]
	public override SaveSystem.ModuleData OnSave()
	{
		return null;
	}

	[Token(Token = "0x60001AF")]
	[Address(RVA = "0x111B008", Offset = "0x111B008", VA = "0x111B008", Slot = "6")]
	public override void OnLoad(SaveSystem.SaveGame saveGame, SaveSystem.ModuleData data)
	{
	}

	[Token(Token = "0x60001B0")]
	[Address(RVA = "0x111B14C", Offset = "0x111B14C", VA = "0x111B14C", Slot = "13")]
	public void OnDebugPanel()
	{
	}

	[Token(Token = "0x60001B1")]
	[Address(RVA = "0x111B150", Offset = "0x111B150", VA = "0x111B150")]
	public CitizenManager()
	{
	}

	[SpecialName]
	[Token(Token = "0x60001B2")]
	[Address(RVA = "0x111B1C8", Offset = "0x111B1C8", VA = "0x111B1C8", Slot = "12")]
	private GameObject ISimulationModule.get_gameObject()
	{
		return null;
	}
}
[Token(Token = "0x2000026")]
public class City : MonoBehaviour
{
	[Token(Token = "0x200028B")]
	public class CitySaveData : SaveSystem.ModuleData
	{
		[Token(Token = "0x4001242")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<SaveSystem.ModuleData> moduleSaveData;

		[Token(Token = "0x4001243")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string cityInfoFile;

		[Token(Token = "0x4001244")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool isLocked;

		[Token(Token = "0x4001245")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		public bool hasVisitedYet;

		[Token(Token = "0x4001246")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A")]
		public bool hasSeaportSpawned;

		[Token(Token = "0x4001247")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2B")]
		public bool isCompleted;

		[Token(Token = "0x4001248")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public int completionOrder;

		[Token(Token = "0x60013FF")]
		[Address(RVA = "0x111F180", Offset = "0x111F180", VA = "0x111F180", Slot = "4")]
		public override void OnPreWrite()
		{
		}

		[Token(Token = "0x6001400")]
		[Address(RVA = "0x111CE50", Offset = "0x111CE50", VA = "0x111CE50")]
		public CitySaveData()
		{
		}
	}

	[Token(Token = "0x200028C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6A7C94", Offset = "0x6A7C94")]
	private sealed class <LoadLandscape>d__59 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001249")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400124A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400124B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public City <>4__this;

		[Token(Token = "0x400124C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool <skipSimplifyStep>5__2;

		[Token(Token = "0x400124D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private ResourceRequest <loadRequest>5__3;

		[Token(Token = "0x17000337")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001404")]
			[Address(RVA = "0x111E4A4", Offset = "0x111E4A4", VA = "0x111E4A4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000338")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001406")]
			[Address(RVA = "0x111E50C", Offset = "0x111E50C", VA = "0x111E50C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001401")]
		[Address(RVA = "0x111CAC0", Offset = "0x111CAC0", VA = "0x111CAC0")]
		[DebuggerHidden]
		public <LoadLandscape>d__59(int <>1__state)
		{
		}

		[Token(Token = "0x6001402")]
		[Address(RVA = "0x111DF80", Offset = "0x111DF80", VA = "0x111DF80", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001403")]
		[Address(RVA = "0x111DF84", Offset = "0x111DF84", VA = "0x111DF84", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001405")]
		[Address(RVA = "0x111E4AC", Offset = "0x111E4AC", VA = "0x111E4AC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200028D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6A7CA4", Offset = "0x6A7CA4")]
	private sealed class <InitRoutine>d__61 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400124E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400124F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001250")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public City <>4__this;

		[Token(Token = "0x4001251")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private IEnumerator <landscapeLoadProgress>5__2;

		[Token(Token = "0x4001252")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private ResourceRequest <loadRequest>5__3;

		[Token(Token = "0x4001253")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private List<CityModule>.Enumerator <>7__wrap3;

		[Token(Token = "0x17000339")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600140C")]
			[Address(RVA = "0x111DF10", Offset = "0x111DF10", VA = "0x111DF10", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700033A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600140E")]
			[Address(RVA = "0x111DF78", Offset = "0x111DF78", VA = "0x111DF78", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001407")]
		[Address(RVA = "0x111CC2C", Offset = "0x111CC2C", VA = "0x111CC2C")]
		[DebuggerHidden]
		public <InitRoutine>d__61(int <>1__state)
		{
		}

		[Token(Token = "0x6001408")]
		[Address(RVA = "0x111D9B0", Offset = "0x111D9B0", VA = "0x111D9B0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001409")]
		[Address(RVA = "0x111DA98", Offset = "0x111DA98", VA = "0x111DA98", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600140A")]
		[Address(RVA = "0x111D9E8", Offset = "0x111D9E8", VA = "0x111D9E8")]
		private void <>m__Finally1()
		{
		}

		[Token(Token = "0x600140B")]
		[Address(RVA = "0x111DA40", Offset = "0x111DA40", VA = "0x111DA40")]
		private void <>m__Finally2()
		{
		}

		[Token(Token = "0x600140D")]
		[Address(RVA = "0x111DF18", Offset = "0x111DF18", VA = "0x111DF18", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200028E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6A7CB4", Offset = "0x6A7CB4")]
	private sealed class <>c__DisplayClass64_0
	{
		[Token(Token = "0x4001254")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public SaveSystem.ModuleData saveData;

		[Token(Token = "0x600140F")]
		[Address(RVA = "0x111D8F8", Offset = "0x111D8F8", VA = "0x111D8F8")]
		public <>c__DisplayClass64_0()
		{
		}

		[Token(Token = "0x6001410")]
		[Address(RVA = "0x111D900", Offset = "0x111D900", VA = "0x111D900")]
		internal bool <OnLoadAsync>b__0(CityModule x)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x200028F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6A7CC4", Offset = "0x6A7CC4")]
	private sealed class <OnLoadAsync>d__64 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001255")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001256")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001257")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public City <>4__this;

		[Token(Token = "0x4001258")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public CitySaveData data;

		[Token(Token = "0x4001259")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public SaveSystem.SaveGame saveGame;

		[Token(Token = "0x400125A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private IEnumerator <initProgress>5__2;

		[Token(Token = "0x400125B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private List<SaveSystem.ModuleData>.Enumerator <>7__wrap2;

		[Token(Token = "0x400125C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private List<CityModule>.Enumerator <>7__wrap3;

		[Token(Token = "0x1700033B")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001416")]
			[Address(RVA = "0x111EC7C", Offset = "0x111EC7C", VA = "0x111EC7C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700033C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001418")]
			[Address(RVA = "0x111ECE4", Offset = "0x111ECE4", VA = "0x111ECE4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001411")]
		[Address(RVA = "0x111CF4C", Offset = "0x111CF4C", VA = "0x111CF4C")]
		[DebuggerHidden]
		public <OnLoadAsync>d__64(int <>1__state)
		{
		}

		[Token(Token = "0x6001412")]
		[Address(RVA = "0x111E514", Offset = "0x111E514", VA = "0x111E514", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001413")]
		[Address(RVA = "0x111E5FC", Offset = "0x111E5FC", VA = "0x111E5FC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001414")]
		[Address(RVA = "0x111E54C", Offset = "0x111E54C", VA = "0x111E54C")]
		private void <>m__Finally1()
		{
		}

		[Token(Token = "0x6001415")]
		[Address(RVA = "0x111E5A4", Offset = "0x111E5A4", VA = "0x111E5A4")]
		private void <>m__Finally2()
		{
		}

		[Token(Token = "0x6001417")]
		[Address(RVA = "0x111EC84", Offset = "0x111EC84", VA = "0x111EC84", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000290")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6A7CD4", Offset = "0x6A7CD4")]
	private sealed class <ResetRoutine>d__69 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400125D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400125E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400125F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public City <>4__this;

		[Token(Token = "0x4001260")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private List<CityModule>.Enumerator <>7__wrap1;

		[Token(Token = "0x1700033D")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600141D")]
			[Address(RVA = "0x111F110", Offset = "0x111F110", VA = "0x111F110", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700033E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600141F")]
			[Address(RVA = "0x111F178", Offset = "0x111F178", VA = "0x111F178", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001419")]
		[Address(RVA = "0x111D870", Offset = "0x111D870", VA = "0x111D870")]
		[DebuggerHidden]
		public <ResetRoutine>d__69(int <>1__state)
		{
		}

		[Token(Token = "0x600141A")]
		[Address(RVA = "0x111ECEC", Offset = "0x111ECEC", VA = "0x111ECEC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600141B")]
		[Address(RVA = "0x111ED60", Offset = "0x111ED60", VA = "0x111ED60", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600141C")]
		[Address(RVA = "0x111ED08", Offset = "0x111ED08", VA = "0x111ED08")]
		private void <>m__Finally1()
		{
		}

		[Token(Token = "0x600141E")]
		[Address(RVA = "0x111F118", Offset = "0x111F118", VA = "0x111F118", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000147")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static City current;

	[Token(Token = "0x4000148")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6A889C", Offset = "0x6A889C")]
	private List<CityModule> <modules>k__BackingField;

	[Token(Token = "0x4000149")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public RoadManager roadManager;

	[Token(Token = "0x400014A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public BuildingManager buildingManager;

	[Token(Token = "0x400014B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GroundMap groundMap;

	[Token(Token = "0x400014C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ZoneManager zoneManager;

	[Token(Token = "0x400014D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public CarManager carManager;

	[Token(Token = "0x400014E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public UtilityManager utilityManager;

	[Token(Token = "0x400014F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public CitizenManager citizenManager;

	[Token(Token = "0x4000150")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public CityServiceManager cityServiceManager;

	[Token(Token = "0x4000151")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public ImpostorGenerator impostorGenerator;

	[Token(Token = "0x4000152")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public BuildingBadgeManager badgeManager;

	[Token(Token = "0x4000153")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public InfluenceMapManager influenceMaps;

	[Token(Token = "0x4000154")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public ZoneDemandManager zoneDemandManager;

	[Token(Token = "0x4000155")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public ZoneConstructionManager zoneConstructionManager;

	[Token(Token = "0x4000156")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public SimpleShadow shadow;

	[Token(Token = "0x4000157")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public CarSpaceMap carSpaceMap;

	[Token(Token = "0x4000158")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public EmergencyDispatchManager emergencyDispatchManager;

	[Token(Token = "0x4000159")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public EmergencyIncidentManager emergencyIncidentManager;

	[Token(Token = "0x400015A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public PropManager propManager;

	[Token(Token = "0x400015B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public CityBoundaryLines boundaryLines;

	[Token(Token = "0x400015C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public SeaTrafficManager seaTrafficManager;

	[Token(Token = "0x400015D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public RegionManager regionManager;

	[Token(Token = "0x400015E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public HintManager hintManager;

	[Token(Token = "0x400015F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public HappinessManager happinessManager;

	[Token(Token = "0x4000160")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public MilestoneManager milestoneManager;

	[Token(Token = "0x4000161")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public BridgeManager bridgeManager;

	[Token(Token = "0x4000162")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public BudgetManager budgetManager;

	[Token(Token = "0x4000163")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public SimulationScheduler simulationScheduler;

	[Token(Token = "0x4000164")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public UndoSystem undo;

	[Token(Token = "0x4000165")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public PlantBoxManager plantBoxManager;

	[Token(Token = "0x4000166")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	public MiniStoryManager miniStoryManager;

	[Token(Token = "0x4000167")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	public BirdManager birdManager;

	[Token(Token = "0x4000168")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6A88AC", Offset = "0x6A88AC")]
	private CustomLandscape <landscape>k__BackingField;

	[Token(Token = "0x4000169")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	public string cityInfoFile;

	[Token(Token = "0x400016A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6A88BC", Offset = "0x6A88BC")]
	private CityInfo <cityInfo>k__BackingField;

	[Token(Token = "0x400016B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6A88CC", Offset = "0x6A88CC")]
	private WorldMapCity <worldMapCity>k__BackingField;

	[Token(Token = "0x400016C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	public bool isMenuRoomCity;

	[Token(Token = "0x1700004F")]
	public List<CityModule> modules
	{
		[Token(Token = "0x60001B3")]
		[Address(RVA = "0x111C674", Offset = "0x111C674", VA = "0x111C674")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6ADC88", Offset = "0x6ADC88")]
		get
		{
			return null;
		}
		[Token(Token = "0x60001B4")]
		[Address(RVA = "0x111C67C", Offset = "0x111C67C", VA = "0x111C67C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6ADC98", Offset = "0x6ADC98")]
		private set
		{
		}
	}

	[Token(Token = "0x17000050")]
	public CustomLandscape landscape
	{
		[Token(Token = "0x60001B5")]
		[Address(RVA = "0x111C684", Offset = "0x111C684", VA = "0x111C684")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6ADCA8", Offset = "0x6ADCA8")]
		get
		{
			return null;
		}
		[Token(Token = "0x60001B6")]
		[Address(RVA = "0x111C68C", Offset = "0x111C68C", VA = "0x111C68C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6ADCB8", Offset = "0x6ADCB8")]
		private set
		{
		}
	}

	[Token(Token = "0x17000051")]
	public CityInfo cityInfo
	{
		[Token(Token = "0x60001B7")]
		[Address(RVA = "0x111C694", Offset = "0x111C694", VA = "0x111C694")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6ADCC8", Offset = "0x6ADCC8")]
		get
		{
			return null;
		}
		[Token(Token = "0x60001B8")]
		[Address(RVA = "0x111C69C", Offset = "0x111C69C", VA = "0x111C69C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6ADCD8", Offset = "0x6ADCD8")]
		private set
		{
		}
	}

	[Token(Token = "0x17000052")]
	public string analyticsName
	{
		[Token(Token = "0x60001B9")]
		[Address(RVA = "0x111C6A4", Offset = "0x111C6A4", VA = "0x111C6A4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000053")]
	public int mapWidth
	{
		[Token(Token = "0x60001BA")]
		[Address(RVA = "0x111C6AC", Offset = "0x111C6AC", VA = "0x111C6AC")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000054")]
	public int mapHeight
	{
		[Token(Token = "0x60001BB")]
		[Address(RVA = "0x111C6C8", Offset = "0x111C6C8", VA = "0x111C6C8")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000055")]
	public WorldMapCity worldMapCity
	{
		[Token(Token = "0x60001BC")]
		[Address(RVA = "0x111C6E4", Offset = "0x111C6E4", VA = "0x111C6E4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6ADCE8", Offset = "0x6ADCE8")]
		get
		{
			return null;
		}
		[Token(Token = "0x60001BD")]
		[Address(RVA = "0x111C6EC", Offset = "0x111C6EC", VA = "0x111C6EC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6ADCF8", Offset = "0x6ADCF8")]
		set
		{
		}
	}

	[Token(Token = "0x60001BE")]
	[Address(RVA = "0x111C6F4", Offset = "0x111C6F4", VA = "0x111C6F4")]
	private void Awake()
	{
	}

	[Token(Token = "0x60001BF")]
	[Address(RVA = "0x111C784", Offset = "0x111C784", VA = "0x111C784")]
	public void InitShadowCasterPosition()
	{
	}

	[Token(Token = "0x60001C0")]
	[Address(RVA = "0x111C880", Offset = "0x111C880", VA = "0x111C880")]
	private void Start()
	{
	}

	[Token(Token = "0x60001C1")]
	[Address(RVA = "0x111CA50", Offset = "0x111CA50", VA = "0x111CA50")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6ADD08", Offset = "0x6ADD08")]
	private IEnumerator LoadLandscape()
	{
		return null;
	}

	[Token(Token = "0x60001C2")]
	[Address(RVA = "0x111CAEC", Offset = "0x111CAEC", VA = "0x111CAEC")]
	public void Init(string inCityInfo)
	{
	}

	[Token(Token = "0x60001C3")]
	[Address(RVA = "0x111CBBC", Offset = "0x111CBBC", VA = "0x111CBBC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6ADD6C", Offset = "0x6ADD6C")]
	public IEnumerator InitRoutine()
	{
		return null;
	}

	[Token(Token = "0x60001C4")]
	[Address(RVA = "0x111CC58", Offset = "0x111CC58", VA = "0x111CC58", Slot = "4")]
	public virtual CitySaveData OnSave()
	{
		return null;
	}

	[Token(Token = "0x60001C5")]
	[Address(RVA = "0x111CEC8", Offset = "0x111CEC8", VA = "0x111CEC8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6ADDD0", Offset = "0x6ADDD0")]
	public IEnumerator OnLoadAsync(SaveSystem.SaveGame saveGame, CitySaveData data)
	{
		return null;
	}

	[Token(Token = "0x60001C6")]
	[Address(RVA = "0x111CF78", Offset = "0x111CF78", VA = "0x111CF78")]
	public void SetTrackSelection()
	{
	}

	[Token(Token = "0x60001C7")]
	[Address(RVA = "0x111D198", Offset = "0x111D198", VA = "0x111D198")]
	public void GeneratePlayerStartingPosition(out Vector3 position, out Quaternion rotation, out Vector3 scale)
	{
	}

	[Token(Token = "0x60001C8")]
	[Address(RVA = "0x111D468", Offset = "0x111D468", VA = "0x111D468")]
	public void ResetProgress()
	{
	}

	[Token(Token = "0x60001C9")]
	[Address(RVA = "0x111D764", Offset = "0x111D764", VA = "0x111D764")]
	public Coroutine ResetAsync()
	{
		return null;
	}

	[Token(Token = "0x60001CA")]
	[Address(RVA = "0x111D800", Offset = "0x111D800", VA = "0x111D800")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6ADE34", Offset = "0x6ADE34")]
	private IEnumerator ResetRoutine()
	{
		return null;
	}

	[Token(Token = "0x60001CB")]
	[Address(RVA = "0x111D89C", Offset = "0x111D89C", VA = "0x111D89C")]
	public City()
	{
	}
}
[Token(Token = "0x2000027")]
public abstract class CityModule : MonoBehaviour
{
	[Token(Token = "0x400016D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private City cachedCity;

	[Token(Token = "0x17000056")]
	public City city
	{
		[Token(Token = "0x60001CD")]
		[Address(RVA = "0x1119F8C", Offset = "0x1119F8C", VA = "0x1119F8C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000057")]
	public int mapWidth
	{
		[Token(Token = "0x60001CE")]
		[Address(RVA = "0x1115744", Offset = "0x1115744", VA = "0x1115744")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000058")]
	public int mapHeight
	{
		[Token(Token = "0x60001CF")]
		[Address(RVA = "0x111576C", Offset = "0x111576C", VA = "0x111576C")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000059")]
	public RoadManager roadManager
	{
		[Token(Token = "0x60001D0")]
		[Address(RVA = "0x1123188", Offset = "0x1123188", VA = "0x1123188")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700005A")]
	public BuildingManager buildingManager
	{
		[Token(Token = "0x60001D1")]
		[Address(RVA = "0x111A420", Offset = "0x111A420", VA = "0x111A420")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700005B")]
	public GroundMap groundMap
	{
		[Token(Token = "0x60001D2")]
		[Address(RVA = "0x1115898", Offset = "0x1115898", VA = "0x1115898")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700005C")]
	public ZoneManager zoneManager
	{
		[Token(Token = "0x60001D3")]
		[Address(RVA = "0x11231A8", Offset = "0x11231A8", VA = "0x11231A8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700005D")]
	public CarManager carManager
	{
		[Token(Token = "0x60001D4")]
		[Address(RVA = "0x111C5BC", Offset = "0x111C5BC", VA = "0x111C5BC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700005E")]
	public UtilityManager utilityManager
	{
		[Token(Token = "0x60001D5")]
		[Address(RVA = "0x11231C8", Offset = "0x11231C8", VA = "0x11231C8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700005F")]
	public CitizenManager citizenManager
	{
		[Token(Token = "0x60001D6")]
		[Address(RVA = "0x11231E8", Offset = "0x11231E8", VA = "0x11231E8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000060")]
	public CityServiceManager cityServiceManager
	{
		[Token(Token = "0x60001D7")]
		[Address(RVA = "0x1123208", Offset = "0x1123208", VA = "0x1123208")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000061")]
	public ImpostorGenerator impostorGenerator
	{
		[Token(Token = "0x60001D8")]
		[Address(RVA = "0x1123228", Offset = "0x1123228", VA = "0x1123228")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000062")]
	public BuildingBadgeManager badgeManager
	{
		[Token(Token = "0x60001D9")]
		[Address(RVA = "0x1123248", Offset = "0x1123248", VA = "0x1123248")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000063")]
	public InfluenceMapManager influenceMaps
	{
		[Token(Token = "0x60001DA")]
		[Address(RVA = "0x1123268", Offset = "0x1123268", VA = "0x1123268")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000064")]
	public ZoneDemandManager zoneDemandManager
	{
		[Token(Token = "0x60001DB")]
		[Address(RVA = "0x111C5DC", Offset = "0x111C5DC", VA = "0x111C5DC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000065")]
	public ZoneConstructionManager zoneConstructionManager
	{
		[Token(Token = "0x60001DC")]
		[Address(RVA = "0x1123288", Offset = "0x1123288", VA = "0x1123288")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000066")]
	public SimpleShadow shadow
	{
		[Token(Token = "0x60001DD")]
		[Address(RVA = "0x11232A8", Offset = "0x11232A8", VA = "0x11232A8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000067")]
	public CarSpaceMap carSpaceMap
	{
		[Token(Token = "0x60001DE")]
		[Address(RVA = "0x11232C8", Offset = "0x11232C8", VA = "0x11232C8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000068")]
	public EmergencyDispatchManager emergencyDispatchManager
	{
		[Token(Token = "0x60001DF")]
		[Address(RVA = "0x11232E8", Offset = "0x11232E8", VA = "0x11232E8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000069")]
	public EmergencyIncidentManager emergencyIncidentManager
	{
		[Token(Token = "0x60001E0")]
		[Address(RVA = "0x1123308", Offset = "0x1123308", VA = "0x1123308")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700006A")]
	public PropManager propManager
	{
		[Token(Token = "0x60001E1")]
		[Address(RVA = "0x1123328", Offset = "0x1123328", VA = "0x1123328")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700006B")]
	public CityBoundaryLines boundaryLines
	{
		[Token(Token = "0x60001E2")]
		[Address(RVA = "0x1123348", Offset = "0x1123348", VA = "0x1123348")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700006C")]
	public SeaTrafficManager seaTrafficManager
	{
		[Token(Token = "0x60001E3")]
		[Address(RVA = "0x1123368", Offset = "0x1123368", VA = "0x1123368")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700006D")]
	public RegionManager regionManager
	{
		[Token(Token = "0x60001E4")]
		[Address(RVA = "0x111F678", Offset = "0x111F678", VA = "0x111F678")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700006E")]
	public CustomLandscape landscape
	{
		[Token(Token = "0x60001E5")]
		[Address(RVA = "0x1123388", Offset = "0x1123388", VA = "0x1123388")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700006F")]
	public HintManager hintManager
	{
		[Token(Token = "0x60001E6")]
		[Address(RVA = "0x11233A8", Offset = "0x11233A8", VA = "0x11233A8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000070")]
	public HappinessManager happinessManager
	{
		[Token(Token = "0x60001E7")]
		[Address(RVA = "0x11233C8", Offset = "0x11233C8", VA = "0x11233C8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000071")]
	public MilestoneManager milestoneManager
	{
		[Token(Token = "0x60001E8")]
		[Address(RVA = "0x11233E8", Offset = "0x11233E8", VA = "0x11233E8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000072")]
	public BridgeManager bridgeManager
	{
		[Token(Token = "0x60001E9")]
		[Address(RVA = "0x1123408", Offset = "0x1123408", VA = "0x1123408")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000073")]
	public BudgetManager budgetManager
	{
		[Token(Token = "0x60001EA")]
		[Address(RVA = "0x1123428", Offset = "0x1123428", VA = "0x1123428")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000074")]
	public SimulationScheduler simulationScheduler
	{
		[Token(Token = "0x60001EB")]
		[Address(RVA = "0x111C59C", Offset = "0x111C59C", VA = "0x111C59C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000075")]
	public UndoSystem undo
	{
		[Token(Token = "0x60001EC")]
		[Address(RVA = "0x1123448", Offset = "0x1123448", VA = "0x1123448")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000076")]
	public PlantBoxManager plantBoxManager
	{
		[Token(Token = "0x60001ED")]
		[Address(RVA = "0x1123468", Offset = "0x1123468", VA = "0x1123468")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000077")]
	public MiniStoryManager miniStoryManager
	{
		[Token(Token = "0x60001EE")]
		[Address(RVA = "0x1123488", Offset = "0x1123488", VA = "0x1123488")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000078")]
	public BirdManager birdManager
	{
		[Token(Token = "0x60001EF")]
		[Address(RVA = "0x11234A8", Offset = "0x11234A8", VA = "0x11234A8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000079")]
	public virtual Type saveModuleDataType
	{
		[Token(Token = "0x60001F0")]
		[Address(RVA = "0x11234C8", Offset = "0x11234C8", VA = "0x11234C8", Slot = "4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60001F1")]
	[Address(RVA = "0x11234D0", Offset = "0x11234D0", VA = "0x11234D0", Slot = "5")]
	public virtual SaveSystem.ModuleData OnSave()
	{
		return null;
	}

	[Token(Token = "0x60001F2")]
	[Address(RVA = "0x11234D8", Offset = "0x11234D8", VA = "0x11234D8", Slot = "6")]
	public virtual void OnLoad(SaveSystem.SaveGame saveGame, SaveSystem.ModuleData data)
	{
	}

	[Token(Token = "0x60001F3")]
	[Address(RVA = "0x11234DC", Offset = "0x11234DC", VA = "0x11234DC", Slot = "7")]
	public virtual void OnPostLoad()
	{
	}

	[Token(Token = "0x60001F4")]
	[Address(RVA = "0x11234E0", Offset = "0x11234E0", VA = "0x11234E0", Slot = "8")]
	public virtual void Init()
	{
	}

	[Token(Token = "0x60001F5")]
	[Address(RVA = "0x11234E4", Offset = "0x11234E4", VA = "0x11234E4", Slot = "9")]
	public virtual void PostInit()
	{
	}

	[Token(Token = "0x60001F6")]
	[Address(RVA = "0x11234E8", Offset = "0x11234E8", VA = "0x11234E8", Slot = "10")]
	public virtual void OnResetProgress()
	{
	}

	[Token(Token = "0x60001F7")]
	[Address(RVA = "0x111607C", Offset = "0x111607C", VA = "0x111607C")]
	protected CityModule()
	{
	}
}
[Token(Token = "0x2000028")]
public class CityBoundaryLines : CityModule
{
	[Token(Token = "0x2000291")]
	private class LineInfo
	{
		[Token(Token = "0x4001261")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int x1;

		[Token(Token = "0x4001262")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int y1;

		[Token(Token = "0x4001263")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int x2;

		[Token(Token = "0x4001264")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int y2;

		[Token(Token = "0x4001265")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool isRegionLine;

		[Token(Token = "0x6001420")]
		[Address(RVA = "0x1120494", Offset = "0x1120494", VA = "0x1120494")]
		public LineInfo(int inX1, int inY1, int inX2, int inY2)
		{
		}
	}

	[Token(Token = "0x2000292")]
	private class TileInfo
	{
		[Token(Token = "0x4001266")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public LineInfo upper;

		[Token(Token = "0x4001267")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public LineInfo left;

		[Token(Token = "0x4001268")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LineInfo upperRegion;

		[Token(Token = "0x4001269")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public LineInfo leftRegion;

		[Token(Token = "0x6001421")]
		[Address(RVA = "0x111F85C", Offset = "0x111F85C", VA = "0x111F85C")]
		public TileInfo()
		{
		}
	}

	[Token(Token = "0x2000293")]
	private class Coord
	{
		[Token(Token = "0x400126A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int x;

		[Token(Token = "0x400126B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int y;

		[Token(Token = "0x6001422")]
		[Address(RVA = "0x111F864", Offset = "0x111F864", VA = "0x111F864")]
		public Coord(int inX, int inY)
		{
		}
	}

	[Token(Token = "0x400016E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float lineWidth;

	[Token(Token = "0x400016F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float hoverHeight;

	[Token(Token = "0x4000170")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private List<Coord> relevantTiles;

	[Token(Token = "0x4000171")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private List<LineInfo> lines;

	[Token(Token = "0x4000172")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private TileInfo[] tiles;

	[Token(Token = "0x60001F8")]
	[Address(RVA = "0x111F27C", Offset = "0x111F27C", VA = "0x111F27C", Slot = "8")]
	public override void Init()
	{
	}

	[Token(Token = "0x60001F9")]
	[Address(RVA = "0x111F5F8", Offset = "0x111F5F8", VA = "0x111F5F8", Slot = "7")]
	public override void OnPostLoad()
	{
	}

	[Token(Token = "0x60001FA")]
	[Address(RVA = "0x111F638", Offset = "0x111F638", VA = "0x111F638")]
	private bool IsUnlocked(int x, int y)
	{
		return default(bool);
	}

	[Token(Token = "0x60001FB")]
	[Address(RVA = "0x111F698", Offset = "0x111F698", VA = "0x111F698")]
	private int RegionCode(int x, int y)
	{
		return default(int);
	}

	[Token(Token = "0x60001FC")]
	[Address(RVA = "0x111F728", Offset = "0x111F728", VA = "0x111F728")]
	private bool IsBuildable(int x, int y)
	{
		return default(bool);
	}

	[Token(Token = "0x60001FD")]
	[Address(RVA = "0x111F7B4", Offset = "0x111F7B4", VA = "0x111F7B4")]
	private bool IsBuiltOn(int x, int y)
	{
		return default(bool);
	}

	[Token(Token = "0x60001FE")]
	[Address(RVA = "0x111F2BC", Offset = "0x111F2BC", VA = "0x111F2BC")]
	private void Generate()
	{
	}

	[Token(Token = "0x60001FF")]
	[Address(RVA = "0x111F89C", Offset = "0x111F89C", VA = "0x111F89C")]
	private void RefreshRelevantTiles()
	{
	}

	[Token(Token = "0x6000200")]
	[Address(RVA = "0x111FE24", Offset = "0x111FE24", VA = "0x111FE24")]
	private void GenerateMesh()
	{
	}

	[Token(Token = "0x6000201")]
	[Address(RVA = "0x111D71C", Offset = "0x111D71C", VA = "0x111D71C")]
	public void Refresh()
	{
	}

	[Token(Token = "0x6000202")]
	[Address(RVA = "0x11204E0", Offset = "0x11204E0", VA = "0x11204E0")]
	public CityBoundaryLines()
	{
	}
}
[Token(Token = "0x2000029")]
public class CityInfo : ScriptableObject
{
	[Token(Token = "0x2000294")]
	[Flags]
	public enum Theme
	{
		[Token(Token = "0x400126D")]
		None = 0,
		[Token(Token = "0x400126E")]
		Tropical = 1,
		[Token(Token = "0x400126F")]
		Desert = 2,
		[Token(Token = "0x4001270")]
		Volcano = 4
	}

	[Serializable]
	[Token(Token = "0x2000295")]
	public class MilestoneReward
	{
		[Token(Token = "0x2000421")]
		public enum Type
		{
			[Token(Token = "0x4001978")]
			BuildingUnlock,
			[Token(Token = "0x4001979")]
			RegionUnlock,
			[Token(Token = "0x400197A")]
			CashReward,
			[Token(Token = "0x400197B")]
			TreePlanting
		}

		[Token(Token = "0x4001271")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Type type;

		[Token(Token = "0x4001272")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public BuildingInfo unlockedBuilding;

		[Token(Token = "0x4001273")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int amount;

		[Token(Token = "0x6001423")]
		[Address(RVA = "0x1120A78", Offset = "0x1120A78", VA = "0x1120A78")]
		public MilestoneReward()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x2000296")]
	public class Milestone
	{
		[Token(Token = "0x4001274")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string name;

		[Token(Token = "0x4001275")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int requiredPopulation;

		[Token(Token = "0x4001276")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<MilestoneReward> rewards;

		[Token(Token = "0x6001424")]
		[Address(RVA = "0x1120A08", Offset = "0x1120A08", VA = "0x1120A08")]
		public Milestone()
		{
		}
	}

	[Token(Token = "0x4000173")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Theme theme;

	[Token(Token = "0x4000174")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string landscapeFile;

	[Token(Token = "0x4000175")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int startingFunds;

	[Token(Token = "0x4000176")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "ReorderableAttribute", RVA = "0x6A88DC", Offset = "0x6A88DC")]
	public List<Milestone> milestones;

	[Token(Token = "0x4000177")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool allowBridges;

	[Token(Token = "0x4000178")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public string displayNameKey;

	[Token(Token = "0x6000203")]
	[Address(RVA = "0x11162E8", Offset = "0x11162E8", VA = "0x11162E8")]
	public static bool IsInTheme(Theme cityTheme, Theme itemTheme)
	{
		return default(bool);
	}

	[Token(Token = "0x6000204")]
	[Address(RVA = "0x11207C4", Offset = "0x11207C4", VA = "0x11207C4")]
	public bool IsBuildingInUnlocks(BuildingInfo building)
	{
		return default(bool);
	}

	[Token(Token = "0x6000205")]
	[Address(RVA = "0x1120990", Offset = "0x1120990", VA = "0x1120990")]
	public CityInfo()
	{
	}
}
[Token(Token = "0x200002A")]
public class CityManager : SingletonBehaviour<CityManager>, ISaveInterface, ILoadAsyncInterface, IDebugPanelProvider
{
	[Token(Token = "0x2000297")]
	public class CityManagerSaveData : SaveSystem.ModuleData
	{
		[Token(Token = "0x4001277")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public City.CitySaveData[] cities;

		[Token(Token = "0x4001278")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int activeCityIndex;

		[Token(Token = "0x4001279")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public List<int> usedCashRewardMessages;

		[Token(Token = "0x6001425")]
		[Address(RVA = "0x1123118", Offset = "0x1123118", VA = "0x1123118", Slot = "4")]
		public override void OnPreWrite()
		{
		}

		[Token(Token = "0x6001426")]
		[Address(RVA = "0x1122B6C", Offset = "0x1122B6C", VA = "0x1122B6C")]
		public CityManagerSaveData()
		{
		}
	}

	[Token(Token = "0x2000298")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6A7CF4", Offset = "0x6A7CF4")]
	private sealed class <InitRoutine>d__19 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400127A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400127B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400127C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CityManager <>4__this;

		[Token(Token = "0x400127D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private City[] <>7__wrap1;

		[Token(Token = "0x400127E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int <>7__wrap2;

		[Token(Token = "0x400127F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private City <city>5__4;

		[Token(Token = "0x4001280")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private IEnumerator <initProgress>5__5;

		[Token(Token = "0x1700033F")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600142A")]
			[Address(RVA = "0x1122E08", Offset = "0x1122E08", VA = "0x1122E08", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000340")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600142C")]
			[Address(RVA = "0x1122E70", Offset = "0x1122E70", VA = "0x1122E70", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001427")]
		[Address(RVA = "0x1121348", Offset = "0x1121348", VA = "0x1121348")]
		[DebuggerHidden]
		public <InitRoutine>d__19(int <>1__state)
		{
		}

		[Token(Token = "0x6001428")]
		[Address(RVA = "0x1122C04", Offset = "0x1122C04", VA = "0x1122C04", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001429")]
		[Address(RVA = "0x1122C08", Offset = "0x1122C08", VA = "0x1122C08", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600142B")]
		[Address(RVA = "0x1122E10", Offset = "0x1122E10", VA = "0x1122E10", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000299")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6A7D04", Offset = "0x6A7D04")]
	private sealed class <OnLoadAsync>d__25 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001281")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001282")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001283")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CityManager <>4__this;

		[Token(Token = "0x4001284")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public SaveSystem.ModuleData data;

		[Token(Token = "0x4001285")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public SaveSystem.SaveGame saveGame;

		[Token(Token = "0x4001286")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private int <n>5__2;

		[Token(Token = "0x4001287")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private IEnumerator <loadProgress>5__3;

		[Token(Token = "0x17000341")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001430")]
			[Address(RVA = "0x11230A8", Offset = "0x11230A8", VA = "0x11230A8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000342")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001432")]
			[Address(RVA = "0x1123110", Offset = "0x1123110", VA = "0x1123110", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600142D")]
		[Address(RVA = "0x1121FFC", Offset = "0x1121FFC", VA = "0x1121FFC")]
		[DebuggerHidden]
		public <OnLoadAsync>d__25(int <>1__state)
		{
		}

		[Token(Token = "0x600142E")]
		[Address(RVA = "0x1122E78", Offset = "0x1122E78", VA = "0x1122E78", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600142F")]
		[Address(RVA = "0x1122E7C", Offset = "0x1122E7C", VA = "0x1122E7C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001431")]
		[Address(RVA = "0x11230B0", Offset = "0x11230B0", VA = "0x11230B0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200029A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6A7D14", Offset = "0x6A7D14")]
	private sealed class <>c__DisplayClass28_0
	{
		[Token(Token = "0x4001288")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public CashRewardMessages.Message message;

		[Token(Token = "0x6001433")]
		[Address(RVA = "0x1122394", Offset = "0x1122394", VA = "0x1122394")]
		public <>c__DisplayClass28_0()
		{
		}

		[Token(Token = "0x6001434")]
		[Address(RVA = "0x1122BE4", Offset = "0x1122BE4", VA = "0x1122BE4")]
		internal bool <MarkCashRewardMessageAsUsed>b__0(CashRewardMessages.Message x)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x200029B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6A7D24", Offset = "0x6A7D24")]
	private sealed class <>c__DisplayClass29_0
	{
		[Token(Token = "0x4001289")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public CashRewardMessages.Message message;

		[Token(Token = "0x6001435")]
		[Address(RVA = "0x11224B4", Offset = "0x11224B4", VA = "0x11224B4")]
		public <>c__DisplayClass29_0()
		{
		}

		[Token(Token = "0x6001436")]
		[Address(RVA = "0x1122BF4", Offset = "0x1122BF4", VA = "0x1122BF4")]
		internal bool <HasUsedCashRewardMessage>b__0(CashRewardMessages.Message x)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x4000179")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public City[] cities;

	[Token(Token = "0x400017A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6A88EC", Offset = "0x6A88EC")]
	private Bounds <currentCityBounds>k__BackingField;

	[Token(Token = "0x400017B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6A88FC", Offset = "0x6A88FC")]
	private Bounds <allCityBounds>k__BackingField;

	[Token(Token = "0x400017C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private CityManagerSaveData saveData;

	[Token(Token = "0x400017D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private List<int> usedCashRewardMessages;

	[Token(Token = "0x1700007A")]
	private Player player
	{
		[Token(Token = "0x6000206")]
		[Address(RVA = "0x11210CC", Offset = "0x11210CC", VA = "0x11210CC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700007B")]
	public Bounds currentCityBounds
	{
		[Token(Token = "0x6000207")]
		[Address(RVA = "0x112111C", Offset = "0x112111C", VA = "0x112111C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6ADE98", Offset = "0x6ADE98")]
		get
		{
			return default(Bounds);
		}
		[Token(Token = "0x6000208")]
		[Address(RVA = "0x1121130", Offset = "0x1121130", VA = "0x1121130")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6ADEA8", Offset = "0x6ADEA8")]
		private set
		{
		}
	}

	[Token(Token = "0x1700007C")]
	public Bounds allCityBounds
	{
		[Token(Token = "0x6000209")]
		[Address(RVA = "0x1121144", Offset = "0x1121144", VA = "0x1121144")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6ADEB8", Offset = "0x6ADEB8")]
		get
		{
			return default(Bounds);
		}
		[Token(Token = "0x600020A")]
		[Address(RVA = "0x1121158", Offset = "0x1121158", VA = "0x1121158")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6ADEC8", Offset = "0x6ADEC8")]
		private set
		{
		}
	}

	[Token(Token = "0x1700007D")]
	public Type saveModuleDataType
	{
		[Token(Token = "0x600020B")]
		[Address(RVA = "0x112116C", Offset = "0x112116C", VA = "0x112116C", Slot = "6")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700007E")]
	public float totalPercentageComplete
	{
		[Token(Token = "0x600020C")]
		[Address(RVA = "0x11211DC", Offset = "0x11211DC", VA = "0x11211DC")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x600020D")]
	[Address(RVA = "0x11212AC", Offset = "0x11212AC", VA = "0x11212AC")]
	public Coroutine InitAsync()
	{
		return null;
	}

	[Token(Token = "0x600020E")]
	[Address(RVA = "0x11212D8", Offset = "0x11212D8", VA = "0x11212D8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6ADED8", Offset = "0x6ADED8")]
	private IEnumerator InitRoutine()
	{
		return null;
	}

	[Token(Token = "0x600020F")]
	[Address(RVA = "0x1121374", Offset = "0x1121374", VA = "0x1121374")]
	private void CalculateBounds()
	{
	}

	[Token(Token = "0x6000210")]
	[Address(RVA = "0x111F030", Offset = "0x111F030", VA = "0x111F030")]
	public void ResaveCityData(City city)
	{
	}

	[Token(Token = "0x6000211")]
	[Address(RVA = "0x11215E0", Offset = "0x11215E0", VA = "0x11215E0")]
	public void SwitchCurrentCity(City city)
	{
	}

	[Token(Token = "0x6000212")]
	[Address(RVA = "0x1121B00", Offset = "0x1121B00", VA = "0x1121B00")]
	public void UpdateSaveDataForCityUnlocks()
	{
	}

	[Token(Token = "0x6000213")]
	[Address(RVA = "0x1121D20", Offset = "0x1121D20", VA = "0x1121D20", Slot = "7")]
	public SaveSystem.ModuleData OnSave()
	{
		return null;
	}

	[Token(Token = "0x6000214")]
	[Address(RVA = "0x1121F78", Offset = "0x1121F78", VA = "0x1121F78", Slot = "9")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6ADF3C", Offset = "0x6ADF3C")]
	public IEnumerator OnLoadAsync(SaveSystem.SaveGame saveGame, SaveSystem.ModuleData data)
	{
		return null;
	}

	[Token(Token = "0x6000215")]
	[Address(RVA = "0x1122028", Offset = "0x1122028", VA = "0x1122028", Slot = "8")]
	public void OnLoad(SaveSystem.SaveGame saveGame, SaveSystem.ModuleData data)
	{
	}

	[Token(Token = "0x6000216")]
	[Address(RVA = "0x1122100", Offset = "0x1122100", VA = "0x1122100")]
	public void OnPostLoadFromMenuRoom()
	{
	}

	[Token(Token = "0x6000217")]
	[Address(RVA = "0x1122248", Offset = "0x1122248", VA = "0x1122248")]
	public void MarkCashRewardMessageAsUsed(CashRewardMessages.Message message)
	{
	}

	[Token(Token = "0x6000218")]
	[Address(RVA = "0x112239C", Offset = "0x112239C", VA = "0x112239C")]
	public bool HasUsedCashRewardMessage(CashRewardMessages.Message message)
	{
		return default(bool);
	}

	[Token(Token = "0x6000219")]
	[Address(RVA = "0x11224BC", Offset = "0x11224BC", VA = "0x11224BC", Slot = "10")]
	public void OnDebugPanel()
	{
	}

	[Token(Token = "0x600021A")]
	[Address(RVA = "0x1122AD8", Offset = "0x1122AD8", VA = "0x1122AD8")]
	public CityManager()
	{
	}
}
[Token(Token = "0x200002B")]
public class CityServiceManager : CityModule, ISimulationModule, IVisualiserTextureProvider
{
	[Token(Token = "0x200029C")]
	public enum ServiceType
	{
		[Token(Token = "0x400128B")]
		None,
		[Token(Token = "0x400128C")]
		Police,
		[Token(Token = "0x400128D")]
		Fire,
		[Token(Token = "0x400128E")]
		Hospital,
		[Token(Token = "0x400128F")]
		School
	}

	[Token(Token = "0x200029D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6A7D34", Offset = "0x6A7D34")]
	private sealed class <Simulate>d__38 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001290")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001291")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001292")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CityServiceManager <>4__this;

		[Token(Token = "0x4001293")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int <n>5__2;

		[Token(Token = "0x17000343")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600143A")]
			[Address(RVA = "0x11254F4", Offset = "0x11254F4", VA = "0x11254F4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000344")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600143C")]
			[Address(RVA = "0x112555C", Offset = "0x112555C", VA = "0x112555C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001437")]
		[Address(RVA = "0x1124D10", Offset = "0x1124D10", VA = "0x1124D10")]
		[DebuggerHidden]
		public <Simulate>d__38(int <>1__state)
		{
		}

		[Token(Token = "0x6001438")]
		[Address(RVA = "0x1125430", Offset = "0x1125430", VA = "0x1125430", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001439")]
		[Address(RVA = "0x1125434", Offset = "0x1125434", VA = "0x1125434", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600143B")]
		[Address(RVA = "0x11254FC", Offset = "0x11254FC", VA = "0x11254FC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400017E")]
	public const int maxServiceStrength = 50;

	[Token(Token = "0x400017F")]
	public const int numServiceTypes = 4;

	[Token(Token = "0x4000180")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private CityServiceMap[] maps;

	[Token(Token = "0x4000181")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float[] totalCoverageByService;

	[Token(Token = "0x4000182")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private int[] serviceUnlockLevels;

	[Token(Token = "0x4000183")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6A890C", Offset = "0x6A890C")]
	private Texture2D <visualiseTexture>k__BackingField;

	[Token(Token = "0x4000184")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Color32[] textureData;

	[Token(Token = "0x4000185")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool isTextureStateDirty;

	[Token(Token = "0x4000186")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private ServiceType currentVisualisedServiceInternal;

	[Token(Token = "0x4000187")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6A891C", Offset = "0x6A891C")]
	private BuildingInstance <previewBuilding>k__BackingField;

	[Token(Token = "0x4000188")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6A892C", Offset = "0x6A892C")]
	private List<BuildingInstance> <previewBuildingsToDemolish>k__BackingField;

	[Token(Token = "0x4000189")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private bool[] servicePreviewDirty;

	[Token(Token = "0x1700007F")]
	public Texture2D visualiseTexture
	{
		[Token(Token = "0x600021B")]
		[Address(RVA = "0x1123A64", Offset = "0x1123A64", VA = "0x1123A64", Slot = "13")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6ADFA0", Offset = "0x6ADFA0")]
		get
		{
			return null;
		}
		[Token(Token = "0x600021C")]
		[Address(RVA = "0x1123A6C", Offset = "0x1123A6C", VA = "0x1123A6C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6ADFB0", Offset = "0x6ADFB0")]
		private set
		{
		}
	}

	[Token(Token = "0x17000080")]
	public Texture2D secondaryTexture
	{
		[Token(Token = "0x600021D")]
		[Address(RVA = "0x1123A74", Offset = "0x1123A74", VA = "0x1123A74", Slot = "14")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000081")]
	public ServiceType currentVisualisedService
	{
		[Token(Token = "0x600021E")]
		[Address(RVA = "0x1123A7C", Offset = "0x1123A7C", VA = "0x1123A7C")]
		get
		{
			return default(ServiceType);
		}
		[Token(Token = "0x600021F")]
		[Address(RVA = "0x1123A84", Offset = "0x1123A84", VA = "0x1123A84")]
		set
		{
		}
	}

	[Token(Token = "0x17000082")]
	public BuildingInstance previewBuilding
	{
		[Token(Token = "0x6000220")]
		[Address(RVA = "0x1123A94", Offset = "0x1123A94", VA = "0x1123A94")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6ADFC0", Offset = "0x6ADFC0")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000221")]
		[Address(RVA = "0x1123A9C", Offset = "0x1123A9C", VA = "0x1123A9C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6ADFD0", Offset = "0x6ADFD0")]
		private set
		{
		}
	}

	[Token(Token = "0x17000083")]
	public List<BuildingInstance> previewBuildingsToDemolish
	{
		[Token(Token = "0x6000222")]
		[Address(RVA = "0x1123AA4", Offset = "0x1123AA4", VA = "0x1123AA4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6ADFE0", Offset = "0x6ADFE0")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000223")]
		[Address(RVA = "0x1123AAC", Offset = "0x1123AAC", VA = "0x1123AAC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6ADFF0", Offset = "0x6ADFF0")]
		private set
		{
		}
	}

	[Token(Token = "0x6000224")]
	[Address(RVA = "0x1123AB4", Offset = "0x1123AB4", VA = "0x1123AB4")]
	public bool IsServiceUnlocked(ServiceType serviceType, float minUnlockTime = 0f)
	{
		return default(bool);
	}

	[Token(Token = "0x6000225")]
	[Address(RVA = "0x1123B90", Offset = "0x1123B90", VA = "0x1123B90")]
	public CityServiceMap GetMap(ServiceType serviceType)
	{
		return null;
	}

	[Token(Token = "0x6000226")]
	[Address(RVA = "0x1123BDC", Offset = "0x1123BDC", VA = "0x1123BDC")]
	public void OnPlaceBuilding(BuildingInstance newBuilding, bool fromSaveGame)
	{
	}

	[Token(Token = "0x6000227")]
	[Address(RVA = "0x1123D2C", Offset = "0x1123D2C", VA = "0x1123D2C")]
	public void OnDemolishBuilding(BuildingInstance oldBuilding, bool fromSaveGame)
	{
	}

	[Token(Token = "0x6000228")]
	[Address(RVA = "0x1123E88", Offset = "0x1123E88", VA = "0x1123E88")]
	public void EnablePreviewBuildingsToDemolish(List<BuildingInstance> buildingsToDemolish)
	{
	}

	[Token(Token = "0x6000229")]
	[Address(RVA = "0x11242AC", Offset = "0x11242AC", VA = "0x11242AC")]
	private void MarkServicePreviewDirty(ServiceType serviceType)
	{
	}

	[Token(Token = "0x600022A")]
	[Address(RVA = "0x1123EA0", Offset = "0x1123EA0", VA = "0x1123EA0")]
	public void EnablePreviewBuildingPlacement(BuildingInfo info, int x, int y, int rot, List<BuildingInstance> buildingsToDemolish)
	{
	}

	[Token(Token = "0x600022B")]
	[Address(RVA = "0x11242F4", Offset = "0x11242F4", VA = "0x11242F4")]
	public void DisablePreviewBuildingPlacement()
	{
	}

	[Token(Token = "0x600022C")]
	[Address(RVA = "0x1124540", Offset = "0x1124540", VA = "0x1124540", Slot = "7")]
	public override void OnPostLoad()
	{
	}

	[Token(Token = "0x600022D")]
	[Address(RVA = "0x1124814", Offset = "0x1124814", VA = "0x1124814", Slot = "8")]
	public override void Init()
	{
	}

	[Token(Token = "0x600022E")]
	[Address(RVA = "0x1124B34", Offset = "0x1124B34", VA = "0x1124B34", Slot = "10")]
	public override void OnResetProgress()
	{
	}

	[Token(Token = "0x600022F")]
	[Address(RVA = "0x1124CA0", Offset = "0x1124CA0", VA = "0x1124CA0", Slot = "11")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6AE000", Offset = "0x6AE000")]
	public IEnumerator Simulate(float deltaTime)
	{
		return null;
	}

	[Token(Token = "0x6000230")]
	[Address(RVA = "0x1124D3C", Offset = "0x1124D3C", VA = "0x1124D3C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000231")]
	[Address(RVA = "0x1124E28", Offset = "0x1124E28", VA = "0x1124E28", Slot = "16")]
	public void RefreshVisualiseTexture()
	{
	}

	[Token(Token = "0x6000232")]
	[Address(RVA = "0x1124F98", Offset = "0x1124F98", VA = "0x1124F98")]
	public float GetCoverage(ServiceType service, int x, int y)
	{
		return default(float);
	}

	[Token(Token = "0x6000233")]
	[Address(RVA = "0x1125090", Offset = "0x1125090", VA = "0x1125090")]
	public bool HasCoverage(ServiceType service, int x, int y)
	{
		return default(bool);
	}

	[Token(Token = "0x6000234")]
	[Address(RVA = "0x1125144", Offset = "0x1125144", VA = "0x1125144")]
	public bool HasCoverage(ServiceType service, BuildingInstance building)
	{
		return default(bool);
	}

	[Token(Token = "0x6000235")]
	[Address(RVA = "0x1125238", Offset = "0x1125238", VA = "0x1125238")]
	public bool HasCoverageInPreview(ServiceType service, int x, int y)
	{
		return default(bool);
	}

	[Token(Token = "0x6000236")]
	[Address(RVA = "0x11252EC", Offset = "0x11252EC", VA = "0x11252EC")]
	public int GetCoverageCount(ServiceType service, int x, int y)
	{
		return default(int);
	}

	[Token(Token = "0x6000237")]
	[Address(RVA = "0x1125338", Offset = "0x1125338", VA = "0x1125338")]
	public float GetTotalCoverage(ServiceType service)
	{
		return default(float);
	}

	[Token(Token = "0x6000238")]
	[Address(RVA = "0x11246E4", Offset = "0x11246E4", VA = "0x11246E4")]
	private float UpdateServiceCoverage(ServiceType service)
	{
		return default(float);
	}

	[Token(Token = "0x6000239")]
	[Address(RVA = "0x1125378", Offset = "0x1125378", VA = "0x1125378")]
	public CityServiceManager()
	{
	}

	[SpecialName]
	[Token(Token = "0x600023A")]
	[Address(RVA = "0x1125420", Offset = "0x1125420", VA = "0x1125420", Slot = "12")]
	private GameObject ISimulationModule.get_gameObject()
	{
		return null;
	}

	[SpecialName]
	[Token(Token = "0x600023B")]
	[Address(RVA = "0x1125428", Offset = "0x1125428", VA = "0x1125428", Slot = "15")]
	private string IVisualiserTextureProvider.get_name()
	{
		return null;
	}
}
[Token(Token = "0x200002C")]
public class CityServiceMap
{
	[Token(Token = "0x200029E")]
	public class ServiceSource
	{
		[Token(Token = "0x4001294")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int x;

		[Token(Token = "0x4001295")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int y;

		[Token(Token = "0x600143D")]
		[Address(RVA = "0x112563C", Offset = "0x112563C", VA = "0x112563C")]
		public ServiceSource()
		{
		}
	}

	[Token(Token = "0x200029F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6A7D44", Offset = "0x6A7D44")]
	private sealed class <>c__DisplayClass33_0
	{
		[Token(Token = "0x4001296")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int x;

		[Token(Token = "0x4001297")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int y;

		[Token(Token = "0x600143E")]
		[Address(RVA = "0x1125644", Offset = "0x1125644", VA = "0x1125644")]
		public <>c__DisplayClass33_0()
		{
		}

		[Token(Token = "0x600143F")]
		[Address(RVA = "0x1125B34", Offset = "0x1125B34", VA = "0x1125B34")]
		internal bool <RemoveSource>b__0(ServiceSource source)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x20002A0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6A7D54", Offset = "0x6A7D54")]
	private sealed class <UpdateMap>d__36 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001298")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001299")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400129A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public byte[] map;

		[Token(Token = "0x400129B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public CityServiceMap <>4__this;

		[Token(Token = "0x400129C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool isPreview;

		[Token(Token = "0x400129D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private int <n>5__2;

		[Token(Token = "0x17000345")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001443")]
			[Address(RVA = "0x1126238", Offset = "0x1126238", VA = "0x1126238", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000346")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001445")]
			[Address(RVA = "0x11262A0", Offset = "0x11262A0", VA = "0x11262A0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001440")]
		[Address(RVA = "0x1125A6C", Offset = "0x1125A6C", VA = "0x1125A6C")]
		[DebuggerHidden]
		public <UpdateMap>d__36(int <>1__state)
		{
		}

		[Token(Token = "0x6001441")]
		[Address(RVA = "0x1125FE8", Offset = "0x1125FE8", VA = "0x1125FE8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001442")]
		[Address(RVA = "0x1125FEC", Offset = "0x1125FEC", VA = "0x1125FEC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001444")]
		[Address(RVA = "0x1126240", Offset = "0x1126240", VA = "0x1126240", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20002A1")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6A7D64", Offset = "0x6A7D64")]
	private sealed class <SimulateAsync>d__37 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400129E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400129F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40012A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CityServiceMap <>4__this;

		[Token(Token = "0x40012A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private IEnumerator <simulateTask>5__2;

		[Token(Token = "0x17000347")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001449")]
			[Address(RVA = "0x1125F78", Offset = "0x1125F78", VA = "0x1125F78", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000348")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600144B")]
			[Address(RVA = "0x1125FE0", Offset = "0x1125FE0", VA = "0x1125FE0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001446")]
		[Address(RVA = "0x1125B08", Offset = "0x1125B08", VA = "0x1125B08")]
		[DebuggerHidden]
		public <SimulateAsync>d__37(int <>1__state)
		{
		}

		[Token(Token = "0x6001447")]
		[Address(RVA = "0x1125B70", Offset = "0x1125B70", VA = "0x1125B70", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001448")]
		[Address(RVA = "0x1125B74", Offset = "0x1125B74", VA = "0x1125B74", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600144A")]
		[Address(RVA = "0x1125F80", Offset = "0x1125F80", VA = "0x1125F80", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400018A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private CityServiceManager.ServiceType serviceType;

	[Token(Token = "0x400018B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private byte[] workingBuffer;

	[Token(Token = "0x400018C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private byte[] coverageMap;

	[Token(Token = "0x400018D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private byte[] previewCoverageMap;

	[Token(Token = "0x400018E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private byte[] previewPlacementMap;

	[Token(Token = "0x400018F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private List<ServiceSource> sources;

	[Token(Token = "0x4000190")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private CityServiceManager serviceManager;

	[Token(Token = "0x4000191")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private IEnumerator simulationAsyncState;

	[Token(Token = "0x4000192")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6A893C", Offset = "0x6A893C")]
	private bool <isProcessingSimulation>k__BackingField;

	[Token(Token = "0x4000193")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6A894C", Offset = "0x6A894C")]
	private bool <isTextureStateDirty>k__BackingField;

	[Token(Token = "0x17000084")]
	private City city
	{
		[Token(Token = "0x600023C")]
		[Address(RVA = "0x1125564", Offset = "0x1125564", VA = "0x1125564")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000085")]
	private int mapWidth
	{
		[Token(Token = "0x600023D")]
		[Address(RVA = "0x112557C", Offset = "0x112557C", VA = "0x112557C")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000086")]
	private int mapHeight
	{
		[Token(Token = "0x600023E")]
		[Address(RVA = "0x11255AC", Offset = "0x11255AC", VA = "0x11255AC")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000087")]
	public bool isProcessingSimulation
	{
		[Token(Token = "0x600023F")]
		[Address(RVA = "0x11255DC", Offset = "0x11255DC", VA = "0x11255DC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6AE064", Offset = "0x6AE064")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000240")]
		[Address(RVA = "0x11255E4", Offset = "0x11255E4", VA = "0x11255E4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6AE074", Offset = "0x6AE074")]
		private set
		{
		}
	}

	[Token(Token = "0x17000088")]
	public bool isTextureStateDirty
	{
		[Token(Token = "0x6000241")]
		[Address(RVA = "0x11255F0", Offset = "0x11255F0", VA = "0x11255F0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6AE084", Offset = "0x6AE084")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000242")]
		[Address(RVA = "0x11255F8", Offset = "0x11255F8", VA = "0x11255F8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6AE094", Offset = "0x6AE094")]
		private set
		{
		}
	}

	[Token(Token = "0x17000089")]
	private BuildingInstance previewBuilding
	{
		[Token(Token = "0x6000243")]
		[Address(RVA = "0x1125604", Offset = "0x1125604", VA = "0x1125604")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700008A")]
	private List<BuildingInstance> previewBuildingsToDemolish
	{
		[Token(Token = "0x6000244")]
		[Address(RVA = "0x1125620", Offset = "0x1125620", VA = "0x1125620")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000245")]
	[Address(RVA = "0x1124A00", Offset = "0x1124A00", VA = "0x1124A00")]
	public CityServiceMap(CityServiceManager inServiceManager, CityServiceManager.ServiceType serviceType)
	{
	}

	[Token(Token = "0x6000246")]
	[Address(RVA = "0x1124EAC", Offset = "0x1124EAC", VA = "0x1124EAC")]
	public void UpdateVisualiseTexture(Color32[] textureData)
	{
	}

	[Token(Token = "0x6000247")]
	[Address(RVA = "0x1125024", Offset = "0x1125024", VA = "0x1125024")]
	public float CalculateCoverage(int x, int y)
	{
		return default(float);
	}

	[Token(Token = "0x6000248")]
	[Address(RVA = "0x11250E8", Offset = "0x11250E8", VA = "0x11250E8")]
	public int GetCoverage(int x, int y)
	{
		return default(int);
	}

	[Token(Token = "0x6000249")]
	[Address(RVA = "0x1125290", Offset = "0x1125290", VA = "0x1125290")]
	public int GetPreviewCoverage(int x, int y)
	{
		return default(int);
	}

	[Token(Token = "0x600024A")]
	[Address(RVA = "0x1123C70", Offset = "0x1123C70", VA = "0x1123C70")]
	public void AddSource(int x, int y)
	{
	}

	[Token(Token = "0x600024B")]
	[Address(RVA = "0x1123DC0", Offset = "0x1123DC0", VA = "0x1123DC0")]
	public void RemoveSource(int x, int y)
	{
	}

	[Token(Token = "0x600024C")]
	[Address(RVA = "0x112564C", Offset = "0x112564C", VA = "0x112564C")]
	private void FillRadialCoverage(byte[] map, int x, int y, int radius)
	{
	}

	[Token(Token = "0x600024D")]
	[Address(RVA = "0x1125774", Offset = "0x1125774", VA = "0x1125774")]
	private void ProcessSource(byte[] map, BuildingInstance sourceBuilding, bool isPreview)
	{
	}

	[Token(Token = "0x600024E")]
	[Address(RVA = "0x11259E4", Offset = "0x11259E4", VA = "0x11259E4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6AE0A4", Offset = "0x6AE0A4")]
	private IEnumerator UpdateMap(byte[] map, bool isPreview)
	{
		return null;
	}

	[Token(Token = "0x600024F")]
	[Address(RVA = "0x1125A98", Offset = "0x1125A98", VA = "0x1125A98")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6AE108", Offset = "0x6AE108")]
	private IEnumerator SimulateAsync()
	{
		return null;
	}

	[Token(Token = "0x6000250")]
	[Address(RVA = "0x1123D00", Offset = "0x1123D00", VA = "0x1123D00")]
	public void RestartSimulation()
	{
	}

	[Token(Token = "0x6000251")]
	[Address(RVA = "0x1124620", Offset = "0x1124620", VA = "0x1124620")]
	public void SimulateStep()
	{
	}

	[Token(Token = "0x6000252")]
	[Address(RVA = "0x1124BB4", Offset = "0x1124BB4", VA = "0x1124BB4")]
	public void Reset()
	{
	}
}
[Token(Token = "0x200002D")]
public class EmergencyDispatchManager : CityModule, ISimulationModule, IDebugPanelProvider
{
	[Token(Token = "0x20002A2")]
	public enum VehicleState
	{
		[Token(Token = "0x40012A3")]
		Idle,
		[Token(Token = "0x40012A4")]
		GoingToIncident,
		[Token(Token = "0x40012A5")]
		ReturningToServiceBuilding,
		[Token(Token = "0x40012A6")]
		ReturningWithPatient,
		[Token(Token = "0x40012A7")]
		ResolvingIncident
	}

	[Token(Token = "0x20002A3")]
	public enum EmergencyVehicleType
	{
		[Token(Token = "0x40012A9")]
		Car,
		[Token(Token = "0x40012AA")]
		Helicopter
	}

	[Token(Token = "0x20002A4")]
	public class VehicleData
	{
		[Token(Token = "0x40012AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public EmergencyVehicleType vehicleType;

		[NonSerialized]
		[Token(Token = "0x40012AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[XmlIgnore]
		public CarManager.CarId car;

		[NonSerialized]
		[Token(Token = "0x40012AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[XmlIgnore]
		public Helicopter helicopter;

		[NonSerialized]
		[Token(Token = "0x40012AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[XmlIgnore]
		public City city;

		[Token(Token = "0x40012AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public CityServiceManager.ServiceType serviceType;

		[Token(Token = "0x40012B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public int homeX;

		[Token(Token = "0x40012B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public int homeY;

		[Token(Token = "0x40012B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public int incidentX;

		[Token(Token = "0x40012B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public int incidentY;

		[Token(Token = "0x40012B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public VehicleState state;

		[Token(Token = "0x40012B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float timeInState;

		[Token(Token = "0x600144C")]
		[Address(RVA = "0x103501C", Offset = "0x103501C", VA = "0x103501C")]
		public VehicleData()
		{
		}

		[Token(Token = "0x600144D")]
		[Address(RVA = "0x1031C74", Offset = "0x1031C74", VA = "0x1031C74")]
		public VehicleData(BuildingInstance building, Helicopter helicopter)
		{
		}

		[Token(Token = "0x600144E")]
		[Address(RVA = "0x1031BFC", Offset = "0x1031BFC", VA = "0x1031BFC")]
		public VehicleData(BuildingInstance building, CarManager.CarId car)
		{
		}

		[Token(Token = "0x600144F")]
		[Address(RVA = "0x10333D0", Offset = "0x10333D0", VA = "0x10333D0")]
		public void GetPosition(out int x, out int y)
		{
		}

		[Token(Token = "0x6001450")]
		[Address(RVA = "0x1034E6C", Offset = "0x1034E6C", VA = "0x1034E6C")]
		public void SetSirenEnabled(bool shouldEnable)
		{
		}

		[Token(Token = "0x6001451")]
		[Address(RVA = "0x1034D30", Offset = "0x1034D30", VA = "0x1034D30")]
		public void TransitionToState(VehicleState newState)
		{
		}

		[Token(Token = "0x6001452")]
		[Address(RVA = "0x1032DE0", Offset = "0x1032DE0", VA = "0x1032DE0")]
		public void AssignIncident(EmergencyIncidentManager.Incident incident)
		{
		}

		[Token(Token = "0x6001453")]
		[Address(RVA = "0x1034BFC", Offset = "0x1034BFC", VA = "0x1034BFC")]
		public void ReturnToServiceBuilding()
		{
		}

		[Token(Token = "0x6001454")]
		[Address(RVA = "0x1034CCC", Offset = "0x1034CCC", VA = "0x1034CCC")]
		public bool IsParked()
		{
			return default(bool);
		}

		[Token(Token = "0x6001455")]
		[Address(RVA = "0x10347F4", Offset = "0x10347F4", VA = "0x10347F4")]
		public bool DidReachDestination()
		{
			return default(bool);
		}

		[Token(Token = "0x6001456")]
		[Address(RVA = "0x1034B88", Offset = "0x1034B88", VA = "0x1034B88")]
		public bool DidFailToPathToDestination()
		{
			return default(bool);
		}

		[Token(Token = "0x6001457")]
		[Address(RVA = "0x1034F6C", Offset = "0x1034F6C", VA = "0x1034F6C")]
		public void TeleportToSafeLocation()
		{
		}

		[Token(Token = "0x6001458")]
		[Address(RVA = "0x1034944", Offset = "0x1034944", VA = "0x1034944")]
		public void HandleIncident()
		{
		}

		[Token(Token = "0x6001459")]
		[Address(RVA = "0x10326C0", Offset = "0x10326C0", VA = "0x10326C0")]
		public bool CanHandleIncident(EmergencyIncidentManager.Incident incident)
		{
			return default(bool);
		}

		[Token(Token = "0x600145A")]
		[Address(RVA = "0x1032810", Offset = "0x1032810", VA = "0x1032810")]
		public int EstimateDistanceToIncident(EmergencyIncidentManager.Incident incident)
		{
			return default(int);
		}
	}

	[Token(Token = "0x20002A5")]
	public class DispatchManagerSaveData : SaveSystem.ModuleData
	{
		[Token(Token = "0x40012B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public VehicleData[] vehicleData;

		[Token(Token = "0x600145B")]
		[Address(RVA = "0x1033718", Offset = "0x1033718", VA = "0x1033718")]
		public DispatchManagerSaveData()
		{
		}
	}

	[Token(Token = "0x20002A6")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6A7D74", Offset = "0x6A7D74")]
	private sealed class <>c__DisplayClass6_0
	{
		[Token(Token = "0x40012B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public BuildingInstance building;

		[Token(Token = "0x600145C")]
		[Address(RVA = "0x1031F24", Offset = "0x1031F24", VA = "0x1031F24")]
		public <>c__DisplayClass6_0()
		{
		}

		[Token(Token = "0x600145D")]
		[Address(RVA = "0x103406C", Offset = "0x103406C", VA = "0x103406C")]
		internal bool <OnUpgradedBuilding>b__0(VehicleData v)
		{
			return default(bool);
		}

		[Token(Token = "0x600145E")]
		[Address(RVA = "0x10340AC", Offset = "0x10340AC", VA = "0x10340AC")]
		internal bool <OnUpgradedBuilding>b__1(VehicleData v)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x20002A7")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6A7D84", Offset = "0x6A7D84")]
	private sealed class <>c__DisplayClass7_0
	{
		[Token(Token = "0x40012B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public BuildingInstance building;

		[Token(Token = "0x600145F")]
		[Address(RVA = "0x1031FF0", Offset = "0x1031FF0", VA = "0x1031FF0")]
		public <>c__DisplayClass7_0()
		{
		}

		[Token(Token = "0x6001460")]
		[Address(RVA = "0x103415C", Offset = "0x103415C", VA = "0x103415C")]
		internal bool <OnDemolishBuilding>b__0(VehicleData data)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x20002A8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6A7D94", Offset = "0x6A7D94")]
	private sealed class <Simulate>d__12 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40012B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40012BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40012BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public EmergencyDispatchManager <>4__this;

		[Token(Token = "0x40012BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float deltaTime;

		[Token(Token = "0x17000349")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001464")]
			[Address(RVA = "0x1034FAC", Offset = "0x1034FAC", VA = "0x1034FAC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700034A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001466")]
			[Address(RVA = "0x1035014", Offset = "0x1035014", VA = "0x1035014", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001461")]
		[Address(RVA = "0x10335F8", Offset = "0x10335F8", VA = "0x10335F8")]
		[DebuggerHidden]
		public <Simulate>d__12(int <>1__state)
		{
		}

		[Token(Token = "0x6001462")]
		[Address(RVA = "0x10341A4", Offset = "0x10341A4", VA = "0x10341A4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001463")]
		[Address(RVA = "0x10341A8", Offset = "0x10341A8", VA = "0x10341A8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001465")]
		[Address(RVA = "0x1034FB4", Offset = "0x1034FB4", VA = "0x1034FB4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000194")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static bool debugGroundAllHelicopters;

	[Token(Token = "0x4000195")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private List<VehicleData> vehicleData;

	[Token(Token = "0x4000196")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool debugShowDispatchTargets;

	[Token(Token = "0x1700008B")]
	public override Type saveModuleDataType
	{
		[Token(Token = "0x600025B")]
		[Address(RVA = "0x1033624", Offset = "0x1033624", VA = "0x1033624", Slot = "4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000253")]
	[Address(RVA = "0x1031AB0", Offset = "0x1031AB0", VA = "0x1031AB0")]
	public void OnPlaceBuilding(BuildingInstance building)
	{
	}

	[Token(Token = "0x6000254")]
	[Address(RVA = "0x1031CEC", Offset = "0x1031CEC", VA = "0x1031CEC")]
	public void OnUpgradedBuilding(BuildingInstance building)
	{
	}

	[Token(Token = "0x6000255")]
	[Address(RVA = "0x1031F2C", Offset = "0x1031F2C", VA = "0x1031F2C")]
	public void OnDemolishBuilding(BuildingInstance building)
	{
	}

	[Token(Token = "0x6000256")]
	[Address(RVA = "0x1031FF8", Offset = "0x1031FF8", VA = "0x1031FF8")]
	private VehicleData GetHandlingVehicle(EmergencyIncidentManager.Incident incident)
	{
		return null;
	}

	[Token(Token = "0x6000257")]
	[Address(RVA = "0x1032188", Offset = "0x1032188", VA = "0x1032188")]
	private void AssignVehicle(EmergencyIncidentManager.Incident incident)
	{
	}

	[Token(Token = "0x6000258")]
	[Address(RVA = "0x1033104", Offset = "0x1033104", VA = "0x1033104")]
	private void AssignVehicleToClosestIncident(VehicleData vehicle)
	{
	}

	[Token(Token = "0x6000259")]
	[Address(RVA = "0x1033490", Offset = "0x1033490", VA = "0x1033490")]
	public bool DoesHaveHelicopter(CityServiceManager.ServiceType serviceType)
	{
		return default(bool);
	}

	[Token(Token = "0x600025A")]
	[Address(RVA = "0x1033578", Offset = "0x1033578", VA = "0x1033578", Slot = "11")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6AE16C", Offset = "0x6AE16C")]
	public IEnumerator Simulate(float deltaTime)
	{
		return null;
	}

	[Token(Token = "0x600025C")]
	[Address(RVA = "0x1033694", Offset = "0x1033694", VA = "0x1033694", Slot = "5")]
	public override SaveSystem.ModuleData OnSave()
	{
		return null;
	}

	[Token(Token = "0x600025D")]
	[Address(RVA = "0x1033720", Offset = "0x1033720", VA = "0x1033720", Slot = "6")]
	public override void OnLoad(SaveSystem.SaveGame saveGame, SaveSystem.ModuleData data)
	{
	}

	[Token(Token = "0x600025E")]
	[Address(RVA = "0x10337D8", Offset = "0x10337D8", VA = "0x10337D8", Slot = "7")]
	public override void OnPostLoad()
	{
	}

	[Token(Token = "0x600025F")]
	[Address(RVA = "0x1033980", Offset = "0x1033980", VA = "0x1033980", Slot = "13")]
	public void OnDebugPanel()
	{
	}

	[Token(Token = "0x6000260")]
	[Address(RVA = "0x1033F98", Offset = "0x1033F98", VA = "0x1033F98", Slot = "10")]
	public override void OnResetProgress()
	{
	}

	[Token(Token = "0x6000261")]
	[Address(RVA = "0x1033FF0", Offset = "0x1033FF0", VA = "0x1033FF0")]
	public EmergencyDispatchManager()
	{
	}

	[SpecialName]
	[Token(Token = "0x6000263")]
	[Address(RVA = "0x1034064", Offset = "0x1034064", VA = "0x1034064", Slot = "12")]
	private GameObject ISimulationModule.get_gameObject()
	{
		return null;
	}
}
[Token(Token = "0x200002E")]
public class EmergencyIncidentManager : CityModule, ISimulationModule, IDebugPanelProvider
{
	[Token(Token = "0x20002A9")]
	public class Incident
	{
		[Token(Token = "0x2000422")]
		public enum TargetType
		{
			[Token(Token = "0x400197D")]
			Building,
			[Token(Token = "0x400197E")]
			Car,
			[Token(Token = "0x400197F")]
			Tile
		}

		[Token(Token = "0x40012BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public TargetType targetType;

		[Token(Token = "0x40012BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public CityServiceManager.ServiceType requiredService;

		[Token(Token = "0x40012BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int x;

		[Token(Token = "0x40012C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int y;

		[Token(Token = "0x40012C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Vector3 detailPosition;

		[Token(Token = "0x40012C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public double startTime;

		[Token(Token = "0x40012C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float resolutionDuration;

		[NonSerialized]
		[Token(Token = "0x40012C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[XmlIgnore]
		public bool skipSaving;

		[Token(Token = "0x6001467")]
		[Address(RVA = "0x10375E0", Offset = "0x10375E0", VA = "0x10375E0")]
		public Incident()
		{
		}

		[Token(Token = "0x6001468")]
		[Address(RVA = "0x1035CC4", Offset = "0x1035CC4", VA = "0x1035CC4")]
		public Incident(EmergencyIncidentManager manager, BuildingInstance building, CityServiceManager.ServiceType inRequiredServiceType)
		{
		}

		[Token(Token = "0x6001469")]
		[Address(RVA = "0x1036104", Offset = "0x1036104", VA = "0x1036104")]
		public Incident(EmergencyIncidentManager manager, Vector3 inDetailPosition, CityServiceManager.ServiceType inRequiredServiceType)
		{
		}

		[Token(Token = "0x600146A")]
		[Address(RVA = "0x10375E8", Offset = "0x10375E8", VA = "0x10375E8")]
		public Incident(EmergencyIncidentManager manager, int tileX, int tileY, CityServiceManager.ServiceType inRequiredServiceType)
		{
		}

		[Token(Token = "0x600146B")]
		[Address(RVA = "0x10361A4", Offset = "0x10361A4", VA = "0x10361A4")]
		public Incident(EmergencyIncidentManager manager, CarManager.CarId carId, CityServiceManager.ServiceType inRequiredServiceType)
		{
		}

		[Token(Token = "0x600146C")]
		[Address(RVA = "0x1032640", Offset = "0x1032640", VA = "0x1032640")]
		public bool IsValid(City city)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x20002AA")]
	public class IncidentSaveData : SaveSystem.ModuleData
	{
		[Token(Token = "0x40012C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Incident[] incidents;

		[Token(Token = "0x40012C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public double nextIncidentTime;

		[Token(Token = "0x600146D")]
		[Address(RVA = "0x1036498", Offset = "0x1036498", VA = "0x1036498")]
		public IncidentSaveData()
		{
		}
	}

	[Token(Token = "0x20002AB")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6A7DA4", Offset = "0x6A7DA4")]
	private sealed class <Simulate>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40012C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40012C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40012C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public EmergencyIncidentManager <>4__this;

		[Token(Token = "0x40012CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float deltaTime;

		[Token(Token = "0x1700034B")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001471")]
			[Address(RVA = "0x1037570", Offset = "0x1037570", VA = "0x1037570", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700034C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001473")]
			[Address(RVA = "0x10375D8", Offset = "0x10375D8", VA = "0x10375D8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600146E")]
		[Address(RVA = "0x1035108", Offset = "0x1035108", VA = "0x1035108")]
		[DebuggerHidden]
		public <Simulate>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x600146F")]
		[Address(RVA = "0x1037240", Offset = "0x1037240", VA = "0x1037240", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001470")]
		[Address(RVA = "0x1037244", Offset = "0x1037244", VA = "0x1037244", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001472")]
		[Address(RVA = "0x1037578", Offset = "0x1037578", VA = "0x1037578", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000197")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<Incident> incidents;

	[Token(Token = "0x4000198")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private double nextIncidentTime;

	[Token(Token = "0x4000199")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool debugDisableIncidents;

	[Token(Token = "0x400019A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private List<MountainRescuePosition> mountainRescuePositions;

	[Token(Token = "0x1700008C")]
	public override Type saveModuleDataType
	{
		[Token(Token = "0x6000276")]
		[Address(RVA = "0x1036254", Offset = "0x1036254", VA = "0x1036254", Slot = "4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000264")]
	[Address(RVA = "0x1035024", Offset = "0x1035024", VA = "0x1035024", Slot = "9")]
	public override void PostInit()
	{
	}

	[Token(Token = "0x6000265")]
	[Address(RVA = "0x1035088", Offset = "0x1035088", VA = "0x1035088", Slot = "11")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6AE1D0", Offset = "0x6AE1D0")]
	public IEnumerator Simulate(float deltaTime)
	{
		return null;
	}

	[Token(Token = "0x6000266")]
	[Address(RVA = "0x1035134", Offset = "0x1035134", VA = "0x1035134")]
	public Incident GetIncident(CityServiceManager.ServiceType serviceType, BuildingInstance building)
	{
		return null;
	}

	[Token(Token = "0x6000267")]
	[Address(RVA = "0x10352C8", Offset = "0x10352C8", VA = "0x10352C8")]
	public Incident GetIncident(BuildingInstance building)
	{
		return null;
	}

	[Token(Token = "0x6000268")]
	[Address(RVA = "0x1032C80", Offset = "0x1032C80", VA = "0x1032C80")]
	public Incident GetIncident(CityServiceManager.ServiceType serviceType, int x, int y)
	{
		return null;
	}

	[Token(Token = "0x6000269")]
	[Address(RVA = "0x1035420", Offset = "0x1035420", VA = "0x1035420")]
	public bool HasActiveIncidents(CityServiceManager.ServiceType serviceType)
	{
		return default(bool);
	}

	[Token(Token = "0x600026A")]
	[Address(RVA = "0x10354CC", Offset = "0x10354CC", VA = "0x10354CC")]
	private bool TryCreateIncident()
	{
		return default(bool);
	}

	[Token(Token = "0x600026B")]
	[Address(RVA = "0x10359BC", Offset = "0x10359BC", VA = "0x10359BC")]
	private BuildingInstance GetRandomZonedBuilding(CityServiceManager.ServiceType requiredServiceCoverage = CityServiceManager.ServiceType.None)
	{
		return null;
	}

	[Token(Token = "0x600026C")]
	[Address(RVA = "0x10355AC", Offset = "0x10355AC", VA = "0x10355AC")]
	public bool TryTriggerCrimeEvent(bool forceInGameEvent = false)
	{
		return default(bool);
	}

	[Token(Token = "0x600026D")]
	[Address(RVA = "0x1035D48", Offset = "0x1035D48", VA = "0x1035D48")]
	private bool CanIgniteBuilding(BuildingInstance targetBuilding)
	{
		return default(bool);
	}

	[Token(Token = "0x600026E")]
	[Address(RVA = "0x1035754", Offset = "0x1035754", VA = "0x1035754")]
	public bool TryTriggerFireEvent()
	{
		return default(bool);
	}

	[Token(Token = "0x600026F")]
	[Address(RVA = "0x1035DCC", Offset = "0x1035DCC", VA = "0x1035DCC")]
	public void RegisterIncident(BuildingInstance building, CityServiceManager.ServiceType requiredService)
	{
	}

	[Token(Token = "0x6000270")]
	[Address(RVA = "0x1035E90", Offset = "0x1035E90", VA = "0x1035E90")]
	public bool AddCusomIncident(Incident incident)
	{
		return default(bool);
	}

	[Token(Token = "0x6000271")]
	[Address(RVA = "0x1035F20", Offset = "0x1035F20", VA = "0x1035F20")]
	public bool HasIncident(Incident incident)
	{
		return default(bool);
	}

	[Token(Token = "0x6000272")]
	[Address(RVA = "0x1035818", Offset = "0x1035818", VA = "0x1035818")]
	public bool TryTriggerSicknessEvent()
	{
		return default(bool);
	}

	[Token(Token = "0x6000273")]
	[Address(RVA = "0x1035F88", Offset = "0x1035F88", VA = "0x1035F88")]
	public bool TryTriggerMountainRescue()
	{
		return default(bool);
	}

	[Token(Token = "0x6000274")]
	[Address(RVA = "0x1035AEC", Offset = "0x1035AEC", VA = "0x1035AEC")]
	public bool TryTriggerPoliceChase()
	{
		return default(bool);
	}

	[Token(Token = "0x6000275")]
	[Address(RVA = "0x1034EB4", Offset = "0x1034EB4", VA = "0x1034EB4")]
	public void ResolveIncident(Incident incident)
	{
	}

	[Token(Token = "0x6000277")]
	[Address(RVA = "0x10362C4", Offset = "0x10362C4", VA = "0x10362C4", Slot = "5")]
	public override SaveSystem.ModuleData OnSave()
	{
		return null;
	}

	[Token(Token = "0x6000278")]
	[Address(RVA = "0x10364A0", Offset = "0x10364A0", VA = "0x10364A0", Slot = "6")]
	public override void OnLoad(SaveSystem.SaveGame saveGame, SaveSystem.ModuleData data)
	{
	}

	[Token(Token = "0x6000279")]
	[Address(RVA = "0x1036560", Offset = "0x1036560", VA = "0x1036560")]
	private void DebugCalculateCrimeStats()
	{
	}

	[Token(Token = "0x600027A")]
	[Address(RVA = "0x1036670", Offset = "0x1036670", VA = "0x1036670", Slot = "10")]
	public override void OnResetProgress()
	{
	}

	[Token(Token = "0x600027B")]
	[Address(RVA = "0x10366D0", Offset = "0x10366D0", VA = "0x10366D0", Slot = "13")]
	public void OnDebugPanel()
	{
	}

	[Token(Token = "0x600027C")]
	[Address(RVA = "0x10371A0", Offset = "0x10371A0", VA = "0x10371A0")]
	public EmergencyIncidentManager()
	{
	}

	[SpecialName]
	[Token(Token = "0x600027D")]
	[Address(RVA = "0x1037238", Offset = "0x1037238", VA = "0x1037238", Slot = "12")]
	private GameObject ISimulationModule.get_gameObject()
	{
		return null;
	}
}
[Token(Token = "0x200002F")]
public class GroundMap : CityModule
{
	[Token(Token = "0x20002AC")]
	public enum GroundTile : byte
	{
		[Token(Token = "0x40012CC")]
		Grass,
		[Token(Token = "0x40012CD")]
		Road,
		[Token(Token = "0x40012CE")]
		Water,
		[Token(Token = "0x40012CF")]
		Blocked,
		[Token(Token = "0x40012D0")]
		Building,
		[Token(Token = "0x40012D1")]
		ThermalVent,
		[Token(Token = "0x40012D2")]
		Bridge,
		[Token(Token = "0x40012D3")]
		CoastalBuilding,
		[Token(Token = "0x40012D4")]
		PlantBox
	}

	[Token(Token = "0x20002AD")]
	public class LandscapeFeatureSaveData
	{
		[Token(Token = "0x40012D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int x;

		[Token(Token = "0x40012D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int y;

		[Token(Token = "0x40012D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool isDemolished;

		[Token(Token = "0x6001474")]
		[Address(RVA = "0x105EB0C", Offset = "0x105EB0C", VA = "0x105EB0C")]
		public LandscapeFeatureSaveData()
		{
		}
	}

	[Token(Token = "0x20002AE")]
	public class TerrainSaveData : SaveSystem.ModuleData
	{
		[Token(Token = "0x40012D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int width;

		[Token(Token = "0x40012D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int height;

		[Token(Token = "0x40012DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string tiles;

		[Token(Token = "0x40012DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public List<LandscapeFeatureSaveData> landscapeFeatures;

		[Token(Token = "0x40012DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Volcano.VolcanoSaveData volcano;

		[NonSerialized]
		[Token(Token = "0x40012DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[XmlIgnore]
		public GroundTile[] tilesRaw;

		[Token(Token = "0x6001475")]
		[Address(RVA = "0x1060290", Offset = "0x1060290", VA = "0x1060290", Slot = "4")]
		public override void OnPreWrite()
		{
		}

		[Token(Token = "0x6001476")]
		[Address(RVA = "0x105EB04", Offset = "0x105EB04", VA = "0x105EB04")]
		public TerrainSaveData()
		{
		}
	}

	[Token(Token = "0x20002AF")]
	public struct RaycastResult
	{
		[Token(Token = "0x40012DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int tileX;

		[Token(Token = "0x40012DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public int tileY;

		[Token(Token = "0x40012E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float distance;
	}

	[Token(Token = "0x20002B0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6A7DB4", Offset = "0x6A7DB4")]
	private sealed class <>c__DisplayClass50_0
	{
		[Token(Token = "0x40012E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public LandscapeFeature feature;

		[Token(Token = "0x6001477")]
		[Address(RVA = "0x105EF14", Offset = "0x105EF14", VA = "0x105EF14")]
		public <>c__DisplayClass50_0()
		{
		}

		[Token(Token = "0x6001478")]
		[Address(RVA = "0x1060240", Offset = "0x1060240", VA = "0x1060240")]
		internal bool <OnLoad>b__0(LandscapeFeatureSaveData match)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x400019B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int[] visualTileMapping;

	[Token(Token = "0x400019C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private GroundTile[] tilesInternal;

	[Token(Token = "0x400019D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private GroundTile[] previewTiles;

	[Token(Token = "0x400019E")]
	private const GroundTile defaultTileType = GroundTile.Water;

	[Token(Token = "0x400019F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6A895C", Offset = "0x6A895C")]
	private TileMap <tileMap>k__BackingField;

	[Token(Token = "0x40001A0")]
	public const int firstRoadVisualTile = 4;

	[Token(Token = "0x40001A1")]
	private const int roadTileStub = 4;

	[Token(Token = "0x40001A2")]
	private const int roadTileStraight = 5;

	[Token(Token = "0x40001A3")]
	private const int roadTileCorner = 7;

	[Token(Token = "0x40001A4")]
	private const int roadTileTJunction = 8;

	[Token(Token = "0x40001A5")]
	private const int roadTileCrossRoads = 9;

	[Token(Token = "0x40001A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static TileMap.Tile[] roadVisualTileLookup;

	[Token(Token = "0x40001A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool inPreviewMode;

	[Token(Token = "0x40001A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private List<LandscapeFeature> landscapeFeatures;

	[Token(Token = "0x40001A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private List<ThermalVent> thermalVents;

	[Token(Token = "0x40001AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6A896C", Offset = "0x6A896C")]
	private Volcano <volcano>k__BackingField;

	[Token(Token = "0x1700008D")]
	private GroundTile[] tiles
	{
		[Token(Token = "0x600027E")]
		[Address(RVA = "0x105CDB8", Offset = "0x105CDB8", VA = "0x105CDB8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700008E")]
	public TileMap tileMap
	{
		[Token(Token = "0x600027F")]
		[Address(RVA = "0x105CDD4", Offset = "0x105CDD4", VA = "0x105CDD4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6AE234", Offset = "0x6AE234")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000280")]
		[Address(RVA = "0x105CDDC", Offset = "0x105CDDC", VA = "0x105CDDC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6AE244", Offset = "0x6AE244")]
		private set
		{
		}
	}

	[Token(Token = "0x1700008F")]
	public Volcano volcano
	{
		[Token(Token = "0x6000281")]
		[Address(RVA = "0x105CDE4", Offset = "0x105CDE4", VA = "0x105CDE4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6AE254", Offset = "0x6AE254")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000282")]
		[Address(RVA = "0x105CDEC", Offset = "0x105CDEC", VA = "0x105CDEC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6AE264", Offset = "0x6AE264")]
		private set
		{
		}
	}

	[Token(Token = "0x17000090")]
	public override Type saveModuleDataType
	{
		[Token(Token = "0x6000297")]
		[Address(RVA = "0x105E7D4", Offset = "0x105E7D4", VA = "0x105E7D4", Slot = "4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000283")]
	[Address(RVA = "0x105CDF4", Offset = "0x105CDF4", VA = "0x105CDF4", Slot = "8")]
	public override void Init()
	{
	}

	[Token(Token = "0x6000284")]
	[Address(RVA = "0x105D4E0", Offset = "0x105D4E0", VA = "0x105D4E0", Slot = "9")]
	public override void PostInit()
	{
	}

	[Token(Token = "0x6000285")]
	[Address(RVA = "0x105D2BC", Offset = "0x105D2BC", VA = "0x105D2BC")]
	private void InitThermalVents()
	{
	}

	[Token(Token = "0x6000286")]
	[Address(RVA = "0x105D5F4", Offset = "0x105D5F4", VA = "0x105D5F4")]
	public LandscapeFeature GetLandscapeFeature(int x, int y)
	{
		return null;
	}

	[Token(Token = "0x6000287")]
	[Address(RVA = "0x105D6D8", Offset = "0x105D6D8", VA = "0x105D6D8")]
	public void DemolishLandscapeFeature(int x, int y)
	{
	}

	[Token(Token = "0x6000288")]
	[Address(RVA = "0x105D864", Offset = "0x105D864", VA = "0x105D864")]
	public void RestoreLandscapeFeature(int x, int y)
	{
	}

	[Token(Token = "0x6000289")]
	[Address(RVA = "0x105D998", Offset = "0x105D998", VA = "0x105D998")]
	public void AdjustConstructionCost(ConstructionCost costReport, int x, int y)
	{
	}

	[Token(Token = "0x600028A")]
	[Address(RVA = "0x105DAB0", Offset = "0x105DAB0", VA = "0x105DAB0")]
	public void Awake()
	{
	}

	[Token(Token = "0x600028B")]
	[Address(RVA = "0x105DB08", Offset = "0x105DB08", VA = "0x105DB08")]
	public static bool IsBuildable(GroundTile tileType)
	{
		return default(bool);
	}

	[Token(Token = "0x600028C")]
	[Address(RVA = "0x105DB34", Offset = "0x105DB34", VA = "0x105DB34")]
	public void BeginPreviewChanges()
	{
	}

	[Token(Token = "0x600028D")]
	[Address(RVA = "0x105DBD8", Offset = "0x105DBD8", VA = "0x105DBD8")]
	public void EndPreviewChanges()
	{
	}

	[Token(Token = "0x600028E")]
	[Address(RVA = "0x105DC3C", Offset = "0x105DC3C", VA = "0x105DC3C")]
	public void OnPlaceRoadTile(int x, int y)
	{
	}

	[Token(Token = "0x600028F")]
	[Address(RVA = "0x105DCB8", Offset = "0x105DCB8", VA = "0x105DCB8")]
	public GroundTile GetTile(int x, int y)
	{
		return default(GroundTile);
	}

	[Token(Token = "0x6000290")]
	[Address(RVA = "0x105DF2C", Offset = "0x105DF2C", VA = "0x105DF2C")]
	public GroundTile GetTileUnsafe(int x, int y)
	{
		return default(GroundTile);
	}

	[Token(Token = "0x6000291")]
	[Address(RVA = "0x105DFA0", Offset = "0x105DFA0", VA = "0x105DFA0")]
	public bool CanBuild(int x, int y, bool allowDemolition = false)
	{
		return default(bool);
	}

	[Token(Token = "0x6000292")]
	[Address(RVA = "0x105DD68", Offset = "0x105DD68", VA = "0x105DD68")]
	public void SetTile(int x, int y, GroundTile tile)
	{
	}

	[Token(Token = "0x6000293")]
	[Address(RVA = "0x105E478", Offset = "0x105E478", VA = "0x105E478")]
	public void UpdateAllVisualTiles()
	{
	}

	[Token(Token = "0x6000294")]
	[Address(RVA = "0x105E508", Offset = "0x105E508", VA = "0x105E508")]
	public void HideThermalVents(int x, int y, int width, int height)
	{
	}

	[Token(Token = "0x6000295")]
	[Address(RVA = "0x105E61C", Offset = "0x105E61C", VA = "0x105E61C")]
	public void RestoreThermalVents(int x, int y, int width, int height)
	{
	}

	[Token(Token = "0x6000296")]
	[Address(RVA = "0x105E098", Offset = "0x105E098", VA = "0x105E098")]
	private void UpdateVisualTile(int x, int y)
	{
	}

	[Token(Token = "0x6000298")]
	[Address(RVA = "0x105E844", Offset = "0x105E844", VA = "0x105E844", Slot = "5")]
	public override SaveSystem.ModuleData OnSave()
	{
		return null;
	}

	[Token(Token = "0x6000299")]
	[Address(RVA = "0x105EB14", Offset = "0x105EB14", VA = "0x105EB14", Slot = "6")]
	public override void OnLoad(SaveSystem.SaveGame saveGame, SaveSystem.ModuleData data)
	{
	}

	[Token(Token = "0x600029A")]
	[Address(RVA = "0x105EF1C", Offset = "0x105EF1C", VA = "0x105EF1C", Slot = "7")]
	public override void OnPostLoad()
	{
	}

	[Token(Token = "0x600029B")]
	[Address(RVA = "0x105F15C", Offset = "0x105F15C", VA = "0x105F15C")]
	public void SetThermalVentHintsVisible(bool visible)
	{
	}

	[Token(Token = "0x600029C")]
	[Address(RVA = "0x105F2D4", Offset = "0x105F2D4", VA = "0x105F2D4")]
	public bool Raycast(Ray ray, out RaycastResult result, float maxDistance)
	{
		return default(bool);
	}

	[Token(Token = "0x600029D")]
	[Address(RVA = "0x105F8BC", Offset = "0x105F8BC", VA = "0x105F8BC", Slot = "10")]
	public override void OnResetProgress()
	{
	}

	[Token(Token = "0x600029E")]
	[Address(RVA = "0x105FB74", Offset = "0x105FB74", VA = "0x105FB74")]
	public GroundMap()
	{
	}

	[Token(Token = "0x60002A0")]
	[Address(RVA = "0x10601C8", Offset = "0x10601C8", VA = "0x10601C8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6AE274", Offset = "0x6AE274")]
	private void <Init>b__25_0(int x, int y)
	{
	}
}
[Token(Token = "0x2000030")]
public class HappinessManager : CityModule, ISimulationModule, IDebugPanelProvider
{
	[Serializable]
	[Token(Token = "0x20002B1")]
	public class HappinessFactor
	{
		[Token(Token = "0x40012E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string name;

		[Token(Token = "0x40012E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x6AC4F4", Offset = "0x6AC4F4")]
		public float percentageDelta;

		[Token(Token = "0x40012E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6AC514", Offset = "0x6AC514")]
		private bool <isLocked>k__BackingField;

		[Token(Token = "0x40012E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6AC524", Offset = "0x6AC524")]
		private int <totalCalculated>k__BackingField;

		[Token(Token = "0x40012E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private float totalValue;

		[Token(Token = "0x1700034D")]
		public float delta
		{
			[Token(Token = "0x600147B")]
			[Address(RVA = "0x1067F88", Offset = "0x1067F88", VA = "0x1067F88")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700034E")]
		public bool isLocked
		{
			[Token(Token = "0x600147E")]
			[Address(RVA = "0x1067FC4", Offset = "0x1067FC4", VA = "0x1067FC4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6B2A98", Offset = "0x6B2A98")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600147F")]
			[Address(RVA = "0x1067FCC", Offset = "0x1067FCC", VA = "0x1067FCC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6B2AA8", Offset = "0x6B2AA8")]
			set
			{
			}
		}

		[Token(Token = "0x1700034F")]
		public int totalCalculated
		{
			[Token(Token = "0x6001480")]
			[Address(RVA = "0x1067FD8", Offset = "0x1067FD8", VA = "0x1067FD8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6B2AB8", Offset = "0x6B2AB8")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001481")]
			[Address(RVA = "0x1067FE0", Offset = "0x1067FE0", VA = "0x1067FE0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6B2AC8", Offset = "0x6B2AC8")]
			private set
			{
			}
		}

		[Token(Token = "0x17000350")]
		public float score
		{
			[Token(Token = "0x6001482")]
			[Address(RVA = "0x106764C", Offset = "0x106764C", VA = "0x106764C")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000351")]
		public float percentageAffected
		{
			[Token(Token = "0x6001483")]
			[Address(RVA = "0x1066790", Offset = "0x1066790", VA = "0x1066790")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6001479")]
		[Address(RVA = "0x1067F78", Offset = "0x1067F78", VA = "0x1067F78")]
		public HappinessFactor()
		{
		}

		[Token(Token = "0x600147A")]
		[Address(RVA = "0x10679C8", Offset = "0x10679C8", VA = "0x10679C8")]
		public HappinessFactor(string inName)
		{
		}

		[Token(Token = "0x600147C")]
		[Address(RVA = "0x1067108", Offset = "0x1067108", VA = "0x1067108")]
		public void Reset()
		{
		}

		[Token(Token = "0x600147D")]
		[Address(RVA = "0x1067F9C", Offset = "0x1067F9C", VA = "0x1067F9C")]
		public void Add(float value)
		{
		}
	}

	[Token(Token = "0x20002B2")]
	private struct HappinessFactorAccumulator
	{
		[Token(Token = "0x40012E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private float total;

		[Token(Token = "0x17000352")]
		public float score
		{
			[Token(Token = "0x6001487")]
			[Address(RVA = "0x721AF8", Offset = "0x721AF8", VA = "0x721AF8")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6001484")]
		[Address(RVA = "0x721ADC", Offset = "0x721ADC", VA = "0x721ADC")]
		public void Reset(float baseValue)
		{
		}

		[Token(Token = "0x6001485")]
		[Address(RVA = "0x721AE4", Offset = "0x721AE4", VA = "0x721AE4")]
		public void Add(HappinessFactor factor, float value = 1f)
		{
		}

		[Token(Token = "0x6001486")]
		[Address(RVA = "0x721AEC", Offset = "0x721AEC", VA = "0x721AEC")]
		public void Add(HappinessFactor factor, bool affected)
		{
		}
	}

	[Serializable]
	[Token(Token = "0x20002B3")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6A7DC4", Offset = "0x6A7DC4")]
	private sealed class <>c
	{
		[Token(Token = "0x40012E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x40012E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Comparison<HappinessFactor> <>9__32_0;

		[Token(Token = "0x6001489")]
		[Address(RVA = "0x1067A68", Offset = "0x1067A68", VA = "0x1067A68")]
		public <>c()
		{
		}

		[Token(Token = "0x600148A")]
		[Address(RVA = "0x1067A70", Offset = "0x1067A70", VA = "0x1067A70")]
		internal int <Simulate>b__32_0(HappinessFactor x, HappinessFactor y)
		{
			return default(int);
		}
	}

	[Token(Token = "0x20002B4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6A7DD4", Offset = "0x6A7DD4")]
	private sealed class <Simulate>d__32 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40012EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40012EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40012EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public HappinessManager <>4__this;

		[Token(Token = "0x40012ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float deltaTime;

		[Token(Token = "0x17000353")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600148E")]
			[Address(RVA = "0x1067F08", Offset = "0x1067F08", VA = "0x1067F08", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000354")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001490")]
			[Address(RVA = "0x1067F70", Offset = "0x1067F70", VA = "0x1067F70", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600148B")]
		[Address(RVA = "0x10671B8", Offset = "0x10671B8", VA = "0x10671B8")]
		[DebuggerHidden]
		public <Simulate>d__32(int <>1__state)
		{
		}

		[Token(Token = "0x600148C")]
		[Address(RVA = "0x1067AD0", Offset = "0x1067AD0", VA = "0x1067AD0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600148D")]
		[Address(RVA = "0x1067AD4", Offset = "0x1067AD4", VA = "0x1067AD4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600148F")]
		[Address(RVA = "0x1067F10", Offset = "0x1067F10", VA = "0x1067F10", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40001AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float overallHappiness;

	[Token(Token = "0x40001AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public List<float> baseHappinessPerRegion;

	[Token(Token = "0x40001AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public HappinessFactor noPower;

	[Token(Token = "0x40001AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public HappinessFactor noWater;

	[Token(Token = "0x40001AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public HappinessFactor noNetwork;

	[Token(Token = "0x40001B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public HappinessFactor noPolice;

	[Token(Token = "0x40001B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public HappinessFactor noFire;

	[Token(Token = "0x40001B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public HappinessFactor noSchool;

	[Token(Token = "0x40001B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public HappinessFactor noHospital;

	[Token(Token = "0x40001B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public HappinessFactor eyesore;

	[Token(Token = "0x40001B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public HappinessFactor smelly;

	[Token(Token = "0x40001B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public HappinessFactor noisy;

	[Token(Token = "0x40001B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public HappinessFactor sandStorms;

	[Token(Token = "0x40001B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public HappinessFactor tooCloseToIndustrial;

	[Token(Token = "0x40001B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public HappinessFactor localHappinessBoost;

	[Token(Token = "0x40001BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public HappinessFactor globalHappinessBoost;

	[Token(Token = "0x40001BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6A897C", Offset = "0x6A897C")]
	private List<HappinessFactor> <allHappinessFactors>k__BackingField;

	[Token(Token = "0x40001BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6A898C", Offset = "0x6A898C")]
	private List<HappinessFactor> <sortedHappinessFactors>k__BackingField;

	[Token(Token = "0x17000091")]
	public float happinessValueForAnalytics
	{
		[Token(Token = "0x60002A1")]
		[Address(RVA = "0x1066830", Offset = "0x1066830", VA = "0x1066830")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000092")]
	public List<HappinessFactor> allHappinessFactors
	{
		[Token(Token = "0x60002A2")]
		[Address(RVA = "0x1066844", Offset = "0x1066844", VA = "0x1066844")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6AE284", Offset = "0x6AE284")]
		get
		{
			return null;
		}
		[Token(Token = "0x60002A3")]
		[Address(RVA = "0x106684C", Offset = "0x106684C", VA = "0x106684C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6AE294", Offset = "0x6AE294")]
		private set
		{
		}
	}

	[Token(Token = "0x17000093")]
	public List<HappinessFactor> sortedHappinessFactors
	{
		[Token(Token = "0x60002A4")]
		[Address(RVA = "0x1066854", Offset = "0x1066854", VA = "0x1066854")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6AE2A4", Offset = "0x6AE2A4")]
		get
		{
			return null;
		}
		[Token(Token = "0x60002A5")]
		[Address(RVA = "0x106685C", Offset = "0x106685C", VA = "0x106685C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6AE2B4", Offset = "0x6AE2B4")]
		private set
		{
		}
	}

	[Token(Token = "0x60002A6")]
	[Address(RVA = "0x1066864", Offset = "0x1066864", VA = "0x1066864")]
	private void Awake()
	{
	}

	[Token(Token = "0x60002A7")]
	[Address(RVA = "0x10669E8", Offset = "0x10669E8", VA = "0x10669E8")]
	private void CalculateBuildingHappinessScores()
	{
	}

	[Token(Token = "0x60002A8")]
	[Address(RVA = "0x1067074", Offset = "0x1067074", VA = "0x1067074")]
	private void ResetHappinessFactors()
	{
	}

	[Token(Token = "0x60002A9")]
	[Address(RVA = "0x1067110", Offset = "0x1067110", VA = "0x1067110", Slot = "10")]
	public override void OnResetProgress()
	{
	}

	[Token(Token = "0x60002AA")]
	[Address(RVA = "0x1067138", Offset = "0x1067138", VA = "0x1067138", Slot = "11")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6AE2C4", Offset = "0x6AE2C4")]
	public IEnumerator Simulate(float deltaTime)
	{
		return null;
	}

	[Token(Token = "0x60002AB")]
	[Address(RVA = "0x10671E4", Offset = "0x10671E4", VA = "0x10671E4", Slot = "13")]
	public void OnDebugPanel()
	{
	}

	[Token(Token = "0x60002AC")]
	[Address(RVA = "0x1067668", Offset = "0x1067668", VA = "0x1067668")]
	public HappinessManager()
	{
	}

	[SpecialName]
	[Token(Token = "0x60002AD")]
	[Address(RVA = "0x10679FC", Offset = "0x10679FC", VA = "0x10679FC", Slot = "12")]
	private GameObject ISimulationModule.get_gameObject()
	{
		return null;
	}
}
[Token(Token = "0x2000031")]
public class HintManager : CityModule, ISimulationModule, IDebugPanelProvider
{
	[Token(Token = "0x20002B5")]
	public abstract class Hint
	{
		[Token(Token = "0x40012EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		protected City city;

		[Token(Token = "0x40012EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float timeActive;

		[Token(Token = "0x40012F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6AC534", Offset = "0x6AC534")]
		private bool <isActive>k__BackingField;

		[Token(Token = "0x40012F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6AC544", Offset = "0x6AC544")]
		private float <calculatedPriority>k__BackingField;

		[Token(Token = "0x17000355")]
		public float priority
		{
			[Token(Token = "0x6001492")]
			[Address(RVA = "0x106CA4C", Offset = "0x106CA4C", VA = "0x106CA4C")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000356")]
		public string debugName
		{
			[Token(Token = "0x6001493")]
			[Address(RVA = "0x106C738", Offset = "0x106C738", VA = "0x106C738")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000357")]
		public bool isActive
		{
			[Token(Token = "0x6001494")]
			[Address(RVA = "0x106CAF4", Offset = "0x106CAF4", VA = "0x106CAF4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6B2B28", Offset = "0x6B2B28")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001495")]
			[Address(RVA = "0x106CAFC", Offset = "0x106CAFC", VA = "0x106CAFC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6B2B38", Offset = "0x6B2B38")]
			protected set
			{
			}
		}

		[Token(Token = "0x17000358")]
		public float calculatedPriority
		{
			[Token(Token = "0x6001496")]
			[Address(RVA = "0x106CB08", Offset = "0x106CB08", VA = "0x106CB08")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6B2B48", Offset = "0x6B2B48")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001497")]
			[Address(RVA = "0x106CB10", Offset = "0x106CB10", VA = "0x106CB10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6B2B58", Offset = "0x6B2B58")]
			protected set
			{
			}
		}

		[Token(Token = "0x17000359")]
		protected abstract float basePriority
		{
			[Token(Token = "0x6001498")]
			get;
		}

		[Token(Token = "0x1700035A")]
		public abstract float activationTime
		{
			[Token(Token = "0x6001499")]
			get;
		}

		[Token(Token = "0x1700035B")]
		public abstract string hintText
		{
			[Token(Token = "0x600149A")]
			get;
		}

		[Token(Token = "0x1700035C")]
		public virtual Sprite hintIcon
		{
			[Token(Token = "0x600149B")]
			[Address(RVA = "0x106CB18", Offset = "0x106CB18", VA = "0x106CB18", Slot = "7")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001491")]
		[Address(RVA = "0x106CAEC", Offset = "0x106CAEC", VA = "0x106CAEC")]
		public void Init(City inCity)
		{
		}

		[Token(Token = "0x600149C")]
		public abstract void Update(float deltaTime);

		[Token(Token = "0x600149D")]
		[Address(RVA = "0x106CB90", Offset = "0x106CB90", VA = "0x106CB90")]
		protected Hint()
		{
		}
	}

	[Token(Token = "0x20002B6")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6A7DE4", Offset = "0x6A7DE4")]
	private sealed class <Simulate>d__9 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40012F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40012F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40012F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public HintManager <>4__this;

		[Token(Token = "0x40012F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float deltaTime;

		[Token(Token = "0x40012F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Hint <calculatedTopHint>5__2;

		[Token(Token = "0x40012F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private int <n>5__3;

		[Token(Token = "0x1700035D")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60014A1")]
			[Address(RVA = "0x106CA7C", Offset = "0x106CA7C", VA = "0x106CA7C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700035E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60014A3")]
			[Address(RVA = "0x106CAE4", Offset = "0x106CAE4", VA = "0x106CAE4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600149E")]
		[Address(RVA = "0x106C878", Offset = "0x106C878", VA = "0x106C878")]
		[DebuggerHidden]
		public <Simulate>d__9(int <>1__state)
		{
		}

		[Token(Token = "0x600149F")]
		[Address(RVA = "0x106C8B4", Offset = "0x106C8B4", VA = "0x106C8B4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60014A0")]
		[Address(RVA = "0x106C8B8", Offset = "0x106C8B8", VA = "0x106C8B8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60014A2")]
		[Address(RVA = "0x106CA84", Offset = "0x106CA84", VA = "0x106CA84", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40001BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private List<Hint> allHints;

	[Token(Token = "0x40001BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6A899C", Offset = "0x6A899C")]
	private Hint <topHint>k__BackingField;

	[Token(Token = "0x17000094")]
	public Hint topHint
	{
		[Token(Token = "0x60002AE")]
		[Address(RVA = "0x106BEE4", Offset = "0x106BEE4", VA = "0x106BEE4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6AE328", Offset = "0x6AE328")]
		get
		{
			return null;
		}
		[Token(Token = "0x60002AF")]
		[Address(RVA = "0x106BEEC", Offset = "0x106BEEC", VA = "0x106BEEC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6AE338", Offset = "0x6AE338")]
		private set
		{
		}
	}

	[Token(Token = "0x60002B0")]
	[Address(RVA = "0x106BEF4", Offset = "0x106BEF4", VA = "0x106BEF4", Slot = "9")]
	public override void PostInit()
	{
	}

	[Token(Token = "0x60002B1")]
	[Address(RVA = "0x106C4C4", Offset = "0x106C4C4", VA = "0x106C4C4", Slot = "13")]
	public void OnDebugPanel()
	{
	}

	[Token(Token = "0x60002B2")]
	[Address(RVA = "0x106C760", Offset = "0x106C760", VA = "0x106C760", Slot = "10")]
	public override void OnResetProgress()
	{
	}

	[Token(Token = "0x60002B3")]
	[Address(RVA = "0x106C7F8", Offset = "0x106C7F8", VA = "0x106C7F8", Slot = "11")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6AE348", Offset = "0x6AE348")]
	public IEnumerator Simulate(float deltaTime)
	{
		return null;
	}

	[Token(Token = "0x60002B4")]
	[Address(RVA = "0x106C8A4", Offset = "0x106C8A4", VA = "0x106C8A4")]
	public HintManager()
	{
	}

	[SpecialName]
	[Token(Token = "0x60002B5")]
	[Address(RVA = "0x106C8AC", Offset = "0x106C8AC", VA = "0x106C8AC", Slot = "12")]
	private GameObject ISimulationModule.get_gameObject()
	{
		return null;
	}
}
[Token(Token = "0x2000032")]
public class ZonesNotConnectedToPortHint : HintManager.Hint
{
	[Token(Token = "0x17000095")]
	public override float activationTime
	{
		[Token(Token = "0x60002B6")]
		[Address(RVA = "0x117D500", Offset = "0x117D500", VA = "0x117D500", Slot = "5")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000096")]
	public override string hintText
	{
		[Token(Token = "0x60002B7")]
		[Address(RVA = "0x117D508", Offset = "0x117D508", VA = "0x117D508", Slot = "6")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000097")]
	protected override float basePriority
	{
		[Token(Token = "0x60002B8")]
		[Address(RVA = "0x117D550", Offset = "0x117D550", VA = "0x117D550", Slot = "4")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x60002B9")]
	[Address(RVA = "0x117D558", Offset = "0x117D558", VA = "0x117D558", Slot = "8")]
	public override void Update(float deltaTime)
	{
	}

	[Token(Token = "0x60002BA")]
	[Address(RVA = "0x117D55C", Offset = "0x117D55C", VA = "0x117D55C")]
	public ZonesNotConnectedToPortHint()
	{
	}
}
[Token(Token = "0x2000033")]
public class NotEnoughUtilityHint : HintManager.Hint
{
	[Token(Token = "0x40001BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private UtilityState utilityState;

	[Token(Token = "0x40001C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private string utilityText;

	[Token(Token = "0x17000098")]
	public override Sprite hintIcon
	{
		[Token(Token = "0x60002BC")]
		[Address(RVA = "0x1009EEC", Offset = "0x1009EEC", VA = "0x1009EEC", Slot = "7")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000099")]
	public override float activationTime
	{
		[Token(Token = "0x60002BD")]
		[Address(RVA = "0x1009FEC", Offset = "0x1009FEC", VA = "0x1009FEC", Slot = "5")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x1700009A")]
	public override string hintText
	{
		[Token(Token = "0x60002BE")]
		[Address(RVA = "0x1009FF4", Offset = "0x1009FF4", VA = "0x1009FF4", Slot = "6")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700009B")]
	protected override float basePriority
	{
		[Token(Token = "0x60002BF")]
		[Address(RVA = "0x1009FFC", Offset = "0x1009FFC", VA = "0x1009FFC", Slot = "4")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x60002BB")]
	[Address(RVA = "0x1009EB4", Offset = "0x1009EB4", VA = "0x1009EB4")]
	public NotEnoughUtilityHint(UtilityState inUtilityState, string inText)
	{
	}

	[Token(Token = "0x60002C0")]
	[Address(RVA = "0x100A004", Offset = "0x100A004", VA = "0x100A004", Slot = "8")]
	public override void Update(float deltaTime)
	{
	}
}
[Token(Token = "0x2000034")]
public class AlmostNotEnoughUtilityHint : HintManager.Hint
{
	[Token(Token = "0x40001C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private UtilityState utilityState;

	[Token(Token = "0x40001C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private string utilityText;

	[Token(Token = "0x40001C3")]
	private const float idealHeadRoom = 0.9f;

	[Token(Token = "0x1700009C")]
	public override float activationTime
	{
		[Token(Token = "0x60002C2")]
		[Address(RVA = "0x10A2DFC", Offset = "0x10A2DFC", VA = "0x10A2DFC", Slot = "5")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x1700009D")]
	public override string hintText
	{
		[Token(Token = "0x60002C3")]
		[Address(RVA = "0x10A2E04", Offset = "0x10A2E04", VA = "0x10A2E04", Slot = "6")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700009E")]
	protected override float basePriority
	{
		[Token(Token = "0x60002C4")]
		[Address(RVA = "0x10A2E0C", Offset = "0x10A2E0C", VA = "0x10A2E0C", Slot = "4")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x1700009F")]
	public override Sprite hintIcon
	{
		[Token(Token = "0x60002C5")]
		[Address(RVA = "0x10A2E14", Offset = "0x10A2E14", VA = "0x10A2E14", Slot = "7")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60002C1")]
	[Address(RVA = "0x10A2DC4", Offset = "0x10A2DC4", VA = "0x10A2DC4")]
	public AlmostNotEnoughUtilityHint(UtilityState inUtilityState, string inText)
	{
	}

	[Token(Token = "0x60002C6")]
	[Address(RVA = "0x10A2F14", Offset = "0x10A2F14", VA = "0x10A2F14", Slot = "8")]
	public override void Update(float deltaTime)
	{
	}
}
[Token(Token = "0x2000035")]
public class NotEnoughNetworkHint : HintManager.Hint
{
	[Token(Token = "0x170000A0")]
	public override float activationTime
	{
		[Token(Token = "0x60002C7")]
		[Address(RVA = "0x10098AC", Offset = "0x10098AC", VA = "0x10098AC", Slot = "5")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x170000A1")]
	public override string hintText
	{
		[Token(Token = "0x60002C8")]
		[Address(RVA = "0x10098B4", Offset = "0x10098B4", VA = "0x10098B4", Slot = "6")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000A2")]
	protected override float basePriority
	{
		[Token(Token = "0x60002C9")]
		[Address(RVA = "0x10098FC", Offset = "0x10098FC", VA = "0x10098FC", Slot = "4")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x170000A3")]
	public override Sprite hintIcon
	{
		[Token(Token = "0x60002CA")]
		[Address(RVA = "0x1009904", Offset = "0x1009904", VA = "0x1009904", Slot = "7")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60002CB")]
	[Address(RVA = "0x100997C", Offset = "0x100997C", VA = "0x100997C", Slot = "8")]
	public override void Update(float deltaTime)
	{
	}

	[Token(Token = "0x60002CC")]
	[Address(RVA = "0x1009AB8", Offset = "0x1009AB8", VA = "0x1009AB8")]
	public NotEnoughNetworkHint()
	{
	}
}
[Token(Token = "0x2000036")]
public class NotEnoughServiceHint : HintManager.Hint
{
	[Token(Token = "0x40001C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private CityServiceManager.ServiceType serviceType;

	[Token(Token = "0x40001C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private string serviceHintText;

	[Token(Token = "0x40001C6")]
	private const int minBuildingsWithoutServiceToTriggerHint = 40;

	[Token(Token = "0x40001C7")]
	private const int maxBuildingsWithoutServiceToTriggerHint = 100;

	[Token(Token = "0x40001C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool shouldShowMinorMessage;

	[Token(Token = "0x170000A4")]
	public override float activationTime
	{
		[Token(Token = "0x60002CE")]
		[Address(RVA = "0x1009AFC", Offset = "0x1009AFC", VA = "0x1009AFC", Slot = "5")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x170000A5")]
	public override string hintText
	{
		[Token(Token = "0x60002CF")]
		[Address(RVA = "0x1009B08", Offset = "0x1009B08", VA = "0x1009B08", Slot = "6")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000A6")]
	protected override float basePriority
	{
		[Token(Token = "0x60002D0")]
		[Address(RVA = "0x1009B70", Offset = "0x1009B70", VA = "0x1009B70", Slot = "4")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x170000A7")]
	public override Sprite hintIcon
	{
		[Token(Token = "0x60002D1")]
		[Address(RVA = "0x1009B78", Offset = "0x1009B78", VA = "0x1009B78", Slot = "7")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60002CD")]
	[Address(RVA = "0x1009AC0", Offset = "0x1009AC0", VA = "0x1009AC0")]
	public NotEnoughServiceHint(CityServiceManager.ServiceType inService, string inHintText)
	{
	}

	[Token(Token = "0x60002D2")]
	[Address(RVA = "0x1009CE0", Offset = "0x1009CE0", VA = "0x1009CE0", Slot = "8")]
	public override void Update(float deltaTime)
	{
	}
}
[Token(Token = "0x2000037")]
public class WatchTutorialHint : HintManager.Hint
{
	[Token(Token = "0x170000A8")]
	public override string hintText
	{
		[Token(Token = "0x60002D3")]
		[Address(RVA = "0x1018988", Offset = "0x1018988", VA = "0x1018988", Slot = "6")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000A9")]
	public override float activationTime
	{
		[Token(Token = "0x60002D4")]
		[Address(RVA = "0x10189D0", Offset = "0x10189D0", VA = "0x10189D0", Slot = "5")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x170000AA")]
	protected override float basePriority
	{
		[Token(Token = "0x60002D5")]
		[Address(RVA = "0x10189D8", Offset = "0x10189D8", VA = "0x10189D8", Slot = "4")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x60002D6")]
	[Address(RVA = "0x10189E4", Offset = "0x10189E4", VA = "0x10189E4", Slot = "8")]
	public override void Update(float deltaTime)
	{
	}

	[Token(Token = "0x60002D7")]
	[Address(RVA = "0x1018A84", Offset = "0x1018A84", VA = "0x1018A84")]
	public WatchTutorialHint()
	{
	}
}
[Token(Token = "0x2000038")]
public abstract class BuildingCountHint : HintManager.Hint
{
	[Token(Token = "0x40001C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6A89AC", Offset = "0x6A89AC")]
	private readonly int <minBuildingsToTriggerHint>k__BackingField;

	[Token(Token = "0x40001CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6A89BC", Offset = "0x6A89BC")]
	private readonly int <maxBuildingsToTriggerHint>k__BackingField;

	[Token(Token = "0x170000AB")]
	protected virtual int minBuildingsToTriggerHint
	{
		[Token(Token = "0x60002D9")]
		[Address(RVA = "0x10AFE30", Offset = "0x10AFE30", VA = "0x10AFE30", Slot = "10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6AE3AC", Offset = "0x6AE3AC")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x170000AC")]
	protected virtual int maxBuildingsToTriggerHint
	{
		[Token(Token = "0x60002DA")]
		[Address(RVA = "0x10AFE38", Offset = "0x10AFE38", VA = "0x10AFE38", Slot = "11")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6AE3BC", Offset = "0x6AE3BC")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x60002D8")]
	protected abstract bool IsAffected(BuildingInstance building);

	[Token(Token = "0x60002DB")]
	[Address(RVA = "0x10AFE40", Offset = "0x10AFE40", VA = "0x10AFE40", Slot = "8")]
	public override void Update(float deltaTime)
	{
	}

	[Token(Token = "0x60002DC")]
	[Address(RVA = "0x10AFFA8", Offset = "0x10AFFA8", VA = "0x10AFFA8")]
	protected BuildingCountHint()
	{
	}
}
[Token(Token = "0x2000039")]
public class ResidentialIndustrialOverlapHint : BuildingCountHint
{
	[Token(Token = "0x170000AD")]
	public override string hintText
	{
		[Token(Token = "0x60002DD")]
		[Address(RVA = "0x11075D8", Offset = "0x11075D8", VA = "0x11075D8", Slot = "6")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000AE")]
	public override float activationTime
	{
		[Token(Token = "0x60002DE")]
		[Address(RVA = "0x1107620", Offset = "0x1107620", VA = "0x1107620", Slot = "5")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x170000AF")]
	protected override float basePriority
	{
		[Token(Token = "0x60002DF")]
		[Address(RVA = "0x110762C", Offset = "0x110762C", VA = "0x110762C", Slot = "4")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x170000B0")]
	protected override int minBuildingsToTriggerHint
	{
		[Token(Token = "0x60002E0")]
		[Address(RVA = "0x1107638", Offset = "0x1107638", VA = "0x1107638", Slot = "10")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x170000B1")]
	protected override int maxBuildingsToTriggerHint
	{
		[Token(Token = "0x60002E1")]
		[Address(RVA = "0x1107640", Offset = "0x1107640", VA = "0x1107640", Slot = "11")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x60002E2")]
	[Address(RVA = "0x1107648", Offset = "0x1107648", VA = "0x1107648", Slot = "9")]
	protected override bool IsAffected(BuildingInstance building)
	{
		return default(bool);
	}

	[Token(Token = "0x60002E3")]
	[Address(RVA = "0x11076F4", Offset = "0x11076F4", VA = "0x11076F4")]
	public ResidentialIndustrialOverlapHint()
	{
	}
}
[Token(Token = "0x200003A")]
public class SandstormHint : BuildingCountHint
{
	[Token(Token = "0x170000B2")]
	public override string hintText
	{
		[Token(Token = "0x60002E4")]
		[Address(RVA = "0x10443A0", Offset = "0x10443A0", VA = "0x10443A0", Slot = "6")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000B3")]
	public override float activationTime
	{
		[Token(Token = "0x60002E5")]
		[Address(RVA = "0x10443E8", Offset = "0x10443E8", VA = "0x10443E8", Slot = "5")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x170000B4")]
	protected override float basePriority
	{
		[Token(Token = "0x60002E6")]
		[Address(RVA = "0x10443F4", Offset = "0x10443F4", VA = "0x10443F4", Slot = "4")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x170000B5")]
	protected override int minBuildingsToTriggerHint
	{
		[Token(Token = "0x60002E7")]
		[Address(RVA = "0x10443FC", Offset = "0x10443FC", VA = "0x10443FC", Slot = "10")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x170000B6")]
	protected override int maxBuildingsToTriggerHint
	{
		[Token(Token = "0x60002E8")]
		[Address(RVA = "0x1044404", Offset = "0x1044404", VA = "0x1044404", Slot = "11")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x60002E9")]
	[Address(RVA = "0x104440C", Offset = "0x104440C", VA = "0x104440C", Slot = "9")]
	protected override bool IsAffected(BuildingInstance building)
	{
		return default(bool);
	}

	[Token(Token = "0x60002EA")]
	[Address(RVA = "0x1044428", Offset = "0x1044428", VA = "0x1044428")]
	public SandstormHint()
	{
	}
}
[Token(Token = "0x200003B")]
public class SmellyHint : BuildingCountHint
{
	[Token(Token = "0x170000B7")]
	public override string hintText
	{
		[Token(Token = "0x60002EB")]
		[Address(RVA = "0xFEAFF4", Offset = "0xFEAFF4", VA = "0xFEAFF4", Slot = "6")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000B8")]
	public override float activationTime
	{
		[Token(Token = "0x60002EC")]
		[Address(RVA = "0xFEB03C", Offset = "0xFEB03C", VA = "0xFEB03C", Slot = "5")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x170000B9")]
	protected override float basePriority
	{
		[Token(Token = "0x60002ED")]
		[Address(RVA = "0xFEB048", Offset = "0xFEB048", VA = "0xFEB048", Slot = "4")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x170000BA")]
	protected override int minBuildingsToTriggerHint
	{
		[Token(Token = "0x60002EE")]
		[Address(RVA = "0xFEB050", Offset = "0xFEB050", VA = "0xFEB050", Slot = "10")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x170000BB")]
	protected override int maxBuildingsToTriggerHint
	{
		[Token(Token = "0x60002EF")]
		[Address(RVA = "0xFEB058", Offset = "0xFEB058", VA = "0xFEB058", Slot = "11")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x60002F0")]
	[Address(RVA = "0xFEB060", Offset = "0xFEB060", VA = "0xFEB060", Slot = "9")]
	protected override bool IsAffected(BuildingInstance building)
	{
		return default(bool);
	}

	[Token(Token = "0x60002F1")]
	[Address(RVA = "0xFEB0A4", Offset = "0xFEB0A4", VA = "0xFEB0A4")]
	public SmellyHint()
	{
	}
}
[Token(Token = "0x200003C")]
public class EyeSoreHint : BuildingCountHint
{
	[Token(Token = "0x170000BC")]
	public override string hintText
	{
		[Token(Token = "0x60002F2")]
		[Address(RVA = "0x1037C10", Offset = "0x1037C10", VA = "0x1037C10", Slot = "6")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000BD")]
	public override float activationTime
	{
		[Token(Token = "0x60002F3")]
		[Address(RVA = "0x1037C58", Offset = "0x1037C58", VA = "0x1037C58", Slot = "5")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x170000BE")]
	protected override float basePriority
	{
		[Token(Token = "0x60002F4")]
		[Address(RVA = "0x1037C64", Offset = "0x1037C64", VA = "0x1037C64", Slot = "4")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x170000BF")]
	protected override int minBuildingsToTriggerHint
	{
		[Token(Token = "0x60002F5")]
		[Address(RVA = "0x1037C6C", Offset = "0x1037C6C", VA = "0x1037C6C", Slot = "10")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x170000C0")]
	protected override int maxBuildingsToTriggerHint
	{
		[Token(Token = "0x60002F6")]
		[Address(RVA = "0x1037C74", Offset = "0x1037C74", VA = "0x1037C74", Slot = "11")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x60002F7")]
	[Address(RVA = "0x1037C7C", Offset = "0x1037C7C", VA = "0x1037C7C", Slot = "9")]
	protected override bool IsAffected(BuildingInstance building)
	{
		return default(bool);
	}

	[Token(Token = "0x60002F8")]
	[Address(RVA = "0x1037CC0", Offset = "0x1037CC0", VA = "0x1037CC0")]
	public EyeSoreHint()
	{
	}
}
[Token(Token = "0x200003D")]
public class NoisyHint : BuildingCountHint
{
	[Token(Token = "0x170000C1")]
	public override string hintText
	{
		[Token(Token = "0x60002F9")]
		[Address(RVA = "0x10097F4", Offset = "0x10097F4", VA = "0x10097F4", Slot = "6")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000C2")]
	public override float activationTime
	{
		[Token(Token = "0x60002FA")]
		[Address(RVA = "0x100983C", Offset = "0x100983C", VA = "0x100983C", Slot = "5")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x170000C3")]
	protected override float basePriority
	{
		[Token(Token = "0x60002FB")]
		[Address(RVA = "0x1009848", Offset = "0x1009848", VA = "0x1009848", Slot = "4")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x170000C4")]
	protected override int minBuildingsToTriggerHint
	{
		[Token(Token = "0x60002FC")]
		[Address(RVA = "0x1009850", Offset = "0x1009850", VA = "0x1009850", Slot = "10")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x170000C5")]
	protected override int maxBuildingsToTriggerHint
	{
		[Token(Token = "0x60002FD")]
		[Address(RVA = "0x1009858", Offset = "0x1009858", VA = "0x1009858", Slot = "11")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x60002FE")]
	[Address(RVA = "0x1009860", Offset = "0x1009860", VA = "0x1009860", Slot = "9")]
	protected override bool IsAffected(BuildingInstance building)
	{
		return default(bool);
	}

	[Token(Token = "0x60002FF")]
	[Address(RVA = "0x10098A4", Offset = "0x10098A4", VA = "0x10098A4")]
	public NoisyHint()
	{
	}
}
[Token(Token = "0x200003E")]
public class ZoneImbalanceHint : HintManager.Hint
{
	[Token(Token = "0x40001CB")]
	private const int notEnoughJobsToTriggerHint = 50;

	[Token(Token = "0x40001CC")]
	private const int notEnoughHousesToTriggerHint = 50;

	[Token(Token = "0x40001CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private string zoneHintText;

	[Token(Token = "0x170000C6")]
	public override string hintText
	{
		[Token(Token = "0x6000300")]
		[Address(RVA = "0x11787C8", Offset = "0x11787C8", VA = "0x11787C8", Slot = "6")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000C7")]
	public override float activationTime
	{
		[Token(Token = "0x6000301")]
		[Address(RVA = "0x11787D0", Offset = "0x11787D0", VA = "0x11787D0", Slot = "5")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x170000C8")]
	protected override float basePriority
	{
		[Token(Token = "0x6000302")]
		[Address(RVA = "0x11787DC", Offset = "0x11787DC", VA = "0x11787DC", Slot = "4")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x6000303")]
	[Address(RVA = "0x11787E8", Offset = "0x11787E8", VA = "0x11787E8", Slot = "8")]
	public override void Update(float deltaTime)
	{
	}

	[Token(Token = "0x6000304")]
	[Address(RVA = "0x11789D0", Offset = "0x11789D0", VA = "0x11789D0")]
	public ZoneImbalanceHint()
	{
	}
}
[Token(Token = "0x200003F")]
public class DisconnectedBuildingsHint : HintManager.Hint
{
	[Token(Token = "0x170000C9")]
	public override string hintText
	{
		[Token(Token = "0x6000305")]
		[Address(RVA = "0x1030764", Offset = "0x1030764", VA = "0x1030764", Slot = "6")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000CA")]
	public override float activationTime
	{
		[Token(Token = "0x6000306")]
		[Address(RVA = "0x10307AC", Offset = "0x10307AC", VA = "0x10307AC", Slot = "5")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x170000CB")]
	protected override float basePriority
	{
		[Token(Token = "0x6000307")]
		[Address(RVA = "0x10307B4", Offset = "0x10307B4", VA = "0x10307B4", Slot = "4")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x6000308")]
	[Address(RVA = "0x10307BC", Offset = "0x10307BC", VA = "0x10307BC", Slot = "8")]
	public override void Update(float deltaTime)
	{
	}

	[Token(Token = "0x6000309")]
	[Address(RVA = "0x1030890", Offset = "0x1030890", VA = "0x1030890")]
	public DisconnectedBuildingsHint()
	{
	}
}
[Token(Token = "0x2000040")]
public class BuildCityHallHint : HintManager.Hint
{
	[Token(Token = "0x170000CC")]
	public override string hintText
	{
		[Token(Token = "0x600030A")]
		[Address(RVA = "0x10AE8B0", Offset = "0x10AE8B0", VA = "0x10AE8B0", Slot = "6")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000CD")]
	public override float activationTime
	{
		[Token(Token = "0x600030B")]
		[Address(RVA = "0x10AE8F8", Offset = "0x10AE8F8", VA = "0x10AE8F8", Slot = "5")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x170000CE")]
	protected override float basePriority
	{
		[Token(Token = "0x600030C")]
		[Address(RVA = "0x10AE900", Offset = "0x10AE900", VA = "0x10AE900", Slot = "4")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x600030D")]
	[Address(RVA = "0x10AE908", Offset = "0x10AE908", VA = "0x10AE908", Slot = "8")]
	public override void Update(float deltaTime)
	{
	}

	[Token(Token = "0x600030E")]
	[Address(RVA = "0x10AEAC0", Offset = "0x10AEAC0", VA = "0x10AEAC0")]
	public BuildCityHallHint()
	{
	}
}
[Token(Token = "0x2000041")]
public class ReturnToWorldMapHint : HintManager.Hint
{
	[Token(Token = "0x170000CF")]
	public override string hintText
	{
		[Token(Token = "0x600030F")]
		[Address(RVA = "0x11076FC", Offset = "0x11076FC", VA = "0x11076FC", Slot = "6")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000D0")]
	public override float activationTime
	{
		[Token(Token = "0x6000310")]
		[Address(RVA = "0x1107744", Offset = "0x1107744", VA = "0x1107744", Slot = "5")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x170000D1")]
	protected override float basePriority
	{
		[Token(Token = "0x6000311")]
		[Address(RVA = "0x110774C", Offset = "0x110774C", VA = "0x110774C", Slot = "4")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x6000312")]
	[Address(RVA = "0x1107754", Offset = "0x1107754", VA = "0x1107754", Slot = "8")]
	public override void Update(float deltaTime)
	{
	}

	[Token(Token = "0x6000313")]
	[Address(RVA = "0x1107810", Offset = "0x1107810", VA = "0x1107810")]
	public ReturnToWorldMapHint()
	{
	}
}
[Token(Token = "0x2000042")]
public class VolcanoEmergencyWarningHint : HintManager.Hint
{
	[Token(Token = "0x170000D2")]
	public override string hintText
	{
		[Token(Token = "0x6000314")]
		[Address(RVA = "0x1018694", Offset = "0x1018694", VA = "0x1018694", Slot = "6")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000D3")]
	public override float activationTime
	{
		[Token(Token = "0x6000315")]
		[Address(RVA = "0x10186DC", Offset = "0x10186DC", VA = "0x10186DC", Slot = "5")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x170000D4")]
	protected override float basePriority
	{
		[Token(Token = "0x6000316")]
		[Address(RVA = "0x10186E4", Offset = "0x10186E4", VA = "0x10186E4", Slot = "4")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x6000317")]
	[Address(RVA = "0x10186EC", Offset = "0x10186EC", VA = "0x10186EC", Slot = "8")]
	public override void Update(float deltaTime)
	{
	}

	[Token(Token = "0x6000318")]
	[Address(RVA = "0x10187A8", Offset = "0x10187A8", VA = "0x10187A8")]
	public VolcanoEmergencyWarningHint()
	{
	}
}
[Token(Token = "0x2000043")]
public class BankruptcyWarningHint : HintManager.Hint
{
	[Token(Token = "0x40001CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float minWeeksTilBankruptcy;

	[Token(Token = "0x170000D5")]
	public override string hintText
	{
		[Token(Token = "0x6000319")]
		[Address(RVA = "0x10A4D68", Offset = "0x10A4D68", VA = "0x10A4D68", Slot = "6")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000D6")]
	public override float activationTime
	{
		[Token(Token = "0x600031A")]
		[Address(RVA = "0x10A4DDC", Offset = "0x10A4DDC", VA = "0x10A4DDC", Slot = "5")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x170000D7")]
	protected override float basePriority
	{
		[Token(Token = "0x600031B")]
		[Address(RVA = "0x10A4DE4", Offset = "0x10A4DE4", VA = "0x10A4DE4", Slot = "4")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x600031C")]
	[Address(RVA = "0x10A4DEC", Offset = "0x10A4DEC", VA = "0x10A4DEC", Slot = "8")]
	public override void Update(float deltaTime)
	{
	}

	[Token(Token = "0x600031D")]
	[Address(RVA = "0x10A4EC8", Offset = "0x10A4EC8", VA = "0x10A4EC8")]
	public BankruptcyWarningHint()
	{
	}
}
[Token(Token = "0x2000044")]
public class CompleteIslandHint : HintManager.Hint
{
	[Token(Token = "0x170000D8")]
	public override string hintText
	{
		[Token(Token = "0x600031E")]
		[Address(RVA = "0x11264CC", Offset = "0x11264CC", VA = "0x11264CC", Slot = "6")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000D9")]
	public override float activationTime
	{
		[Token(Token = "0x600031F")]
		[Address(RVA = "0x1126514", Offset = "0x1126514", VA = "0x1126514", Slot = "5")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x170000DA")]
	protected override float basePriority
	{
		[Token(Token = "0x6000320")]
		[Address(RVA = "0x112651C", Offset = "0x112651C", VA = "0x112651C", Slot = "4")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x6000321")]
	[Address(RVA = "0x1126528", Offset = "0x1126528", VA = "0x1126528", Slot = "8")]
	public override void Update(float deltaTime)
	{
	}

	[Token(Token = "0x6000322")]
	[Address(RVA = "0x11266EC", Offset = "0x11266EC", VA = "0x11266EC")]
	public CompleteIslandHint()
	{
	}
}
[Token(Token = "0x2000045")]
public class InfluenceMapManager : CityModule, ISimulationModule, IDebugPanelProvider
{
	[Token(Token = "0x20002B7")]
	public class InfluenceMapManagerSaveData : SaveSystem.ModuleData
	{
		[Token(Token = "0x40012F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string[] mapData;

		[NonSerialized]
		[Token(Token = "0x40012F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[XmlIgnore]
		public List<float[]> mapDataRaw;

		[Token(Token = "0x60014A4")]
		[Address(RVA = "0x108AD00", Offset = "0x108AD00", VA = "0x108AD00", Slot = "4")]
		public override void OnPreWrite()
		{
		}

		[Token(Token = "0x60014A5")]
		[Address(RVA = "0x108A77C", Offset = "0x108A77C", VA = "0x108A77C")]
		public InfluenceMapManagerSaveData()
		{
		}
	}

	[Token(Token = "0x20002B8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6A7DF4", Offset = "0x6A7DF4")]
	private sealed class <Simulate>d__36 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40012FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40012FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40012FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public InfluenceMapManager <>4__this;

		[Token(Token = "0x40012FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float deltaTime;

		[Token(Token = "0x40012FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private int <n>5__2;

		[Token(Token = "0x40012FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private IEnumerator <x>5__3;

		[Token(Token = "0x4001300")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool <simulating>5__4;

		[Token(Token = "0x1700035F")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60014A9")]
			[Address(RVA = "0x108AC90", Offset = "0x108AC90", VA = "0x108AC90", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000360")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60014AB")]
			[Address(RVA = "0x108ACF8", Offset = "0x108ACF8", VA = "0x108ACF8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60014A6")]
		[Address(RVA = "0x108A5A4", Offset = "0x108A5A4", VA = "0x108A5A4")]
		[DebuggerHidden]
		public <Simulate>d__36(int <>1__state)
		{
		}

		[Token(Token = "0x60014A7")]
		[Address(RVA = "0x108AA6C", Offset = "0x108AA6C", VA = "0x108AA6C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60014A8")]
		[Address(RVA = "0x108AA70", Offset = "0x108AA70", VA = "0x108AA70", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60014AA")]
		[Address(RVA = "0x108AC98", Offset = "0x108AC98", VA = "0x108AC98", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40001CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject sandStormParticleEffectPrefab;

	[Token(Token = "0x40001D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6A89CC", Offset = "0x6A89CC")]
	private PopulationDensityMap <populationDensity>k__BackingField;

	[Token(Token = "0x40001D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6A89DC", Offset = "0x6A89DC")]
	private TrafficDensityMap <trafficDensity>k__BackingField;

	[Token(Token = "0x40001D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6A89EC", Offset = "0x6A89EC")]
	private ZoneProximityMap <industrialProximity>k__BackingField;

	[Token(Token = "0x40001D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6A89FC", Offset = "0x6A89FC")]
	private WindMap <wind>k__BackingField;

	[Token(Token = "0x40001D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6A8A0C", Offset = "0x6A8A0C")]
	private GroundWaterMap <groundWater>k__BackingField;

	[Token(Token = "0x40001D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6A8A1C", Offset = "0x6A8A1C")]
	private PortProximityMap <portProximity>k__BackingField;

	[Token(Token = "0x40001D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6A8A2C", Offset = "0x6A8A2C")]
	private SandStormMap <sandStorm>k__BackingField;

	[Token(Token = "0x40001D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6A8A3C", Offset = "0x6A8A3C")]
	private SpecialBehaviourMap <specialBehaviour>k__BackingField;

	[Token(Token = "0x40001D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private List<InfluenceMap> allMaps;

	[Token(Token = "0x170000DB")]
	public PopulationDensityMap populationDensity
	{
		[Token(Token = "0x6000323")]
		[Address(RVA = "0x108A0E4", Offset = "0x108A0E4", VA = "0x108A0E4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6AE3CC", Offset = "0x6AE3CC")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000324")]
		[Address(RVA = "0x108A0EC", Offset = "0x108A0EC", VA = "0x108A0EC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6AE3DC", Offset = "0x6AE3DC")]
		private set
		{
		}
	}

	[Token(Token = "0x170000DC")]
	public TrafficDensityMap trafficDensity
	{
		[Token(Token = "0x6000325")]
		[Address(RVA = "0x108A0F4", Offset = "0x108A0F4", VA = "0x108A0F4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6AE3EC", Offset = "0x6AE3EC")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000326")]
		[Address(RVA = "0x108A0FC", Offset = "0x108A0FC", VA = "0x108A0FC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6AE3FC", Offset = "0x6AE3FC")]
		private set
		{
		}
	}

	[Token(Token = "0x170000DD")]
	public ZoneProximityMap industrialProximity
	{
		[Token(Token = "0x6000327")]
		[Address(RVA = "0x108A104", Offset = "0x108A104", VA = "0x108A104")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6AE40C", Offset = "0x6AE40C")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000328")]
		[Address(RVA = "0x108A10C", Offset = "0x108A10C", VA = "0x108A10C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6AE41C", Offset = "0x6AE41C")]
		private set
		{
		}
	}

	[Token(Token = "0x170000DE")]
	public WindMap wind
	{
		[Token(Token = "0x6000329")]
		[Address(RVA = "0x108A114", Offset = "0x108A114", VA = "0x108A114")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6AE42C", Offset = "0x6AE42C")]
		get
		{
			return null;
		}
		[Token(Token = "0x600032A")]
		[Address(RVA = "0x108A11C", Offset = "0x108A11C", VA = "0x108A11C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6AE43C", Offset = "0x6AE43C")]
		private set
		{
		}
	}

	[Token(Token = "0x170000DF")]
	public GroundWaterMap groundWater
	{
		[Token(Token = "0x600032B")]
		[Address(RVA = "0x108A124", Offset = "0x108A124", VA = "0x108A124")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6AE44C", Offset = "0x6AE44C")]
		get
		{
			return null;
		}
		[Token(Token = "0x600032C")]
		[Address(RVA = "0x108A12C", Offset = "0x108A12C", VA = "0x108A12C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6AE45C", Offset = "0x6AE45C")]
		private set
		{
		}
	}

	[Token(Token = "0x170000E0")]
	public PortProximityMap portProximity
	{
		[Token(Token = "0x600032D")]
		[Address(RVA = "0x108A134", Offset = "0x108A134", VA = "0x108A134")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6AE46C", Offset = "0x6AE46C")]
		get
		{
			return null;
		}
		[Token(Token = "0x600032E")]
		[Address(RVA = "0x108A13C", Offset = "0x108A13C", VA = "0x108A13C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6AE47C", Offset = "0x6AE47C")]
		private set
		{
		}
	}

	[Token(Token = "0x170000E1")]
	public SandStormMap sandStorm
	{
		[Token(Token = "0x600032F")]
		[Address(RVA = "0x108A144", Offset = "0x108A144", VA = "0x108A144")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6AE48C", Offset = "0x6AE48C")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000330")]
		[Address(RVA = "0x108A14C", Offset = "0x108A14C", VA = "0x108A14C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6AE49C", Offset = "0x6AE49C")]
		private set
		{
		}
	}

	[Token(Token = "0x170000E2")]
	public SpecialBehaviourMap specialBehaviour
	{
		[Token(Token = "0x6000331")]
		[Address(RVA = "0x108A154", Offset = "0x108A154", VA = "0x108A154")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6AE4AC", Offset = "0x6AE4AC")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000332")]
		[Address(RVA = "0x108A15C", Offset = "0x108A15C", VA = "0x108A15C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6AE4BC", Offset = "0x6AE4BC")]
		private set
		{
		}
	}

	[Token(Token = "0x170000E3")]
	public override Type saveModuleDataType
	{
		[Token(Token = "0x6000336")]
		[Address(RVA = "0x108A5D0", Offset = "0x108A5D0", VA = "0x108A5D0", Slot = "4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000333")]
	[Address(RVA = "0x108A164", Offset = "0x108A164", VA = "0x108A164", Slot = "8")]
	public override void Init()
	{
	}

	[Token(Token = "0x6000334")]
	[Address(RVA = "0x108A404", Offset = "0x108A404", VA = "0x108A404", Slot = "10")]
	public override void OnResetProgress()
	{
	}

	[Token(Token = "0x6000335")]
	[Address(RVA = "0x108A524", Offset = "0x108A524", VA = "0x108A524", Slot = "11")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6AE4CC", Offset = "0x6AE4CC")]
	public IEnumerator Simulate(float deltaTime)
	{
		return null;
	}

	[Token(Token = "0x6000337")]
	[Address(RVA = "0x108A640", Offset = "0x108A640", VA = "0x108A640", Slot = "5")]
	public override SaveSystem.ModuleData OnSave()
	{
		return null;
	}

	[Token(Token = "0x6000338")]
	[Address(RVA = "0x108A784", Offset = "0x108A784", VA = "0x108A784", Slot = "6")]
	public override void OnLoad(SaveSystem.SaveGame saveGame, SaveSystem.ModuleData data)
	{
	}

	[Token(Token = "0x6000339")]
	[Address(RVA = "0x108A89C", Offset = "0x108A89C", VA = "0x108A89C", Slot = "7")]
	public override void OnPostLoad()
	{
	}

	[Token(Token = "0x600033A")]
	[Address(RVA = "0x108A950", Offset = "0x108A950", VA = "0x108A950", Slot = "13")]
	public void OnDebugPanel()
	{
	}

	[Token(Token = "0x600033B")]
	[Address(RVA = "0x108AA5C", Offset = "0x108AA5C", VA = "0x108AA5C")]
	public InfluenceMapManager()
	{
	}

	[SpecialName]
	[Token(Token = "0x600033C")]
	[Address(RVA = "0x108AA64", Offset = "0x108AA64", VA = "0x108AA64", Slot = "12")]
	private GameObject ISimulationModule.get_gameObject()
	{
		return null;
	}
}
[Token(Token = "0x2000046")]
public class MilestoneManager : CityModule, IDebugPanelProvider
{
	[Token(Token = "0x20002B9")]
	public enum CelebrationAmount
	{
		[Token(Token = "0x4001302")]
		Low,
		[Token(Token = "0x4001303")]
		Medium,
		[Token(Token = "0x4001304")]
		High
	}

	[Token(Token = "0x20002BA")]
	public class MilestoneManagerSaveData : SaveSystem.ModuleData
	{
		[Token(Token = "0x4001305")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int cityLevel;

		[Token(Token = "0x4001306")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float cityLevelProgress;

		[Token(Token = "0x4001307")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public double lastLevelUpTime;

		[Token(Token = "0x4001308")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int[] recentlyUnlockedBuildings;

		[Token(Token = "0x60014AC")]
		[Address(RVA = "0xFFB844", Offset = "0xFFB844", VA = "0xFFB844")]
		public MilestoneManagerSaveData()
		{
		}
	}

	[Token(Token = "0x20002BB")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6A7E04", Offset = "0x6A7E04")]
	private sealed class <LaunchFireworksRoutine>d__30 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001309")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400130A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400130B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MilestoneManager <>4__this;

		[Token(Token = "0x400130C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <showTime>5__2;

		[Token(Token = "0x400130D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private int <iterations>5__3;

		[Token(Token = "0x17000361")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60014B0")]
			[Address(RVA = "0xFFCAB0", Offset = "0xFFCAB0", VA = "0xFFCAB0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000362")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60014B2")]
			[Address(RVA = "0xFFCB18", Offset = "0xFFCB18", VA = "0xFFCB18", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60014AD")]
		[Address(RVA = "0xFFB060", Offset = "0xFFB060", VA = "0xFFB060")]
		[DebuggerHidden]
		public <LaunchFireworksRoutine>d__30(int <>1__state)
		{
		}

		[Token(Token = "0x60014AE")]
		[Address(RVA = "0xFFC77C", Offset = "0xFFC77C", VA = "0xFFC77C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60014AF")]
		[Address(RVA = "0xFFC780", Offset = "0xFFC780", VA = "0xFFC780", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60014B1")]
		[Address(RVA = "0xFFCAB8", Offset = "0xFFCAB8", VA = "0xFFCAB8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20002BC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6A7E14", Offset = "0x6A7E14")]
	private sealed class <LaunchBalloonsRoutine>d__31 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400130E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400130F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001310")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MilestoneManager <>4__this;

		[Token(Token = "0x4001311")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public CelebrationAmount celebrationAmount;

		[Token(Token = "0x4001312")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private int <numBalloons>5__2;

		[Token(Token = "0x4001313")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int <n>5__3;

		[Token(Token = "0x4001314")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private int <iterations>5__4;

		[Token(Token = "0x17000363")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60014B6")]
			[Address(RVA = "0xFFC70C", Offset = "0xFFC70C", VA = "0xFFC70C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000364")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60014B8")]
			[Address(RVA = "0xFFC774", Offset = "0xFFC774", VA = "0xFFC774", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60014B3")]
		[Address(RVA = "0xFFB08C", Offset = "0xFFB08C", VA = "0xFFB08C")]
		[DebuggerHidden]
		public <LaunchBalloonsRoutine>d__31(int <>1__state)
		{
		}

		[Token(Token = "0x60014B4")]
		[Address(RVA = "0xFFC31C", Offset = "0xFFC31C", VA = "0xFFC31C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60014B5")]
		[Address(RVA = "0xFFC320", Offset = "0xFFC320", VA = "0xFFC320", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60014B7")]
		[Address(RVA = "0xFFC714", Offset = "0xFFC714", VA = "0xFFC714", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40001D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int cityLevel;

	[Token(Token = "0x40001DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject fireworksEffectPrefab;

	[Token(Token = "0x40001DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public List<GameObject> balloonsEffectPrefabs;

	[Token(Token = "0x40001DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public AudioClip[] cheerSounds;

	[Token(Token = "0x40001DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public AudioClip[] fireworkSounds;

	[Token(Token = "0x40001DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public AudioClip[] balloonSounds;

	[Token(Token = "0x40001DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public AudioSource fireworkSoundParameters;

	[Token(Token = "0x40001E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public AudioSource balloonSoundParameters;

	[Token(Token = "0x40001E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public float cityLevelProgress;

	[Token(Token = "0x40001E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public List<BuildingInfo> recentlyUnlockedBuildings;

	[Token(Token = "0x40001E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private double lastLevelUpTime;

	[Token(Token = "0x170000E4")]
	public int maxCityLevel
	{
		[Token(Token = "0x600033D")]
		[Address(RVA = "0xFFA2A4", Offset = "0xFFA2A4", VA = "0xFFA2A4")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x170000E5")]
	public double timeSinceLevelUp
	{
		[Token(Token = "0x600033E")]
		[Address(RVA = "0xFFA360", Offset = "0xFFA360", VA = "0xFFA360")]
		get
		{
			return default(double);
		}
	}

	[Token(Token = "0x170000E6")]
	private Player player
	{
		[Token(Token = "0x600033F")]
		[Address(RVA = "0xFFA398", Offset = "0xFFA398", VA = "0xFFA398")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000E7")]
	public override Type saveModuleDataType
	{
		[Token(Token = "0x600034F")]
		[Address(RVA = "0xFFB4FC", Offset = "0xFFB4FC", VA = "0xFFB4FC", Slot = "4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000340")]
	[Address(RVA = "0xFFA3E8", Offset = "0xFFA3E8", VA = "0xFFA3E8")]
	public string GetLevelName()
	{
		return null;
	}

	[Token(Token = "0x6000341")]
	[Address(RVA = "0xFFA3F0", Offset = "0xFFA3F0", VA = "0xFFA3F0")]
	public string GetLevelName(int level)
	{
		return null;
	}

	[Token(Token = "0x6000342")]
	[Address(RVA = "0xFFA508", Offset = "0xFFA508", VA = "0xFFA508")]
	public int GetRequiredPopulation(int level)
	{
		return default(int);
	}

	[Token(Token = "0x6000343")]
	[Address(RVA = "0xFFA644", Offset = "0xFFA644", VA = "0xFFA644")]
	public int CalculateDisplayPopulation()
	{
		return default(int);
	}

	[Token(Token = "0x6000344")]
	[Address(RVA = "0xFFA67C", Offset = "0xFFA67C", VA = "0xFFA67C", Slot = "10")]
	public override void OnResetProgress()
	{
	}

	[Token(Token = "0x6000345")]
	[Address(RVA = "0xFFA690", Offset = "0xFFA690", VA = "0xFFA690")]
	private void Update()
	{
	}

	[Token(Token = "0x6000346")]
	[Address(RVA = "0xFFAA9C", Offset = "0xFFAA9C", VA = "0xFFAA9C")]
	private void LevelUp(bool sendLevelUpEvent = true)
	{
	}

	[Token(Token = "0x6000347")]
	[Address(RVA = "0xFFAD1C", Offset = "0xFFAD1C", VA = "0xFFAD1C")]
	public void UnlockAllCheat()
	{
	}

	[Token(Token = "0x6000348")]
	[Address(RVA = "0xFFADA0", Offset = "0xFFADA0", VA = "0xFFADA0")]
	public void UnlockCheat()
	{
	}

	[Token(Token = "0x6000349")]
	[Address(RVA = "0xFFAC3C", Offset = "0xFFAC3C", VA = "0xFFAC3C")]
	public void PlayCelebrationEffects(CelebrationAmount celebrationAmount)
	{
	}

	[Token(Token = "0x600034A")]
	[Address(RVA = "0xFFAED4", Offset = "0xFFAED4", VA = "0xFFAED4")]
	private void LaunchFireworks()
	{
	}

	[Token(Token = "0x600034B")]
	[Address(RVA = "0xFFAE28", Offset = "0xFFAE28", VA = "0xFFAE28")]
	private void LaunchBalloons(CelebrationAmount celebrationAmount)
	{
	}

	[Token(Token = "0x600034C")]
	[Address(RVA = "0xFFAF70", Offset = "0xFFAF70", VA = "0xFFAF70")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6AE530", Offset = "0x6AE530")]
	private IEnumerator LaunchFireworksRoutine()
	{
		return null;
	}

	[Token(Token = "0x600034D")]
	[Address(RVA = "0xFFAFE0", Offset = "0xFFAFE0", VA = "0xFFAFE0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6AE594", Offset = "0x6AE594")]
	private IEnumerator LaunchBalloonsRoutine(CelebrationAmount celebrationAmount)
	{
		return null;
	}

	[Token(Token = "0x600034E")]
	[Address(RVA = "0xFFB0B8", Offset = "0xFFB0B8", VA = "0xFFB0B8", Slot = "11")]
	public void OnDebugPanel()
	{
	}

	[Token(Token = "0x6000350")]
	[Address(RVA = "0xFFB56C", Offset = "0xFFB56C", VA = "0xFFB56C", Slot = "6")]
	public override void OnLoad(SaveSystem.SaveGame saveGame, SaveSystem.ModuleData data)
	{
	}

	[Token(Token = "0x6000351")]
	[Address(RVA = "0xFFB6DC", Offset = "0xFFB6DC", VA = "0xFFB6DC", Slot = "5")]
	public override SaveSystem.ModuleData OnSave()
	{
		return null;
	}

	[Token(Token = "0x6000352")]
	[Address(RVA = "0xFFB84C", Offset = "0xFFB84C", VA = "0xFFB84C")]
	public int GetUnlockedLevelRequired(BuildingInfo buildingInfo)
	{
		return default(int);
	}

	[Token(Token = "0x6000353")]
	[Address(RVA = "0xFFBA60", Offset = "0xFFBA60", VA = "0xFFBA60")]
	public bool IsBuildingUnlocked(BuildingInfo buildingInfo)
	{
		return default(bool);
	}

	[Token(Token = "0x6000354")]
	[Address(RVA = "0xFFA524", Offset = "0xFFA524", VA = "0xFFA524")]
	public CityInfo.Milestone GetMilestone(int level)
	{
		return null;
	}

	[Token(Token = "0x6000355")]
	[Address(RVA = "0xFFBC7C", Offset = "0xFFBC7C", VA = "0xFFBC7C")]
	public int CalculateServiceUnlockLevel(CityServiceManager.ServiceType serviceType)
	{
		return default(int);
	}

	[Token(Token = "0x6000356")]
	[Address(RVA = "0xFFBE24", Offset = "0xFFBE24", VA = "0xFFBE24")]
	public int CalculateNetworkUnlockLevel()
	{
		return default(int);
	}

	[Token(Token = "0x6000357")]
	[Address(RVA = "0xFFBFC0", Offset = "0xFFBFC0", VA = "0xFFBFC0")]
	public int CalculateTreePlantingUnlockLevel()
	{
		return default(int);
	}

	[Token(Token = "0x6000358")]
	[Address(RVA = "0xFFC14C", Offset = "0xFFC14C", VA = "0xFFC14C")]
	public BuildingInfo FindBuildingType(Predicate<BuildingInfo> predicate)
	{
		return null;
	}

	[Token(Token = "0x6000359")]
	[Address(RVA = "0xFFC30C", Offset = "0xFFC30C", VA = "0xFFC30C")]
	public MilestoneManager()
	{
	}
}
[Token(Token = "0x2000047")]
public abstract class MiniStory : MonoBehaviour
{
	[Token(Token = "0x40001E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public CityInfo.Theme theme;

	[Token(Token = "0x40001E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	protected MiniStoryManager manager;

	[Token(Token = "0x40001E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	protected Player player;

	[Token(Token = "0x40001E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6A8A4C", Offset = "0x6A8A4C")]
	private float <timeActive>k__BackingField;

	[Token(Token = "0x40001E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6A8A5C", Offset = "0x6A8A5C")]
	private double <lastTimeFinished>k__BackingField;

	[Token(Token = "0x170000E8")]
	public abstract bool canActivate
	{
		[Token(Token = "0x600035A")]
		get;
	}

	[Token(Token = "0x170000E9")]
	public virtual bool shouldSuppressPlaneSpawning
	{
		[Token(Token = "0x600035B")]
		[Address(RVA = "0x1000194", Offset = "0x1000194", VA = "0x1000194", Slot = "5")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170000EA")]
	public virtual float timeBetweenReactivation
	{
		[Token(Token = "0x600035C")]
		[Address(RVA = "0x100019C", Offset = "0x100019C", VA = "0x100019C", Slot = "6")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x170000EB")]
	public float timeActive
	{
		[Token(Token = "0x600035D")]
		[Address(RVA = "0x10001A8", Offset = "0x10001A8", VA = "0x10001A8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6AE5F8", Offset = "0x6AE5F8")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x600035E")]
		[Address(RVA = "0x10001B0", Offset = "0x10001B0", VA = "0x10001B0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6AE608", Offset = "0x6AE608")]
		set
		{
		}
	}

	[Token(Token = "0x170000EC")]
	public double timeSinceLastFinished
	{
		[Token(Token = "0x600035F")]
		[Address(RVA = "0x100005C", Offset = "0x100005C", VA = "0x100005C")]
		get
		{
			return default(double);
		}
	}

	[Token(Token = "0x170000ED")]
	public double lastTimeFinished
	{
		[Token(Token = "0x6000360")]
		[Address(RVA = "0x10001D4", Offset = "0x10001D4", VA = "0x10001D4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6AE618", Offset = "0x6AE618")]
		get
		{
			return default(double);
		}
		[Token(Token = "0x6000361")]
		[Address(RVA = "0x10001DC", Offset = "0x10001DC", VA = "0x10001DC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6AE628", Offset = "0x6AE628")]
		set
		{
		}
	}

	[Token(Token = "0x170000EE")]
	public City city
	{
		[Token(Token = "0x6000362")]
		[Address(RVA = "0x10001B8", Offset = "0x10001B8", VA = "0x10001B8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000363")]
	[Address(RVA = "0x10001E4", Offset = "0x10001E4", VA = "0x10001E4")]
	public void Init(MiniStoryManager manager, Player player)
	{
	}

	[Token(Token = "0x6000364")]
	public abstract bool Activate();

	[Token(Token = "0x6000365")]
	public abstract void Cancel();

	[Token(Token = "0x6000366")]
	[Address(RVA = "0x10001F4", Offset = "0x10001F4", VA = "0x10001F4", Slot = "9")]
	public virtual void OnInit()
	{
	}

	[Token(Token = "0x6000367")]
	[Address(RVA = "0x10001F8", Offset = "0x10001F8", VA = "0x10001F8", Slot = "10")]
	public virtual void Simulate(float deltaTime)
	{
	}

	[Token(Token = "0x6000368")]
	[Address(RVA = "0x10001FC", Offset = "0x10001FC", VA = "0x10001FC")]
	protected void FinishStory()
	{
	}

	[Token(Token = "0x6000369")]
	[Address(RVA = "0x1000304", Offset = "0x1000304", VA = "0x1000304")]
	private void Update()
	{
	}

	[Token(Token = "0x600036A")]
	[Address(RVA = "0x1000360", Offset = "0x1000360", VA = "0x1000360")]
	protected MiniStory()
	{
	}
}
[Token(Token = "0x2000048")]
public class MiniStoryManager : CityModule, ISimulationModule, IDebugPanelProvider
{
	[Token(Token = "0x20002BD")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6A7E24", Offset = "0x6A7E24")]
	private sealed class <Simulate>d__17 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001315")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001316")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001317")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MiniStoryManager <>4__this;

		[Token(Token = "0x17000365")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60014BC")]
			[Address(RVA = "0x10013C8", Offset = "0x10013C8", VA = "0x10013C8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000366")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60014BE")]
			[Address(RVA = "0x1001430", Offset = "0x1001430", VA = "0x1001430", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60014B9")]
		[Address(RVA = "0x1000B3C", Offset = "0x1000B3C", VA = "0x1000B3C")]
		[DebuggerHidden]
		public <Simulate>d__17(int <>1__state)
		{
		}

		[Token(Token = "0x60014BA")]
		[Address(RVA = "0x10011BC", Offset = "0x10011BC", VA = "0x10011BC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60014BB")]
		[Address(RVA = "0x10011C0", Offset = "0x10011C0", VA = "0x10011C0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60014BD")]
		[Address(RVA = "0x10013D0", Offset = "0x10013D0", VA = "0x10013D0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40001E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<MiniStory> miniStoryPrefabs;

	[Token(Token = "0x40001EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6A8A6C", Offset = "0x6A8A6C")]
	private MiniStory <activeStory>k__BackingField;

	[Token(Token = "0x40001EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private List<MiniStory> stories;

	[Token(Token = "0x40001EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private List<Vector3> beachPositions;

	[Token(Token = "0x40001ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float waitTimeBetweenStories;

	[Token(Token = "0x40001EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6A8A7C", Offset = "0x6A8A7C")]
	private double <lastMiniStoryFinishTime>k__BackingField;

	[Token(Token = "0x170000EF")]
	public MiniStory activeStory
	{
		[Token(Token = "0x600036B")]
		[Address(RVA = "0x1000368", Offset = "0x1000368", VA = "0x1000368")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6AE638", Offset = "0x6AE638")]
		get
		{
			return null;
		}
		[Token(Token = "0x600036C")]
		[Address(RVA = "0x1000370", Offset = "0x1000370", VA = "0x1000370")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6AE648", Offset = "0x6AE648")]
		private set
		{
		}
	}

	[Token(Token = "0x170000F0")]
	public bool shouldSuppressPlaneSpawning
	{
		[Token(Token = "0x600036D")]
		[Address(RVA = "0x1000378", Offset = "0x1000378", VA = "0x1000378")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170000F1")]
	public double lastMiniStoryFinishTime
	{
		[Token(Token = "0x600036E")]
		[Address(RVA = "0x1000414", Offset = "0x1000414", VA = "0x1000414")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6AE658", Offset = "0x6AE658")]
		get
		{
			return default(double);
		}
		[Token(Token = "0x600036F")]
		[Address(RVA = "0x100041C", Offset = "0x100041C", VA = "0x100041C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6AE668", Offset = "0x6AE668")]
		private set
		{
		}
	}

	[Token(Token = "0x6000370")]
	[Address(RVA = "0x1000424", Offset = "0x1000424", VA = "0x1000424", Slot = "7")]
	public override void OnPostLoad()
	{
	}

	[Token(Token = "0x6000371")]
	[Address(RVA = "0x1000458", Offset = "0x1000458", VA = "0x1000458", Slot = "10")]
	public override void OnResetProgress()
	{
	}

	[Token(Token = "0x6000372")]
	[Address(RVA = "0x1000594", Offset = "0x1000594", VA = "0x1000594", Slot = "8")]
	public override void Init()
	{
	}

	[Token(Token = "0x6000373")]
	[Address(RVA = "0x1000ACC", Offset = "0x1000ACC", VA = "0x1000ACC", Slot = "11")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6AE678", Offset = "0x6AE678")]
	public IEnumerator Simulate(float deltaTime)
	{
		return null;
	}

	[Token(Token = "0x6000374")]
	[Address(RVA = "0x1000260", Offset = "0x1000260", VA = "0x1000260")]
	public void Finish(MiniStory story)
	{
	}

	[Token(Token = "0x6000375")]
	[Address(RVA = "0x1000B68", Offset = "0x1000B68", VA = "0x1000B68")]
	public bool GenerateBeachPosition(out Vector3 result, bool canBeVisible = true)
	{
		return default(bool);
	}

	[Token(Token = "0x6000376")]
	[Address(RVA = "0x1000D50", Offset = "0x1000D50", VA = "0x1000D50")]
	public bool GenerateBeachPositionNearPosition(Vector3 basePosition, float minDistance, float maxDistance, out Vector3 result, bool canBeVisible = true)
	{
		return default(bool);
	}

	[Token(Token = "0x6000377")]
	[Address(RVA = "0x1000EB8", Offset = "0x1000EB8", VA = "0x1000EB8")]
	public List<MiniStory> GetStories()
	{
		return null;
	}

	[Token(Token = "0x6000378")]
	[Address(RVA = "0x1000EC0", Offset = "0x1000EC0", VA = "0x1000EC0", Slot = "13")]
	public void OnDebugPanel()
	{
	}

	[Token(Token = "0x6000379")]
	[Address(RVA = "0x10010F4", Offset = "0x10010F4", VA = "0x10010F4")]
	public MiniStoryManager()
	{
	}

	[SpecialName]
	[Token(Token = "0x600037A")]
	[Address(RVA = "0x10011B4", Offset = "0x10011B4", VA = "0x10011B4", Slot = "12")]
	private GameObject ISimulationModule.get_gameObject()
	{
		return null;
	}
}
[Token(Token = "0x2000049")]
public class PlantBoxManager : CityModule
{
	[Token(Token = "0x20002BE")]
	private struct TileArrangement
	{
		[Token(Token = "0x4001318")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int prefabIndex;

		[Token(Token = "0x4001319")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public int rotation;

		[Token(Token = "0x60014BF")]
		[Address(RVA = "0x72197C", Offset = "0x72197C", VA = "0x72197C")]
		public TileArrangement(int p, int r)
		{
		}
	}

	[Token(Token = "0x20002BF")]
	public struct Tile
	{
		[Token(Token = "0x400131A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int plantIndex;

		[Token(Token = "0x400131B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public MeshBatcherV2.InstanceId boxId;

		[Token(Token = "0x400131C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public MeshBatcherV2.InstanceId plantId;

		[Token(Token = "0x400131D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public MeshBatcherV2.InstanceId patchId;
	}

	[Token(Token = "0x20002C0")]
	private struct PreviewChange
	{
		[Token(Token = "0x400131E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int x;

		[Token(Token = "0x400131F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public int y;

		[Token(Token = "0x4001320")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public int plantIndex;

		[Token(Token = "0x4001321")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public bool keepChange;

		[Token(Token = "0x60014C0")]
		[Address(RVA = "0x721944", Offset = "0x721944", VA = "0x721944")]
		public PreviewChange(int inX, int inY, int inPlantIndex)
		{
		}

		[Token(Token = "0x60014C1")]
		[Address(RVA = "0x721958", Offset = "0x721958", VA = "0x721958")]
		public PreviewChange MarkOld()
		{
			return default(PreviewChange);
		}

		[Token(Token = "0x60014C2")]
		[Address(RVA = "0x721968", Offset = "0x721968", VA = "0x721968")]
		public PreviewChange MarkKeep()
		{
			return default(PreviewChange);
		}
	}

	[Token(Token = "0x20002C1")]
	public class PlantBoxSaveData : SaveSystem.ModuleData
	{
		[Token(Token = "0x4001322")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string tiles;

		[NonSerialized]
		[Token(Token = "0x4001323")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[XmlIgnore]
		public Tile[] tilesRaw;

		[Token(Token = "0x60014C3")]
		[Address(RVA = "0xFD4488", Offset = "0xFD4488", VA = "0xFD4488", Slot = "4")]
		public override void OnPreWrite()
		{
		}

		[Token(Token = "0x60014C4")]
		[Address(RVA = "0xFD3ED0", Offset = "0xFD3ED0", VA = "0xFD3ED0")]
		public PlantBoxSaveData()
		{
		}
	}

	[Token(Token = "0x40001EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<GameObject> plantBoxPrefabs;

	[Token(Token = "0x40001F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public List<PropCollection> plantPrefabs;

	[Token(Token = "0x40001F1")]
	private const int tileLone = 0;

	[Token(Token = "0x40001F2")]
	private const int tileEnd = 1;

	[Token(Token = "0x40001F3")]
	private const int tileStraight = 2;

	[Token(Token = "0x40001F4")]
	private const int tileL = 3;

	[Token(Token = "0x40001F5")]
	private const int tileT = 4;

	[Token(Token = "0x40001F6")]
	private const int tileCross = 5;

	[Token(Token = "0x40001F7")]
	private const int tilePatch = 6;

	[Token(Token = "0x40001F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private TileArrangement[] tileArrangements;

	[Token(Token = "0x40001F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float placementWiggle;

	[Token(Token = "0x40001FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float scaleWiggle;

	[Token(Token = "0x40001FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float baseScale;

	[Token(Token = "0x40001FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float plantHeight;

	[Token(Token = "0x40001FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public MeshBatcherV2 meshBatcher;

	[Token(Token = "0x40001FE")]
	private const int noPlantIndex = -1;

	[Token(Token = "0x40001FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool needsRefresh;

	[Token(Token = "0x4000200")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6A8A8C", Offset = "0x6A8A8C")]
	private int <unlockLevel>k__BackingField;

	[Token(Token = "0x4000201")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Tile[] tiles;

	[Token(Token = "0x4000202")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private List<PreviewChange> previewChangesAdded;

	[Token(Token = "0x4000203")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private List<PreviewChange> previewChangesRemoved;

	[Token(Token = "0x4000204")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private bool isPreviewingChanges;

	[Token(Token = "0x170000F2")]
	public int unlockLevel
	{
		[Token(Token = "0x600037B")]
		[Address(RVA = "0xFD1CC0", Offset = "0xFD1CC0", VA = "0xFD1CC0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6AE6DC", Offset = "0x6AE6DC")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x600037C")]
		[Address(RVA = "0xFD1CC8", Offset = "0xFD1CC8", VA = "0xFD1CC8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6AE6EC", Offset = "0x6AE6EC")]
		private set
		{
		}
	}

	[Token(Token = "0x170000F3")]
	public bool hasPreviewChanges
	{
		[Token(Token = "0x600037D")]
		[Address(RVA = "0xFD1CD0", Offset = "0xFD1CD0", VA = "0xFD1CD0")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170000F4")]
	public override Type saveModuleDataType
	{
		[Token(Token = "0x600038C")]
		[Address(RVA = "0xFD3DC0", Offset = "0xFD3DC0", VA = "0xFD3DC0", Slot = "4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600037E")]
	[Address(RVA = "0xFD1D44", Offset = "0xFD1D44", VA = "0xFD1D44", Slot = "8")]
	public override void Init()
	{
	}

	[Token(Token = "0x600037F")]
	[Address(RVA = "0xFD1EE0", Offset = "0xFD1EE0", VA = "0xFD1EE0", Slot = "10")]
	public override void OnResetProgress()
	{
	}

	[Token(Token = "0x6000380")]
	[Address(RVA = "0xFD2094", Offset = "0xFD2094", VA = "0xFD2094")]
	public void ClearPreview()
	{
	}

	[Token(Token = "0x6000381")]
	[Address(RVA = "0xFD2B90", Offset = "0xFD2B90", VA = "0xFD2B90")]
	private void RemoveStalePreviewChanges()
	{
	}

	[Token(Token = "0x6000382")]
	[Address(RVA = "0xFD2DB4", Offset = "0xFD2DB4", VA = "0xFD2DB4")]
	public void BeginPreviewChanges()
	{
	}

	[Token(Token = "0x6000383")]
	[Address(RVA = "0xFD2F40", Offset = "0xFD2F40", VA = "0xFD2F40")]
	public void EndPreviewChanges()
	{
	}

	[Token(Token = "0x6000384")]
	[Address(RVA = "0xFD2254", Offset = "0xFD2254", VA = "0xFD2254")]
	public void AddPlant(int x, int y, int plantIndex, bool fromSaveData = false, bool affectSandstorm = true)
	{
	}

	[Token(Token = "0x6000385")]
	[Address(RVA = "0xFD333C", Offset = "0xFD333C", VA = "0xFD333C")]
	public PropInfo GetPropInfo(int x, int y)
	{
		return null;
	}

	[Token(Token = "0x6000386")]
	[Address(RVA = "0xFD34B4", Offset = "0xFD34B4", VA = "0xFD34B4")]
	public bool HasPlant(int x, int y)
	{
		return default(bool);
	}

	[Token(Token = "0x6000387")]
	[Address(RVA = "0xFD2788", Offset = "0xFD2788", VA = "0xFD2788")]
	public void RemovePlant(int x, int y, bool affectSandstorm = true)
	{
	}

	[Token(Token = "0x6000388")]
	[Address(RVA = "0xFD3194", Offset = "0xFD3194", VA = "0xFD3194")]
	private void RefreshTileArea(int x, int y)
	{
	}

	[Token(Token = "0x6000389")]
	[Address(RVA = "0xFD3558", Offset = "0xFD3558", VA = "0xFD3558")]
	private void RefreshTile(int x, int y)
	{
	}

	[Token(Token = "0x600038A")]
	[Address(RVA = "0xFD2FA0", Offset = "0xFD2FA0", VA = "0xFD2FA0")]
	private void GetPlantingTransform(int x, int y, out Vector3 position, out Quaternion rotation, out Vector3 scale)
	{
	}

	[Token(Token = "0x600038B")]
	[Address(RVA = "0xFD3BE0", Offset = "0xFD3BE0", VA = "0xFD3BE0")]
	public int GetPlantCost(int x, int y, int propCollectionIndex)
	{
		return default(int);
	}

	[Token(Token = "0x600038D")]
	[Address(RVA = "0xFD3E30", Offset = "0xFD3E30", VA = "0xFD3E30", Slot = "5")]
	public override SaveSystem.ModuleData OnSave()
	{
		return null;
	}

	[Token(Token = "0x600038E")]
	[Address(RVA = "0xFD3ED8", Offset = "0xFD3ED8", VA = "0xFD3ED8", Slot = "6")]
	public override void OnLoad(SaveSystem.SaveGame saveGame, SaveSystem.ModuleData data)
	{
	}

	[Token(Token = "0x600038F")]
	[Address(RVA = "0xFD4208", Offset = "0xFD4208", VA = "0xFD4208")]
	private void Update()
	{
	}

	[Token(Token = "0x6000390")]
	[Address(RVA = "0xFD4260", Offset = "0xFD4260", VA = "0xFD4260")]
	public PlantBoxManager()
	{
	}
}
[Token(Token = "0x200004A")]
public class PropManager : CityModule
{
	[Token(Token = "0x20002C2")]
	private struct PreviewChange
	{
		[Token(Token = "0x4001324")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public PropInfo propInfo;

		[Token(Token = "0x4001325")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Vector3 position;

		[Token(Token = "0x4001326")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public Quaternion rotation;

		[Token(Token = "0x4001327")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public Vector3 scale;

		[Token(Token = "0x4001328")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool keepChange;

		[Token(Token = "0x17000367")]
		public int x
		{
			[Token(Token = "0x60014C6")]
			[Address(RVA = "0x7223DC", Offset = "0x7223DC", VA = "0x7223DC")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000368")]
		public int y
		{
			[Token(Token = "0x60014C7")]
			[Address(RVA = "0x7223E4", Offset = "0x7223E4", VA = "0x7223E4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x60014C5")]
		[Address(RVA = "0x7223AC", Offset = "0x7223AC", VA = "0x7223AC")]
		public PreviewChange(PropInfo propInfo, Vector3 position, Quaternion rotation, Vector3 scale)
		{
		}

		[Token(Token = "0x60014C8")]
		[Address(RVA = "0x7223EC", Offset = "0x7223EC", VA = "0x7223EC")]
		public PreviewChange MarkKeep()
		{
			return default(PreviewChange);
		}

		[Token(Token = "0x60014C9")]
		[Address(RVA = "0x722410", Offset = "0x722410", VA = "0x722410")]
		public PreviewChange MarkOld()
		{
			return default(PreviewChange);
		}
	}

	[Token(Token = "0x20002C3")]
	public struct Tile
	{
		[Token(Token = "0x4001329")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public MeshBatcherV2.InstanceId meshInstance;

		[Token(Token = "0x400132A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public int prefabIndex;

		[Token(Token = "0x400132B")]
		public const int unoccupiedIndex = 255;

		[Token(Token = "0x400132C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Vector3 position;

		[Token(Token = "0x400132D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public Quaternion rotation;

		[Token(Token = "0x400132E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public Vector3 scale;

		[Token(Token = "0x400132F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public BirdManager.PerchTransform perchTransform;

		[Token(Token = "0x17000369")]
		public bool occupied
		{
			[Token(Token = "0x60014CA")]
			[Address(RVA = "0x72246C", Offset = "0x72246C", VA = "0x72246C")]
			get
			{
				return default(bool);
			}
		}
	}

	[Token(Token = "0x20002C4")]
	public class PropSaveData : SaveSystem.ModuleData
	{
		[Token(Token = "0x4001330")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int width;

		[Token(Token = "0x4001331")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int height;

		[Token(Token = "0x4001332")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string tiles;

		[NonSerialized]
		[Token(Token = "0x4001333")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[XmlIgnore]
		public Tile[] tilesRaw;

		[Token(Token = "0x60014CB")]
		[Address(RVA = "0x1102550", Offset = "0x1102550", VA = "0x1102550", Slot = "4")]
		public override void OnPreWrite()
		{
		}

		[Token(Token = "0x60014CC")]
		[Address(RVA = "0x1101FF0", Offset = "0x1101FF0", VA = "0x1101FF0")]
		public PropSaveData()
		{
		}
	}

	[Token(Token = "0x4000205")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public MeshBatcherV2 meshBatcher;

	[Token(Token = "0x4000206")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private List<PreviewChange> previewChangesAdded;

	[Token(Token = "0x4000207")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private List<PreviewChange> previewChangesRemoved;

	[Token(Token = "0x4000208")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool isPreviewingChanges;

	[Token(Token = "0x4000209")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Tile[] tiles;

	[Token(Token = "0x400020A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Tile[] startingTiles;

	[Token(Token = "0x170000F5")]
	public override Type saveModuleDataType
	{
		[Token(Token = "0x600039E")]
		[Address(RVA = "0x1101EC0", Offset = "0x1101EC0", VA = "0x1101EC0", Slot = "4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000391")]
	[Address(RVA = "0x10FF62C", Offset = "0x10FF62C", VA = "0x10FF62C")]
	private List<GameObject> GetLandscapePropObjects()
	{
		return null;
	}

	[Token(Token = "0x6000392")]
	[Address(RVA = "0x10FF764", Offset = "0x10FF764", VA = "0x10FF764", Slot = "8")]
	public override void Init()
	{
	}

	[Token(Token = "0x6000393")]
	[Address(RVA = "0x10FF878", Offset = "0x10FF878", VA = "0x10FF878", Slot = "9")]
	public override void PostInit()
	{
	}

	[Token(Token = "0x6000394")]
	[Address(RVA = "0x10FFD68", Offset = "0x10FFD68", VA = "0x10FFD68", Slot = "10")]
	public override void OnResetProgress()
	{
	}

	[Token(Token = "0x6000395")]
	[Address(RVA = "0x1100380", Offset = "0x1100380", VA = "0x1100380")]
	public bool AddProp(PropInfo propInfo, Vector3 position, Quaternion rotation, Vector3 scale)
	{
		return default(bool);
	}

	[Token(Token = "0x6000396")]
	[Address(RVA = "0x1100D14", Offset = "0x1100D14", VA = "0x1100D14")]
	public void RemoveProp(int x, int y)
	{
	}

	[Token(Token = "0x6000397")]
	[Address(RVA = "0x110133C", Offset = "0x110133C", VA = "0x110133C")]
	public bool HasProp(int x, int y)
	{
		return default(bool);
	}

	[Token(Token = "0x6000398")]
	[Address(RVA = "0x11013E4", Offset = "0x11013E4", VA = "0x11013E4")]
	public PropInfo GetPropInfo(int x, int y)
	{
		return null;
	}

	[Token(Token = "0x6000399")]
	[Address(RVA = "0x10FDD28", Offset = "0x10FDD28", VA = "0x10FDD28")]
	public void AdjustConstructionCost(ConstructionCost costReport, int x, int y)
	{
	}

	[Token(Token = "0x600039A")]
	[Address(RVA = "0x110172C", Offset = "0x110172C", VA = "0x110172C")]
	public void ClearPreview()
	{
	}

	[Token(Token = "0x600039B")]
	[Address(RVA = "0x11019B4", Offset = "0x11019B4", VA = "0x11019B4")]
	public void BeginPreviewChanges()
	{
	}

	[Token(Token = "0x600039C")]
	[Address(RVA = "0x1101BC0", Offset = "0x1101BC0", VA = "0x1101BC0")]
	private void RemoveStalePreviewChanges()
	{
	}

	[Token(Token = "0x600039D")]
	[Address(RVA = "0x1101EB8", Offset = "0x1101EB8", VA = "0x1101EB8")]
	public void EndPreviewChanges()
	{
	}

	[Token(Token = "0x600039F")]
	[Address(RVA = "0x1101F30", Offset = "0x1101F30", VA = "0x1101F30", Slot = "5")]
	public override SaveSystem.ModuleData OnSave()
	{
		return null;
	}

	[Token(Token = "0x60003A0")]
	[Address(RVA = "0x1101FF8", Offset = "0x1101FF8", VA = "0x1101FF8", Slot = "6")]
	public override void OnLoad(SaveSystem.SaveGame saveGame, SaveSystem.ModuleData data)
	{
	}

	[Token(Token = "0x60003A1")]
	[Address(RVA = "0x11024A4", Offset = "0x11024A4", VA = "0x11024A4", Slot = "7")]
	public override void OnPostLoad()
	{
	}

	[Token(Token = "0x60003A2")]
	[Address(RVA = "0x11024C0", Offset = "0x11024C0", VA = "0x11024C0")]
	public PropManager()
	{
	}
}
[Token(Token = "0x200004B")]
public class RegionManager : CityModule, IDebugPanelProvider
{
	[Token(Token = "0x20002C5")]
	public class RegionSaveData : SaveSystem.ModuleData
	{
		[Token(Token = "0x4001334")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<int> unlockedRegions;

		[Token(Token = "0x4001335")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int unlockTokens;

		[Token(Token = "0x4001336")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public double lastUnlockTokenReceivedTime;

		[Token(Token = "0x60014CD")]
		[Address(RVA = "0x1105D50", Offset = "0x1105D50", VA = "0x1105D50")]
		public RegionSaveData()
		{
		}
	}

	[Token(Token = "0x400020B")]
	public const int maxRegions = 20;

	[Token(Token = "0x400020C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private List<int> unlockedRegions;

	[Token(Token = "0x400020D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Color lockedColour;

	[Token(Token = "0x400020E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Color previewUnlockColour;

	[Token(Token = "0x400020F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Color previewCannotUnlockColour;

	[Token(Token = "0x4000210")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private double lastUnlockTokenReceivedTime;

	[Token(Token = "0x4000211")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6A8A9C", Offset = "0x6A8A9C")]
	private int <unlockTokens>k__BackingField;

	[Token(Token = "0x170000F6")]
	public float timeSinceUnlockTokenReceived
	{
		[Token(Token = "0x60003A3")]
		[Address(RVA = "0x11055A0", Offset = "0x11055A0", VA = "0x11055A0")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x170000F7")]
	public int unlockTokens
	{
		[Token(Token = "0x60003A4")]
		[Address(RVA = "0x1105624", Offset = "0x1105624", VA = "0x1105624")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6AE6FC", Offset = "0x6AE6FC")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60003A5")]
		[Address(RVA = "0x110562C", Offset = "0x110562C", VA = "0x110562C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6AE70C", Offset = "0x6AE70C")]
		private set
		{
		}
	}

	[Token(Token = "0x170000F8")]
	public int numUnlockedRegions
	{
		[Token(Token = "0x60003A6")]
		[Address(RVA = "0x1105634", Offset = "0x1105634", VA = "0x1105634")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x170000F9")]
	public override Type saveModuleDataType
	{
		[Token(Token = "0x60003B2")]
		[Address(RVA = "0x1105B64", Offset = "0x1105B64", VA = "0x1105B64", Slot = "4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60003A7")]
	[Address(RVA = "0x11015F8", Offset = "0x11015F8", VA = "0x11015F8")]
	public int GetRegion(int x, int y)
	{
		return default(int);
	}

	[Token(Token = "0x60003A8")]
	[Address(RVA = "0x11016AC", Offset = "0x11016AC", VA = "0x11016AC")]
	public bool IsRegionUnlocked(int region)
	{
		return default(bool);
	}

	[Token(Token = "0x60003A9")]
	[Address(RVA = "0x10FDC64", Offset = "0x10FDC64", VA = "0x10FDC64")]
	public bool IsRegionUnlocked(int x, int y)
	{
		return default(bool);
	}

	[Token(Token = "0x60003AA")]
	[Address(RVA = "0x10FD0A4", Offset = "0x10FD0A4", VA = "0x10FD0A4")]
	public void UnlockRegion(int region)
	{
	}

	[Token(Token = "0x60003AB")]
	[Address(RVA = "0x11057E4", Offset = "0x11057E4", VA = "0x11057E4")]
	public void UnlockAllCheat()
	{
	}

	[Token(Token = "0x60003AC")]
	[Address(RVA = "0x11058A4", Offset = "0x11058A4", VA = "0x11058A4")]
	public void IncrementUnlockTokens()
	{
	}

	[Token(Token = "0x60003AD")]
	[Address(RVA = "0x11058E4", Offset = "0x11058E4", VA = "0x11058E4")]
	public void PreviewUnlockRegions(ConstructionCost costReport)
	{
	}

	[Token(Token = "0x60003AE")]
	[Address(RVA = "0x1105688", Offset = "0x1105688", VA = "0x1105688")]
	private void TintLandscapeColours()
	{
	}

	[Token(Token = "0x60003AF")]
	[Address(RVA = "0x1105AC8", Offset = "0x1105AC8", VA = "0x1105AC8")]
	public void UndoRegionUnlock(int regionIndex)
	{
	}

	[Token(Token = "0x60003B0")]
	[Address(RVA = "0x10FDEF0", Offset = "0x10FDEF0", VA = "0x10FDEF0")]
	public void AdjustConstructionCost(ConstructionCost costReport, int x, int y)
	{
	}

	[Token(Token = "0x60003B1")]
	[Address(RVA = "0x1105B60", Offset = "0x1105B60", VA = "0x1105B60", Slot = "9")]
	public override void PostInit()
	{
	}

	[Token(Token = "0x60003B3")]
	[Address(RVA = "0x1105BD4", Offset = "0x1105BD4", VA = "0x1105BD4", Slot = "6")]
	public override void OnLoad(SaveSystem.SaveGame saveGame, SaveSystem.ModuleData data)
	{
	}

	[Token(Token = "0x60003B4")]
	[Address(RVA = "0x1105CA0", Offset = "0x1105CA0", VA = "0x1105CA0", Slot = "5")]
	public override SaveSystem.ModuleData OnSave()
	{
		return null;
	}

	[Token(Token = "0x60003B5")]
	[Address(RVA = "0x1105D58", Offset = "0x1105D58", VA = "0x1105D58", Slot = "11")]
	public void OnDebugPanel()
	{
	}

	[Token(Token = "0x60003B6")]
	[Address(RVA = "0x1105E58", Offset = "0x1105E58", VA = "0x1105E58")]
	public string GetNextRegionUnlockMessage()
	{
		return null;
	}

	[Token(Token = "0x60003B7")]
	[Address(RVA = "0x1105FF0", Offset = "0x1105FF0", VA = "0x1105FF0", Slot = "10")]
	public override void OnResetProgress()
	{
	}

	[Token(Token = "0x60003B8")]
	[Address(RVA = "0x1106050", Offset = "0x1106050", VA = "0x1106050")]
	public RegionManager()
	{
	}
}
[Token(Token = "0x200004C")]
public class RoadManager : CityModule
{
	[Token(Token = "0x20002C6")]
	public class Road
	{
		[Token(Token = "0x4001337")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string name;

		[Token(Token = "0x4001338")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public short index;

		[Token(Token = "0x4001339")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int _numTiles;

		[Token(Token = "0x400133A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int x;

		[Token(Token = "0x400133B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public int y;

		[Token(Token = "0x400133C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float trafficDensity;

		[Token(Token = "0x400133D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public List<short> connections;

		[Token(Token = "0x1700036A")]
		public int numTiles
		{
			[Token(Token = "0x60014CE")]
			[Address(RVA = "0x110E614", Offset = "0x110E614", VA = "0x110E614")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60014CF")]
			[Address(RVA = "0x110E61C", Offset = "0x110E61C", VA = "0x110E61C")]
			set
			{
			}
		}

		[Token(Token = "0x1700036B")]
		public bool isValid
		{
			[Token(Token = "0x60014D0")]
			[Address(RVA = "0x10FEB5C", Offset = "0x10FEB5C", VA = "0x10FEB5C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60014D1")]
		[Address(RVA = "0x110AA84", Offset = "0x110AA84", VA = "0x110AA84")]
		public Road()
		{
		}
	}

	[Token(Token = "0x20002C7")]
	private delegate void TileVisitor(int x, int y);

	[Token(Token = "0x20002C8")]
	public class RoadSaveData : SaveSystem.ModuleData
	{
		[Token(Token = "0x400133E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Road[] roads;

		[Token(Token = "0x400133F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string roadMap;

		[Token(Token = "0x4001340")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string blockedMap;

		[NonSerialized]
		[Token(Token = "0x4001341")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[XmlIgnore]
		public short[] roadMapRaw;

		[NonSerialized]
		[Token(Token = "0x4001342")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[XmlIgnore]
		public bool[] blockedMapRaw;

		[Token(Token = "0x4001343")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public int width;

		[Token(Token = "0x4001344")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public int height;

		[Token(Token = "0x60014D6")]
		[Address(RVA = "0x110E624", Offset = "0x110E624", VA = "0x110E624", Slot = "4")]
		public override void OnPreWrite()
		{
		}

		[Token(Token = "0x60014D7")]
		[Address(RVA = "0x110D264", Offset = "0x110D264", VA = "0x110D264")]
		public RoadSaveData()
		{
		}
	}

	[Token(Token = "0x20002C9")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6A7E34", Offset = "0x6A7E34")]
	private sealed class <>c__DisplayClass32_0
	{
		[Token(Token = "0x4001345")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public RoadManager <>4__this;

		[Token(Token = "0x4001346")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Road targetRoad;

		[Token(Token = "0x60014D8")]
		[Address(RVA = "0x110B6D8", Offset = "0x110B6D8", VA = "0x110B6D8")]
		public <>c__DisplayClass32_0()
		{
		}

		[Token(Token = "0x60014D9")]
		[Address(RVA = "0x110DB5C", Offset = "0x110DB5C", VA = "0x110DB5C")]
		internal void <RecreateRoadConnections>b__0(int x, int y)
		{
		}
	}

	[Token(Token = "0x20002CA")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6A7E44", Offset = "0x6A7E44")]
	private sealed class <>c__DisplayClass33_0
	{
		[Token(Token = "0x4001347")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int firstCount;

		[Token(Token = "0x4001348")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public RoadManager <>4__this;

		[Token(Token = "0x60014DA")]
		[Address(RVA = "0x110BA8C", Offset = "0x110BA8C", VA = "0x110BA8C")]
		public <>c__DisplayClass33_0()
		{
		}

		[Token(Token = "0x60014DB")]
		[Address(RVA = "0x110DC28", Offset = "0x110DC28", VA = "0x110DC28")]
		internal void <SplitRoad>b__0(int x, int y)
		{
		}
	}

	[Token(Token = "0x20002CB")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6A7E54", Offset = "0x6A7E54")]
	private sealed class <>c__DisplayClass33_1
	{
		[Token(Token = "0x4001349")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Road newRoad;

		[Token(Token = "0x400134A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public <>c__DisplayClass33_0 CS$<>8__locals1;

		[Token(Token = "0x60014DC")]
		[Address(RVA = "0x110BA94", Offset = "0x110BA94", VA = "0x110BA94")]
		public <>c__DisplayClass33_1()
		{
		}

		[Token(Token = "0x60014DD")]
		[Address(RVA = "0x110DC38", Offset = "0x110DC38", VA = "0x110DC38")]
		internal void <SplitRoad>b__1(int x, int y)
		{
		}

		[Token(Token = "0x60014DE")]
		[Address(RVA = "0x110DCB8", Offset = "0x110DCB8", VA = "0x110DCB8")]
		internal void <SplitRoad>b__2(int x, int y)
		{
		}
	}

	[Token(Token = "0x20002CC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6A7E64", Offset = "0x6A7E64")]
	private sealed class <>c__DisplayClass37_0
	{
		[Token(Token = "0x400134B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Road firstNeighbour;

		[Token(Token = "0x400134C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Road secondNeighbour;

		[Token(Token = "0x400134D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public RoadManager <>4__this;

		[Token(Token = "0x60014DF")]
		[Address(RVA = "0x110C274", Offset = "0x110C274", VA = "0x110C274")]
		public <>c__DisplayClass37_0()
		{
		}

		[Token(Token = "0x60014E0")]
		[Address(RVA = "0x110DD38", Offset = "0x110DD38", VA = "0x110DD38")]
		internal void <PlaceRoadInternal>b__0(int i, int j)
		{
		}

		[Token(Token = "0x60014E1")]
		[Address(RVA = "0x110DDC4", Offset = "0x110DDC4", VA = "0x110DDC4")]
		internal void <PlaceRoadInternal>b__1(int i, int j)
		{
		}
	}

	[Token(Token = "0x20002CD")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6A7E74", Offset = "0x6A7E74")]
	private sealed class <>c__DisplayClass38_0
	{
		[Token(Token = "0x400134E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Road firstNeighbour;

		[Token(Token = "0x400134F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Road secondNeighbour;

		[Token(Token = "0x4001350")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public RoadManager <>4__this;

		[Token(Token = "0x60014E2")]
		[Address(RVA = "0x110C730", Offset = "0x110C730", VA = "0x110C730")]
		public <>c__DisplayClass38_0()
		{
		}

		[Token(Token = "0x60014E3")]
		[Address(RVA = "0x110DE50", Offset = "0x110DE50", VA = "0x110DE50")]
		internal void <FixUpJunction>b__0(int i, int j)
		{
		}

		[Token(Token = "0x60014E4")]
		[Address(RVA = "0x110DEDC", Offset = "0x110DEDC", VA = "0x110DEDC")]
		internal void <FixUpJunction>b__1(int i, int j)
		{
		}
	}

	[Token(Token = "0x20002CE")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6A7E84", Offset = "0x6A7E84")]
	private sealed class <>c__DisplayClass39_0
	{
		[Token(Token = "0x4001351")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int secondX;

		[Token(Token = "0x4001352")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int secondY;

		[Token(Token = "0x4001353")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public RoadManager <>4__this;

		[Token(Token = "0x60014E5")]
		[Address(RVA = "0x110CE14", Offset = "0x110CE14", VA = "0x110CE14")]
		public <>c__DisplayClass39_0()
		{
		}
	}

	[Token(Token = "0x20002CF")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6A7E94", Offset = "0x6A7E94")]
	private sealed class <>c__DisplayClass39_1
	{
		[Token(Token = "0x4001354")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int firstCount;

		[Token(Token = "0x4001355")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public bool isLoop;

		[Token(Token = "0x4001356")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int secondCount;

		[Token(Token = "0x4001357")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public <>c__DisplayClass39_0 CS$<>8__locals1;

		[Token(Token = "0x60014E6")]
		[Address(RVA = "0x110CE1C", Offset = "0x110CE1C", VA = "0x110CE1C")]
		public <>c__DisplayClass39_1()
		{
		}

		[Token(Token = "0x60014E7")]
		[Address(RVA = "0x110DF68", Offset = "0x110DF68", VA = "0x110DF68")]
		internal void <ClearRoadTile>b__0(int i, int j)
		{
		}

		[Token(Token = "0x60014E8")]
		[Address(RVA = "0x110DFAC", Offset = "0x110DFAC", VA = "0x110DFAC")]
		internal void <ClearRoadTile>b__1(int i, int j)
		{
		}
	}

	[Token(Token = "0x20002D0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6A7EA4", Offset = "0x6A7EA4")]
	private sealed class <>c__DisplayClass39_2
	{
		[Token(Token = "0x4001358")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Road newRoad;

		[Token(Token = "0x4001359")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public <>c__DisplayClass39_1 CS$<>8__locals2;

		[Token(Token = "0x60014E9")]
		[Address(RVA = "0x110CE24", Offset = "0x110CE24", VA = "0x110CE24")]
		public <>c__DisplayClass39_2()
		{
		}

		[Token(Token = "0x60014EA")]
		[Address(RVA = "0x110DFBC", Offset = "0x110DFBC", VA = "0x110DFBC")]
		internal void <ClearRoadTile>b__2(int i, int j)
		{
		}

		[Token(Token = "0x60014EB")]
		[Address(RVA = "0x110E044", Offset = "0x110E044", VA = "0x110E044")]
		internal void <ClearRoadTile>b__3(int i, int j)
		{
		}
	}

	[Token(Token = "0x20002D1")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6A7EB4", Offset = "0x6A7EB4")]
	private sealed class <StressTestRoutine>d__48 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400135A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400135B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400135C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public RoadManager <>4__this;

		[Token(Token = "0x1700036C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60014EF")]
			[Address(RVA = "0x110E5A4", Offset = "0x110E5A4", VA = "0x110E5A4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700036D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60014F1")]
			[Address(RVA = "0x110E60C", Offset = "0x110E60C", VA = "0x110E60C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60014EC")]
		[Address(RVA = "0x110DAC0", Offset = "0x110DAC0", VA = "0x110DAC0")]
		[DebuggerHidden]
		public <StressTestRoutine>d__48(int <>1__state)
		{
		}

		[Token(Token = "0x60014ED")]
		[Address(RVA = "0x110E0CC", Offset = "0x110E0CC", VA = "0x110E0CC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60014EE")]
		[Address(RVA = "0x110E0D0", Offset = "0x110E0D0", VA = "0x110E0D0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60014F0")]
		[Address(RVA = "0x110E5AC", Offset = "0x110E5AC", VA = "0x110E5AC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000212")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<Road> roads;

	[Token(Token = "0x4000213")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private short[] roadMap;

	[Token(Token = "0x4000214")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool[] lockMap;

	[Token(Token = "0x4000215")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool[] blockedMap;

	[Token(Token = "0x170000FA")]
	public static RoadManager current
	{
		[Token(Token = "0x60003B9")]
		[Address(RVA = "0x1107818", Offset = "0x1107818", VA = "0x1107818")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000FB")]
	public override Type saveModuleDataType
	{
		[Token(Token = "0x60003DC")]
		[Address(RVA = "0x110D0D8", Offset = "0x110D0D8", VA = "0x110D0D8", Slot = "4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60003BA")]
	[Address(RVA = "0x11078F0", Offset = "0x11078F0", VA = "0x11078F0", Slot = "8")]
	public override void Init()
	{
	}

	[Token(Token = "0x60003BB")]
	[Address(RVA = "0x1107A78", Offset = "0x1107A78", VA = "0x1107A78")]
	public void PlaceLandscapeRoadTile(LandscapeRoadTile lrt)
	{
	}

	[Token(Token = "0x60003BC")]
	[Address(RVA = "0x1107C38", Offset = "0x1107C38", VA = "0x1107C38")]
	public bool HasBuiltAnyRoadsYet()
	{
		return default(bool);
	}

	[Token(Token = "0x60003BD")]
	[Address(RVA = "0x10FDCA8", Offset = "0x10FDCA8", VA = "0x10FDCA8")]
	public bool IsLocked(int x, int y)
	{
		return default(bool);
	}

	[Token(Token = "0x60003BE")]
	[Address(RVA = "0x1107AEC", Offset = "0x1107AEC", VA = "0x1107AEC")]
	private void SetTileLock(int x, int y, bool locked)
	{
	}

	[Token(Token = "0x60003BF")]
	[Address(RVA = "0x1107DB0", Offset = "0x1107DB0", VA = "0x1107DB0")]
	public bool IsBlocked(int x, int y)
	{
		return default(bool);
	}

	[Token(Token = "0x60003C0")]
	[Address(RVA = "0x1107E30", Offset = "0x1107E30", VA = "0x1107E30")]
	public void SetTileBlocked(int x, int y, bool blocked)
	{
	}

	[Token(Token = "0x60003C1")]
	[Address(RVA = "0x1107EB0", Offset = "0x1107EB0", VA = "0x1107EB0")]
	private bool ValidateRoadLength(int samplePosition)
	{
		return default(bool);
	}

	[Token(Token = "0x60003C2")]
	[Address(RVA = "0x110831C", Offset = "0x110831C", VA = "0x110831C")]
	private void DebugHighlightRoad(int n, Color color)
	{
	}

	[Token(Token = "0x60003C3")]
	[Address(RVA = "0x11084F0", Offset = "0x11084F0", VA = "0x11084F0")]
	private bool ValidateConnections(int x, int y)
	{
		return default(bool);
	}

	[Token(Token = "0x60003C4")]
	[Address(RVA = "0x1108E60", Offset = "0x1108E60", VA = "0x1108E60")]
	public bool Validate()
	{
		return default(bool);
	}

	[Token(Token = "0x60003C5")]
	[Address(RVA = "0x110A944", Offset = "0x110A944", VA = "0x110A944")]
	private Road CreateRoad()
	{
		return null;
	}

	[Token(Token = "0x60003C6")]
	[Address(RVA = "0x110AAF4", Offset = "0x110AAF4", VA = "0x110AAF4")]
	private void DestroyRoad(Road road)
	{
	}

	[Token(Token = "0x60003C7")]
	[Address(RVA = "0x1107D50", Offset = "0x1107D50", VA = "0x1107D50")]
	private bool IsInRange(int x, int y)
	{
		return default(bool);
	}

	[Token(Token = "0x60003C8")]
	[Address(RVA = "0x10FEC20", Offset = "0x10FEC20", VA = "0x10FEC20")]
	public Road GetRoad(int x, int y)
	{
		return null;
	}

	[Token(Token = "0x60003C9")]
	[Address(RVA = "0x10FDC8C", Offset = "0x10FDC8C", VA = "0x10FDC8C")]
	public bool IsRoad(int x, int y)
	{
		return default(bool);
	}

	[Token(Token = "0x60003CA")]
	[Address(RVA = "0x110A8E4", Offset = "0x110A8E4", VA = "0x110A8E4")]
	public bool IsJunction(int x, int y)
	{
		return default(bool);
	}

	[Token(Token = "0x60003CB")]
	[Address(RVA = "0x110AC84", Offset = "0x110AC84", VA = "0x110AC84")]
	private void PlaceCheckNeighbour(ref int numNeighbours, ref Road firstNeighbour, ref Road secondNeighbour, int x, int y)
	{
	}

	[Token(Token = "0x60003CC")]
	[Address(RVA = "0x110ABF4", Offset = "0x110ABF4", VA = "0x110ABF4")]
	private int GetNumNeighbours(int x, int y)
	{
		return default(int);
	}

	[Token(Token = "0x60003CD")]
	[Address(RVA = "0x110ACE8", Offset = "0x110ACE8", VA = "0x110ACE8")]
	private bool GetFirstNeighbour(int x, int y, out Road neighbour, out int neighbourX, out int neighbourY)
	{
		return default(bool);
	}

	[Token(Token = "0x60003CE")]
	[Address(RVA = "0x110ADC4", Offset = "0x110ADC4", VA = "0x110ADC4")]
	private bool GetNextNeighbour(int x, int y, int currentNeighbourX, int currentNeighbourY, out Road neighbour, out int neighbourX, out int neighbourY)
	{
		return default(bool);
	}

	[Token(Token = "0x60003CF")]
	[Address(RVA = "0x110AFC8", Offset = "0x110AFC8", VA = "0x110AFC8")]
	private void VisitRoadTiles(int startX, int startY, TileVisitor visitFn)
	{
	}

	[Token(Token = "0x60003D0")]
	[Address(RVA = "0x110AB24", Offset = "0x110AB24", VA = "0x110AB24")]
	private void RemoveAllConnections(Road targetRoad)
	{
	}

	[Token(Token = "0x60003D1")]
	[Address(RVA = "0x110B450", Offset = "0x110B450", VA = "0x110B450")]
	private void TransferAllConnections(Road source, Road target)
	{
	}

	[Token(Token = "0x60003D2")]
	[Address(RVA = "0x110B610", Offset = "0x110B610", VA = "0x110B610")]
	private void RecreateRoadConnections(Road targetRoad, int startX, int startY)
	{
	}

	[Token(Token = "0x60003D3")]
	[Address(RVA = "0x110B6F0", Offset = "0x110B6F0", VA = "0x110B6F0")]
	private Road SplitRoad(int splitX, int splitY)
	{
		return null;
	}

	[Token(Token = "0x60003D4")]
	[Address(RVA = "0x110B534", Offset = "0x110B534", VA = "0x110B534")]
	private void AddConnection(Road a, Road b)
	{
	}

	[Token(Token = "0x60003D5")]
	[Address(RVA = "0x110B3CC", Offset = "0x110B3CC", VA = "0x110B3CC")]
	private void RemoveConnection(Road a, Road b)
	{
	}

	[Token(Token = "0x60003D6")]
	[Address(RVA = "0x1107B6C", Offset = "0x1107B6C", VA = "0x1107B6C")]
	public void PlaceRoadTile(int x, int y, bool shouldRecordUndo = true)
	{
	}

	[Token(Token = "0x60003D7")]
	[Address(RVA = "0x110BA9C", Offset = "0x110BA9C", VA = "0x110BA9C")]
	public bool PlaceRoadInternal(int x, int y)
	{
		return default(bool);
	}

	[Token(Token = "0x60003D8")]
	[Address(RVA = "0x110C27C", Offset = "0x110C27C", VA = "0x110C27C")]
	private void FixUpJunction(int x, int y)
	{
	}

	[Token(Token = "0x60003D9")]
	[Address(RVA = "0x110C738", Offset = "0x110C738", VA = "0x110C738")]
	public void ClearRoadTile(int x, int y, bool shouldRecordUndo = true)
	{
	}

	[Token(Token = "0x60003DA")]
	[Address(RVA = "0x110CE2C", Offset = "0x110CE2C", VA = "0x110CE2C")]
	public void OnPlaceBuilding(BuildingInstance building)
	{
	}

	[Token(Token = "0x60003DB")]
	[Address(RVA = "0x110CF68", Offset = "0x110CF68", VA = "0x110CF68")]
	public void OnDemolishBuilding(BuildingInstance building)
	{
	}

	[Token(Token = "0x60003DD")]
	[Address(RVA = "0x110D148", Offset = "0x110D148", VA = "0x110D148", Slot = "5")]
	public override SaveSystem.ModuleData OnSave()
	{
		return null;
	}

	[Token(Token = "0x60003DE")]
	[Address(RVA = "0x110D274", Offset = "0x110D274", VA = "0x110D274", Slot = "6")]
	public override void OnLoad(SaveSystem.SaveGame saveGame, SaveSystem.ModuleData data)
	{
	}

	[Token(Token = "0x60003DF")]
	[Address(RVA = "0x110D8C8", Offset = "0x110D8C8", VA = "0x110D8C8", Slot = "10")]
	public override void OnResetProgress()
	{
	}

	[Token(Token = "0x60003E0")]
	[Address(RVA = "0x110DA50", Offset = "0x110DA50", VA = "0x110DA50")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6AE71C", Offset = "0x6AE71C")]
	private IEnumerator StressTestRoutine()
	{
		return null;
	}

	[Token(Token = "0x60003E1")]
	[Address(RVA = "0x110DAEC", Offset = "0x110DAEC", VA = "0x110DAEC")]
	public RoadManager()
	{
	}
}
[Token(Token = "0x200004D")]
public class SeaTrafficManager : CityModule, IDebugPanelProvider
{
	[Token(Token = "0x4000216")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public VehicleCollection shipCollection;

	[Token(Token = "0x4000217")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6A8AAC", Offset = "0x6A8AAC")]
	private List<ShipInfo> <ships>k__BackingField;

	[Token(Token = "0x4000218")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private List<ShipInfo> queuedShips;

	[Token(Token = "0x4000219")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private ShipInfo[] spaceOccupant;

	[Token(Token = "0x400021A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private ShipInfo activeDockingShip;

	[Token(Token = "0x400021B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private int maxSpawnedShips;

	[Token(Token = "0x400021C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private float timeSinceLastSpawn;

	[Token(Token = "0x170000FC")]
	public Seaport seaport
	{
		[Token(Token = "0x60003E2")]
		[Address(RVA = "0x104CD64", Offset = "0x104CD64", VA = "0x104CD64")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000FD")]
	public List<ShipInfo> ships
	{
		[Token(Token = "0x60003E3")]
		[Address(RVA = "0x104CD90", Offset = "0x104CD90", VA = "0x104CD90")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6AE780", Offset = "0x6AE780")]
		get
		{
			return null;
		}
		[Token(Token = "0x60003E4")]
		[Address(RVA = "0x104CD98", Offset = "0x104CD98", VA = "0x104CD98")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6AE790", Offset = "0x6AE790")]
		private set
		{
		}
	}

	[Token(Token = "0x60003E5")]
	[Address(RVA = "0x104CDA0", Offset = "0x104CDA0", VA = "0x104CDA0")]
	public void Awake()
	{
	}

	[Token(Token = "0x60003E6")]
	[Address(RVA = "0x104CE08", Offset = "0x104CE08", VA = "0x104CE08", Slot = "9")]
	public override void PostInit()
	{
	}

	[Token(Token = "0x60003E7")]
	[Address(RVA = "0x104CE78", Offset = "0x104CE78", VA = "0x104CE78", Slot = "10")]
	public override void OnResetProgress()
	{
	}

	[Token(Token = "0x60003E8")]
	[Address(RVA = "0x104D078", Offset = "0x104D078", VA = "0x104D078")]
	private void Update()
	{
	}

	[Token(Token = "0x60003E9")]
	[Address(RVA = "0x104DF24", Offset = "0x104DF24", VA = "0x104DF24")]
	public void OnFinishedDockingAnimation(ShipInfo ship)
	{
	}

	[Token(Token = "0x60003EA")]
	[Address(RVA = "0x104E008", Offset = "0x104E008", VA = "0x104E008")]
	public bool RequestEnter(ShipInfo ship, out Seaport.Space space)
	{
		return default(bool);
	}

	[Token(Token = "0x60003EB")]
	[Address(RVA = "0x104E254", Offset = "0x104E254", VA = "0x104E254")]
	public bool RequestExit(ShipInfo ship)
	{
		return default(bool);
	}

	[Token(Token = "0x60003EC")]
	[Address(RVA = "0x104E4D4", Offset = "0x104E4D4", VA = "0x104E4D4")]
	public Vector3 GetBackOfQueuePosition()
	{
		return default(Vector3);
	}

	[Token(Token = "0x60003ED")]
	[Address(RVA = "0x104E674", Offset = "0x104E674", VA = "0x104E674")]
	public void GetQueueTransform(ShipInfo shipInfo, out Vector3 position, out Quaternion rotation)
	{
	}

	[Token(Token = "0x60003EE")]
	[Address(RVA = "0x104E8F0", Offset = "0x104E8F0", VA = "0x104E8F0")]
	public int PickNodeFromTravelDestination(Vector3 travelDestination)
	{
		return default(int);
	}

	[Token(Token = "0x60003EF")]
	[Address(RVA = "0x104D384", Offset = "0x104D384", VA = "0x104D384")]
	private void SpawnShip()
	{
	}

	[Token(Token = "0x60003F0")]
	[Address(RVA = "0x104EAB8", Offset = "0x104EAB8", VA = "0x104EAB8", Slot = "11")]
	public void OnDebugPanel()
	{
	}

	[Token(Token = "0x60003F1")]
	[Address(RVA = "0x104EBB8", Offset = "0x104EBB8", VA = "0x104EBB8")]
	public SeaTrafficManager()
	{
	}
}
[Token(Token = "0x200004E")]
public class SimpleCitySaveData : MonoBehaviour
{
	[Token(Token = "0x20002D2")]
	public class SaveData
	{
		[Token(Token = "0x400135D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public RoadManager.RoadSaveData roadSaveData;

		[Token(Token = "0x400135E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public CitizenManager.CitizenSaveData citizenSaveData;

		[Token(Token = "0x400135F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CarManager.CarSaveData carSaveData;

		[Token(Token = "0x4001360")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public BuildingManager.BuildingSaveData buildingSaveData;

		[Token(Token = "0x4001361")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public GroundMap.TerrainSaveData groundMapSaveData;

		[Token(Token = "0x60014F2")]
		[Address(RVA = "0xFE3270", Offset = "0xFE3270", VA = "0xFE3270")]
		public SaveData()
		{
		}
	}

	[Token(Token = "0x400021D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TextAsset cityLayout;

	[Token(Token = "0x60003F2")]
	[Address(RVA = "0xFE2C28", Offset = "0xFE2C28", VA = "0xFE2C28")]
	public void LoadFromFile(string filePath)
	{
	}

	[Token(Token = "0x60003F3")]
	[Address(RVA = "0xFE2F74", Offset = "0xFE2F74", VA = "0xFE2F74")]
	public void SaveToFile(string filePath)
	{
	}

	[Token(Token = "0x60003F4")]
	[Address(RVA = "0xFE3278", Offset = "0xFE3278", VA = "0xFE3278")]
	public void LoadLayout()
	{
	}

	[Token(Token = "0x60003F5")]
	[Address(RVA = "0xFE2D64", Offset = "0xFE2D64", VA = "0xFE2D64")]
	public void Apply(SaveData saveData)
	{
	}

	[Token(Token = "0x60003F6")]
	[Address(RVA = "0xFE33E8", Offset = "0xFE33E8", VA = "0xFE33E8")]
	public SimpleCitySaveData()
	{
	}
}
[Token(Token = "0x200004F")]
public class SoundScape : CityModule
{
	[Serializable]
	[Token(Token = "0x20002D3")]
	public class SoundGroup
	{
		[Token(Token = "0x4001362")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public AudioClip audioClip;

		[Token(Token = "0x4001363")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float maxVolume;

		[Token(Token = "0x4001364")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[HideInInspector]
		public AudioSource source;

		[Token(Token = "0x4001365")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6AC5B4", Offset = "0x6AC5B4")]
		private int <numActiveTiles>k__BackingField;

		[Token(Token = "0x4001366")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private int cumulativeTilesX;

		[Token(Token = "0x4001367")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int cumulativeTilesY;

		[Token(Token = "0x1700036E")]
		public int numActiveTiles
		{
			[Token(Token = "0x60014F3")]
			[Address(RVA = "0xFEF080", Offset = "0xFEF080", VA = "0xFEF080")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6B2D48", Offset = "0x6B2D48")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60014F4")]
			[Address(RVA = "0xFEF088", Offset = "0xFEF088", VA = "0xFEF088")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6B2D58", Offset = "0x6B2D58")]
			private set
			{
			}
		}

		[Token(Token = "0x60014F5")]
		[Address(RVA = "0xFEECE4", Offset = "0xFEECE4", VA = "0xFEECE4")]
		public void ClearActiveTiles()
		{
		}

		[Token(Token = "0x60014F6")]
		[Address(RVA = "0xFEECF0", Offset = "0xFEECF0", VA = "0xFEECF0")]
		public void AddActiveTile(int x, int y)
		{
		}

		[Token(Token = "0x60014F7")]
		[Address(RVA = "0xFEED10", Offset = "0xFEED10", VA = "0xFEED10")]
		public void ConfigureAudioSource(float inMaxVolume)
		{
		}

		[Token(Token = "0x60014F8")]
		[Address(RVA = "0xFEF090", Offset = "0xFEF090", VA = "0xFEF090")]
		public SoundGroup()
		{
		}
	}

	[Token(Token = "0x400021E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float soundScapeVolume;

	[Token(Token = "0x400021F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject audioSourcePrefab;

	[Token(Token = "0x4000220")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public SoundGroup ocean;

	[Token(Token = "0x4000221")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public SoundGroup forest;

	[Token(Token = "0x4000222")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public SoundGroup jungle;

	[Token(Token = "0x4000223")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public SoundGroup shoreline;

	[Token(Token = "0x4000224")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public SoundGroup wind;

	[Token(Token = "0x4000225")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public SoundGroup traffic;

	[Token(Token = "0x4000226")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public SoundGroup residential;

	[Token(Token = "0x4000227")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public SoundGroup commercial;

	[Token(Token = "0x4000228")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public SoundGroup industrial;

	[Token(Token = "0x4000229")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public SoundGroup construction;

	[Token(Token = "0x400022A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public SoundGroup windTurbine;

	[Token(Token = "0x400022B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public SoundGroup fire;

	[Token(Token = "0x400022C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public SoundGroup sandStorm;

	[Token(Token = "0x400022D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private List<SoundGroup> allSoundGroups;

	[Token(Token = "0x400022E")]
	private const int reach = 5;

	[Token(Token = "0x170000FE")]
	private Player player
	{
		[Token(Token = "0x60003F7")]
		[Address(RVA = "0xFEE180", Offset = "0xFEE180", VA = "0xFEE180")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60003F8")]
	[Address(RVA = "0xFEE1D0", Offset = "0xFEE1D0", VA = "0xFEE1D0")]
	private void Start()
	{
	}

	[Token(Token = "0x60003F9")]
	[Address(RVA = "0xFEE1D4", Offset = "0xFEE1D4", VA = "0xFEE1D4")]
	private void GenerateSoundSources()
	{
	}

	[Token(Token = "0x60003FA")]
	[Address(RVA = "0xFEE4C0", Offset = "0xFEE4C0", VA = "0xFEE4C0")]
	private void Update()
	{
	}

	[Token(Token = "0x60003FB")]
	[Address(RVA = "0xFEF008", Offset = "0xFEF008", VA = "0xFEF008")]
	public SoundScape()
	{
	}
}
[Token(Token = "0x2000050")]
public class UndoSystem : CityModule
{
	[Token(Token = "0x20002D4")]
	public struct RoadRecord
	{
		[Token(Token = "0x4001368")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int x;

		[Token(Token = "0x4001369")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public int y;

		[Token(Token = "0x60014F9")]
		[Address(RVA = "0x722A2C", Offset = "0x722A2C", VA = "0x722A2C")]
		public RoadRecord(int inX, int inY)
		{
		}
	}

	[Token(Token = "0x20002D5")]
	public struct LandscapeFeatureRecord
	{
		[Token(Token = "0x400136A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int x;

		[Token(Token = "0x400136B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public int y;

		[Token(Token = "0x60014FA")]
		[Address(RVA = "0x72299C", Offset = "0x72299C", VA = "0x72299C")]
		public LandscapeFeatureRecord(int inX, int inY)
		{
		}
	}

	[Token(Token = "0x20002D6")]
	public struct PlantBoxRecord
	{
		[Token(Token = "0x400136C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int x;

		[Token(Token = "0x400136D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public int y;

		[Token(Token = "0x400136E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public int index;

		[Token(Token = "0x60014FB")]
		[Address(RVA = "0x7229A4", Offset = "0x7229A4", VA = "0x7229A4")]
		public PlantBoxRecord(int inX, int inY, int inIndex)
		{
		}
	}

	[Token(Token = "0x20002D7")]
	public struct RegionUnlockRecord
	{
		[Token(Token = "0x400136F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int regionIndex;

		[Token(Token = "0x60014FC")]
		[Address(RVA = "0x722A24", Offset = "0x722A24", VA = "0x722A24")]
		public RegionUnlockRecord(int inRegionIndex)
		{
		}
	}

	[Token(Token = "0x20002D8")]
	public struct PropRecord
	{
		[Token(Token = "0x4001370")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public PropInfo prop;

		[Token(Token = "0x4001371")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Vector3 position;

		[Token(Token = "0x4001372")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public Quaternion rotation;

		[Token(Token = "0x4001373")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public Vector3 scale;

		[Token(Token = "0x1700036F")]
		public int x
		{
			[Token(Token = "0x60014FE")]
			[Address(RVA = "0x722A14", Offset = "0x722A14", VA = "0x722A14")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000370")]
		public int y
		{
			[Token(Token = "0x60014FF")]
			[Address(RVA = "0x722A1C", Offset = "0x722A1C", VA = "0x722A1C")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x60014FD")]
		[Address(RVA = "0x7229EC", Offset = "0x7229EC", VA = "0x7229EC")]
		public PropRecord(PropInfo inProp, Vector3 inPosition, Quaternion inRotation, Vector3 inScale)
		{
		}
	}

	[Token(Token = "0x20002D9")]
	public struct BuildingRecord
	{
		[Token(Token = "0x4001374")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public BuildingInfo building;

		[Token(Token = "0x4001375")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public BuildingInfo buildingInfoToConstruct;

		[Token(Token = "0x4001376")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int x;

		[Token(Token = "0x4001377")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int y;

		[Token(Token = "0x4001378")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int rot;

		[Token(Token = "0x4001379")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public double buildTime;

		[Token(Token = "0x6001500")]
		[Address(RVA = "0x722994", Offset = "0x722994", VA = "0x722994")]
		public BuildingRecord(BuildingInstance instance)
		{
		}
	}

	[Token(Token = "0x20002DA")]
	public struct ZoningRecord
	{
		[Token(Token = "0x400137A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ZoneManager.ZoneType oldZoneType;

		[Token(Token = "0x400137B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
		public ZoneManager.ZoneType newZoneType;

		[Token(Token = "0x400137C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public int x;

		[Token(Token = "0x400137D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public int y;

		[Token(Token = "0x6001501")]
		[Address(RVA = "0x722A34", Offset = "0x722A34", VA = "0x722A34")]
		public ZoningRecord(int inX, int inY, ZoneManager.ZoneType inOldZoneType, ZoneManager.ZoneType inNewZoneType)
		{
		}
	}

	[Token(Token = "0x20002DB")]
	public class UndoRecord
	{
		[Token(Token = "0x400137E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public List<RoadRecord> addedRoads;

		[Token(Token = "0x400137F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<RoadRecord> removedRoads;

		[Token(Token = "0x4001380")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<BuildingRecord> addedBuildings;

		[Token(Token = "0x4001381")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public List<BuildingRecord> removedBuildings;

		[Token(Token = "0x4001382")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public List<PlantBoxRecord> addedPlantBoxes;

		[Token(Token = "0x4001383")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public List<PlantBoxRecord> removedPlantBoxes;

		[Token(Token = "0x4001384")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public List<ZoningRecord> zonedTiles;

		[Token(Token = "0x4001385")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public List<PropRecord> propsAdded;

		[Token(Token = "0x4001386")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public List<PropRecord> propsRemoved;

		[Token(Token = "0x4001387")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public List<LandscapeFeatureRecord> landscapeFeaturesDemolished;

		[Token(Token = "0x4001388")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public List<BridgeManager.Bridge> bridgesAdded;

		[Token(Token = "0x4001389")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public List<BridgeManager.Bridge> bridgesRemoved;

		[Token(Token = "0x400138A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public List<RegionUnlockRecord> regionsUnlocked;

		[Token(Token = "0x400138B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public int moneyAmountAtBegin;

		[Token(Token = "0x400138C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		public int moneyDelta;

		[Token(Token = "0x400138D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public double undoRecordTime;

		[Token(Token = "0x17000371")]
		public bool hasChanges
		{
			[Token(Token = "0x6001502")]
			[Address(RVA = "0x11465CC", Offset = "0x11465CC", VA = "0x11465CC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001503")]
		[Address(RVA = "0x11467A0", Offset = "0x11467A0", VA = "0x11467A0")]
		public void Clear()
		{
		}

		[Token(Token = "0x6001504")]
		private void SwapRecords<T>(ref List<T> first, ref List<T> second)
		{
		}

		[Token(Token = "0x6001505")]
		[Address(RVA = "0x1148668", Offset = "0x1148668", VA = "0x1148668")]
		public void Reverse()
		{
		}

		[Token(Token = "0x6001506")]
		[Address(RVA = "0x1148458", Offset = "0x1148458", VA = "0x1148458")]
		public UndoRecord()
		{
		}
	}

	[Token(Token = "0x400022F")]
	private const bool redoFeatureEnabled = false;

	[Token(Token = "0x4000230")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private UndoRecord currentRecord;

	[Token(Token = "0x4000231")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private UndoRecord lastRecord;

	[Token(Token = "0x4000232")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public int undoAvailabilityDuration;

	[Token(Token = "0x4000233")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6A8ABC", Offset = "0x6A8ABC")]
	private bool <isUndoPerformingRedo>k__BackingField;

	[Token(Token = "0x4000234")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x35")]
	private bool isRecordingUndo;

	[Token(Token = "0x170000FF")]
	public bool isUndoAvailable
	{
		[Token(Token = "0x60003FC")]
		[Address(RVA = "0x1146568", Offset = "0x1146568", VA = "0x1146568")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000100")]
	public bool isUndoPerformingRedo
	{
		[Token(Token = "0x60003FD")]
		[Address(RVA = "0x114671C", Offset = "0x114671C", VA = "0x114671C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6AE7A0", Offset = "0x6AE7A0")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60003FE")]
		[Address(RVA = "0x1146724", Offset = "0x1146724", VA = "0x1146724")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6AE7B0", Offset = "0x6AE7B0")]
		private set
		{
		}
	}

	[Token(Token = "0x60003FF")]
	[Address(RVA = "0x1146730", Offset = "0x1146730", VA = "0x1146730")]
	private void SwapCurrentAndLastRecord()
	{
	}

	[Token(Token = "0x6000400")]
	[Address(RVA = "0x1146740", Offset = "0x1146740", VA = "0x1146740")]
	public void BeginRecord()
	{
	}

	[Token(Token = "0x6000401")]
	[Address(RVA = "0x11468F8", Offset = "0x11468F8", VA = "0x11468F8")]
	public void EndRecord()
	{
	}

	[Token(Token = "0x6000402")]
	[Address(RVA = "0x1146994", Offset = "0x1146994", VA = "0x1146994")]
	public void OnRegionUnlocked(int regionIndex)
	{
	}

	[Token(Token = "0x6000403")]
	[Address(RVA = "0x1146A1C", Offset = "0x1146A1C", VA = "0x1146A1C")]
	public void OnPlaceBridge(BridgeManager.Bridge bridge)
	{
	}

	[Token(Token = "0x6000404")]
	[Address(RVA = "0x1146AC8", Offset = "0x1146AC8", VA = "0x1146AC8")]
	public void OnRemoveBridge(BridgeManager.Bridge bridge)
	{
	}

	[Token(Token = "0x6000405")]
	[Address(RVA = "0x1146B74", Offset = "0x1146B74", VA = "0x1146B74")]
	public void OnPlaceRoadTile(int x, int y)
	{
	}

	[Token(Token = "0x6000406")]
	[Address(RVA = "0x1146C0C", Offset = "0x1146C0C", VA = "0x1146C0C")]
	public void OnRemoveRoadTile(int x, int y)
	{
	}

	[Token(Token = "0x6000407")]
	[Address(RVA = "0x1146C9C", Offset = "0x1146C9C", VA = "0x1146C9C")]
	public void OnPlaceBuilding(BuildingInstance building)
	{
	}

	[Token(Token = "0x6000408")]
	[Address(RVA = "0x1146D88", Offset = "0x1146D88", VA = "0x1146D88")]
	public void OnDemolishBuilding(BuildingInstance building)
	{
	}

	[Token(Token = "0x6000409")]
	[Address(RVA = "0x1146E30", Offset = "0x1146E30", VA = "0x1146E30")]
	public void OnZoneTile(int x, int y, ZoneManager.ZoneType oldZoneType, ZoneManager.ZoneType newZoneType)
	{
	}

	[Token(Token = "0x600040A")]
	[Address(RVA = "0x1146EF0", Offset = "0x1146EF0", VA = "0x1146EF0")]
	public void OnDemolishLandscapeFeature(int x, int y)
	{
	}

	[Token(Token = "0x600040B")]
	[Address(RVA = "0x1146F88", Offset = "0x1146F88", VA = "0x1146F88")]
	public void OnPropRemoved(PropInfo prop, Vector3 position, Quaternion rotation, Vector3 scale)
	{
	}

	[Token(Token = "0x600040C")]
	[Address(RVA = "0x1147090", Offset = "0x1147090", VA = "0x1147090")]
	public void OnPropAdded(PropInfo prop, Vector3 position, Quaternion rotation, Vector3 scale)
	{
	}

	[Token(Token = "0x600040D")]
	[Address(RVA = "0x1147170", Offset = "0x1147170", VA = "0x1147170")]
	public void OnPlacePlantBox(int x, int y, int index)
	{
	}

	[Token(Token = "0x600040E")]
	[Address(RVA = "0x1147220", Offset = "0x1147220", VA = "0x1147220")]
	public void OnRemovePlantBox(int x, int y, int index)
	{
	}

	[Token(Token = "0x600040F")]
	[Address(RVA = "0x11472C4", Offset = "0x11472C4", VA = "0x11472C4")]
	public void Undo()
	{
	}

	[Token(Token = "0x6000410")]
	[Address(RVA = "0x1148368", Offset = "0x1148368", VA = "0x1148368", Slot = "7")]
	public override void OnPostLoad()
	{
	}

	[Token(Token = "0x6000411")]
	[Address(RVA = "0x114839C", Offset = "0x114839C", VA = "0x114839C", Slot = "10")]
	public override void OnResetProgress()
	{
	}

	[Token(Token = "0x6000412")]
	[Address(RVA = "0x11483D0", Offset = "0x11483D0", VA = "0x11483D0")]
	public UndoSystem()
	{
	}
}
[Token(Token = "0x2000051")]
public class UtilityManager : CityModule
{
	[Token(Token = "0x4000235")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public PowerUtilityState power;

	[Token(Token = "0x4000236")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public WaterUtilityState water;

	[Token(Token = "0x4000237")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public CellNetworkMap network;

	[Token(Token = "0x4000238")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6A8ACC", Offset = "0x6A8ACC")]
	private BuildingInstance <previewBuilding>k__BackingField;

	[Token(Token = "0x4000239")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6A8ADC", Offset = "0x6A8ADC")]
	private List<BuildingInstance> <previewBuildingsToDemolish>k__BackingField;

	[Token(Token = "0x400023A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private int networkUnlockLevel;

	[Token(Token = "0x17000101")]
	public BuildingInstance previewBuilding
	{
		[Token(Token = "0x6000413")]
		[Address(RVA = "0x1150388", Offset = "0x1150388", VA = "0x1150388")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6AE7C0", Offset = "0x6AE7C0")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000414")]
		[Address(RVA = "0x1150390", Offset = "0x1150390", VA = "0x1150390")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6AE7D0", Offset = "0x6AE7D0")]
		private set
		{
		}
	}

	[Token(Token = "0x17000102")]
	public List<BuildingInstance> previewBuildingsToDemolish
	{
		[Token(Token = "0x6000415")]
		[Address(RVA = "0x1150398", Offset = "0x1150398", VA = "0x1150398")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6AE7E0", Offset = "0x6AE7E0")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000416")]
		[Address(RVA = "0x11503A0", Offset = "0x11503A0", VA = "0x11503A0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6AE7F0", Offset = "0x6AE7F0")]
		private set
		{
		}
	}

	[Token(Token = "0x17000103")]
	public bool isNetworkUnlocked
	{
		[Token(Token = "0x6000417")]
		[Address(RVA = "0x11503A8", Offset = "0x11503A8", VA = "0x11503A8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000418")]
	[Address(RVA = "0x1150468", Offset = "0x1150468", VA = "0x1150468", Slot = "8")]
	public override void Init()
	{
	}

	[Token(Token = "0x6000419")]
	[Address(RVA = "0x115059C", Offset = "0x115059C", VA = "0x115059C", Slot = "9")]
	public override void PostInit()
	{
	}

	[Token(Token = "0x600041A")]
	[Address(RVA = "0x1150608", Offset = "0x1150608", VA = "0x1150608", Slot = "10")]
	public override void OnResetProgress()
	{
	}

	[Token(Token = "0x600041B")]
	[Address(RVA = "0x1150660", Offset = "0x1150660", VA = "0x1150660")]
	public void EnablePreviewBuildingsToDemolish(List<BuildingInstance> buildingsToDemolish)
	{
	}

	[Token(Token = "0x600041C")]
	[Address(RVA = "0x1150678", Offset = "0x1150678", VA = "0x1150678")]
	public void EnablePreviewBuildingPlacement(BuildingInfo info, int x, int y, int rot, List<BuildingInstance> buildingsToDemolish)
	{
	}

	[Token(Token = "0x600041D")]
	[Address(RVA = "0x1150A74", Offset = "0x1150A74", VA = "0x1150A74")]
	public void DisablePreviewBuildingPlacement()
	{
	}

	[Token(Token = "0x600041E")]
	[Address(RVA = "0x1150CD4", Offset = "0x1150CD4", VA = "0x1150CD4")]
	private void RestartAllSimulations()
	{
	}

	[Token(Token = "0x600041F")]
	[Address(RVA = "0x1150D70", Offset = "0x1150D70", VA = "0x1150D70")]
	public void OnPlaceBuilding(BuildingInstance building, bool fromSaveGame)
	{
	}

	[Token(Token = "0x6000420")]
	[Address(RVA = "0x1150DF8", Offset = "0x1150DF8", VA = "0x1150DF8")]
	public void OnDemolishBuilding(BuildingInstance building, bool fromSaveGame)
	{
	}

	[Token(Token = "0x6000421")]
	[Address(RVA = "0x1150E8C", Offset = "0x1150E8C", VA = "0x1150E8C")]
	public void OnPlaceRoadTile(int x, int y)
	{
	}

	[Token(Token = "0x6000422")]
	[Address(RVA = "0x1150F54", Offset = "0x1150F54", VA = "0x1150F54")]
	public void OnRemoveRoadTile(int x, int y)
	{
	}

	[Token(Token = "0x6000423")]
	[Address(RVA = "0x1151018", Offset = "0x1151018", VA = "0x1151018")]
	public bool HasPower(int x, int y)
	{
		return default(bool);
	}

	[Token(Token = "0x6000424")]
	[Address(RVA = "0x115108C", Offset = "0x115108C", VA = "0x115108C")]
	public bool HasWater(int x, int y)
	{
		return default(bool);
	}

	[Token(Token = "0x6000425")]
	[Address(RVA = "0x11510A4", Offset = "0x11510A4", VA = "0x11510A4")]
	public bool HasNetwork(int x, int y)
	{
		return default(bool);
	}

	[Token(Token = "0x6000426")]
	[Address(RVA = "0x11510C0", Offset = "0x11510C0", VA = "0x11510C0")]
	public bool HasNetwork(int x, int y, int width, int height)
	{
		return default(bool);
	}

	[Token(Token = "0x6000427")]
	[Address(RVA = "0x1151164", Offset = "0x1151164", VA = "0x1151164")]
	public bool HasNetworkInPreview(int x, int y, int width, int height)
	{
		return default(bool);
	}

	[Token(Token = "0x6000428")]
	[Address(RVA = "0x1151208", Offset = "0x1151208", VA = "0x1151208")]
	public void Update()
	{
	}

	[Token(Token = "0x6000429")]
	[Address(RVA = "0x115139C", Offset = "0x115139C", VA = "0x115139C", Slot = "7")]
	public override void OnPostLoad()
	{
	}

	[Token(Token = "0x600042A")]
	[Address(RVA = "0x1151514", Offset = "0x1151514", VA = "0x1151514")]
	public UtilityManager()
	{
	}
}
[Token(Token = "0x2000052")]
public abstract class UtilityMapBase : IVisualiserTextureProvider
{
	[Token(Token = "0x400023B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6A8AEC", Offset = "0x6A8AEC")]
	private Texture2D <visualiseTexture>k__BackingField;

	[Token(Token = "0x400023C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected Color32[] textureData;

	[Token(Token = "0x400023D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	protected bool textureDirty;

	[Token(Token = "0x400023E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	protected UtilityManager utilityManager;

	[Token(Token = "0x400023F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private IEnumerator simulationAsyncState;

	[Token(Token = "0x4000240")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6A8AFC", Offset = "0x6A8AFC")]
	private bool <isProcessingSimulation>k__BackingField;

	[Token(Token = "0x17000104")]
	public abstract string name
	{
		[Token(Token = "0x600042B")]
		get;
	}

	[Token(Token = "0x17000105")]
	protected int mapWidth
	{
		[Token(Token = "0x600042C")]
		[Address(RVA = "0x115151C", Offset = "0x115151C", VA = "0x115151C")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000106")]
	protected int mapHeight
	{
		[Token(Token = "0x600042D")]
		[Address(RVA = "0x1151564", Offset = "0x1151564", VA = "0x1151564")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000107")]
	public Texture2D visualiseTexture
	{
		[Token(Token = "0x600042E")]
		[Address(RVA = "0x1151590", Offset = "0x1151590", VA = "0x1151590", Slot = "4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6AE800", Offset = "0x6AE800")]
		get
		{
			return null;
		}
		[Token(Token = "0x600042F")]
		[Address(RVA = "0x1151598", Offset = "0x1151598", VA = "0x1151598")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6AE810", Offset = "0x6AE810")]
		private set
		{
		}
	}

	[Token(Token = "0x17000108")]
	public virtual Texture2D secondaryTexture
	{
		[Token(Token = "0x6000430")]
		[Address(RVA = "0x11515A0", Offset = "0x11515A0", VA = "0x11515A0", Slot = "9")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000109")]
	public City city
	{
		[Token(Token = "0x6000431")]
		[Address(RVA = "0x1151548", Offset = "0x1151548", VA = "0x1151548")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700010A")]
	public BuildingInstance previewBuilding
	{
		[Token(Token = "0x6000432")]
		[Address(RVA = "0x11515A8", Offset = "0x11515A8", VA = "0x11515A8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700010B")]
	public List<BuildingInstance> previewBuildingsToDemolish
	{
		[Token(Token = "0x6000433")]
		[Address(RVA = "0x11515C4", Offset = "0x11515C4", VA = "0x11515C4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700010C")]
	public bool isProcessingSimulation
	{
		[Token(Token = "0x600043C")]
		[Address(RVA = "0x11519E0", Offset = "0x11519E0", VA = "0x11519E0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6AE820", Offset = "0x6AE820")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600043D")]
		[Address(RVA = "0x11519E8", Offset = "0x11519E8", VA = "0x11519E8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6AE830", Offset = "0x6AE830")]
		private set
		{
		}
	}

	[Token(Token = "0x6000434")]
	[Address(RVA = "0x11515E0", Offset = "0x11515E0", VA = "0x11515E0")]
	public UtilityMapBase(UtilityManager inUtilityManager)
	{
	}

	[Token(Token = "0x6000435")]
	[Address(RVA = "0x1151760", Offset = "0x1151760", VA = "0x1151760", Slot = "10")]
	public virtual void Reset()
	{
	}

	[Token(Token = "0x6000436")]
	public abstract void RefreshVisualiseTexture();

	[Token(Token = "0x6000437")]
	[Address(RVA = "0x115181C", Offset = "0x115181C", VA = "0x115181C", Slot = "12")]
	public virtual void OnPlaceBuilding(BuildingInstance building, bool fromSaveGame)
	{
	}

	[Token(Token = "0x6000438")]
	[Address(RVA = "0x1151904", Offset = "0x1151904", VA = "0x1151904", Slot = "13")]
	public virtual void OnDemolishBuilding(BuildingInstance building, bool fromSaveGame)
	{
	}

	[Token(Token = "0x6000439")]
	[Address(RVA = "0x1150EF4", Offset = "0x1150EF4", VA = "0x1150EF4")]
	public void OnPlaceRoadTile(int x, int y)
	{
	}

	[Token(Token = "0x600043A")]
	[Address(RVA = "0x1150FBC", Offset = "0x1150FBC", VA = "0x1150FBC")]
	public void OnRemoveRoadTile(int x, int y)
	{
	}

	[Token(Token = "0x600043B")]
	protected abstract IEnumerator SimulateAsync();

	[Token(Token = "0x600043E")]
	[Address(RVA = "0x11512D8", Offset = "0x11512D8", VA = "0x11512D8")]
	public void SimulateStep()
	{
	}

	[Token(Token = "0x600043F")]
	[Address(RVA = "0x1150A3C", Offset = "0x1150A3C", VA = "0x1150A3C")]
	public void RestartSimulation()
	{
	}
}
[Token(Token = "0x2000053")]
public class CellNetworkMap : UtilityMapBase
{
	[Token(Token = "0x20002DC")]
	public class Tower
	{
		[Token(Token = "0x400138E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int x;

		[Token(Token = "0x400138F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int y;

		[Token(Token = "0x6001507")]
		[Address(RVA = "0x11166D0", Offset = "0x11166D0", VA = "0x11166D0")]
		public Tower(BuildingInstance building)
		{
		}
	}

	[Token(Token = "0x20002DD")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6A7EC4", Offset = "0x6A7EC4")]
	private sealed class <SimulateAsync>d__29 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001390")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001391")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001392")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CellNetworkMap <>4__this;

		[Token(Token = "0x17000372")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600150B")]
			[Address(RVA = "0x11174D8", Offset = "0x11174D8", VA = "0x11174D8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000373")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600150D")]
			[Address(RVA = "0x1117540", Offset = "0x1117540", VA = "0x1117540", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001508")]
		[Address(RVA = "0x1117310", Offset = "0x1117310", VA = "0x1117310")]
		[DebuggerHidden]
		public <SimulateAsync>d__29(int <>1__state)
		{
		}

		[Token(Token = "0x6001509")]
		[Address(RVA = "0x111733C", Offset = "0x111733C", VA = "0x111733C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600150A")]
		[Address(RVA = "0x1117340", Offset = "0x1117340", VA = "0x1117340", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600150C")]
		[Address(RVA = "0x11174E0", Offset = "0x11174E0", VA = "0x11174E0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000241")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private ulong[] connectivityMap;

	[Token(Token = "0x4000242")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Tower[] towerSlots;

	[Token(Token = "0x4000243")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private ulong activeTowerMask;

	[Token(Token = "0x4000244")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private ulong unpoweredTowerMask;

	[Token(Token = "0x4000245")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private ulong activeTowerMaskPreview;

	[Token(Token = "0x4000246")]
	private const int maxTowers = 64;

	[Token(Token = "0x4000247")]
	private const int previewSlot = 63;

	[Token(Token = "0x4000248")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6A8B0C", Offset = "0x6A8B0C")]
	private int <numTowers>k__BackingField;

	[Token(Token = "0x4000249")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private int previewX;

	[Token(Token = "0x400024A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private int previewY;

	[Token(Token = "0x400024B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private int previewRadius;

	[Token(Token = "0x1700010D")]
	public int numTowers
	{
		[Token(Token = "0x6000440")]
		[Address(RVA = "0x1116378", Offset = "0x1116378", VA = "0x1116378")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6AE840", Offset = "0x6AE840")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000441")]
		[Address(RVA = "0x1116380", Offset = "0x1116380", VA = "0x1116380")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6AE850", Offset = "0x6AE850")]
		private set
		{
		}
	}

	[Token(Token = "0x1700010E")]
	public override string name
	{
		[Token(Token = "0x6000442")]
		[Address(RVA = "0x1116388", Offset = "0x1116388", VA = "0x1116388", Slot = "8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000443")]
	[Address(RVA = "0x11163D0", Offset = "0x11163D0", VA = "0x11163D0")]
	public CellNetworkMap(UtilityManager inUtilityManager)
	{
	}

	[Token(Token = "0x6000444")]
	[Address(RVA = "0x111647C", Offset = "0x111647C", VA = "0x111647C", Slot = "10")]
	public override void Reset()
	{
	}

	[Token(Token = "0x6000445")]
	[Address(RVA = "0x1116548", Offset = "0x1116548", VA = "0x1116548", Slot = "12")]
	public override void OnPlaceBuilding(BuildingInstance building, bool fromSaveGame)
	{
	}

	[Token(Token = "0x6000446")]
	[Address(RVA = "0x1116900", Offset = "0x1116900", VA = "0x1116900")]
	public bool HasNetworkConnectivity(int x, int y)
	{
		return default(bool);
	}

	[Token(Token = "0x6000447")]
	[Address(RVA = "0x1116970", Offset = "0x1116970", VA = "0x1116970")]
	public bool HasNetworkConnectivityInPreview(int x, int y)
	{
		return default(bool);
	}

	[Token(Token = "0x6000448")]
	[Address(RVA = "0x11169E4", Offset = "0x11169E4", VA = "0x11169E4", Slot = "11")]
	public override void RefreshVisualiseTexture()
	{
	}

	[Token(Token = "0x6000449")]
	[Address(RVA = "0x1116710", Offset = "0x1116710", VA = "0x1116710")]
	private void CalculateConnectivity(int x, int y, int radius, int slotIndex)
	{
	}

	[Token(Token = "0x600044A")]
	[Address(RVA = "0x1116E54", Offset = "0x1116E54", VA = "0x1116E54")]
	private void RemoveConnectivity(int x, int y, int radius, int slotIndex)
	{
	}

	[Token(Token = "0x600044B")]
	[Address(RVA = "0x1116BB0", Offset = "0x1116BB0", VA = "0x1116BB0")]
	private void Trace(int x0, int y0, int x1, int y1, ulong mask)
	{
	}

	[Token(Token = "0x600044C")]
	[Address(RVA = "0x1116FC0", Offset = "0x1116FC0", VA = "0x1116FC0", Slot = "13")]
	public override void OnDemolishBuilding(BuildingInstance building, bool fromSaveGame)
	{
	}

	[Token(Token = "0x600044D")]
	[Address(RVA = "0x1117098", Offset = "0x1117098", VA = "0x1117098")]
	private void EnablePreviewBuildingPlacement()
	{
	}

	[Token(Token = "0x600044E")]
	[Address(RVA = "0x1117268", Offset = "0x1117268", VA = "0x1117268")]
	private void DisablePreviewBuildingPlacement()
	{
	}

	[Token(Token = "0x600044F")]
	[Address(RVA = "0x11172A0", Offset = "0x11172A0", VA = "0x11172A0", Slot = "14")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6AE860", Offset = "0x6AE860")]
	protected override IEnumerator SimulateAsync()
	{
		return null;
	}
}
[Token(Token = "0x2000054")]
public abstract class UtilityState : UtilityMapBase
{
	[Token(Token = "0x20002DE")]
	private struct Location
	{
		[Token(Token = "0x4001393")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int x;

		[Token(Token = "0x4001394")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public int y;

		[Token(Token = "0x600150E")]
		[Address(RVA = "0x722A44", Offset = "0x722A44", VA = "0x722A44")]
		public Location(int _x, int _y)
		{
		}
	}

	[Token(Token = "0x20002DF")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6A7ED4", Offset = "0x6A7ED4")]
	private sealed class <SimulateAsync>d__21 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001395")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001396")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001397")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public UtilityState <>4__this;

		[Token(Token = "0x4001398")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private IEnumerator <processSourcesTask>5__2;

		[Token(Token = "0x17000374")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001512")]
			[Address(RVA = "0x1152DE8", Offset = "0x1152DE8", VA = "0x1152DE8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000375")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001514")]
			[Address(RVA = "0x1152E50", Offset = "0x1152E50", VA = "0x1152E50", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600150F")]
		[Address(RVA = "0x1151D28", Offset = "0x1151D28", VA = "0x1151D28")]
		[DebuggerHidden]
		public <SimulateAsync>d__21(int <>1__state)
		{
		}

		[Token(Token = "0x6001510")]
		[Address(RVA = "0x1152A04", Offset = "0x1152A04", VA = "0x1152A04", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001511")]
		[Address(RVA = "0x1152A08", Offset = "0x1152A08", VA = "0x1152A08", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001513")]
		[Address(RVA = "0x1152DF0", Offset = "0x1152DF0", VA = "0x1152DF0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20002E0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6A7EE4", Offset = "0x6A7EE4")]
	private sealed class <ProcessSourcesAsync>d__22 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001399")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400139A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400139B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool[] supplyMap;

		[Token(Token = "0x400139C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public UtilityState <>4__this;

		[Token(Token = "0x400139D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool isPreview;

		[Token(Token = "0x400139E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private int <n>5__2;

		[Token(Token = "0x17000376")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001518")]
			[Address(RVA = "0x1152994", Offset = "0x1152994", VA = "0x1152994", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000377")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600151A")]
			[Address(RVA = "0x11529FC", Offset = "0x11529FC", VA = "0x11529FC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001515")]
		[Address(RVA = "0x1151DDC", Offset = "0x1151DDC", VA = "0x1151DDC")]
		[DebuggerHidden]
		public <ProcessSourcesAsync>d__22(int <>1__state)
		{
		}

		[Token(Token = "0x6001516")]
		[Address(RVA = "0x1152710", Offset = "0x1152710", VA = "0x1152710", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001517")]
		[Address(RVA = "0x1152714", Offset = "0x1152714", VA = "0x1152714", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001519")]
		[Address(RVA = "0x115299C", Offset = "0x115299C", VA = "0x115299C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400024C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	protected List<BuildingInstance> sources;

	[Token(Token = "0x400024D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Queue<Location> queue;

	[Token(Token = "0x400024E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool[] visited;

	[Token(Token = "0x400024F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool[] supplied;

	[Token(Token = "0x4000250")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private bool[] previewSupplied;

	[Token(Token = "0x4000251")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private bool[] workingBuffer;

	[Token(Token = "0x4000252")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public int totalProduction;

	[Token(Token = "0x4000253")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public int totalConsumption;

	[Token(Token = "0x4000254")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public int totalRequired;

	[Token(Token = "0x4000255")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private int workingTotalProduction;

	[Token(Token = "0x4000256")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private int workingTotalConsumption;

	[Token(Token = "0x4000257")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private int workingTotalRequired;

	[Token(Token = "0x4000258")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public InfluenceMap efficiencyMap;

	[Token(Token = "0x1700010F")]
	public int numSources
	{
		[Token(Token = "0x6000451")]
		[Address(RVA = "0x11519F4", Offset = "0x11519F4", VA = "0x11519F4")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000110")]
	public override string name
	{
		[Token(Token = "0x6000452")]
		[Address(RVA = "0x1151A44", Offset = "0x1151A44", VA = "0x1151A44", Slot = "8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000450")]
	public abstract int ResourceUsage(BuildingInstance building);

	[Token(Token = "0x6000453")]
	[Address(RVA = "0x1151A8C", Offset = "0x1151A8C", VA = "0x1151A8C")]
	public UtilityState(UtilityManager inUtilityManager)
	{
	}

	[Token(Token = "0x6000454")]
	[Address(RVA = "0x1151BF0", Offset = "0x1151BF0", VA = "0x1151BF0", Slot = "10")]
	public override void Reset()
	{
	}

	[Token(Token = "0x6000455")]
	[Address(RVA = "0x1151CB8", Offset = "0x1151CB8", VA = "0x1151CB8", Slot = "14")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6AE8C4", Offset = "0x6AE8C4")]
	protected override IEnumerator SimulateAsync()
	{
		return null;
	}

	[Token(Token = "0x6000456")]
	[Address(RVA = "0x1151D54", Offset = "0x1151D54", VA = "0x1151D54")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6AE928", Offset = "0x6AE928")]
	private IEnumerator ProcessSourcesAsync(bool[] supplyMap, bool isPreview = false)
	{
		return null;
	}

	[Token(Token = "0x6000457")]
	[Address(RVA = "0x1151E08", Offset = "0x1151E08", VA = "0x1151E08")]
	private void ProcessSource(BuildingInstance src, bool[] supplyMap)
	{
	}

	[Token(Token = "0x6000458")]
	[Address(RVA = "0x1152290", Offset = "0x1152290", VA = "0x1152290")]
	private bool TrySupplyBuildings(bool[] supplyMap, int x, int y, ref int supply)
	{
		return default(bool);
	}

	[Token(Token = "0x6000459")]
	[Address(RVA = "0x11520C0", Offset = "0x11520C0", VA = "0x11520C0")]
	private void FillBuildingInMap(BuildingInstance building, bool[] map)
	{
	}

	[Token(Token = "0x600045A")]
	[Address(RVA = "0x11523BC", Offset = "0x11523BC", VA = "0x11523BC")]
	public bool IsSuppliedInPreview(int x, int y)
	{
		return default(bool);
	}

	[Token(Token = "0x600045B")]
	[Address(RVA = "0x1151030", Offset = "0x1151030", VA = "0x1151030")]
	public bool IsSupplied(int x, int y)
	{
		return default(bool);
	}

	[Token(Token = "0x600045C")]
	[Address(RVA = "0x11521A8", Offset = "0x11521A8", VA = "0x11521A8")]
	private void Enqueue(int x, int y)
	{
	}

	[Token(Token = "0x600045D")]
	[Address(RVA = "0x1152420", Offset = "0x1152420", VA = "0x1152420", Slot = "12")]
	public override void OnPlaceBuilding(BuildingInstance building, bool fromSaveGame)
	{
	}

	[Token(Token = "0x600045E")]
	[Address(RVA = "0x11524C4", Offset = "0x11524C4", VA = "0x11524C4", Slot = "13")]
	public override void OnDemolishBuilding(BuildingInstance building, bool fromSaveGame)
	{
	}

	[Token(Token = "0x600045F")]
	[Address(RVA = "0x115253C", Offset = "0x115253C", VA = "0x115253C", Slot = "11")]
	public override void RefreshVisualiseTexture()
	{
	}
}
[Token(Token = "0x2000055")]
public class WaterUtilityState : UtilityState
{
	[Token(Token = "0x20002E1")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6A7EF4", Offset = "0x6A7EF4")]
	private sealed class <>c__DisplayClass25_0
	{
		[Token(Token = "0x400139F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public WaterUtilityState <>4__this;

		[Token(Token = "0x40013A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public BuildingInstance building;

		[Token(Token = "0x40013A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int centerX;

		[Token(Token = "0x40013A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public int centerY;

		[Token(Token = "0x40013A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public List<BuildingInstance> buildingsToRecalculate;

		[Token(Token = "0x600151B")]
		[Address(RVA = "0x1019B48", Offset = "0x1019B48", VA = "0x1019B48")]
		public <>c__DisplayClass25_0()
		{
		}

		[Token(Token = "0x600151C")]
		[Address(RVA = "0x101A4CC", Offset = "0x101A4CC", VA = "0x101A4CC")]
		internal void <TapGround>b__0(int x, int y)
		{
		}
	}

	[Token(Token = "0x20002E2")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6A7F04", Offset = "0x6A7F04")]
	private sealed class <>c__DisplayClass27_0
	{
		[Token(Token = "0x40013A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int totalReach;

		[Token(Token = "0x40013A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public WaterUtilityState <>4__this;

		[Token(Token = "0x40013A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public BuildingInstance building;

		[Token(Token = "0x40013A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int taps;

		[Token(Token = "0x40013A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public Vector2 center;

		[Token(Token = "0x600151D")]
		[Address(RVA = "0x1019EA8", Offset = "0x1019EA8", VA = "0x1019EA8")]
		public <>c__DisplayClass27_0()
		{
		}

		[Token(Token = "0x600151E")]
		[Address(RVA = "0x101A6B8", Offset = "0x101A6B8", VA = "0x101A6B8")]
		internal void <RecalculateBuilding>b__0(int x, int y)
		{
		}
	}

	[Token(Token = "0x20002E3")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6A7F14", Offset = "0x6A7F14")]
	private sealed class <>c__DisplayClass30_0
	{
		[Token(Token = "0x40013A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public WaterUtilityState <>4__this;

		[Token(Token = "0x40013AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public BuildingInstance building;

		[Token(Token = "0x600151F")]
		[Address(RVA = "0x101A05C", Offset = "0x101A05C", VA = "0x101A05C")]
		public <>c__DisplayClass30_0()
		{
		}

		[Token(Token = "0x6001520")]
		[Address(RVA = "0x101A950", Offset = "0x101A950", VA = "0x101A950")]
		internal void <OnDemolishBuilding>b__0(int x, int y)
		{
		}
	}

	[Token(Token = "0x20002E4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6A7F24", Offset = "0x6A7F24")]
	private sealed class <SimulateAsync>d__32 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40013AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40013AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40013AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public WaterUtilityState <>4__this;

		[Token(Token = "0x40013AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private IEnumerator <baseSimulateProcess>5__2;

		[Token(Token = "0x17000378")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001524")]
			[Address(RVA = "0x101AD8C", Offset = "0x101AD8C", VA = "0x101AD8C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000379")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001526")]
			[Address(RVA = "0x101ADF4", Offset = "0x101ADF4", VA = "0x101ADF4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001521")]
		[Address(RVA = "0x101A2D8", Offset = "0x101A2D8", VA = "0x101A2D8")]
		[DebuggerHidden]
		public <SimulateAsync>d__32(int <>1__state)
		{
		}

		[Token(Token = "0x6001522")]
		[Address(RVA = "0x101AA68", Offset = "0x101AA68", VA = "0x101AA68", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001523")]
		[Address(RVA = "0x101AA6C", Offset = "0x101AA6C", VA = "0x101AA6C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001525")]
		[Address(RVA = "0x101AD94", Offset = "0x101AD94", VA = "0x101AD94", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000259")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private BuildingInstance[] tappedMap;

	[Token(Token = "0x400025A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private Dictionary<BuildingInstance, float> sourceEfficiencies;

	[Token(Token = "0x400025B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private Dictionary<BuildingInstance, int> treatmentPlantSupply;

	[Token(Token = "0x400025C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6A8B1C", Offset = "0x6A8B1C")]
	private int <numUpgradedWaterSupplies>k__BackingField;

	[Token(Token = "0x400025D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	protected Color32[] flowTextureData;

	[Token(Token = "0x400025E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6A8B2C", Offset = "0x6A8B2C")]
	private Texture2D <flowTexture>k__BackingField;

	[Token(Token = "0x400025F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private Color32 noFlow;

	[Token(Token = "0x4000260")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	private bool hasPreviewReplacement;

	[Token(Token = "0x4000261")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private Color32[] previewReplacementData;

	[Token(Token = "0x4000262")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private int previewReplacementX;

	[Token(Token = "0x4000263")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	private int previewReplacementY;

	[Token(Token = "0x4000264")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private int previewReplacementWidth;

	[Token(Token = "0x4000265")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
	private int previewReplacementHeight;

	[Token(Token = "0x17000111")]
	public int numUpgradedWaterSupplies
	{
		[Token(Token = "0x6000460")]
		[Address(RVA = "0x1019274", Offset = "0x1019274", VA = "0x1019274")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6AE98C", Offset = "0x6AE98C")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000461")]
		[Address(RVA = "0x101927C", Offset = "0x101927C", VA = "0x101927C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6AE99C", Offset = "0x6AE99C")]
		private set
		{
		}
	}

	[Token(Token = "0x17000112")]
	public Texture2D flowTexture
	{
		[Token(Token = "0x6000462")]
		[Address(RVA = "0x1019284", Offset = "0x1019284", VA = "0x1019284")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6AE9AC", Offset = "0x6AE9AC")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000463")]
		[Address(RVA = "0x101928C", Offset = "0x101928C", VA = "0x101928C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6AE9BC", Offset = "0x6AE9BC")]
		private set
		{
		}
	}

	[Token(Token = "0x17000113")]
	public override Texture2D secondaryTexture
	{
		[Token(Token = "0x6000464")]
		[Address(RVA = "0x1019294", Offset = "0x1019294", VA = "0x1019294", Slot = "9")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000465")]
	[Address(RVA = "0x101929C", Offset = "0x101929C", VA = "0x101929C")]
	public WaterUtilityState(UtilityManager inUtilityManager)
	{
	}

	[Token(Token = "0x6000466")]
	[Address(RVA = "0x101950C", Offset = "0x101950C", VA = "0x101950C", Slot = "10")]
	public override void Reset()
	{
	}

	[Token(Token = "0x6000467")]
	[Address(RVA = "0x1019644", Offset = "0x1019644", VA = "0x1019644", Slot = "15")]
	public override int ResourceUsage(BuildingInstance building)
	{
		return default(int);
	}

	[Token(Token = "0x6000468")]
	[Address(RVA = "0x1019824", Offset = "0x1019824", VA = "0x1019824")]
	private void VisitRadius(BuildingInstance building, Action<int, int> visitFn)
	{
	}

	[Token(Token = "0x6000469")]
	[Address(RVA = "0x10199AC", Offset = "0x10199AC", VA = "0x10199AC")]
	private void TapGround(BuildingInstance building)
	{
	}

	[Token(Token = "0x600046A")]
	[Address(RVA = "0x1019CD0", Offset = "0x1019CD0", VA = "0x1019CD0", Slot = "12")]
	public override void OnPlaceBuilding(BuildingInstance building, bool fromSaveGame)
	{
	}

	[Token(Token = "0x600046B")]
	[Address(RVA = "0x1019B50", Offset = "0x1019B50", VA = "0x1019B50")]
	private void RecalculateBuilding(BuildingInstance building)
	{
	}

	[Token(Token = "0x600046C")]
	[Address(RVA = "0x10194CC", Offset = "0x10194CC", VA = "0x10194CC")]
	private void ApplyFlowMap()
	{
	}

	[Token(Token = "0x600046D")]
	[Address(RVA = "0x1019788", Offset = "0x1019788", VA = "0x1019788")]
	public float GetEfficiency(BuildingInstance building)
	{
		return default(float);
	}

	[Token(Token = "0x600046E")]
	[Address(RVA = "0x1019EB0", Offset = "0x1019EB0", VA = "0x1019EB0", Slot = "13")]
	public override void OnDemolishBuilding(BuildingInstance building, bool fromSaveGame)
	{
	}

	[Token(Token = "0x600046F")]
	[Address(RVA = "0x101A064", Offset = "0x101A064", VA = "0x101A064")]
	private void CalculateWaterTreatmentPlantSupply(BuildingInstance building)
	{
	}

	[Token(Token = "0x6000470")]
	[Address(RVA = "0x101A268", Offset = "0x101A268", VA = "0x101A268", Slot = "14")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6AE9CC", Offset = "0x6AE9CC")]
	protected override IEnumerator SimulateAsync()
	{
		return null;
	}

	[Token(Token = "0x6000471")]
	[Address(RVA = "0x101A304", Offset = "0x101A304", VA = "0x101A304")]
	private void SavePreviewPlacementData(BuildingInstance building)
	{
	}

	[Token(Token = "0x6000472")]
	[Address(RVA = "0x1019DBC", Offset = "0x1019DBC", VA = "0x1019DBC")]
	private void RestorePreviewReplacementData()
	{
	}

	[Token(Token = "0x6000473")]
	[Address(RVA = "0x101A4C4", Offset = "0x101A4C4", VA = "0x101A4C4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6AEA30", Offset = "0x6AEA30")]
	[DebuggerHidden]
	private IEnumerator <>n__0()
	{
		return null;
	}
}
[Token(Token = "0x2000056")]
public class PowerUtilityState : UtilityState
{
	[Token(Token = "0x6000474")]
	[Address(RVA = "0x10FF228", Offset = "0x10FF228", VA = "0x10FF228")]
	public PowerUtilityState(UtilityManager inUtilityManager)
	{
	}

	[Token(Token = "0x6000475")]
	[Address(RVA = "0x10FF230", Offset = "0x10FF230", VA = "0x10FF230", Slot = "15")]
	public override int ResourceUsage(BuildingInstance building)
	{
		return default(int);
	}
}
[Token(Token = "0x2000057")]
public class WorldMap : SingletonBehaviour<WorldMap>, IDebugPanelProvider
{
	[Token(Token = "0x20002E5")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6A7F34", Offset = "0x6A7F34")]
	private sealed class <LoadAsync>d__35 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40013AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40013B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40013B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public WorldMap <>4__this;

		[Token(Token = "0x40013B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private List<WorldMapCity>.Enumerator <>7__wrap1;

		[Token(Token = "0x40013B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private WorldMapCity <city>5__3;

		[Token(Token = "0x40013B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private DateTime <loadStartTime>5__4;

		[Token(Token = "0x40013B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private IEnumerator <loadOperation>5__5;

		[Token(Token = "0x1700037A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600152B")]
			[Address(RVA = "0x1172390", Offset = "0x1172390", VA = "0x1172390", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700037B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600152D")]
			[Address(RVA = "0x11723F8", Offset = "0x11723F8", VA = "0x11723F8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001527")]
		[Address(RVA = "0x1171CAC", Offset = "0x1171CAC", VA = "0x1171CAC")]
		[DebuggerHidden]
		public <LoadAsync>d__35(int <>1__state)
		{
		}

		[Token(Token = "0x6001528")]
		[Address(RVA = "0x1171CD8", Offset = "0x1171CD8", VA = "0x1171CD8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001529")]
		[Address(RVA = "0x1171D4C", Offset = "0x1171D4C", VA = "0x1171D4C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600152A")]
		[Address(RVA = "0x1171CF4", Offset = "0x1171CF4", VA = "0x1171CF4")]
		private void <>m__Finally1()
		{
		}

		[Token(Token = "0x600152C")]
		[Address(RVA = "0x1172398", Offset = "0x1172398", VA = "0x1172398", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20002E6")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6A7F44", Offset = "0x6A7F44")]
	private sealed class <ShowOpeningAnimationRoutine>d__37 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40013B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40013B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40013B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public WorldMap <>4__this;

		[Token(Token = "0x1700037C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001531")]
			[Address(RVA = "0x1172618", Offset = "0x1172618", VA = "0x1172618", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700037D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001533")]
			[Address(RVA = "0x1172680", Offset = "0x1172680", VA = "0x1172680", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600152E")]
		[Address(RVA = "0x1172400", Offset = "0x1172400", VA = "0x1172400")]
		[DebuggerHidden]
		public <ShowOpeningAnimationRoutine>d__37(int <>1__state)
		{
		}

		[Token(Token = "0x600152F")]
		[Address(RVA = "0x117242C", Offset = "0x117242C", VA = "0x117242C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001530")]
		[Address(RVA = "0x1172430", Offset = "0x1172430", VA = "0x1172430", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001532")]
		[Address(RVA = "0x1172620", Offset = "0x1172620", VA = "0x1172620", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x20002E7")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6A7F54", Offset = "0x6A7F54")]
	private sealed class <>c
	{
		[Token(Token = "0x40013B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x40013BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Comparison<WorldMapCity> <>9__38_0;

		[Token(Token = "0x6001535")]
		[Address(RVA = "0x1171764", Offset = "0x1171764", VA = "0x1171764")]
		public <>c()
		{
		}

		[Token(Token = "0x6001536")]
		[Address(RVA = "0x117176C", Offset = "0x117176C", VA = "0x117176C")]
		internal int <CompleteCity>b__38_0(WorldMapCity x, WorldMapCity y)
		{
			return default(int);
		}
	}

	[Token(Token = "0x20002E8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6A7F64", Offset = "0x6A7F64")]
	private sealed class <CompleteTutorialCityRoutine>d__43 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40013BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40013BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40013BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public WorldMap <>4__this;

		[Token(Token = "0x40013BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <t>5__2;

		[Token(Token = "0x1700037E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600153A")]
			[Address(RVA = "0x1171C3C", Offset = "0x1171C3C", VA = "0x1171C3C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700037F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600153C")]
			[Address(RVA = "0x1171CA4", Offset = "0x1171CA4", VA = "0x1171CA4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001537")]
		[Address(RVA = "0x11717AC", Offset = "0x11717AC", VA = "0x11717AC")]
		[DebuggerHidden]
		public <CompleteTutorialCityRoutine>d__43(int <>1__state)
		{
		}

		[Token(Token = "0x6001538")]
		[Address(RVA = "0x11717D8", Offset = "0x11717D8", VA = "0x11717D8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001539")]
		[Address(RVA = "0x11717DC", Offset = "0x11717DC", VA = "0x11717DC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600153B")]
		[Address(RVA = "0x1171C44", Offset = "0x1171C44", VA = "0x1171C44", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000266")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<WorldMapCity> cities;

	[Token(Token = "0x4000267")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject cityPrefab;

	[Token(Token = "0x4000268")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform startingIslandTransform;

	[Token(Token = "0x4000269")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject handPointHintObject;

	[Token(Token = "0x400026A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float transitionDuration;

	[Token(Token = "0x400026B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float handPointHintRaiseAmount;

	[Token(Token = "0x400026C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float handPointHintFrequency;

	[Token(Token = "0x400026D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float minDistanceFromHandsToHintObject;

	[Token(Token = "0x400026E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float timeBeforeHandPointHintIsVisible;

	[Token(Token = "0x400026F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public AudioClip islandShiftSoundEffect;

	[Token(Token = "0x4000270")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6A8B3C", Offset = "0x6A8B3C")]
	private bool <hasCompletedTutorial>k__BackingField;

	[Token(Token = "0x4000271")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6A8B4C", Offset = "0x6A8B4C")]
	private bool <isTutorialIslandAnimating>k__BackingField;

	[Token(Token = "0x4000272")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private Vector3 startingIslandActualPosition;

	[Token(Token = "0x4000273")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Quaternion startingIslandActualRotation;

	[Token(Token = "0x4000274")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Vector3 startingIslandActualScale;

	[Token(Token = "0x4000275")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private Vector3 startingHandPointHintPosition;

	[Token(Token = "0x4000276")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private float timeInWorldMap;

	[Token(Token = "0x4000277")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	public float sideImpostorScale;

	[Token(Token = "0x17000114")]
	private Player player
	{
		[Token(Token = "0x6000476")]
		[Address(RVA = "0x1025FEC", Offset = "0x1025FEC", VA = "0x1025FEC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000115")]
	public bool hasCompletedTutorial
	{
		[Token(Token = "0x6000477")]
		[Address(RVA = "0x102603C", Offset = "0x102603C", VA = "0x102603C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6AEA68", Offset = "0x6AEA68")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000478")]
		[Address(RVA = "0x1026044", Offset = "0x1026044", VA = "0x1026044")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6AEA78", Offset = "0x6AEA78")]
		set
		{
		}
	}

	[Token(Token = "0x17000116")]
	public bool isTutorialIslandAnimating
	{
		[Token(Token = "0x6000479")]
		[Address(RVA = "0x1026050", Offset = "0x1026050", VA = "0x1026050")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6AEA88", Offset = "0x6AEA88")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600047A")]
		[Address(RVA = "0x1026058", Offset = "0x1026058", VA = "0x1026058")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6AEA98", Offset = "0x6AEA98")]
		private set
		{
		}
	}

	[Token(Token = "0x17000117")]
	public WorldMapCity tutorialCity
	{
		[Token(Token = "0x600047B")]
		[Address(RVA = "0x1026064", Offset = "0x1026064", VA = "0x1026064")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000118")]
	public bool tutorialCityIsBankrupt
	{
		[Token(Token = "0x600047C")]
		[Address(RVA = "0x10260C8", Offset = "0x10260C8", VA = "0x10260C8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000119")]
	public bool shouldShowReturnToWorldMapHint
	{
		[Token(Token = "0x600047D")]
		[Address(RVA = "0x10261AC", Offset = "0x10261AC", VA = "0x10261AC")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x600047E")]
	[Address(RVA = "0x1026300", Offset = "0x1026300", VA = "0x1026300", Slot = "4")]
	public override void Awake()
	{
	}

	[Token(Token = "0x600047F")]
	[Address(RVA = "0x10263F4", Offset = "0x10263F4", VA = "0x10263F4")]
	public bool IsAnyCityShowingDialog()
	{
		return default(bool);
	}

	[Token(Token = "0x6000480")]
	[Address(RVA = "0x102649C", Offset = "0x102649C", VA = "0x102649C")]
	public bool IsAnyCityAnimating()
	{
		return default(bool);
	}

	[Token(Token = "0x6000481")]
	[Address(RVA = "0x1026540", Offset = "0x1026540", VA = "0x1026540")]
	private void Update()
	{
	}

	[Token(Token = "0x6000482")]
	[Address(RVA = "0x10269F0", Offset = "0x10269F0", VA = "0x10269F0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6AEAA8", Offset = "0x6AEAA8")]
	public IEnumerator LoadAsync()
	{
		return null;
	}

	[Token(Token = "0x6000483")]
	[Address(RVA = "0x1026A60", Offset = "0x1026A60", VA = "0x1026A60")]
	public void ShowOpeningAnimation()
	{
	}

	[Token(Token = "0x6000484")]
	[Address(RVA = "0x1026AFC", Offset = "0x1026AFC", VA = "0x1026AFC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6AEB0C", Offset = "0x6AEB0C")]
	private IEnumerator ShowOpeningAnimationRoutine()
	{
		return null;
	}

	[Token(Token = "0x6000485")]
	[Address(RVA = "0x1026B6C", Offset = "0x1026B6C", VA = "0x1026B6C")]
	public void CompleteCity(WorldMapCity city)
	{
	}

	[Token(Token = "0x6000486")]
	[Address(RVA = "0x1027180", Offset = "0x1027180", VA = "0x1027180")]
	public bool HasCompletedAllLevels()
	{
		return default(bool);
	}

	[Token(Token = "0x6000487")]
	[Address(RVA = "0x10273F0", Offset = "0x10273F0", VA = "0x10273F0")]
	public bool DoesCityNeedCompletion(WorldMapCity city)
	{
		return default(bool);
	}

	[Token(Token = "0x6000488")]
	[Address(RVA = "0x1027410", Offset = "0x1027410", VA = "0x1027410")]
	public bool WillCompletionUnlockNewLevels(WorldMapCity city)
	{
		return default(bool);
	}

	[Token(Token = "0x6000489")]
	[Address(RVA = "0x1027294", Offset = "0x1027294", VA = "0x1027294")]
	private void UnlockCitiesWithAnimation(List<WorldMapCity> unlocks)
	{
	}

	[Token(Token = "0x600048A")]
	[Address(RVA = "0x1027224", Offset = "0x1027224", VA = "0x1027224")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6AEB70", Offset = "0x6AEB70")]
	private IEnumerator CompleteTutorialCityRoutine()
	{
		return null;
	}

	[Token(Token = "0x600048B")]
	[Address(RVA = "0x1027514", Offset = "0x1027514", VA = "0x1027514")]
	public void GenerateImpostors()
	{
	}

	[Token(Token = "0x600048C")]
	[Address(RVA = "0x102766C", Offset = "0x102766C", VA = "0x102766C")]
	public void SwitchToCity(WorldMapCity city)
	{
	}

	[Token(Token = "0x600048D")]
	[Address(RVA = "0x1027CA0", Offset = "0x1027CA0", VA = "0x1027CA0")]
	public void PostLoad()
	{
	}

	[Token(Token = "0x600048E")]
	[Address(RVA = "0x1027E88", Offset = "0x1027E88", VA = "0x1027E88")]
	public void Refresh()
	{
	}

	[Token(Token = "0x600048F")]
	[Address(RVA = "0x1027814", Offset = "0x1027814", VA = "0x1027814")]
	private void SetupSideViewImpostors(WorldMapCity targetCity)
	{
	}

	[Token(Token = "0x6000490")]
	[Address(RVA = "0x1027F80", Offset = "0x1027F80", VA = "0x1027F80")]
	public bool GenerateTravelDestination(WorldMapCity city, out Vector3 destination)
	{
		return default(bool);
	}

	[Token(Token = "0x6000491")]
	[Address(RVA = "0x1028298", Offset = "0x1028298", VA = "0x1028298")]
	public void HideSideImpostors()
	{
	}

	[Token(Token = "0x6000492")]
	[Address(RVA = "0x10283C4", Offset = "0x10283C4", VA = "0x10283C4", Slot = "6")]
	private void IDebugPanelProvider.OnDebugPanel()
	{
	}

	[Token(Token = "0x6000493")]
	[Address(RVA = "0x10289B4", Offset = "0x10289B4", VA = "0x10289B4")]
	public WorldMap()
	{
	}
}
[Token(Token = "0x2000058")]
public class WorldMapCity : MonoBehaviour
{
	[Token(Token = "0x20002E9")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6A7F74", Offset = "0x6A7F74")]
	private sealed class <LoadAsync>d__59 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40013BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40013C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40013C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public WorldMapCity <>4__this;

		[Token(Token = "0x40013C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public WorldMap inWorldMap;

		[Token(Token = "0x40013C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private ResourceRequest <loadOperation>5__2;

		[Token(Token = "0x40013C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private ResourceRequest <landscapeLoadOperation>5__3;

		[Token(Token = "0x17000380")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001540")]
			[Address(RVA = "0x1173CBC", Offset = "0x1173CBC", VA = "0x1173CBC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000381")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001542")]
			[Address(RVA = "0x1173D24", Offset = "0x1173D24", VA = "0x1173D24", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600153D")]
		[Address(RVA = "0x1172CA4", Offset = "0x1172CA4", VA = "0x1172CA4")]
		[DebuggerHidden]
		public <LoadAsync>d__59(int <>1__state)
		{
		}

		[Token(Token = "0x600153E")]
		[Address(RVA = "0x1173728", Offset = "0x1173728", VA = "0x1173728", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600153F")]
		[Address(RVA = "0x117372C", Offset = "0x117372C", VA = "0x117372C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001541")]
		[Address(RVA = "0x1173CC4", Offset = "0x1173CC4", VA = "0x1173CC4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20002EA")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6A7F84", Offset = "0x6A7F84")]
	private sealed class <ShowRoutine>d__65 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40013C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40013C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40013C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public WorldMapCity <>4__this;

		[Token(Token = "0x40013C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float delay;

		[Token(Token = "0x40013C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Material <impostorMaterial>5__2;

		[Token(Token = "0x40013CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private int <visiblityId>5__3;

		[Token(Token = "0x40013CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float <time>5__4;

		[Token(Token = "0x17000382")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001546")]
			[Address(RVA = "0x11748CC", Offset = "0x11748CC", VA = "0x11748CC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000383")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001548")]
			[Address(RVA = "0x1174934", Offset = "0x1174934", VA = "0x1174934", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001543")]
		[Address(RVA = "0x1173198", Offset = "0x1173198", VA = "0x1173198")]
		[DebuggerHidden]
		public <ShowRoutine>d__65(int <>1__state)
		{
		}

		[Token(Token = "0x6001544")]
		[Address(RVA = "0x1174404", Offset = "0x1174404", VA = "0x1174404", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001545")]
		[Address(RVA = "0x1174408", Offset = "0x1174408", VA = "0x1174408", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001547")]
		[Address(RVA = "0x11748D4", Offset = "0x11748D4", VA = "0x11748D4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20002EB")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6A7F94", Offset = "0x6A7F94")]
	private sealed class <ResetWithAnimationRoutine>d__70 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40013CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40013CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40013CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public WorldMapCity <>4__this;

		[Token(Token = "0x40013CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Material <impostorMaterial>5__2;

		[Token(Token = "0x40013D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int <visiblityId>5__3;

		[Token(Token = "0x40013D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float <time>5__4;

		[Token(Token = "0x40013D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Vector3 <centerPosition>5__5;

		[Token(Token = "0x17000384")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600154C")]
			[Address(RVA = "0x1174394", Offset = "0x1174394", VA = "0x1174394", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000385")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600154E")]
			[Address(RVA = "0x11743FC", Offset = "0x11743FC", VA = "0x11743FC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001549")]
		[Address(RVA = "0x1173684", Offset = "0x1173684", VA = "0x1173684")]
		[DebuggerHidden]
		public <ResetWithAnimationRoutine>d__70(int <>1__state)
		{
		}

		[Token(Token = "0x600154A")]
		[Address(RVA = "0x1173D2C", Offset = "0x1173D2C", VA = "0x1173D2C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600154B")]
		[Address(RVA = "0x1173D30", Offset = "0x1173D30", VA = "0x1173D30", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600154D")]
		[Address(RVA = "0x117439C", Offset = "0x117439C", VA = "0x117439C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000278")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string cityFile;

	[Token(Token = "0x4000279")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<WorldMapCity> unlockedCitiesOnCompletion;

	[Token(Token = "0x400027A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6A8B5C", Offset = "0x6A8B5C")]
	private CityInfo <cityInfo>k__BackingField;

	[Token(Token = "0x400027B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6A8B6C", Offset = "0x6A8B6C")]
	private GameObject <landscapePrefab>k__BackingField;

	[Token(Token = "0x400027C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6A8B7C", Offset = "0x6A8B7C")]
	private City <city>k__BackingField;

	[Token(Token = "0x400027D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Transform panelRoot;

	[Token(Token = "0x400027E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject infoPanel;

	[Token(Token = "0x400027F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject dialogPanel;

	[Token(Token = "0x4000280")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public RectTransform panelContainer;

	[Token(Token = "0x4000281")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Image cityLevelProgress;

	[Token(Token = "0x4000282")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Text cityLevelProgressText;

	[Token(Token = "0x4000283")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Text cityNameText;

	[Token(Token = "0x4000284")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Transform demolishHintArrowRoot;

	[Token(Token = "0x4000285")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public AnimationCurve appearanceCurve;

	[Token(Token = "0x4000286")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public float appearanceAnimationDuration;

	[Token(Token = "0x4000287")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public ParticleSystem appearanceEffectPrefab;

	[Token(Token = "0x4000288")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public AudioClip[] appearanceSoundEffects;

	[Token(Token = "0x4000289")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6A8B8C", Offset = "0x6A8B8C")]
	private WorldMapCityEffects <cityEffects>k__BackingField;

	[Token(Token = "0x400028A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6A8B9C", Offset = "0x6A8B9C")]
	private bool <isAnimating>k__BackingField;

	[Token(Token = "0x400028B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA9")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6A8BAC", Offset = "0x6A8BAC")]
	private bool <isLocked>k__BackingField;

	[Token(Token = "0x400028C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAA")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6A8BBC", Offset = "0x6A8BBC")]
	private bool <isCompleted>k__BackingField;

	[Token(Token = "0x400028D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAB")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6A8BCC", Offset = "0x6A8BCC")]
	private bool <hasVisitedYet>k__BackingField;

	[Token(Token = "0x400028E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6A8BDC", Offset = "0x6A8BDC")]
	private int <completionOrder>k__BackingField;

	[Token(Token = "0x400028F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private Button button;

	[Token(Token = "0x4000290")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private WorldMap worldMap;

	[Token(Token = "0x1700011A")]
	public CityInfo cityInfo
	{
		[Token(Token = "0x6000494")]
		[Address(RVA = "0x1172688", Offset = "0x1172688", VA = "0x1172688")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6AEBD4", Offset = "0x6AEBD4")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000495")]
		[Address(RVA = "0x1172690", Offset = "0x1172690", VA = "0x1172690")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6AEBE4", Offset = "0x6AEBE4")]
		private set
		{
		}
	}

	[Token(Token = "0x1700011B")]
	public GameObject landscapePrefab
	{
		[Token(Token = "0x6000496")]
		[Address(RVA = "0x1172698", Offset = "0x1172698", VA = "0x1172698")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6AEBF4", Offset = "0x6AEBF4")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000497")]
		[Address(RVA = "0x11726A0", Offset = "0x11726A0", VA = "0x11726A0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6AEC04", Offset = "0x6AEC04")]
		private set
		{
		}
	}

	[Token(Token = "0x1700011C")]
	public City city
	{
		[Token(Token = "0x6000498")]
		[Address(RVA = "0x11726A8", Offset = "0x11726A8", VA = "0x11726A8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6AEC14", Offset = "0x6AEC14")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000499")]
		[Address(RVA = "0x11726B0", Offset = "0x11726B0", VA = "0x11726B0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6AEC24", Offset = "0x6AEC24")]
		private set
		{
		}
	}

	[Token(Token = "0x1700011D")]
	public WorldMapCityEffects cityEffects
	{
		[Token(Token = "0x600049A")]
		[Address(RVA = "0x11726B8", Offset = "0x11726B8", VA = "0x11726B8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6AEC34", Offset = "0x6AEC34")]
		get
		{
			return null;
		}
		[Token(Token = "0x600049B")]
		[Address(RVA = "0x11726C0", Offset = "0x11726C0", VA = "0x11726C0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6AEC44", Offset = "0x6AEC44")]
		private set
		{
		}
	}

	[Token(Token = "0x1700011E")]
	private GameObject impostorIsland
	{
		[Token(Token = "0x600049C")]
		[Address(RVA = "0x11726C8", Offset = "0x11726C8", VA = "0x11726C8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700011F")]
	public bool isAnimating
	{
		[Token(Token = "0x600049D")]
		[Address(RVA = "0x11726F0", Offset = "0x11726F0", VA = "0x11726F0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6AEC54", Offset = "0x6AEC54")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600049E")]
		[Address(RVA = "0x11726F8", Offset = "0x11726F8", VA = "0x11726F8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6AEC64", Offset = "0x6AEC64")]
		private set
		{
		}
	}

	[Token(Token = "0x17000120")]
	public bool isLocked
	{
		[Token(Token = "0x600049F")]
		[Address(RVA = "0x1172704", Offset = "0x1172704", VA = "0x1172704")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6AEC74", Offset = "0x6AEC74")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60004A0")]
		[Address(RVA = "0x117270C", Offset = "0x117270C", VA = "0x117270C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6AEC84", Offset = "0x6AEC84")]
		private set
		{
		}
	}

	[Token(Token = "0x17000121")]
	public bool isCompleted
	{
		[Token(Token = "0x60004A1")]
		[Address(RVA = "0x1172718", Offset = "0x1172718", VA = "0x1172718")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6AEC94", Offset = "0x6AEC94")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60004A2")]
		[Address(RVA = "0x1172720", Offset = "0x1172720", VA = "0x1172720")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6AECA4", Offset = "0x6AECA4")]
		set
		{
		}
	}

	[Token(Token = "0x17000122")]
	public bool hasVisitedYet
	{
		[Token(Token = "0x60004A3")]
		[Address(RVA = "0x117272C", Offset = "0x117272C", VA = "0x117272C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6AECB4", Offset = "0x6AECB4")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60004A4")]
		[Address(RVA = "0x1172734", Offset = "0x1172734", VA = "0x1172734")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6AECC4", Offset = "0x6AECC4")]
		set
		{
		}
	}

	[Token(Token = "0x17000123")]
	public int completionOrder
	{
		[Token(Token = "0x60004A5")]
		[Address(RVA = "0x1172740", Offset = "0x1172740", VA = "0x1172740")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6AECD4", Offset = "0x6AECD4")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60004A6")]
		[Address(RVA = "0x1172748", Offset = "0x1172748", VA = "0x1172748")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6AECE4", Offset = "0x6AECE4")]
		set
		{
		}
	}

	[Token(Token = "0x17000124")]
	public bool isShowingDialog
	{
		[Token(Token = "0x60004A7")]
		[Address(RVA = "0x1172750", Offset = "0x1172750", VA = "0x1172750")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x60004A8")]
	[Address(RVA = "0x117276C", Offset = "0x117276C", VA = "0x117276C")]
	private void Awake()
	{
	}

	[Token(Token = "0x60004A9")]
	[Address(RVA = "0x1172820", Offset = "0x1172820", VA = "0x1172820")]
	private void OnPressed()
	{
	}

	[Token(Token = "0x60004AA")]
	[Address(RVA = "0x1172938", Offset = "0x1172938", VA = "0x1172938")]
	private void Update()
	{
	}

	[Token(Token = "0x60004AB")]
	[Address(RVA = "0x117225C", Offset = "0x117225C", VA = "0x117225C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6AECF4", Offset = "0x6AECF4")]
	public IEnumerator LoadAsync(WorldMap inWorldMap)
	{
		return null;
	}

	[Token(Token = "0x60004AC")]
	[Address(RVA = "0x1172CD0", Offset = "0x1172CD0", VA = "0x1172CD0")]
	public void UpdateInfoPanel()
	{
	}

	[Token(Token = "0x60004AD")]
	[Address(RVA = "0x1172F1C", Offset = "0x1172F1C", VA = "0x1172F1C")]
	public void GenerateImpostors()
	{
	}

	[Token(Token = "0x60004AE")]
	[Address(RVA = "0x11722D8", Offset = "0x11722D8", VA = "0x11722D8")]
	public void SetLocked()
	{
	}

	[Token(Token = "0x60004AF")]
	[Address(RVA = "0x1173064", Offset = "0x1173064", VA = "0x1173064")]
	public void Unlock()
	{
	}

	[Token(Token = "0x60004B0")]
	[Address(RVA = "0x117256C", Offset = "0x117256C", VA = "0x117256C")]
	public Coroutine PlayShowAnimation(float delay = 0f)
	{
		return null;
	}

	[Token(Token = "0x60004B1")]
	[Address(RVA = "0x1173118", Offset = "0x1173118", VA = "0x1173118")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6AED58", Offset = "0x6AED58")]
	private IEnumerator ShowRoutine(float delay)
	{
		return null;
	}

	[Token(Token = "0x60004B2")]
	[Address(RVA = "0x11731C4", Offset = "0x11731C4", VA = "0x11731C4")]
	public void ResetIslandButtonPressed()
	{
	}

	[Token(Token = "0x60004B3")]
	[Address(RVA = "0x117327C", Offset = "0x117327C", VA = "0x117327C")]
	public void YesButtonPressed()
	{
	}

	[Token(Token = "0x60004B4")]
	[Address(RVA = "0x117355C", Offset = "0x117355C", VA = "0x117355C")]
	public void NoButtonPressed()
	{
	}

	[Token(Token = "0x60004B5")]
	[Address(RVA = "0x11732B4", Offset = "0x11732B4", VA = "0x11732B4")]
	public void ResetWithAnimation()
	{
	}

	[Token(Token = "0x60004B6")]
	[Address(RVA = "0x1173614", Offset = "0x1173614", VA = "0x1173614")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6AEDBC", Offset = "0x6AEDBC")]
	private IEnumerator ResetWithAnimationRoutine()
	{
		return null;
	}

	[Token(Token = "0x60004B7")]
	[Address(RVA = "0x11736B0", Offset = "0x11736B0", VA = "0x11736B0")]
	public WorldMapCity()
	{
	}
}
[Token(Token = "0x2000059")]
public class WorldMapCityEffects : MonoBehaviour
{
	[Token(Token = "0x20002EC")]
	public enum Effect
	{
		[Token(Token = "0x40013D4")]
		Waves,
		[Token(Token = "0x40013D5")]
		Attention,
		[Token(Token = "0x40013D6")]
		Selected,
		[Token(Token = "0x40013D7")]
		Appear
	}

	[Token(Token = "0x4000291")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Effect effect;

	[Token(Token = "0x4000292")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private int animationId;

	[Token(Token = "0x4000293")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int foamWidthId;

	[Token(Token = "0x4000294")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float animationValue;

	[Token(Token = "0x4000295")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float time;

	[Token(Token = "0x4000296")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float selectedAnimationSpeed;

	[Token(Token = "0x4000297")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float attentionAnimationSpeed;

	[Token(Token = "0x4000298")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float wavesAnimationSpeed;

	[Token(Token = "0x4000299")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float appearSpeed;

	[Token(Token = "0x400029A")]
	private const float foamWidth = 0.025f;

	[Token(Token = "0x400029B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private MeshRenderer meshRenderer;

	[Token(Token = "0x60004B8")]
	[Address(RVA = "0x117493C", Offset = "0x117493C", VA = "0x117493C")]
	private void Awake()
	{
	}

	[Token(Token = "0x60004B9")]
	[Address(RVA = "0x11748B8", Offset = "0x11748B8", VA = "0x11748B8")]
	public void Appear()
	{
	}

	[Token(Token = "0x60004BA")]
	[Address(RVA = "0x11749C4", Offset = "0x11749C4", VA = "0x11749C4")]
	private void Update()
	{
	}

	[Token(Token = "0x60004BB")]
	[Address(RVA = "0x1174C30", Offset = "0x1174C30", VA = "0x1174C30")]
	public WorldMapCityEffects()
	{
	}
}
[Token(Token = "0x200005A")]
public enum ZoneDensity
{
	[Token(Token = "0x400029D")]
	Low,
	[Token(Token = "0x400029E")]
	Medium,
	[Token(Token = "0x400029F")]
	High
}
[Token(Token = "0x200005B")]
public class ZoneConstructionManager : CityModule, ISimulationModule
{
	[Token(Token = "0x20002ED")]
	private struct PotentialBuildLocation
	{
		[Token(Token = "0x40013D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public BuildingInfo buildingInfo;

		[Token(Token = "0x40013D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public int x;

		[Token(Token = "0x40013DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public int y;

		[Token(Token = "0x40013DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int rotation;

		[Token(Token = "0x40013DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float score;

		[Token(Token = "0x40013DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool destroysExistingBuilding;
	}

	[Token(Token = "0x20002EE")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6A7FA4", Offset = "0x6A7FA4")]
	private sealed class <Simulate>d__27 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40013DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40013DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40013E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ZoneConstructionManager <>4__this;

		[Token(Token = "0x40013E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float deltaTime;

		[Token(Token = "0x17000386")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001552")]
			[Address(RVA = "0x117734C", Offset = "0x117734C", VA = "0x117734C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000387")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001554")]
			[Address(RVA = "0x11773B4", Offset = "0x11773B4", VA = "0x11773B4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600154F")]
		[Address(RVA = "0x1176F54", Offset = "0x1176F54", VA = "0x1176F54")]
		[DebuggerHidden]
		public <Simulate>d__27(int <>1__state)
		{
		}

		[Token(Token = "0x6001550")]
		[Address(RVA = "0x1177258", Offset = "0x1177258", VA = "0x1177258", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001551")]
		[Address(RVA = "0x117725C", Offset = "0x117725C", VA = "0x117725C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001553")]
		[Address(RVA = "0x1177354", Offset = "0x1177354", VA = "0x1177354", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40002A0")]
	public const bool useConstructionSitesForUpgradeAndDowngrade = true;

	[Token(Token = "0x40002A1")]
	public const float requestsPerSecond = 1f;

	[Token(Token = "0x40002A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int numAttempts;

	[Token(Token = "0x40002A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float requestsAccumulated;

	[Token(Token = "0x40002A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6A8BEC", Offset = "0x6A8BEC")]
	private int <numUpgradeConstructionSites>k__BackingField;

	[Token(Token = "0x40002A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private List<PotentialBuildLocation> potentialBuildLocations;

	[Token(Token = "0x40002A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private List<PotentialBuildLocation> queuedBuildLocations;

	[Token(Token = "0x40002A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float delayUntilNextQueuedConstruction;

	[Token(Token = "0x17000125")]
	public int numUpgradeConstructionSites
	{
		[Token(Token = "0x60004BC")]
		[Address(RVA = "0x1174C44", Offset = "0x1174C44", VA = "0x1174C44")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6AEE20", Offset = "0x6AEE20")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60004BD")]
		[Address(RVA = "0x1174C4C", Offset = "0x1174C4C", VA = "0x1174C4C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6AEE30", Offset = "0x6AEE30")]
		set
		{
		}
	}

	[Token(Token = "0x60004BE")]
	[Address(RVA = "0x1174C54", Offset = "0x1174C54", VA = "0x1174C54", Slot = "10")]
	public override void OnResetProgress()
	{
	}

	[Token(Token = "0x60004BF")]
	[Address(RVA = "0x1174CC4", Offset = "0x1174CC4", VA = "0x1174CC4")]
	private BuildingInfo GetConstructionSiteBuilding(BuildingInfo building)
	{
		return null;
	}

	[Token(Token = "0x60004C0")]
	[Address(RVA = "0x1174F00", Offset = "0x1174F00", VA = "0x1174F00")]
	private BuildingInfo PickBuilding(ZoneManager.ZoneType zoneType, ZoneDensity requiredDensity)
	{
		return null;
	}

	[Token(Token = "0x60004C1")]
	[Address(RVA = "0x1175088", Offset = "0x1175088", VA = "0x1175088")]
	private float GetMinPopulationDensityFromZoneDensity(ZoneDensity density)
	{
		return default(float);
	}

	[Token(Token = "0x60004C2")]
	[Address(RVA = "0x11750B0", Offset = "0x11750B0", VA = "0x11750B0")]
	private ZoneDensity GetTargetDensityFromPopulationDensity(float density)
	{
		return default(ZoneDensity);
	}

	[Token(Token = "0x60004C3")]
	[Address(RVA = "0x11750E0", Offset = "0x11750E0", VA = "0x11750E0")]
	private bool IsCorrectlyZoned(BuildingInfo building, PotentialBuildLocation loc)
	{
		return default(bool);
	}

	[Token(Token = "0x60004C4")]
	[Address(RVA = "0x11753B8", Offset = "0x11753B8", VA = "0x11753B8")]
	private void ClearArea(BuildingInfo building, PotentialBuildLocation loc)
	{
	}

	[Token(Token = "0x60004C5")]
	[Address(RVA = "0x1175490", Offset = "0x1175490", VA = "0x1175490")]
	private bool IsAreaClear(BuildingInfo building, PotentialBuildLocation loc)
	{
		return default(bool);
	}

	[Token(Token = "0x60004C6")]
	[Address(RVA = "0x11755E0", Offset = "0x11755E0", VA = "0x11755E0")]
	private bool SlideInDirection(BuildingInfo building, PotentialBuildLocation loc, int dirX, int dirY, out PotentialBuildLocation result)
	{
		return default(bool);
	}

	[Token(Token = "0x60004C7")]
	[Address(RVA = "0x117575C", Offset = "0x117575C", VA = "0x117575C")]
	private void GetRoadAccess(BuildingInfo info, PotentialBuildLocation loc, out int roadX, out int roadY)
	{
	}

	[Token(Token = "0x60004C8")]
	[Address(RVA = "0x1175820", Offset = "0x1175820", VA = "0x1175820")]
	private void TryAdd(BuildingInfo building, PotentialBuildLocation loc)
	{
	}

	[Token(Token = "0x60004C9")]
	[Address(RVA = "0x1175C30", Offset = "0x1175C30", VA = "0x1175C30")]
	private bool CanUpgradeToDensityYet(ZoneDensity zoneDensity)
	{
		return default(bool);
	}

	[Token(Token = "0x60004CA")]
	[Address(RVA = "0x1175C98", Offset = "0x1175C98", VA = "0x1175C98")]
	private void DowngradeBuilding(BuildingInstance building)
	{
	}

	[Token(Token = "0x60004CB")]
	[Address(RVA = "0x11760B4", Offset = "0x11760B4", VA = "0x11760B4")]
	private void FulfilRequest()
	{
	}

	[Token(Token = "0x60004CC")]
	[Address(RVA = "0x11769E8", Offset = "0x11769E8", VA = "0x11769E8")]
	private bool FulfilQueuedBuild(PotentialBuildLocation loc)
	{
		return default(bool);
	}

	[Token(Token = "0x60004CD")]
	[Address(RVA = "0x1176E34", Offset = "0x1176E34", VA = "0x1176E34")]
	private void FulfilQueuedBuilds()
	{
	}

	[Token(Token = "0x60004CE")]
	[Address(RVA = "0x1176ED4", Offset = "0x1176ED4", VA = "0x1176ED4", Slot = "11")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6AEE40", Offset = "0x6AEE40")]
	public IEnumerator Simulate(float deltaTime)
	{
		return null;
	}

	[Token(Token = "0x60004CF")]
	[Address(RVA = "0x1176F80", Offset = "0x1176F80", VA = "0x1176F80")]
	private void Update()
	{
	}

	[Token(Token = "0x60004D0")]
	[Address(RVA = "0x117706C", Offset = "0x117706C", VA = "0x117706C")]
	public void QueuePotentialZonedBuilding(int x, int y, int rotation)
	{
	}

	[Token(Token = "0x60004D1")]
	[Address(RVA = "0x11771B8", Offset = "0x11771B8", VA = "0x11771B8")]
	public ZoneConstructionManager()
	{
	}

	[SpecialName]
	[Token(Token = "0x60004D2")]
	[Address(RVA = "0x1177250", Offset = "0x1177250", VA = "0x1177250", Slot = "12")]
	private GameObject ISimulationModule.get_gameObject()
	{
		return null;
	}
}
[Token(Token = "0x200005C")]
public class ZoneDemandManager : CityModule, ISimulationModule
{
	[Token(Token = "0x20002EF")]
	public class ZoneDemandManagerSaveData : SaveSystem.ModuleData
	{
		[Token(Token = "0x40013E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float residentialDemand;

		[Token(Token = "0x40013E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float commercialDemand;

		[Token(Token = "0x40013E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float industrialDemand;

		[Token(Token = "0x6001555")]
		[Address(RVA = "0x1177770", Offset = "0x1177770", VA = "0x1177770")]
		public ZoneDemandManagerSaveData()
		{
		}
	}

	[Token(Token = "0x20002F0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6A7FB4", Offset = "0x6A7FB4")]
	private sealed class <Simulate>d__23 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40013E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40013E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40013E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ZoneDemandManager <>4__this;

		[Token(Token = "0x17000388")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001559")]
			[Address(RVA = "0x1177D94", Offset = "0x1177D94", VA = "0x1177D94", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000389")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600155B")]
			[Address(RVA = "0x1177DFC", Offset = "0x1177DFC", VA = "0x1177DFC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001556")]
		[Address(RVA = "0x11775A8", Offset = "0x11775A8", VA = "0x11775A8")]
		[DebuggerHidden]
		public <Simulate>d__23(int <>1__state)
		{
		}

		[Token(Token = "0x6001557")]
		[Address(RVA = "0x1177834", Offset = "0x1177834", VA = "0x1177834", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001558")]
		[Address(RVA = "0x1177838", Offset = "0x1177838", VA = "0x1177838", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600155A")]
		[Address(RVA = "0x1177D9C", Offset = "0x1177D9C", VA = "0x1177D9C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20002F1")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6A7FC4", Offset = "0x6A7FC4")]
	private sealed class <SimulateOld>d__24 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40013E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40013E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40013EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ZoneDemandManager <>4__this;

		[Token(Token = "0x40013EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float deltaTime;

		[Token(Token = "0x1700038A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600155F")]
			[Address(RVA = "0x1178460", Offset = "0x1178460", VA = "0x1178460", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700038B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001561")]
			[Address(RVA = "0x11784C8", Offset = "0x11784C8", VA = "0x11784C8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600155C")]
		[Address(RVA = "0x1177654", Offset = "0x1177654", VA = "0x1177654")]
		[DebuggerHidden]
		public <SimulateOld>d__24(int <>1__state)
		{
		}

		[Token(Token = "0x600155D")]
		[Address(RVA = "0x1177E04", Offset = "0x1177E04", VA = "0x1177E04", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600155E")]
		[Address(RVA = "0x1177E08", Offset = "0x1177E08", VA = "0x1177E08", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001560")]
		[Address(RVA = "0x1178468", Offset = "0x1178468", VA = "0x1178468", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40002A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool cheat;

	[Token(Token = "0x40002A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float demandChangeSpeed;

	[Token(Token = "0x40002AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float residentialDemand;

	[Token(Token = "0x40002AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float commercialDemand;

	[Token(Token = "0x40002AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float industrialDemand;

	[Token(Token = "0x40002AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6A8BFC", Offset = "0x6A8BFC")]
	private int <projectedPopulation>k__BackingField;

	[Token(Token = "0x40002AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6A8C0C", Offset = "0x6A8C0C")]
	private int <numIndustrialJobs>k__BackingField;

	[Token(Token = "0x40002AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6A8C1C", Offset = "0x6A8C1C")]
	private int <numCommercialJobs>k__BackingField;

	[Token(Token = "0x40002B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6A8C2C", Offset = "0x6A8C2C")]
	private float <desiredIndustrialJobRatio>k__BackingField;

	[Token(Token = "0x17000126")]
	public int projectedPopulation
	{
		[Token(Token = "0x60004D3")]
		[Address(RVA = "0x11773BC", Offset = "0x11773BC", VA = "0x11773BC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6AEEA4", Offset = "0x6AEEA4")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60004D4")]
		[Address(RVA = "0x11773C4", Offset = "0x11773C4", VA = "0x11773C4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6AEEB4", Offset = "0x6AEEB4")]
		private set
		{
		}
	}

	[Token(Token = "0x17000127")]
	public int numIndustrialJobs
	{
		[Token(Token = "0x60004D5")]
		[Address(RVA = "0x11773CC", Offset = "0x11773CC", VA = "0x11773CC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6AEEC4", Offset = "0x6AEEC4")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60004D6")]
		[Address(RVA = "0x11773D4", Offset = "0x11773D4", VA = "0x11773D4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6AEED4", Offset = "0x6AEED4")]
		private set
		{
		}
	}

	[Token(Token = "0x17000128")]
	public int numCommercialJobs
	{
		[Token(Token = "0x60004D7")]
		[Address(RVA = "0x11773DC", Offset = "0x11773DC", VA = "0x11773DC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6AEEE4", Offset = "0x6AEEE4")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60004D8")]
		[Address(RVA = "0x11773E4", Offset = "0x11773E4", VA = "0x11773E4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6AEEF4", Offset = "0x6AEEF4")]
		private set
		{
		}
	}

	[Token(Token = "0x17000129")]
	public float desiredIndustrialJobRatio
	{
		[Token(Token = "0x60004D9")]
		[Address(RVA = "0x11773EC", Offset = "0x11773EC", VA = "0x11773EC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6AEF04", Offset = "0x6AEF04")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60004DA")]
		[Address(RVA = "0x11773F4", Offset = "0x11773F4", VA = "0x11773F4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6AEF14", Offset = "0x6AEF14")]
		private set
		{
		}
	}

	[Token(Token = "0x1700012A")]
	public override Type saveModuleDataType
	{
		[Token(Token = "0x60004DF")]
		[Address(RVA = "0x1177680", Offset = "0x1177680", VA = "0x1177680", Slot = "4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60004DB")]
	[Address(RVA = "0x11773FC", Offset = "0x11773FC", VA = "0x11773FC")]
	public float GetDemand(ZoneManager.ZoneType zoneType)
	{
		return default(float);
	}

	[Token(Token = "0x60004DC")]
	[Address(RVA = "0x1177434", Offset = "0x1177434", VA = "0x1177434")]
	public ZoneManager.ZoneType PickDemandedZone()
	{
		return default(ZoneManager.ZoneType);
	}

	[Token(Token = "0x60004DD")]
	[Address(RVA = "0x1177538", Offset = "0x1177538", VA = "0x1177538", Slot = "11")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6AEF24", Offset = "0x6AEF24")]
	public IEnumerator Simulate(float deltaTime)
	{
		return null;
	}

	[Token(Token = "0x60004DE")]
	[Address(RVA = "0x11775D4", Offset = "0x11775D4", VA = "0x11775D4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6AEF88", Offset = "0x6AEF88")]
	public IEnumerator SimulateOld(float deltaTime)
	{
		return null;
	}

	[Token(Token = "0x60004E0")]
	[Address(RVA = "0x11776F0", Offset = "0x11776F0", VA = "0x11776F0", Slot = "5")]
	public override SaveSystem.ModuleData OnSave()
	{
		return null;
	}

	[Token(Token = "0x60004E1")]
	[Address(RVA = "0x1177778", Offset = "0x1177778", VA = "0x1177778", Slot = "6")]
	public override void OnLoad(SaveSystem.SaveGame saveGame, SaveSystem.ModuleData data)
	{
	}

	[Token(Token = "0x60004E2")]
	[Address(RVA = "0x1177818", Offset = "0x1177818", VA = "0x1177818")]
	public ZoneDemandManager()
	{
	}

	[SpecialName]
	[Token(Token = "0x60004E3")]
	[Address(RVA = "0x117782C", Offset = "0x117782C", VA = "0x117782C", Slot = "12")]
	private GameObject ISimulationModule.get_gameObject()
	{
		return null;
	}
}
[Token(Token = "0x200005D")]
public class ZoneManager : CityModule, IVisualiserTextureProvider
{
	[Token(Token = "0x20002F2")]
	public enum ZoneType : byte
	{
		[Token(Token = "0x40013ED")]
		Null,
		[Token(Token = "0x40013EE")]
		NoZone,
		[Token(Token = "0x40013EF")]
		Residential,
		[Token(Token = "0x40013F0")]
		Commercial,
		[Token(Token = "0x40013F1")]
		Industrial
	}

	[Token(Token = "0x20002F3")]
	private class State
	{
		[Token(Token = "0x40013F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public ZoneType[] data;

		[Token(Token = "0x40013F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public byte[] rotation;

		[Token(Token = "0x40013F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Color32[] textureData;

		[Token(Token = "0x6001562")]
		[Address(RVA = "0x1178E08", Offset = "0x1178E08", VA = "0x1178E08")]
		public State(int mapWidth, int mapHeight)
		{
		}

		[Token(Token = "0x6001563")]
		[Address(RVA = "0x1178F6C", Offset = "0x1178F6C", VA = "0x1178F6C")]
		public void CopyFrom(State other)
		{
		}
	}

	[Token(Token = "0x20002F4")]
	public class ZoneSaveData : SaveSystem.ModuleData
	{
		[Token(Token = "0x40013F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int width;

		[Token(Token = "0x40013F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int height;

		[Token(Token = "0x40013F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string zoning;

		[Token(Token = "0x40013F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string rotation;

		[NonSerialized]
		[Token(Token = "0x40013F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[XmlIgnore]
		public ZoneType[] zoningRaw;

		[NonSerialized]
		[Token(Token = "0x40013FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[XmlIgnore]
		public byte[] rotationRaw;

		[Token(Token = "0x6001564")]
		[Address(RVA = "0x117BC08", Offset = "0x117BC08", VA = "0x117BC08", Slot = "4")]
		public override void OnPreWrite()
		{
		}

		[Token(Token = "0x6001565")]
		[Address(RVA = "0x117B178", Offset = "0x117B178", VA = "0x117B178")]
		public ZoneSaveData()
		{
		}
	}

	[Token(Token = "0x40002B1")]
	private const byte zoneAlpha = 64;

	[Token(Token = "0x40002B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Color32[] zoneColors;

	[Token(Token = "0x40002B3")]
	private const int zoneSizeFromRoad = 2;

	[Token(Token = "0x40002B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private State stateInternal;

	[Token(Token = "0x40002B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private State previewState;

	[Token(Token = "0x40002B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool isPreviewMode;

	[Token(Token = "0x40002B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
	private bool showPreviewStateInternal;

	[Token(Token = "0x40002B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Texture2D zoneTexture;

	[Token(Token = "0x40002B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool textureDirty;

	[Token(Token = "0x40002BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
	private bool requiresDeferredRefresh;

	[Token(Token = "0x40002BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private int deferredRefreshX1;

	[Token(Token = "0x40002BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private int deferredRefreshY1;

	[Token(Token = "0x40002BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private int deferredRefreshX2;

	[Token(Token = "0x40002BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private int deferredRefreshY2;

	[Token(Token = "0x1700012B")]
	public static ZoneManager current
	{
		[Token(Token = "0x60004E4")]
		[Address(RVA = "0x11789D8", Offset = "0x11789D8", VA = "0x11789D8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700012C")]
	private State state
	{
		[Token(Token = "0x60004E5")]
		[Address(RVA = "0x1178AB0", Offset = "0x1178AB0", VA = "0x1178AB0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700012D")]
	public bool showPreviewState
	{
		[Token(Token = "0x60004E6")]
		[Address(RVA = "0x1178ACC", Offset = "0x1178ACC", VA = "0x1178ACC")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60004E7")]
		[Address(RVA = "0x1178AD4", Offset = "0x1178AD4", VA = "0x1178AD4")]
		set
		{
		}
	}

	[Token(Token = "0x1700012E")]
	public Texture2D visualiseTexture
	{
		[Token(Token = "0x60004E9")]
		[Address(RVA = "0x1178EB0", Offset = "0x1178EB0", VA = "0x1178EB0", Slot = "11")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700012F")]
	public Texture2D secondaryTexture
	{
		[Token(Token = "0x60004EA")]
		[Address(RVA = "0x1178EB8", Offset = "0x1178EB8", VA = "0x1178EB8", Slot = "12")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000130")]
	public override Type saveModuleDataType
	{
		[Token(Token = "0x600050B")]
		[Address(RVA = "0x117AFF0", Offset = "0x117AFF0", VA = "0x117AFF0", Slot = "4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60004E8")]
	[Address(RVA = "0x1178AFC", Offset = "0x1178AFC", VA = "0x1178AFC", Slot = "8")]
	public override void Init()
	{
	}

	[Token(Token = "0x60004EB")]
	[Address(RVA = "0x1178EC0", Offset = "0x1178EC0", VA = "0x1178EC0", Slot = "14")]
	public void RefreshVisualiseTexture()
	{
	}

	[Token(Token = "0x60004EC")]
	[Address(RVA = "0x1178F28", Offset = "0x1178F28", VA = "0x1178F28")]
	public void BeginPreviewChanges()
	{
	}

	[Token(Token = "0x60004ED")]
	[Address(RVA = "0x1178FD8", Offset = "0x1178FD8", VA = "0x1178FD8")]
	public void EndPreviewChanges()
	{
	}

	[Token(Token = "0x60004EE")]
	[Address(RVA = "0x1175248", Offset = "0x1175248", VA = "0x1175248")]
	public ZoneType GetZoneType(int x, int y)
	{
		return default(ZoneType);
	}

	[Token(Token = "0x60004EF")]
	[Address(RVA = "0x11790FC", Offset = "0x11790FC", VA = "0x11790FC")]
	public bool GetRoadSideTile(int x, int y, out int outX, out int outY)
	{
		return default(bool);
	}

	[Token(Token = "0x60004F0")]
	[Address(RVA = "0x1179264", Offset = "0x1179264", VA = "0x1179264")]
	public bool GetNonRoadSideTile(int x, int y, out int outX, out int outY)
	{
		return default(bool);
	}

	[Token(Token = "0x60004F1")]
	[Address(RVA = "0x1179390", Offset = "0x1179390", VA = "0x1179390")]
	public Vector3 GetPlotCenter(int x, int y)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60004F2")]
	[Address(RVA = "0x117950C", Offset = "0x117950C", VA = "0x117950C")]
	private void GetAdjacentRegionTile(int x, int y, out int adjacentX, out int adjacentY)
	{
	}

	[Token(Token = "0x60004F3")]
	[Address(RVA = "0x11795CC", Offset = "0x11795CC", VA = "0x11795CC")]
	public int PlaceZoneType(int x, int y, ZoneType zoneType, ConstructionCost costReport)
	{
		return default(int);
	}

	[Token(Token = "0x60004F4")]
	[Address(RVA = "0x1179868", Offset = "0x1179868", VA = "0x1179868")]
	public int SetZoneType(int x, int y, ZoneType zoneType)
	{
		return default(int);
	}

	[Token(Token = "0x60004F5")]
	[Address(RVA = "0x1179DD4", Offset = "0x1179DD4", VA = "0x1179DD4")]
	public void AdjustConstructionCost(ConstructionCost costReport, int x, int y, ZoneType newZoneType)
	{
	}

	[Token(Token = "0x60004F6")]
	[Address(RVA = "0x1179F34", Offset = "0x1179F34", VA = "0x1179F34")]
	public bool IsZoned(int x, int y)
	{
		return default(bool);
	}

	[Token(Token = "0x60004F7")]
	[Address(RVA = "0x117A014", Offset = "0x117A014", VA = "0x117A014")]
	public bool CanZone(int x, int y)
	{
		return default(bool);
	}

	[Token(Token = "0x60004F8")]
	[Address(RVA = "0x117A0D4", Offset = "0x117A0D4", VA = "0x117A0D4")]
	public bool IsZonedRegion(int x, int y, int width, int height, ZoneType zoneType)
	{
		return default(bool);
	}

	[Token(Token = "0x60004F9")]
	[Address(RVA = "0x117A1F0", Offset = "0x117A1F0", VA = "0x117A1F0")]
	public void OnPlaceRoadTile(int x, int y)
	{
	}

	[Token(Token = "0x60004FA")]
	[Address(RVA = "0x117A338", Offset = "0x117A338", VA = "0x117A338")]
	public void OnPlacePlantBox(int x, int y)
	{
	}

	[Token(Token = "0x60004FB")]
	[Address(RVA = "0x117A354", Offset = "0x117A354", VA = "0x117A354")]
	public void OnPlaceBuilding(BuildingInstance building)
	{
	}

	[Token(Token = "0x60004FC")]
	[Address(RVA = "0x117A45C", Offset = "0x117A45C", VA = "0x117A45C")]
	public void OnDemolishedBuilding(BuildingInstance building)
	{
	}

	[Token(Token = "0x60004FD")]
	[Address(RVA = "0x117AA0C", Offset = "0x117AA0C", VA = "0x117AA0C")]
	private bool IsRoad(int x, int y)
	{
		return default(bool);
	}

	[Token(Token = "0x60004FE")]
	[Address(RVA = "0x117AA9C", Offset = "0x117AA9C", VA = "0x117AA9C")]
	private bool IsAdjacentToBridge(int x, int y)
	{
		return default(bool);
	}

	[Token(Token = "0x60004FF")]
	[Address(RVA = "0x117ABC8", Offset = "0x117ABC8", VA = "0x117ABC8")]
	private bool CanTileBePotentiallyZoned(int x, int y)
	{
		return default(bool);
	}

	[Token(Token = "0x6000500")]
	[Address(RVA = "0x117A5F4", Offset = "0x117A5F4", VA = "0x117A5F4")]
	private void RefreshTile(int x, int y)
	{
	}

	[Token(Token = "0x6000501")]
	[Address(RVA = "0x1179228", Offset = "0x1179228", VA = "0x1179228")]
	private void GetRotationDirection(byte rotation, out int dirX, out int dirY)
	{
	}

	[Token(Token = "0x6000502")]
	[Address(RVA = "0x117ACE8", Offset = "0x117ACE8", VA = "0x117ACE8")]
	private bool IsTileBuildable(int x, int y)
	{
		return default(bool);
	}

	[Token(Token = "0x6000503")]
	[Address(RVA = "0x117AE1C", Offset = "0x117AE1C", VA = "0x117AE1C")]
	public void OnRemoveRoadTile(int x, int y)
	{
	}

	[Token(Token = "0x6000504")]
	[Address(RVA = "0x117AE38", Offset = "0x117AE38", VA = "0x117AE38")]
	public void OnRemovePlantBox(int x, int y)
	{
	}

	[Token(Token = "0x6000505")]
	[Address(RVA = "0x117A20C", Offset = "0x117A20C", VA = "0x117A20C")]
	private void RefreshRegion(int x1, int y1, int x2, int y2)
	{
	}

	[Token(Token = "0x6000506")]
	[Address(RVA = "0x117901C", Offset = "0x117901C", VA = "0x117901C")]
	private void RefreshRegionInternal(int x1, int y1, int x2, int y2)
	{
	}

	[Token(Token = "0x6000507")]
	[Address(RVA = "0x1175300", Offset = "0x1175300", VA = "0x1175300")]
	public byte GetTileRotation(int x, int y)
	{
		return default(byte);
	}

	[Token(Token = "0x6000508")]
	[Address(RVA = "0x117AD60", Offset = "0x117AD60", VA = "0x117AD60")]
	private void SetTileRotation(int x, int y, byte rotation)
	{
	}

	[Token(Token = "0x6000509")]
	[Address(RVA = "0x1179B00", Offset = "0x1179B00", VA = "0x1179B00")]
	private bool SetTile(int x, int y, ZoneType zoneType)
	{
		return default(bool);
	}

	[Token(Token = "0x600050A")]
	[Address(RVA = "0x117AF54", Offset = "0x117AF54", VA = "0x117AF54")]
	private bool IsTilePotentiallyZoneable(int x, int y)
	{
		return default(bool);
	}

	[Token(Token = "0x600050C")]
	[Address(RVA = "0x117B060", Offset = "0x117B060", VA = "0x117B060", Slot = "5")]
	public override SaveSystem.ModuleData OnSave()
	{
		return null;
	}

	[Token(Token = "0x600050D")]
	[Address(RVA = "0x117B180", Offset = "0x117B180", VA = "0x117B180", Slot = "6")]
	public override void OnLoad(SaveSystem.SaveGame saveGame, SaveSystem.ModuleData inData)
	{
	}

	[Token(Token = "0x600050E")]
	[Address(RVA = "0x117B60C", Offset = "0x117B60C", VA = "0x117B60C", Slot = "7")]
	public override void OnPostLoad()
	{
	}

	[Token(Token = "0x600050F")]
	[Address(RVA = "0x117B7C4", Offset = "0x117B7C4", VA = "0x117B7C4", Slot = "10")]
	public override void OnResetProgress()
	{
	}

	[Token(Token = "0x6000510")]
	[Address(RVA = "0x117B8E8", Offset = "0x117B8E8", VA = "0x117B8E8")]
	public bool CheckForExistingZoneType(ZoneType zoneType)
	{
		return default(bool);
	}

	[Token(Token = "0x6000511")]
	[Address(RVA = "0x117BA74", Offset = "0x117BA74", VA = "0x117BA74")]
	public ZoneManager()
	{
	}

	[SpecialName]
	[Token(Token = "0x6000512")]
	[Address(RVA = "0x117BC00", Offset = "0x117BC00", VA = "0x117BC00", Slot = "13")]
	private string IVisualiserTextureProvider.get_name()
	{
		return null;
	}
}
[Token(Token = "0x200005E")]
public class AnimatorTimeScale : MonoBehaviour
{
	[Token(Token = "0x40002BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Animator animator;

	[Token(Token = "0x40002C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private City city;

	[Token(Token = "0x6000513")]
	[Address(RVA = "0x10A3554", Offset = "0x10A3554", VA = "0x10A3554")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000514")]
	[Address(RVA = "0x10A3650", Offset = "0x10A3650", VA = "0x10A3650")]
	private void Update()
	{
	}

	[Token(Token = "0x6000515")]
	[Address(RVA = "0x10A3698", Offset = "0x10A3698", VA = "0x10A3698")]
	public AnimatorTimeScale()
	{
	}
}
[Token(Token = "0x200005F")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x6A7288", Offset = "0x6A7288")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x6A7288", Offset = "0x6A7288")]
[ExecuteInEditMode]
public class BlobShadow : MonoBehaviour
{
	[Token(Token = "0x40002C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string blobTag;

	[Token(Token = "0x40002C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public MeshRenderer target;

	[Token(Token = "0x40002C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private MaterialPropertyBlock materialPropertyBlock;

	[Token(Token = "0x40002C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private int shadowPlaneHeightId;

	[Token(Token = "0x40002C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private MeshRenderer meshRenderer;

	[Token(Token = "0x40002C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float _shadowPlaneHeight;

	[Token(Token = "0x17000131")]
	public float shadowPlaneHeight
	{
		[Token(Token = "0x6000516")]
		[Address(RVA = "0x10A95DC", Offset = "0x10A95DC", VA = "0x10A95DC")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000517")]
		[Address(RVA = "0x10A1F38", Offset = "0x10A1F38", VA = "0x10A1F38")]
		set
		{
		}
	}

	[Token(Token = "0x6000518")]
	[Address(RVA = "0x10A95E4", Offset = "0x10A95E4", VA = "0x10A95E4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000519")]
	[Address(RVA = "0x10A96A8", Offset = "0x10A96A8", VA = "0x10A96A8")]
	private void Start()
	{
	}

	[Token(Token = "0x600051A")]
	[Address(RVA = "0x10A96AC", Offset = "0x10A96AC", VA = "0x10A96AC")]
	private void SetupAtlasCoord()
	{
	}

	[Token(Token = "0x600051B")]
	[Address(RVA = "0x10A98F8", Offset = "0x10A98F8", VA = "0x10A98F8")]
	public BlobShadow()
	{
	}
}
[Token(Token = "0x2000060")]
public class BlobShadowAtlas : ScriptableObjectSingleton<BlobShadowAtlas>
{
	[Token(Token = "0x20002F5")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6A7FD4", Offset = "0x6A7FD4")]
	private sealed class <>c__DisplayClass14_0
	{
		[Token(Token = "0x40013FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string tag;

		[Token(Token = "0x6001566")]
		[Address(RVA = "0x10A99A8", Offset = "0x10A99A8", VA = "0x10A99A8")]
		public <>c__DisplayClass14_0()
		{
		}

		[Token(Token = "0x6001567")]
		[Address(RVA = "0x10A9A20", Offset = "0x10A9A20", VA = "0x10A9A20")]
		internal bool <GetTextureCoords>b__0(string x)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x40002C7")]
	public const int atlasResolution = 512;

	[Token(Token = "0x40002C8")]
	public const int cellPixelSize = 128;

	[Token(Token = "0x40002C9")]
	public const int paddingPixelSize = 16;

	[Token(Token = "0x40002CA")]
	public const int blobPixelSize = 96;

	[Token(Token = "0x40002CB")]
	public const int divisions = 4;

	[Token(Token = "0x40002CC")]
	private const int maxBlobs = 16;

	[Token(Token = "0x40002CD")]
	private const float cellSize = 0.25f;

	[Token(Token = "0x40002CE")]
	private const float padding = 1f / 32f;

	[Token(Token = "0x40002CF")]
	private const float blobSize = 0.1875f;

	[Token(Token = "0x40002D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<string> tags;

	[Token(Token = "0x17000132")]
	public Texture2D atlasTexture
	{
		[Token(Token = "0x600051C")]
		[Address(RVA = "0x10A9900", Offset = "0x10A9900", VA = "0x10A9900")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000133")]
	public Material atlasMaterial
	{
		[Token(Token = "0x600051D")]
		[Address(RVA = "0x10A9954", Offset = "0x10A9954", VA = "0x10A9954")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600051E")]
	[Address(RVA = "0x10A978C", Offset = "0x10A978C", VA = "0x10A978C")]
	public Vector4 GetTextureCoords(string tag)
	{
		return default(Vector4);
	}

	[Token(Token = "0x600051F")]
	[Address(RVA = "0x10A99B0", Offset = "0x10A99B0", VA = "0x10A99B0")]
	public BlobShadowAtlas()
	{
	}
}
[Token(Token = "0x2000061")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x6A7324", Offset = "0x6A7324")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x6A7324", Offset = "0x6A7324")]
public class CircleMesh : MonoBehaviour
{
	[Token(Token = "0x40002D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float radius;

	[Token(Token = "0x40002D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int numSegments;

	[Token(Token = "0x40002D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float thickness;

	[Token(Token = "0x6000520")]
	[Address(RVA = "0x11198D8", Offset = "0x11198D8", VA = "0x11198D8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000521")]
	[Address(RVA = "0x11198DC", Offset = "0x11198DC", VA = "0x11198DC")]
	public void Generate()
	{
	}

	[Token(Token = "0x6000522")]
	[Address(RVA = "0x1119D24", Offset = "0x1119D24", VA = "0x1119D24")]
	public CircleMesh()
	{
	}
}
[Token(Token = "0x2000062")]
public class ColourSwatch : ScriptableObject
{
	[Token(Token = "0x40002D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Color[] colours;

	[Token(Token = "0x6000523")]
	[Address(RVA = "0x11262A8", Offset = "0x11262A8", VA = "0x11262A8")]
	public ColourSwatch()
	{
	}
}
[Token(Token = "0x2000063")]
public class CompassEffect : MonoBehaviour
{
	[Token(Token = "0x40002D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform needle;

	[Token(Token = "0x40002D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float moveSpeed;

	[Token(Token = "0x6000524")]
	[Address(RVA = "0x11262B8", Offset = "0x11262B8", VA = "0x11262B8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000525")]
	[Address(RVA = "0x11264BC", Offset = "0x11264BC", VA = "0x11264BC")]
	public CompassEffect()
	{
	}
}
[Token(Token = "0x2000064")]
public class DestroyOnDisable : MonoBehaviour
{
	[Token(Token = "0x6000526")]
	[Address(RVA = "0x103011C", Offset = "0x103011C", VA = "0x103011C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000527")]
	[Address(RVA = "0x1030198", Offset = "0x1030198", VA = "0x1030198")]
	public DestroyOnDisable()
	{
	}
}
[Token(Token = "0x2000065")]
public class DynamicShadowBounds : MonoBehaviour
{
	[Token(Token = "0x40002D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public SimpleShadow shadow;

	[Token(Token = "0x40002D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Bounds bounds;

	[Token(Token = "0x6000528")]
	[Address(RVA = "0x10319F0", Offset = "0x10319F0", VA = "0x10319F0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000529")]
	[Address(RVA = "0x1031AA8", Offset = "0x1031AA8", VA = "0x1031AA8")]
	public DynamicShadowBounds()
	{
	}
}
[Token(Token = "0x2000066")]
public class EmergencyLights : MonoBehaviour
{
	[Token(Token = "0x40002D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Color[] lightColours;

	[Token(Token = "0x40002DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float colourChangeFrequency;

	[Token(Token = "0x40002DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Vector3 lightChangeOffset;

	[Token(Token = "0x40002DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private MeshRenderer meshRenderer;

	[Token(Token = "0x40002DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private MaterialPropertyBlock propertyBlock;

	[Token(Token = "0x40002DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private int currentLightIndex;

	[Token(Token = "0x40002DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private float lightTimer;

	[Token(Token = "0x40002E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private int colorId;

	[Token(Token = "0x40002E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private Vector3 startPosition;

	[Token(Token = "0x600052A")]
	[Address(RVA = "0x10376B0", Offset = "0x10376B0", VA = "0x10376B0")]
	private void Awake()
	{
	}

	[Token(Token = "0x600052B")]
	[Address(RVA = "0x10377C4", Offset = "0x10377C4", VA = "0x10377C4")]
	private void Update()
	{
	}

	[Token(Token = "0x600052C")]
	[Address(RVA = "0x1037990", Offset = "0x1037990", VA = "0x1037990")]
	public EmergencyLights()
	{
	}
}
[Token(Token = "0x2000067")]
public class Fire : MonoBehaviour
{
	[Token(Token = "0x40002E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int pixWidth;

	[Token(Token = "0x40002E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int pixHeight;

	[Token(Token = "0x40002E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int pixDepth;

	[Token(Token = "0x40002E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float xOrg;

	[Token(Token = "0x40002E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float yOrg;

	[Token(Token = "0x40002E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float scale;

	[Token(Token = "0x40002E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float speed;

	[Token(Token = "0x40002E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Texture3D noiseTex;

	[Token(Token = "0x40002EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Color[] pix;

	[Token(Token = "0x40002EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Vector3 fireSample;

	[Token(Token = "0x600052D")]
	[Address(RVA = "0x1037EA0", Offset = "0x1037EA0", VA = "0x1037EA0")]
	private void Start()
	{
	}

	[Token(Token = "0x600052E")]
	[Address(RVA = "0x10381D8", Offset = "0x10381D8", VA = "0x10381D8")]
	private void Update()
	{
	}

	[Token(Token = "0x600052F")]
	[Address(RVA = "0x1037FB4", Offset = "0x1037FB4", VA = "0x1037FB4")]
	private void CalcNoise()
	{
	}

	[Token(Token = "0x6000530")]
	[Address(RVA = "0x10383A4", Offset = "0x10383A4", VA = "0x10383A4")]
	public Fire()
	{
	}
}
[Token(Token = "0x2000068")]
public class FireEffect : MonoBehaviour
{
	[Token(Token = "0x20002F6")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6A7FE4", Offset = "0x6A7FE4")]
	private sealed class <IgniteRoutine>d__7 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40013FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40013FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40013FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public FireEffect <>4__this;

		[Token(Token = "0x40013FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Vector3 <endingScale>5__2;

		[Token(Token = "0x4001400")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float <time>5__3;

		[Token(Token = "0x1700038C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600156B")]
			[Address(RVA = "0x1038940", Offset = "0x1038940", VA = "0x1038940", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700038D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600156D")]
			[Address(RVA = "0x10389A8", Offset = "0x10389A8", VA = "0x10389A8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001568")]
		[Address(RVA = "0x1038514", Offset = "0x1038514", VA = "0x1038514")]
		[DebuggerHidden]
		public <IgniteRoutine>d__7(int <>1__state)
		{
		}

		[Token(Token = "0x6001569")]
		[Address(RVA = "0x10387C4", Offset = "0x10387C4", VA = "0x10387C4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600156A")]
		[Address(RVA = "0x10387C8", Offset = "0x10387C8", VA = "0x10387C8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600156C")]
		[Address(RVA = "0x1038948", Offset = "0x1038948", VA = "0x1038948", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20002F7")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6A7FF4", Offset = "0x6A7FF4")]
	private sealed class <ExtinguishRoutine>d__8 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001401")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001402")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001403")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public FireEffect <>4__this;

		[Token(Token = "0x4001404")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Vector3 <startingScale>5__2;

		[Token(Token = "0x4001405")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float <time>5__3;

		[Token(Token = "0x1700038E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001571")]
			[Address(RVA = "0x1038754", Offset = "0x1038754", VA = "0x1038754", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700038F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001573")]
			[Address(RVA = "0x10387BC", Offset = "0x10387BC", VA = "0x10387BC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600156E")]
		[Address(RVA = "0x1038540", Offset = "0x1038540", VA = "0x1038540")]
		[DebuggerHidden]
		public <ExtinguishRoutine>d__8(int <>1__state)
		{
		}

		[Token(Token = "0x600156F")]
		[Address(RVA = "0x103857C", Offset = "0x103857C", VA = "0x103857C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001570")]
		[Address(RVA = "0x1038580", Offset = "0x1038580", VA = "0x1038580", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001572")]
		[Address(RVA = "0x103875C", Offset = "0x103875C", VA = "0x103875C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40002EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float igniteDuration;

	[Token(Token = "0x40002ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float extinguishDuration;

	[Token(Token = "0x40002EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool isExtinguishing;

	[Token(Token = "0x40002EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private City city;

	[Token(Token = "0x6000531")]
	[Address(RVA = "0x10383C8", Offset = "0x10383C8", VA = "0x10383C8")]
	public void Init(City inCity)
	{
	}

	[Token(Token = "0x6000532")]
	[Address(RVA = "0x10383D0", Offset = "0x10383D0", VA = "0x10383D0")]
	public void Extinguish()
	{
	}

	[Token(Token = "0x6000533")]
	[Address(RVA = "0x1038478", Offset = "0x1038478", VA = "0x1038478")]
	public void Ignite()
	{
	}

	[Token(Token = "0x6000534")]
	[Address(RVA = "0x10384A4", Offset = "0x10384A4", VA = "0x10384A4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6AEFEC", Offset = "0x6AEFEC")]
	private IEnumerator IgniteRoutine()
	{
		return null;
	}

	[Token(Token = "0x6000535")]
	[Address(RVA = "0x1038408", Offset = "0x1038408", VA = "0x1038408")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6AF050", Offset = "0x6AF050")]
	private IEnumerator ExtinguishRoutine()
	{
		return null;
	}

	[Token(Token = "0x6000536")]
	[Address(RVA = "0x103856C", Offset = "0x103856C", VA = "0x103856C")]
	public FireEffect()
	{
	}
}
[Token(Token = "0x2000069")]
public class FlyingVolcanoChunk : MonoBehaviour
{
	[Token(Token = "0x40002F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float lateralSpeed;

	[Token(Token = "0x40002F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float gravity;

	[Token(Token = "0x40002F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject impactEffectPrefab;

	[Token(Token = "0x40002F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Vector3 startPosition;

	[Token(Token = "0x40002F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private Vector3 targetPosition;

	[Token(Token = "0x40002F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float flightTime;

	[Token(Token = "0x40002F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private float verticalLaunchVelocity;

	[Token(Token = "0x40002F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float time;

	[Token(Token = "0x40002F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private City city;

	[Token(Token = "0x40002F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public AudioClip[] launchSounds;

	[Token(Token = "0x40002FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public AudioClip[] hitGroundSounds;

	[Token(Token = "0x40002FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public AudioClip[] hitBuildingSounds;

	[Token(Token = "0x6000537")]
	[Address(RVA = "0x10389B0", Offset = "0x10389B0", VA = "0x10389B0")]
	public void PlotTrajectory(City inCity, Vector3 start, Vector3 end)
	{
	}

	[Token(Token = "0x6000538")]
	[Address(RVA = "0x1038B04", Offset = "0x1038B04", VA = "0x1038B04")]
	private void Update()
	{
	}

	[Token(Token = "0x6000539")]
	[Address(RVA = "0x1038E60", Offset = "0x1038E60", VA = "0x1038E60")]
	public FlyingVolcanoChunk()
	{
	}
}
[Token(Token = "0x200006A")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x6A73B0", Offset = "0x6A73B0")]
public class HeightCapture : SingletonBehaviour<HeightCapture>
{
	[Token(Token = "0x40002FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Shader captureShader;

	[Token(Token = "0x40002FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Camera captureCamera;

	[Token(Token = "0x40002FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool isDirty;

	[Token(Token = "0x600053A")]
	[Address(RVA = "0x10682F8", Offset = "0x10682F8", VA = "0x10682F8", Slot = "4")]
	public override void Awake()
	{
	}

	[Token(Token = "0x600053B")]
	[Address(RVA = "0x10683A0", Offset = "0x10683A0", VA = "0x10683A0")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x600053C")]
	[Address(RVA = "0x105E46C", Offset = "0x105E46C", VA = "0x105E46C")]
	public void MarkDirty()
	{
	}

	[Token(Token = "0x600053D")]
	[Address(RVA = "0x10683DC", Offset = "0x10683DC", VA = "0x10683DC")]
	public HeightCapture()
	{
	}
}
[Token(Token = "0x200006B")]
public class ImpostorGenerator : CityModule, IDebugPanelProvider
{
	[Token(Token = "0x40002FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int meshResolution;

	[Token(Token = "0x4000300")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int textureResolution;

	[Token(Token = "0x4000301")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Shader heightCaptureShader;

	[Token(Token = "0x4000302")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Camera heightCaptureCamera;

	[Token(Token = "0x4000303")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Camera captureCamera;

	[Token(Token = "0x4000304")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject imposterPrefab;

	[Token(Token = "0x4000305")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject sideImposterPrefab;

	[Token(Token = "0x4000306")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6A8C3C", Offset = "0x6A8C3C")]
	private GameObject <targetImpostor>k__BackingField;

	[Token(Token = "0x4000307")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6A8C4C", Offset = "0x6A8C4C")]
	private GameObject <sideViewImpostor>k__BackingField;

	[Token(Token = "0x4000308")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public RenderTexture heightTexture;

	[Token(Token = "0x4000309")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public RenderTexture albedoTexture;

	[Token(Token = "0x400030A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Mesh mesh;

	[Token(Token = "0x400030B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Vector3[] vertices;

	[Token(Token = "0x400030C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Vector2[] uv;

	[Token(Token = "0x400030D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private Vector3[] normals;

	[Token(Token = "0x400030E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public Camera sideViewCaptureCamera;

	[Token(Token = "0x400030F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public int sideViewResolutionWidth;

	[Token(Token = "0x4000310")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	public int sideViewResolutionHeight;

	[Token(Token = "0x4000311")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public float sideViewMinHeight;

	[Token(Token = "0x4000312")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	public float sideViewMaxHeight;

	[Token(Token = "0x4000313")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private RenderTexture sideViewTexture;

	[Token(Token = "0x17000134")]
	public GameObject targetImpostor
	{
		[Token(Token = "0x600053E")]
		[Address(RVA = "0x106E2F8", Offset = "0x106E2F8", VA = "0x106E2F8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6AF0B4", Offset = "0x6AF0B4")]
		get
		{
			return null;
		}
		[Token(Token = "0x600053F")]
		[Address(RVA = "0x106E300", Offset = "0x106E300", VA = "0x106E300")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6AF0C4", Offset = "0x6AF0C4")]
		private set
		{
		}
	}

	[Token(Token = "0x17000135")]
	public GameObject sideViewImpostor
	{
		[Token(Token = "0x6000540")]
		[Address(RVA = "0x106E308", Offset = "0x106E308", VA = "0x106E308")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6AF0D4", Offset = "0x6AF0D4")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000541")]
		[Address(RVA = "0x106E310", Offset = "0x106E310", VA = "0x106E310")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6AF0E4", Offset = "0x6AF0E4")]
		private set
		{
		}
	}

	[Token(Token = "0x6000542")]
	[Address(RVA = "0x106E318", Offset = "0x106E318", VA = "0x106E318")]
	public Vector2 GenerateProjectedCoord(Vector3 localPosition)
	{
		return default(Vector2);
	}

	[Token(Token = "0x6000543")]
	[Address(RVA = "0x106E568", Offset = "0x106E568", VA = "0x106E568", Slot = "8")]
	public override void Init()
	{
	}

	[Token(Token = "0x6000544")]
	[Address(RVA = "0x106F024", Offset = "0x106F024", VA = "0x106F024")]
	public void CaptureSideView()
	{
	}

	[Token(Token = "0x6000545")]
	[Address(RVA = "0x106F040", Offset = "0x106F040", VA = "0x106F040")]
	public void Capture()
	{
	}

	[Token(Token = "0x6000546")]
	[Address(RVA = "0x106F488", Offset = "0x106F488", VA = "0x106F488")]
	public void ShowImpostor()
	{
	}

	[Token(Token = "0x6000547")]
	[Address(RVA = "0x106F4E4", Offset = "0x106F4E4", VA = "0x106F4E4")]
	public void HideImpostor()
	{
	}

	[Token(Token = "0x6000548")]
	[Address(RVA = "0x106F53C", Offset = "0x106F53C", VA = "0x106F53C", Slot = "11")]
	public void OnDebugPanel()
	{
	}

	[Token(Token = "0x6000549")]
	[Address(RVA = "0x106F790", Offset = "0x106F790", VA = "0x106F790")]
	public ImpostorGenerator()
	{
	}
}
[Token(Token = "0x200006C")]
public class MeshOutliner : MonoBehaviour
{
	[Token(Token = "0x600054A")]
	[Address(RVA = "0xFF9DC4", Offset = "0xFF9DC4", VA = "0xFF9DC4")]
	private void Start()
	{
	}

	[Token(Token = "0x600054B")]
	[Address(RVA = "0xFF9DC8", Offset = "0xFF9DC8", VA = "0xFF9DC8")]
	private void GenerateMesh()
	{
	}

	[Token(Token = "0x600054C")]
	[Address(RVA = "0xFFA1EC", Offset = "0xFFA1EC", VA = "0xFFA1EC")]
	public static void GenerateOutlineCoordinates(GameObject obj)
	{
	}

	[Token(Token = "0x600054D")]
	[Address(RVA = "0xFF9EB8", Offset = "0xFF9EB8", VA = "0xFF9EB8")]
	public static void GenerateOutlineCoordinates(Mesh mesh)
	{
	}

	[Token(Token = "0x600054E")]
	[Address(RVA = "0xFFA29C", Offset = "0xFFA29C", VA = "0xFFA29C")]
	public MeshOutliner()
	{
	}
}
[Token(Token = "0x200006D")]
public class ParticleSystemTimeScale : MonoBehaviour
{
	[Token(Token = "0x4000314")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private ParticleSystem[] particleSystems;

	[Token(Token = "0x600054F")]
	[Address(RVA = "0xFD011C", Offset = "0xFD011C", VA = "0xFD011C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000550")]
	[Address(RVA = "0xFD019C", Offset = "0xFD019C", VA = "0xFD019C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000551")]
	[Address(RVA = "0xFD02E8", Offset = "0xFD02E8", VA = "0xFD02E8")]
	public ParticleSystemTimeScale()
	{
	}
}
[Token(Token = "0x200006E")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x6A7414", Offset = "0x6A7414")]
public class ReflectionProbeExtension : MonoBehaviour
{
	[Token(Token = "0x20002F8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6A8004", Offset = "0x6A8004")]
	private sealed class <CaptureDeferredRoutine>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001406")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001407")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001408")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int frames;

		[Token(Token = "0x4001409")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public ReflectionProbeExtension <>4__this;

		[Token(Token = "0x17000390")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001577")]
			[Address(RVA = "0x1105530", Offset = "0x1105530", VA = "0x1105530", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000391")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001579")]
			[Address(RVA = "0x1105598", Offset = "0x1105598", VA = "0x1105598", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001574")]
		[Address(RVA = "0x11053F4", Offset = "0x11053F4", VA = "0x11053F4")]
		[DebuggerHidden]
		public <CaptureDeferredRoutine>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x6001575")]
		[Address(RVA = "0x11054C8", Offset = "0x11054C8", VA = "0x11054C8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001576")]
		[Address(RVA = "0x11054CC", Offset = "0x11054CC", VA = "0x11054CC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001578")]
		[Address(RVA = "0x1105538", Offset = "0x1105538", VA = "0x1105538", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000315")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private ReflectionProbe probe;

	[Token(Token = "0x4000316")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int id;

	[Token(Token = "0x4000317")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private int renderId;

	[Token(Token = "0x6000552")]
	[Address(RVA = "0x1105090", Offset = "0x1105090", VA = "0x1105090")]
	private void Start()
	{
	}

	[Token(Token = "0x6000553")]
	[Address(RVA = "0x1105300", Offset = "0x1105300", VA = "0x1105300")]
	public void Capture()
	{
	}

	[Token(Token = "0x6000554")]
	[Address(RVA = "0x1105348", Offset = "0x1105348", VA = "0x1105348")]
	public void CaptureDeferred(int frames)
	{
	}

	[Token(Token = "0x6000555")]
	[Address(RVA = "0x1105374", Offset = "0x1105374", VA = "0x1105374")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6AF0F4", Offset = "0x6AF0F4")]
	private IEnumerator CaptureDeferredRoutine(int frames)
	{
		return null;
	}

	[Token(Token = "0x6000556")]
	[Address(RVA = "0x1105198", Offset = "0x1105198", VA = "0x1105198")]
	private void SetShaderVars()
	{
	}

	[Token(Token = "0x6000557")]
	[Address(RVA = "0x1105420", Offset = "0x1105420", VA = "0x1105420")]
	private void Update()
	{
	}

	[Token(Token = "0x6000558")]
	[Address(RVA = "0x11054C0", Offset = "0x11054C0", VA = "0x11054C0")]
	public ReflectionProbeExtension()
	{
	}
}
[Token(Token = "0x200006F")]
[ExecuteInEditMode]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x6A7478", Offset = "0x6A7478")]
public class SimpleShadow : MonoBehaviour
{
	[Token(Token = "0x4000318")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public LayerMask shadowCastingLayers;

	[Token(Token = "0x4000319")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Camera shadowCaptureCamera;

	[Token(Token = "0x400031A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public RenderTexture shadowTexture;

	[Token(Token = "0x400031B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public RenderTexture blurredShadowTexture;

	[Token(Token = "0x400031C")]
	private const float nearPlane = 0.05f;

	[Token(Token = "0x400031D")]
	private const float farPlane = 100f;

	[Token(Token = "0x400031E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public int shadowTextureSize;

	[Token(Token = "0x400031F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private bool needsRefresh;

	[Token(Token = "0x4000320")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3D")]
	public bool enableBlur;

	[Token(Token = "0x4000321")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3E")]
	public bool executeInEditMode;

	[Token(Token = "0x4000322")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Shader blurShader;

	[Token(Token = "0x4000323")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Shader shadowPass;

	[Token(Token = "0x4000324")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Material blurMaterial;

	[Token(Token = "0x4000325")]
	private const bool autoUpdate = false;

	[Token(Token = "0x4000326")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Rect captureRect;

	[Token(Token = "0x4000327")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private bool isCaptureDirty;

	[Token(Token = "0x4000328")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private Rect blurRect;

	[Token(Token = "0x4000329")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private bool isBlurDirty;

	[Token(Token = "0x6000559")]
	[Address(RVA = "0xFE33F0", Offset = "0xFE33F0", VA = "0xFE33F0")]
	private void Awake()
	{
	}

	[Token(Token = "0x600055A")]
	[Address(RVA = "0xFE3818", Offset = "0xFE3818", VA = "0xFE3818")]
	public void SetupPosition(Bounds coverageBounds, Transform lightTransform)
	{
	}

	[Token(Token = "0x600055B")]
	[Address(RVA = "0xFE3C38", Offset = "0xFE3C38", VA = "0xFE3C38")]
	public void CaptureBounds(Bounds bounds)
	{
	}

	[Token(Token = "0x600055C")]
	[Address(RVA = "0xFE34A8", Offset = "0xFE34A8", VA = "0xFE34A8")]
	private void SetupShadows()
	{
	}

	[Token(Token = "0x600055D")]
	[Address(RVA = "0xFE456C", Offset = "0xFE456C", VA = "0xFE456C")]
	private void UpdateShadowCamera()
	{
	}

	[Token(Token = "0x600055E")]
	[Address(RVA = "0xFE4630", Offset = "0xFE4630", VA = "0xFE4630")]
	private void BlurShadow()
	{
	}

	[Token(Token = "0x600055F")]
	[Address(RVA = "0xFE4848", Offset = "0xFE4848", VA = "0xFE4848")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000560")]
	[Address(RVA = "0xFE4854", Offset = "0xFE4854", VA = "0xFE4854")]
	private bool SetScissorRect(Camera cam, Rect r)
	{
		return default(bool);
	}

	[Token(Token = "0x6000561")]
	[Address(RVA = "0xFE4DD8", Offset = "0xFE4DD8", VA = "0xFE4DD8")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000562")]
	[Address(RVA = "0xFE50DC", Offset = "0xFE50DC", VA = "0xFE50DC")]
	public Vector2 GenerateShadowCoord(Vector3 worldPosition)
	{
		return default(Vector2);
	}

	[Token(Token = "0x6000563")]
	[Address(RVA = "0xFE532C", Offset = "0xFE532C", VA = "0xFE532C")]
	public void Refresh()
	{
	}

	[Token(Token = "0x6000564")]
	[Address(RVA = "0xFE5338", Offset = "0xFE5338", VA = "0xFE5338")]
	public void RefreshImmediate()
	{
	}

	[Token(Token = "0x6000565")]
	[Address(RVA = "0xFE5508", Offset = "0xFE5508", VA = "0xFE5508")]
	public SimpleShadow()
	{
	}
}
[Token(Token = "0x2000070")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x6A74EC", Offset = "0x6A74EC")]
public class WaterSpray : MonoBehaviour
{
	[Token(Token = "0x400032A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform startPosition;

	[Token(Token = "0x400032B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform endPositionTransform;

	[Token(Token = "0x400032C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Vector3 endPosition;

	[Token(Token = "0x400032D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private LineRenderer lineRenderer;

	[Token(Token = "0x400032E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Material sprayMaterial;

	[Token(Token = "0x400032F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public int numPositions;

	[Token(Token = "0x4000330")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float arcRatio;

	[Token(Token = "0x4000331")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float endOffset;

	[Token(Token = "0x4000332")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public float endOffsetRotationSpeed;

	[Token(Token = "0x4000333")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float endOffsetRotation;

	[Token(Token = "0x4000334")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public bool isSprayOn;

	[Token(Token = "0x4000335")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private float startAlpha;

	[Token(Token = "0x4000336")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private float endAlpha;

	[Token(Token = "0x4000337")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private int mainTextureId;

	[Token(Token = "0x4000338")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private Vector2 textureOffset;

	[Token(Token = "0x6000566")]
	[Address(RVA = "0x1018A8C", Offset = "0x1018A8C", VA = "0x1018A8C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000567")]
	[Address(RVA = "0x1018B24", Offset = "0x1018B24", VA = "0x1018B24")]
	private void Update()
	{
	}

	[Token(Token = "0x6000568")]
	[Address(RVA = "0x1018FDC", Offset = "0x1018FDC", VA = "0x1018FDC")]
	public WaterSpray()
	{
	}
}
[Token(Token = "0x2000071")]
[ExecuteInEditMode]
public class WaterTankEffect : MonoBehaviour
{
	[Token(Token = "0x4000339")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Renderer targetRenderer;

	[Token(Token = "0x400033A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Material targetMaterial;

	[Token(Token = "0x400033B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private int floorHeightId;

	[Token(Token = "0x6000569")]
	[Address(RVA = "0x1019010", Offset = "0x1019010", VA = "0x1019010")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x600056A")]
	[Address(RVA = "0x101926C", Offset = "0x101926C", VA = "0x101926C")]
	public WaterTankEffect()
	{
	}
}
[Token(Token = "0x2000072")]
public class AudioBank : ScriptableObject
{
	[Serializable]
	[Token(Token = "0x20002F9")]
	public class Sound
	{
		[Token(Token = "0x400140A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public AudioClip clip;

		[Token(Token = "0x400140B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float chance;

		[Token(Token = "0x400140C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float minPitch;

		[Token(Token = "0x400140D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float maxPitch;

		[Token(Token = "0x400140E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float minVolume;

		[Token(Token = "0x400140F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float maxVolume;

		[Token(Token = "0x600157A")]
		[Address(RVA = "0x10A3BF4", Offset = "0x10A3BF4", VA = "0x10A3BF4")]
		public Sound()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x20002FA")]
	public class Group
	{
		[Token(Token = "0x4001410")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string name;

		[Token(Token = "0x4001411")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Sound[] sounds;

		[Token(Token = "0x4001412")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[HideInInspector]
		public float totalChance;

		[Token(Token = "0x4001413")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[HideInInspector]
		public int lastIndexPlayed;

		[Token(Token = "0x600157B")]
		[Address(RVA = "0x10A3A78", Offset = "0x10A3A78", VA = "0x10A3A78")]
		public Sound PickRandomSound()
		{
			return null;
		}

		[Token(Token = "0x600157C")]
		[Address(RVA = "0x10A3B7C", Offset = "0x10A3B7C", VA = "0x10A3B7C")]
		public Group()
		{
		}
	}

	[Token(Token = "0x400033C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Group[] groups;

	[Token(Token = "0x400033D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Dictionary<string, Group> groupMapping;

	[Token(Token = "0x600056B")]
	[Address(RVA = "0x10A36A0", Offset = "0x10A36A0", VA = "0x10A36A0")]
	private void Initialize()
	{
	}

	[Token(Token = "0x600056C")]
	[Address(RVA = "0x10A3808", Offset = "0x10A3808", VA = "0x10A3808")]
	public void Play(AudioSource source, string soundName)
	{
	}

	[Token(Token = "0x600056D")]
	[Address(RVA = "0x10A3B1C", Offset = "0x10A3B1C", VA = "0x10A3B1C")]
	public AudioBank()
	{
	}
}
[Token(Token = "0x2000073")]
public class AutoSwapFont : MonoBehaviour
{
	[Token(Token = "0x600056E")]
	[Address(RVA = "0x10A3D6C", Offset = "0x10A3D6C", VA = "0x10A3D6C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600056F")]
	[Address(RVA = "0x10A3D70", Offset = "0x10A3D70", VA = "0x10A3D70")]
	private void Apply()
	{
	}

	[Token(Token = "0x6000570")]
	[Address(RVA = "0x10A3F30", Offset = "0x10A3F30", VA = "0x10A3F30")]
	public AutoSwapFont()
	{
	}
}
[Token(Token = "0x2000074")]
public class AutoTranslate : MonoBehaviour
{
	[Token(Token = "0x20002FB")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6A8014", Offset = "0x6A8014")]
	private sealed class <Start>d__1 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001414")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001415")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001416")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AutoTranslate <>4__this;

		[Token(Token = "0x17000392")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001580")]
			[Address(RVA = "0x10A4390", Offset = "0x10A4390", VA = "0x10A4390", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000393")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001582")]
			[Address(RVA = "0x10A43F8", Offset = "0x10A43F8", VA = "0x10A43F8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600157D")]
		[Address(RVA = "0x10A3FA8", Offset = "0x10A3FA8", VA = "0x10A3FA8")]
		[DebuggerHidden]
		public <Start>d__1(int <>1__state)
		{
		}

		[Token(Token = "0x600157E")]
		[Address(RVA = "0x10A42D8", Offset = "0x10A42D8", VA = "0x10A42D8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600157F")]
		[Address(RVA = "0x10A42DC", Offset = "0x10A42DC", VA = "0x10A42DC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001581")]
		[Address(RVA = "0x10A4398", Offset = "0x10A4398", VA = "0x10A4398", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400033E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string languageKey;

	[Token(Token = "0x6000571")]
	[Address(RVA = "0x10A3F38", Offset = "0x10A3F38", VA = "0x10A3F38")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6AF158", Offset = "0x6AF158")]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x6000572")]
	[Address(RVA = "0x10A3FD4", Offset = "0x10A3FD4", VA = "0x10A3FD4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000573")]
	[Address(RVA = "0x10A3FD8", Offset = "0x10A3FD8", VA = "0x10A3FD8")]
	private void Apply()
	{
	}

	[Token(Token = "0x6000574")]
	[Address(RVA = "0x10A4280", Offset = "0x10A4280", VA = "0x10A4280")]
	public AutoTranslate()
	{
	}
}
[Token(Token = "0x2000075")]
public class BuildConfig : ScriptableObject
{
	[Serializable]
	[Token(Token = "0x20002FC")]
	public class Item
	{
		[Token(Token = "0x4001417")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string key;

		[Token(Token = "0x4001418")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string val;

		[Token(Token = "0x6001583")]
		[Address(RVA = "0x10AEC98", Offset = "0x10AEC98", VA = "0x10AEC98")]
		public Item()
		{
		}
	}

	[Token(Token = "0x400033F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private string _name;

	[Token(Token = "0x4000340")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private List<Item> _items;

	[Token(Token = "0x17000136")]
	public new string name
	{
		[Token(Token = "0x6000575")]
		[Address(RVA = "0x10AEAC8", Offset = "0x10AEAC8", VA = "0x10AEAC8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000576")]
	[Address(RVA = "0x10AEAD0", Offset = "0x10AEAD0", VA = "0x10AEAD0")]
	private Item GetItem(string key)
	{
		return null;
	}

	[Token(Token = "0x6000577")]
	[Address(RVA = "0x10AEBF0", Offset = "0x10AEBF0", VA = "0x10AEBF0")]
	private Item GetOrCreateItem(string key)
	{
		return null;
	}

	[Token(Token = "0x6000578")]
	[Address(RVA = "0x10AECA0", Offset = "0x10AECA0", VA = "0x10AECA0")]
	public bool HasKey(string key)
	{
		return default(bool);
	}

	[Token(Token = "0x6000579")]
	[Address(RVA = "0x10AECBC", Offset = "0x10AECBC", VA = "0x10AECBC")]
	public void DeleteKey(string key)
	{
	}

	[Token(Token = "0x600057A")]
	[Address(RVA = "0x10AED44", Offset = "0x10AED44", VA = "0x10AED44")]
	public bool GetBool(string key, bool defaultValue = false)
	{
		return default(bool);
	}

	[Token(Token = "0x600057B")]
	[Address(RVA = "0x10AEDF4", Offset = "0x10AEDF4", VA = "0x10AEDF4")]
	public void SetBool(string key, bool val)
	{
	}

	[Token(Token = "0x600057C")]
	[Address(RVA = "0x10AEE34", Offset = "0x10AEE34", VA = "0x10AEE34")]
	public int GetInt(string key, int defaultValue = 0)
	{
		return default(int);
	}

	[Token(Token = "0x600057D")]
	[Address(RVA = "0x10AEE74", Offset = "0x10AEE74", VA = "0x10AEE74")]
	public void SetInt(string key, int val)
	{
	}

	[Token(Token = "0x600057E")]
	[Address(RVA = "0x10AEEB0", Offset = "0x10AEEB0", VA = "0x10AEEB0")]
	public float GetFloat(string key, float defaultValue = 0f)
	{
		return default(float);
	}

	[Token(Token = "0x600057F")]
	[Address(RVA = "0x10AEEF0", Offset = "0x10AEEF0", VA = "0x10AEEF0")]
	public void SetFloat(string key, float val)
	{
	}

	[Token(Token = "0x6000580")]
	[Address(RVA = "0x10AEF2C", Offset = "0x10AEF2C", VA = "0x10AEF2C")]
	public string GetString(string key, string defaultValue = "")
	{
		return null;
	}

	[Token(Token = "0x6000581")]
	[Address(RVA = "0x10AEF58", Offset = "0x10AEF58", VA = "0x10AEF58")]
	public void SetString(string key, string val)
	{
	}

	[Token(Token = "0x6000582")]
	[Address(RVA = "0x10AEF84", Offset = "0x10AEF84", VA = "0x10AEF84")]
	public BuildConfig()
	{
	}
}
[Token(Token = "0x2000076")]
public class BuildPrefs : ScriptableObjectSingleton<BuildPrefs>
{
	[Token(Token = "0x4000341")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private BuildConfig _currentConfig;

	[Token(Token = "0x17000137")]
	public static string configName
	{
		[Token(Token = "0x6000583")]
		[Address(RVA = "0x10AF004", Offset = "0x10AF004", VA = "0x10AF004")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000584")]
	[Address(RVA = "0x10AF150", Offset = "0x10AF150", VA = "0x10AF150")]
	public static bool HasKey(string key)
	{
		return default(bool);
	}

	[Token(Token = "0x6000585")]
	[Address(RVA = "0x10AF2AC", Offset = "0x10AF2AC", VA = "0x10AF2AC")]
	public static bool GetBool(string key, bool defaultValue = false)
	{
		return default(bool);
	}

	[Token(Token = "0x6000586")]
	[Address(RVA = "0x10AF414", Offset = "0x10AF414", VA = "0x10AF414")]
	public static int GetInt(string key, int defaultValue = 0)
	{
		return default(int);
	}

	[Token(Token = "0x6000587")]
	[Address(RVA = "0x10AF57C", Offset = "0x10AF57C", VA = "0x10AF57C")]
	public static float GetFloat(string key, float defaultValue = 0f)
	{
		return default(float);
	}

	[Token(Token = "0x6000588")]
	[Address(RVA = "0x10AF6F0", Offset = "0x10AF6F0", VA = "0x10AF6F0")]
	public static string GetString(string key, string defaultValue = "")
	{
		return null;
	}

	[Token(Token = "0x6000589")]
	[Address(RVA = "0x10AF858", Offset = "0x10AF858", VA = "0x10AF858")]
	public BuildPrefs()
	{
	}
}
[Token(Token = "0x2000077")]
public static class CoroutineUtils
{
	[Token(Token = "0x20002FD")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6A8024", Offset = "0x6A8024")]
	private sealed class <DoNextFrame>d__0 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001419")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400141A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400141B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Action action;

		[Token(Token = "0x17000394")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001587")]
			[Address(RVA = "0x102A440", Offset = "0x102A440", VA = "0x102A440", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000395")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001589")]
			[Address(RVA = "0x102A4A8", Offset = "0x102A4A8", VA = "0x102A4A8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001584")]
		[Address(RVA = "0x102A21C", Offset = "0x102A21C", VA = "0x102A21C")]
		[DebuggerHidden]
		public <DoNextFrame>d__0(int <>1__state)
		{
		}

		[Token(Token = "0x6001585")]
		[Address(RVA = "0x102A3E4", Offset = "0x102A3E4", VA = "0x102A3E4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001586")]
		[Address(RVA = "0x102A3E8", Offset = "0x102A3E8", VA = "0x102A3E8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001588")]
		[Address(RVA = "0x102A448", Offset = "0x102A448", VA = "0x102A448", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20002FE")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6A8034", Offset = "0x6A8034")]
	private sealed class <DoAfterFrames>d__1 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400141C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400141D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400141E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int numFrames;

		[Token(Token = "0x400141F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Action action;

		[Token(Token = "0x4001420")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int <n>5__2;

		[Token(Token = "0x17000396")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600158D")]
			[Address(RVA = "0x102A374", Offset = "0x102A374", VA = "0x102A374", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000397")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600158F")]
			[Address(RVA = "0x102A3DC", Offset = "0x102A3DC", VA = "0x102A3DC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600158A")]
		[Address(RVA = "0x102A2C8", Offset = "0x102A2C8", VA = "0x102A2C8")]
		[DebuggerHidden]
		public <DoAfterFrames>d__1(int <>1__state)
		{
		}

		[Token(Token = "0x600158B")]
		[Address(RVA = "0x102A2F4", Offset = "0x102A2F4", VA = "0x102A2F4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600158C")]
		[Address(RVA = "0x102A2F8", Offset = "0x102A2F8", VA = "0x102A2F8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600158E")]
		[Address(RVA = "0x102A37C", Offset = "0x102A37C", VA = "0x102A37C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x600058A")]
	[Address(RVA = "0x102A1AC", Offset = "0x102A1AC", VA = "0x102A1AC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6AF1BC", Offset = "0x6AF1BC")]
	public static IEnumerator DoNextFrame(Action action)
	{
		return null;
	}

	[Token(Token = "0x600058B")]
	[Address(RVA = "0x102A248", Offset = "0x102A248", VA = "0x102A248")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6AF220", Offset = "0x6AF220")]
	public static IEnumerator DoAfterFrames(int numFrames, Action action)
	{
		return null;
	}
}
[Token(Token = "0x2000078")]
public interface IDebugPanelProvider
{
	[Token(Token = "0x600058C")]
	void OnDebugPanel();
}
[Token(Token = "0x2000079")]
public class DebugPanel : MonoBehaviour
{
	[Token(Token = "0x4000342")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private List<IDebugPanelProvider> panels;

	[Token(Token = "0x4000343")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Dictionary<string, bool> panelExpandedState;

	[Token(Token = "0x4000344")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool panelExpanded;

	[Token(Token = "0x4000345")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private Vector2 scrollPosition;

	[Token(Token = "0x600058D")]
	[Address(RVA = "0x102C304", Offset = "0x102C304", VA = "0x102C304")]
	public static string SecondsToString(float seconds)
	{
		return null;
	}

	[Token(Token = "0x600058E")]
	[Address(RVA = "0x102C4A0", Offset = "0x102C4A0", VA = "0x102C4A0")]
	public DebugPanel()
	{
	}
}
[Token(Token = "0x200007A")]
public class DontDestroyOnLoad : MonoBehaviour
{
	[Token(Token = "0x4000346")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool dontDestroyOnLoad;

	[Token(Token = "0x4000347")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool unique;

	[Token(Token = "0x600058F")]
	[Address(RVA = "0x1031800", Offset = "0x1031800", VA = "0x1031800")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000590")]
	[Address(RVA = "0x10319E0", Offset = "0x10319E0", VA = "0x10319E0")]
	public DontDestroyOnLoad()
	{
	}
}
[Token(Token = "0x200007B")]
public static class EventUtils
{
	[Token(Token = "0x6000591")]
	[Address(RVA = "0x10379A8", Offset = "0x10379A8", VA = "0x10379A8")]
	public static void Broadcast(string eventName)
	{
	}

	[Token(Token = "0x6000592")]
	[Address(RVA = "0x1037AD4", Offset = "0x1037AD4", VA = "0x1037AD4")]
	public static void Broadcast(string eventName, object parameter)
	{
	}
}
[Token(Token = "0x200007C")]
public class KeepAnimatorControllerStateOnDisable : MonoBehaviour
{
	[Token(Token = "0x6000593")]
	[Address(RVA = "0x108C37C", Offset = "0x108C37C", VA = "0x108C37C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000594")]
	[Address(RVA = "0x108C42C", Offset = "0x108C42C", VA = "0x108C42C")]
	public KeepAnimatorControllerStateOnDisable()
	{
	}
}
[Serializable]
[Token(Token = "0x200007D")]
public class FontGroupMapping
{
	[Token(Token = "0x4000348")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string languageCode;

	[Token(Token = "0x4000349")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Font targetFont;

	[Token(Token = "0x400034A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Font replacementFont;

	[Token(Token = "0x6000595")]
	[Address(RVA = "0x1038E74", Offset = "0x1038E74", VA = "0x1038E74")]
	public FontGroupMapping()
	{
	}
}
[Token(Token = "0x200007E")]
public class LanguageDatabase : ScriptableObjectSingleton<LanguageDatabase>
{
	[Serializable]
	[Token(Token = "0x20002FF")]
	public class KeyPair
	{
		[Token(Token = "0x4001421")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string key;

		[Token(Token = "0x4001422")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string value;

		[Token(Token = "0x6001590")]
		[Address(RVA = "0x1090524", Offset = "0x1090524", VA = "0x1090524")]
		public KeyPair()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x2000300")]
	public class Language
	{
		[Token(Token = "0x4001423")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string languageCode;

		[Token(Token = "0x4001424")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public KeyPair[] keyPairs;

		[Token(Token = "0x6001591")]
		[Address(RVA = "0x109057C", Offset = "0x109057C", VA = "0x109057C")]
		public Language()
		{
		}
	}

	[Token(Token = "0x400034B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Language[] languages;

	[Token(Token = "0x400034C")]
	public const string englishLanguageCode = "en-US";

	[Token(Token = "0x400034D")]
	public const string japaneseLanguageCode = "ja-JP";

	[Token(Token = "0x400034E")]
	public const string koreanLanguageCode = "ko-KR";

	[Token(Token = "0x400034F")]
	public const string defaultLanguageCode = "en-US";

	[Token(Token = "0x4000350")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static string currentLanguageCode;

	[Token(Token = "0x4000351")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static CultureInfo cultureInfo;

	[Token(Token = "0x4000352")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static int currentLanguageIndex;

	[Token(Token = "0x4000353")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public static bool languageWasSet;

	[Token(Token = "0x4000354")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Dictionary<string, string> lookupDictionary;

	[Token(Token = "0x4000355")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public List<FontGroupMapping> fontGroupMapping;

	[Token(Token = "0x4000356")]
	private const bool testForUnlocalisedStrings = false;

	[Token(Token = "0x4000357")]
	private const string japaneseNonPermittedLineBreakCharactersString = ")]｝〕〉》」』】〙〗〟'\"｠»ヽヾーァィゥェォッャュョヮヵヶぁぃぅぇぉっゃゅょゎゕゖㇰㇱㇲㇳㇴㇵㇶㇷㇸㇹㇺㇻㇼㇽㇾㇿ々〻‐゠–〜? ! ‼ ⁇ ⁈ ⁉・、:;,。.！";

	[Token(Token = "0x4000358")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static char[] japaneseNonPermittedLineBreakCharacters;

	[Token(Token = "0x6000596")]
	[Address(RVA = "0x108ED38", Offset = "0x108ED38", VA = "0x108ED38")]
	private void PopulateDictionary()
	{
	}

	[Token(Token = "0x6000597")]
	[Address(RVA = "0x108EE9C", Offset = "0x108EE9C", VA = "0x108EE9C")]
	public Font ReplaceFont(Font inputFont)
	{
		return null;
	}

	[Token(Token = "0x6000598")]
	[Address(RVA = "0x108F04C", Offset = "0x108F04C", VA = "0x108F04C")]
	private static void GenerateCultureInfo(string languageCode)
	{
	}

	[Token(Token = "0x6000599")]
	[Address(RVA = "0x108F15C", Offset = "0x108F15C", VA = "0x108F15C")]
	public static void DebugSetLanguage(SystemLanguage language)
	{
	}

	[Token(Token = "0x600059A")]
	[Address(RVA = "0x108F2D4", Offset = "0x108F2D4", VA = "0x108F2D4")]
	public static void SetLanguage(string languageCode)
	{
	}

	[Token(Token = "0x600059B")]
	[Address(RVA = "0x108F71C", Offset = "0x108F71C", VA = "0x108F71C")]
	public static string Get(string key)
	{
		return null;
	}

	[Token(Token = "0x600059C")]
	[Address(RVA = "0x108F928", Offset = "0x108F928", VA = "0x108F928")]
	public static string DetectLanguageCode()
	{
		return null;
	}

	[Token(Token = "0x600059D")]
	[Address(RVA = "0x108FDFC", Offset = "0x108FDFC", VA = "0x108FDFC")]
	public static void DetectLanguage()
	{
	}

	[Token(Token = "0x600059E")]
	[Address(RVA = "0x108FEB4", Offset = "0x108FEB4", VA = "0x108FEB4")]
	public static void SetTextWithFixedLineBreaks(Text textComponent, string text)
	{
	}

	[Token(Token = "0x600059F")]
	[Address(RVA = "0x10903EC", Offset = "0x10903EC", VA = "0x10903EC")]
	public LanguageDatabase()
	{
	}
}
[Token(Token = "0x200007F")]
public static class ListUtil
{
	[Token(Token = "0x60005A1")]
	public static void CopyContents<T>(List<T> from, ref List<T> to)
	{
	}
}
[Token(Token = "0x2000080")]
public class MeshBatcher : MonoBehaviour
{
	[Token(Token = "0x2000301")]
	private class ThreadState
	{
		[Token(Token = "0x4001425")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int state;

		[Token(Token = "0x6001592")]
		[Address(RVA = "0x109E2D4", Offset = "0x109E2D4", VA = "0x109E2D4")]
		public ThreadState()
		{
		}
	}

	[Token(Token = "0x2000302")]
	public struct InstanceId
	{
		[Token(Token = "0x4001426")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int id;

		[Token(Token = "0x4001427")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public int regionIndex;

		[Token(Token = "0x4001428")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Material material;
	}

	[Token(Token = "0x2000303")]
	private abstract class Command
	{
		[Token(Token = "0x6001593")]
		[Address(RVA = "0x109E300", Offset = "0x109E300", VA = "0x109E300")]
		protected Command()
		{
		}
	}

	[Token(Token = "0x2000304")]
	private class AddCommand : Command
	{
		[Token(Token = "0x4001429")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public InstanceId id;

		[Token(Token = "0x400142A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public BatchedMeshData mesh;

		[Token(Token = "0x400142B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Material material;

		[Token(Token = "0x400142C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Vector3 position;

		[Token(Token = "0x400142D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public Quaternion rotation;

		[Token(Token = "0x6001594")]
		[Address(RVA = "0x109C458", Offset = "0x109C458", VA = "0x109C458")]
		public AddCommand(InstanceId id, Mesh mesh, Material material, Vector3 position, Quaternion rotation)
		{
		}
	}

	[Token(Token = "0x2000305")]
	private class RemoveCommand : Command
	{
		[Token(Token = "0x400142E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public InstanceId id;

		[Token(Token = "0x6001595")]
		[Address(RVA = "0x109C578", Offset = "0x109C578", VA = "0x109C578")]
		public RemoveCommand(InstanceId id)
		{
		}
	}

	[Token(Token = "0x2000306")]
	private class ApplyCommand : Command
	{
		[Token(Token = "0x6001596")]
		[Address(RVA = "0x109C5B0", Offset = "0x109C5B0", VA = "0x109C5B0")]
		public ApplyCommand()
		{
		}
	}

	[Token(Token = "0x2000307")]
	private class MeshInstance
	{
		[Token(Token = "0x400142F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public InstanceId id;

		[Token(Token = "0x4001430")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public BatchedMeshData sourceMesh;

		[Token(Token = "0x4001431")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Vector3 position;

		[Token(Token = "0x4001432")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public Quaternion rotation;

		[Token(Token = "0x6001597")]
		[Address(RVA = "0x109D3D8", Offset = "0x109D3D8", VA = "0x109D3D8")]
		public MeshInstance()
		{
		}
	}

	[Token(Token = "0x2000308")]
	private class BatchedMeshData
	{
		[Token(Token = "0x4001433")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vector3[] vertices;

		[Token(Token = "0x4001434")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector3[] normals;

		[Token(Token = "0x4001435")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Color32[] colors;

		[Token(Token = "0x4001436")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Vector2[] uvs;

		[Token(Token = "0x4001437")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public int[] triangles;

		[Token(Token = "0x6001598")]
		[Address(RVA = "0x109E308", Offset = "0x109E308", VA = "0x109E308")]
		public static BatchedMeshData FromMesh(Mesh mesh)
		{
			return null;
		}

		[Token(Token = "0x6001599")]
		[Address(RVA = "0x109E3CC", Offset = "0x109E3CC", VA = "0x109E3CC")]
		public Mesh GenerateMesh()
		{
			return null;
		}

		[Token(Token = "0x600159A")]
		[Address(RVA = "0x109E3C4", Offset = "0x109E3C4", VA = "0x109E3C4")]
		public BatchedMeshData()
		{
		}
	}

	[Token(Token = "0x2000309")]
	private class Region
	{
		[Token(Token = "0x4001438")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int regionIndex;

		[Token(Token = "0x4001439")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public Vector3 basePosition;

		[Token(Token = "0x400143A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Material material;

		[Token(Token = "0x400143B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public List<MeshInstance> instances;

		[Token(Token = "0x400143C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public List<BatchedMeshData> batchedMeshes;

		[Token(Token = "0x400143D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public List<GameObject> targetObjects;

		[Token(Token = "0x400143E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool weldVertices;

		[Token(Token = "0x600159B")]
		[Address(RVA = "0x109E484", Offset = "0x109E484", VA = "0x109E484")]
		public Region(int regionIndex, Vector3 basePosition, Material material, bool weldVertices)
		{
		}

		[Token(Token = "0x600159C")]
		[Address(RVA = "0x109E598", Offset = "0x109E598", VA = "0x109E598")]
		private int FindIndex(List<Vector3> vertices, List<Vector3> normals, List<Vector2> uvs, List<Color32> colors, Vector3 position, Vector3 normal, Vector2 uv, Color32 color)
		{
			return default(int);
		}

		[Token(Token = "0x600159D")]
		[Address(RVA = "0x109D658", Offset = "0x109D658", VA = "0x109D658")]
		public void GenerateBatch(LightingParams lightingParams)
		{
		}

		[Token(Token = "0x600159E")]
		[Address(RVA = "0x109CB24", Offset = "0x109CB24", VA = "0x109CB24")]
		public void UpdateGameObject(GameObject parentObject)
		{
		}
	}

	[Token(Token = "0x200030A")]
	private class RegionMap
	{
		[Token(Token = "0x400143F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Region[] regions;

		[Token(Token = "0x600159F")]
		[Address(RVA = "0x109D268", Offset = "0x109D268", VA = "0x109D268")]
		public RegionMap(Material material, bool weldVertices)
		{
		}
	}

	[Token(Token = "0x200030B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6A8044", Offset = "0x6A8044")]
	private sealed class <>c__DisplayClass37_0
	{
		[Token(Token = "0x4001440")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public InstanceId id;

		[Token(Token = "0x60015A0")]
		[Address(RVA = "0x109D554", Offset = "0x109D554", VA = "0x109D554")]
		public <>c__DisplayClass37_0()
		{
		}

		[Token(Token = "0x60015A1")]
		[Address(RVA = "0x109E2DC", Offset = "0x109E2DC", VA = "0x109E2DC")]
		internal bool <RemoveInstance>b__0(MeshInstance x)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x4000359")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool useAsyncThread;

	[Token(Token = "0x400035A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool weldVertices;

	[Token(Token = "0x400035B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	public bool bakeLighting;

	[Token(Token = "0x400035C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Thread buildThread;

	[Token(Token = "0x400035D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool isDirty;

	[Token(Token = "0x400035E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Dictionary<Material, Material> bakedMaterials;

	[Token(Token = "0x400035F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private LightingParams lighting;

	[Token(Token = "0x4000360")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private ThreadState threadState;

	[Token(Token = "0x4000361")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private List<Command> commandQueue;

	[Token(Token = "0x4000362")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private int idCounter;

	[Token(Token = "0x4000363")]
	private const int regionSize = 16;

	[Token(Token = "0x4000364")]
	private const int regionsWidth = 2;

	[Token(Token = "0x4000365")]
	private const int regionsHeight = 2;

	[Token(Token = "0x4000366")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Dictionary<Material, RegionMap> regionsPerMaterial;

	[Token(Token = "0x4000367")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private List<Region> dirtyRegions;

	[Token(Token = "0x4000368")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private List<Region> updatedRegions;

	[Token(Token = "0x60005A2")]
	[Address(RVA = "0x109BFF8", Offset = "0x109BFF8", VA = "0x109BFF8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60005A3")]
	[Address(RVA = "0x109C0D4", Offset = "0x109C0D4", VA = "0x109C0D4")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60005A4")]
	[Address(RVA = "0x109C1A0", Offset = "0x109C1A0", VA = "0x109C1A0")]
	private void Start()
	{
	}

	[Token(Token = "0x60005A5")]
	[Address(RVA = "0x109C1FC", Offset = "0x109C1FC", VA = "0x109C1FC")]
	private void EnqueueCommand(Command cmd)
	{
	}

	[Token(Token = "0x60005A6")]
	[Address(RVA = "0x109C2C8", Offset = "0x109C2C8", VA = "0x109C2C8")]
	private Command DequeueCommand()
	{
		return null;
	}

	[Token(Token = "0x60005A7")]
	[Address(RVA = "0x109BCD8", Offset = "0x109BCD8", VA = "0x109BCD8")]
	public InstanceId Add(Mesh mesh, Material material, Vector3 position, Quaternion rotation)
	{
		return default(InstanceId);
	}

	[Token(Token = "0x60005A8")]
	[Address(RVA = "0x109C4F8", Offset = "0x109C4F8", VA = "0x109C4F8")]
	public void Remove(InstanceId id)
	{
	}

	[Token(Token = "0x60005A9")]
	[Address(RVA = "0x109BF24", Offset = "0x109BF24", VA = "0x109BF24")]
	public void Apply()
	{
	}

	[Token(Token = "0x60005AA")]
	[Address(RVA = "0x109C5B8", Offset = "0x109C5B8", VA = "0x109C5B8")]
	private void Update()
	{
	}

	[Token(Token = "0x60005AB")]
	[Address(RVA = "0x109C3BC", Offset = "0x109C3BC", VA = "0x109C3BC")]
	private int GetRegionIndex(Vector3 position)
	{
		return default(int);
	}

	[Token(Token = "0x60005AC")]
	[Address(RVA = "0x109D07C", Offset = "0x109D07C", VA = "0x109D07C")]
	private void AddInstance(InstanceId id, BatchedMeshData mesh, Material material, Vector3 position, Quaternion rotation)
	{
	}

	[Token(Token = "0x60005AD")]
	[Address(RVA = "0x109D3E0", Offset = "0x109D3E0", VA = "0x109D3E0")]
	private void RemoveInstance(InstanceId id)
	{
	}

	[Token(Token = "0x60005AE")]
	[Address(RVA = "0x109D55C", Offset = "0x109D55C", VA = "0x109D55C")]
	private void RegenerateBatchedMeshes()
	{
	}

	[Token(Token = "0x60005AF")]
	[Address(RVA = "0x109C74C", Offset = "0x109C74C", VA = "0x109C74C")]
	private void ProcessCommand(Command cmd)
	{
	}

	[Token(Token = "0x60005B0")]
	[Address(RVA = "0x109E0B4", Offset = "0x109E0B4", VA = "0x109E0B4")]
	private void BuildAsync()
	{
	}

	[Token(Token = "0x60005B1")]
	[Address(RVA = "0x109E1A0", Offset = "0x109E1A0", VA = "0x109E1A0")]
	public MeshBatcher()
	{
	}
}
[Token(Token = "0x2000081")]
public struct sbyte4
{
	[Token(Token = "0x4000369")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public sbyte x;

	[Token(Token = "0x400036A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
	public sbyte y;

	[Token(Token = "0x400036B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2")]
	public sbyte z;

	[Token(Token = "0x400036C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3")]
	public sbyte w;

	[Token(Token = "0x60005B2")]
	[Address(RVA = "0x723EA8", Offset = "0x723EA8", VA = "0x723EA8")]
	public sbyte4(Vector3 input)
	{
	}

	[Token(Token = "0x60005B3")]
	[Address(RVA = "0x117F844", Offset = "0x117F844", VA = "0x117F844")]
	public static implicit operator Vector3(sbyte4 input)
	{
		return default(Vector3);
	}
}
[Token(Token = "0x2000082")]
public class MeshBatcherV2 : MonoBehaviour
{
	[Token(Token = "0x200030C")]
	private struct BatchedVertex
	{
		[Token(Token = "0x4001441")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float3 pos;

		[Token(Token = "0x4001442")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public sbyte4 normal;

		[Token(Token = "0x4001443")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Color32 color;

		[Token(Token = "0x4001444")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public half2 uv;
	}

	[Token(Token = "0x200030D")]
	[Flags]
	public enum BatchFlags
	{
		[Token(Token = "0x4001446")]
		None = 0,
		[Token(Token = "0x4001447")]
		BakeLighting = 1,
		[Token(Token = "0x4001448")]
		Greyscale = 2,
		[Token(Token = "0x4001449")]
		StoreHeightInUV = 4
	}

	[Token(Token = "0x200030E")]
	public struct InstanceId
	{
		[Token(Token = "0x400144A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int id;

		[Token(Token = "0x17000398")]
		public bool isValid
		{
			[Token(Token = "0x60015A2")]
			[Address(RVA = "0x721A68", Offset = "0x721A68", VA = "0x721A68")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60015A3")]
		[Address(RVA = "0x721A78", Offset = "0x721A78", VA = "0x721A78")]
		public void Invalidate()
		{
		}
	}

	[Token(Token = "0x200030F")]
	private class MeshInstance
	{
		[Token(Token = "0x400144B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public MeshData sourceData;

		[Token(Token = "0x400144C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public MeshData transformedData;

		[Token(Token = "0x400144D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Vector3 position;

		[Token(Token = "0x400144E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public Vector3 scale;

		[Token(Token = "0x400144F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Quaternion rotation;

		[Token(Token = "0x4001450")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public MeshGroup meshGroup;

		[Token(Token = "0x4001451")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public int mergeIndex;

		[Token(Token = "0x4001452")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public BatchFlags flags;

		[Token(Token = "0x60015A4")]
		[Address(RVA = "0xFF956C", Offset = "0xFF956C", VA = "0xFF956C")]
		public void Dispose()
		{
		}

		[Token(Token = "0x60015A5")]
		[Address(RVA = "0xFF936C", Offset = "0xFF936C", VA = "0xFF936C")]
		public MeshInstance()
		{
		}
	}

	[Token(Token = "0x2000310")]
	public class MeshData
	{
		[Token(Token = "0x4001453")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private NativeArray<BatchedVertex> batchedVertices;

		[Token(Token = "0x4001454")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private NativeArray<ushort> indexBuffer;

		[Token(Token = "0x17000399")]
		public int vertexCount
		{
			[Token(Token = "0x60015A6")]
			[Address(RVA = "0xFF8038", Offset = "0xFF8038", VA = "0xFF8038")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x60015A7")]
		[Address(RVA = "0xFF8040", Offset = "0xFF8040", VA = "0xFF8040")]
		public MeshData()
		{
		}

		[Token(Token = "0x60015A8")]
		[Address(RVA = "0xFF8048", Offset = "0xFF8048", VA = "0xFF8048")]
		public MeshData(MeshData inMesh)
		{
		}

		[Token(Token = "0x60015A9")]
		[Address(RVA = "0xFF8100", Offset = "0xFF8100", VA = "0xFF8100")]
		public void Dispose()
		{
		}

		[Token(Token = "0x60015AA")]
		[Address(RVA = "0xFF81A8", Offset = "0xFF81A8", VA = "0xFF81A8")]
		public void Append(MeshData inMesh)
		{
		}

		[Token(Token = "0x60015AB")]
		[Address(RVA = "0xFF8324", Offset = "0xFF8324", VA = "0xFF8324")]
		public void RemoveRange(int start, int count)
		{
		}

		[Token(Token = "0x60015AC")]
		[Address(RVA = "0xFF84A4", Offset = "0xFF84A4", VA = "0xFF84A4")]
		public MeshData(Mesh inMesh, BatchFlags batchFlags)
		{
		}

		[Token(Token = "0x60015AD")]
		[Address(RVA = "0xFF8ADC", Offset = "0xFF8ADC", VA = "0xFF8ADC")]
		public static MeshData TransformCopy(MeshData inMesh, Quaternion rotation, Vector3 position, Vector3 scale)
		{
			return null;
		}

		[Token(Token = "0x60015AE")]
		[Address(RVA = "0xFF8D24", Offset = "0xFF8D24", VA = "0xFF8D24")]
		public void ApplyGreyscale()
		{
		}

		[Token(Token = "0x60015AF")]
		[Address(RVA = "0xFF8D28", Offset = "0xFF8D28", VA = "0xFF8D28")]
		public void BakeLighting(LightingParams lighting)
		{
		}

		[Token(Token = "0x60015B0")]
		[Address(RVA = "0xFF8D2C", Offset = "0xFF8D2C", VA = "0xFF8D2C")]
		public Mesh ToMesh(Mesh mesh)
		{
			return null;
		}
	}

	[Token(Token = "0x2000311")]
	private class MeshGroup
	{
		[Token(Token = "0x2000423")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6A873C", Offset = "0x6A873C")]
		private sealed class <>c__DisplayClass16_0
		{
			[Token(Token = "0x4001980")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public MeshInstance meshInstance;

			[Token(Token = "0x60018ED")]
			[Address(RVA = "0xFF9564", Offset = "0xFF9564", VA = "0xFF9564")]
			public <>c__DisplayClass16_0()
			{
			}

			[Token(Token = "0x60018EE")]
			[Address(RVA = "0xFF9808", Offset = "0xFF9808", VA = "0xFF9808")]
			internal bool <Remove>b__0(MeshInstance x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4001455")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private MeshGroupCollection collection;

		[Token(Token = "0x4001456")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6AC604", Offset = "0x6AC604")]
		private GameObject <gameObject>k__BackingField;

		[Token(Token = "0x4001457")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private MeshFilter meshFilter;

		[Token(Token = "0x4001458")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private MeshData mergedMesh;

		[Token(Token = "0x4001459")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private List<MeshInstance> meshInstances;

		[Token(Token = "0x400145A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public int vertCount;

		[Token(Token = "0x400145B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6AC614", Offset = "0x6AC614")]
		private bool <isDirty>k__BackingField;

		[Token(Token = "0x400145C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Mesh mesh;

		[Token(Token = "0x1700039A")]
		public GameObject gameObject
		{
			[Token(Token = "0x60015B1")]
			[Address(RVA = "0xFF8E90", Offset = "0xFF8E90", VA = "0xFF8E90")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6B3358", Offset = "0x6B3358")]
			get
			{
				return null;
			}
			[Token(Token = "0x60015B2")]
			[Address(RVA = "0xFF8E98", Offset = "0xFF8E98", VA = "0xFF8E98")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6B3368", Offset = "0x6B3368")]
			private set
			{
			}
		}

		[Token(Token = "0x1700039B")]
		public bool isDirty
		{
			[Token(Token = "0x60015B3")]
			[Address(RVA = "0xFF8EA0", Offset = "0xFF8EA0", VA = "0xFF8EA0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6B3378", Offset = "0x6B3378")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60015B4")]
			[Address(RVA = "0xFF8EA8", Offset = "0xFF8EA8", VA = "0xFF8EA8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6B3388", Offset = "0x6B3388")]
			private set
			{
			}
		}

		[Token(Token = "0x60015B5")]
		[Address(RVA = "0xFF8EB4", Offset = "0xFF8EB4", VA = "0xFF8EB4")]
		public MeshGroup(MeshGroupCollection collection)
		{
		}

		[Token(Token = "0x60015B6")]
		[Address(RVA = "0xFF91C0", Offset = "0xFF91C0", VA = "0xFF91C0")]
		public MeshInstance Add(MeshData meshData, Vector3 position, Quaternion rotation, Vector3 scale, BatchFlags flags)
		{
			return null;
		}

		[Token(Token = "0x60015B7")]
		[Address(RVA = "0xFF9374", Offset = "0xFF9374", VA = "0xFF9374")]
		public void Remove(MeshInstance meshInstance)
		{
		}

		[Token(Token = "0x60015B8")]
		[Address(RVA = "0xFF957C", Offset = "0xFF957C", VA = "0xFF957C")]
		public void Dispose()
		{
		}

		[Token(Token = "0x60015B9")]
		[Address(RVA = "0xFF9690", Offset = "0xFF9690", VA = "0xFF9690")]
		public void ApplyChanges()
		{
		}
	}

	[Token(Token = "0x2000312")]
	private class MeshGroupCollection
	{
		[Token(Token = "0x400145D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6AC624", Offset = "0x6AC624")]
		private MeshBatcherV2 <batcher>k__BackingField;

		[Token(Token = "0x400145E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6AC634", Offset = "0x6AC634")]
		private Material <material>k__BackingField;

		[Token(Token = "0x400145F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6AC644", Offset = "0x6AC644")]
		private bool <needsBake>k__BackingField;

		[Token(Token = "0x4001460")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private List<MeshGroup> groups;

		[Token(Token = "0x1700039C")]
		public MeshBatcherV2 batcher
		{
			[Token(Token = "0x60015BA")]
			[Address(RVA = "0xFF9818", Offset = "0xFF9818", VA = "0xFF9818")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6B3398", Offset = "0x6B3398")]
			get
			{
				return null;
			}
			[Token(Token = "0x60015BB")]
			[Address(RVA = "0xFF9820", Offset = "0xFF9820", VA = "0xFF9820")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6B33A8", Offset = "0x6B33A8")]
			private set
			{
			}
		}

		[Token(Token = "0x1700039D")]
		public Material material
		{
			[Token(Token = "0x60015BC")]
			[Address(RVA = "0xFF9828", Offset = "0xFF9828", VA = "0xFF9828")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6B33B8", Offset = "0x6B33B8")]
			get
			{
				return null;
			}
			[Token(Token = "0x60015BD")]
			[Address(RVA = "0xFF9830", Offset = "0xFF9830", VA = "0xFF9830")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6B33C8", Offset = "0x6B33C8")]
			private set
			{
			}
		}

		[Token(Token = "0x1700039E")]
		public bool needsBake
		{
			[Token(Token = "0x60015BE")]
			[Address(RVA = "0xFF9838", Offset = "0xFF9838", VA = "0xFF9838")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6B33D8", Offset = "0x6B33D8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60015BF")]
			[Address(RVA = "0xFF9840", Offset = "0xFF9840", VA = "0xFF9840")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6B33E8", Offset = "0x6B33E8")]
			private set
			{
			}
		}

		[Token(Token = "0x60015C0")]
		[Address(RVA = "0xFF984C", Offset = "0xFF984C", VA = "0xFF984C")]
		public MeshGroupCollection(MeshBatcherV2 batcher, Material material, bool needsBake)
		{
		}

		[Token(Token = "0x60015C1")]
		[Address(RVA = "0xFF98E8", Offset = "0xFF98E8", VA = "0xFF98E8")]
		public MeshInstance Add(MeshData meshData, Vector3 position, Quaternion rotation, Vector3 scale, BatchFlags flags)
		{
			return null;
		}

		[Token(Token = "0x60015C2")]
		[Address(RVA = "0xFF97A0", Offset = "0xFF97A0", VA = "0xFF97A0")]
		public void Remove(MeshGroup group)
		{
		}

		[Token(Token = "0x60015C3")]
		[Address(RVA = "0xFF9A80", Offset = "0xFF9A80", VA = "0xFF9A80")]
		public void ApplyChanges()
		{
		}

		[Token(Token = "0x60015C4")]
		[Address(RVA = "0xFF9B44", Offset = "0xFF9B44", VA = "0xFF9B44")]
		public void Dispose()
		{
		}

		[Token(Token = "0x60015C5")]
		[Address(RVA = "0xFF9C38", Offset = "0xFF9C38", VA = "0xFF9C38")]
		public void Clear()
		{
		}
	}

	[Token(Token = "0x400036D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Dictionary<Material, Material> bakedMaterials;

	[Token(Token = "0x400036E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Dictionary<Mesh, MeshData> meshToMeshData;

	[Token(Token = "0x400036F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Dictionary<InstanceId, MeshInstance> meshInstances;

	[Token(Token = "0x4000370")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Dictionary<Material, MeshGroupCollection> groupsByMaterial;

	[Token(Token = "0x4000371")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int idCounter;

	[Token(Token = "0x4000372")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public bool enableLightBaking;

	[Token(Token = "0x4000373")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3D")]
	private bool isDisposed;

	[Token(Token = "0x4000374")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6A8C8C", Offset = "0x6A8C8C")]
	private LightingParams <lighting>k__BackingField;

	[Token(Token = "0x4000375")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Action<MeshRenderer> onMeshRendererAdded;

	[Token(Token = "0x4000376")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Action<MeshRenderer> onMeshRendererRemoved;

	[Token(Token = "0x4000377")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static readonly VertexAttributeDescriptor[] vertexLayout;

	[Token(Token = "0x4000378")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private List<MeshGroup> dirtyMeshGroups;

	[Token(Token = "0x17000138")]
	public LightingParams lighting
	{
		[Token(Token = "0x60005B4")]
		[Address(RVA = "0x109E8C8", Offset = "0x109E8C8", VA = "0x109E8C8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6AF284", Offset = "0x6AF284")]
		get
		{
			return null;
		}
		[Token(Token = "0x60005B5")]
		[Address(RVA = "0x109E8D0", Offset = "0x109E8D0", VA = "0x109E8D0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6AF294", Offset = "0x6AF294")]
		private set
		{
		}
	}

	[Token(Token = "0x60005B6")]
	[Address(RVA = "0x109E8D8", Offset = "0x109E8D8", VA = "0x109E8D8")]
	private void Start()
	{
	}

	[Token(Token = "0x60005B7")]
	[Address(RVA = "0x108CA60", Offset = "0x108CA60", VA = "0x108CA60")]
	public InstanceId Add(Mesh mesh, Material material, Vector3 position, Quaternion rotation, Vector3 scale, BatchFlags flags)
	{
		return default(InstanceId);
	}

	[Token(Token = "0x60005B8")]
	[Address(RVA = "0x108CEAC", Offset = "0x108CEAC", VA = "0x108CEAC")]
	public void Remove(InstanceId id)
	{
	}

	[Token(Token = "0x60005B9")]
	[Address(RVA = "0x108D76C", Offset = "0x108D76C", VA = "0x108D76C")]
	public void ApplyChanges()
	{
	}

	[Token(Token = "0x60005BA")]
	[Address(RVA = "0x109E934", Offset = "0x109E934", VA = "0x109E934")]
	private void Update()
	{
	}

	[Token(Token = "0x60005BB")]
	[Address(RVA = "0x109E938", Offset = "0x109E938", VA = "0x109E938")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60005BC")]
	[Address(RVA = "0x109EB18", Offset = "0x109EB18", VA = "0x109EB18")]
	public MeshRenderer[] GetAllMeshRenderers()
	{
		return null;
	}

	[Token(Token = "0x60005BD")]
	[Address(RVA = "0x109EB68", Offset = "0x109EB68", VA = "0x109EB68")]
	public void Clear()
	{
	}

	[Token(Token = "0x60005BE")]
	[Address(RVA = "0x109EC8C", Offset = "0x109EC8C", VA = "0x109EC8C")]
	public MeshBatcherV2()
	{
	}
}
[Token(Token = "0x2000083")]
public static class QuestValidationHelper
{
	[Token(Token = "0x2000313")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6A8064", Offset = "0x6A8064")]
	private sealed class <ValidationRoutine>d__4 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001461")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001462")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001463")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string libraryPath;

		[Token(Token = "0x4001464")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Action<bool> onResult;

		[Token(Token = "0x4001465")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string expectedHash;

		[Token(Token = "0x4001466")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private string <path>5__2;

		[Token(Token = "0x4001467")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private UnityWebRequest <www>5__3;

		[Token(Token = "0x1700039F")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60015C9")]
			[Address(RVA = "0x1104E08", Offset = "0x1104E08", VA = "0x1104E08", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003A0")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60015CB")]
			[Address(RVA = "0x1104E70", Offset = "0x1104E70", VA = "0x1104E70", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60015C6")]
		[Address(RVA = "0x1104868", Offset = "0x1104868", VA = "0x1104868")]
		[DebuggerHidden]
		public <ValidationRoutine>d__4(int <>1__state)
		{
		}

		[Token(Token = "0x60015C7")]
		[Address(RVA = "0x1104980", Offset = "0x1104980", VA = "0x1104980", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60015C8")]
		[Address(RVA = "0x1104984", Offset = "0x1104984", VA = "0x1104984", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60015CA")]
		[Address(RVA = "0x1104E10", Offset = "0x1104E10", VA = "0x1104E10", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000379")]
	public const string libovrplatformloader_path = "lib/arm64-v8a/libovrplatformloader.so";

	[Token(Token = "0x400037A")]
	public const string libovrplatformloader_hash = "b198ec22ada5021786856970a8bdb5d42c66fb92";

	[Token(Token = "0x60005C0")]
	[Address(RVA = "0x1104138", Offset = "0x1104138", VA = "0x1104138")]
	public static void ValidateFileIntegrity(MonoBehaviour contextObject, string libraryPath, string expectedHash, Action<bool> onResult)
	{
	}

	[Token(Token = "0x60005C1")]
	[Address(RVA = "0x11041FC", Offset = "0x11041FC", VA = "0x11041FC")]
	public static void OpenStorePageAndQuit(string targetAppID)
	{
	}

	[Token(Token = "0x60005C2")]
	[Address(RVA = "0x1104178", Offset = "0x1104178", VA = "0x1104178")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6AF2A4", Offset = "0x6AF2A4")]
	private static IEnumerator ValidationRoutine(string libraryPath, string expectedHash, Action<bool> onResult)
	{
		return null;
	}

	[Token(Token = "0x60005C3")]
	[Address(RVA = "0x1104894", Offset = "0x1104894", VA = "0x1104894")]
	private static string GetHashString(byte[] hash)
	{
		return null;
	}
}
[Token(Token = "0x2000084")]
public static class RandomUtils
{
	[Token(Token = "0x400037B")]
	public const double MAX_RATIO = 2.3283064370807974E-10;

	[Token(Token = "0x60005C4")]
	[Address(RVA = "0x1104E78", Offset = "0x1104E78", VA = "0x1104E78")]
	public static float Random(uint x, uint y, uint z)
	{
		return default(float);
	}

	[Token(Token = "0x60005C5")]
	[Address(RVA = "0x1104F14", Offset = "0x1104F14", VA = "0x1104F14")]
	public static float ValueAtTile(int x, int y, int z = 0)
	{
		return default(float);
	}

	[Token(Token = "0x60005C6")]
	[Address(RVA = "0x1102E18", Offset = "0x1102E18", VA = "0x1102E18")]
	public static float RangeAtTile(float min, float max, int x, int y, int z = 0)
	{
		return default(float);
	}

	[Token(Token = "0x60005C7")]
	[Address(RVA = "0x1104F18", Offset = "0x1104F18", VA = "0x1104F18")]
	public static int PickAtTile(int count, int x, int y, int z = 0)
	{
		return default(int);
	}

	[Token(Token = "0x60005C8")]
	[Address(RVA = "0x1102D88", Offset = "0x1102D88", VA = "0x1102D88")]
	public static Vector2 InsideUnitCircleAtTile(int x, int y, int z = 0)
	{
		return default(Vector2);
	}

	[Token(Token = "0x60005C9")]
	[Address(RVA = "0x1104FD0", Offset = "0x1104FD0", VA = "0x1104FD0")]
	public static Vector3 InsideUnitSphereAtTile(int x, int y, int z = 0)
	{
		return default(Vector3);
	}
}
[Token(Token = "0x2000085")]
public static class ScreenCaptureUtil
{
	[Token(Token = "0x60005CA")]
	[Address(RVA = "0x104B8B8", Offset = "0x104B8B8", VA = "0x104B8B8")]
	public static void Capture(int captureWidth = 7680, int captureHeight = 4320)
	{
	}
}
[Token(Token = "0x2000086")]
public abstract class Singleton<T> where T : class, new()
{
	[Token(Token = "0x400037C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	protected static T _instance;

	[Token(Token = "0x17000139")]
	public static T instance
	{
		[Token(Token = "0x60005CB")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60005CC")]
	protected Singleton()
	{
	}
}
[Token(Token = "0x2000087")]
public abstract class SingletonBehaviour<T> : MonoBehaviour where T : MonoBehaviour
{
	[Token(Token = "0x400037D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	protected static T _instance;

	[Token(Token = "0x1700013A")]
	public static T instance
	{
		[Token(Token = "0x60005CE")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700013B")]
	public static bool hasInstance
	{
		[Token(Token = "0x60005CF")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x60005D0")]
	public virtual void Awake()
	{
	}

	[Token(Token = "0x60005D1")]
	public virtual void OnDestroy()
	{
	}

	[Token(Token = "0x60005D2")]
	protected SingletonBehaviour()
	{
	}
}
[Token(Token = "0x2000088")]
public abstract class ScriptableObjectSingletonBase : ScriptableObject
{
	[Token(Token = "0x400037E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	protected static List<Action> loadRoutines;

	[Token(Token = "0x60005D3")]
	[Address(RVA = "0x104BB9C", Offset = "0x104BB9C", VA = "0x104BB9C")]
	public static void LoadAll()
	{
	}

	[Token(Token = "0x60005D4")]
	[Address(RVA = "0x104BE64", Offset = "0x104BE64", VA = "0x104BE64")]
	protected ScriptableObjectSingletonBase()
	{
	}
}
[Token(Token = "0x2000089")]
public abstract class ScriptableObjectSingleton<T> : ScriptableObjectSingletonBase where T : ScriptableObject
{
	[Token(Token = "0x400037F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	protected static T _instance;

	[Token(Token = "0x1700013C")]
	public static bool hasInstance
	{
		[Token(Token = "0x60005D6")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700013D")]
	public static T instance
	{
		[Token(Token = "0x60005D8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60005D7")]
	public static void Load()
	{
	}

	[Token(Token = "0x60005D9")]
	protected ScriptableObjectSingleton()
	{
	}
}
[Token(Token = "0x200008A")]
public abstract class AutoSingletonBehaviour<T> : MonoBehaviour where T : MonoBehaviour
{
	[Token(Token = "0x4000380")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	protected static T _instance;

	[Token(Token = "0x1700013E")]
	public static T instance
	{
		[Token(Token = "0x60005DB")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700013F")]
	public static bool hasInstance
	{
		[Token(Token = "0x60005DC")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x60005DD")]
	public virtual void Awake()
	{
	}

	[Token(Token = "0x60005DE")]
	public virtual void OnDestroy()
	{
	}

	[Token(Token = "0x60005DF")]
	protected AutoSingletonBehaviour()
	{
	}
}
[Token(Token = "0x200008B")]
public static class UnityExtensions
{
	[Token(Token = "0x60005E1")]
	public static T GetComponentInParentForPrefab<T>(this Component component) where T : Component
	{
		return null;
	}

	[Token(Token = "0x60005E2")]
	[Address(RVA = "0x1148740", Offset = "0x1148740", VA = "0x1148740")]
	public static AnalyticsResult AnalyticsEvent(string eventName)
	{
		return default(AnalyticsResult);
	}

	[Token(Token = "0x60005E3")]
	[Address(RVA = "0x1148748", Offset = "0x1148748", VA = "0x1148748")]
	public static AnalyticsResult AnalyticsEvent(string eventName, Dictionary<string, object> parameters)
	{
		return default(AnalyticsResult);
	}
}
[Token(Token = "0x200008C")]
public class FrontEnd : MonoBehaviour
{
	[Token(Token = "0x2000314")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6A8074", Offset = "0x6A8074")]
	private sealed class <>c__DisplayClass16_0
	{
		[Token(Token = "0x4001468")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public FrontEnd <>4__this;

		[Token(Token = "0x4001469")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Player player;

		[Token(Token = "0x400146A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Action<bool> <>9__3;

		[Token(Token = "0x60015CC")]
		[Address(RVA = "0x1039AF4", Offset = "0x1039AF4", VA = "0x1039AF4")]
		public <>c__DisplayClass16_0()
		{
		}

		[Token(Token = "0x60015CD")]
		[Address(RVA = "0x1039AFC", Offset = "0x1039AFC", VA = "0x1039AFC")]
		internal void <Start>b__0()
		{
		}

		[Token(Token = "0x60015CE")]
		[Address(RVA = "0x1039B28", Offset = "0x1039B28", VA = "0x1039B28")]
		internal void <Start>b__1()
		{
		}

		[Token(Token = "0x60015CF")]
		[Address(RVA = "0x1039BA8", Offset = "0x1039BA8", VA = "0x1039BA8")]
		internal void <Start>b__2(SaveSlot slot)
		{
		}

		[Token(Token = "0x60015D0")]
		[Address(RVA = "0x1039D24", Offset = "0x1039D24", VA = "0x1039D24")]
		internal void <Start>b__3(bool result)
		{
		}
	}

	[Token(Token = "0x2000315")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6A8084", Offset = "0x6A8084")]
	private sealed class <Start>d__16 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400146B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400146C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400146D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public FrontEnd <>4__this;

		[Token(Token = "0x400146E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private <>c__DisplayClass16_0 <>8__1;

		[Token(Token = "0x170003A1")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60015D4")]
			[Address(RVA = "0x103A3D4", Offset = "0x103A3D4", VA = "0x103A3D4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003A2")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60015D6")]
			[Address(RVA = "0x103A43C", Offset = "0x103A43C", VA = "0x103A43C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60015D1")]
		[Address(RVA = "0x1039320", Offset = "0x1039320", VA = "0x1039320")]
		[DebuggerHidden]
		public <Start>d__16(int <>1__state)
		{
		}

		[Token(Token = "0x60015D2")]
		[Address(RVA = "0x1039D5C", Offset = "0x1039D5C", VA = "0x1039D5C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60015D3")]
		[Address(RVA = "0x1039D60", Offset = "0x1039D60", VA = "0x1039D60", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60015D5")]
		[Address(RVA = "0x103A3DC", Offset = "0x103A3DC", VA = "0x103A3DC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000381")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform rooftopRoot;

	[Token(Token = "0x4000382")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject mainMenu;

	[Token(Token = "0x4000383")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject continueButton;

	[Token(Token = "0x4000384")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject continueButtonShadow;

	[Token(Token = "0x4000385")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject loadButton;

	[Token(Token = "0x4000386")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject loadButtonShadow;

	[Token(Token = "0x4000387")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject debugWarpMenu;

	[Token(Token = "0x4000388")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public SaveMenu loadMenu;

	[Token(Token = "0x4000389")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public SaveMenu newReplaceMenu;

	[Token(Token = "0x400038A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public SimpleShadow simpleShadow;

	[Token(Token = "0x400038B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Light sun;

	[Token(Token = "0x400038C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public MeshRenderer environmentBounds;

	[Token(Token = "0x400038D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public AudioSource ambientAudio;

	[Token(Token = "0x400038E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private string newSaveSlotFilename;

	[Token(Token = "0x17000140")]
	private bool shouldShowContinueButton
	{
		[Token(Token = "0x60005E4")]
		[Address(RVA = "0x10391EC", Offset = "0x10391EC", VA = "0x10391EC")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x60005E5")]
	[Address(RVA = "0x10392B0", Offset = "0x10392B0", VA = "0x10392B0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6AF318", Offset = "0x6AF318")]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x60005E6")]
	[Address(RVA = "0x103934C", Offset = "0x103934C", VA = "0x103934C")]
	public void StartGamePressed()
	{
	}

	[Token(Token = "0x60005E7")]
	[Address(RVA = "0x103938C", Offset = "0x103938C", VA = "0x103938C")]
	public void ContinuePressed()
	{
	}

	[Token(Token = "0x60005E8")]
	[Address(RVA = "0x103957C", Offset = "0x103957C", VA = "0x103957C")]
	public void LoadPressed()
	{
	}

	[Token(Token = "0x60005E9")]
	[Address(RVA = "0x10395BC", Offset = "0x10395BC", VA = "0x10395BC")]
	private void Update()
	{
	}

	[Token(Token = "0x60005EA")]
	[Address(RVA = "0x1039664", Offset = "0x1039664", VA = "0x1039664")]
	public void DebugWarp1()
	{
	}

	[Token(Token = "0x60005EB")]
	[Address(RVA = "0x10397E0", Offset = "0x10397E0", VA = "0x10397E0")]
	public void DebugWarp2()
	{
	}

	[Token(Token = "0x60005EC")]
	[Address(RVA = "0x103987C", Offset = "0x103987C", VA = "0x103987C")]
	public void DebugWarp3()
	{
	}

	[Token(Token = "0x60005ED")]
	[Address(RVA = "0x1039918", Offset = "0x1039918", VA = "0x1039918")]
	public void DebugWarp4()
	{
	}

	[Token(Token = "0x60005EE")]
	[Address(RVA = "0x10399B4", Offset = "0x10399B4", VA = "0x10399B4")]
	public void DebugWarp5()
	{
	}

	[Token(Token = "0x60005EF")]
	[Address(RVA = "0x1039A50", Offset = "0x1039A50", VA = "0x1039A50")]
	public void DebugWarp6()
	{
	}

	[Token(Token = "0x60005F0")]
	[Address(RVA = "0x1039AEC", Offset = "0x1039AEC", VA = "0x1039AEC")]
	public FrontEnd()
	{
	}
}
[Token(Token = "0x200008D")]
public class MenuRoom : SingletonBehaviour<MenuRoom>
{
	[Token(Token = "0x2000316")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6A8094", Offset = "0x6A8094")]
	private sealed class <ReturnToMenuRoomRoutine>d__32 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400146F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001470")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001471")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MenuRoom <>4__this;

		[Token(Token = "0x170003A3")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60015DA")]
			[Address(RVA = "0x109B714", Offset = "0x109B714", VA = "0x109B714", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003A4")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60015DC")]
			[Address(RVA = "0x109B77C", Offset = "0x109B77C", VA = "0x109B77C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60015D7")]
		[Address(RVA = "0x109AC10", Offset = "0x109AC10", VA = "0x109AC10")]
		[DebuggerHidden]
		public <ReturnToMenuRoomRoutine>d__32(int <>1__state)
		{
		}

		[Token(Token = "0x60015D8")]
		[Address(RVA = "0x109B390", Offset = "0x109B390", VA = "0x109B390", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60015D9")]
		[Address(RVA = "0x109B394", Offset = "0x109B394", VA = "0x109B394", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60015DB")]
		[Address(RVA = "0x109B71C", Offset = "0x109B71C", VA = "0x109B71C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400038F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject cityPrefab;

	[Token(Token = "0x4000390")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string cityInfoName;

	[Token(Token = "0x4000391")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6A8C9C", Offset = "0x6A8C9C")]
	private City <city>k__BackingField;

	[Token(Token = "0x4000392")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform playerTablePosition;

	[Token(Token = "0x4000393")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform tableTopRoot;

	[Token(Token = "0x4000394")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Transform tableAdjustmentTransform;

	[Token(Token = "0x4000395")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Transform playerCanvasTargetTransform;

	[Token(Token = "0x4000396")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Camera saveGameCaptureCamera;

	[Token(Token = "0x4000397")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public float sittingThreshold;

	[Token(Token = "0x4000398")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public float standingThreshold;

	[Token(Token = "0x4000399")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public float standingTableHeight;

	[Token(Token = "0x400039A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public float sittingTableHeight;

	[Token(Token = "0x400039B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public float minTableOffset;

	[Token(Token = "0x400039C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public float maxTableOffset;

	[Token(Token = "0x400039D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public float startingHeightFromHeadsetHeight;

	[Token(Token = "0x400039E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Transform tableHandleTransform;

	[Token(Token = "0x400039F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Transform tableGrabTransform;

	[Token(Token = "0x40003A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public GameObject tableHeightAdjustHint;

	[Token(Token = "0x40003A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public GameObject tableHandle;

	[Token(Token = "0x17000141")]
	public City city
	{
		[Token(Token = "0x60005F1")]
		[Address(RVA = "0x1099FA8", Offset = "0x1099FA8", VA = "0x1099FA8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6AF37C", Offset = "0x6AF37C")]
		get
		{
			return null;
		}
		[Token(Token = "0x60005F2")]
		[Address(RVA = "0x1099FB0", Offset = "0x1099FB0", VA = "0x1099FB0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6AF38C", Offset = "0x6AF38C")]
		private set
		{
		}
	}

	[Token(Token = "0x17000142")]
	private Player player
	{
		[Token(Token = "0x60005F3")]
		[Address(RVA = "0x1099FB8", Offset = "0x1099FB8", VA = "0x1099FB8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60005F4")]
	[Address(RVA = "0x109A008", Offset = "0x109A008", VA = "0x109A008")]
	private void Start()
	{
	}

	[Token(Token = "0x60005F5")]
	[Address(RVA = "0x109A118", Offset = "0x109A118", VA = "0x109A118")]
	public void PlacePlayerAtTable()
	{
	}

	[Token(Token = "0x60005F6")]
	[Address(RVA = "0x109A00C", Offset = "0x109A00C", VA = "0x109A00C")]
	private void GenerateCity()
	{
	}

	[Token(Token = "0x60005F7")]
	[Address(RVA = "0x109A70C", Offset = "0x109A70C", VA = "0x109A70C")]
	public void Hide()
	{
	}

	[Token(Token = "0x60005F8")]
	[Address(RVA = "0x109A734", Offset = "0x109A734", VA = "0x109A734")]
	public void Show()
	{
	}

	[Token(Token = "0x60005F9")]
	[Address(RVA = "0x109A75C", Offset = "0x109A75C", VA = "0x109A75C")]
	public bool CanReturnToWorldMap()
	{
		return default(bool);
	}

	[Token(Token = "0x60005FA")]
	[Address(RVA = "0x109A8D4", Offset = "0x109A8D4", VA = "0x109A8D4")]
	public void ReturnToMenuRoom()
	{
	}

	[Token(Token = "0x60005FB")]
	[Address(RVA = "0x109AA40", Offset = "0x109AA40", VA = "0x109AA40")]
	public void ReturnToMenuRoomImmediate()
	{
	}

	[Token(Token = "0x60005FC")]
	[Address(RVA = "0x109A9D0", Offset = "0x109A9D0", VA = "0x109A9D0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6AF39C", Offset = "0x6AF39C")]
	private IEnumerator ReturnToMenuRoomRoutine()
	{
		return null;
	}

	[Token(Token = "0x60005FD")]
	[Address(RVA = "0x109AC3C", Offset = "0x109AC3C", VA = "0x109AC3C")]
	public void DebugWarp0()
	{
	}

	[Token(Token = "0x60005FE")]
	[Address(RVA = "0x109AD24", Offset = "0x109AD24", VA = "0x109AD24")]
	public void DebugWarp1()
	{
	}

	[Token(Token = "0x60005FF")]
	[Address(RVA = "0x109AE10", Offset = "0x109AE10", VA = "0x109AE10")]
	public void DebugWarp2()
	{
	}

	[Token(Token = "0x6000600")]
	[Address(RVA = "0x109AEFC", Offset = "0x109AEFC", VA = "0x109AEFC")]
	public void DebugWarp3()
	{
	}

	[Token(Token = "0x6000601")]
	[Address(RVA = "0x109AFE8", Offset = "0x109AFE8", VA = "0x109AFE8")]
	public void DebugWarp4()
	{
	}

	[Token(Token = "0x6000602")]
	[Address(RVA = "0x109B0D4", Offset = "0x109B0D4", VA = "0x109B0D4")]
	public void DebugWarp5()
	{
	}

	[Token(Token = "0x6000603")]
	[Address(RVA = "0x109A584", Offset = "0x109A584", VA = "0x109A584")]
	public void AdjustTableHeight(float desiredHandleWorldHeight)
	{
	}

	[Token(Token = "0x6000604")]
	[Address(RVA = "0x109B1C0", Offset = "0x109B1C0", VA = "0x109B1C0")]
	public void Update()
	{
	}

	[Token(Token = "0x6000605")]
	[Address(RVA = "0x109B31C", Offset = "0x109B31C", VA = "0x109B31C")]
	public MenuRoom()
	{
	}
}
[Token(Token = "0x200008E")]
public class GameEnvironment : SingletonBehaviour<GameEnvironment>
{
	[Token(Token = "0x40003A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform playerStartLocation;

	[Token(Token = "0x40003A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform zoomOutLocation;

	[Token(Token = "0x40003A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Camera saveGameCaptureCamera;

	[Token(Token = "0x6000606")]
	[Address(RVA = "0x103A4D4", Offset = "0x103A4D4", VA = "0x103A4D4")]
	public GameEnvironment()
	{
	}
}
[Token(Token = "0x200008F")]
public class GameQuality : MonoBehaviour
{
	[Token(Token = "0x2000317")]
	public enum Level
	{
		[Token(Token = "0x4001473")]
		Low,
		[Token(Token = "0x4001474")]
		Medium,
		[Token(Token = "0x4001475")]
		High
	}

	[Token(Token = "0x40003A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Level qualityLevel;

	[Token(Token = "0x40003A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Level qualityInEditor;

	[Token(Token = "0x40003A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private float gpuCooldownTime;

	[Token(Token = "0x6000607")]
	[Address(RVA = "0x103A594", Offset = "0x103A594", VA = "0x103A594")]
	private void Start()
	{
	}

	[Token(Token = "0x6000608")]
	[Address(RVA = "0x103A798", Offset = "0x103A798", VA = "0x103A798")]
	private void Update()
	{
	}

	[Token(Token = "0x6000609")]
	[Address(RVA = "0x103A6A4", Offset = "0x103A6A4", VA = "0x103A6A4")]
	private void Apply()
	{
	}

	[Token(Token = "0x600060A")]
	[Address(RVA = "0x103A958", Offset = "0x103A958", VA = "0x103A958")]
	public GameQuality()
	{
	}
}
[Token(Token = "0x2000090")]
public class GameStateManager : SingletonBehaviour<GameStateManager>, IDebugPanelProvider
{
	[Token(Token = "0x2000318")]
	public enum State
	{
		[Token(Token = "0x4001477")]
		FrontEnd,
		[Token(Token = "0x4001478")]
		InGame,
		[Token(Token = "0x4001479")]
		ControlsSettings,
		[Token(Token = "0x400147A")]
		LoadError,
		[Token(Token = "0x400147B")]
		ChooseSaveSlot,
		[Token(Token = "0x400147C")]
		Transitioning,
		[Token(Token = "0x400147D")]
		EntitlementFail
	}

	[Token(Token = "0x2000319")]
	public delegate void OnGameStateChangedHandler(State oldState, State newState);

	[Token(Token = "0x200031A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6A80A4", Offset = "0x6A80A4")]
	private sealed class <StartSingleCityRoutine>d__41 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400147E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400147F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001480")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameStateManager <>4__this;

		[Token(Token = "0x170003A5")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60015E4")]
			[Address(RVA = "0x1059C80", Offset = "0x1059C80", VA = "0x1059C80", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003A6")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60015E6")]
			[Address(RVA = "0x1059CE8", Offset = "0x1059CE8", VA = "0x1059CE8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60015E1")]
		[Address(RVA = "0x1059A4C", Offset = "0x1059A4C", VA = "0x1059A4C")]
		[DebuggerHidden]
		public <StartSingleCityRoutine>d__41(int <>1__state)
		{
		}

		[Token(Token = "0x60015E2")]
		[Address(RVA = "0x1059A78", Offset = "0x1059A78", VA = "0x1059A78", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60015E3")]
		[Address(RVA = "0x1059A7C", Offset = "0x1059A7C", VA = "0x1059A7C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60015E5")]
		[Address(RVA = "0x1059C88", Offset = "0x1059C88", VA = "0x1059C88", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200031B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6A80B4", Offset = "0x6A80B4")]
	private sealed class <BlankStartRoutine>d__42 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001481")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001482")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001483")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameStateManager <>4__this;

		[Token(Token = "0x170003A7")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60015EA")]
			[Address(RVA = "0x103C1D0", Offset = "0x103C1D0", VA = "0x103C1D0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003A8")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60015EC")]
			[Address(RVA = "0x103C238", Offset = "0x103C238", VA = "0x103C238", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60015E7")]
		[Address(RVA = "0x103AD78", Offset = "0x103AD78", VA = "0x103AD78")]
		[DebuggerHidden]
		public <BlankStartRoutine>d__42(int <>1__state)
		{
		}

		[Token(Token = "0x60015E8")]
		[Address(RVA = "0x103C178", Offset = "0x103C178", VA = "0x103C178", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60015E9")]
		[Address(RVA = "0x103C17C", Offset = "0x103C17C", VA = "0x103C17C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60015EB")]
		[Address(RVA = "0x103C1D8", Offset = "0x103C1D8", VA = "0x103C1D8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200031C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6A80C4", Offset = "0x6A80C4")]
	private sealed class <>c__DisplayClass43_0
	{
		[Token(Token = "0x4001484")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public AsyncOperation frontEndLoadOperation;

		[Token(Token = "0x4001485")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameStateManager <>4__this;

		[Token(Token = "0x4001486")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Action<bool> <>9__1;

		[Token(Token = "0x60015ED")]
		[Address(RVA = "0x103BF70", Offset = "0x103BF70", VA = "0x103BF70")]
		public <>c__DisplayClass43_0()
		{
		}

		[Token(Token = "0x60015EE")]
		[Address(RVA = "0x103BF78", Offset = "0x103BF78", VA = "0x103BF78")]
		internal void <StartFrontEndRoutine>b__0(Message msg)
		{
		}

		[Token(Token = "0x60015EF")]
		[Address(RVA = "0x103C0E8", Offset = "0x103C0E8", VA = "0x103C0E8")]
		internal void <StartFrontEndRoutine>b__1(bool didValidate)
		{
		}
	}

	[Token(Token = "0x200031D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6A80D4", Offset = "0x6A80D4")]
	private sealed class <StartFrontEndRoutine>d__43 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001487")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001488")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001489")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameStateManager <>4__this;

		[Token(Token = "0x400148A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private <>c__DisplayClass43_0 <>8__1;

		[Token(Token = "0x400148B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool needsFrontEndLoad;

		[Token(Token = "0x400148C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
		private bool <showSplashscreens>5__2;

		[Token(Token = "0x400148D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x32")]
		private bool <allowContinue>5__3;

		[Token(Token = "0x400148E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private DateTime <splashStartTime>5__4;

		[Token(Token = "0x400148F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private string <lastSaveSlot>5__5;

		[Token(Token = "0x4001490")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private bool <shouldContinue>5__6;

		[Token(Token = "0x170003A9")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60015F3")]
			[Address(RVA = "0x103EEE8", Offset = "0x103EEE8", VA = "0x103EEE8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003AA")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60015F5")]
			[Address(RVA = "0x103EF50", Offset = "0x103EF50", VA = "0x103EF50", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60015F0")]
		[Address(RVA = "0x103ADA4", Offset = "0x103ADA4", VA = "0x103ADA4")]
		[DebuggerHidden]
		public <StartFrontEndRoutine>d__43(int <>1__state)
		{
		}

		[Token(Token = "0x60015F1")]
		[Address(RVA = "0x103E0A4", Offset = "0x103E0A4", VA = "0x103E0A4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60015F2")]
		[Address(RVA = "0x103E0A8", Offset = "0x103E0A8", VA = "0x103E0A8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60015F4")]
		[Address(RVA = "0x103EEF0", Offset = "0x103EEF0", VA = "0x103EEF0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200031E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6A80E4", Offset = "0x6A80E4")]
	private sealed class <ReturnToMainMenuRoutine>d__45 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001491")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001492")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001493")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameStateManager <>4__this;

		[Token(Token = "0x170003AB")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60015F9")]
			[Address(RVA = "0x103D884", Offset = "0x103D884", VA = "0x103D884", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003AC")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60015FB")]
			[Address(RVA = "0x103D8EC", Offset = "0x103D8EC", VA = "0x103D8EC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60015F6")]
		[Address(RVA = "0x103AE7C", Offset = "0x103AE7C", VA = "0x103AE7C")]
		[DebuggerHidden]
		public <ReturnToMainMenuRoutine>d__45(int <>1__state)
		{
		}

		[Token(Token = "0x60015F7")]
		[Address(RVA = "0x103D670", Offset = "0x103D670", VA = "0x103D670", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60015F8")]
		[Address(RVA = "0x103D674", Offset = "0x103D674", VA = "0x103D674", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60015FA")]
		[Address(RVA = "0x103D88C", Offset = "0x103D88C", VA = "0x103D88C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200031F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6A80F4", Offset = "0x6A80F4")]
	private sealed class <StartNewGameWithMenuRoomRoutine>d__47 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001494")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001495")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001496")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameStateManager <>4__this;

		[Token(Token = "0x4001497")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool skipTutorial;

		[Token(Token = "0x4001498")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string saveName;

		[Token(Token = "0x4001499")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool <shouldSavePreviousGame>5__2;

		[Token(Token = "0x170003AD")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60015FF")]
			[Address(RVA = "0x103F2D8", Offset = "0x103F2D8", VA = "0x103F2D8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003AE")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001601")]
			[Address(RVA = "0x103F340", Offset = "0x103F340", VA = "0x103F340", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60015FC")]
		[Address(RVA = "0x103AFB8", Offset = "0x103AFB8", VA = "0x103AFB8")]
		[DebuggerHidden]
		public <StartNewGameWithMenuRoomRoutine>d__47(int <>1__state)
		{
		}

		[Token(Token = "0x60015FD")]
		[Address(RVA = "0x103EF58", Offset = "0x103EF58", VA = "0x103EF58", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60015FE")]
		[Address(RVA = "0x103EF5C", Offset = "0x103EF5C", VA = "0x103EF5C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001600")]
		[Address(RVA = "0x103F2E0", Offset = "0x103F2E0", VA = "0x103F2E0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000320")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6A8104", Offset = "0x6A8104")]
	private sealed class <StartNewGameWithSingleCityRoutine>d__48 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400149A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400149B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400149C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameStateManager <>4__this;

		[Token(Token = "0x400149D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string cityInfoPath;

		[Token(Token = "0x400149E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string saveName;

		[Token(Token = "0x400149F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool <shouldSavePreviousGame>5__2;

		[Token(Token = "0x170003AF")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001605")]
			[Address(RVA = "0x103F7B0", Offset = "0x103F7B0", VA = "0x103F7B0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003B0")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001607")]
			[Address(RVA = "0x103F818", Offset = "0x103F818", VA = "0x103F818", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001602")]
		[Address(RVA = "0x103AFE4", Offset = "0x103AFE4", VA = "0x103AFE4")]
		[DebuggerHidden]
		public <StartNewGameWithSingleCityRoutine>d__48(int <>1__state)
		{
		}

		[Token(Token = "0x6001603")]
		[Address(RVA = "0x103F348", Offset = "0x103F348", VA = "0x103F348", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001604")]
		[Address(RVA = "0x103F34C", Offset = "0x103F34C", VA = "0x103F34C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001606")]
		[Address(RVA = "0x103F7B8", Offset = "0x103F7B8", VA = "0x103F7B8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000321")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6A8114", Offset = "0x6A8114")]
	private sealed class <LoadGameWithMenuRoomRoutine>d__50 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40014A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40014A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40014A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameStateManager <>4__this;

		[Token(Token = "0x40014A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string saveName;

		[Token(Token = "0x40014A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool tryLoadBackup;

		[Token(Token = "0x40014A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
		private bool <shouldSavePreviousGame>5__2;

		[Token(Token = "0x170003B1")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600160B")]
			[Address(RVA = "0x103D190", Offset = "0x103D190", VA = "0x103D190", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003B2")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600160D")]
			[Address(RVA = "0x103D1F8", Offset = "0x103D1F8", VA = "0x103D1F8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001608")]
		[Address(RVA = "0x103B114", Offset = "0x103B114", VA = "0x103B114")]
		[DebuggerHidden]
		public <LoadGameWithMenuRoomRoutine>d__50(int <>1__state)
		{
		}

		[Token(Token = "0x6001609")]
		[Address(RVA = "0x103CA74", Offset = "0x103CA74", VA = "0x103CA74", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600160A")]
		[Address(RVA = "0x103CA78", Offset = "0x103CA78", VA = "0x103CA78", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600160C")]
		[Address(RVA = "0x103D198", Offset = "0x103D198", VA = "0x103D198", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000322")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6A8124", Offset = "0x6A8124")]
	private sealed class <LoadGameWithSingleCityRoutine>d__51 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40014A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40014A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40014A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameStateManager <>4__this;

		[Token(Token = "0x40014A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string saveName;

		[Token(Token = "0x40014AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool <shouldSavePreviousGame>5__2;

		[Token(Token = "0x170003B3")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001611")]
			[Address(RVA = "0x103D600", Offset = "0x103D600", VA = "0x103D600", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003B4")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001613")]
			[Address(RVA = "0x103D668", Offset = "0x103D668", VA = "0x103D668", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600160E")]
		[Address(RVA = "0x103B140", Offset = "0x103B140", VA = "0x103B140")]
		[DebuggerHidden]
		public <LoadGameWithSingleCityRoutine>d__51(int <>1__state)
		{
		}

		[Token(Token = "0x600160F")]
		[Address(RVA = "0x103D200", Offset = "0x103D200", VA = "0x103D200", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001610")]
		[Address(RVA = "0x103D204", Offset = "0x103D204", VA = "0x103D204", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001612")]
		[Address(RVA = "0x103D608", Offset = "0x103D608", VA = "0x103D608", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x2000323")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6A8134", Offset = "0x6A8134")]
	private sealed class <>c
	{
		[Token(Token = "0x40014AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x40014AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Action <>9__57_0;

		[Token(Token = "0x40014AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static Action<bool> <>9__61_0;

		[Token(Token = "0x6001615")]
		[Address(RVA = "0x103BE64", Offset = "0x103BE64", VA = "0x103BE64")]
		public <>c()
		{
		}

		[Token(Token = "0x6001616")]
		[Address(RVA = "0x103BE6C", Offset = "0x103BE6C", VA = "0x103BE6C")]
		internal void <GainedFocus>b__57_0()
		{
		}

		[Token(Token = "0x6001617")]
		[Address(RVA = "0x103BED4", Offset = "0x103BED4", VA = "0x103BED4")]
		internal void <ShowControlsSettingsAndStartNewGameRoutine>b__61_0(bool clickedYes)
		{
		}
	}

	[Token(Token = "0x2000324")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6A8144", Offset = "0x6A8144")]
	private sealed class <LoadErrorRoutine>d__59 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40014AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40014AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40014B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameStateManager <>4__this;

		[Token(Token = "0x170003B5")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600161B")]
			[Address(RVA = "0x103CA04", Offset = "0x103CA04", VA = "0x103CA04", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003B6")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600161D")]
			[Address(RVA = "0x103CA6C", Offset = "0x103CA6C", VA = "0x103CA6C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001618")]
		[Address(RVA = "0x103B52C", Offset = "0x103B52C", VA = "0x103B52C")]
		[DebuggerHidden]
		public <LoadErrorRoutine>d__59(int <>1__state)
		{
		}

		[Token(Token = "0x6001619")]
		[Address(RVA = "0x103C66C", Offset = "0x103C66C", VA = "0x103C66C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600161A")]
		[Address(RVA = "0x103C670", Offset = "0x103C670", VA = "0x103C670", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600161C")]
		[Address(RVA = "0x103CA0C", Offset = "0x103CA0C", VA = "0x103CA0C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000325")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6A8154", Offset = "0x6A8154")]
	private sealed class <ShowControlsSettingsAndStartNewGameRoutine>d__61 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40014B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40014B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40014B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameStateManager <>4__this;

		[Token(Token = "0x40014B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool allowTutorialSkip;

		[Token(Token = "0x170003B7")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001621")]
			[Address(RVA = "0x103E034", Offset = "0x103E034", VA = "0x103E034", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003B8")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001623")]
			[Address(RVA = "0x103E09C", Offset = "0x103E09C", VA = "0x103E09C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600161E")]
		[Address(RVA = "0x103B7C4", Offset = "0x103B7C4", VA = "0x103B7C4")]
		[DebuggerHidden]
		public <ShowControlsSettingsAndStartNewGameRoutine>d__61(int <>1__state)
		{
		}

		[Token(Token = "0x600161F")]
		[Address(RVA = "0x103D8F4", Offset = "0x103D8F4", VA = "0x103D8F4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001620")]
		[Address(RVA = "0x103D8F8", Offset = "0x103D8F8", VA = "0x103D8F8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001622")]
		[Address(RVA = "0x103E03C", Offset = "0x103E03C", VA = "0x103E03C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000326")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6A8164", Offset = "0x6A8164")]
	private sealed class <FailEntitlementCheckRoutine>d__63 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40014B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40014B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40014B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameStateManager <>4__this;

		[Token(Token = "0x170003B9")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001627")]
			[Address(RVA = "0x103C5FC", Offset = "0x103C5FC", VA = "0x103C5FC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003BA")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001629")]
			[Address(RVA = "0x103C664", Offset = "0x103C664", VA = "0x103C664", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001624")]
		[Address(RVA = "0x103B8D0", Offset = "0x103B8D0", VA = "0x103B8D0")]
		[DebuggerHidden]
		public <FailEntitlementCheckRoutine>d__63(int <>1__state)
		{
		}

		[Token(Token = "0x6001625")]
		[Address(RVA = "0x103C240", Offset = "0x103C240", VA = "0x103C240", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001626")]
		[Address(RVA = "0x103C244", Offset = "0x103C244", VA = "0x103C244", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001628")]
		[Address(RVA = "0x103C604", Offset = "0x103C604", VA = "0x103C604", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40003A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OnGameStateChangedHandler onGameStateChanged;

	[Token(Token = "0x40003A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Action onNewGameStarted;

	[Token(Token = "0x40003AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Action onGameLoaded;

	[Token(Token = "0x40003AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public string mainSceneName;

	[Token(Token = "0x40003AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public string frontEndSceneName;

	[Token(Token = "0x40003AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6A8CAC", Offset = "0x6A8CAC")]
	private string <saveSlotName>k__BackingField;

	[Token(Token = "0x40003AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float autoSaveFrequencySeconds;

	[Token(Token = "0x40003AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6A8CBC", Offset = "0x6A8CBC")]
	private float <secondsSinceAutoSave>k__BackingField;

	[Token(Token = "0x40003B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public LoadScreen loadScreen;

	[Token(Token = "0x40003B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public bool skipSplashScreensInEditor;

	[Token(Token = "0x40003B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
	public bool skipAutoLoadInEditor;

	[Token(Token = "0x40003B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5A")]
	public bool skipStartupSettingsInEditor;

	[Token(Token = "0x40003B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5B")]
	public bool skipControlsTutorialInEditor;

	[Token(Token = "0x40003B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public SystemLanguage editorLanguage;

	[Token(Token = "0x40003B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public bool isReleaseBuild;

	[Token(Token = "0x40003B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6A8CCC", Offset = "0x6A8CCC")]
	private bool <hasInputFocus>k__BackingField;

	[Token(Token = "0x40003B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x62")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6A8CDC", Offset = "0x6A8CDC")]
	private bool <failedIntegrityValidation>k__BackingField;

	[Token(Token = "0x40003B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private State _state;

	[Token(Token = "0x17000143")]
	private bool hasAccess
	{
		[Token(Token = "0x600060C")]
		[Address(RVA = "0x103A9BC", Offset = "0x103A9BC", VA = "0x103A9BC")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000144")]
	public string saveSlotName
	{
		[Token(Token = "0x600060E")]
		[Address(RVA = "0x103A9C8", Offset = "0x103A9C8", VA = "0x103A9C8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6AF400", Offset = "0x6AF400")]
		get
		{
			return null;
		}
		[Token(Token = "0x600060F")]
		[Address(RVA = "0x103A9D0", Offset = "0x103A9D0", VA = "0x103A9D0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6AF410", Offset = "0x6AF410")]
		private set
		{
		}
	}

	[Token(Token = "0x17000145")]
	public float secondsSinceAutoSave
	{
		[Token(Token = "0x6000610")]
		[Address(RVA = "0x103A9D8", Offset = "0x103A9D8", VA = "0x103A9D8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6AF420", Offset = "0x6AF420")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000611")]
		[Address(RVA = "0x103A9E0", Offset = "0x103A9E0", VA = "0x103A9E0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6AF430", Offset = "0x6AF430")]
		private set
		{
		}
	}

	[Token(Token = "0x17000146")]
	public bool hasInputFocus
	{
		[Token(Token = "0x6000612")]
		[Address(RVA = "0x103A9E8", Offset = "0x103A9E8", VA = "0x103A9E8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6AF440", Offset = "0x6AF440")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000613")]
		[Address(RVA = "0x103A9F0", Offset = "0x103A9F0", VA = "0x103A9F0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6AF450", Offset = "0x6AF450")]
		private set
		{
		}
	}

	[Token(Token = "0x17000147")]
	public bool failedIntegrityValidation
	{
		[Token(Token = "0x6000614")]
		[Address(RVA = "0x103A9FC", Offset = "0x103A9FC", VA = "0x103A9FC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6AF460", Offset = "0x6AF460")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000615")]
		[Address(RVA = "0x103AA04", Offset = "0x103AA04", VA = "0x103AA04")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6AF470", Offset = "0x6AF470")]
		private set
		{
		}
	}

	[Token(Token = "0x17000148")]
	public State state
	{
		[Token(Token = "0x6000616")]
		[Address(RVA = "0x103AA10", Offset = "0x103AA10", VA = "0x103AA10")]
		get
		{
			return default(State);
		}
		[Token(Token = "0x6000617")]
		[Address(RVA = "0x103AA18", Offset = "0x103AA18", VA = "0x103AA18")]
		set
		{
		}
	}

	[Token(Token = "0x17000149")]
	public Player player
	{
		[Token(Token = "0x6000618")]
		[Address(RVA = "0x103AA48", Offset = "0x103AA48", VA = "0x103AA48")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600060D")]
	[Address(RVA = "0x103A9C4", Offset = "0x103A9C4", VA = "0x103A9C4", Slot = "6")]
	public void OnDebugPanel()
	{
	}

	[Token(Token = "0x6000619")]
	[Address(RVA = "0x103AA98", Offset = "0x103AA98", VA = "0x103AA98")]
	private void Start()
	{
	}

	[Token(Token = "0x600061A")]
	[Address(RVA = "0x103AC14", Offset = "0x103AC14", VA = "0x103AC14")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6AF480", Offset = "0x6AF480")]
	private IEnumerator StartSingleCityRoutine()
	{
		return null;
	}

	[Token(Token = "0x600061B")]
	[Address(RVA = "0x103AD08", Offset = "0x103AD08", VA = "0x103AD08")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6AF4E4", Offset = "0x6AF4E4")]
	private IEnumerator BlankStartRoutine()
	{
		return null;
	}

	[Token(Token = "0x600061C")]
	[Address(RVA = "0x103AC84", Offset = "0x103AC84", VA = "0x103AC84")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6AF548", Offset = "0x6AF548")]
	private IEnumerator StartFrontEndRoutine(bool needsFrontEndLoad = false)
	{
		return null;
	}

	[Token(Token = "0x600061D")]
	[Address(RVA = "0x103ADD0", Offset = "0x103ADD0", VA = "0x103ADD0")]
	public void ReturnToMainMenu()
	{
	}

	[Token(Token = "0x600061E")]
	[Address(RVA = "0x103AE0C", Offset = "0x103AE0C", VA = "0x103AE0C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6AF5AC", Offset = "0x6AF5AC")]
	private IEnumerator ReturnToMainMenuRoutine()
	{
		return null;
	}

	[Token(Token = "0x600061F")]
	[Address(RVA = "0x1039700", Offset = "0x1039700", VA = "0x1039700")]
	public void StartNewGame(string saveName, [Optional] string cityInfoPath, bool skipTutorial = false)
	{
	}

	[Token(Token = "0x6000620")]
	[Address(RVA = "0x103AEA8", Offset = "0x103AEA8", VA = "0x103AEA8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6AF610", Offset = "0x6AF610")]
	private IEnumerator StartNewGameWithMenuRoomRoutine(string saveName, bool skipTutorial)
	{
		return null;
	}

	[Token(Token = "0x6000621")]
	[Address(RVA = "0x103AF34", Offset = "0x103AF34", VA = "0x103AF34")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6AF674", Offset = "0x6AF674")]
	private IEnumerator StartNewGameWithSingleCityRoutine(string saveName, string cityInfoPath)
	{
		return null;
	}

	[Token(Token = "0x6000622")]
	[Address(RVA = "0x103942C", Offset = "0x103942C", VA = "0x103942C")]
	public void LoadGame(string saveName)
	{
	}

	[Token(Token = "0x6000623")]
	[Address(RVA = "0x103B010", Offset = "0x103B010", VA = "0x103B010")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6AF6D8", Offset = "0x6AF6D8")]
	private IEnumerator LoadGameWithMenuRoomRoutine(string saveName, bool tryLoadBackup = false)
	{
		return null;
	}

	[Token(Token = "0x6000624")]
	[Address(RVA = "0x103B098", Offset = "0x103B098", VA = "0x103B098")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6AF73C", Offset = "0x6AF73C")]
	private IEnumerator LoadGameWithSingleCityRoutine(string saveName)
	{
		return null;
	}

	[Token(Token = "0x6000625")]
	[Address(RVA = "0x103B16C", Offset = "0x103B16C", VA = "0x103B16C")]
	public void AutoSave()
	{
	}

	[Token(Token = "0x6000626")]
	[Address(RVA = "0x103B25C", Offset = "0x103B25C", VA = "0x103B25C")]
	public void AutoSaveSynchronous()
	{
	}

	[Token(Token = "0x6000627")]
	[Address(RVA = "0x103B300", Offset = "0x103B300", VA = "0x103B300")]
	public void ChangeSaveSlot(string newSlotName)
	{
	}

	[Token(Token = "0x6000628")]
	[Address(RVA = "0x103B30C", Offset = "0x103B30C", VA = "0x103B30C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000629")]
	[Address(RVA = "0x103B36C", Offset = "0x103B36C", VA = "0x103B36C")]
	private void OnApplicationPause(bool paused)
	{
	}

	[Token(Token = "0x600062A")]
	[Address(RVA = "0x103B38C", Offset = "0x103B38C", VA = "0x103B38C")]
	private void GainedFocus()
	{
	}

	[Token(Token = "0x600062B")]
	[Address(RVA = "0x103B494", Offset = "0x103B494", VA = "0x103B494")]
	private void LostFocus()
	{
	}

	[Token(Token = "0x600062C")]
	[Address(RVA = "0x103B4BC", Offset = "0x103B4BC", VA = "0x103B4BC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6AF7A0", Offset = "0x6AF7A0")]
	private IEnumerator LoadErrorRoutine()
	{
		return null;
	}

	[Token(Token = "0x600062D")]
	[Address(RVA = "0x103B558", Offset = "0x103B558", VA = "0x103B558")]
	private void ChooseSaveSlot()
	{
	}

	[Token(Token = "0x600062E")]
	[Address(RVA = "0x103B740", Offset = "0x103B740", VA = "0x103B740")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6AF804", Offset = "0x6AF804")]
	private IEnumerator ShowControlsSettingsAndStartNewGameRoutine(bool allowTutorialSkip)
	{
		return null;
	}

	[Token(Token = "0x600062F")]
	[Address(RVA = "0x103B7F0", Offset = "0x103B7F0", VA = "0x103B7F0")]
	private void FailEntitlementCheck()
	{
	}

	[Token(Token = "0x6000630")]
	[Address(RVA = "0x103B860", Offset = "0x103B860", VA = "0x103B860")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6AF868", Offset = "0x6AF868")]
	private IEnumerator FailEntitlementCheckRoutine()
	{
		return null;
	}

	[Token(Token = "0x6000631")]
	[Address(RVA = "0x103B8FC", Offset = "0x103B8FC", VA = "0x103B8FC")]
	private void FireBootAnalytics()
	{
	}

	[Token(Token = "0x6000632")]
	[Address(RVA = "0x103BCA8", Offset = "0x103BCA8", VA = "0x103BCA8")]
	public GameStateManager()
	{
	}

	[Token(Token = "0x6000633")]
	[Address(RVA = "0x103BD30", Offset = "0x103BD30", VA = "0x103BD30")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6AF8CC", Offset = "0x6AF8CC")]
	private void <AutoSave>b__52_0(bool result)
	{
	}

	[Token(Token = "0x6000634")]
	[Address(RVA = "0x103BD3C", Offset = "0x103BD3C", VA = "0x103BD3C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6AF8DC", Offset = "0x6AF8DC")]
	private void <ChooseSaveSlot>b__60_0(SaveSlot slot)
	{
	}
}
[Token(Token = "0x2000091")]
public class LightingParams
{
	[Token(Token = "0x40003BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Vector3 sunDirection;

	[Token(Token = "0x40003BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Color sunColor;

	[Token(Token = "0x40003BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public Color groundColor;

	[Token(Token = "0x40003BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public Color skyColor;

	[Token(Token = "0x6000635")]
	[Address(RVA = "0x1091370", Offset = "0x1091370", VA = "0x1091370")]
	public LightingParams()
	{
	}

	[Token(Token = "0x6000636")]
	[Address(RVA = "0x1091578", Offset = "0x1091578", VA = "0x1091578")]
	public Color ApplyLighting(Color baseColor, Vector3 normal, bool inShadow)
	{
		return default(Color);
	}

	[Token(Token = "0x6000637")]
	[Address(RVA = "0x10917E0", Offset = "0x10917E0", VA = "0x10917E0")]
	public Color ApplyLightingGamma(Color baseColor, Vector3 normal, bool inShadow)
	{
		return default(Color);
	}
}
[Token(Token = "0x2000092")]
public interface ISaveInterface
{
	[Token(Token = "0x1700014A")]
	Type saveModuleDataType
	{
		[Token(Token = "0x6000638")]
		get;
	}

	[Token(Token = "0x6000639")]
	SaveSystem.ModuleData OnSave();

	[Token(Token = "0x600063A")]
	void OnLoad(SaveSystem.SaveGame saveGame, SaveSystem.ModuleData moduleData);
}
[Token(Token = "0x2000093")]
public interface ILoadAsyncInterface
{
	[Token(Token = "0x600063B")]
	IEnumerator OnLoadAsync(SaveSystem.SaveGame saveGame, SaveSystem.ModuleData moduleData);
}
[Token(Token = "0x2000094")]
public class SaveSystem : SingletonBehaviour<SaveSystem>
{
	[Serializable]
	[Token(Token = "0x2000327")]
	public class Metadata
	{
		[Token(Token = "0x40014B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string name;

		[Token(Token = "0x40014B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int version;

		[Token(Token = "0x40014BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public DateTime creationTime;

		[Token(Token = "0x40014BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float percentageComplete;

		[Token(Token = "0x40014BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public bool usesMenuRoom;

		[Token(Token = "0x600162A")]
		[Address(RVA = "0x104736C", Offset = "0x104736C", VA = "0x104736C")]
		public Metadata()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x2000328")]
	public class SaveGame
	{
		[Token(Token = "0x40014BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public List<ModuleData> modules;

		[Token(Token = "0x40014BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6AC654", Offset = "0x6AC654")]
		private Metadata <metadata>k__BackingField;

		[Token(Token = "0x170003BB")]
		[XmlIgnore]
		public Metadata metadata
		{
			[Token(Token = "0x600162B")]
			[Address(RVA = "0x104B418", Offset = "0x104B418", VA = "0x104B418")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6B3858", Offset = "0x6B3858")]
			get
			{
				return null;
			}
			[Token(Token = "0x600162C")]
			[Address(RVA = "0x104B420", Offset = "0x104B420", VA = "0x104B420")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6B3868", Offset = "0x6B3868")]
			set
			{
			}
		}

		[Token(Token = "0x600162D")]
		[Address(RVA = "0x1046400", Offset = "0x1046400", VA = "0x1046400")]
		public SaveGame()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x2000329")]
	public class ModuleData
	{
		[Token(Token = "0x40014BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string name;

		[Token(Token = "0x600162E")]
		[Address(RVA = "0x104B1D8", Offset = "0x104B1D8", VA = "0x104B1D8", Slot = "4")]
		public virtual void OnPreWrite()
		{
		}

		[Token(Token = "0x600162F")]
		[Address(RVA = "0x104B1DC", Offset = "0x104B1DC", VA = "0x104B1DC")]
		public static string MapToString(short[] map)
		{
			return null;
		}

		[Token(Token = "0x6001630")]
		[Address(RVA = "0x104B310", Offset = "0x104B310", VA = "0x104B310")]
		public static void StringToMap(string stringData, short[] map)
		{
		}

		[Token(Token = "0x6001631")]
		[Address(RVA = "0x104B410", Offset = "0x104B410", VA = "0x104B410")]
		public ModuleData()
		{
		}
	}

	[Token(Token = "0x200032A")]
	private class SaveParameters
	{
		[Token(Token = "0x40014C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string filename;

		[Token(Token = "0x40014C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<Type> moduleDataTypes;

		[Token(Token = "0x40014C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SaveGame saveData;

		[Token(Token = "0x40014C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Metadata metadata;

		[Token(Token = "0x40014C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public byte[] screenshotData;

		[Token(Token = "0x40014C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public bool result;

		[Token(Token = "0x40014C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public byte[] rawScreenshotData;

		[Token(Token = "0x6001632")]
		[Address(RVA = "0x1047E04", Offset = "0x1047E04", VA = "0x1047E04")]
		public SaveParameters()
		{
		}
	}

	[Token(Token = "0x200032B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6A8174", Offset = "0x6A8174")]
	private sealed class <>c__DisplayClass29_0
	{
		[Token(Token = "0x40014C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public SaveSystem <>4__this;

		[Token(Token = "0x40014C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public SaveParameters saveParameters;

		[Token(Token = "0x6001633")]
		[Address(RVA = "0x1049604", Offset = "0x1049604", VA = "0x1049604")]
		public <>c__DisplayClass29_0()
		{
		}

		[Token(Token = "0x6001634")]
		[Address(RVA = "0x104960C", Offset = "0x104960C", VA = "0x104960C")]
		internal void <SaveAsyncRoutine>b__0()
		{
		}
	}

	[Token(Token = "0x200032C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6A8184", Offset = "0x6A8184")]
	private sealed class <SaveAsyncRoutine>d__29 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40014C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40014CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40014CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SaveSystem <>4__this;

		[Token(Token = "0x40014CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string filename;

		[Token(Token = "0x40014CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private <>c__DisplayClass29_0 <>8__1;

		[Token(Token = "0x40014CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Action<bool> onSaveCompleted;

		[Token(Token = "0x40014CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Thread <saveThread>5__2;

		[Token(Token = "0x170003BC")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001638")]
			[Address(RVA = "0x104B168", Offset = "0x104B168", VA = "0x104B168", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003BD")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600163A")]
			[Address(RVA = "0x104B1D0", Offset = "0x104B1D0", VA = "0x104B1D0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001635")]
		[Address(RVA = "0x1047E90", Offset = "0x1047E90", VA = "0x1047E90")]
		[DebuggerHidden]
		public <SaveAsyncRoutine>d__29(int <>1__state)
		{
		}

		[Token(Token = "0x6001636")]
		[Address(RVA = "0x104AB94", Offset = "0x104AB94", VA = "0x104AB94", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001637")]
		[Address(RVA = "0x104AB98", Offset = "0x104AB98", VA = "0x104AB98", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001639")]
		[Address(RVA = "0x104B170", Offset = "0x104B170", VA = "0x104B170", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200032D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6A8194", Offset = "0x6A8194")]
	private sealed class <>c__DisplayClass39_0
	{
		[Token(Token = "0x40014D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public ModuleData data;

		[Token(Token = "0x600163B")]
		[Address(RVA = "0x104962C", Offset = "0x104962C", VA = "0x104962C")]
		public <>c__DisplayClass39_0()
		{
		}

		[Token(Token = "0x600163C")]
		[Address(RVA = "0x1049634", Offset = "0x1049634", VA = "0x1049634")]
		internal bool <LoadRoutine>b__0(ISaveInterface x)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x200032E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6A81A4", Offset = "0x6A81A4")]
	private sealed class <LoadRoutine>d__39 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40014D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40014D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40014D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SaveSystem <>4__this;

		[Token(Token = "0x40014D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string filename;

		[Token(Token = "0x40014D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private List<ISaveInterface> <saveModules>5__2;

		[Token(Token = "0x40014D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private SaveGame <saveGame>5__3;

		[Token(Token = "0x40014D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private List<ModuleData>.Enumerator <>7__wrap3;

		[Token(Token = "0x40014D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private ISaveInterface <moduleInterface>5__5;

		[Token(Token = "0x40014D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private IEnumerator <progress>5__6;

		[Token(Token = "0x40014DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private bool <isLoadingModule>5__7;

		[Token(Token = "0x170003BE")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001641")]
			[Address(RVA = "0x104AB24", Offset = "0x104AB24", VA = "0x104AB24", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003BF")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001643")]
			[Address(RVA = "0x104AB8C", Offset = "0x104AB8C", VA = "0x104AB8C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600163D")]
		[Address(RVA = "0x10489D0", Offset = "0x10489D0", VA = "0x10489D0")]
		[DebuggerHidden]
		public <LoadRoutine>d__39(int <>1__state)
		{
		}

		[Token(Token = "0x600163E")]
		[Address(RVA = "0x104973C", Offset = "0x104973C", VA = "0x104973C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600163F")]
		[Address(RVA = "0x10497C0", Offset = "0x10497C0", VA = "0x10497C0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001640")]
		[Address(RVA = "0x1049768", Offset = "0x1049768", VA = "0x1049768")]
		private void <>m__Finally1()
		{
		}

		[Token(Token = "0x6001642")]
		[Address(RVA = "0x104AB2C", Offset = "0x104AB2C", VA = "0x104AB2C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40003BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int maxSlots;

	[Token(Token = "0x40003BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int saveVersion;

	[Token(Token = "0x40003C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int minSupportedVersion;

	[Token(Token = "0x40003C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Camera captureCamera;

	[Token(Token = "0x40003C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public int screenshotWidth;

	[Token(Token = "0x40003C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public int screenshotHeight;

	[Token(Token = "0x40003C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Action<Metadata> metadataProvider;

	[Token(Token = "0x40003C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool debugValidateSaveFormat;

	[Token(Token = "0x40003C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6A8CEC", Offset = "0x6A8CEC")]
	private bool <isAsyncSaving>k__BackingField;

	[Token(Token = "0x40003C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private List<Type> additionalModuleDataTypes;

	[Token(Token = "0x40003C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Dictionary<string, Texture2D> cachedScreenshots;

	[Token(Token = "0x40003C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private HashSet<Type> validatedTypes;

	[Token(Token = "0x40003CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private string validationTree;

	[Token(Token = "0x40003CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6A8CFC", Offset = "0x6A8CFC")]
	private bool <wasLoadSuccessful>k__BackingField;

	[Token(Token = "0x1700014B")]
	public bool isAsyncSaving
	{
		[Token(Token = "0x600063C")]
		[Address(RVA = "0x1046034", Offset = "0x1046034", VA = "0x1046034")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6AF8EC", Offset = "0x6AF8EC")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600063D")]
		[Address(RVA = "0x104603C", Offset = "0x104603C", VA = "0x104603C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6AF8FC", Offset = "0x6AF8FC")]
		private set
		{
		}
	}

	[Token(Token = "0x1700014C")]
	public bool wasLoadSuccessful
	{
		[Token(Token = "0x600064B")]
		[Address(RVA = "0x1048844", Offset = "0x1048844", VA = "0x1048844")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6AF970", Offset = "0x6AF970")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600064C")]
		[Address(RVA = "0x104884C", Offset = "0x104884C", VA = "0x104884C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6AF980", Offset = "0x6AF980")]
		private set
		{
		}
	}

	[Token(Token = "0x600063E")]
	[Address(RVA = "0x1046048", Offset = "0x1046048", VA = "0x1046048")]
	public void AddAdditionalModuleDataType(Type type)
	{
	}

	[Token(Token = "0x600063F")]
	[Address(RVA = "0x1045954", Offset = "0x1045954", VA = "0x1045954")]
	public static string GetSlotName(int index)
	{
		return null;
	}

	[Token(Token = "0x6000640")]
	[Address(RVA = "0x10460E0", Offset = "0x10460E0", VA = "0x10460E0")]
	public string[] GetSaveFiles()
	{
		return null;
	}

	[Token(Token = "0x6000641")]
	[Address(RVA = "0x1046134", Offset = "0x1046134", VA = "0x1046134")]
	private void GenerateSaveGameData(out SaveGame saveGame, out List<Type> moduleDataTypes)
	{
	}

	[Token(Token = "0x6000642")]
	[Address(RVA = "0x1046470", Offset = "0x1046470", VA = "0x1046470")]
	private void ValidateObject(string path, string name, object obj, int indentation = 0)
	{
	}

	[Token(Token = "0x6000643")]
	[Address(RVA = "0x1047108", Offset = "0x1047108", VA = "0x1047108")]
	private void ValidateSaveGame(SaveGame saveGame)
	{
	}

	[Token(Token = "0x6000644")]
	[Address(RVA = "0x10472A4", Offset = "0x10472A4", VA = "0x10472A4")]
	private Metadata GenerateMetadata()
	{
		return null;
	}

	[Token(Token = "0x6000645")]
	[Address(RVA = "0x1047374", Offset = "0x1047374", VA = "0x1047374")]
	private void SaveToDisk(SaveParameters parameters)
	{
	}

	[Token(Token = "0x6000646")]
	[Address(RVA = "0x1047D18", Offset = "0x1047D18", VA = "0x1047D18")]
	private SaveParameters GenerateSaveParameters(string filename)
	{
		return null;
	}

	[Token(Token = "0x6000647")]
	[Address(RVA = "0x1047E0C", Offset = "0x1047E0C", VA = "0x1047E0C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6AF90C", Offset = "0x6AF90C")]
	private IEnumerator SaveAsyncRoutine(string filename, Action<bool> onSaveCompleted)
	{
		return null;
	}

	[Token(Token = "0x6000648")]
	[Address(RVA = "0x1047EBC", Offset = "0x1047EBC", VA = "0x1047EBC")]
	public void SaveAsync(string filename, Action<bool> onSaveCompleted)
	{
	}

	[Token(Token = "0x6000649")]
	[Address(RVA = "0x1047F68", Offset = "0x1047F68", VA = "0x1047F68")]
	public bool Save(string filename)
	{
		return default(bool);
	}

	[Token(Token = "0x600064A")]
	[Address(RVA = "0x10481E8", Offset = "0x10481E8", VA = "0x10481E8")]
	private Stream LoadStreamFromFile(string filename, string streamName)
	{
		return null;
	}

	[Token(Token = "0x600064D")]
	[Address(RVA = "0x1048858", Offset = "0x1048858", VA = "0x1048858")]
	public Coroutine LoadAsync(string filename)
	{
		return null;
	}

	[Token(Token = "0x600064E")]
	[Address(RVA = "0x1048900", Offset = "0x1048900", VA = "0x1048900")]
	private void LogLoadError(string errorMessage)
	{
	}

	[Token(Token = "0x600064F")]
	[Address(RVA = "0x1048884", Offset = "0x1048884", VA = "0x1048884")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6AF990", Offset = "0x6AF990")]
	private IEnumerator LoadRoutine(string filename)
	{
		return null;
	}

	[Token(Token = "0x6000650")]
	[Address(RVA = "0x10489FC", Offset = "0x10489FC", VA = "0x10489FC")]
	public bool Load(string filename)
	{
		return default(bool);
	}

	[Token(Token = "0x6000651")]
	[Address(RVA = "0x1048AD0", Offset = "0x1048AD0", VA = "0x1048AD0")]
	private Metadata LoadMetadataInternal(string filename)
	{
		return null;
	}

	[Token(Token = "0x6000652")]
	[Address(RVA = "0x10450E0", Offset = "0x10450E0", VA = "0x10450E0")]
	public Metadata LoadMetadata(string filename)
	{
		return null;
	}

	[Token(Token = "0x6000653")]
	[Address(RVA = "0x1048F50", Offset = "0x1048F50", VA = "0x1048F50")]
	private Camera GetCaptureCamera()
	{
		return null;
	}

	[Token(Token = "0x6000654")]
	[Address(RVA = "0x10490AC", Offset = "0x10490AC", VA = "0x10490AC")]
	public RenderTexture CaptureScreenshotToRenderTexture()
	{
		return null;
	}

	[Token(Token = "0x6000655")]
	[Address(RVA = "0x1047FC8", Offset = "0x1047FC8", VA = "0x1047FC8")]
	public byte[] CaptureScreenshot()
	{
		return null;
	}

	[Token(Token = "0x6000656")]
	[Address(RVA = "0x10491A8", Offset = "0x10491A8", VA = "0x10491A8")]
	private Texture2D LoadScreenshotInternal(string filename)
	{
		return null;
	}

	[Token(Token = "0x6000657")]
	[Address(RVA = "0x1045190", Offset = "0x1045190", VA = "0x1045190")]
	public Texture2D LoadScreenshot(string filename)
	{
		return null;
	}

	[Token(Token = "0x6000658")]
	[Address(RVA = "0x1049310", Offset = "0x1049310", VA = "0x1049310")]
	public bool DoesSaveExist(string filename)
	{
		return default(bool);
	}

	[Token(Token = "0x6000659")]
	[Address(RVA = "0x1048EEC", Offset = "0x1048EEC", VA = "0x1048EEC")]
	public bool DoesBackupExist(string filename)
	{
		return default(bool);
	}

	[Token(Token = "0x600065A")]
	[Address(RVA = "0x1049328", Offset = "0x1049328", VA = "0x1049328")]
	private bool CanLoadSaveInternal(string filename)
	{
		return default(bool);
	}

	[Token(Token = "0x600065B")]
	[Address(RVA = "0x1045050", Offset = "0x1045050", VA = "0x1045050")]
	public bool CanLoadSave(string filename)
	{
		return default(bool);
	}

	[Token(Token = "0x600065C")]
	[Address(RVA = "0x1045D50", Offset = "0x1045D50", VA = "0x1045D50")]
	public void Delete(string filename)
	{
	}

	[Token(Token = "0x600065D")]
	[Address(RVA = "0x1048E70", Offset = "0x1048E70", VA = "0x1048E70")]
	private string FixupPath(string filename)
	{
		return null;
	}

	[Token(Token = "0x600065E")]
	[Address(RVA = "0x1049380", Offset = "0x1049380", VA = "0x1049380")]
	public void RestoreFromBackup(string filename)
	{
	}

	[Token(Token = "0x600065F")]
	[Address(RVA = "0x1049510", Offset = "0x1049510", VA = "0x1049510")]
	public SaveSystem()
	{
	}
}
[Token(Token = "0x2000095")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x6A7570", Offset = "0x6A7570")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x6A7570", Offset = "0x6A7570")]
public class TileMap : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x200032F")]
	public class InitialState
	{
		[Token(Token = "0x40014DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int[] savedVertIndex;

		[Token(Token = "0x40014DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector3[] displacement;

		[Token(Token = "0x6001644")]
		[Address(RVA = "0x1078770", Offset = "0x1078770", VA = "0x1078770")]
		public InitialState()
		{
		}
	}

	[Token(Token = "0x2000330")]
	public struct Tile
	{
		[Token(Token = "0x40014DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public byte tileType;

		[Token(Token = "0x40014DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
		public byte rotation;

		[Token(Token = "0x40014DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public Vector3 displacement;

		[Token(Token = "0x40014E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float height;

		[Token(Token = "0x40014E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public Color baseColor;

		[Token(Token = "0x40014E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public int vertIndex;

		[Token(Token = "0x6001645")]
		[Address(RVA = "0x721B00", Offset = "0x721B00", VA = "0x721B00")]
		public Tile(byte tileType, byte rotation)
		{
		}

		[Token(Token = "0x6001646")]
		[Address(RVA = "0x721B08", Offset = "0x721B08", VA = "0x721B08")]
		public void CopyFrom(Tile other)
		{
		}
	}

	[Token(Token = "0x2000331")]
	public struct BatchedVertex
	{
		[Token(Token = "0x40014E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float3 pos;

		[Token(Token = "0x40014E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public sbyte4 normal;

		[Token(Token = "0x40014E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Color32 color;

		[Token(Token = "0x40014E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public half2 uv;
	}

	[Token(Token = "0x2000332")]
	public class State
	{
		[Token(Token = "0x40014E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Tile[] tiles;

		[Token(Token = "0x40014E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public NativeArray<BatchedVertex> batchedVertices;

		[Token(Token = "0x40014E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public NativeArray<ushort> indexBuffer;

		[Token(Token = "0x170003C0")]
		public int vertexCount
		{
			[Token(Token = "0x6001653")]
			[Address(RVA = "0x1074B30", Offset = "0x1074B30", VA = "0x1074B30")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x6001647")]
		[Address(RVA = "0x1079F94", Offset = "0x1079F94", VA = "0x1079F94")]
		public State()
		{
		}

		[Token(Token = "0x6001648")]
		[Address(RVA = "0x1072EAC", Offset = "0x1072EAC", VA = "0x1072EAC")]
		public State(int mapWidth, int mapHeight)
		{
		}

		[Token(Token = "0x6001649")]
		[Address(RVA = "0x1072FEC", Offset = "0x1072FEC", VA = "0x1072FEC")]
		public State(State other)
		{
		}

		[Token(Token = "0x600164A")]
		[Address(RVA = "0x10726AC", Offset = "0x10726AC", VA = "0x10726AC")]
		public void LoadMeshAsset(Mesh meshAsset)
		{
		}

		[Token(Token = "0x600164B")]
		[Address(RVA = "0x1073074", Offset = "0x1073074", VA = "0x1073074")]
		public void CopyFrom(State other)
		{
		}

		[Token(Token = "0x600164C")]
		[Address(RVA = "0x1078354", Offset = "0x1078354", VA = "0x1078354")]
		public void ApplyToMesh(Mesh mesh)
		{
		}

		[Token(Token = "0x600164D")]
		[Address(RVA = "0x10787B4", Offset = "0x10787B4", VA = "0x10787B4")]
		public void Dispose()
		{
		}

		[Token(Token = "0x600164E")]
		[Address(RVA = "0x1076FA8", Offset = "0x1076FA8", VA = "0x1076FA8")]
		public void SetPosition(int index, Vector3 position)
		{
		}

		[Token(Token = "0x600164F")]
		[Address(RVA = "0x1076F8C", Offset = "0x1076F8C", VA = "0x1076F8C")]
		public Vector3 GetPosition(int index)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001650")]
		[Address(RVA = "0x10778D4", Offset = "0x10778D4", VA = "0x10778D4")]
		public void SetNormal(int index, Vector3 normal)
		{
		}

		[Token(Token = "0x6001651")]
		[Address(RVA = "0x107646C", Offset = "0x107646C", VA = "0x107646C")]
		public void SetColor(int index, Color32 color)
		{
		}

		[Token(Token = "0x6001652")]
		[Address(RVA = "0x10781C4", Offset = "0x10781C4", VA = "0x10781C4")]
		public void SetUV(int index, Vector2 uv)
		{
		}

		[Token(Token = "0x6001654")]
		[Address(RVA = "0x107255C", Offset = "0x107255C", VA = "0x107255C")]
		public void Clear()
		{
		}
	}

	[Token(Token = "0x40003CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float tileSize;

	[Token(Token = "0x40003CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int mapWidth;

	[Token(Token = "0x40003CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int mapHeight;

	[Token(Token = "0x40003CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int atlasWidth;

	[Token(Token = "0x40003D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int atlasHeight;

	[Token(Token = "0x40003D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float edgePadding;

	[Token(Token = "0x40003D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool useSmoothBlending;

	[Token(Token = "0x40003D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	public bool useNormalizedTextureCoordinates;

	[Token(Token = "0x40003D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x32")]
	private bool useDisplacements;

	[Token(Token = "0x40003D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x33")]
	private bool useSmoothNormals;

	[Token(Token = "0x40003D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private bool useSmoothishNormals;

	[Token(Token = "0x40003D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x35")]
	private bool useRandomBaseColor;

	[Token(Token = "0x40003D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public SimpleShadow shadowCaster;

	[Token(Token = "0x40003D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[HideInInspector]
	public InitialState initialState;

	[Token(Token = "0x40003DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static readonly VertexAttributeDescriptor[] vertexLayout;

	[Token(Token = "0x40003DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private State stateInternal;

	[Token(Token = "0x40003DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private State previewState;

	[Token(Token = "0x40003DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Mesh startingMesh;

	[Token(Token = "0x40003DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Mesh mesh;

	[Token(Token = "0x40003DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private MeshFilter _meshFilter;

	[Token(Token = "0x40003E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private MeshRenderer _meshRenderer;

	[Token(Token = "0x40003E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private float halfTexelSize;

	[Token(Token = "0x40003E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private bool isMeshDirty;

	[Token(Token = "0x40003E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7D")]
	private bool inPreviewMode;

	[Token(Token = "0x40003E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7E")]
	private bool showPreviewStateInternal;

	[Token(Token = "0x1700014D")]
	private State state
	{
		[Token(Token = "0x6000660")]
		[Address(RVA = "0x1071FBC", Offset = "0x1071FBC", VA = "0x1071FBC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700014E")]
	private MeshFilter meshFilter
	{
		[Token(Token = "0x6000661")]
		[Address(RVA = "0x1072254", Offset = "0x1072254", VA = "0x1072254")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700014F")]
	private MeshRenderer meshRenderer
	{
		[Token(Token = "0x6000662")]
		[Address(RVA = "0x10722EC", Offset = "0x10722EC", VA = "0x10722EC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000150")]
	public bool showPreviewState
	{
		[Token(Token = "0x6000663")]
		[Address(RVA = "0x1072384", Offset = "0x1072384", VA = "0x1072384")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000664")]
		[Address(RVA = "0x107238C", Offset = "0x107238C", VA = "0x107238C")]
		set
		{
		}
	}

	[Token(Token = "0x6000665")]
	[Address(RVA = "0x10723B4", Offset = "0x10723B4", VA = "0x10723B4")]
	public void Reset()
	{
	}

	[Token(Token = "0x6000666")]
	[Address(RVA = "0x1072CD4", Offset = "0x1072CD4", VA = "0x1072CD4")]
	public void Init(int width, int height)
	{
	}

	[Token(Token = "0x6000667")]
	[Address(RVA = "0x1072000", Offset = "0x1072000", VA = "0x1072000")]
	private void InitStates()
	{
	}

	[Token(Token = "0x6000668")]
	[Address(RVA = "0x107301C", Offset = "0x107301C", VA = "0x107301C")]
	public void BeginPreviewChanges()
	{
	}

	[Token(Token = "0x6000669")]
	[Address(RVA = "0x10731B8", Offset = "0x10731B8", VA = "0x10731B8")]
	public void EndPreviewChanges()
	{
	}

	[Token(Token = "0x600066A")]
	[Address(RVA = "0x10731C0", Offset = "0x10731C0", VA = "0x10731C0")]
	private void GenerateUV(int tileType, out Vector2 ul, out Vector2 ll, out Vector2 lr, out Vector2 ur)
	{
	}

	[Token(Token = "0x600066B")]
	[Address(RVA = "0x10732E8", Offset = "0x10732E8", VA = "0x10732E8")]
	public void RemoveTileFromMesh(int x, int y)
	{
	}

	[Token(Token = "0x600066C")]
	[Address(RVA = "0x1073784", Offset = "0x1073784", VA = "0x1073784")]
	public void AddTileToMesh(int x, int y)
	{
	}

	[Token(Token = "0x600066D")]
	[Address(RVA = "0x1074B38", Offset = "0x1074B38", VA = "0x1074B38")]
	private void GenerateMesh()
	{
	}

	[Token(Token = "0x600066E")]
	[Address(RVA = "0x1074E94", Offset = "0x1074E94", VA = "0x1074E94")]
	private Vector3 CalculatePosition(int x, int y)
	{
		return default(Vector3);
	}

	[Token(Token = "0x600066F")]
	[Address(RVA = "0x1075704", Offset = "0x1075704", VA = "0x1075704")]
	private float CalculateHeight(int x, int y)
	{
		return default(float);
	}

	[Token(Token = "0x6000670")]
	[Address(RVA = "0x1075B80", Offset = "0x1075B80", VA = "0x1075B80")]
	public Vector3 CalculateNormal(int x, int y)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000671")]
	[Address(RVA = "0x1075E90", Offset = "0x1075E90", VA = "0x1075E90")]
	public Vector3 CalculateNormal(int vertIndex)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000672")]
	[Address(RVA = "0x10761FC", Offset = "0x10761FC", VA = "0x10761FC")]
	public void SetTileColour(int x, int y, Color color)
	{
	}

	[Token(Token = "0x6000673")]
	[Address(RVA = "0x1076480", Offset = "0x1076480", VA = "0x1076480")]
	public Vector3 GetTileDisplacement(int x, int y)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000674")]
	[Address(RVA = "0x1076514", Offset = "0x1076514", VA = "0x1076514")]
	public void FixupTileDisplacements()
	{
	}

	[Token(Token = "0x6000675")]
	[Address(RVA = "0x1077028", Offset = "0x1077028", VA = "0x1077028")]
	public void SetTileDisplacement(int x, int y, Vector3 displacement)
	{
	}

	[Token(Token = "0x6000676")]
	[Address(RVA = "0x1077804", Offset = "0x1077804", VA = "0x1077804")]
	private Vector3 BlendNormal(Vector3 coarse, Vector3 smooth)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000677")]
	[Address(RVA = "0x1077960", Offset = "0x1077960", VA = "0x1077960")]
	public int GetTileType(int x, int y)
	{
		return default(int);
	}

	[Token(Token = "0x6000678")]
	[Address(RVA = "0x10779F0", Offset = "0x10779F0", VA = "0x10779F0")]
	public int GetTileRotation(int x, int y)
	{
		return default(int);
	}

	[Token(Token = "0x6000679")]
	[Address(RVA = "0x1077A80", Offset = "0x1077A80", VA = "0x1077A80")]
	private Color GetBlendingColor(int x, int y)
	{
		return default(Color);
	}

	[Token(Token = "0x600067A")]
	[Address(RVA = "0x1077C3C", Offset = "0x1077C3C", VA = "0x1077C3C")]
	private void UpdateBlendingForTile(int x, int y)
	{
	}

	[Token(Token = "0x600067B")]
	[Address(RVA = "0x1077E44", Offset = "0x1077E44", VA = "0x1077E44")]
	public void SetTile(int x, int y, int tileType, int rotation)
	{
	}

	[Token(Token = "0x600067C")]
	[Address(RVA = "0x1078344", Offset = "0x1078344", VA = "0x1078344")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x600067D")]
	[Address(RVA = "0x1072B18", Offset = "0x1072B18", VA = "0x1072B18")]
	private void ApplyRefresh()
	{
	}

	[Token(Token = "0x600067E")]
	[Address(RVA = "0x107857C", Offset = "0x107857C", VA = "0x107857C")]
	public void Refresh()
	{
	}

	[Token(Token = "0x600067F")]
	[Address(RVA = "0x1078588", Offset = "0x1078588", VA = "0x1078588")]
	public void RefreshNow()
	{
	}

	[Token(Token = "0x6000680")]
	[Address(RVA = "0x10785C4", Offset = "0x10785C4", VA = "0x10785C4")]
	private void StoreInitialState()
	{
	}

	[Token(Token = "0x6000681")]
	[Address(RVA = "0x1078778", Offset = "0x1078778", VA = "0x1078778")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000682")]
	[Address(RVA = "0x107885C", Offset = "0x107885C", VA = "0x107885C")]
	public void Simplify(int chunkSize, bool strict = false)
	{
	}

	[Token(Token = "0x6000683")]
	[Address(RVA = "0x1079E08", Offset = "0x1079E08", VA = "0x1079E08")]
	public TileMap()
	{
	}
}
[Token(Token = "0x2000096")]
public class TrackedStatsManager : SingletonBehaviour<TrackedStatsManager>, IDebugPanelProvider
{
	[Token(Token = "0x2000333")]
	public class TrackedCounter
	{
		[Token(Token = "0x40014EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6AC664", Offset = "0x6AC664")]
		private string <eventName>k__BackingField;

		[Token(Token = "0x40014EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6AC674", Offset = "0x6AC674")]
		private int <granularity>k__BackingField;

		[Token(Token = "0x40014EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6AC684", Offset = "0x6AC684")]
		private int <counter>k__BackingField;

		[Token(Token = "0x40014ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int newCounterValue;

		[Token(Token = "0x170003C1")]
		public string eventName
		{
			[Token(Token = "0x600165A")]
			[Address(RVA = "0x107D870", Offset = "0x107D870", VA = "0x107D870")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6B3918", Offset = "0x6B3918")]
			get
			{
				return null;
			}
			[Token(Token = "0x600165B")]
			[Address(RVA = "0x107D878", Offset = "0x107D878", VA = "0x107D878")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6B3928", Offset = "0x6B3928")]
			private set
			{
			}
		}

		[Token(Token = "0x170003C2")]
		public int granularity
		{
			[Token(Token = "0x600165C")]
			[Address(RVA = "0x107D880", Offset = "0x107D880", VA = "0x107D880")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6B3938", Offset = "0x6B3938")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x600165D")]
			[Address(RVA = "0x107D888", Offset = "0x107D888", VA = "0x107D888")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6B3948", Offset = "0x6B3948")]
			private set
			{
			}
		}

		[Token(Token = "0x170003C3")]
		public int counter
		{
			[Token(Token = "0x600165E")]
			[Address(RVA = "0x107D890", Offset = "0x107D890", VA = "0x107D890")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6B3958", Offset = "0x6B3958")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x600165F")]
			[Address(RVA = "0x107D898", Offset = "0x107D898", VA = "0x107D898")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6B3968", Offset = "0x6B3968")]
			private set
			{
			}
		}

		[Token(Token = "0x6001655")]
		[Address(RVA = "0x107D824", Offset = "0x107D824", VA = "0x107D824")]
		public TrackedCounter(string eventName, int granularity = 1)
		{
		}

		[Token(Token = "0x6001656")]
		[Address(RVA = "0x107D860", Offset = "0x107D860", VA = "0x107D860")]
		public void Increment(int amount = 1)
		{
		}

		[Token(Token = "0x6001657")]
		[Address(RVA = "0x107CFA4", Offset = "0x107CFA4", VA = "0x107CFA4")]
		public void Start()
		{
		}

		[Token(Token = "0x6001658")]
		[Address(RVA = "0x107D280", Offset = "0x107D280", VA = "0x107D280")]
		public void Reset()
		{
		}

		[Token(Token = "0x6001659")]
		[Address(RVA = "0x107D068", Offset = "0x107D068", VA = "0x107D068")]
		public void Update()
		{
		}
	}

	[Token(Token = "0x40003E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TrackedCounter roadTilesBuilt;

	[Token(Token = "0x40003E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TrackedCounter buildingsPlaced;

	[Token(Token = "0x40003E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public TrackedCounter buildingsUpgraded;

	[Token(Token = "0x40003E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public TrackedCounter buildingsDemolished;

	[Token(Token = "0x40003E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public TrackedCounter treesPlanted;

	[Token(Token = "0x40003EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public TrackedCounter firesExtinguished;

	[Token(Token = "0x40003EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public TrackedCounter hotAirBalloonFlights;

	[Token(Token = "0x40003EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public TrackedCounter gliderFlights;

	[Token(Token = "0x40003ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public TrackedCounter planesTakenOff;

	[Token(Token = "0x40003EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public TrackedCounter boatsDocked;

	[Token(Token = "0x40003EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public TrackedCounter volcanoEruptions;

	[Token(Token = "0x40003F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public TrackedCounter ufoSighted;

	[Token(Token = "0x40003F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public TrackedCounter rocketsLaunched;

	[Token(Token = "0x40003F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public TrackedCounter birdsSpooked;

	[Token(Token = "0x40003F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public TrackedCounter policeHelicopterChases;

	[Token(Token = "0x40003F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private List<TrackedCounter> allCounters;

	[Token(Token = "0x6000685")]
	[Address(RVA = "0x107CDF4", Offset = "0x107CDF4", VA = "0x107CDF4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000686")]
	[Address(RVA = "0x107CFD4", Offset = "0x107CFD4", VA = "0x107CFD4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000687")]
	[Address(RVA = "0x107D1DC", Offset = "0x107D1DC", VA = "0x107D1DC")]
	public void Reset()
	{
	}

	[Token(Token = "0x6000688")]
	[Address(RVA = "0x107D298", Offset = "0x107D298", VA = "0x107D298", Slot = "6")]
	private void IDebugPanelProvider.OnDebugPanel()
	{
	}

	[Token(Token = "0x6000689")]
	[Address(RVA = "0x107D4DC", Offset = "0x107D4DC", VA = "0x107D4DC")]
	public TrackedStatsManager()
	{
	}
}
[Token(Token = "0x2000097")]
public class VRUtils : MonoBehaviour
{
	[Token(Token = "0x40003F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject ovrCameraRigPrefab;

	[Token(Token = "0x40003F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static OVRCameraRig ovrCameraRig;

	[Token(Token = "0x40003F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static Action onRecentered;

	[Token(Token = "0x40003F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private HashSet<XRInputSubsystem> inputSubsystems;

	[Token(Token = "0x600068A")]
	[Address(RVA = "0x1012610", Offset = "0x1012610", VA = "0x1012610")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600068B")]
	[Address(RVA = "0x10127AC", Offset = "0x10127AC", VA = "0x10127AC")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600068C")]
	[Address(RVA = "0x1012948", Offset = "0x1012948", VA = "0x1012948")]
	private void OnXRDeviceConnected(InputDevice inputDevice)
	{
	}

	[Token(Token = "0x600068D")]
	[Address(RVA = "0x1012B00", Offset = "0x1012B00", VA = "0x1012B00")]
	private void InitOVRPrefab()
	{
	}

	[Token(Token = "0x600068E")]
	[Address(RVA = "0x1012CAC", Offset = "0x1012CAC", VA = "0x1012CAC")]
	private void Start()
	{
	}

	[Token(Token = "0x600068F")]
	[Address(RVA = "0x1012DD8", Offset = "0x1012DD8", VA = "0x1012DD8")]
	private void OnTrackingOriginUpdated(XRInputSubsystem subsystem)
	{
	}

	[Token(Token = "0x6000690")]
	[Address(RVA = "0x1012DDC", Offset = "0x1012DDC", VA = "0x1012DDC")]
	private void OnRecenteredPose()
	{
	}

	[Token(Token = "0x6000691")]
	[Address(RVA = "0x1012E40", Offset = "0x1012E40", VA = "0x1012E40")]
	public static void TryRecenter()
	{
	}

	[Token(Token = "0x6000692")]
	[Address(RVA = "0x1012F80", Offset = "0x1012F80", VA = "0x1012F80")]
	public static bool TryGetHMD(out InputDevice result)
	{
		return default(bool);
	}

	[Token(Token = "0x6000693")]
	[Address(RVA = "0x10130DC", Offset = "0x10130DC", VA = "0x10130DC")]
	public static bool IsHandTrackingAvailable()
	{
		return default(bool);
	}

	[Token(Token = "0x6000694")]
	[Address(RVA = "0x101313C", Offset = "0x101313C", VA = "0x101313C")]
	public static bool DoesPlatformSupportHandTracking()
	{
		return default(bool);
	}

	[Token(Token = "0x6000695")]
	[Address(RVA = "0x1013144", Offset = "0x1013144", VA = "0x1013144")]
	public VRUtils()
	{
	}
}
[Token(Token = "0x2000098")]
public interface IVisualiserTextureProvider
{
	[Token(Token = "0x17000151")]
	Texture2D visualiseTexture
	{
		[Token(Token = "0x6000696")]
		get;
	}

	[Token(Token = "0x17000152")]
	Texture2D secondaryTexture
	{
		[Token(Token = "0x6000697")]
		get;
	}

	[Token(Token = "0x17000153")]
	string name
	{
		[Token(Token = "0x6000698")]
		get;
	}

	[Token(Token = "0x6000699")]
	void RefreshVisualiseTexture();
}
[Token(Token = "0x2000099")]
public class VisualiserManager : SingletonBehaviour<VisualiserManager>, IDebugPanelProvider
{
	[Token(Token = "0x2000334")]
	public enum VisualiserType
	{
		[Token(Token = "0x40014EF")]
		None,
		[Token(Token = "0x40014F0")]
		Zones,
		[Token(Token = "0x40014F1")]
		Power,
		[Token(Token = "0x40014F2")]
		Water,
		[Token(Token = "0x40014F3")]
		Network,
		[Token(Token = "0x40014F4")]
		BuildGrid,
		[Token(Token = "0x40014F5")]
		Service,
		[Token(Token = "0x40014F6")]
		Debug,
		[Token(Token = "0x40014F7")]
		WindPower
	}

	[Serializable]
	[Token(Token = "0x2000335")]
	public class VisualiserData
	{
		[Token(Token = "0x40014F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Material terrainMaterial;

		[Token(Token = "0x40014F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Material buildingMaterial;

		[Token(Token = "0x40014FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Material roadMaterial;

		[Token(Token = "0x40014FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Material bridgeMaterial;

		[Token(Token = "0x40014FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public IVisualiserTextureProvider textureProvider;

		[Token(Token = "0x40014FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public bool showBuildingBadges;

		[Token(Token = "0x6001660")]
		[Address(RVA = "0x1014FF0", Offset = "0x1014FF0", VA = "0x1014FF0")]
		public void Init()
		{
		}

		[Token(Token = "0x6001661")]
		[Address(RVA = "0x1016570", Offset = "0x1016570", VA = "0x1016570")]
		public VisualiserData()
		{
		}
	}

	[Token(Token = "0x40003F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public VisualiserData zones;

	[Token(Token = "0x40003FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public VisualiserData power;

	[Token(Token = "0x40003FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public VisualiserData windPower;

	[Token(Token = "0x40003FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public VisualiserData water;

	[Token(Token = "0x40003FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public VisualiserData network;

	[Token(Token = "0x40003FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public VisualiserData buildGrid;

	[Token(Token = "0x40003FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public VisualiserData service;

	[Token(Token = "0x4000400")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public VisualiserData debug;

	[Token(Token = "0x4000401")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Dictionary<MeshRenderer, Material> rendererOriginalMaterialMap;

	[Token(Token = "0x4000402")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Dictionary<KeyValuePair<Material, Material>, Material> modifiedMaterialMap;

	[Token(Token = "0x4000403")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private VisualiserType currentVisualiserInternal;

	[Token(Token = "0x4000404")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private City city;

	[Token(Token = "0x4000405")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private List<MeshRenderer> terrainRenderers;

	[Token(Token = "0x4000406")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private List<MeshRenderer> buildingRenderers;

	[Token(Token = "0x4000407")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private List<MeshRenderer> roadRenderers;

	[Token(Token = "0x4000408")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private List<MeshRenderer> bridgeRenderers;

	[Token(Token = "0x4000409")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private int buildingLayer;

	[Token(Token = "0x17000154")]
	public VisualiserType currentVisualiser
	{
		[Token(Token = "0x600069A")]
		[Address(RVA = "0x1013550", Offset = "0x1013550", VA = "0x1013550")]
		get
		{
			return default(VisualiserType);
		}
		[Token(Token = "0x600069B")]
		[Address(RVA = "0x1013558", Offset = "0x1013558", VA = "0x1013558")]
		set
		{
		}
	}

	[Token(Token = "0x17000155")]
	public VisualiserData currentVisualiserData
	{
		[Token(Token = "0x600069C")]
		[Address(RVA = "0x1013DA0", Offset = "0x1013DA0", VA = "0x1013DA0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600069D")]
	[Address(RVA = "0x1013DA8", Offset = "0x1013DA8", VA = "0x1013DA8")]
	public VisualiserData GetData(VisualiserType type)
	{
		return null;
	}

	[Token(Token = "0x600069E")]
	[Address(RVA = "0x1013E14", Offset = "0x1013E14", VA = "0x1013E14")]
	public void SetDebugVisualiser(IVisualiserTextureProvider provider)
	{
	}

	[Token(Token = "0x600069F")]
	[Address(RVA = "0x1013F3C", Offset = "0x1013F3C", VA = "0x1013F3C")]
	private void RegisterTerrainObject(GameObject target, bool useTerrainMaterials)
	{
	}

	[Token(Token = "0x60006A0")]
	[Address(RVA = "0x101407C", Offset = "0x101407C", VA = "0x101407C")]
	private void RegisterRoadObject(GameObject target)
	{
	}

	[Token(Token = "0x60006A1")]
	[Address(RVA = "0x101417C", Offset = "0x101417C", VA = "0x101417C")]
	public void Clear()
	{
	}

	[Token(Token = "0x60006A2")]
	[Address(RVA = "0x1014458", Offset = "0x1014458", VA = "0x1014458")]
	public void RegisterBuilding(GameObject newBuilding)
	{
	}

	[Token(Token = "0x60006A3")]
	[Address(RVA = "0x1014754", Offset = "0x1014754", VA = "0x1014754")]
	public void UnregisterBuilding(GameObject building)
	{
	}

	[Token(Token = "0x60006A4")]
	[Address(RVA = "0x101489C", Offset = "0x101489C", VA = "0x101489C")]
	public void RegisterBridgeRenderer(MeshRenderer bridgeRenderer)
	{
	}

	[Token(Token = "0x60006A5")]
	[Address(RVA = "0x1014CB0", Offset = "0x1014CB0", VA = "0x1014CB0")]
	public void UnregisterBridgeRenderer(MeshRenderer bridgeRenderer)
	{
	}

	[Token(Token = "0x60006A6")]
	[Address(RVA = "0x101454C", Offset = "0x101454C", VA = "0x101454C")]
	public void RegisterBuildingRenderer(MeshRenderer buildingRenderer)
	{
	}

	[Token(Token = "0x60006A7")]
	[Address(RVA = "0x1014818", Offset = "0x1014818", VA = "0x1014818")]
	public void UnregisterBuildingRenderer(MeshRenderer buildingRenderer)
	{
	}

	[Token(Token = "0x60006A8")]
	[Address(RVA = "0x1014D34", Offset = "0x1014D34", VA = "0x1014D34")]
	private void Start()
	{
	}

	[Token(Token = "0x60006A9")]
	[Address(RVA = "0x10151A0", Offset = "0x10151A0", VA = "0x10151A0")]
	public void SetCity(City city)
	{
	}

	[Token(Token = "0x60006AA")]
	[Address(RVA = "0x1014AA4", Offset = "0x1014AA4", VA = "0x1014AA4")]
	private void ApplyToRenderer(MeshRenderer targetRenderer, Material replacementMaterial, Texture2D overlayTexture, Texture2D secondaryTexture, bool replaceMainTexture = false)
	{
	}

	[Token(Token = "0x60006AB")]
	[Address(RVA = "0x1013560", Offset = "0x1013560", VA = "0x1013560")]
	private void ApplyVisualiser()
	{
	}

	[Token(Token = "0x60006AC")]
	[Address(RVA = "0x1015974", Offset = "0x1015974", VA = "0x1015974")]
	private void Update()
	{
	}

	[Token(Token = "0x60006AD")]
	[Address(RVA = "0x1015A40", Offset = "0x1015A40", VA = "0x1015A40", Slot = "6")]
	public void OnDebugPanel()
	{
	}

	[Token(Token = "0x60006AE")]
	[Address(RVA = "0x1016458", Offset = "0x1016458", VA = "0x1016458")]
	public VisualiserManager()
	{
	}
}
[Token(Token = "0x200009A")]
public class CustomLandscape : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x2000336")]
	public class TileData
	{
		[Token(Token = "0x40014FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int type;

		[Token(Token = "0x40014FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float height;

		[Token(Token = "0x4001500")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float borderDistance;

		[Token(Token = "0x4001501")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public bool buildable;

		[Token(Token = "0x4001502")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int region;

		[Token(Token = "0x4001503")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public bool hasWater;

		[Token(Token = "0x4001504")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
		public bool hasSandStorm;

		[Token(Token = "0x4001505")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float collisionHeight;

		[Token(Token = "0x6001662")]
		[Address(RVA = "0x102B030", Offset = "0x102B030", VA = "0x102B030")]
		public TileData()
		{
		}
	}

	[Token(Token = "0x400040A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Texture2D inputImage;

	[Token(Token = "0x400040B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TileMap landscapeTileMap;

	[Token(Token = "0x400040C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public TileMap waterTileMap;

	[Token(Token = "0x400040D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public TileMap shorelineTileMap;

	[Token(Token = "0x400040E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public TileMap sandStormTileMap;

	[Token(Token = "0x400040F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public OuterWaterPlane outerWaterPlane;

	[Token(Token = "0x4000410")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public CityInfo.Theme theme;

	[Token(Token = "0x4000411")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Seaport seaport;

	[Token(Token = "0x4000412")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public ShippingLanes shippingLanes;

	[Token(Token = "0x4000413")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public GameObject previewLightingGroup;

	[Token(Token = "0x4000414")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Transform regionUnlockHintTransform;

	[Token(Token = "0x4000415")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public int textureBakeResolution;

	[Token(Token = "0x4000416")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[HideInInspector]
	public TileData[] tiles;

	[Token(Token = "0x17000156")]
	public LandscapeProps landscapeProps
	{
		[Token(Token = "0x60006AF")]
		[Address(RVA = "0x102ABF8", Offset = "0x102ABF8", VA = "0x102ABF8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000157")]
	public int mapWidth
	{
		[Token(Token = "0x60006B0")]
		[Address(RVA = "0x102AC48", Offset = "0x102AC48", VA = "0x102AC48")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000158")]
	public int mapHeight
	{
		[Token(Token = "0x60006B1")]
		[Address(RVA = "0x102AC64", Offset = "0x102AC64", VA = "0x102AC64")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x60006B2")]
	[Address(RVA = "0x102AC80", Offset = "0x102AC80", VA = "0x102AC80")]
	public bool IsBuildable(int x, int y)
	{
		return default(bool);
	}

	[Token(Token = "0x60006B3")]
	[Address(RVA = "0x102AD00", Offset = "0x102AD00", VA = "0x102AD00")]
	public Bounds GenerateAboveWaterBounds()
	{
		return default(Bounds);
	}

	[Token(Token = "0x60006B4")]
	[Address(RVA = "0x102AEB0", Offset = "0x102AEB0", VA = "0x102AEB0")]
	public float SampleCollisionHeight(Vector3 worldPosition)
	{
		return default(float);
	}

	[Token(Token = "0x60006B5")]
	[Address(RVA = "0x102B020", Offset = "0x102B020", VA = "0x102B020")]
	public CustomLandscape()
	{
	}
}
[Token(Token = "0x200009B")]
public class CustomLandscapeValues : ScriptableObjectSingleton<CustomLandscapeValues>
{
	[Serializable]
	[Token(Token = "0x2000337")]
	public class TileTypeMetadata
	{
		[Token(Token = "0x4001506")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string name;

		[Token(Token = "0x4001507")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Color key;

		[Token(Token = "0x4001508")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Color outputMask;

		[Token(Token = "0x4001509")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float gradient;

		[Token(Token = "0x400150A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float targetDepth;

		[Token(Token = "0x400150B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float blendPriority;

		[Token(Token = "0x400150C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public bool buildable;

		[Token(Token = "0x6001663")]
		[Address(RVA = "0x102B0DC", Offset = "0x102B0DC", VA = "0x102B0DC")]
		public TileTypeMetadata(string name, Color key, Color outputMask, float gradient, float targetDepth, float blendPriority, bool buildable)
		{
		}
	}

	[Token(Token = "0x4000417")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<TileTypeMetadata> tileTypeMetadata;

	[Token(Token = "0x4000418")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Material complexTerrainMaterial;

	[Token(Token = "0x4000419")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Material bakedLandscapeBaseMaterial;

	[Token(Token = "0x400041A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float waterClipDepth;

	[Token(Token = "0x400041B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float shorelineCutoff;

	[Token(Token = "0x400041C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float deepWaterCutoff;

	[Token(Token = "0x400041D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float borderDistanceJitter;

	[Token(Token = "0x60006B6")]
	[Address(RVA = "0x102B038", Offset = "0x102B038", VA = "0x102B038")]
	public CustomLandscapeValues()
	{
	}
}
[Token(Token = "0x200009C")]
public class LandscapeFeature : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x2000338")]
	public class BlockMap
	{
		[Token(Token = "0x400150D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int x;

		[Token(Token = "0x400150E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int y;

		[Token(Token = "0x400150F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int width;

		[Token(Token = "0x4001510")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int height;

		[Token(Token = "0x4001511")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool[] blocked;

		[Token(Token = "0x6001664")]
		[Address(RVA = "0x108DA04", Offset = "0x108DA04", VA = "0x108DA04")]
		public bool IsDifferent(BlockMap other)
		{
			return default(bool);
		}

		[Token(Token = "0x6001665")]
		[Address(RVA = "0x108DAE4", Offset = "0x108DAE4", VA = "0x108DAE4")]
		public BlockMap()
		{
		}
	}

	[Token(Token = "0x400041E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public BlockMap blockMap;

	[Token(Token = "0x400041F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool canDemolish;

	[Token(Token = "0x4000420")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	public bool useMeshBatcher;

	[Token(Token = "0x4000421")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x22")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6A8D2C", Offset = "0x6A8D2C")]
	private bool <isDemolished>k__BackingField;

	[Token(Token = "0x4000422")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject demolishEffectPrefab;

	[Token(Token = "0x4000423")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public List<GameObject> nonBlockingObjects;

	[Token(Token = "0x4000424")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int demolitionCostCached;

	[Token(Token = "0x4000425")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private MeshBatcherV2 meshBatcher;

	[Token(Token = "0x4000426")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private List<MeshBatcherV2.InstanceId> batchIds;

	[Token(Token = "0x4000427")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private City city;

	[Token(Token = "0x4000428")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private BirdPerchPoint[] perchPoints;

	[Token(Token = "0x4000429")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private BirdManager.PerchTransform[] perchTransforms;

	[Token(Token = "0x17000159")]
	public bool isDemolished
	{
		[Token(Token = "0x60006B7")]
		[Address(RVA = "0x108C554", Offset = "0x108C554", VA = "0x108C554")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6AF9F4", Offset = "0x6AF9F4")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60006B8")]
		[Address(RVA = "0x108C55C", Offset = "0x108C55C", VA = "0x108C55C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6AFA04", Offset = "0x6AFA04")]
		private set
		{
		}
	}

	[Token(Token = "0x1700015A")]
	public int demolitionCost
	{
		[Token(Token = "0x60006B9")]
		[Address(RVA = "0x108C568", Offset = "0x108C568", VA = "0x108C568")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x60006BA")]
	[Address(RVA = "0x108C5FC", Offset = "0x108C5FC", VA = "0x108C5FC")]
	public void Init(City inCity)
	{
	}

	[Token(Token = "0x60006BB")]
	[Address(RVA = "0x108C8F4", Offset = "0x108C8F4", VA = "0x108C8F4")]
	private void EnablePerchPoints()
	{
	}

	[Token(Token = "0x60006BC")]
	[Address(RVA = "0x108C9BC", Offset = "0x108C9BC", VA = "0x108C9BC")]
	private void DisablePerchPoints()
	{
	}

	[Token(Token = "0x60006BD")]
	[Address(RVA = "0x108C6B4", Offset = "0x108C6B4", VA = "0x108C6B4")]
	private void AddToBatcher()
	{
	}

	[Token(Token = "0x60006BE")]
	[Address(RVA = "0x108CDFC", Offset = "0x108CDFC", VA = "0x108CDFC")]
	private void RemoveFromBatcher()
	{
	}

	[Token(Token = "0x60006BF")]
	[Address(RVA = "0x108D024", Offset = "0x108D024", VA = "0x108D024")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60006C0")]
	[Address(RVA = "0x108D0C4", Offset = "0x108D0C4", VA = "0x108D0C4")]
	public bool IsInBlockMap(int worldX, int worldY)
	{
		return default(bool);
	}

	[Token(Token = "0x60006C1")]
	[Address(RVA = "0x108D160", Offset = "0x108D160", VA = "0x108D160")]
	public bool IsBlocked(int worldX, int worldY)
	{
		return default(bool);
	}

	[Token(Token = "0x60006C2")]
	[Address(RVA = "0x108D174", Offset = "0x108D174", VA = "0x108D174")]
	public Bounds CalculateWorldBounds()
	{
		return default(Bounds);
	}

	[Token(Token = "0x60006C3")]
	[Address(RVA = "0x108D340", Offset = "0x108D340", VA = "0x108D340")]
	public int CountBlockedTiles()
	{
		return default(int);
	}

	[Token(Token = "0x60006C4")]
	[Address(RVA = "0x108D3B0", Offset = "0x108D3B0", VA = "0x108D3B0")]
	public void Demolish(bool playDemolishEffect)
	{
	}

	[Token(Token = "0x60006C5")]
	[Address(RVA = "0x108D814", Offset = "0x108D814", VA = "0x108D814")]
	public void Restore()
	{
	}

	[Token(Token = "0x60006C6")]
	[Address(RVA = "0x108D95C", Offset = "0x108D95C", VA = "0x108D95C")]
	public LandscapeFeature()
	{
	}
}
[Token(Token = "0x200009D")]
public class LandscapeGroundWater : MonoBehaviour
{
	[Token(Token = "0x60006C7")]
	[Address(RVA = "0x108DAEC", Offset = "0x108DAEC", VA = "0x108DAEC")]
	public LandscapeGroundWater()
	{
	}
}
[Token(Token = "0x200009E")]
public class LandscapeProps : MonoBehaviour
{
	[Token(Token = "0x400042A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float placementWiggle;

	[Token(Token = "0x400042B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float scaleWiggle;

	[Token(Token = "0x400042C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int layerMask;

	[Token(Token = "0x60006C8")]
	[Address(RVA = "0x108DAF4", Offset = "0x108DAF4", VA = "0x108DAF4")]
	private void Awake()
	{
	}

	[Token(Token = "0x60006C9")]
	[Address(RVA = "0x108DBB4", Offset = "0x108DBB4", VA = "0x108DBB4")]
	public void GetPlantingTransform(GameObject propObject, int x, int y, out Vector3 position, out Quaternion rotation, out Vector3 scale)
	{
	}

	[Token(Token = "0x60006CA")]
	[Address(RVA = "0x108E0E0", Offset = "0x108E0E0", VA = "0x108E0E0")]
	public LandscapeProps()
	{
	}
}
[Token(Token = "0x200009F")]
public class LandscapeRandomGenerator : MonoBehaviour
{
	[Token(Token = "0x400042D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int width;

	[Token(Token = "0x400042E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int height;

	[Token(Token = "0x400042F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int fillSquareWidth;

	[Token(Token = "0x4000430")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private int[] map;

	[Token(Token = "0x4000431")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private int numFilled;

	[Token(Token = "0x4000432")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private int count;

	[Token(Token = "0x4000433")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool reset;

	[Token(Token = "0x60006CB")]
	[Address(RVA = "0x108E0F4", Offset = "0x108E0F4", VA = "0x108E0F4")]
	private void Start()
	{
	}

	[Token(Token = "0x60006CC")]
	[Address(RVA = "0x108E168", Offset = "0x108E168", VA = "0x108E168")]
	private void Clear()
	{
	}

	[Token(Token = "0x60006CD")]
	[Address(RVA = "0x108E1C0", Offset = "0x108E1C0", VA = "0x108E1C0")]
	private void FillCenterSquare()
	{
	}

	[Token(Token = "0x60006CE")]
	[Address(RVA = "0x108E284", Offset = "0x108E284", VA = "0x108E284")]
	private void GenerateTexture()
	{
	}

	[Token(Token = "0x60006CF")]
	[Address(RVA = "0x108E3EC", Offset = "0x108E3EC", VA = "0x108E3EC")]
	private int CountNeighbours(int x, int y)
	{
		return default(int);
	}

	[Token(Token = "0x60006D0")]
	[Address(RVA = "0x108E4F8", Offset = "0x108E4F8", VA = "0x108E4F8")]
	private void Update()
	{
	}

	[Token(Token = "0x60006D1")]
	[Address(RVA = "0x108E6EC", Offset = "0x108E6EC", VA = "0x108E6EC")]
	private void Step(int iterations, float clearance)
	{
	}

	[Token(Token = "0x60006D2")]
	[Address(RVA = "0x108E5C4", Offset = "0x108E5C4", VA = "0x108E5C4")]
	private void RandomFill()
	{
	}

	[Token(Token = "0x60006D3")]
	[Address(RVA = "0x108E0F8", Offset = "0x108E0F8", VA = "0x108E0F8")]
	private void Generate()
	{
	}

	[Token(Token = "0x60006D4")]
	[Address(RVA = "0x108E964", Offset = "0x108E964", VA = "0x108E964")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x60006D5")]
	[Address(RVA = "0x108EAA0", Offset = "0x108EAA0", VA = "0x108EAA0")]
	public LandscapeRandomGenerator()
	{
	}
}
[Token(Token = "0x20000A0")]
public class LandscapeRegions : MonoBehaviour
{
	[Token(Token = "0x60006D6")]
	[Address(RVA = "0x108EAB8", Offset = "0x108EAB8", VA = "0x108EAB8")]
	public LandscapeRegions()
	{
	}
}
[Token(Token = "0x20000A1")]
public class LandscapeRoadTile : MonoBehaviour
{
	[Token(Token = "0x60006D7")]
	[Address(RVA = "0x108EAC0", Offset = "0x108EAC0", VA = "0x108EAC0")]
	public void Start()
	{
	}

	[Token(Token = "0x60006D8")]
	[Address(RVA = "0x108EB6C", Offset = "0x108EB6C", VA = "0x108EB6C")]
	public void GetTileLocation(City city, out int tileX, out int tileY)
	{
	}

	[Token(Token = "0x60006D9")]
	[Address(RVA = "0x108EBE8", Offset = "0x108EBE8", VA = "0x108EBE8")]
	public void GetTileLocation(City city, out int tileX, out int tileY, out int facingDirection)
	{
	}

	[Token(Token = "0x60006DA")]
	[Address(RVA = "0x108ED28", Offset = "0x108ED28", VA = "0x108ED28")]
	public LandscapeRoadTile()
	{
	}
}
[Token(Token = "0x20000A2")]
public class LandscapeSandStorm : MonoBehaviour
{
	[Token(Token = "0x60006DB")]
	[Address(RVA = "0x108ED30", Offset = "0x108ED30", VA = "0x108ED30")]
	public LandscapeSandStorm()
	{
	}
}
[Token(Token = "0x20000A3")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x6A75FC", Offset = "0x6A75FC")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x6A75FC", Offset = "0x6A75FC")]
public class OuterWaterPlane : MonoBehaviour
{
	[Token(Token = "0x2000339")]
	private delegate Vector3 VertexPositioner(int x, int y);

	[Token(Token = "0x4000434")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int innerMapWidth;

	[Token(Token = "0x4000435")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int innerMapHeight;

	[Token(Token = "0x4000436")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int outerMapWidth;

	[Token(Token = "0x4000437")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int outerMapHeight;

	[Token(Token = "0x4000438")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int outerAmount;

	[Token(Token = "0x4000439")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float scale;

	[Token(Token = "0x400043A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float waterDepth;

	[Token(Token = "0x400043B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float firstScale;

	[Token(Token = "0x400043C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public int resolution;

	[Token(Token = "0x60006DC")]
	[Address(RVA = "0x1132ED0", Offset = "0x1132ED0", VA = "0x1132ED0")]
	private void Start()
	{
	}

	[Token(Token = "0x60006DD")]
	[Address(RVA = "0x1133164", Offset = "0x1133164", VA = "0x1133164")]
	private void AddSide(List<Vector3> vertices, List<Color> colors, List<int> triangles, VertexPositioner positioner)
	{
	}

	[Token(Token = "0x60006DE")]
	[Address(RVA = "0x1133830", Offset = "0x1133830", VA = "0x1133830")]
	private void AddCorner(List<Vector3> vertices, List<int> triangles, Vector3 basePosition)
	{
	}

	[Token(Token = "0x60006DF")]
	[Address(RVA = "0x1132ED4", Offset = "0x1132ED4", VA = "0x1132ED4")]
	public void GenerateMesh()
	{
	}

	[Token(Token = "0x60006E0")]
	[Address(RVA = "0x1133A48", Offset = "0x1133A48", VA = "0x1133A48")]
	public OuterWaterPlane()
	{
	}

	[Token(Token = "0x60006E1")]
	[Address(RVA = "0x1133A7C", Offset = "0x1133A7C", VA = "0x1133A7C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6AFA14", Offset = "0x6AFA14")]
	private Vector3 <GenerateMesh>b__13_0(int x, int y)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60006E2")]
	[Address(RVA = "0x1133AC4", Offset = "0x1133AC4", VA = "0x1133AC4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6AFA24", Offset = "0x6AFA24")]
	private Vector3 <GenerateMesh>b__13_1(int x, int y)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60006E3")]
	[Address(RVA = "0x1133B18", Offset = "0x1133B18", VA = "0x1133B18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6AFA34", Offset = "0x6AFA34")]
	private Vector3 <GenerateMesh>b__13_2(int x, int y)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60006E4")]
	[Address(RVA = "0x1133B74", Offset = "0x1133B74", VA = "0x1133B74")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6AFA44", Offset = "0x6AFA44")]
	private Vector3 <GenerateMesh>b__13_3(int x, int y)
	{
		return default(Vector3);
	}
}
[Token(Token = "0x20000A4")]
public class PropCollection : ScriptableObject
{
	[Token(Token = "0x400043D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public CityInfo.Theme theme;

	[Token(Token = "0x400043E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<PropInfo> prefabs;

	[Token(Token = "0x60006E5")]
	[Address(RVA = "0x10FF32C", Offset = "0x10FF32C", VA = "0x10FF32C")]
	public PropCollection()
	{
	}
}
[Token(Token = "0x20000A5")]
public class PropDatabase : ScriptableObjectSingleton<PropDatabase>
{
	[Token(Token = "0x200033A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6A81B4", Offset = "0x6A81B4")]
	private sealed class <>c__DisplayClass2_0
	{
		[Token(Token = "0x4001512")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public PropInfo info;

		[Token(Token = "0x600166A")]
		[Address(RVA = "0x10FF4C8", Offset = "0x10FF4C8", VA = "0x10FF4C8")]
		public <>c__DisplayClass2_0()
		{
		}

		[Token(Token = "0x600166B")]
		[Address(RVA = "0x10FF540", Offset = "0x10FF540", VA = "0x10FF540")]
		internal bool <GetIndex>b__0(PropInfo x)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x400043F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<PropInfo> allProps;

	[Token(Token = "0x60006E6")]
	[Address(RVA = "0x10FF334", Offset = "0x10FF334", VA = "0x10FF334")]
	public PropInfo GetFromIndex(int index)
	{
		return null;
	}

	[Token(Token = "0x60006E7")]
	[Address(RVA = "0x10FF3BC", Offset = "0x10FF3BC", VA = "0x10FF3BC")]
	public int GetIndex(PropInfo info)
	{
		return default(int);
	}

	[Token(Token = "0x60006E8")]
	[Address(RVA = "0x10FF4D0", Offset = "0x10FF4D0", VA = "0x10FF4D0")]
	public PropDatabase()
	{
	}
}
[Token(Token = "0x20000A6")]
public class PropInfo : MonoBehaviour
{
	[Token(Token = "0x200033B")]
	public enum Category
	{
		[Token(Token = "0x4001514")]
		Tree,
		[Token(Token = "0x4001515")]
		Rock,
		[Token(Token = "0x4001516")]
		Bush,
		[Token(Token = "0x4001517")]
		Grass,
		[Token(Token = "0x4001518")]
		PalmTree,
		[Token(Token = "0x4001519")]
		Cactus
	}

	[Token(Token = "0x4000440")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public CityInfo.Theme theme;

	[Token(Token = "0x4000441")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Category category;

	[Token(Token = "0x4000442")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int width;

	[Token(Token = "0x4000443")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int height;

	[Token(Token = "0x4000444")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool canBulldoze;

	[Token(Token = "0x4000445")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public int demolitionCost;

	[Token(Token = "0x4000446")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public int buildCost;

	[Token(Token = "0x4000447")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public int sandStormReductionRadius;

	[Token(Token = "0x60006E9")]
	[Address(RVA = "0x10FF60C", Offset = "0x10FF60C", VA = "0x10FF60C")]
	public PropInfo()
	{
	}
}
[Token(Token = "0x20000A7")]
public class Seaport : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x200033C")]
	public class Space
	{
		[Token(Token = "0x2000424")]
		public enum Type
		{
			[Token(Token = "0x4001982")]
			CargoShip,
			[Token(Token = "0x4001983")]
			SmallFerry,
			[Token(Token = "0x4001984")]
			LargeFerry,
			[Token(Token = "0x4001985")]
			SmallBoat
		}

		[Token(Token = "0x400151A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Type type;

		[Token(Token = "0x400151B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AnimationClip enterClip;

		[Token(Token = "0x400151C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AnimationClip exitClip;

		[Token(Token = "0x600166C")]
		[Address(RVA = "0x104FA84", Offset = "0x104FA84", VA = "0x104FA84")]
		public Space()
		{
		}
	}

	[Token(Token = "0x200033D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6A81C4", Offset = "0x6A81C4")]
	private sealed class <ShowRoutine>d__25 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400151D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400151E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400151F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Seaport <>4__this;

		[Token(Token = "0x4001520")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Bounds <bounds>5__2;

		[Token(Token = "0x4001521")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private DynamicShadowBounds <dsb>5__3;

		[Token(Token = "0x170003C4")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001670")]
			[Address(RVA = "0x104FA14", Offset = "0x104FA14", VA = "0x104FA14", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003C5")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001672")]
			[Address(RVA = "0x104FA7C", Offset = "0x104FA7C", VA = "0x104FA7C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600166D")]
		[Address(RVA = "0x104F1E8", Offset = "0x104F1E8", VA = "0x104F1E8")]
		[DebuggerHidden]
		public <ShowRoutine>d__25(int <>1__state)
		{
		}

		[Token(Token = "0x600166E")]
		[Address(RVA = "0x104F428", Offset = "0x104F428", VA = "0x104F428", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600166F")]
		[Address(RVA = "0x104F42C", Offset = "0x104F42C", VA = "0x104F42C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001671")]
		[Address(RVA = "0x104FA1C", Offset = "0x104FA1C", VA = "0x104FA1C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000448")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public LandscapeRoadTile exitRoadTile;

	[Token(Token = "0x4000449")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public LandscapeRoadTile adjacentRoadTile;

	[Token(Token = "0x400044A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform entryTransform;

	[Token(Token = "0x400044B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform exitTransform;

	[Token(Token = "0x400044C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ParticleSystem appearanceEffect;

	[Token(Token = "0x400044D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public AudioClip appearanceSound;

	[Token(Token = "0x400044E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public int width;

	[Token(Token = "0x400044F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public int height;

	[Token(Token = "0x4000450")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Space[] spaces;

	[Token(Token = "0x4000451")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Transform tutorialTextFocusTransform;

	[Token(Token = "0x4000452")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6A8D3C", Offset = "0x6A8D3C")]
	private bool <isVisible>k__BackingField;

	[Token(Token = "0x4000453")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private City city;

	[Token(Token = "0x4000454")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private int exitTileX;

	[Token(Token = "0x4000455")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private int exitTileY;

	[Token(Token = "0x4000456")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private int exitTileDir;

	[Token(Token = "0x1700015B")]
	public bool isVisible
	{
		[Token(Token = "0x60006EA")]
		[Address(RVA = "0x104EC30", Offset = "0x104EC30", VA = "0x104EC30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6AFA54", Offset = "0x6AFA54")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60006EB")]
		[Address(RVA = "0x104EC38", Offset = "0x104EC38", VA = "0x104EC38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6AFA64", Offset = "0x6AFA64")]
		private set
		{
		}
	}

	[Token(Token = "0x60006EC")]
	[Address(RVA = "0x104EC44", Offset = "0x104EC44", VA = "0x104EC44")]
	public void GetSeaportExitLocation(City city, out int exitX, out int exitY, out int exitDir)
	{
	}

	[Token(Token = "0x60006ED")]
	[Address(RVA = "0x104ECE0", Offset = "0x104ECE0", VA = "0x104ECE0")]
	public void Init(City inCity)
	{
	}

	[Token(Token = "0x60006EE")]
	[Address(RVA = "0x104ECE8", Offset = "0x104ECE8", VA = "0x104ECE8")]
	public void VisitTiles(Action<int, int> visitor)
	{
	}

	[Token(Token = "0x60006EF")]
	[Address(RVA = "0x104EF70", Offset = "0x104EF70", VA = "0x104EF70")]
	public void Hide()
	{
	}

	[Token(Token = "0x60006F0")]
	[Address(RVA = "0x104F01C", Offset = "0x104F01C", VA = "0x104F01C")]
	private void EnableBirdPerches()
	{
	}

	[Token(Token = "0x60006F1")]
	[Address(RVA = "0x104F0DC", Offset = "0x104F0DC", VA = "0x104F0DC")]
	public void ShowWithAnimation()
	{
	}

	[Token(Token = "0x60006F2")]
	[Address(RVA = "0x104F178", Offset = "0x104F178", VA = "0x104F178")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6AFA74", Offset = "0x6AFA74")]
	private IEnumerator ShowRoutine()
	{
		return null;
	}

	[Token(Token = "0x60006F3")]
	[Address(RVA = "0x104F214", Offset = "0x104F214", VA = "0x104F214")]
	public void ShowImmediate()
	{
	}

	[Token(Token = "0x60006F4")]
	[Address(RVA = "0x104F3EC", Offset = "0x104F3EC", VA = "0x104F3EC")]
	public void Reset()
	{
	}

	[Token(Token = "0x60006F5")]
	[Address(RVA = "0x104F410", Offset = "0x104F410", VA = "0x104F410")]
	public Seaport()
	{
	}
}
[Token(Token = "0x20000A8")]
public class ShippingLanes : MonoBehaviour
{
	[Token(Token = "0x4000457")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<Vector3> entryLaneNodes;

	[Token(Token = "0x4000458")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<Vector3> exitLaneNodes;

	[Token(Token = "0x60006F6")]
	[Address(RVA = "0xFE20A4", Offset = "0xFE20A4", VA = "0xFE20A4")]
	public Vector3 CalculateCenter()
	{
		return default(Vector3);
	}

	[Token(Token = "0x60006F7")]
	[Address(RVA = "0xFE220C", Offset = "0xFE220C", VA = "0xFE220C")]
	public ShippingLanes()
	{
	}
}
[Token(Token = "0x20000A9")]
public class ThermalVent : MonoBehaviour
{
	[Token(Token = "0x4000459")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ParticleSystem steam;

	[Token(Token = "0x400045A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject hintArrow;

	[Token(Token = "0x400045B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private MeshBatcherV2 batcher;

	[Token(Token = "0x400045C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private MeshBatcherV2.InstanceId batchId;

	[Token(Token = "0x1700015C")]
	public int x
	{
		[Token(Token = "0x60006F8")]
		[Address(RVA = "0x1071650", Offset = "0x1071650", VA = "0x1071650")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x1700015D")]
	public int y
	{
		[Token(Token = "0x60006F9")]
		[Address(RVA = "0x10716E0", Offset = "0x10716E0", VA = "0x10716E0")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x1700015E")]
	public bool showHintArrow
	{
		[Token(Token = "0x60006FA")]
		[Address(RVA = "0x1071770", Offset = "0x1071770", VA = "0x1071770")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60006FB")]
		[Address(RVA = "0x107178C", Offset = "0x107178C", VA = "0x107178C")]
		set
		{
		}
	}

	[Token(Token = "0x60006FC")]
	[Address(RVA = "0x10717AC", Offset = "0x10717AC", VA = "0x10717AC")]
	private void Awake()
	{
	}

	[Token(Token = "0x60006FD")]
	[Address(RVA = "0x10717E8", Offset = "0x10717E8", VA = "0x10717E8")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60006FE")]
	[Address(RVA = "0x10718EC", Offset = "0x10718EC", VA = "0x10718EC")]
	public void Init(MeshBatcherV2 inMeshBatcher)
	{
	}

	[Token(Token = "0x60006FF")]
	[Address(RVA = "0x1071968", Offset = "0x1071968", VA = "0x1071968")]
	private void AddToBatcher()
	{
	}

	[Token(Token = "0x6000700")]
	[Address(RVA = "0x1071880", Offset = "0x1071880", VA = "0x1071880")]
	private void RemoveFromBatcher()
	{
	}

	[Token(Token = "0x6000701")]
	[Address(RVA = "0x1071B4C", Offset = "0x1071B4C", VA = "0x1071B4C")]
	public void Hide()
	{
	}

	[Token(Token = "0x6000702")]
	[Address(RVA = "0x1071C00", Offset = "0x1071C00", VA = "0x1071C00")]
	public void Show()
	{
	}

	[Token(Token = "0x6000703")]
	[Address(RVA = "0x1071CB4", Offset = "0x1071CB4", VA = "0x1071CB4")]
	public ThermalVent()
	{
	}
}
[Token(Token = "0x20000AA")]
public class Volcano : MonoBehaviour, IDebugPanelProvider
{
	[Token(Token = "0x200033E")]
	public class VolcanoSaveData
	{
		[Token(Token = "0x4001522")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float eruptionTime;

		[Token(Token = "0x4001523")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float timeUntilNextEruption;

		[Token(Token = "0x4001524")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool erupting;

		[Token(Token = "0x4001525")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float timeUntilChunkLaunches;

		[Token(Token = "0x4001526")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int eruptionsOccurred;

		[Token(Token = "0x4001527")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public int activeLavaIndex;

		[Token(Token = "0x6001673")]
		[Address(RVA = "0x1018338", Offset = "0x1018338", VA = "0x1018338")]
		public VolcanoSaveData()
		{
		}
	}

	[Token(Token = "0x400045D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float eruptionDuration;

	[Token(Token = "0x400045E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float flowStartTime;

	[Token(Token = "0x400045F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float flowDuration;

	[Token(Token = "0x4000460")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float damageTime;

	[Token(Token = "0x4000461")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float eruptionEffectStartTime;

	[Token(Token = "0x4000462")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float lavaFadeTime;

	[Token(Token = "0x4000463")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float chunkLaunchRadius;

	[Token(Token = "0x4000464")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public int chunkLaunchesPerEruption;

	[Token(Token = "0x4000465")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public int minEruptionDelayMinutes;

	[Token(Token = "0x4000466")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public int maxEruptionDelayMinutes;

	[Token(Token = "0x4000467")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public int minEruptionSpacingMinutes;

	[Token(Token = "0x4000468")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public int maxEruptionSpacingMinutes;

	[Token(Token = "0x4000469")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject steamEffect;

	[Token(Token = "0x400046A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject smokeEffect;

	[Token(Token = "0x400046B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GameObject eruptionEffect;

	[Token(Token = "0x400046C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public AudioSource soundEffect;

	[Token(Token = "0x400046D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public AudioSource lavaSoundEffect;

	[Token(Token = "0x400046E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public AudioSource hissSoundEffect;

	[Token(Token = "0x400046F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public List<VolcanoLava> volcanoLavas;

	[Token(Token = "0x4000470")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private int activeLavaIndex;

	[Token(Token = "0x4000471")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Transform chunkLaunchTransform;

	[Token(Token = "0x4000472")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public FlyingVolcanoChunk flyingVolcanoChunkPrefab;

	[Token(Token = "0x4000473")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private int eruptionsOccurred;

	[Token(Token = "0x4000474")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6A8D4C", Offset = "0x6A8D4C")]
	private bool <erupting>k__BackingField;

	[Token(Token = "0x4000475")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private float eruptionTime;

	[Token(Token = "0x4000476")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6A8D5C", Offset = "0x6A8D5C")]
	private float <timeUntilNextEruption>k__BackingField;

	[Token(Token = "0x4000477")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private float timeUntilSoundPlays;

	[Token(Token = "0x4000478")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private float timeUntilChunkLaunches;

	[Token(Token = "0x4000479")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private City city;

	[Token(Token = "0x400047A")]
	private const float minSoundDelay = 1f;

	[Token(Token = "0x400047B")]
	private const float maxSoundDelay = 3f;

	[Token(Token = "0x1700015F")]
	private VolcanoLava lava
	{
		[Token(Token = "0x6000704")]
		[Address(RVA = "0x1016BB4", Offset = "0x1016BB4", VA = "0x1016BB4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000160")]
	public bool erupting
	{
		[Token(Token = "0x6000705")]
		[Address(RVA = "0x1016C24", Offset = "0x1016C24", VA = "0x1016C24")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6AFAD8", Offset = "0x6AFAD8")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000706")]
		[Address(RVA = "0x1016C2C", Offset = "0x1016C2C", VA = "0x1016C2C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6AFAE8", Offset = "0x6AFAE8")]
		private set
		{
		}
	}

	[Token(Token = "0x17000161")]
	public float timeUntilNextEruption
	{
		[Token(Token = "0x6000707")]
		[Address(RVA = "0x1016C38", Offset = "0x1016C38", VA = "0x1016C38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6AFAF8", Offset = "0x6AFAF8")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000708")]
		[Address(RVA = "0x1016C40", Offset = "0x1016C40", VA = "0x1016C40")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6AFB08", Offset = "0x6AFB08")]
		private set
		{
		}
	}

	[Token(Token = "0x6000709")]
	[Address(RVA = "0x1016C48", Offset = "0x1016C48", VA = "0x1016C48")]
	private void Start()
	{
	}

	[Token(Token = "0x600070A")]
	[Address(RVA = "0x1016E88", Offset = "0x1016E88", VA = "0x1016E88")]
	public void Init(City inCity)
	{
	}

	[Token(Token = "0x600070B")]
	[Address(RVA = "0x1016D88", Offset = "0x1016D88", VA = "0x1016D88")]
	private void SetEffectsEnabled(GameObject obj, bool enabled)
	{
	}

	[Token(Token = "0x600070C")]
	[Address(RVA = "0x1016E90", Offset = "0x1016E90", VA = "0x1016E90")]
	public void Erupt()
	{
	}

	[Token(Token = "0x600070D")]
	[Address(RVA = "0x101709C", Offset = "0x101709C", VA = "0x101709C")]
	private void VisitDamagePoints(Action<int, int> action)
	{
	}

	[Token(Token = "0x600070E")]
	[Address(RVA = "0x10173A0", Offset = "0x10173A0", VA = "0x10173A0")]
	private void ApplyDamage()
	{
	}

	[Token(Token = "0x600070F")]
	[Address(RVA = "0x101741C", Offset = "0x101741C", VA = "0x101741C")]
	private void UnblockRoads()
	{
	}

	[Token(Token = "0x6000710")]
	[Address(RVA = "0x1017498", Offset = "0x1017498", VA = "0x1017498")]
	private void Update()
	{
	}

	[Token(Token = "0x6000711")]
	[Address(RVA = "0x1017890", Offset = "0x1017890", VA = "0x1017890")]
	private void LaunchChunk()
	{
	}

	[Token(Token = "0x6000712")]
	[Address(RVA = "0x1017D58", Offset = "0x1017D58", VA = "0x1017D58", Slot = "4")]
	public void OnDebugPanel()
	{
	}

	[Token(Token = "0x6000713")]
	[Address(RVA = "0x10182A0", Offset = "0x10182A0", VA = "0x10182A0")]
	public VolcanoSaveData OnSave()
	{
		return null;
	}

	[Token(Token = "0x6000714")]
	[Address(RVA = "0x1018340", Offset = "0x1018340", VA = "0x1018340")]
	public void OnLoad(VolcanoSaveData saveData)
	{
	}

	[Token(Token = "0x6000715")]
	[Address(RVA = "0x1018154", Offset = "0x1018154", VA = "0x1018154")]
	public void Reset()
	{
	}

	[Token(Token = "0x6000716")]
	[Address(RVA = "0x10184F4", Offset = "0x10184F4", VA = "0x10184F4")]
	public Volcano()
	{
	}

	[Token(Token = "0x6000717")]
	[Address(RVA = "0x1018598", Offset = "0x1018598", VA = "0x1018598")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6AFB18", Offset = "0x6AFB18")]
	private void <ApplyDamage>b__44_0(int i, int j)
	{
	}

	[Token(Token = "0x6000718")]
	[Address(RVA = "0x1018668", Offset = "0x1018668", VA = "0x1018668")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6AFB28", Offset = "0x6AFB28")]
	private void <UnblockRoads>b__45_0(int i, int j)
	{
	}
}
[Token(Token = "0x20000AB")]
public class VolcanoLava : MonoBehaviour
{
	[Token(Token = "0x400047C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<Vector3> damagePoints;

	[Token(Token = "0x400047D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float damagePointRadius;

	[Token(Token = "0x400047E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private MeshRenderer lavaEffect;

	[Token(Token = "0x400047F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Material lavaEffectMaterial;

	[Token(Token = "0x4000480")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int opacityId;

	[Token(Token = "0x4000481")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private int flowAmountId;

	[Token(Token = "0x17000162")]
	public float opacity
	{
		[Token(Token = "0x6000719")]
		[Address(RVA = "0x1017D34", Offset = "0x1017D34", VA = "0x1017D34")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x600071A")]
		[Address(RVA = "0x1017054", Offset = "0x1017054", VA = "0x1017054")]
		set
		{
		}
	}

	[Token(Token = "0x17000163")]
	public float flowAmount
	{
		[Token(Token = "0x600071B")]
		[Address(RVA = "0x10187B0", Offset = "0x10187B0", VA = "0x10187B0")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x600071C")]
		[Address(RVA = "0x1017078", Offset = "0x1017078", VA = "0x1017078")]
		set
		{
		}
	}

	[Token(Token = "0x600071D")]
	[Address(RVA = "0x10187D4", Offset = "0x10187D4", VA = "0x10187D4")]
	private void Awake()
	{
	}

	[Token(Token = "0x600071E")]
	[Address(RVA = "0x10188D0", Offset = "0x10188D0", VA = "0x10188D0")]
	public void OnEnable()
	{
	}

	[Token(Token = "0x600071F")]
	[Address(RVA = "0x10188F0", Offset = "0x10188F0", VA = "0x10188F0")]
	public void OnDisable()
	{
	}

	[Token(Token = "0x6000720")]
	[Address(RVA = "0x1018910", Offset = "0x1018910", VA = "0x1018910")]
	public VolcanoLava()
	{
	}
}
[Token(Token = "0x20000AC")]
public class BoatRescueStory : MiniStory
{
	[Token(Token = "0x4000482")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject sinkingBoatPrefab;

	[Token(Token = "0x4000483")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private GameObject sinkingBoat;

	[Token(Token = "0x4000484")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private EmergencyIncidentManager.Incident incident;

	[Token(Token = "0x17000164")]
	public override bool canActivate
	{
		[Token(Token = "0x6000721")]
		[Address(RVA = "0x10A9F38", Offset = "0x10A9F38", VA = "0x10A9F38", Slot = "4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000722")]
	[Address(RVA = "0x10A9F40", Offset = "0x10A9F40", VA = "0x10A9F40", Slot = "9")]
	public override void OnInit()
	{
	}

	[Token(Token = "0x6000723")]
	[Address(RVA = "0x10A9FEC", Offset = "0x10A9FEC", VA = "0x10A9FEC", Slot = "8")]
	public override void Cancel()
	{
	}

	[Token(Token = "0x6000724")]
	[Address(RVA = "0x10AA014", Offset = "0x10AA014", VA = "0x10AA014", Slot = "7")]
	public override bool Activate()
	{
		return default(bool);
	}

	[Token(Token = "0x6000725")]
	[Address(RVA = "0x10AA484", Offset = "0x10AA484", VA = "0x10AA484", Slot = "10")]
	public override void Simulate(float deltaTime)
	{
	}

	[Token(Token = "0x6000726")]
	[Address(RVA = "0x10AA610", Offset = "0x10AA610", VA = "0x10AA610")]
	public BoatRescueStory()
	{
	}
}
[Token(Token = "0x20000AD")]
public class DolphinStory : MiniStory
{
	[Token(Token = "0x4000485")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Dolphin dolphinPrefab;

	[Token(Token = "0x4000486")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public int dolphinCount;

	[Token(Token = "0x4000487")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float minimumDisplayTime;

	[Token(Token = "0x4000488")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float maxActiveTime;

	[Token(Token = "0x4000489")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private ShipInfo targetShip;

	[Token(Token = "0x400048A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private List<Dolphin> dolphins;

	[Token(Token = "0x17000165")]
	public override float timeBetweenReactivation
	{
		[Token(Token = "0x6000727")]
		[Address(RVA = "0x1030FBC", Offset = "0x1030FBC", VA = "0x1030FBC", Slot = "6")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000166")]
	public override bool canActivate
	{
		[Token(Token = "0x6000728")]
		[Address(RVA = "0x1030FC8", Offset = "0x1030FC8", VA = "0x1030FC8", Slot = "4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000729")]
	[Address(RVA = "0x1030FD0", Offset = "0x1030FD0", VA = "0x1030FD0", Slot = "7")]
	public override bool Activate()
	{
		return default(bool);
	}

	[Token(Token = "0x600072A")]
	[Address(RVA = "0x1031418", Offset = "0x1031418", VA = "0x1031418", Slot = "8")]
	public override void Cancel()
	{
	}

	[Token(Token = "0x600072B")]
	[Address(RVA = "0x103100C", Offset = "0x103100C", VA = "0x103100C")]
	private bool ActivateInternal()
	{
		return default(bool);
	}

	[Token(Token = "0x600072C")]
	[Address(RVA = "0x1031560", Offset = "0x1031560", VA = "0x1031560", Slot = "10")]
	public override void Simulate(float deltaTime)
	{
	}

	[Token(Token = "0x600072D")]
	[Address(RVA = "0x103177C", Offset = "0x103177C", VA = "0x103177C")]
	public DolphinStory()
	{
	}
}
[Token(Token = "0x20000AE")]
public class HangGliderLaunchPosition : MonoBehaviour
{
	[Token(Token = "0x600072E")]
	[Address(RVA = "0x1065CC4", Offset = "0x1065CC4", VA = "0x1065CC4")]
	private void Awake()
	{
	}

	[Token(Token = "0x600072F")]
	[Address(RVA = "0x1065D70", Offset = "0x1065D70", VA = "0x1065D70")]
	public HangGliderLaunchPosition()
	{
	}
}
[Token(Token = "0x20000AF")]
public class HangGliderStory : MiniStory
{
	[Token(Token = "0x400048B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public List<HangGlider> gliderPrefabs;

	[Token(Token = "0x400048C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public int minGliders;

	[Token(Token = "0x400048D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public int maxGliders;

	[Token(Token = "0x400048E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float maxTimeActive;

	[Token(Token = "0x400048F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private HangGliderLaunchPosition[] launchPositions;

	[Token(Token = "0x4000490")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private List<HangGlider> gliders;

	[Token(Token = "0x17000167")]
	public override bool canActivate
	{
		[Token(Token = "0x6000730")]
		[Address(RVA = "0x1065D78", Offset = "0x1065D78", VA = "0x1065D78", Slot = "4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000731")]
	[Address(RVA = "0x1065DB0", Offset = "0x1065DB0", VA = "0x1065DB0", Slot = "9")]
	public override void OnInit()
	{
	}

	[Token(Token = "0x6000732")]
	[Address(RVA = "0x1065E20", Offset = "0x1065E20", VA = "0x1065E20", Slot = "8")]
	public override void Cancel()
	{
	}

	[Token(Token = "0x6000733")]
	[Address(RVA = "0x1065F68", Offset = "0x1065F68", VA = "0x1065F68", Slot = "7")]
	public override bool Activate()
	{
		return default(bool);
	}

	[Token(Token = "0x6000734")]
	[Address(RVA = "0x1066468", Offset = "0x1066468", VA = "0x1066468", Slot = "10")]
	public override void Simulate(float deltaTime)
	{
	}

	[Token(Token = "0x6000735")]
	[Address(RVA = "0x10665B0", Offset = "0x10665B0", VA = "0x10665B0")]
	public HangGliderStory()
	{
	}
}
[Token(Token = "0x20000B0")]
public class HotAirBalloonStory : MiniStory
{
	[Token(Token = "0x4000491")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public List<HotAirBalloon> balloonPrefabs;

	[Token(Token = "0x4000492")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float totalStoryTime;

	[Token(Token = "0x4000493")]
	private const int minBalloons = 3;

	[Token(Token = "0x4000494")]
	private const int maxBalloons = 5;

	[Token(Token = "0x4000495")]
	private const int maxSpawnLocations = 5;

	[Token(Token = "0x4000496")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Vector3[] spawnLocations;

	[Token(Token = "0x4000497")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6A8D6C", Offset = "0x6A8D6C")]
	private List<HotAirBalloon> <balloons>k__BackingField;

	[Token(Token = "0x17000168")]
	public override bool canActivate
	{
		[Token(Token = "0x6000736")]
		[Address(RVA = "0x106D714", Offset = "0x106D714", VA = "0x106D714", Slot = "4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000169")]
	public override bool shouldSuppressPlaneSpawning
	{
		[Token(Token = "0x6000737")]
		[Address(RVA = "0x106D748", Offset = "0x106D748", VA = "0x106D748", Slot = "5")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700016A")]
	public List<HotAirBalloon> balloons
	{
		[Token(Token = "0x6000738")]
		[Address(RVA = "0x106D750", Offset = "0x106D750", VA = "0x106D750")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6AFB38", Offset = "0x6AFB38")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000739")]
		[Address(RVA = "0x106D758", Offset = "0x106D758", VA = "0x106D758")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6AFB48", Offset = "0x6AFB48")]
		private set
		{
		}
	}

	[Token(Token = "0x600073A")]
	[Address(RVA = "0x106D760", Offset = "0x106D760", VA = "0x106D760")]
	private void Awake()
	{
	}

	[Token(Token = "0x600073B")]
	[Address(RVA = "0x106D7C8", Offset = "0x106D7C8", VA = "0x106D7C8", Slot = "8")]
	public override void Cancel()
	{
	}

	[Token(Token = "0x600073C")]
	[Address(RVA = "0x106D910", Offset = "0x106D910", VA = "0x106D910", Slot = "7")]
	public override bool Activate()
	{
		return default(bool);
	}

	[Token(Token = "0x600073D")]
	[Address(RVA = "0x106DD3C", Offset = "0x106DD3C", VA = "0x106DD3C", Slot = "10")]
	public override void Simulate(float deltaTime)
	{
	}

	[Token(Token = "0x600073E")]
	[Address(RVA = "0x106DEB8", Offset = "0x106DEB8", VA = "0x106DEB8")]
	public HotAirBalloonStory()
	{
	}
}
[Token(Token = "0x20000B1")]
public class MiniStoriesDebugPanel : MonoBehaviour
{
	[Token(Token = "0x200033F")]
	private class ButtonDetails
	{
		[Token(Token = "0x4001528")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public GameObject gameObject;

		[Token(Token = "0x4001529")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Text text;

		[Token(Token = "0x400152A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MiniStory miniStory;

		[Token(Token = "0x400152B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Button button;

		[Token(Token = "0x6001674")]
		[Address(RVA = "0x100011C", Offset = "0x100011C", VA = "0x100011C")]
		public void OnClick()
		{
		}

		[Token(Token = "0x6001675")]
		[Address(RVA = "0x1000054", Offset = "0x1000054", VA = "0x1000054")]
		public ButtonDetails()
		{
		}
	}

	[Token(Token = "0x4000498")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private List<ButtonDetails> buttons;

	[Token(Token = "0x4000499")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Text statusText;

	[Token(Token = "0x400049A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject buttonPrefab;

	[Token(Token = "0x400049B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform buttonRoot;

	[Token(Token = "0x400049C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float buttonSpacing;

	[Token(Token = "0x600073F")]
	[Address(RVA = "0xFFF734", Offset = "0xFFF734", VA = "0xFFF734")]
	private void Update()
	{
	}

	[Token(Token = "0x6000740")]
	[Address(RVA = "0x10000A4", Offset = "0x10000A4", VA = "0x10000A4")]
	public MiniStoriesDebugPanel()
	{
	}
}
[Token(Token = "0x20000B2")]
public class MountainRescuePosition : MonoBehaviour
{
	[Token(Token = "0x6000741")]
	[Address(RVA = "0x100548C", Offset = "0x100548C", VA = "0x100548C")]
	public MountainRescuePosition()
	{
	}
}
[Token(Token = "0x20000B3")]
public class RocketLaunchStory : MiniStory
{
	[Token(Token = "0x400049D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public BuildingInfo launchSitePrefab;

	[Token(Token = "0x400049E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private RocketLaunchSite cachedLaunchSite;

	[Token(Token = "0x1700016B")]
	public override bool shouldSuppressPlaneSpawning
	{
		[Token(Token = "0x6000742")]
		[Address(RVA = "0x1040820", Offset = "0x1040820", VA = "0x1040820", Slot = "5")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700016C")]
	public override bool canActivate
	{
		[Token(Token = "0x6000743")]
		[Address(RVA = "0x1040828", Offset = "0x1040828", VA = "0x1040828", Slot = "4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700016D")]
	private RocketLaunchSite launchSite
	{
		[Token(Token = "0x6000744")]
		[Address(RVA = "0x1040830", Offset = "0x1040830", VA = "0x1040830")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000745")]
	[Address(RVA = "0x10409E8", Offset = "0x10409E8", VA = "0x10409E8", Slot = "8")]
	public override void Cancel()
	{
	}

	[Token(Token = "0x6000746")]
	[Address(RVA = "0x10409EC", Offset = "0x10409EC", VA = "0x10409EC", Slot = "7")]
	public override bool Activate()
	{
		return default(bool);
	}

	[Token(Token = "0x6000747")]
	[Address(RVA = "0x1040B00", Offset = "0x1040B00", VA = "0x1040B00", Slot = "10")]
	public override void Simulate(float deltaTime)
	{
	}

	[Token(Token = "0x6000748")]
	[Address(RVA = "0x1040BB4", Offset = "0x1040BB4", VA = "0x1040BB4")]
	public RocketLaunchStory()
	{
	}
}
[Token(Token = "0x20000B4")]
public class SkySignStory : MiniStory
{
	[Token(Token = "0x400049F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public List<SkySignPlane> skySignPlanePrefabs;

	[Token(Token = "0x40004A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private SkySignPlane skySignPlane;

	[Token(Token = "0x40004A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float flightHeight;

	[Token(Token = "0x40004A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public bool debugDisableStory;

	[Token(Token = "0x40004A3")]
	private const int numSignTexts = 31;

	[Token(Token = "0x1700016E")]
	public override bool canActivate
	{
		[Token(Token = "0x6000749")]
		[Address(RVA = "0xFE6EF8", Offset = "0xFE6EF8", VA = "0xFE6EF8", Slot = "4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x600074A")]
	[Address(RVA = "0xFE6F2C", Offset = "0xFE6F2C", VA = "0xFE6F2C", Slot = "7")]
	public override bool Activate()
	{
		return default(bool);
	}

	[Token(Token = "0x600074B")]
	[Address(RVA = "0xFE72C0", Offset = "0xFE72C0", VA = "0xFE72C0", Slot = "8")]
	public override void Cancel()
	{
	}

	[Token(Token = "0x600074C")]
	[Address(RVA = "0xFE7384", Offset = "0xFE7384", VA = "0xFE7384", Slot = "10")]
	public override void Simulate(float deltaTime)
	{
	}

	[Token(Token = "0x600074D")]
	[Address(RVA = "0xFE75DC", Offset = "0xFE75DC", VA = "0xFE75DC")]
	public SkySignStory()
	{
	}
}
[Token(Token = "0x20000B5")]
public class UFOStory : MiniStory
{
	[Token(Token = "0x40004A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject ufoPrefab;

	[Token(Token = "0x40004A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float flightHeight;

	[Token(Token = "0x40004A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float flightSpeed;

	[Token(Token = "0x40004A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float rotationSpeed;

	[Token(Token = "0x40004A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public float tiltAngle;

	[Token(Token = "0x40004A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private GameObject ufo;

	[Token(Token = "0x40004AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Vector3 travelDirection;

	[Token(Token = "0x40004AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private GazeTimer gazeTimer;

	[Token(Token = "0x40004AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private bool playerSightedUFO;

	[Token(Token = "0x1700016F")]
	public override bool canActivate
	{
		[Token(Token = "0x600074E")]
		[Address(RVA = "0x114070C", Offset = "0x114070C", VA = "0x114070C", Slot = "4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x600074F")]
	[Address(RVA = "0x1140740", Offset = "0x1140740", VA = "0x1140740", Slot = "7")]
	public override bool Activate()
	{
		return default(bool);
	}

	[Token(Token = "0x6000750")]
	[Address(RVA = "0x1140A64", Offset = "0x1140A64", VA = "0x1140A64", Slot = "8")]
	public override void Cancel()
	{
	}

	[Token(Token = "0x6000751")]
	[Address(RVA = "0x1140B10", Offset = "0x1140B10", VA = "0x1140B10", Slot = "10")]
	public override void Simulate(float deltaTime)
	{
	}

	[Token(Token = "0x6000752")]
	[Address(RVA = "0x1140EDC", Offset = "0x1140EDC", VA = "0x1140EDC")]
	public UFOStory()
	{
	}
}
[Token(Token = "0x20000B6")]
public class WhaleStory : MiniStory
{
	[Token(Token = "0x40004AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject whalePrefab;

	[Token(Token = "0x40004AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public int timesToShow;

	[Token(Token = "0x40004AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float durationBetweenShow;

	[Token(Token = "0x40004B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private GameObject whaleGroup;

	[Token(Token = "0x40004B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private List<Whale> whales;

	[Token(Token = "0x40004B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private int showCount;

	[Token(Token = "0x40004B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private float showTimer;

	[Token(Token = "0x40004B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Vector3 basePosition;

	[Token(Token = "0x17000170")]
	public override bool canActivate
	{
		[Token(Token = "0x6000753")]
		[Address(RVA = "0x101B170", Offset = "0x101B170", VA = "0x101B170", Slot = "4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000171")]
	public override float timeBetweenReactivation
	{
		[Token(Token = "0x6000754")]
		[Address(RVA = "0x101B178", Offset = "0x101B178", VA = "0x101B178", Slot = "6")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x6000755")]
	[Address(RVA = "0x101B184", Offset = "0x101B184", VA = "0x101B184", Slot = "9")]
	public override void OnInit()
	{
	}

	[Token(Token = "0x6000756")]
	[Address(RVA = "0x101B24C", Offset = "0x101B24C", VA = "0x101B24C", Slot = "8")]
	public override void Cancel()
	{
	}

	[Token(Token = "0x6000757")]
	[Address(RVA = "0x101B358", Offset = "0x101B358", VA = "0x101B358", Slot = "7")]
	public override bool Activate()
	{
		return default(bool);
	}

	[Token(Token = "0x6000758")]
	[Address(RVA = "0x101B600", Offset = "0x101B600", VA = "0x101B600")]
	private void ShowWhales()
	{
	}

	[Token(Token = "0x6000759")]
	[Address(RVA = "0x101B6C4", Offset = "0x101B6C4", VA = "0x101B6C4", Slot = "10")]
	public override void Simulate(float deltaTime)
	{
	}

	[Token(Token = "0x600075A")]
	[Address(RVA = "0x101B970", Offset = "0x101B970", VA = "0x101B970")]
	public WhaleStory()
	{
	}
}
[Token(Token = "0x20000B7")]
public class ConstructionCost
{
	[Token(Token = "0x40004B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public BuildingInfo buildingToConstruct;

	[Token(Token = "0x40004B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int buildingToConstructX;

	[Token(Token = "0x40004B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int buildingToConstructY;

	[Token(Token = "0x40004B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public BuildingManager.BuildPlacementQueryResult buildingPlacementQueryResult;

	[Token(Token = "0x40004B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int buildCost;

	[Token(Token = "0x40004BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int upgradeCost;

	[Token(Token = "0x40004BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public int demolitionCost;

	[Token(Token = "0x40004BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public int deforestationCost;

	[Token(Token = "0x40004BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public int refundAmount;

	[Token(Token = "0x40004BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public int regionUnlockCost;

	[Token(Token = "0x40004BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public List<BuildingInstance> buildingsToDemolish;

	[Token(Token = "0x40004C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public HashSet<int> regionsToUnlock;

	[Token(Token = "0x40004C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public bool showTip;

	[Token(Token = "0x40004C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
	public bool cannotBuildHere;

	[Token(Token = "0x40004C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x52")]
	public bool showRegionsCannotBeUnlockedMessage;

	[Token(Token = "0x40004C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public Vector3 tipLocation;

	[Token(Token = "0x40004C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public bool[] propsToDemolish;

	[Token(Token = "0x40004C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public List<LandscapeFeature> landscapeFeaturesToDemolish;

	[Token(Token = "0x17000172")]
	public int totalCost
	{
		[Token(Token = "0x600075B")]
		[Address(RVA = "0x11266F4", Offset = "0x11266F4", VA = "0x11266F4")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x600075C")]
	[Address(RVA = "0x1126718", Offset = "0x1126718", VA = "0x1126718")]
	public void Reset(City city)
	{
	}

	[Token(Token = "0x600075D")]
	[Address(RVA = "0x1126898", Offset = "0x1126898", VA = "0x1126898")]
	public void AddBuildingToDemolish(BuildingInstance building)
	{
	}

	[Token(Token = "0x600075E")]
	[Address(RVA = "0x1126A90", Offset = "0x1126A90", VA = "0x1126A90")]
	public ConstructionCost()
	{
	}
}
[Token(Token = "0x20000B8")]
public class DebugStats : MonoBehaviour
{
	[Token(Token = "0x600075F")]
	[Address(RVA = "0x102C538", Offset = "0x102C538", VA = "0x102C538")]
	public DebugStats()
	{
	}
}
[Token(Token = "0x20000B9")]
public struct GazeTimer
{
	[Token(Token = "0x40004C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float timeGazingAtPoint;

	[Token(Token = "0x40004C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public float timeFocusingAtPoint;

	[Token(Token = "0x40004C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float timeNotLookingAtPoint;

	[Token(Token = "0x6000760")]
	[Address(RVA = "0x721AD4", Offset = "0x721AD4", VA = "0x721AD4")]
	public void Update(Vector3 point, float deltaTime)
	{
	}
}
[Token(Token = "0x20000BA")]
public class Debug3DOFInput : Motion3DOFInput
{
	[Token(Token = "0x40004CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public GameObject controllerPrefab;

	[Token(Token = "0x40004CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public float zoomSpeed;

	[Token(Token = "0x40004CC")]
	private const float mouseSpeed = 10f;

	[Token(Token = "0x40004CD")]
	private const float rollSpeed = 45f;

	[Token(Token = "0x40004CE")]
	private const float maxPitch = 90f;

	[Token(Token = "0x40004CF")]
	private const float maxYaw = 180f;

	[Token(Token = "0x40004D0")]
	private const float cameraLag = 0.8f;

	[Token(Token = "0x40004D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
	private float controllerRoll;

	[Token(Token = "0x17000173")]
	public override bool isAvailable
	{
		[Token(Token = "0x6000761")]
		[Address(RVA = "0x102B190", Offset = "0x102B190", VA = "0x102B190", Slot = "8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000174")]
	public override bool isLeftHanded
	{
		[Token(Token = "0x6000762")]
		[Address(RVA = "0x102B214", Offset = "0x102B214", VA = "0x102B214", Slot = "19")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000175")]
	public override int priority
	{
		[Token(Token = "0x6000763")]
		[Address(RVA = "0x102B21C", Offset = "0x102B21C", VA = "0x102B21C", Slot = "9")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x6000764")]
	[Address(RVA = "0x102B224", Offset = "0x102B224", VA = "0x102B224", Slot = "17")]
	public override GameObject GetControllerMesh()
	{
		return null;
	}

	[Token(Token = "0x6000765")]
	[Address(RVA = "0x102B22C", Offset = "0x102B22C", VA = "0x102B22C", Slot = "18")]
	public override Quaternion GetControllerRotation()
	{
		return default(Quaternion);
	}

	[Token(Token = "0x6000766")]
	[Address(RVA = "0x102B258", Offset = "0x102B258", VA = "0x102B258", Slot = "7")]
	public override void UpdateInputInternal()
	{
	}

	[Token(Token = "0x6000767")]
	[Address(RVA = "0x102B478", Offset = "0x102B478", VA = "0x102B478")]
	public Debug3DOFInput()
	{
	}
}
[Token(Token = "0x20000BB")]
public abstract class Motion3DOFInput : MotionInput
{
	[Token(Token = "0x40004D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GameObject zoomIndicatorPrefab;

	[Token(Token = "0x40004D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Vector3 zoomIndicatorOffset;

	[Token(Token = "0x40004D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public Vector3 elbowOffsetVector;

	[Token(Token = "0x40004D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public float forearmLength;

	[Token(Token = "0x40004D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public float maxElbowRotationAngle;

	[Token(Token = "0x40004D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public float elbowRotationBuffer;

	[Token(Token = "0x40004D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public float pitchAdjustment;

	[Token(Token = "0x40004D9")]
	private const float zoomTwistAngle = 10f;

	[Token(Token = "0x40004DA")]
	private const float zoomTwistStep = 0.1f;

	[Token(Token = "0x40004DB")]
	private const float twistStep = 1f;

	[Token(Token = "0x40004DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private float cumulativeTwist;

	[Token(Token = "0x40004DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private float queuedZoom;

	[Token(Token = "0x40004DE")]
	private const float zoomSpeed = 50f;

	[Token(Token = "0x40004DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	protected GameObject controllerMesh;

	[Token(Token = "0x40004E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private bool wasGrabMoving;

	[Token(Token = "0x40004E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x99")]
	private bool hasTriggeredTwistZoom;

	[Token(Token = "0x40004E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	private Quaternion initalGrabMoveRotation;

	[Token(Token = "0x40004E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private Quaternion lastGrabMoveRotation;

	[Token(Token = "0x40004E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private LineRenderer guideLineRenderer;

	[Token(Token = "0x40004E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private ZoomIndicator zoomIndicator;

	[Token(Token = "0x17000176")]
	public abstract bool isLeftHanded
	{
		[Token(Token = "0x600076A")]
		get;
	}

	[Token(Token = "0x6000768")]
	public abstract GameObject GetControllerMesh();

	[Token(Token = "0x6000769")]
	public abstract Quaternion GetControllerRotation();

	[Token(Token = "0x600076B")]
	[Address(RVA = "0x10021E0", Offset = "0x10021E0", VA = "0x10021E0", Slot = "16")]
	protected override void Start()
	{
	}

	[Token(Token = "0x600076C")]
	[Address(RVA = "0x10026A8", Offset = "0x10026A8", VA = "0x10026A8")]
	private float GetTwist(Quaternion prevRotation, Quaternion nextRotation)
	{
		return default(float);
	}

	[Token(Token = "0x600076D")]
	[Address(RVA = "0x100281C", Offset = "0x100281C", VA = "0x100281C", Slot = "7")]
	public override void UpdateInputInternal()
	{
	}

	[Token(Token = "0x600076E")]
	[Address(RVA = "0x1002B18", Offset = "0x1002B18", VA = "0x1002B18")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x600076F")]
	[Address(RVA = "0x10038A0", Offset = "0x10038A0", VA = "0x10038A0", Slot = "4")]
	public override bool GetCursorRay(out Ray cursorRay)
	{
		return default(bool);
	}

	[Token(Token = "0x6000770")]
	[Address(RVA = "0x1003E78", Offset = "0x1003E78", VA = "0x1003E78")]
	private float CurveFunction(float x)
	{
		return default(float);
	}

	[Token(Token = "0x6000771")]
	[Address(RVA = "0x1003E80", Offset = "0x1003E80", VA = "0x1003E80")]
	public Quaternion GenerateFacingRotation(Quaternion hmdRotation)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x6000772")]
	[Address(RVA = "0x1004228", Offset = "0x1004228", VA = "0x1004228", Slot = "20")]
	public virtual Vector3 GeneratePosition(Vector3 hmdPosition, Quaternion hmdRotation, Quaternion controllerRotation)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000773")]
	[Address(RVA = "0x1004444", Offset = "0x1004444", VA = "0x1004444")]
	protected Motion3DOFInput()
	{
	}
}
[Token(Token = "0x20000BC")]
public abstract class Motion6DOFInput : MotionInput
{
	[Token(Token = "0x2000340")]
	public enum Hand
	{
		[Token(Token = "0x400152D")]
		Left,
		[Token(Token = "0x400152E")]
		Right
	}

	[Token(Token = "0x40004E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	protected LineRenderer leftGuideLine;

	[Token(Token = "0x40004E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	protected LineRenderer rightGuideLine;

	[Token(Token = "0x40004E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	protected TransformStabiliser leftTransformStabiliser;

	[Token(Token = "0x40004E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	protected TransformStabiliser rightTransformStabiliser;

	[Token(Token = "0x17000177")]
	public override bool usesPositionalTracking
	{
		[Token(Token = "0x6000778")]
		[Address(RVA = "0x10044F4", Offset = "0x10044F4", VA = "0x10044F4", Slot = "5")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000178")]
	public override bool hasSecondaryInput
	{
		[Token(Token = "0x6000779")]
		[Address(RVA = "0x10044FC", Offset = "0x10044FC", VA = "0x10044FC", Slot = "10")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000179")]
	public Hand dominantHand
	{
		[Token(Token = "0x600077A")]
		[Address(RVA = "0x1004504", Offset = "0x1004504", VA = "0x1004504")]
		get
		{
			return default(Hand);
		}
	}

	[Token(Token = "0x1700017A")]
	public Hand nonDominantHand
	{
		[Token(Token = "0x600077B")]
		[Address(RVA = "0x100452C", Offset = "0x100452C", VA = "0x100452C")]
		get
		{
			return default(Hand);
		}
	}

	[Token(Token = "0x6000774")]
	public abstract GameObject GetControllerMesh(Hand hand);

	[Token(Token = "0x6000775")]
	public abstract Vector3 GetControllerPosition(Hand hand);

	[Token(Token = "0x6000776")]
	public abstract Quaternion GetControllerRotation(Hand hand);

	[Token(Token = "0x6000777")]
	public abstract PlayerInput.Button GetButtonState(Hand hand);

	[Token(Token = "0x600077C")]
	[Address(RVA = "0x1004550", Offset = "0x1004550", VA = "0x1004550", Slot = "16")]
	protected override void Start()
	{
	}

	[Token(Token = "0x600077D")]
	[Address(RVA = "0x10045D4", Offset = "0x10045D4", VA = "0x10045D4", Slot = "21")]
	public virtual bool IsControllerConnected(Hand hand)
	{
		return default(bool);
	}

	[Token(Token = "0x600077E")]
	[Address(RVA = "0x10045DC", Offset = "0x10045DC", VA = "0x10045DC", Slot = "7")]
	public override void UpdateInputInternal()
	{
	}

	[Token(Token = "0x600077F")]
	[Address(RVA = "0x100467C", Offset = "0x100467C", VA = "0x100467C")]
	private void UpdateGuideLine(LineRenderer lr, Hand hand)
	{
	}

	[Token(Token = "0x6000780")]
	[Address(RVA = "0x1004700", Offset = "0x1004700", VA = "0x1004700", Slot = "6")]
	public override bool GetMenuTransform(out Transform menuTransform, bool useDominantHand = false)
	{
		return default(bool);
	}

	[Token(Token = "0x6000781")]
	[Address(RVA = "0x100482C", Offset = "0x100482C", VA = "0x100482C", Slot = "22")]
	protected virtual void UpdateUITransforms()
	{
	}

	[Token(Token = "0x6000782")]
	[Address(RVA = "0x10048B4", Offset = "0x10048B4", VA = "0x10048B4", Slot = "23")]
	protected virtual void LateUpdate()
	{
	}

	[Token(Token = "0x6000783")]
	[Address(RVA = "0x1004F54", Offset = "0x1004F54", VA = "0x1004F54")]
	private float CalculateBubblePointingAmount(Transform inputTransform)
	{
		return default(float);
	}

	[Token(Token = "0x6000784")]
	[Address(RVA = "0x10051B8", Offset = "0x10051B8", VA = "0x10051B8", Slot = "24")]
	public virtual bool GetCursorRay(Hand hand, out Ray cursorRay)
	{
		return default(bool);
	}

	[Token(Token = "0x6000785")]
	[Address(RVA = "0x100533C", Offset = "0x100533C", VA = "0x100533C", Slot = "4")]
	public override bool GetCursorRay(out Ray cursorRay)
	{
		return default(bool);
	}

	[Token(Token = "0x6000786")]
	[Address(RVA = "0x100538C", Offset = "0x100538C", VA = "0x100538C", Slot = "11")]
	public override bool GetSecondaryCursorRay(out Ray cursorRay)
	{
		return default(bool);
	}

	[Token(Token = "0x6000787")]
	[Address(RVA = "0x10053D8", Offset = "0x10053D8", VA = "0x10053D8")]
	protected Motion6DOFInput()
	{
	}
}
[Token(Token = "0x20000BD")]
public abstract class MotionInput : IInputSystem
{
	[Token(Token = "0x40004EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject controllerGuideLinePrefab;

	[Token(Token = "0x40004EB")]
	protected const float downwardPitch = 7f;

	[Token(Token = "0x40004EC")]
	public const float controllerArcDropFactor = 0.1f;

	[Token(Token = "0x40004ED")]
	private const float linearProjDistance = 18f;

	[Token(Token = "0x40004EE")]
	private const float lineWidth = 0.004f;

	[Token(Token = "0x40004EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	protected Camera uiCamera;

	[Token(Token = "0x40004F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	protected VRControllerInputModule vrControllerInputModule;

	[Token(Token = "0x6000788")]
	[Address(RVA = "0x1002498", Offset = "0x1002498", VA = "0x1002498", Slot = "16")]
	protected virtual void Start()
	{
	}

	[Token(Token = "0x6000789")]
	[Address(RVA = "0x100250C", Offset = "0x100250C", VA = "0x100250C")]
	protected LineRenderer CreateGuideLine(GameObject controller)
	{
		return null;
	}

	[Token(Token = "0x600078A")]
	[Address(RVA = "0x10039B4", Offset = "0x10039B4", VA = "0x10039B4")]
	protected bool GetCursorRay(Vector3 controllerPosition, Quaternion controllerRotation, out Ray cursorRay)
	{
		return default(bool);
	}

	[Token(Token = "0x600078B")]
	[Address(RVA = "0x10036B0", Offset = "0x10036B0", VA = "0x10036B0")]
	protected void SetUITransform(Transform primary, [Optional] Transform secondary)
	{
	}

	[Token(Token = "0x600078C")]
	[Address(RVA = "0x1003014", Offset = "0x1003014", VA = "0x1003014")]
	protected void UpdateGuideLine(LineRenderer lr, PlayerInterface.WorldCursor worldCursor)
	{
	}

	[Token(Token = "0x600078D")]
	[Address(RVA = "0x10044EC", Offset = "0x10044EC", VA = "0x10044EC")]
	protected MotionInput()
	{
	}
}
[Token(Token = "0x20000BE")]
public class MouseInput : IInputSystem
{
	[Token(Token = "0x40004F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float basePanningSpeed;

	[Token(Token = "0x40004F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float zoomSpeed;

	[Token(Token = "0x1700017B")]
	public override bool isAvailable
	{
		[Token(Token = "0x600078E")]
		[Address(RVA = "0x1005494", Offset = "0x1005494", VA = "0x1005494", Slot = "8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700017C")]
	public override int priority
	{
		[Token(Token = "0x600078F")]
		[Address(RVA = "0x10054C8", Offset = "0x10054C8", VA = "0x10054C8", Slot = "9")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x6000790")]
	[Address(RVA = "0x10054D0", Offset = "0x10054D0", VA = "0x10054D0", Slot = "4")]
	public override bool GetCursorRay(out Ray cursorRay)
	{
		return default(bool);
	}

	[Token(Token = "0x6000791")]
	[Address(RVA = "0x100561C", Offset = "0x100561C", VA = "0x100561C", Slot = "7")]
	public override void UpdateInputInternal()
	{
	}

	[Token(Token = "0x6000792")]
	[Address(RVA = "0x100576C", Offset = "0x100576C", VA = "0x100576C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000793")]
	[Address(RVA = "0x1005770", Offset = "0x1005770", VA = "0x1005770")]
	private void Update()
	{
	}

	[Token(Token = "0x6000794")]
	[Address(RVA = "0x1005774", Offset = "0x1005774", VA = "0x1005774")]
	public MouseInput()
	{
	}
}
[Token(Token = "0x20000BF")]
public class Oculus3DOFInput : Motion3DOFInput
{
	[Token(Token = "0x40004F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public GameObject controllerPrefab;

	[Token(Token = "0x1700017D")]
	public override bool isAvailable
	{
		[Token(Token = "0x6000795")]
		[Address(RVA = "0x10EDEAC", Offset = "0x10EDEAC", VA = "0x10EDEAC", Slot = "8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700017E")]
	public override bool isLeftHanded
	{
		[Token(Token = "0x6000796")]
		[Address(RVA = "0x10EDEB4", Offset = "0x10EDEB4", VA = "0x10EDEB4", Slot = "19")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700017F")]
	public override int priority
	{
		[Token(Token = "0x6000797")]
		[Address(RVA = "0x10EDF20", Offset = "0x10EDF20", VA = "0x10EDF20", Slot = "9")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x6000798")]
	[Address(RVA = "0x10EDF28", Offset = "0x10EDF28", VA = "0x10EDF28", Slot = "17")]
	public override GameObject GetControllerMesh()
	{
		return null;
	}

	[Token(Token = "0x6000799")]
	[Address(RVA = "0x10EDF30", Offset = "0x10EDF30", VA = "0x10EDF30", Slot = "18")]
	public override Quaternion GetControllerRotation()
	{
		return default(Quaternion);
	}

	[Token(Token = "0x600079A")]
	[Address(RVA = "0x10EDF90", Offset = "0x10EDF90", VA = "0x10EDF90", Slot = "20")]
	public override Vector3 GeneratePosition(Vector3 hmdPosition, Quaternion hmdRotation, Quaternion controllerRotation)
	{
		return default(Vector3);
	}

	[Token(Token = "0x600079B")]
	[Address(RVA = "0x10EDFF0", Offset = "0x10EDFF0", VA = "0x10EDFF0", Slot = "7")]
	public override void UpdateInputInternal()
	{
	}

	[Token(Token = "0x600079C")]
	[Address(RVA = "0x10EE11C", Offset = "0x10EE11C", VA = "0x10EE11C")]
	public Oculus3DOFInput()
	{
	}
}
[Token(Token = "0x20000C0")]
public class Oculus6DOFInput : Motion6DOFInput
{
	[Token(Token = "0x40004F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public GameObject leftMeshPrefab;

	[Token(Token = "0x40004F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public GameObject rightMeshPrefab;

	[Token(Token = "0x40004F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private float leftControllerVibrationTimeLeft;

	[Token(Token = "0x40004F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private float rightControllerVibrationTimeLeft;

	[Token(Token = "0x17000180")]
	public override bool isAvailable
	{
		[Token(Token = "0x600079D")]
		[Address(RVA = "0x10EE124", Offset = "0x10EE124", VA = "0x10EE124", Slot = "8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000181")]
	public override int priority
	{
		[Token(Token = "0x600079E")]
		[Address(RVA = "0x10EE1D0", Offset = "0x10EE1D0", VA = "0x10EE1D0", Slot = "9")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x600079F")]
	[Address(RVA = "0x10EE1D8", Offset = "0x10EE1D8", VA = "0x10EE1D8", Slot = "17")]
	public override GameObject GetControllerMesh(Hand hand)
	{
		return null;
	}

	[Token(Token = "0x60007A0")]
	[Address(RVA = "0x10EE200", Offset = "0x10EE200", VA = "0x10EE200")]
	private OVRInput.Controller GetOVRControllerFromHand(Hand hand)
	{
		return default(OVRInput.Controller);
	}

	[Token(Token = "0x60007A1")]
	[Address(RVA = "0x10EE210", Offset = "0x10EE210", VA = "0x10EE210", Slot = "21")]
	public override bool IsControllerConnected(Hand hand)
	{
		return default(bool);
	}

	[Token(Token = "0x60007A2")]
	[Address(RVA = "0x10EE320", Offset = "0x10EE320", VA = "0x10EE320", Slot = "14")]
	public override void Vibrate(PlayerInput.VibrateType type, bool vibrateDominantHand = true)
	{
	}

	[Token(Token = "0x60007A3")]
	[Address(RVA = "0x10EE468", Offset = "0x10EE468", VA = "0x10EE468", Slot = "20")]
	public override PlayerInput.Button GetButtonState(Hand hand)
	{
		return default(PlayerInput.Button);
	}

	[Token(Token = "0x60007A4")]
	[Address(RVA = "0x10EE5D4", Offset = "0x10EE5D4", VA = "0x10EE5D4", Slot = "23")]
	protected override void LateUpdate()
	{
	}

	[Token(Token = "0x60007A5")]
	[Address(RVA = "0x10EE824", Offset = "0x10EE824", VA = "0x10EE824", Slot = "18")]
	public override Vector3 GetControllerPosition(Hand hand)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60007A6")]
	[Address(RVA = "0x10EE898", Offset = "0x10EE898", VA = "0x10EE898", Slot = "19")]
	public override Quaternion GetControllerRotation(Hand hand)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x60007A7")]
	[Address(RVA = "0x10EE90C", Offset = "0x10EE90C", VA = "0x10EE90C")]
	public Oculus6DOFInput()
	{
	}
}
[Token(Token = "0x20000C1")]
public class OculusHandsInput : Motion6DOFInput
{
	[Token(Token = "0x40004F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private OVRHand leftOvrHand;

	[Token(Token = "0x40004F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private OVRHand rightOvrHand;

	[Token(Token = "0x40004FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private OVRSkeleton leftHandSkeleton;

	[Token(Token = "0x40004FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private OVRSkeleton rightHandSkeleton;

	[Token(Token = "0x40004FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public Text debugText;

	[Token(Token = "0x40004FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private Transform leftIndexTip;

	[Token(Token = "0x40004FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private Transform leftMiddleTip;

	[Token(Token = "0x40004FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private Transform leftRingTip;

	[Token(Token = "0x4000500")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private Transform leftPinkyTip;

	[Token(Token = "0x4000501")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private Transform rightIndexTip;

	[Token(Token = "0x4000502")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private Transform rightMiddleTip;

	[Token(Token = "0x4000503")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private Transform rightRingTip;

	[Token(Token = "0x4000504")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private Transform rightPinkyTip;

	[Token(Token = "0x4000505")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private Transform leftPointerPose;

	[Token(Token = "0x4000506")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private Transform rightPointerPose;

	[Token(Token = "0x4000507")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private Transform stabilisedLeftFingerTip;

	[Token(Token = "0x4000508")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private Transform stabilisedRightFingerTip;

	[Token(Token = "0x4000509")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6A8D7C", Offset = "0x6A8D7C")]
	private BoxCollider <leftKnuckleBlocker>k__BackingField;

	[Token(Token = "0x400050A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6A8D8C", Offset = "0x6A8D8C")]
	private BoxCollider <rightKnuckleBlocker>k__BackingField;

	[Token(Token = "0x400050B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	private TransformStabiliser leftPointerStabiliser;

	[Token(Token = "0x400050C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	private TransformStabiliser rightPointerStabiliser;

	[Token(Token = "0x400050D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private TransformStabiliser leftFingerTipStabiliser;

	[Token(Token = "0x400050E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	private TransformStabiliser rightFingerTipStabiliser;

	[Token(Token = "0x400050F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	private TransformStabiliser leftAnchorStabiliser;

	[Token(Token = "0x4000510")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	private TransformStabiliser rightAnchorStabiliser;

	[Token(Token = "0x4000511")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	private Material leftHandMaterial;

	[Token(Token = "0x4000512")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	private Material rightHandMaterial;

	[Token(Token = "0x4000513")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	public Vector3 pinchIndicatorOffset;

	[Token(Token = "0x4000514")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	public GameObject pinchIndicatorPrefab;

	[Token(Token = "0x4000515")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	private PinchIndicator leftPinchIndicator;

	[Token(Token = "0x4000516")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	private PinchIndicator rightPinchIndicator;

	[Token(Token = "0x4000517")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	public GameObject scaleRotationIndicatorPrefab;

	[Token(Token = "0x4000518")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	private ScaleRotationIndicator scaleRotationIndicator;

	[Token(Token = "0x4000519")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	public GameObject handsTutorialHintsPrefab;

	[Token(Token = "0x400051A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6A8D9C", Offset = "0x6A8D9C")]
	private HandsTutorialHints <leftHandsTutorialHints>k__BackingField;

	[Token(Token = "0x400051B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6A8DAC", Offset = "0x6A8DAC")]
	private HandsTutorialHints <rightHandsTutorialHints>k__BackingField;

	[Token(Token = "0x400051C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	public GestureSO leftGrabGesture;

	[Token(Token = "0x400051D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	public GestureSO rightGrabGesture;

	[Token(Token = "0x400051E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	public float grabGestureThreshold;

	[Token(Token = "0x400051F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B4")]
	public float releaseGestureThreshold;

	[Token(Token = "0x4000520")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	public float grabGestureCloseThreshold;

	[Token(Token = "0x4000521")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1BC")]
	private float leftPinchDuration;

	[Token(Token = "0x4000522")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	private float rightPinchDuration;

	[Token(Token = "0x4000523")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C4")]
	private float timeSinceLeftHandGrabbed;

	[Token(Token = "0x4000524")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
	private float timeSinceRightHandGrabbed;

	[Token(Token = "0x4000525")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1CC")]
	private Color handRimColor;

	[Token(Token = "0x4000526")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1DC")]
	private float handRimPower;

	[Token(Token = "0x4000527")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
	private int rimColorId;

	[Token(Token = "0x4000528")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E4")]
	private int rimPowerId;

	[Token(Token = "0x4000529")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
	private int extrusionId;

	[Token(Token = "0x400052A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1EC")]
	public float glowExtrusionSpeed;

	[Token(Token = "0x400052B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
	private float leftGlowExtrusion;

	[Token(Token = "0x400052C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F4")]
	private float rightGlowExtrusion;

	[Token(Token = "0x400052D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
	public float worldMapDownwardPointerDisplacement;

	[Token(Token = "0x400052E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1FC")]
	public Vector3 leftOffset;

	[Token(Token = "0x400052F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
	public Vector3 rightOffset;

	[Token(Token = "0x4000530")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x214")]
	public Vector3 rotationLeftOffset;

	[Token(Token = "0x4000531")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x220")]
	public Vector3 rotationRightOffset;

	[Token(Token = "0x4000532")]
	private const float fingerTipRadius = 0.005f;

	[Token(Token = "0x4000533")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x22C")]
	public bool useFingerOcclusionCalculation;

	[Token(Token = "0x17000182")]
	public BoxCollider leftKnuckleBlocker
	{
		[Token(Token = "0x60007A8")]
		[Address(RVA = "0x10EE914", Offset = "0x10EE914", VA = "0x10EE914")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6AFB58", Offset = "0x6AFB58")]
		get
		{
			return null;
		}
		[Token(Token = "0x60007A9")]
		[Address(RVA = "0x10EE91C", Offset = "0x10EE91C", VA = "0x10EE91C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6AFB68", Offset = "0x6AFB68")]
		private set
		{
		}
	}

	[Token(Token = "0x17000183")]
	public BoxCollider rightKnuckleBlocker
	{
		[Token(Token = "0x60007AA")]
		[Address(RVA = "0x10EE924", Offset = "0x10EE924", VA = "0x10EE924")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6AFB78", Offset = "0x6AFB78")]
		get
		{
			return null;
		}
		[Token(Token = "0x60007AB")]
		[Address(RVA = "0x10EE92C", Offset = "0x10EE92C", VA = "0x10EE92C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6AFB88", Offset = "0x6AFB88")]
		private set
		{
		}
	}

	[Token(Token = "0x17000184")]
	public HandsTutorialHints leftHandsTutorialHints
	{
		[Token(Token = "0x60007AC")]
		[Address(RVA = "0x10EE934", Offset = "0x10EE934", VA = "0x10EE934")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6AFB98", Offset = "0x6AFB98")]
		get
		{
			return null;
		}
		[Token(Token = "0x60007AD")]
		[Address(RVA = "0x10EE93C", Offset = "0x10EE93C", VA = "0x10EE93C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6AFBA8", Offset = "0x6AFBA8")]
		private set
		{
		}
	}

	[Token(Token = "0x17000185")]
	public HandsTutorialHints rightHandsTutorialHints
	{
		[Token(Token = "0x60007AE")]
		[Address(RVA = "0x10EE944", Offset = "0x10EE944", VA = "0x10EE944")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6AFBB8", Offset = "0x6AFBB8")]
		get
		{
			return null;
		}
		[Token(Token = "0x60007AF")]
		[Address(RVA = "0x10EE94C", Offset = "0x10EE94C", VA = "0x10EE94C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6AFBC8", Offset = "0x6AFBC8")]
		private set
		{
		}
	}

	[Token(Token = "0x17000186")]
	public override bool allowInteractionsWithUI
	{
		[Token(Token = "0x60007B0")]
		[Address(RVA = "0x10EE954", Offset = "0x10EE954", VA = "0x10EE954", Slot = "12")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000187")]
	private OVRCameraRig cameraRig
	{
		[Token(Token = "0x60007B1")]
		[Address(RVA = "0x10EEA60", Offset = "0x10EEA60", VA = "0x10EEA60")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000188")]
	public override bool isAvailable
	{
		[Token(Token = "0x60007B2")]
		[Address(RVA = "0x10EEAB0", Offset = "0x10EEAB0", VA = "0x10EEAB0", Slot = "8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000189")]
	public override bool hasSecondaryInput
	{
		[Token(Token = "0x60007B3")]
		[Address(RVA = "0x10EEC38", Offset = "0x10EEC38", VA = "0x10EEC38", Slot = "10")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700018A")]
	public override int priority
	{
		[Token(Token = "0x60007B4")]
		[Address(RVA = "0x10EEC40", Offset = "0x10EEC40", VA = "0x10EEC40", Slot = "9")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x1700018B")]
	private bool useFingerHover
	{
		[Token(Token = "0x60007B6")]
		[Address(RVA = "0x10EE970", Offset = "0x10EE970", VA = "0x10EE970")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x60007B5")]
	[Address(RVA = "0x10EEC48", Offset = "0x10EEC48", VA = "0x10EEC48", Slot = "16")]
	protected override void Start()
	{
	}

	[Token(Token = "0x60007B7")]
	[Address(RVA = "0x10EECBC", Offset = "0x10EECBC", VA = "0x10EECBC")]
	private PinchIndicator GeneratePinchIndicator(Transform targetTransform)
	{
		return null;
	}

	[Token(Token = "0x60007B8")]
	[Address(RVA = "0x10EEE00", Offset = "0x10EEE00", VA = "0x10EEE00")]
	private HandsTutorialHints GenerateHandsTutorialHints(Transform targetTransform)
	{
		return null;
	}

	[Token(Token = "0x60007B9")]
	[Address(RVA = "0x10EEF38", Offset = "0x10EEF38", VA = "0x10EEF38", Slot = "21")]
	public override bool IsControllerConnected(Hand hand)
	{
		return default(bool);
	}

	[Token(Token = "0x60007BA")]
	[Address(RVA = "0x10EEF64", Offset = "0x10EEF64", VA = "0x10EEF64")]
	private void InitHandObjects()
	{
	}

	[Token(Token = "0x60007BB")]
	[Address(RVA = "0x10EF620", Offset = "0x10EF620", VA = "0x10EF620")]
	private Transform GenerateFingerTip(OVRHand ovrHand, string name)
	{
		return null;
	}

	[Token(Token = "0x60007BC")]
	[Address(RVA = "0x10EF7B8", Offset = "0x10EF7B8", VA = "0x10EF7B8")]
	private BoxCollider GenerateKnuckleBlocker(OVRHand ovrHand, string name)
	{
		return null;
	}

	[Token(Token = "0x60007BD")]
	[Address(RVA = "0x10EFA58", Offset = "0x10EFA58", VA = "0x10EFA58")]
	private void UpdateFingerTip(Transform tip, OVRSkeleton skeleton, OVRSkeleton.BoneId boneId)
	{
	}

	[Token(Token = "0x60007BE")]
	[Address(RVA = "0x10EFCC8", Offset = "0x10EFCC8", VA = "0x10EFCC8")]
	private void UpdateKnuckles(BoxCollider knuckles, OVRSkeleton skeleton)
	{
	}

	[Token(Token = "0x60007BF")]
	[Address(RVA = "0x10EFF60", Offset = "0x10EFF60", VA = "0x10EFF60", Slot = "22")]
	protected override void UpdateUITransforms()
	{
	}

	[Token(Token = "0x60007C0")]
	[Address(RVA = "0x10F0078", Offset = "0x10F0078", VA = "0x10F0078", Slot = "23")]
	protected override void LateUpdate()
	{
	}

	[Token(Token = "0x60007C1")]
	[Address(RVA = "0x10F1F24", Offset = "0x10F1F24", VA = "0x10F1F24")]
	private bool IsFingerTipOccluded(OVRSkeleton skeleton, OVRSkeleton.BoneId bone)
	{
		return default(bool);
	}

	[Token(Token = "0x60007C2")]
	[Address(RVA = "0x10F22D0", Offset = "0x10F22D0", VA = "0x10F22D0")]
	private int NumFingerTipsOccluded(OVRSkeleton skeleton)
	{
		return default(int);
	}

	[Token(Token = "0x60007C3")]
	[Address(RVA = "0x10F235C", Offset = "0x10F235C", VA = "0x10F235C")]
	private string DebugFingerText(OVRHand hand, OVRHand.HandFinger finger)
	{
		return null;
	}

	[Token(Token = "0x60007C4")]
	[Address(RVA = "0x10F2570", Offset = "0x10F2570", VA = "0x10F2570")]
	private string DebugHandText(OVRHand hand)
	{
		return null;
	}

	[Token(Token = "0x60007C5")]
	[Address(RVA = "0x10F2630", Offset = "0x10F2630", VA = "0x10F2630")]
	private float ProcessGesture(Hand hand, GestureSO gesture, PlayerInput.Button buttonMask, float enterThreshold, float exitThreshold, ref PlayerInput.Button result)
	{
		return default(float);
	}

	[Token(Token = "0x60007C6")]
	[Address(RVA = "0x10F2B00", Offset = "0x10F2B00", VA = "0x10F2B00")]
	private void ProcessPinch(Hand hand, OVRHand.HandFinger finger, PlayerInput.Button buttonMask, float lowerThreshold, float upperThreshold, ref PlayerInput.Button result, bool usePinchDelay = false)
	{
	}

	[Token(Token = "0x60007C7")]
	[Address(RVA = "0x10F2C34", Offset = "0x10F2C34", VA = "0x10F2C34", Slot = "20")]
	public override PlayerInput.Button GetButtonState(Hand hand)
	{
		return default(PlayerInput.Button);
	}

	[Token(Token = "0x60007C8")]
	[Address(RVA = "0x10F2E60", Offset = "0x10F2E60", VA = "0x10F2E60", Slot = "17")]
	public override GameObject GetControllerMesh(Hand hand)
	{
		return null;
	}

	[Token(Token = "0x60007C9")]
	[Address(RVA = "0x10F2E68", Offset = "0x10F2E68", VA = "0x10F2E68", Slot = "18")]
	public override Vector3 GetControllerPosition(Hand hand)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60007CA")]
	[Address(RVA = "0x10F2F08", Offset = "0x10F2F08", VA = "0x10F2F08", Slot = "19")]
	public override Quaternion GetControllerRotation(Hand hand)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x60007CB")]
	[Address(RVA = "0x10F2768", Offset = "0x10F2768", VA = "0x10F2768")]
	private float CalculateGestureDistance(OVRHand hand, OVRSkeleton handSkeleton, GestureSO gestureToRecognize, bool ignoreThumbs = true)
	{
		return default(float);
	}

	[Token(Token = "0x60007CC")]
	[Address(RVA = "0x10F3050", Offset = "0x10F3050", VA = "0x10F3050", Slot = "24")]
	public override bool GetCursorRay(Hand hand, out Ray cursorRay)
	{
		return default(bool);
	}

	[Token(Token = "0x60007CD")]
	[Address(RVA = "0x10F3230", Offset = "0x10F3230", VA = "0x10F3230", Slot = "7")]
	public override void UpdateInputInternal()
	{
	}

	[Token(Token = "0x60007CE")]
	[Address(RVA = "0x10F3238", Offset = "0x10F3238", VA = "0x10F3238")]
	public OculusHandsInput()
	{
	}
}
[Token(Token = "0x20000C2")]
public abstract class IInputSystem : MonoBehaviour
{
	[Token(Token = "0x4000534")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6A8DBC", Offset = "0x6A8DBC")]
	private Vector2 <panningDelta>k__BackingField;

	[Token(Token = "0x4000535")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6A8DCC", Offset = "0x6A8DCC")]
	private float <zoomDelta>k__BackingField;

	[Token(Token = "0x4000536")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6A8DDC", Offset = "0x6A8DDC")]
	private float <rotationDelta>k__BackingField;

	[Token(Token = "0x4000537")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6A8DEC", Offset = "0x6A8DEC")]
	private PlayerInput <playerInput>k__BackingField;

	[Token(Token = "0x4000538")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6A8DFC", Offset = "0x6A8DFC")]
	private PlayerInput.Button <buttons>k__BackingField;

	[Token(Token = "0x4000539")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	protected PlayerInput.Button oldButtons;

	[Token(Token = "0x400053A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	protected PlayerInput.Button oldSecondaryButtons;

	[Token(Token = "0x400053B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6A8E0C", Offset = "0x6A8E0C")]
	private PlayerInput.Button <secondaryButtons>k__BackingField;

	[Token(Token = "0x1700018C")]
	public virtual bool usesPositionalTracking
	{
		[Token(Token = "0x60007D0")]
		[Address(RVA = "0x106DF48", Offset = "0x106DF48", VA = "0x106DF48", Slot = "5")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700018D")]
	public abstract bool isAvailable
	{
		[Token(Token = "0x60007D3")]
		get;
	}

	[Token(Token = "0x1700018E")]
	public abstract int priority
	{
		[Token(Token = "0x60007D4")]
		get;
	}

	[Token(Token = "0x1700018F")]
	public Vector2 panningDelta
	{
		[Token(Token = "0x60007D5")]
		[Address(RVA = "0x106DF5C", Offset = "0x106DF5C", VA = "0x106DF5C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6AFBD8", Offset = "0x6AFBD8")]
		get
		{
			return default(Vector2);
		}
		[Token(Token = "0x60007D6")]
		[Address(RVA = "0x106DF64", Offset = "0x106DF64", VA = "0x106DF64")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6AFBE8", Offset = "0x6AFBE8")]
		protected set
		{
		}
	}

	[Token(Token = "0x17000190")]
	public float zoomDelta
	{
		[Token(Token = "0x60007D7")]
		[Address(RVA = "0x106DF6C", Offset = "0x106DF6C", VA = "0x106DF6C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6AFBF8", Offset = "0x6AFBF8")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60007D8")]
		[Address(RVA = "0x106DF74", Offset = "0x106DF74", VA = "0x106DF74")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6AFC08", Offset = "0x6AFC08")]
		protected set
		{
		}
	}

	[Token(Token = "0x17000191")]
	public float rotationDelta
	{
		[Token(Token = "0x60007D9")]
		[Address(RVA = "0x106DF7C", Offset = "0x106DF7C", VA = "0x106DF7C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6AFC18", Offset = "0x6AFC18")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60007DA")]
		[Address(RVA = "0x106DF84", Offset = "0x106DF84", VA = "0x106DF84")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6AFC28", Offset = "0x6AFC28")]
		protected set
		{
		}
	}

	[Token(Token = "0x17000192")]
	public PlayerInput playerInput
	{
		[Token(Token = "0x60007DB")]
		[Address(RVA = "0x106DF8C", Offset = "0x106DF8C", VA = "0x106DF8C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6AFC38", Offset = "0x6AFC38")]
		get
		{
			return null;
		}
		[Token(Token = "0x60007DC")]
		[Address(RVA = "0x106DF94", Offset = "0x106DF94", VA = "0x106DF94")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6AFC48", Offset = "0x6AFC48")]
		private set
		{
		}
	}

	[Token(Token = "0x17000193")]
	public Player player
	{
		[Token(Token = "0x60007DD")]
		[Address(RVA = "0x106DF9C", Offset = "0x106DF9C", VA = "0x106DF9C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000194")]
	public PlayerInput.Button buttons
	{
		[Token(Token = "0x60007DE")]
		[Address(RVA = "0x106DFB8", Offset = "0x106DFB8", VA = "0x106DFB8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6AFC58", Offset = "0x6AFC58")]
		get
		{
			return default(PlayerInput.Button);
		}
		[Token(Token = "0x60007DF")]
		[Address(RVA = "0x106DFC0", Offset = "0x106DFC0", VA = "0x106DFC0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6AFC68", Offset = "0x6AFC68")]
		protected set
		{
		}
	}

	[Token(Token = "0x17000195")]
	public virtual bool hasSecondaryInput
	{
		[Token(Token = "0x60007E0")]
		[Address(RVA = "0x106DFC8", Offset = "0x106DFC8", VA = "0x106DFC8", Slot = "10")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000196")]
	public PlayerInput.Button secondaryButtons
	{
		[Token(Token = "0x60007E2")]
		[Address(RVA = "0x106DFE0", Offset = "0x106DFE0", VA = "0x106DFE0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6AFC78", Offset = "0x6AFC78")]
		get
		{
			return default(PlayerInput.Button);
		}
		[Token(Token = "0x60007E3")]
		[Address(RVA = "0x106DFE8", Offset = "0x106DFE8", VA = "0x106DFE8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6AFC88", Offset = "0x6AFC88")]
		protected set
		{
		}
	}

	[Token(Token = "0x17000197")]
	public virtual bool allowInteractionsWithUI
	{
		[Token(Token = "0x60007E4")]
		[Address(RVA = "0x106DFF0", Offset = "0x106DFF0", VA = "0x106DFF0", Slot = "12")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000198")]
	public bool isActiveInputSystem
	{
		[Token(Token = "0x60007EA")]
		[Address(RVA = "0x106E098", Offset = "0x106E098", VA = "0x106E098")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000199")]
	public virtual bool isLeftHandDominant
	{
		[Token(Token = "0x60007EB")]
		[Address(RVA = "0x106E178", Offset = "0x106E178", VA = "0x106E178", Slot = "13")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x60007CF")]
	public abstract bool GetCursorRay(out Ray cursorRay);

	[Token(Token = "0x60007D1")]
	[Address(RVA = "0x106DF50", Offset = "0x106DF50", VA = "0x106DF50", Slot = "6")]
	public virtual bool GetMenuTransform(out Transform transform, bool useDominantHand = false)
	{
		return default(bool);
	}

	[Token(Token = "0x60007D2")]
	public abstract void UpdateInputInternal();

	[Token(Token = "0x60007E1")]
	[Address(RVA = "0x106DFD0", Offset = "0x106DFD0", VA = "0x106DFD0", Slot = "11")]
	public virtual bool GetSecondaryCursorRay(out Ray cursorRay)
	{
		return default(bool);
	}

	[Token(Token = "0x60007E5")]
	[Address(RVA = "0x106DFF8", Offset = "0x106DFF8", VA = "0x106DFF8")]
	public void UpdateInput()
	{
	}

	[Token(Token = "0x60007E6")]
	[Address(RVA = "0x106E010", Offset = "0x106E010", VA = "0x106E010")]
	public bool GetButton(PlayerInput.Button buttonMask)
	{
		return default(bool);
	}

	[Token(Token = "0x60007E7")]
	[Address(RVA = "0x106E020", Offset = "0x106E020", VA = "0x106E020")]
	public bool GetButtonDown(PlayerInput.Button buttonMask)
	{
		return default(bool);
	}

	[Token(Token = "0x60007E8")]
	[Address(RVA = "0x106E048", Offset = "0x106E048", VA = "0x106E048")]
	public bool GetButtonUp(PlayerInput.Button buttonMask)
	{
		return default(bool);
	}

	[Token(Token = "0x60007E9")]
	[Address(RVA = "0x106E070", Offset = "0x106E070", VA = "0x106E070")]
	public bool GetSecondaryButtonDown(PlayerInput.Button buttonMask)
	{
		return default(bool);
	}

	[Token(Token = "0x60007EC")]
	[Address(RVA = "0x106E1B0", Offset = "0x106E1B0", VA = "0x106E1B0")]
	protected void OnEnable()
	{
	}

	[Token(Token = "0x60007ED")]
	[Address(RVA = "0x106E234", Offset = "0x106E234", VA = "0x106E234")]
	protected void OnDisable()
	{
	}

	[Token(Token = "0x60007EE")]
	[Address(RVA = "0x106E254", Offset = "0x106E254", VA = "0x106E254", Slot = "14")]
	public virtual void Vibrate(PlayerInput.VibrateType type, bool dominantHand = true)
	{
	}

	[Token(Token = "0x60007EF")]
	[Address(RVA = "0x106E258", Offset = "0x106E258", VA = "0x106E258", Slot = "15")]
	public virtual void OnActivate(IInputSystem oldSystem)
	{
	}

	[Token(Token = "0x60007F0")]
	[Address(RVA = "0x106E2F0", Offset = "0x106E2F0", VA = "0x106E2F0")]
	protected IInputSystem()
	{
	}
}
[Token(Token = "0x20000C3")]
public class PlayerInput : MonoBehaviour
{
	[Token(Token = "0x2000341")]
	[Flags]
	public enum Button
	{
		[Token(Token = "0x4001530")]
		None = 0,
		[Token(Token = "0x4001531")]
		GrabMovement = 1,
		[Token(Token = "0x4001532")]
		Interact = 2,
		[Token(Token = "0x4001533")]
		Back = 4,
		[Token(Token = "0x4001534")]
		ToggleBuildMenu = 8,
		[Token(Token = "0x4001535")]
		Menu = 0x10
	}

	[Token(Token = "0x2000342")]
	public enum VibrateType
	{
		[Token(Token = "0x4001537")]
		Hover,
		[Token(Token = "0x4001538")]
		Click,
		[Token(Token = "0x4001539")]
		Alert
	}

	[Serializable]
	[Token(Token = "0x2000343")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6A81E4", Offset = "0x6A81E4")]
	private sealed class <>c
	{
		[Token(Token = "0x400153A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x400153B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Comparison<IInputSystem> <>9__31_0;

		[Token(Token = "0x400153C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static Action <>9__33_0;

		[Token(Token = "0x6001677")]
		[Address(RVA = "0xFD8A90", Offset = "0xFD8A90", VA = "0xFD8A90")]
		public <>c()
		{
		}

		[Token(Token = "0x6001678")]
		[Address(RVA = "0xFD8A98", Offset = "0xFD8A98", VA = "0xFD8A98")]
		internal int <RegisterSystem>b__31_0(IInputSystem x, IInputSystem y)
		{
			return default(int);
		}

		[Token(Token = "0x6001679")]
		[Address(RVA = "0xFD8AF8", Offset = "0xFD8AF8", VA = "0xFD8AF8")]
		internal void <OnRecentered>b__33_0()
		{
		}
	}

	[Token(Token = "0x400053C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private List<IInputSystem> inputSystems;

	[Token(Token = "0x400053D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6A8E1C", Offset = "0x6A8E1C")]
	private IInputSystem <activeInputSystem>k__BackingField;

	[Token(Token = "0x400053E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6A8E2C", Offset = "0x6A8E2C")]
	private Player <player>k__BackingField;

	[Token(Token = "0x400053F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform leftControllerAnchor;

	[Token(Token = "0x4000540")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform rightControllerAnchor;

	[Token(Token = "0x4000541")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject leftController;

	[Token(Token = "0x4000542")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject rightController;

	[Token(Token = "0x4000543")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Transform leftControllerGuideRoot;

	[Token(Token = "0x4000544")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Transform rightControllerGuideRoot;

	[Token(Token = "0x4000545")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public VRHand leftHand;

	[Token(Token = "0x4000546")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public VRHand rightHand;

	[Token(Token = "0x4000547")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Action<IInputSystem> onInputSystemChanged;

	[Token(Token = "0x4000548")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public bool enableDebugOutput;

	[Token(Token = "0x4000549")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Text debugTextOutput;

	[Token(Token = "0x1700019A")]
	public IInputSystem activeInputSystem
	{
		[Token(Token = "0x60007F1")]
		[Address(RVA = "0xFD7164", Offset = "0xFD7164", VA = "0xFD7164")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6AFC98", Offset = "0x6AFC98")]
		get
		{
			return null;
		}
		[Token(Token = "0x60007F2")]
		[Address(RVA = "0xFD716C", Offset = "0xFD716C", VA = "0xFD716C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6AFCA8", Offset = "0x6AFCA8")]
		private set
		{
		}
	}

	[Token(Token = "0x1700019B")]
	public Player player
	{
		[Token(Token = "0x60007F3")]
		[Address(RVA = "0xFD7174", Offset = "0xFD7174", VA = "0xFD7174")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6AFCB8", Offset = "0x6AFCB8")]
		get
		{
			return null;
		}
		[Token(Token = "0x60007F4")]
		[Address(RVA = "0xFD717C", Offset = "0xFD717C", VA = "0xFD717C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6AFCC8", Offset = "0x6AFCC8")]
		private set
		{
		}
	}

	[Token(Token = "0x1700019C")]
	public VRHand dominantHand
	{
		[Token(Token = "0x60007F5")]
		[Address(RVA = "0xFD7184", Offset = "0xFD7184", VA = "0xFD7184")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700019D")]
	public VRHand nonDominantHand
	{
		[Token(Token = "0x60007F6")]
		[Address(RVA = "0xFD71D0", Offset = "0xFD71D0", VA = "0xFD71D0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700019E")]
	public bool isUsingHandTracking
	{
		[Token(Token = "0x60007F7")]
		[Address(RVA = "0xFD721C", Offset = "0xFD721C", VA = "0xFD721C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x60007F8")]
	[Address(RVA = "0xFD7304", Offset = "0xFD7304", VA = "0xFD7304")]
	private void Awake()
	{
	}

	[Token(Token = "0x60007F9")]
	[Address(RVA = "0xFD735C", Offset = "0xFD735C", VA = "0xFD735C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60007FA")]
	[Address(RVA = "0xFD7420", Offset = "0xFD7420", VA = "0xFD7420")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60007FB")]
	[Address(RVA = "0xFD74E4", Offset = "0xFD74E4", VA = "0xFD74E4")]
	public void RegisterSystem(IInputSystem system)
	{
	}

	[Token(Token = "0x60007FC")]
	[Address(RVA = "0xFD75FC", Offset = "0xFD75FC", VA = "0xFD75FC")]
	public void UnregisterSystem(IInputSystem system)
	{
	}

	[Token(Token = "0x60007FD")]
	[Address(RVA = "0xFD7664", Offset = "0xFD7664", VA = "0xFD7664")]
	private void OnRecentered()
	{
	}

	[Token(Token = "0x60007FE")]
	[Address(RVA = "0xFD77FC", Offset = "0xFD77FC", VA = "0xFD77FC")]
	private void Update()
	{
	}

	[Token(Token = "0x60007FF")]
	[Address(RVA = "0xFD870C", Offset = "0xFD870C", VA = "0xFD870C")]
	private string GetObjectName(Component obj)
	{
		return null;
	}

	[Token(Token = "0x6000800")]
	[Address(RVA = "0xFD85C0", Offset = "0xFD85C0", VA = "0xFD85C0")]
	private string GetObjectName(GameObject obj)
	{
		return null;
	}

	[Token(Token = "0x6000801")]
	[Address(RVA = "0xFD8528", Offset = "0xFD8528", VA = "0xFD8528")]
	private void SwitchActiveSystem(IInputSystem newSystem)
	{
	}

	[Token(Token = "0x6000802")]
	[Address(RVA = "0xFD87C4", Offset = "0xFD87C4", VA = "0xFD87C4")]
	public PlayerInput()
	{
	}

	[Token(Token = "0x6000803")]
	[Address(RVA = "0xFD8834", Offset = "0xFD8834", VA = "0xFD8834")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6AFCD8", Offset = "0x6AFCD8")]
	private void <OnRecentered>b__33_1()
	{
	}
}
[Token(Token = "0x20000C4")]
public class TransformStabiliser
{
	[Token(Token = "0x400054A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private List<Quaternion> rotationHistory;

	[Token(Token = "0x400054B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private List<Vector3> positionHistory;

	[Token(Token = "0x400054C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6A8E3C", Offset = "0x6A8E3C")]
	private Quaternion <stabilisedRotation>k__BackingField;

	[Token(Token = "0x400054D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6A8E4C", Offset = "0x6A8E4C")]
	private Vector3 <stabilisedPosition>k__BackingField;

	[Token(Token = "0x400054E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private int maxHistoryCount;

	[Token(Token = "0x400054F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float positionThreshold;

	[Token(Token = "0x4000550")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private float rotationThreshold;

	[Token(Token = "0x1700019F")]
	public Quaternion stabilisedRotation
	{
		[Token(Token = "0x600080B")]
		[Address(RVA = "0x107E804", Offset = "0x107E804", VA = "0x107E804")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6AFCE8", Offset = "0x6AFCE8")]
		get
		{
			return default(Quaternion);
		}
		[Token(Token = "0x600080C")]
		[Address(RVA = "0x107E810", Offset = "0x107E810", VA = "0x107E810")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6AFCF8", Offset = "0x6AFCF8")]
		private set
		{
		}
	}

	[Token(Token = "0x170001A0")]
	public Vector3 stabilisedPosition
	{
		[Token(Token = "0x600080D")]
		[Address(RVA = "0x107E81C", Offset = "0x107E81C", VA = "0x107E81C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6AFD08", Offset = "0x6AFD08")]
		get
		{
			return default(Vector3);
		}
		[Token(Token = "0x600080E")]
		[Address(RVA = "0x107E828", Offset = "0x107E828", VA = "0x107E828")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6AFD18", Offset = "0x6AFD18")]
		private set
		{
		}
	}

	[Token(Token = "0x6000804")]
	[Address(RVA = "0x107DC44", Offset = "0x107DC44", VA = "0x107DC44")]
	public TransformStabiliser(int maxHistoryCount = 20, float positionThreshold = 0.005f, float rotationThreshold = 2f)
	{
	}

	[Token(Token = "0x6000805")]
	[Address(RVA = "0x107DD0C", Offset = "0x107DD0C", VA = "0x107DD0C")]
	public void Update(Transform transform)
	{
	}

	[Token(Token = "0x6000806")]
	[Address(RVA = "0x107E1E4", Offset = "0x107E1E4", VA = "0x107E1E4")]
	public void UpdateLocalSpace(Transform transform)
	{
	}

	[Token(Token = "0x6000807")]
	[Address(RVA = "0x107E270", Offset = "0x107E270", VA = "0x107E270")]
	public Vector3 GetStabilisedWorldPosition(Transform transform)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000808")]
	[Address(RVA = "0x107E364", Offset = "0x107E364", VA = "0x107E364")]
	public Quaternion GetStabilisedWorldRotation(Transform transform)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x6000809")]
	[Address(RVA = "0x107DD98", Offset = "0x107DD98", VA = "0x107DD98")]
	public void Update(Vector3 positionSample, Quaternion rotationSample)
	{
	}

	[Token(Token = "0x600080A")]
	[Address(RVA = "0x107E4D0", Offset = "0x107E4D0", VA = "0x107E4D0")]
	public bool CheckIfIdle()
	{
		return default(bool);
	}
}
[Token(Token = "0x20000C5")]
public class VRControllerInputModule : BaseInputModule
{
	[Token(Token = "0x2000344")]
	public class InputTransformState
	{
		[Token(Token = "0x400153D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Transform inputTransform;

		[Token(Token = "0x400153E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool isWithinPhysicalPushingDistance;

		[Token(Token = "0x400153F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		public bool isPhysicallyPressingButton;

		[Token(Token = "0x4001540")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
		public bool isPhysicallyPressingButtonChanged;

		[Token(Token = "0x4001541")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
		public bool isWaitingForPhysicalButtonRelease;

		[Token(Token = "0x4001542")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float physicalButtonReleaseTimer;

		[Token(Token = "0x4001543")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject lastRaycastHitObject;

		[Token(Token = "0x4001544")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public List<SphereCollider> fingerTips;

		[Token(Token = "0x4001545")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public SphereCollider activeFingerTip;

		[Token(Token = "0x600167A")]
		[Address(RVA = "0x1155588", Offset = "0x1155588", VA = "0x1155588")]
		public void GatherFingerTips(Transform baseTransform)
		{
		}

		[Token(Token = "0x600167B")]
		[Address(RVA = "0x1152F84", Offset = "0x1152F84", VA = "0x1152F84")]
		public void Reset()
		{
		}

		[Token(Token = "0x600167C")]
		[Address(RVA = "0x1155518", Offset = "0x1155518", VA = "0x1155518")]
		public InputTransformState()
		{
		}
	}

	[Token(Token = "0x4000551")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6A8E5C", Offset = "0x6A8E5C")]
	public Camera uiCamera;

	[Token(Token = "0x4000552")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6A8E94", Offset = "0x6A8E94")]
	public float dragThreshold;

	[Token(Token = "0x4000553")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public TextMesh uiDebugText;

	[Token(Token = "0x4000554")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private bool m_useDebugText;

	[Token(Token = "0x4000555")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private string[] m_debugStrings;

	[Token(Token = "0x4000556")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private bool m_isButtonPressed;

	[Token(Token = "0x4000557")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x71")]
	private bool m_isButtonPressedChanged;

	[Token(Token = "0x4000558")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private float m_pressedDistance;

	[Token(Token = "0x4000559")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Vector2 m_cameraCenter;

	[Token(Token = "0x400055A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Vector3 m_lastRaycastHitPoint;

	[Token(Token = "0x400055B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private PointerEventData m_pointerEventData;

	[Token(Token = "0x400055C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private bool m_isActive;

	[Token(Token = "0x400055D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6A8ECC", Offset = "0x6A8ECC")]
	private Vector3 <lastRaycastHitNormal>k__BackingField;

	[Token(Token = "0x400055E")]
	private const float pushingDistanceThreshold = 0.03f;

	[Token(Token = "0x400055F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public InputTransformState primaryState;

	[Token(Token = "0x4000560")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public InputTransformState secondaryState;

	[Token(Token = "0x4000561")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private int uiLayer;

	[Token(Token = "0x170001A1")]
	public Transform primaryInputTransform
	{
		[Token(Token = "0x600080F")]
		[Address(RVA = "0x1152E58", Offset = "0x1152E58", VA = "0x1152E58")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000810")]
		[Address(RVA = "0x1152E74", Offset = "0x1152E74", VA = "0x1152E74")]
		private set
		{
		}
	}

	[Token(Token = "0x170001A2")]
	public Transform secondaryInputTransform
	{
		[Token(Token = "0x6000811")]
		[Address(RVA = "0x1152FEC", Offset = "0x1152FEC", VA = "0x1152FEC")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000812")]
		[Address(RVA = "0x1153008", Offset = "0x1153008", VA = "0x1153008")]
		private set
		{
		}
	}

	[Token(Token = "0x170001A3")]
	public Vector3 lastRaycastHitPoint
	{
		[Token(Token = "0x6000814")]
		[Address(RVA = "0x1153220", Offset = "0x1153220", VA = "0x1153220")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x170001A4")]
	public Vector3 lastRaycastHitNormal
	{
		[Token(Token = "0x6000815")]
		[Address(RVA = "0x115322C", Offset = "0x115322C", VA = "0x115322C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6AFD28", Offset = "0x6AFD28")]
		get
		{
			return default(Vector3);
		}
		[Token(Token = "0x6000816")]
		[Address(RVA = "0x1153238", Offset = "0x1153238", VA = "0x1153238")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6AFD38", Offset = "0x6AFD38")]
		private set
		{
		}
	}

	[Token(Token = "0x170001A5")]
	public GameObject lastRaycastHitGameObject
	{
		[Token(Token = "0x6000817")]
		[Address(RVA = "0x1153244", Offset = "0x1153244", VA = "0x1153244")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170001A6")]
	public Vector3 physicalPushPoint
	{
		[Token(Token = "0x6000818")]
		[Address(RVA = "0x115325C", Offset = "0x115325C", VA = "0x115325C")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x170001A7")]
	public bool isPhysicallyPressingButton
	{
		[Token(Token = "0x6000819")]
		[Address(RVA = "0x1153368", Offset = "0x1153368", VA = "0x1153368")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000813")]
	[Address(RVA = "0x1153118", Offset = "0x1153118", VA = "0x1153118")]
	public void SetInputTransforms(Transform primary, Transform secondary)
	{
	}

	[Token(Token = "0x600081A")]
	[Address(RVA = "0x11533A8", Offset = "0x11533A8", VA = "0x11533A8", Slot = "6")]
	protected override void Start()
	{
	}

	[Token(Token = "0x600081B")]
	[Address(RVA = "0x1153548", Offset = "0x1153548", VA = "0x1153548", Slot = "17")]
	public override void Process()
	{
	}

	[Token(Token = "0x600081C")]
	[Address(RVA = "0x115377C", Offset = "0x115377C", VA = "0x115377C")]
	private void MyUpdateControllerData()
	{
	}

	[Token(Token = "0x600081D")]
	[Address(RVA = "0x11538B0", Offset = "0x11538B0", VA = "0x11538B0")]
	private void ProcessControllerEvent()
	{
	}

	[Token(Token = "0x600081E")]
	[Address(RVA = "0x11545CC", Offset = "0x11545CC", VA = "0x11545CC")]
	private void AttachUICamera(Transform targetTransform)
	{
	}

	[Token(Token = "0x600081F")]
	[Address(RVA = "0x1154704", Offset = "0x1154704", VA = "0x1154704")]
	private Collider FindFingerTipCollision(InputTransformState state, SphereCollider fingerTip, float radiusMultiplier = 1f)
	{
		return null;
	}

	[Token(Token = "0x6000820")]
	[Address(RVA = "0x1154910", Offset = "0x1154910", VA = "0x1154910")]
	private void UpdatePhysicalButtonState(InputTransformState state, bool allowNewPresses)
	{
	}

	[Token(Token = "0x6000821")]
	[Address(RVA = "0x1154ECC", Offset = "0x1154ECC", VA = "0x1154ECC")]
	private RaycastResult DoRaycast(PointerEventData eventData, bool isPrimary)
	{
		return default(RaycastResult);
	}

	[Token(Token = "0x6000822")]
	[Address(RVA = "0x11538F4", Offset = "0x11538F4", VA = "0x11538F4")]
	private PointerEventData GetPointerEventData()
	{
		return null;
	}

	[Token(Token = "0x6000823")]
	[Address(RVA = "0x1154300", Offset = "0x1154300", VA = "0x1154300")]
	private void ProcessDrag(PointerEventData eventData)
	{
	}

	[Token(Token = "0x6000824")]
	[Address(RVA = "0x1155264", Offset = "0x1155264", VA = "0x1155264")]
	private bool ShouldStartDrag(PointerEventData eventData)
	{
		return default(bool);
	}

	[Token(Token = "0x6000825")]
	[Address(RVA = "0x11542E4", Offset = "0x11542E4", VA = "0x11542E4")]
	private void ProcessMove(PointerEventData eventData)
	{
	}

	[Token(Token = "0x6000826")]
	[Address(RVA = "0x1153CBC", Offset = "0x1153CBC", VA = "0x1153CBC")]
	private void ProcessPress(PointerEventData eventData)
	{
	}

	[Token(Token = "0x6000827")]
	[Address(RVA = "0x11552F0", Offset = "0x11552F0", VA = "0x11552F0")]
	private void DeselectIfSelectionChanged(GameObject currentOverGo, BaseEventData pointerEvent)
	{
	}

	[Token(Token = "0x6000828")]
	[Address(RVA = "0x1153628", Offset = "0x1153628", VA = "0x1153628")]
	private bool SendUpdateEventToSelectedObject()
	{
		return default(bool);
	}

	[Token(Token = "0x6000829")]
	[Address(RVA = "0x11553E0", Offset = "0x11553E0", VA = "0x11553E0")]
	private bool MyIsButtonReleasedThisFrame()
	{
		return default(bool);
	}

	[Token(Token = "0x600082A")]
	[Address(RVA = "0x1155288", Offset = "0x1155288", VA = "0x1155288")]
	private bool MyIsButtonPressedThisFrame()
	{
		return default(bool);
	}

	[Token(Token = "0x600082B")]
	[Address(RVA = "0x115544C", Offset = "0x115544C", VA = "0x115544C")]
	private void WriteDebug(string text)
	{
	}

	[Token(Token = "0x600082C")]
	[Address(RVA = "0x1155474", Offset = "0x1155474", VA = "0x1155474")]
	public VRControllerInputModule()
	{
	}
}
[Token(Token = "0x20000C6")]
public static class VRInputManager
{
	[Token(Token = "0x4000562")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static bool m_isKeyPressed;

	[Token(Token = "0x4000563")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static Transform m_controllerTransform;

	[Token(Token = "0x4000564")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static bool m_controllerActive;

	[Token(Token = "0x600082D")]
	[Address(RVA = "0x101211C", Offset = "0x101211C", VA = "0x101211C")]
	public static void SetIsControllerButtonPressed(bool isPressed)
	{
	}

	[Token(Token = "0x600082E")]
	[Address(RVA = "0x101218C", Offset = "0x101218C", VA = "0x101218C")]
	public static bool GetIsControllerButtonPressed()
	{
		return default(bool);
	}

	[Token(Token = "0x600082F")]
	[Address(RVA = "0x10121F4", Offset = "0x10121F4", VA = "0x10121F4")]
	public static void SetControllerTransform(Transform transform)
	{
	}

	[Token(Token = "0x6000830")]
	[Address(RVA = "0x1012260", Offset = "0x1012260", VA = "0x1012260")]
	public static Transform GetControllerTransform()
	{
		return null;
	}

	[Token(Token = "0x6000831")]
	[Address(RVA = "0x10122C8", Offset = "0x10122C8", VA = "0x10122C8")]
	public static void SetControllerActive(bool active)
	{
	}

	[Token(Token = "0x6000832")]
	[Address(RVA = "0x1012338", Offset = "0x1012338", VA = "0x1012338")]
	public static bool GetControllerActive()
	{
		return default(bool);
	}
}
[Token(Token = "0x20000C7")]
public class PlayerGameSettings
{
	[Token(Token = "0x2000345")]
	public enum HandednessOption
	{
		[Token(Token = "0x4001547")]
		Right,
		[Token(Token = "0x4001548")]
		Left,
		[Token(Token = "0x4001549")]
		OneHanded
	}

	[Token(Token = "0x2000346")]
	public enum CameraRotationOption
	{
		[Token(Token = "0x400154B")]
		Snap,
		[Token(Token = "0x400154C")]
		Smooth
	}

	[Token(Token = "0x2000347")]
	public enum CameraSnapSpeed
	{
		[Token(Token = "0x400154E")]
		Snap30,
		[Token(Token = "0x400154F")]
		Snap45
	}

	[Token(Token = "0x4000565")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int cameraSmoothSpeed;

	[Token(Token = "0x4000566")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public bool enableMusic;

	[Token(Token = "0x4000567")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x15")]
	public bool enableComfortCage;

	[Token(Token = "0x4000568")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public HandednessOption handedness;

	[Token(Token = "0x4000569")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public CameraRotationOption cameraRotationType;

	[Token(Token = "0x400056A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public CameraSnapSpeed cameraSnapSpeed;

	[Token(Token = "0x6000834")]
	[Address(RVA = "0xFD6D64", Offset = "0xFD6D64", VA = "0xFD6D64")]
	public PlayerGameSettings()
	{
	}

	[Token(Token = "0x6000835")]
	[Address(RVA = "0xFD70FC", Offset = "0xFD70FC", VA = "0xFD70FC")]
	public PlayerGameSettings(PlayerGameSettings other)
	{
	}
}
[Token(Token = "0x20000C8")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x6A7688", Offset = "0x6A7688")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x6A7688", Offset = "0x6A7688")]
public class Player : MonoBehaviour, ISaveInterface
{
	[Token(Token = "0x2000348")]
	public class PlayerSaveData : SaveSystem.ModuleData
	{
		[Token(Token = "0x4001550")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector3 position;

		[Token(Token = "0x4001551")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float rotationYaw;

		[Token(Token = "0x4001552")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Vector3 scale;

		[Token(Token = "0x4001553")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public PlayerGameSettings settings;

		[Token(Token = "0x4001554")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public double totalPlayTime;

		[Token(Token = "0x600167D")]
		[Address(RVA = "0xFD68E4", Offset = "0xFD68E4", VA = "0xFD68E4")]
		public PlayerSaveData()
		{
		}
	}

	[Token(Token = "0x400056B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6A8EDC", Offset = "0x6A8EDC")]
	private AudioListener <audioListener>k__BackingField;

	[Token(Token = "0x400056C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6A8EEC", Offset = "0x6A8EEC")]
	private PlayerInput <playerInput>k__BackingField;

	[Token(Token = "0x400056D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6A8EFC", Offset = "0x6A8EFC")]
	private PlayerInterface <playerInterface>k__BackingField;

	[Token(Token = "0x400056E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6A8F0C", Offset = "0x6A8F0C")]
	private Camera <playerCamera>k__BackingField;

	[Token(Token = "0x400056F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Canvas mainCanvas;

	[Token(Token = "0x4000570")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public PlayerGameSettings settings;

	[Token(Token = "0x4000571")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6A8F1C", Offset = "0x6A8F1C")]
	private double <totalPlayTime>k__BackingField;

	[Token(Token = "0x4000572")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6A8F2C", Offset = "0x6A8F2C")]
	private static Player <current>k__BackingField;

	[Token(Token = "0x4000573")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float tableHeight;

	[Token(Token = "0x170001A8")]
	public AudioListener audioListener
	{
		[Token(Token = "0x6000836")]
		[Address(RVA = "0xFD5DC0", Offset = "0xFD5DC0", VA = "0xFD5DC0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6AFD48", Offset = "0x6AFD48")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000837")]
		[Address(RVA = "0xFD5DC8", Offset = "0xFD5DC8", VA = "0xFD5DC8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6AFD58", Offset = "0x6AFD58")]
		private set
		{
		}
	}

	[Token(Token = "0x170001A9")]
	public PlayerInput playerInput
	{
		[Token(Token = "0x6000838")]
		[Address(RVA = "0xFD5DD0", Offset = "0xFD5DD0", VA = "0xFD5DD0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6AFD68", Offset = "0x6AFD68")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000839")]
		[Address(RVA = "0xFD5DD8", Offset = "0xFD5DD8", VA = "0xFD5DD8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6AFD78", Offset = "0x6AFD78")]
		private set
		{
		}
	}

	[Token(Token = "0x170001AA")]
	public PlayerInterface playerInterface
	{
		[Token(Token = "0x600083A")]
		[Address(RVA = "0xFD5DE0", Offset = "0xFD5DE0", VA = "0xFD5DE0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6AFD88", Offset = "0x6AFD88")]
		get
		{
			return null;
		}
		[Token(Token = "0x600083B")]
		[Address(RVA = "0xFD5DE8", Offset = "0xFD5DE8", VA = "0xFD5DE8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6AFD98", Offset = "0x6AFD98")]
		private set
		{
		}
	}

	[Token(Token = "0x170001AB")]
	public IInputSystem input
	{
		[Token(Token = "0x600083C")]
		[Address(RVA = "0xFD4DCC", Offset = "0xFD4DCC", VA = "0xFD4DCC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170001AC")]
	public Camera playerCamera
	{
		[Token(Token = "0x600083D")]
		[Address(RVA = "0xFD5DF0", Offset = "0xFD5DF0", VA = "0xFD5DF0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6AFDA8", Offset = "0x6AFDA8")]
		get
		{
			return null;
		}
		[Token(Token = "0x600083E")]
		[Address(RVA = "0xFD5DF8", Offset = "0xFD5DF8", VA = "0xFD5DF8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6AFDB8", Offset = "0x6AFDB8")]
		private set
		{
		}
	}

	[Token(Token = "0x170001AD")]
	public double totalPlayTime
	{
		[Token(Token = "0x600083F")]
		[Address(RVA = "0xFD5E00", Offset = "0xFD5E00", VA = "0xFD5E00")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6AFDC8", Offset = "0x6AFDC8")]
		get
		{
			return default(double);
		}
		[Token(Token = "0x6000840")]
		[Address(RVA = "0xFD5E08", Offset = "0xFD5E08", VA = "0xFD5E08")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6AFDD8", Offset = "0x6AFDD8")]
		private set
		{
		}
	}

	[Token(Token = "0x170001AE")]
	public static Player current
	{
		[Token(Token = "0x6000841")]
		[Address(RVA = "0xFD5E10", Offset = "0xFD5E10", VA = "0xFD5E10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6AFDE8", Offset = "0x6AFDE8")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000842")]
		[Address(RVA = "0xFD5E60", Offset = "0xFD5E60", VA = "0xFD5E60")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6AFDF8", Offset = "0x6AFDF8")]
		private set
		{
		}
	}

	[Token(Token = "0x170001AF")]
	public Type saveModuleDataType
	{
		[Token(Token = "0x600084B")]
		[Address(RVA = "0xFD67EC", Offset = "0xFD67EC", VA = "0xFD67EC", Slot = "4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000843")]
	[Address(RVA = "0xFD5EB4", Offset = "0xFD5EB4", VA = "0xFD5EB4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000844")]
	[Address(RVA = "0xFD60C0", Offset = "0xFD60C0", VA = "0xFD60C0")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000845")]
	[Address(RVA = "0xFD5FE4", Offset = "0xFD5FE4", VA = "0xFD5FE4")]
	private void FindAudioListener()
	{
	}

	[Token(Token = "0x6000846")]
	[Address(RVA = "0xFD61A4", Offset = "0xFD61A4", VA = "0xFD61A4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000847")]
	[Address(RVA = "0xFD631C", Offset = "0xFD631C", VA = "0xFD631C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000848")]
	[Address(RVA = "0xFD64B4", Offset = "0xFD64B4", VA = "0xFD64B4")]
	private void OnNewGameStarted()
	{
	}

	[Token(Token = "0x6000849")]
	[Address(RVA = "0xFD64BC", Offset = "0xFD64BC", VA = "0xFD64BC")]
	public void SetPosition(Vector3 position)
	{
	}

	[Token(Token = "0x600084A")]
	[Address(RVA = "0xFD66A4", Offset = "0xFD66A4", VA = "0xFD66A4")]
	public void SetScale(float scale)
	{
	}

	[Token(Token = "0x600084C")]
	[Address(RVA = "0xFD685C", Offset = "0xFD685C", VA = "0xFD685C", Slot = "5")]
	public SaveSystem.ModuleData OnSave()
	{
		return null;
	}

	[Token(Token = "0x600084D")]
	[Address(RVA = "0xFD699C", Offset = "0xFD699C", VA = "0xFD699C", Slot = "6")]
	public void OnLoad(SaveSystem.SaveGame saveGame, SaveSystem.ModuleData data)
	{
	}

	[Token(Token = "0x600084E")]
	[Address(RVA = "0xFD6B4C", Offset = "0xFD6B4C", VA = "0xFD6B4C")]
	private void FillMetadata(SaveSystem.Metadata metadata)
	{
	}

	[Token(Token = "0x600084F")]
	[Address(RVA = "0xFD6C28", Offset = "0xFD6C28", VA = "0xFD6C28")]
	public bool IsPointVisible(Vector3 point)
	{
		return default(bool);
	}

	[Token(Token = "0x6000850")]
	[Address(RVA = "0xFD6C88", Offset = "0xFD6C88", VA = "0xFD6C88")]
	public bool IsPointFocused(Vector3 point)
	{
		return default(bool);
	}

	[Token(Token = "0x6000851")]
	[Address(RVA = "0xFD6CEC", Offset = "0xFD6CEC", VA = "0xFD6CEC")]
	public Player()
	{
	}
}
[Token(Token = "0x20000C9")]
public class PlayerInterface : MonoBehaviour
{
	[Token(Token = "0x2000349")]
	public enum Mode
	{
		[Token(Token = "0x4001556")]
		Default,
		[Token(Token = "0x4001557")]
		StreetView
	}

	[Token(Token = "0x200034A")]
	public class WorldCursor
	{
		[Token(Token = "0x2000425")]
		private struct Sample
		{
			[Token(Token = "0x4001986")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Vector3 position;

			[Token(Token = "0x4001987")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public float timeElapsed;

			[Token(Token = "0x60018EF")]
			[Address(RVA = "0x722338", Offset = "0x722338", VA = "0x722338")]
			public Sample(Vector3 inPos, float inElapsed)
			{
			}
		}

		[Token(Token = "0x4001558")]
		private const float latency = 0.1f;

		[Token(Token = "0x4001559")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Vector3 updateLocation;

		[Token(Token = "0x400155A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public bool isValid;

		[Token(Token = "0x400155B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int x;

		[Token(Token = "0x400155C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public int y;

		[Token(Token = "0x400155D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6AC694", Offset = "0x6AC694")]
		private Vector3 <smoothedLocation>k__BackingField;

		[Token(Token = "0x400155E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public Ray ray;

		[Token(Token = "0x400155F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public float rayLength;

		[Token(Token = "0x4001560")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private List<Sample> samples;

		[Token(Token = "0x170003C6")]
		public Vector3 smoothedLocation
		{
			[Token(Token = "0x6001680")]
			[Address(RVA = "0x10FCA04", Offset = "0x10FCA04", VA = "0x10FCA04")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6B39C8", Offset = "0x6B39C8")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6001681")]
			[Address(RVA = "0x10FCA10", Offset = "0x10FCA10", VA = "0x10FCA10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6B39D8", Offset = "0x6B39D8")]
			private set
			{
			}
		}

		[Token(Token = "0x170003C7")]
		public Vector3 laggedLocation
		{
			[Token(Token = "0x6001682")]
			[Address(RVA = "0x10FCA1C", Offset = "0x10FCA1C", VA = "0x10FCA1C")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x600167E")]
		[Address(RVA = "0x10FC480", Offset = "0x10FC480", VA = "0x10FC480")]
		public void Update(Ray cursorRay, City city)
		{
		}

		[Token(Token = "0x600167F")]
		[Address(RVA = "0x10FC8C8", Offset = "0x10FC8C8", VA = "0x10FC8C8")]
		public void OverrideLocation(Vector3 newLocation, City city)
		{
		}

		[Token(Token = "0x6001683")]
		[Address(RVA = "0x10FCAA0", Offset = "0x10FCAA0", VA = "0x10FCAA0")]
		public WorldCursor()
		{
		}
	}

	[Token(Token = "0x200034B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6A81F4", Offset = "0x6A81F4")]
	private sealed class <TransitionRoutine>d__210 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001561")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001562")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001563")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PlayerInterface <>4__this;

		[Token(Token = "0x4001564")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public WorldMapCity city;

		[Token(Token = "0x4001565")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float <transitionProgress>5__2;

		[Token(Token = "0x4001566")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private bool <isCityActive>5__3;

		[Token(Token = "0x4001567")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Vector3 <targetWorldPosition>5__4;

		[Token(Token = "0x4001568")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private Vector3 <targetWorldScale>5__5;

		[Token(Token = "0x4001569")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Quaternion <targetWorldRotation>5__6;

		[Token(Token = "0x400156A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Vector3 <startingMiniPosition>5__7;

		[Token(Token = "0x400156B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private Vector3 <startingMiniScale>5__8;

		[Token(Token = "0x400156C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Quaternion <startingMiniRotation>5__9;

		[Token(Token = "0x400156D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Vector3 <targetMiniPosition>5__10;

		[Token(Token = "0x400156E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		private Quaternion <targetMiniRotation>5__11;

		[Token(Token = "0x400156F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		private Vector3 <targetMiniScale>5__12;

		[Token(Token = "0x4001570")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private Vector3 <startingWorldPosition>5__13;

		[Token(Token = "0x4001571")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		private Vector3 <startingWorldScale>5__14;

		[Token(Token = "0x4001572")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private Quaternion <startingWorldRotation>5__15;

		[Token(Token = "0x170003C8")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001687")]
			[Address(RVA = "0x10FC410", Offset = "0x10FC410", VA = "0x10FC410", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003C9")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001689")]
			[Address(RVA = "0x10FC478", Offset = "0x10FC478", VA = "0x10FC478", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001684")]
		[Address(RVA = "0x10FBBE4", Offset = "0x10FBBE4", VA = "0x10FBBE4")]
		[DebuggerHidden]
		public <TransitionRoutine>d__210(int <>1__state)
		{
		}

		[Token(Token = "0x6001685")]
		[Address(RVA = "0x10FBC10", Offset = "0x10FBC10", VA = "0x10FBC10", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001686")]
		[Address(RVA = "0x10FBC14", Offset = "0x10FBC14", VA = "0x10FBC14", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001688")]
		[Address(RVA = "0x10FC418", Offset = "0x10FC418", VA = "0x10FC418", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000574")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6A8F3C", Offset = "0x6A8F3C")]
	private Player <player>k__BackingField;

	[Token(Token = "0x4000575")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6A8F4C", Offset = "0x6A8F4C")]
	private PlayerTool <currentTool>k__BackingField;

	[Token(Token = "0x4000576")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public SettingsMenu settingsMenu;

	[Token(Token = "0x4000577")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public SettingsMenu settingsMenuOnStart;

	[Token(Token = "0x4000578")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public SaveMenu saveMenuOnError;

	[Token(Token = "0x4000579")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public CreditsPanel creditsPanel;

	[Token(Token = "0x400057A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public DialogMessage dialogMessage;

	[Token(Token = "0x400057B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public HandTrackingDialog handTrackingDialog;

	[Token(Token = "0x400057C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GameObject navCube;

	[Token(Token = "0x400057D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public GameObject wheelMenuRoot;

	[Token(Token = "0x400057E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Transform wheelMenuUntrackedRoot;

	[Token(Token = "0x400057F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public BuildingEffectCalculator buildingEffectCalculator;

	[Token(Token = "0x4000580")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public GameObject buildingPlacementEffectPrefab;

	[Token(Token = "0x4000581")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public MeshRenderer blackVoid;

	[Token(Token = "0x4000582")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public ControllerLabels leftHandControllerLabels;

	[Token(Token = "0x4000583")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public ControllerLabels rightHandControllerLabels;

	[Token(Token = "0x4000584")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6A8F5C", Offset = "0x6A8F5C")]
	private ControllerLabels.LabelType <activeControllerLabels>k__BackingField;

	[Token(Token = "0x4000585")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	private float wheelMenuUntrackedRootDepth;

	[Token(Token = "0x4000586")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public ActiveToolDisplay activeToolDisplay;

	[Token(Token = "0x4000587")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public HintArrow hintArrow;

	[Token(Token = "0x4000588")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public Smartwatch watch;

	[Token(Token = "0x4000589")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public Transform watchRoot;

	[Token(Token = "0x400058A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public Transform watchLeftHandRoot;

	[Token(Token = "0x400058B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public Transform watchRightHandRoot;

	[Token(Token = "0x400058C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public AudioSource interfaceAudio;

	[Token(Token = "0x400058D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public Canvas mainCanvas;

	[Token(Token = "0x400058E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private float mainCanvasHeight;

	[Token(Token = "0x400058F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
	private float mainCanvasDepth;

	[Token(Token = "0x4000590")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private Quaternion mainCanvasStartingRotation;

	[Token(Token = "0x4000591")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public float idealCanvasHeightOffsetFromEyeHeight;

	[Token(Token = "0x4000592")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
	public float minCanvasHeight;

	[Token(Token = "0x4000593")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6A8F6C", Offset = "0x6A8F6C")]
	private SelectedInfoBox <selectedInfoBox>k__BackingField;

	[Token(Token = "0x4000594")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	public GameObject selectedInfoBoxPrefab;

	[Token(Token = "0x4000595")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	public ConstructionCost toolCost;

	[Token(Token = "0x4000596")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6A8F7C", Offset = "0x6A8F7C")]
	private Mode <currentMode>k__BackingField;

	[Token(Token = "0x4000597")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static bool fakeVRInEditor;

	[Token(Token = "0x4000598")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	public GameObject cursorPrefab;

	[Token(Token = "0x4000599")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	public GameObject circleMeshPrefab;

	[Token(Token = "0x400059A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	public GameObject highlightSpot;

	[Token(Token = "0x400059B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	public float grabMoveSpeed;

	[Token(Token = "0x400059C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x13C")]
	public float cameraAngle;

	[Token(Token = "0x400059D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	public float minCameraHeight;

	[Token(Token = "0x400059E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
	public float maxCameraHeight;

	[Token(Token = "0x400059F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	public float streetViewScale;

	[Token(Token = "0x40005A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14C")]
	public float streetViewHeight;

	[Token(Token = "0x40005A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	public float baseCameraHeight;

	[Token(Token = "0x40005A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x154")]
	public float baseCameraScale;

	[Token(Token = "0x40005A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	public float cameraRotationBaseSpeed;

	[Token(Token = "0x40005A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x15C")]
	public float cameraZoomSpeed;

	[Token(Token = "0x40005A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	public float maxCameraRotationTranslationBaseSpeed;

	[Token(Token = "0x40005A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x164")]
	private bool snapRotatedLastFrame;

	[Token(Token = "0x40005A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	public float uiScale2D;

	[Token(Token = "0x40005A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x16C")]
	public Vector3 uiOffset2D;

	[Token(Token = "0x40005A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	private Vector3 grabMovePlayerStartPosition;

	[Token(Token = "0x40005AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x184")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6A8F8C", Offset = "0x6A8F8C")]
	private bool <isPrimaryGrabMoving>k__BackingField;

	[Token(Token = "0x40005AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x185")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6A8F9C", Offset = "0x6A8F9C")]
	private bool <isSecondaryGrabMoving>k__BackingField;

	[Token(Token = "0x40005AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x186")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6A8FAC", Offset = "0x6A8FAC")]
	private bool <isGrabZooming>k__BackingField;

	[Token(Token = "0x40005AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x187")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6A8FBC", Offset = "0x6A8FBC")]
	private bool <isGrabRotating>k__BackingField;

	[Token(Token = "0x40005AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6A8FCC", Offset = "0x6A8FCC")]
	private float <grabRotationAngle>k__BackingField;

	[Token(Token = "0x40005AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6A8FDC", Offset = "0x6A8FDC")]
	private float <grabRotationAngleSmooth>k__BackingField;

	[Token(Token = "0x40005B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6A8FEC", Offset = "0x6A8FEC")]
	private float <grabZoomScaleDifference>k__BackingField;

	[Token(Token = "0x40005B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x194")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6A8FFC", Offset = "0x6A8FFC")]
	private Vector3 <grabMoveCursorStart>k__BackingField;

	[Token(Token = "0x40005B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6A900C", Offset = "0x6A900C")]
	private Vector3 <grabMoveSecondaryCursorStart>k__BackingField;

	[Token(Token = "0x40005B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	private List<GameObject> cursorPool;

	[Token(Token = "0x40005B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6A901C", Offset = "0x6A901C")]
	private VRControllerInputModule <vrInputModule>k__BackingField;

	[Token(Token = "0x40005B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	public WorldCursor primaryWorldCursor;

	[Token(Token = "0x40005B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
	public WorldCursor secondaryWorldCursor;

	[Token(Token = "0x40005B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
	public float zoomTransitionDuration;

	[Token(Token = "0x40005B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D4")]
	private bool allowTwoHandedZoom;

	[Token(Token = "0x40005B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
	private Vector3 leftGrabZoomStartPosition;

	[Token(Token = "0x40005BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E4")]
	private Vector3 rightGrabZoomStartPosition;

	[Token(Token = "0x40005BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
	private float grabZoomStartScale;

	[Token(Token = "0x40005BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F4")]
	private float grabZoomStartYaw;

	[Token(Token = "0x40005BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
	private Vector3 zoomStartLocation;

	[Token(Token = "0x40005BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x204")]
	private float zoomStartScale;

	[Token(Token = "0x40005BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
	private Quaternion zoomStartRotation;

	[Token(Token = "0x40005C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
	private float zoomTimer;

	[Token(Token = "0x40005C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21C")]
	private Vector3 zoomTargetLocation;

	[Token(Token = "0x40005C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x228")]
	private float zoomTargetScale;

	[Token(Token = "0x40005C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x22C")]
	private Quaternion zoomTargetRotation;

	[Token(Token = "0x40005C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x23C")]
	private Vector3 lastDefaultLocation;

	[Token(Token = "0x40005C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x248")]
	private Quaternion lastDefaultRotation;

	[Token(Token = "0x40005C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x258")]
	private float lastDefaultScale;

	[Token(Token = "0x40005C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x25C")]
	private bool shouldClearTool;

	[Token(Token = "0x40005C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x260")]
	public float navCageTransitionDuration;

	[Token(Token = "0x40005C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x268")]
	private Material navCageMaterial;

	[Token(Token = "0x40005CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x270")]
	private VRHand tableGrabbedHand;

	[Token(Token = "0x40005CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x278")]
	private float tableGrabbedHandStartWorldHeight;

	[Token(Token = "0x40005CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x27C")]
	private float tableHandleStartWorldHeight;

	[Token(Token = "0x40005CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x280")]
	public Vector3 buildButtonHoverOffset;

	[Token(Token = "0x40005CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28C")]
	public Vector3 wheelMenuHoverOffset;

	[Token(Token = "0x40005CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x298")]
	public Vector3 undoButtonHoverOffset;

	[Token(Token = "0x40005D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A4")]
	public Vector3 bubbleMenuBaseOffsetFromCamera;

	[Token(Token = "0x40005D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2B0")]
	private bool wasLeftGrabPressed;

	[Token(Token = "0x40005D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2B1")]
	private bool wasRightGrabPressed;

	[Token(Token = "0x40005D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2B4")]
	public float transitionDuration;

	[Token(Token = "0x40005D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2B8")]
	private bool isTransitioning;

	[Token(Token = "0x170001B0")]
	public Player player
	{
		[Token(Token = "0x6000852")]
		[Address(RVA = "0xFD8B80", Offset = "0xFD8B80", VA = "0xFD8B80")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6AFE08", Offset = "0x6AFE08")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000853")]
		[Address(RVA = "0xFD8B88", Offset = "0xFD8B88", VA = "0xFD8B88")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6AFE18", Offset = "0x6AFE18")]
		private set
		{
		}
	}

	[Token(Token = "0x170001B1")]
	public PlayerTool currentTool
	{
		[Token(Token = "0x6000854")]
		[Address(RVA = "0xFD8B90", Offset = "0xFD8B90", VA = "0xFD8B90")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6AFE28", Offset = "0x6AFE28")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000855")]
		[Address(RVA = "0xFD8B98", Offset = "0xFD8B98", VA = "0xFD8B98")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6AFE38", Offset = "0x6AFE38")]
		private set
		{
		}
	}

	[Token(Token = "0x170001B2")]
	public ControllerLabels.LabelType activeControllerLabels
	{
		[Token(Token = "0x6000856")]
		[Address(RVA = "0xFD8BA0", Offset = "0xFD8BA0", VA = "0xFD8BA0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6AFE48", Offset = "0x6AFE48")]
		get
		{
			return default(ControllerLabels.LabelType);
		}
		[Token(Token = "0x6000857")]
		[Address(RVA = "0xFD8BA8", Offset = "0xFD8BA8", VA = "0xFD8BA8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6AFE58", Offset = "0x6AFE58")]
		set
		{
		}
	}

	[Token(Token = "0x170001B3")]
	public WheelMenu wheelMenu
	{
		[Token(Token = "0x6000858")]
		[Address(RVA = "0xFD8BB0", Offset = "0xFD8BB0", VA = "0xFD8BB0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170001B4")]
	public bool isAnyCursorBlockingMenuOpen
	{
		[Token(Token = "0x6000859")]
		[Address(RVA = "0xFD8C08", Offset = "0xFD8C08", VA = "0xFD8C08")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170001B5")]
	public Camera eventCamera
	{
		[Token(Token = "0x600085A")]
		[Address(RVA = "0xFD8CB4", Offset = "0xFD8CB4", VA = "0xFD8CB4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170001B6")]
	public SelectedInfoBox selectedInfoBox
	{
		[Token(Token = "0x600085B")]
		[Address(RVA = "0xFD8CD0", Offset = "0xFD8CD0", VA = "0xFD8CD0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6AFE68", Offset = "0x6AFE68")]
		get
		{
			return null;
		}
		[Token(Token = "0x600085C")]
		[Address(RVA = "0xFD8CD8", Offset = "0xFD8CD8", VA = "0xFD8CD8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6AFE78", Offset = "0x6AFE78")]
		private set
		{
		}
	}

	[Token(Token = "0x170001B7")]
	public Mode currentMode
	{
		[Token(Token = "0x600085D")]
		[Address(RVA = "0xFD8CE0", Offset = "0xFD8CE0", VA = "0xFD8CE0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6AFE88", Offset = "0x6AFE88")]
		get
		{
			return default(Mode);
		}
		[Token(Token = "0x600085E")]
		[Address(RVA = "0xFD8CE8", Offset = "0xFD8CE8", VA = "0xFD8CE8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6AFE98", Offset = "0x6AFE98")]
		private set
		{
		}
	}

	[Token(Token = "0x170001B8")]
	public bool isVRMode
	{
		[Token(Token = "0x600085F")]
		[Address(RVA = "0xFD8CF0", Offset = "0xFD8CF0", VA = "0xFD8CF0")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170001B9")]
	public float cameraRotationSpeed
	{
		[Token(Token = "0x6000860")]
		[Address(RVA = "0xFD8D88", Offset = "0xFD8D88", VA = "0xFD8D88")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x170001BA")]
	public float maxCameraRotationTranslationSpeed
	{
		[Token(Token = "0x6000861")]
		[Address(RVA = "0xFD8E2C", Offset = "0xFD8E2C", VA = "0xFD8E2C")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x170001BB")]
	public bool useSnapRotation
	{
		[Token(Token = "0x6000862")]
		[Address(RVA = "0xFD8ED0", Offset = "0xFD8ED0", VA = "0xFD8ED0")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170001BC")]
	public float snapRotationAngle
	{
		[Token(Token = "0x6000863")]
		[Address(RVA = "0xFD8F00", Offset = "0xFD8F00", VA = "0xFD8F00")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x170001BD")]
	public bool isGrabMoving
	{
		[Token(Token = "0x6000864")]
		[Address(RVA = "0xFD8F3C", Offset = "0xFD8F3C", VA = "0xFD8F3C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170001BE")]
	public bool isUsingAnyGrabMovement
	{
		[Token(Token = "0x6000865")]
		[Address(RVA = "0xFD8F5C", Offset = "0xFD8F5C", VA = "0xFD8F5C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170001BF")]
	public bool isPrimaryGrabMoving
	{
		[Token(Token = "0x6000866")]
		[Address(RVA = "0xFD8F8C", Offset = "0xFD8F8C", VA = "0xFD8F8C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6AFEA8", Offset = "0x6AFEA8")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000867")]
		[Address(RVA = "0xFD8F94", Offset = "0xFD8F94", VA = "0xFD8F94")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6AFEB8", Offset = "0x6AFEB8")]
		private set
		{
		}
	}

	[Token(Token = "0x170001C0")]
	public bool isSecondaryGrabMoving
	{
		[Token(Token = "0x6000868")]
		[Address(RVA = "0xFD8FA0", Offset = "0xFD8FA0", VA = "0xFD8FA0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6AFEC8", Offset = "0x6AFEC8")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000869")]
		[Address(RVA = "0xFD8FA8", Offset = "0xFD8FA8", VA = "0xFD8FA8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6AFED8", Offset = "0x6AFED8")]
		private set
		{
		}
	}

	[Token(Token = "0x170001C1")]
	public bool isGrabZooming
	{
		[Token(Token = "0x600086A")]
		[Address(RVA = "0xFD8FB4", Offset = "0xFD8FB4", VA = "0xFD8FB4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6AFEE8", Offset = "0x6AFEE8")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600086B")]
		[Address(RVA = "0xFD8FBC", Offset = "0xFD8FBC", VA = "0xFD8FBC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6AFEF8", Offset = "0x6AFEF8")]
		private set
		{
		}
	}

	[Token(Token = "0x170001C2")]
	public bool isGrabRotating
	{
		[Token(Token = "0x600086C")]
		[Address(RVA = "0xFD8FC8", Offset = "0xFD8FC8", VA = "0xFD8FC8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6AFF08", Offset = "0x6AFF08")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600086D")]
		[Address(RVA = "0xFD8FD0", Offset = "0xFD8FD0", VA = "0xFD8FD0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6AFF18", Offset = "0x6AFF18")]
		private set
		{
		}
	}

	[Token(Token = "0x170001C3")]
	public bool allowGrabZoomOrRotate
	{
		[Token(Token = "0x600086E")]
		[Address(RVA = "0xFD8FDC", Offset = "0xFD8FDC", VA = "0xFD8FDC")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170001C4")]
	public float grabRotationAngle
	{
		[Token(Token = "0x600086F")]
		[Address(RVA = "0xFD9000", Offset = "0xFD9000", VA = "0xFD9000")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6AFF28", Offset = "0x6AFF28")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000870")]
		[Address(RVA = "0xFD9008", Offset = "0xFD9008", VA = "0xFD9008")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6AFF38", Offset = "0x6AFF38")]
		private set
		{
		}
	}

	[Token(Token = "0x170001C5")]
	public float grabRotationAngleSmooth
	{
		[Token(Token = "0x6000871")]
		[Address(RVA = "0xFD9010", Offset = "0xFD9010", VA = "0xFD9010")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6AFF48", Offset = "0x6AFF48")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000872")]
		[Address(RVA = "0xFD9018", Offset = "0xFD9018", VA = "0xFD9018")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6AFF58", Offset = "0x6AFF58")]
		private set
		{
		}
	}

	[Token(Token = "0x170001C6")]
	public float grabZoomScaleDifference
	{
		[Token(Token = "0x6000873")]
		[Address(RVA = "0xFD9020", Offset = "0xFD9020", VA = "0xFD9020")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6AFF68", Offset = "0x6AFF68")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000874")]
		[Address(RVA = "0xFD9028", Offset = "0xFD9028", VA = "0xFD9028")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6AFF78", Offset = "0x6AFF78")]
		private set
		{
		}
	}

	[Token(Token = "0x170001C7")]
	public Vector3 grabMoveCursorStart
	{
		[Token(Token = "0x6000875")]
		[Address(RVA = "0xFD9030", Offset = "0xFD9030", VA = "0xFD9030")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6AFF88", Offset = "0x6AFF88")]
		get
		{
			return default(Vector3);
		}
		[Token(Token = "0x6000876")]
		[Address(RVA = "0xFD9040", Offset = "0xFD9040", VA = "0xFD9040")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6AFF98", Offset = "0x6AFF98")]
		private set
		{
		}
	}

	[Token(Token = "0x170001C8")]
	public Vector3 grabMoveSecondaryCursorStart
	{
		[Token(Token = "0x6000877")]
		[Address(RVA = "0xFD9050", Offset = "0xFD9050", VA = "0xFD9050")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6AFFA8", Offset = "0x6AFFA8")]
		get
		{
			return default(Vector3);
		}
		[Token(Token = "0x6000878")]
		[Address(RVA = "0xFD9060", Offset = "0xFD9060", VA = "0xFD9060")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6AFFB8", Offset = "0x6AFFB8")]
		private set
		{
		}
	}

	[Token(Token = "0x170001C9")]
	public VRControllerInputModule vrInputModule
	{
		[Token(Token = "0x6000879")]
		[Address(RVA = "0xFD9070", Offset = "0xFD9070", VA = "0xFD9070")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6AFFC8", Offset = "0x6AFFC8")]
		get
		{
			return null;
		}
		[Token(Token = "0x600087A")]
		[Address(RVA = "0xFD9078", Offset = "0xFD9078", VA = "0xFD9078")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6AFFD8", Offset = "0x6AFFD8")]
		private set
		{
		}
	}

	[Token(Token = "0x170001CA")]
	public bool isZooming
	{
		[Token(Token = "0x600087B")]
		[Address(RVA = "0xFD6694", Offset = "0xFD6694", VA = "0xFD6694")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170001CB")]
	public bool areAnyDialogsOpen
	{
		[Token(Token = "0x600087C")]
		[Address(RVA = "0xFD8C64", Offset = "0xFD8C64", VA = "0xFD8C64")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170001CC")]
	private bool shouldHideTool
	{
		[Token(Token = "0x600087D")]
		[Address(RVA = "0xFD9080", Offset = "0xFD9080", VA = "0xFD9080")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170001CD")]
	private float navCageAlpha
	{
		[Token(Token = "0x600087E")]
		[Address(RVA = "0xFD9150", Offset = "0xFD9150", VA = "0xFD9150")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x600087F")]
		[Address(RVA = "0xFD9178", Offset = "0xFD9178", VA = "0xFD9178")]
		set
		{
		}
	}

	[Token(Token = "0x170001CE")]
	public bool isPotentiallyGrabbingTable
	{
		[Token(Token = "0x6000880")]
		[Address(RVA = "0xFD91C4", Offset = "0xFD91C4", VA = "0xFD91C4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000881")]
	[Address(RVA = "0xFD92A8", Offset = "0xFD92A8", VA = "0xFD92A8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000882")]
	[Address(RVA = "0xFD93D0", Offset = "0xFD93D0", VA = "0xFD93D0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000883")]
	[Address(RVA = "0xFD978C", Offset = "0xFD978C", VA = "0xFD978C")]
	public void HideWheelMenu()
	{
	}

	[Token(Token = "0x6000884")]
	[Address(RVA = "0xFD96C0", Offset = "0xFD96C0", VA = "0xFD96C0")]
	private void CreateSelectedInfoBox()
	{
	}

	[Token(Token = "0x6000885")]
	[Address(RVA = "0xFD9820", Offset = "0xFD9820", VA = "0xFD9820")]
	private GameObject CreateMeshFromPool(List<GameObject> pool)
	{
		return null;
	}

	[Token(Token = "0x6000886")]
	[Address(RVA = "0xFD9AF0", Offset = "0xFD9AF0", VA = "0xFD9AF0")]
	private static void SetLayerRecursively(GameObject obj, int layer)
	{
	}

	[Token(Token = "0x6000887")]
	[Address(RVA = "0xFD9BF0", Offset = "0xFD9BF0", VA = "0xFD9BF0")]
	public GameObject CreateCursor(GameObject prefab)
	{
		return null;
	}

	[Token(Token = "0x6000888")]
	[Address(RVA = "0xFD9F24", Offset = "0xFD9F24", VA = "0xFD9F24")]
	public GameObject CreateCircleMesh(float radius, Color color, [Optional] Transform attachParent)
	{
		return null;
	}

	[Token(Token = "0x6000889")]
	[Address(RVA = "0xFDA138", Offset = "0xFDA138", VA = "0xFDA138")]
	private void OnGameStateChanged(GameStateManager.State oldState, GameStateManager.State newState)
	{
	}

	[Token(Token = "0x600088A")]
	[Address(RVA = "0xFDA704", Offset = "0xFDA704", VA = "0xFDA704")]
	private void OnNewGameStarted()
	{
	}

	[Token(Token = "0x600088B")]
	[Address(RVA = "0xFDA7E4", Offset = "0xFDA7E4", VA = "0xFDA7E4")]
	public void FocusOnSeaport(City city)
	{
	}

	[Token(Token = "0x600088C")]
	[Address(RVA = "0xFDAAFC", Offset = "0xFDAAFC", VA = "0xFDAAFC")]
	private void UpdateWheelPositioning()
	{
	}

	[Token(Token = "0x600088D")]
	[Address(RVA = "0xFDBD88", Offset = "0xFDBD88", VA = "0xFDBD88")]
	private void CalculateBuildButtonPosition(Transform menuRoot, VRHand hand, Vector3 offset)
	{
	}

	[Token(Token = "0x600088E")]
	[Address(RVA = "0xFDB7DC", Offset = "0xFDB7DC", VA = "0xFDB7DC")]
	private void CalculateMenuPosition(Transform menuRoot, VRHand hand, Vector3 offset)
	{
	}

	[Token(Token = "0x600088F")]
	[Address(RVA = "0xFDC0B0", Offset = "0xFDC0B0", VA = "0xFDC0B0")]
	private void FrontEndUpdate()
	{
	}

	[Token(Token = "0x6000890")]
	[Address(RVA = "0xFDCD48", Offset = "0xFDCD48", VA = "0xFDCD48")]
	private void Update()
	{
	}

	[Token(Token = "0x6000891")]
	[Address(RVA = "0xFDFD78", Offset = "0xFDFD78", VA = "0xFDFD78")]
	private void HandlePlayerHandPoses()
	{
	}

	[Token(Token = "0x6000892")]
	[Address(RVA = "0xFD885C", Offset = "0xFD885C", VA = "0xFD885C")]
	public void AdjustMainCanvasPosition(bool force = false)
	{
	}

	[Token(Token = "0x6000893")]
	[Address(RVA = "0xFE02A4", Offset = "0xFE02A4", VA = "0xFE02A4")]
	private void AdjustMainCanvasPositionToPlayer()
	{
	}

	[Token(Token = "0x6000894")]
	[Address(RVA = "0xFE01F0", Offset = "0xFE01F0", VA = "0xFE01F0")]
	private void ResetMainCanvasPosition()
	{
	}

	[Token(Token = "0x6000895")]
	[Address(RVA = "0xFE050C", Offset = "0xFE050C", VA = "0xFE050C")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000896")]
	[Address(RVA = "0xFE0510", Offset = "0xFE0510", VA = "0xFE0510")]
	private void HandleQuickSave(int slotIndex)
	{
	}

	[Token(Token = "0x6000897")]
	[Address(RVA = "0xFDD39C", Offset = "0xFDD39C", VA = "0xFDD39C")]
	private void InGameUpdate()
	{
	}

	[Token(Token = "0x6000898")]
	[Address(RVA = "0xFDA4A4", Offset = "0xFDA4A4", VA = "0xFDA4A4")]
	public void SwitchTool(PlayerTool tool)
	{
	}

	[Token(Token = "0x6000899")]
	[Address(RVA = "0xFDA644", Offset = "0xFDA644", VA = "0xFDA644")]
	private void SwitchMode(Mode targetMode)
	{
	}

	[Token(Token = "0x600089A")]
	[Address(RVA = "0xFE09E4", Offset = "0xFE09E4", VA = "0xFE09E4")]
	private void OnZoomTransitionComplete()
	{
	}

	[Token(Token = "0x600089B")]
	[Address(RVA = "0xFE0A60", Offset = "0xFE0A60", VA = "0xFE0A60")]
	private void ZoomTransition(Vector3 targetPosition, Quaternion targetRotation, float targetScale)
	{
	}

	[Token(Token = "0x600089C")]
	[Address(RVA = "0xFE0B74", Offset = "0xFE0B74", VA = "0xFE0B74")]
	public void ZoomToStreetView(Vector3 location)
	{
	}

	[Token(Token = "0x600089D")]
	[Address(RVA = "0xFE0C10", Offset = "0xFE0C10", VA = "0xFE0C10")]
	public void ZoomBackToDefault()
	{
	}

	[Token(Token = "0x600089E")]
	[Address(RVA = "0xFE0764", Offset = "0xFE0764", VA = "0xFE0764")]
	private void HandleZoomAnimation()
	{
	}

	[Token(Token = "0x600089F")]
	[Address(RVA = "0xFE0C58", Offset = "0xFE0C58", VA = "0xFE0C58")]
	public void ClearTool()
	{
	}

	[Token(Token = "0x60008A0")]
	[Address(RVA = "0xFD68EC", Offset = "0xFD68EC", VA = "0xFD68EC")]
	public void FillSaveData(Player.PlayerSaveData saveData)
	{
	}

	[Token(Token = "0x60008A1")]
	[Address(RVA = "0xFE0C64", Offset = "0xFE0C64", VA = "0xFE0C64")]
	public void TransitionToCity(WorldMapCity city)
	{
	}

	[Token(Token = "0x60008A2")]
	[Address(RVA = "0xFE0C9C", Offset = "0xFE0C9C", VA = "0xFE0C9C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6AFFE8", Offset = "0x6AFFE8")]
	private IEnumerator TransitionRoutine(WorldMapCity city)
	{
		return null;
	}

	[Token(Token = "0x60008A3")]
	[Address(RVA = "0xFE0D18", Offset = "0xFE0D18", VA = "0xFE0D18")]
	private void OnInputSystemChanged(IInputSystem newSystem)
	{
	}

	[Token(Token = "0x60008A4")]
	[Address(RVA = "0xFE0E38", Offset = "0xFE0E38", VA = "0xFE0E38")]
	public PlayerInterface()
	{
	}
}
[Token(Token = "0x20000CA")]
public class StressTester : MonoBehaviour
{
	[Token(Token = "0x40005D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject[] stressTestBuildings;

	[Token(Token = "0x60008A6")]
	[Address(RVA = "0xFF32C8", Offset = "0xFF32C8", VA = "0xFF32C8")]
	private void ClearMapForStressTesting(City city)
	{
	}

	[Token(Token = "0x60008A7")]
	[Address(RVA = "0xFF3564", Offset = "0xFF3564", VA = "0xFF3564")]
	private BuildingInfo GetRandomZoneBuilding()
	{
		return null;
	}

	[Token(Token = "0x60008A8")]
	[Address(RVA = "0xFF364C", Offset = "0xFF364C", VA = "0xFF364C")]
	public void StressTestZoneBuildings()
	{
	}

	[Token(Token = "0x60008A9")]
	[Address(RVA = "0xFF39B8", Offset = "0xFF39B8", VA = "0xFF39B8")]
	public void StressTest(int buildingIndex)
	{
	}

	[Token(Token = "0x60008AA")]
	[Address(RVA = "0xFF3BBC", Offset = "0xFF3BBC", VA = "0xFF3BBC")]
	public StressTester()
	{
	}
}
[Token(Token = "0x20000CB")]
public class ToolbarButton : MonoBehaviour, IPointerEnterHandler, IEventSystemHandler, IPointerExitHandler
{
	[Token(Token = "0x200034C")]
	public enum ButtonType
	{
		[Token(Token = "0x4001574")]
		Category,
		[Token(Token = "0x4001575")]
		RoadTool,
		[Token(Token = "0x4001576")]
		BuildingTool,
		[Token(Token = "0x4001577")]
		BulldozeRegionTool,
		[Token(Token = "0x4001578")]
		ZoneTool,
		[Token(Token = "0x4001579")]
		ZoomOutTool,
		[Token(Token = "0x400157A")]
		StreetViewTool,
		[Token(Token = "0x400157B")]
		PropTool
	}

	[Token(Token = "0x40005D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string toolName;

	[Token(Token = "0x40005D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string toolDescription;

	[Token(Token = "0x40005D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ButtonType buttonType;

	[Token(Token = "0x40005D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public BuildingInfo buildingType;

	[Token(Token = "0x40005DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ZoneManager.ZoneType zoneType;

	[Token(Token = "0x40005DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public PropCollection propCollection;

	[Token(Token = "0x40005DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject subMenu;

	[Token(Token = "0x40005DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject toolInfoPanel;

	[Token(Token = "0x40005DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private ToolbarHandler handler;

	[Token(Token = "0x40005DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Player player;

	[Token(Token = "0x40005E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private ToolbarButton parent;

	[Token(Token = "0x40005E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private List<ToolbarButton> children;

	[Token(Token = "0x40005E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private ToolbarButton lastSelectedChild;

	[Token(Token = "0x40005E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Button button;

	[Token(Token = "0x60008AB")]
	[Address(RVA = "0x107B0D8", Offset = "0x107B0D8", VA = "0x107B0D8")]
	private void Awake()
	{
	}

	[Token(Token = "0x60008AC")]
	[Address(RVA = "0x107B2C8", Offset = "0x107B2C8", VA = "0x107B2C8")]
	private void Start()
	{
	}

	[Token(Token = "0x60008AD")]
	[Address(RVA = "0x107B360", Offset = "0x107B360", VA = "0x107B360")]
	private void OnClick()
	{
	}

	[Token(Token = "0x60008AE")]
	[Address(RVA = "0x107B3F8", Offset = "0x107B3F8", VA = "0x107B3F8")]
	public void Unselect()
	{
	}

	[Token(Token = "0x60008AF")]
	[Address(RVA = "0x107B640", Offset = "0x107B640", VA = "0x107B640")]
	public void Select()
	{
	}

	[Token(Token = "0x60008B0")]
	[Address(RVA = "0x107BC48", Offset = "0x107BC48", VA = "0x107BC48", Slot = "4")]
	public void OnPointerEnter(PointerEventData eventData)
	{
	}

	[Token(Token = "0x60008B1")]
	[Address(RVA = "0x107C368", Offset = "0x107C368", VA = "0x107C368", Slot = "5")]
	public void OnPointerExit(PointerEventData eventData)
	{
	}

	[Token(Token = "0x60008B2")]
	[Address(RVA = "0x107C38C", Offset = "0x107C38C", VA = "0x107C38C")]
	public ToolbarButton()
	{
	}
}
[Token(Token = "0x20000CC")]
public class ToolbarHandler : MonoBehaviour
{
	[Token(Token = "0x40005E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ToolTipManager toolTip;

	[Token(Token = "0x40005E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Text moneyText;

	[Token(Token = "0x40005E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Text moneyDeltaText;

	[Token(Token = "0x40005E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Text populationText;

	[Token(Token = "0x40005E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Text populationDeltaText;

	[Token(Token = "0x40005E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Text monthText;

	[Token(Token = "0x40005EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Text dayText;

	[Token(Token = "0x40005EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Text yearText;

	[Token(Token = "0x40005EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Text cityLevelText;

	[Token(Token = "0x40005ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Text cityLevelName;

	[Token(Token = "0x40005EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Image cityLevelProgress;

	[Token(Token = "0x40005EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Transform infoPanelRoot;

	[Token(Token = "0x40005F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6A902C", Offset = "0x6A902C")]
	private ToolbarButton <activeCategoryButton>k__BackingField;

	[Token(Token = "0x40005F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6A903C", Offset = "0x6A903C")]
	private ToolbarButton <activeToolButton>k__BackingField;

	[Token(Token = "0x40005F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6A904C", Offset = "0x6A904C")]
	private GameObject <activeToolInfoPanel>k__BackingField;

	[Token(Token = "0x40005F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public ColorBlock selectedButtonColors;

	[Token(Token = "0x40005F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public ColorBlock unselectedButtonColors;

	[Token(Token = "0x40005F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	private Player player;

	[Token(Token = "0x40005F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	public BuildingInfo testBuilding;

	[Token(Token = "0x40005F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	private bool organisedButtons;

	[Token(Token = "0x170001CF")]
	public ToolbarButton activeCategoryButton
	{
		[Token(Token = "0x60008B3")]
		[Address(RVA = "0x107C394", Offset = "0x107C394", VA = "0x107C394")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6B004C", Offset = "0x6B004C")]
		get
		{
			return null;
		}
		[Token(Token = "0x60008B4")]
		[Address(RVA = "0x107C39C", Offset = "0x107C39C", VA = "0x107C39C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6B005C", Offset = "0x6B005C")]
		set
		{
		}
	}

	[Token(Token = "0x170001D0")]
	public ToolbarButton activeToolButton
	{
		[Token(Token = "0x60008B5")]
		[Address(RVA = "0x107C3A4", Offset = "0x107C3A4", VA = "0x107C3A4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6B006C", Offset = "0x6B006C")]
		get
		{
			return null;
		}
		[Token(Token = "0x60008B6")]
		[Address(RVA = "0x107C3AC", Offset = "0x107C3AC", VA = "0x107C3AC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6B007C", Offset = "0x6B007C")]
		set
		{
		}
	}

	[Token(Token = "0x170001D1")]
	public GameObject activeToolInfoPanel
	{
		[Token(Token = "0x60008B7")]
		[Address(RVA = "0x107C3B4", Offset = "0x107C3B4", VA = "0x107C3B4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6B008C", Offset = "0x6B008C")]
		get
		{
			return null;
		}
		[Token(Token = "0x60008B8")]
		[Address(RVA = "0x107C3BC", Offset = "0x107C3BC", VA = "0x107C3BC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6B009C", Offset = "0x6B009C")]
		set
		{
		}
	}

	[Token(Token = "0x60008B9")]
	[Address(RVA = "0x107C3C4", Offset = "0x107C3C4", VA = "0x107C3C4")]
	private void Start()
	{
	}

	[Token(Token = "0x60008BA")]
	[Address(RVA = "0x107C41C", Offset = "0x107C41C", VA = "0x107C41C")]
	private void OrganiseElement(Transform target)
	{
	}

	[Token(Token = "0x60008BB")]
	[Address(RVA = "0x107C6E4", Offset = "0x107C6E4", VA = "0x107C6E4")]
	private void OrganiseButtons()
	{
	}

	[Token(Token = "0x60008BC")]
	[Address(RVA = "0x107C88C", Offset = "0x107C88C", VA = "0x107C88C")]
	private void Update()
	{
	}

	[Token(Token = "0x60008BD")]
	[Address(RVA = "0x107CC3C", Offset = "0x107CC3C", VA = "0x107CC3C")]
	public void ShowInfoPanel(ToolMenu.Entry toolDetails)
	{
	}

	[Token(Token = "0x60008BE")]
	[Address(RVA = "0x107CD8C", Offset = "0x107CD8C", VA = "0x107CD8C")]
	public ToolbarHandler()
	{
	}
}
[Token(Token = "0x20000CD")]
public class BuildingTool : PlayerTool
{
	[Serializable]
	[Token(Token = "0x200034D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6A8204", Offset = "0x6A8204")]
	private sealed class <>c
	{
		[Token(Token = "0x400157C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x400157D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static BuildingHighlighter.HighlightMatcher <>9__30_2;

		[Token(Token = "0x400157E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static BuildingHighlighter.HighlightMatcher <>9__30_3;

		[Token(Token = "0x400157F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static BuildingHighlighter.HighlightMatcher <>9__30_4;

		[Token(Token = "0x4001580")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public static BuildingHighlighter.HighlightMatcher <>9__30_5;

		[Token(Token = "0x600168B")]
		[Address(RVA = "0x10D9D7C", Offset = "0x10D9D7C", VA = "0x10D9D7C")]
		public <>c()
		{
		}

		[Token(Token = "0x600168C")]
		[Address(RVA = "0x10D9D84", Offset = "0x10D9D84", VA = "0x10D9D84")]
		internal bool <OnInit>b__30_2(BuildingInstance x)
		{
			return default(bool);
		}

		[Token(Token = "0x600168D")]
		[Address(RVA = "0x10D9DB0", Offset = "0x10D9DB0", VA = "0x10D9DB0")]
		internal bool <OnInit>b__30_3(BuildingInstance x)
		{
			return default(bool);
		}

		[Token(Token = "0x600168E")]
		[Address(RVA = "0x10D9DDC", Offset = "0x10D9DDC", VA = "0x10D9DDC")]
		internal bool <OnInit>b__30_4(BuildingInstance x)
		{
			return default(bool);
		}

		[Token(Token = "0x600168F")]
		[Address(RVA = "0x10D9E08", Offset = "0x10D9E08", VA = "0x10D9E08")]
		internal bool <OnInit>b__30_5(BuildingInstance x)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x40005F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool debugPlaceAnywhere;

	[Token(Token = "0x40005F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6A905C", Offset = "0x6A905C")]
	private BuildingInfo <buildingType>k__BackingField;

	[Token(Token = "0x40005FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private GameObject cursor;

	[Token(Token = "0x40005FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6A906C", Offset = "0x6A906C")]
	private GameObject <previewMesh>k__BackingField;

	[Token(Token = "0x40005FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private WindTurbine windTurbine;

	[Token(Token = "0x40005FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private int previewX;

	[Token(Token = "0x40005FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private int previewY;

	[Token(Token = "0x40005FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private int previewRot;

	[Token(Token = "0x4000600")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6A907C", Offset = "0x6A907C")]
	private bool <hasValidPreviewLocation>k__BackingField;

	[Token(Token = "0x4000601")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6A908C", Offset = "0x6A908C")]
	private BuildingInstance <upgradeTargetBuilding>k__BackingField;

	[Token(Token = "0x4000602")]
	private const float cursorFloatHeight = 0.05f;

	[Token(Token = "0x4000603")]
	private const float buildingPreviewFloatHeight = 0.03f;

	[Token(Token = "0x170001D2")]
	public override bool toolUnlocksRegions
	{
		[Token(Token = "0x60008BF")]
		[Address(RVA = "0x10D698C", Offset = "0x10D698C", VA = "0x10D698C", Slot = "5")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170001D3")]
	public override bool toolShouldPlaceImmediately
	{
		[Token(Token = "0x60008C0")]
		[Address(RVA = "0x10D6994", Offset = "0x10D6994", VA = "0x10D6994", Slot = "6")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170001D4")]
	public BuildingInfo buildingType
	{
		[Token(Token = "0x60008C1")]
		[Address(RVA = "0x10D699C", Offset = "0x10D699C", VA = "0x10D699C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6B00AC", Offset = "0x6B00AC")]
		get
		{
			return null;
		}
		[Token(Token = "0x60008C2")]
		[Address(RVA = "0x10D69A4", Offset = "0x10D69A4", VA = "0x10D69A4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6B00BC", Offset = "0x6B00BC")]
		private set
		{
		}
	}

	[Token(Token = "0x170001D5")]
	public GameObject previewMesh
	{
		[Token(Token = "0x60008C3")]
		[Address(RVA = "0x10D69AC", Offset = "0x10D69AC", VA = "0x10D69AC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6B00CC", Offset = "0x6B00CC")]
		get
		{
			return null;
		}
		[Token(Token = "0x60008C4")]
		[Address(RVA = "0x10D69B4", Offset = "0x10D69B4", VA = "0x10D69B4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6B00DC", Offset = "0x6B00DC")]
		private set
		{
		}
	}

	[Token(Token = "0x170001D6")]
	public bool hasValidPreviewLocation
	{
		[Token(Token = "0x60008C5")]
		[Address(RVA = "0x10D69BC", Offset = "0x10D69BC", VA = "0x10D69BC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6B00EC", Offset = "0x6B00EC")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60008C6")]
		[Address(RVA = "0x10D69C4", Offset = "0x10D69C4", VA = "0x10D69C4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6B00FC", Offset = "0x6B00FC")]
		private set
		{
		}
	}

	[Token(Token = "0x170001D7")]
	public BuildingInstance upgradeTargetBuilding
	{
		[Token(Token = "0x60008C7")]
		[Address(RVA = "0x10D69D0", Offset = "0x10D69D0", VA = "0x10D69D0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6B010C", Offset = "0x6B010C")]
		get
		{
			return null;
		}
		[Token(Token = "0x60008C8")]
		[Address(RVA = "0x10D69D8", Offset = "0x10D69D8", VA = "0x10D69D8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6B011C", Offset = "0x6B011C")]
		private set
		{
		}
	}

	[Token(Token = "0x60008C9")]
	[Address(RVA = "0x10D69E0", Offset = "0x10D69E0", VA = "0x10D69E0")]
	public BuildingTool(BuildingInfo buildingType)
	{
	}

	[Token(Token = "0x60008CA")]
	[Address(RVA = "0x10D6A0C", Offset = "0x10D6A0C", VA = "0x10D6A0C")]
	public bool GetPreviewLocation(out int x, out int y, out int rotation)
	{
		return default(bool);
	}

	[Token(Token = "0x60008CB")]
	[Address(RVA = "0x10D6A48", Offset = "0x10D6A48", VA = "0x10D6A48", Slot = "7")]
	public override void OnInit()
	{
	}

	[Token(Token = "0x60008CC")]
	[Address(RVA = "0x10D74BC", Offset = "0x10D74BC", VA = "0x10D74BC", Slot = "8")]
	public override void Destroy()
	{
	}

	[Token(Token = "0x60008CD")]
	[Address(RVA = "0x10D76A4", Offset = "0x10D76A4", VA = "0x10D76A4", Slot = "13")]
	public override void SnapCursors(PlayerInterface.WorldCursor primaryCursor, PlayerInterface.WorldCursor secondaryCursor)
	{
	}

	[Token(Token = "0x60008CE")]
	[Address(RVA = "0x10D76C0", Offset = "0x10D76C0", VA = "0x10D76C0", Slot = "20")]
	public override void OnUpdateCursors(ConstructionCost costReport)
	{
	}

	[Token(Token = "0x60008CF")]
	[Address(RVA = "0x10D8E40", Offset = "0x10D8E40", VA = "0x10D8E40")]
	private bool FindUpgradePlacement(int x, int y)
	{
		return default(bool);
	}

	[Token(Token = "0x60008D0")]
	[Address(RVA = "0x10D8F04", Offset = "0x10D8F04", VA = "0x10D8F04")]
	public Vector2 GetRoadsidePosition(int x, int y, int rot)
	{
		return default(Vector2);
	}

	[Token(Token = "0x60008D1")]
	[Address(RVA = "0x10D86FC", Offset = "0x10D86FC", VA = "0x10D86FC")]
	private bool FindPlacement(out int placementX, out int placementY, out int placementRot, out BuildingManager.BuildPlacementQueryResult bestQueryResult)
	{
		return default(bool);
	}

	[Token(Token = "0x60008D2")]
	[Address(RVA = "0x10D90C8", Offset = "0x10D90C8", VA = "0x10D90C8", Slot = "12")]
	protected override bool PlaceInSelection(ConstructionCost cost)
	{
		return default(bool);
	}

	[Token(Token = "0x60008D3")]
	[Address(RVA = "0x10D9604", Offset = "0x10D9604", VA = "0x10D9604", Slot = "11")]
	public override bool IsSelectionValid()
	{
		return default(bool);
	}

	[Token(Token = "0x60008D4")]
	[Address(RVA = "0x10D964C", Offset = "0x10D964C", VA = "0x10D964C", Slot = "21")]
	public override void CalculateCost(ConstructionCost costReport)
	{
	}

	[Token(Token = "0x60008D5")]
	[Address(RVA = "0x10D9B20", Offset = "0x10D9B20", VA = "0x10D9B20", Slot = "17")]
	public override void OnEndInteraction(ConstructionCost cost)
	{
	}

	[Token(Token = "0x60008D6")]
	[Address(RVA = "0x10D9C20", Offset = "0x10D9C20", VA = "0x10D9C20")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6B012C", Offset = "0x6B012C")]
	private bool <OnInit>b__30_0(BuildingInstance x)
	{
		return default(bool);
	}

	[Token(Token = "0x60008D7")]
	[Address(RVA = "0x10D9C58", Offset = "0x10D9C58", VA = "0x10D9C58")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6B013C", Offset = "0x6B013C")]
	private bool <OnInit>b__30_1(BuildingInstance x)
	{
		return default(bool);
	}

	[Token(Token = "0x60008D8")]
	[Address(RVA = "0x10D9C90", Offset = "0x10D9C90", VA = "0x10D9C90")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6B014C", Offset = "0x6B014C")]
	private bool <OnInit>b__30_6(BuildingInstance x)
	{
		return default(bool);
	}
}
[Token(Token = "0x20000CE")]
public class BulldozeRegionTool : RegionTool
{
	[Token(Token = "0x60008D9")]
	[Address(RVA = "0x10D9E4C", Offset = "0x10D9E4C", VA = "0x10D9E4C", Slot = "11")]
	public override bool IsSelectionValid()
	{
		return default(bool);
	}

	[Token(Token = "0x60008DA")]
	[Address(RVA = "0x10D9E54", Offset = "0x10D9E54", VA = "0x10D9E54", Slot = "12")]
	protected override bool PlaceInSelection(ConstructionCost cost)
	{
		return default(bool);
	}

	[Token(Token = "0x60008DB")]
	[Address(RVA = "0x10DA27C", Offset = "0x10DA27C", VA = "0x10DA27C", Slot = "21")]
	public override void CalculateCost(ConstructionCost costReport)
	{
	}

	[Token(Token = "0x60008DC")]
	[Address(RVA = "0x10DA474", Offset = "0x10DA474", VA = "0x10DA474", Slot = "20")]
	public override void OnUpdateCursors(ConstructionCost costReport)
	{
	}

	[Token(Token = "0x60008DD")]
	[Address(RVA = "0x10DA61C", Offset = "0x10DA61C", VA = "0x10DA61C", Slot = "15")]
	public override void OnBeginInteraction(int gridX, int gridY)
	{
	}

	[Token(Token = "0x60008DE")]
	[Address(RVA = "0x10DA670", Offset = "0x10DA670", VA = "0x10DA670", Slot = "16")]
	public override void OnHover(int gridX, int gridY)
	{
	}

	[Token(Token = "0x60008DF")]
	[Address(RVA = "0x10DA718", Offset = "0x10DA718", VA = "0x10DA718", Slot = "8")]
	public override void Destroy()
	{
	}

	[Token(Token = "0x60008E0")]
	[Address(RVA = "0x10DA7F4", Offset = "0x10DA7F4", VA = "0x10DA7F4")]
	public BulldozeRegionTool()
	{
	}
}
[Token(Token = "0x20000CF")]
public class CitySelectTool : PlayerTool
{
	[Token(Token = "0x4000604")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private GameObject cursor;

	[Token(Token = "0x4000605")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private City hoveredCity;

	[Token(Token = "0x60008E1")]
	[Address(RVA = "0x11234EC", Offset = "0x11234EC", VA = "0x11234EC", Slot = "7")]
	public override void OnInit()
	{
	}

	[Token(Token = "0x60008E2")]
	[Address(RVA = "0x11235D8", Offset = "0x11235D8", VA = "0x11235D8", Slot = "20")]
	public override void OnUpdateCursors(ConstructionCost costReport)
	{
	}

	[Token(Token = "0x60008E3")]
	[Address(RVA = "0x11239EC", Offset = "0x11239EC", VA = "0x11239EC", Slot = "15")]
	public override void OnBeginInteraction(int gridX, int gridY)
	{
	}

	[Token(Token = "0x60008E4")]
	[Address(RVA = "0x1123A5C", Offset = "0x1123A5C", VA = "0x1123A5C")]
	public CitySelectTool()
	{
	}
}
[Token(Token = "0x20000D0")]
public class InspectTool : PlayerTool
{
	[Token(Token = "0x60008E5")]
	[Address(RVA = "0x108AF48", Offset = "0x108AF48", VA = "0x108AF48", Slot = "20")]
	public override void OnUpdateCursors(ConstructionCost costReport)
	{
	}

	[Token(Token = "0x60008E6")]
	[Address(RVA = "0x108B10C", Offset = "0x108B10C", VA = "0x108B10C")]
	public InspectTool()
	{
	}
}
[Token(Token = "0x20000D1")]
public class LineTool : PlayerTool
{
	[Token(Token = "0x200034E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6A8214", Offset = "0x6A8214")]
	private sealed class <>c__DisplayClass14_0
	{
		[Token(Token = "0x4001581")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public LineTool <>4__this;

		[Token(Token = "0x4001582")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int score;

		[Token(Token = "0x4001583")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int validEndX;

		[Token(Token = "0x4001584")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int validEndY;

		[Token(Token = "0x6001690")]
		[Address(RVA = "0x1091C28", Offset = "0x1091C28", VA = "0x1091C28")]
		public <>c__DisplayClass14_0()
		{
		}

		[Token(Token = "0x6001691")]
		[Address(RVA = "0x1092F1C", Offset = "0x1092F1C", VA = "0x1092F1C")]
		internal bool <EvaluatePath>b__0(int x, int y)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x4000606")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private GameObject primaryCursor;

	[Token(Token = "0x4000607")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private GameObject secondaryCursor;

	[Token(Token = "0x4000608")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Material primaryCursorMaterial;

	[Token(Token = "0x4000609")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Material secondaryCursorMaterial;

	[Token(Token = "0x400060A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	protected int endX;

	[Token(Token = "0x400060B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	protected int endY;

	[Token(Token = "0x400060C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	protected bool isHorizontalFirst;

	[Token(Token = "0x400060D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
	protected bool attemptingFailedRegionUnlock;

	[Token(Token = "0x400060E")]
	private const float cursorFloatHeight = 0.05f;

	[Token(Token = "0x400060F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x62")]
	private bool needToDetermineHorizontalFirst;

	[Token(Token = "0x170001D8")]
	public override bool supportsSecondaryCursor
	{
		[Token(Token = "0x60008E7")]
		[Address(RVA = "0x10919E4", Offset = "0x10919E4", VA = "0x10919E4", Slot = "4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x60008E8")]
	[Address(RVA = "0x10919EC", Offset = "0x10919EC", VA = "0x10919EC", Slot = "7")]
	public override void OnInit()
	{
	}

	[Token(Token = "0x60008E9")]
	[Address(RVA = "0x1091B10", Offset = "0x1091B10", VA = "0x1091B10", Slot = "13")]
	public override void SnapCursors(PlayerInterface.WorldCursor primaryCursor, PlayerInterface.WorldCursor secondaryCursor)
	{
	}

	[Token(Token = "0x60008EA")]
	[Address(RVA = "0x1091B14", Offset = "0x1091B14", VA = "0x1091B14", Slot = "22")]
	protected virtual void PreVisitSelectionExtents()
	{
	}

	[Token(Token = "0x60008EB")]
	[Address(RVA = "0x1091B18", Offset = "0x1091B18", VA = "0x1091B18")]
	private int EvaluatePath(bool horizontalFirst, int targetEndX, int targetEndY)
	{
		return default(int);
	}

	[Token(Token = "0x60008EC")]
	[Address(RVA = "0x1091C30", Offset = "0x1091C30", VA = "0x1091C30")]
	private void UpdateSelectionExtents()
	{
	}

	[Token(Token = "0x60008ED")]
	[Address(RVA = "0x1091F8C", Offset = "0x1091F8C", VA = "0x1091F8C", Slot = "20")]
	public override void OnUpdateCursors(ConstructionCost costReport)
	{
	}

	[Token(Token = "0x60008EE")]
	[Address(RVA = "0x1092708", Offset = "0x1092708", VA = "0x1092708")]
	protected void GetDirection(int x, int y, out int deltaX, out int deltaY)
	{
	}

	[Token(Token = "0x60008EF")]
	[Address(RVA = "0x109278C", Offset = "0x109278C", VA = "0x109278C", Slot = "9")]
	public override bool VisitSelection(VisitorFunction visit)
	{
		return default(bool);
	}

	[Token(Token = "0x60008F0")]
	[Address(RVA = "0x1092B9C", Offset = "0x1092B9C", VA = "0x1092B9C", Slot = "10")]
	public override bool IsCellInSelection(int x, int y)
	{
		return default(bool);
	}

	[Token(Token = "0x60008F1")]
	[Address(RVA = "0x1092D6C", Offset = "0x1092D6C", VA = "0x1092D6C", Slot = "11")]
	public override bool IsSelectionValid()
	{
		return default(bool);
	}

	[Token(Token = "0x60008F2")]
	[Address(RVA = "0x1092DEC", Offset = "0x1092DEC", VA = "0x1092DEC", Slot = "12")]
	protected override bool PlaceInSelection(ConstructionCost cost)
	{
		return default(bool);
	}

	[Token(Token = "0x60008F3")]
	[Address(RVA = "0x1092E8C", Offset = "0x1092E8C", VA = "0x1092E8C", Slot = "23")]
	protected virtual bool PlaceInCell(int x, int y)
	{
		return default(bool);
	}

	[Token(Token = "0x60008F4")]
	[Address(RVA = "0x1092E94", Offset = "0x1092E94", VA = "0x1092E94", Slot = "24")]
	protected virtual bool IsCellValid(int x, int y)
	{
		return default(bool);
	}

	[Token(Token = "0x60008F5")]
	[Address(RVA = "0x1092E9C", Offset = "0x1092E9C", VA = "0x1092E9C", Slot = "15")]
	public override void OnBeginInteraction(int gridX, int gridY)
	{
	}

	[Token(Token = "0x60008F6")]
	[Address(RVA = "0x1092EFC", Offset = "0x1092EFC", VA = "0x1092EFC")]
	public LineTool()
	{
	}

	[Token(Token = "0x60008F7")]
	[Address(RVA = "0x1092F0C", Offset = "0x1092F0C", VA = "0x1092F0C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6B015C", Offset = "0x6B015C")]
	private bool <PlaceInSelection>b__22_0(int x, int y)
	{
		return default(bool);
	}
}
[Token(Token = "0x20000D2")]
public class PlantBoxTool : LineTool
{
	[Token(Token = "0x200034F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6A8224", Offset = "0x6A8224")]
	private sealed class <>c__DisplayClass4_0
	{
		[Token(Token = "0x4001585")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public PropCollection propCollection;

		[Token(Token = "0x6001692")]
		[Address(RVA = "0xFD46B4", Offset = "0xFD46B4", VA = "0xFD46B4")]
		public <>c__DisplayClass4_0()
		{
		}

		[Token(Token = "0x6001693")]
		[Address(RVA = "0xFD5D44", Offset = "0xFD5D44", VA = "0xFD5D44")]
		internal bool <.ctor>b__0(PropCollection x)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x2000350")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6A8234", Offset = "0x6A8234")]
	private sealed class <>c__DisplayClass13_0
	{
		[Token(Token = "0x4001586")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public PlantBoxTool <>4__this;

		[Token(Token = "0x4001587")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ConstructionCost costReport;

		[Token(Token = "0x6001694")]
		[Address(RVA = "0xFD59F0", Offset = "0xFD59F0", VA = "0xFD59F0")]
		public <>c__DisplayClass13_0()
		{
		}

		[Token(Token = "0x6001695")]
		[Address(RVA = "0xFD5B7C", Offset = "0xFD5B7C", VA = "0xFD5B7C")]
		internal bool <CalculateCost>b__0(int x, int y)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x4000610")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private int propCollectionIndex;

	[Token(Token = "0x4000611")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private bool previewNeedRefresh;

	[Token(Token = "0x170001D9")]
	public override bool toolUnlocksRegions
	{
		[Token(Token = "0x60008F8")]
		[Address(RVA = "0xFD4578", Offset = "0xFD4578", VA = "0xFD4578", Slot = "5")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x60008F9")]
	[Address(RVA = "0xFD4580", Offset = "0xFD4580", VA = "0xFD4580")]
	public PlantBoxTool(PropCollection propCollection)
	{
	}

	[Token(Token = "0x60008FA")]
	[Address(RVA = "0xFD46BC", Offset = "0xFD46BC", VA = "0xFD46BC", Slot = "24")]
	protected override bool IsCellValid(int x, int y)
	{
		return default(bool);
	}

	[Token(Token = "0x60008FB")]
	[Address(RVA = "0xFD49F8", Offset = "0xFD49F8", VA = "0xFD49F8", Slot = "23")]
	protected override bool PlaceInCell(int x, int y)
	{
		return default(bool);
	}

	[Token(Token = "0x60008FC")]
	[Address(RVA = "0xFD4C10", Offset = "0xFD4C10", VA = "0xFD4C10", Slot = "15")]
	public override void OnBeginInteraction(int gridX, int gridY)
	{
	}

	[Token(Token = "0x60008FD")]
	[Address(RVA = "0xFD4DE8", Offset = "0xFD4DE8", VA = "0xFD4DE8", Slot = "17")]
	public override void OnEndInteraction(ConstructionCost cost)
	{
	}

	[Token(Token = "0x60008FE")]
	[Address(RVA = "0xFD505C", Offset = "0xFD505C", VA = "0xFD505C", Slot = "8")]
	public override void Destroy()
	{
	}

	[Token(Token = "0x60008FF")]
	[Address(RVA = "0xFD52B0", Offset = "0xFD52B0", VA = "0xFD52B0", Slot = "20")]
	public override void OnUpdateCursors(ConstructionCost costReport)
	{
	}

	[Token(Token = "0x6000900")]
	[Address(RVA = "0xFD56F8", Offset = "0xFD56F8", VA = "0xFD56F8", Slot = "12")]
	protected override bool PlaceInSelection(ConstructionCost cost)
	{
		return default(bool);
	}

	[Token(Token = "0x6000901")]
	[Address(RVA = "0xFD5794", Offset = "0xFD5794", VA = "0xFD5794", Slot = "16")]
	public override void OnHover(int gridX, int gridY)
	{
	}

	[Token(Token = "0x6000902")]
	[Address(RVA = "0xFD5874", Offset = "0xFD5874", VA = "0xFD5874", Slot = "21")]
	public override void CalculateCost(ConstructionCost costReport)
	{
	}

	[Token(Token = "0x6000903")]
	[Address(RVA = "0xFD59F8", Offset = "0xFD59F8", VA = "0xFD59F8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6B016C", Offset = "0x6B016C")]
	private bool <OnUpdateCursors>b__10_0(int x, int y)
	{
		return default(bool);
	}
}
[Token(Token = "0x20000D3")]
public abstract class PlayerTool
{
	[Token(Token = "0x2000351")]
	public delegate bool VisitorFunction(int x, int y);

	[Token(Token = "0x2000352")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6A8244", Offset = "0x6A8244")]
	private sealed class <>c__DisplayClass42_0
	{
		[Token(Token = "0x4001588")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public PlayerTool <>4__this;

		[Token(Token = "0x4001589")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ConstructionCost costReport;

		[Token(Token = "0x600169A")]
		[Address(RVA = "0x10FD2F8", Offset = "0x10FD2F8", VA = "0x10FD2F8")]
		public <>c__DisplayClass42_0()
		{
		}

		[Token(Token = "0x600169B")]
		[Address(RVA = "0x10FD75C", Offset = "0x10FD75C", VA = "0x10FD75C")]
		internal bool <CalculateCost>b__0(int x, int y)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x4000612")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6A909C", Offset = "0x6A909C")]
	private Player <player>k__BackingField;

	[Token(Token = "0x4000613")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6A90AC", Offset = "0x6A90AC")]
	private bool <active>k__BackingField;

	[Token(Token = "0x4000614")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	protected int startX;

	[Token(Token = "0x4000615")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	protected int startY;

	[Token(Token = "0x4000616")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	protected int hoverX;

	[Token(Token = "0x4000617")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	protected int hoverY;

	[Token(Token = "0x4000618")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6A90BC", Offset = "0x6A90BC")]
	private bool <overMap>k__BackingField;

	[Token(Token = "0x4000619")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private List<GameObject> demolishIndicators;

	[Token(Token = "0x170001DA")]
	public City city
	{
		[Token(Token = "0x6000904")]
		[Address(RVA = "0x10FCB10", Offset = "0x10FCB10", VA = "0x10FCB10")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170001DB")]
	public Player player
	{
		[Token(Token = "0x6000905")]
		[Address(RVA = "0x10FCB78", Offset = "0x10FCB78", VA = "0x10FCB78")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6B017C", Offset = "0x6B017C")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000906")]
		[Address(RVA = "0x10FCB80", Offset = "0x10FCB80", VA = "0x10FCB80")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6B018C", Offset = "0x6B018C")]
		private set
		{
		}
	}

	[Token(Token = "0x170001DC")]
	protected BuildingEffectCalculator buildingEffectCalculator
	{
		[Token(Token = "0x6000907")]
		[Address(RVA = "0x10FCB88", Offset = "0x10FCB88", VA = "0x10FCB88")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170001DD")]
	public bool active
	{
		[Token(Token = "0x6000908")]
		[Address(RVA = "0x10FCBB0", Offset = "0x10FCBB0", VA = "0x10FCBB0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6B019C", Offset = "0x6B019C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000909")]
		[Address(RVA = "0x10FCBB8", Offset = "0x10FCBB8", VA = "0x10FCBB8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6B01AC", Offset = "0x6B01AC")]
		protected set
		{
		}
	}

	[Token(Token = "0x170001DE")]
	public virtual bool supportsSecondaryCursor
	{
		[Token(Token = "0x600090A")]
		[Address(RVA = "0x10FCBC4", Offset = "0x10FCBC4", VA = "0x10FCBC4", Slot = "4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170001DF")]
	public virtual bool toolUnlocksRegions
	{
		[Token(Token = "0x600090B")]
		[Address(RVA = "0x10FCBCC", Offset = "0x10FCBCC", VA = "0x10FCBCC", Slot = "5")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170001E0")]
	public virtual bool toolShouldPlaceImmediately
	{
		[Token(Token = "0x600090C")]
		[Address(RVA = "0x10FCBD4", Offset = "0x10FCBD4", VA = "0x10FCBD4", Slot = "6")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170001E1")]
	public bool overMap
	{
		[Token(Token = "0x600090D")]
		[Address(RVA = "0x10FCBDC", Offset = "0x10FCBDC", VA = "0x10FCBDC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6B01BC", Offset = "0x6B01BC")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600090E")]
		[Address(RVA = "0x10FCBE4", Offset = "0x10FCBE4", VA = "0x10FCBE4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6B01CC", Offset = "0x6B01CC")]
		protected set
		{
		}
	}

	[Token(Token = "0x600090F")]
	[Address(RVA = "0x10FCBF0", Offset = "0x10FCBF0", VA = "0x10FCBF0")]
	public void Init(Player inPlayer)
	{
	}

	[Token(Token = "0x6000910")]
	[Address(RVA = "0x10FCC00", Offset = "0x10FCC00", VA = "0x10FCC00", Slot = "7")]
	public virtual void OnInit()
	{
	}

	[Token(Token = "0x6000911")]
	[Address(RVA = "0x10FCC04", Offset = "0x10FCC04", VA = "0x10FCC04", Slot = "8")]
	public virtual void Destroy()
	{
	}

	[Token(Token = "0x6000912")]
	[Address(RVA = "0x10FCC08", Offset = "0x10FCC08", VA = "0x10FCC08", Slot = "9")]
	public virtual bool VisitSelection(VisitorFunction visit)
	{
		return default(bool);
	}

	[Token(Token = "0x6000913")]
	[Address(RVA = "0x10FCC10", Offset = "0x10FCC10", VA = "0x10FCC10", Slot = "10")]
	public virtual bool IsCellInSelection(int x, int y)
	{
		return default(bool);
	}

	[Token(Token = "0x6000914")]
	[Address(RVA = "0x10FCC18", Offset = "0x10FCC18", VA = "0x10FCC18", Slot = "11")]
	public virtual bool IsSelectionValid()
	{
		return default(bool);
	}

	[Token(Token = "0x6000915")]
	[Address(RVA = "0x10FCC20", Offset = "0x10FCC20", VA = "0x10FCC20", Slot = "12")]
	protected virtual bool PlaceInSelection(ConstructionCost cost)
	{
		return default(bool);
	}

	[Token(Token = "0x6000916")]
	[Address(RVA = "0x10FCC28", Offset = "0x10FCC28", VA = "0x10FCC28", Slot = "13")]
	public virtual void SnapCursors(PlayerInterface.WorldCursor primaryCursor, PlayerInterface.WorldCursor secondaryCursor)
	{
	}

	[Token(Token = "0x6000917")]
	[Address(RVA = "0x10FCC2C", Offset = "0x10FCC2C", VA = "0x10FCC2C", Slot = "14")]
	public virtual void OnModifyStart(int gridX, int gridY)
	{
	}

	[Token(Token = "0x6000918")]
	[Address(RVA = "0x10FCC34", Offset = "0x10FCC34", VA = "0x10FCC34", Slot = "15")]
	public virtual void OnBeginInteraction(int gridX, int gridY)
	{
	}

	[Token(Token = "0x6000919")]
	[Address(RVA = "0x10FCC4C", Offset = "0x10FCC4C", VA = "0x10FCC4C", Slot = "16")]
	public virtual void OnHover(int gridX, int gridY)
	{
	}

	[Token(Token = "0x600091A")]
	[Address(RVA = "0x10FCC5C", Offset = "0x10FCC5C", VA = "0x10FCC5C", Slot = "17")]
	public virtual void OnEndInteraction(ConstructionCost cost)
	{
	}

	[Token(Token = "0x600091B")]
	[Address(RVA = "0x10FD1CC", Offset = "0x10FD1CC", VA = "0x10FD1CC", Slot = "18")]
	public virtual void Cancel(ConstructionCost cost)
	{
	}

	[Token(Token = "0x600091C")]
	[Address(RVA = "0x10FD1E0", Offset = "0x10FD1E0", VA = "0x10FD1E0", Slot = "19")]
	public virtual void OnHoverOffMap()
	{
	}

	[Token(Token = "0x600091D")]
	[Address(RVA = "0x10FD1E8", Offset = "0x10FD1E8", VA = "0x10FD1E8", Slot = "20")]
	public virtual void OnUpdateCursors(ConstructionCost costReport)
	{
	}

	[Token(Token = "0x600091E")]
	[Address(RVA = "0x10FD1EC", Offset = "0x10FD1EC", VA = "0x10FD1EC", Slot = "21")]
	public virtual void CalculateCost(ConstructionCost costReport)
	{
	}

	[Token(Token = "0x600091F")]
	[Address(RVA = "0x10FD310", Offset = "0x10FD310", VA = "0x10FD310")]
	public void ShowDemolishIndicators(ConstructionCost costReport)
	{
	}

	[Token(Token = "0x6000920")]
	[Address(RVA = "0x10FD6EC", Offset = "0x10FD6EC", VA = "0x10FD6EC")]
	protected PlayerTool()
	{
	}
}
[Token(Token = "0x20000D4")]
public class PropPlacementTool : PlayerTool
{
	[Token(Token = "0x400061A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private PropCollection propCollection;

	[Token(Token = "0x400061B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private PropInfo propInfo;

	[Token(Token = "0x400061C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private GameObject cursor;

	[Token(Token = "0x400061D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private GameObject previewMesh;

	[Token(Token = "0x400061E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private GameObject circleMesh;

	[Token(Token = "0x400061F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private int previewX;

	[Token(Token = "0x4000620")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private int previewY;

	[Token(Token = "0x4000621")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private float previewMeshHeight;

	[Token(Token = "0x4000622")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private bool hasValidPreviewLocation;

	[Token(Token = "0x4000623")]
	private const float placementWiggle = 0.4f;

	[Token(Token = "0x4000624")]
	private const float scaleWiggle = 0.2f;

	[Token(Token = "0x6000921")]
	[Address(RVA = "0x1102640", Offset = "0x1102640", VA = "0x1102640")]
	public PropPlacementTool(PropCollection propCollection)
	{
	}

	[Token(Token = "0x6000922")]
	[Address(RVA = "0x1102670", Offset = "0x1102670", VA = "0x1102670", Slot = "7")]
	public override void OnInit()
	{
	}

	[Token(Token = "0x6000923")]
	[Address(RVA = "0x1102950", Offset = "0x1102950", VA = "0x1102950", Slot = "8")]
	public override void Destroy()
	{
	}

	[Token(Token = "0x6000924")]
	[Address(RVA = "0x11029BC", Offset = "0x11029BC", VA = "0x11029BC", Slot = "13")]
	public override void SnapCursors(PlayerInterface.WorldCursor primaryCursor, PlayerInterface.WorldCursor secondaryCursor)
	{
	}

	[Token(Token = "0x6000925")]
	[Address(RVA = "0x1102B38", Offset = "0x1102B38", VA = "0x1102B38")]
	private void GetPlantingTransform(int x, int y, out Vector3 position, out Quaternion rotation, out Vector3 scale)
	{
	}

	[Token(Token = "0x6000926")]
	[Address(RVA = "0x1102E48", Offset = "0x1102E48", VA = "0x1102E48")]
	private bool IsValidToPlant(int x, int y)
	{
		return default(bool);
	}

	[Token(Token = "0x6000927")]
	[Address(RVA = "0x11030AC", Offset = "0x11030AC", VA = "0x11030AC", Slot = "11")]
	public override bool IsSelectionValid()
	{
		return default(bool);
	}

	[Token(Token = "0x6000928")]
	[Address(RVA = "0x11030C4", Offset = "0x11030C4", VA = "0x11030C4", Slot = "20")]
	public override void OnUpdateCursors(ConstructionCost costReport)
	{
	}

	[Token(Token = "0x6000929")]
	[Address(RVA = "0x1103964", Offset = "0x1103964", VA = "0x1103964", Slot = "12")]
	protected override bool PlaceInSelection(ConstructionCost costReport)
	{
		return default(bool);
	}

	[Token(Token = "0x600092A")]
	[Address(RVA = "0x1103F44", Offset = "0x1103F44", VA = "0x1103F44", Slot = "15")]
	public override void OnBeginInteraction(int gridX, int gridY)
	{
	}

	[Token(Token = "0x600092B")]
	[Address(RVA = "0x1103F68", Offset = "0x1103F68", VA = "0x1103F68", Slot = "16")]
	public override void OnHover(int gridX, int gridY)
	{
	}

	[Token(Token = "0x600092C")]
	[Address(RVA = "0x1103F90", Offset = "0x1103F90", VA = "0x1103F90", Slot = "17")]
	public override void OnEndInteraction(ConstructionCost cost)
	{
	}

	[Token(Token = "0x600092D")]
	[Address(RVA = "0x1103FCC", Offset = "0x1103FCC", VA = "0x1103FCC", Slot = "21")]
	public override void CalculateCost(ConstructionCost costReport)
	{
	}
}
[Token(Token = "0x20000D5")]
public class RegionTool : PlayerTool
{
	[Token(Token = "0x4000625")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private GameObject primaryCursor;

	[Token(Token = "0x4000626")]
	private const float cursorFloatHeight = 0.05f;

	[Token(Token = "0x170001E2")]
	public override bool supportsSecondaryCursor
	{
		[Token(Token = "0x600092E")]
		[Address(RVA = "0x110614C", Offset = "0x110614C", VA = "0x110614C", Slot = "4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x600092F")]
	[Address(RVA = "0x1106154", Offset = "0x1106154", VA = "0x1106154", Slot = "7")]
	public override void OnInit()
	{
	}

	[Token(Token = "0x6000930")]
	[Address(RVA = "0x1106240", Offset = "0x1106240", VA = "0x1106240", Slot = "13")]
	public override void SnapCursors(PlayerInterface.WorldCursor primaryCursor, PlayerInterface.WorldCursor secondaryCursor)
	{
	}

	[Token(Token = "0x6000931")]
	[Address(RVA = "0x110664C", Offset = "0x110664C", VA = "0x110664C", Slot = "20")]
	public override void OnUpdateCursors(ConstructionCost costReport)
	{
	}

	[Token(Token = "0x6000932")]
	[Address(RVA = "0x1106954", Offset = "0x1106954", VA = "0x1106954", Slot = "9")]
	public override bool VisitSelection(VisitorFunction visit)
	{
		return default(bool);
	}

	[Token(Token = "0x6000933")]
	[Address(RVA = "0x1106A44", Offset = "0x1106A44", VA = "0x1106A44")]
	public RegionTool()
	{
	}
}
[Token(Token = "0x20000D6")]
public class RoadTool : LineTool
{
	[Token(Token = "0x2000353")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6A8254", Offset = "0x6A8254")]
	private sealed class <>c__DisplayClass13_0
	{
		[Token(Token = "0x400158A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public RoadTool <>4__this;

		[Token(Token = "0x400158B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ConstructionCost costReport;

		[Token(Token = "0x600169C")]
		[Address(RVA = "0x1110D40", Offset = "0x1110D40", VA = "0x1110D40")]
		public <>c__DisplayClass13_0()
		{
		}

		[Token(Token = "0x600169D")]
		[Address(RVA = "0x1111968", Offset = "0x1111968", VA = "0x1111968")]
		internal bool <CalculateCost>b__0(int x, int y)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x4000627")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x63")]
	private bool previewNeedRefresh;

	[Token(Token = "0x4000628")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private HashSet<int> regionsToUnlock;

	[Token(Token = "0x4000629")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private List<BridgeManager.Bridge> bridges;

	[Token(Token = "0x400062A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private int numActiveBridges;

	[Token(Token = "0x170001E3")]
	public override bool toolUnlocksRegions
	{
		[Token(Token = "0x6000934")]
		[Address(RVA = "0x110E8A4", Offset = "0x110E8A4", VA = "0x110E8A4", Slot = "5")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000935")]
	[Address(RVA = "0x110E8AC", Offset = "0x110E8AC", VA = "0x110E8AC", Slot = "24")]
	protected override bool IsCellValid(int x, int y)
	{
		return default(bool);
	}

	[Token(Token = "0x6000936")]
	[Address(RVA = "0x110FA38", Offset = "0x110FA38", VA = "0x110FA38")]
	private bool IsRoadOrInSelection(int x, int y)
	{
		return default(bool);
	}

	[Token(Token = "0x6000937")]
	[Address(RVA = "0x110FAEC", Offset = "0x110FAEC", VA = "0x110FAEC", Slot = "23")]
	protected override bool PlaceInCell(int x, int y)
	{
		return default(bool);
	}

	[Token(Token = "0x6000938")]
	[Address(RVA = "0x110FE94", Offset = "0x110FE94", VA = "0x110FE94", Slot = "12")]
	protected override bool PlaceInSelection(ConstructionCost costReport)
	{
		return default(bool);
	}

	[Token(Token = "0x6000939")]
	[Address(RVA = "0x110F22C", Offset = "0x110F22C", VA = "0x110F22C")]
	private bool AttemptBridgeConstruction(int bridgeStartX, int bridgeStartY, int deltaX, int deltaY, bool checkAdjacentTile)
	{
		return default(bool);
	}

	[Token(Token = "0x600093A")]
	[Address(RVA = "0x11100C4", Offset = "0x11100C4", VA = "0x11100C4", Slot = "22")]
	protected override void PreVisitSelectionExtents()
	{
	}

	[Token(Token = "0x600093B")]
	[Address(RVA = "0x1110120", Offset = "0x1110120", VA = "0x1110120", Slot = "20")]
	public override void OnUpdateCursors(ConstructionCost costReport)
	{
	}

	[Token(Token = "0x600093C")]
	[Address(RVA = "0x11108A0", Offset = "0x11108A0", VA = "0x11108A0", Slot = "21")]
	public override void CalculateCost(ConstructionCost costReport)
	{
	}

	[Token(Token = "0x600093D")]
	[Address(RVA = "0x1110D48", Offset = "0x1110D48", VA = "0x1110D48", Slot = "13")]
	public override void SnapCursors(PlayerInterface.WorldCursor primaryCursor, PlayerInterface.WorldCursor secondaryCursor)
	{
	}

	[Token(Token = "0x600093E")]
	[Address(RVA = "0x1110D50", Offset = "0x1110D50", VA = "0x1110D50", Slot = "15")]
	public override void OnBeginInteraction(int gridX, int gridY)
	{
	}

	[Token(Token = "0x600093F")]
	[Address(RVA = "0x1110F08", Offset = "0x1110F08", VA = "0x1110F08", Slot = "17")]
	public override void OnEndInteraction(ConstructionCost cost)
	{
	}

	[Token(Token = "0x6000940")]
	[Address(RVA = "0x11111D0", Offset = "0x11111D0", VA = "0x11111D0", Slot = "8")]
	public override void Destroy()
	{
	}

	[Token(Token = "0x6000941")]
	[Address(RVA = "0x11114CC", Offset = "0x11114CC", VA = "0x11114CC", Slot = "16")]
	public override void OnHover(int gridX, int gridY)
	{
	}

	[Token(Token = "0x6000942")]
	[Address(RVA = "0x11115A8", Offset = "0x11115A8", VA = "0x11115A8")]
	public RoadTool()
	{
	}

	[Token(Token = "0x6000943")]
	[Address(RVA = "0x1111640", Offset = "0x1111640", VA = "0x1111640")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6B01DC", Offset = "0x6B01DC")]
	private bool <OnUpdateCursors>b__12_0(int x, int y)
	{
		return default(bool);
	}

	[Token(Token = "0x6000944")]
	[Address(RVA = "0x11118D0", Offset = "0x11118D0", VA = "0x11118D0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6B01EC", Offset = "0x6B01EC")]
	private void <OnUpdateCursors>b__12_1(int x, int y)
	{
	}
}
[Token(Token = "0x20000D7")]
public class StreetViewTool : PlayerTool
{
	[Token(Token = "0x400062B")]
	private const float cursorScale = 0.2f;

	[Token(Token = "0x400062C")]
	private const float pavementSpacing = 0.1f;

	[Token(Token = "0x400062D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private GameObject cursor;

	[Token(Token = "0x400062E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Material cursorMaterial;

	[Token(Token = "0x400062F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Vector3 targetLocation;

	[Token(Token = "0x4000630")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private bool hasValidLocation;

	[Token(Token = "0x170001E4")]
	public override bool toolShouldPlaceImmediately
	{
		[Token(Token = "0x6000945")]
		[Address(RVA = "0xFF2718", Offset = "0xFF2718", VA = "0xFF2718", Slot = "6")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000946")]
	[Address(RVA = "0xFF2720", Offset = "0xFF2720", VA = "0xFF2720", Slot = "7")]
	public override void OnInit()
	{
	}

	[Token(Token = "0x6000947")]
	[Address(RVA = "0xFF288C", Offset = "0xFF288C", VA = "0xFF288C", Slot = "13")]
	public override void SnapCursors(PlayerInterface.WorldCursor primaryCursor, PlayerInterface.WorldCursor secondaryCursor)
	{
	}

	[Token(Token = "0x6000948")]
	[Address(RVA = "0xFF2948", Offset = "0xFF2948", VA = "0xFF2948", Slot = "20")]
	public override void OnUpdateCursors(ConstructionCost costReport)
	{
	}

	[Token(Token = "0x6000949")]
	[Address(RVA = "0xFF3164", Offset = "0xFF3164", VA = "0xFF3164", Slot = "15")]
	public override void OnBeginInteraction(int gridX, int gridY)
	{
	}

	[Token(Token = "0x600094A")]
	[Address(RVA = "0xFF32C0", Offset = "0xFF32C0", VA = "0xFF32C0")]
	public StreetViewTool()
	{
	}
}
[Token(Token = "0x20000D8")]
public class ZoneRegionTool : RegionTool
{
	[Token(Token = "0x2000354")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6A8264", Offset = "0x6A8264")]
	private sealed class <>c__DisplayClass9_0
	{
		[Token(Token = "0x400158C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public ZoneRegionTool <>4__this;

		[Token(Token = "0x400158D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ConstructionCost costReport;

		[Token(Token = "0x400158E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool zonedAnything;

		[Token(Token = "0x600169E")]
		[Address(RVA = "0x117C2F4", Offset = "0x117C2F4", VA = "0x117C2F4")]
		public <>c__DisplayClass9_0()
		{
		}

		[Token(Token = "0x600169F")]
		[Address(RVA = "0x117D258", Offset = "0x117D258", VA = "0x117D258")]
		internal bool <PlaceInSelection>b__0(int x, int y)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x2000355")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6A8274", Offset = "0x6A8274")]
	private sealed class <>c__DisplayClass11_0
	{
		[Token(Token = "0x400158F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public ZoneRegionTool <>4__this;

		[Token(Token = "0x4001590")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ConstructionCost costReport;

		[Token(Token = "0x60016A0")]
		[Address(RVA = "0x117C96C", Offset = "0x117C96C", VA = "0x117C96C")]
		public <>c__DisplayClass11_0()
		{
		}
	}

	[Token(Token = "0x2000356")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6A8284", Offset = "0x6A8284")]
	private sealed class <>c__DisplayClass11_1
	{
		[Token(Token = "0x4001591")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool isZoningAnything;

		[Token(Token = "0x4001592")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public <>c__DisplayClass11_0 CS$<>8__locals1;

		[Token(Token = "0x60016A1")]
		[Address(RVA = "0x117C974", Offset = "0x117C974", VA = "0x117C974")]
		public <>c__DisplayClass11_1()
		{
		}

		[Token(Token = "0x60016A2")]
		[Address(RVA = "0x117CFF4", Offset = "0x117CFF4", VA = "0x117CFF4")]
		internal bool <OnUpdateCursors>b__0(int x, int y)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x2000357")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6A8294", Offset = "0x6A8294")]
	private sealed class <>c__DisplayClass16_0
	{
		[Token(Token = "0x4001593")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public ZoneRegionTool <>4__this;

		[Token(Token = "0x4001594")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ConstructionCost costReport;

		[Token(Token = "0x60016A3")]
		[Address(RVA = "0x117CFEC", Offset = "0x117CFEC", VA = "0x117CFEC")]
		public <>c__DisplayClass16_0()
		{
		}

		[Token(Token = "0x60016A4")]
		[Address(RVA = "0x117D1A4", Offset = "0x117D1A4", VA = "0x117D1A4")]
		internal bool <CalculateCost>b__0(int x, int y)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x4000631")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool previewNeedRefresh;

	[Token(Token = "0x4000632")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6A90CC", Offset = "0x6A90CC")]
	private ZoneManager.ZoneType <zoneType>k__BackingField;

	[Token(Token = "0x4000633")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private int tilesZonedByCursor;

	[Token(Token = "0x170001E5")]
	public override bool toolUnlocksRegions
	{
		[Token(Token = "0x600094B")]
		[Address(RVA = "0x117C08C", Offset = "0x117C08C", VA = "0x117C08C", Slot = "5")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170001E6")]
	public ZoneManager.ZoneType zoneType
	{
		[Token(Token = "0x600094C")]
		[Address(RVA = "0x117C094", Offset = "0x117C094", VA = "0x117C094")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6B01FC", Offset = "0x6B01FC")]
		get
		{
			return default(ZoneManager.ZoneType);
		}
		[Token(Token = "0x600094D")]
		[Address(RVA = "0x117C09C", Offset = "0x117C09C", VA = "0x117C09C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6B020C", Offset = "0x6B020C")]
		private set
		{
		}
	}

	[Token(Token = "0x600094E")]
	[Address(RVA = "0x117C0A4", Offset = "0x117C0A4", VA = "0x117C0A4")]
	public ZoneRegionTool(ZoneManager.ZoneType zoneType)
	{
	}

	[Token(Token = "0x600094F")]
	[Address(RVA = "0x117C0D0", Offset = "0x117C0D0", VA = "0x117C0D0", Slot = "11")]
	public override bool IsSelectionValid()
	{
		return default(bool);
	}

	[Token(Token = "0x6000950")]
	[Address(RVA = "0x117C0D8", Offset = "0x117C0D8", VA = "0x117C0D8", Slot = "12")]
	protected override bool PlaceInSelection(ConstructionCost costReport)
	{
		return default(bool);
	}

	[Token(Token = "0x6000951")]
	[Address(RVA = "0x117C2FC", Offset = "0x117C2FC", VA = "0x117C2FC", Slot = "20")]
	public override void OnUpdateCursors(ConstructionCost costReport)
	{
	}

	[Token(Token = "0x6000952")]
	[Address(RVA = "0x117C97C", Offset = "0x117C97C", VA = "0x117C97C", Slot = "15")]
	public override void OnBeginInteraction(int gridX, int gridY)
	{
	}

	[Token(Token = "0x6000953")]
	[Address(RVA = "0x117CAAC", Offset = "0x117CAAC", VA = "0x117CAAC", Slot = "17")]
	public override void OnEndInteraction(ConstructionCost cost)
	{
	}

	[Token(Token = "0x6000954")]
	[Address(RVA = "0x117CC1C", Offset = "0x117CC1C", VA = "0x117CC1C", Slot = "8")]
	public override void Destroy()
	{
	}

	[Token(Token = "0x6000955")]
	[Address(RVA = "0x117CD70", Offset = "0x117CD70", VA = "0x117CD70", Slot = "16")]
	public override void OnHover(int gridX, int gridY)
	{
	}

	[Token(Token = "0x6000956")]
	[Address(RVA = "0x117CE20", Offset = "0x117CE20", VA = "0x117CE20", Slot = "21")]
	public override void CalculateCost(ConstructionCost costReport)
	{
	}
}
[Token(Token = "0x20000D9")]
public class VRHand : MonoBehaviour
{
	[Token(Token = "0x2000358")]
	public enum Pose
	{
		[Token(Token = "0x4001596")]
		Default,
		[Token(Token = "0x4001597")]
		HoldController,
		[Token(Token = "0x4001598")]
		HoverTableHandle,
		[Token(Token = "0x4001599")]
		GrabTableHandle
	}

	[Token(Token = "0x4000634")]
	public const string ANIM_LAYER_NAME_POINT = "Point Layer";

	[Token(Token = "0x4000635")]
	public const string ANIM_LAYER_NAME_THUMB = "Thumb Layer";

	[Token(Token = "0x4000636")]
	public const string ANIM_PARAM_NAME_FLEX = "Flex";

	[Token(Token = "0x4000637")]
	public const string ANIM_PARAM_NAME_POSE = "Pose";

	[Token(Token = "0x4000638")]
	public const float THRESH_COLLISION_FLEX = 0.9f;

	[Token(Token = "0x4000639")]
	public const float INPUT_RATE_CHANGE = 20f;

	[Token(Token = "0x400063A")]
	public const float COLLIDER_SCALE_MIN = 0.01f;

	[Token(Token = "0x400063B")]
	public const float COLLIDER_SCALE_MAX = 1f;

	[Token(Token = "0x400063C")]
	public const float COLLIDER_SCALE_PER_SECOND = 1f;

	[Token(Token = "0x400063D")]
	public const float TRIGGER_DEBOUNCE_TIME = 0.05f;

	[Token(Token = "0x400063E")]
	public const float THUMB_DEBOUNCE_TIME = 0.15f;

	[Token(Token = "0x400063F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Animator m_animator;

	[Token(Token = "0x4000640")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public OVRInput.Controller m_controller;

	[Token(Token = "0x4000641")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public bool shouldAllowPointFlex;

	[Token(Token = "0x4000642")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float forcePointAmount;

	[Token(Token = "0x4000643")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform guideRoot;

	[Token(Token = "0x4000644")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform menuHoverRoot;

	[Token(Token = "0x4000645")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Pose targetPose;

	[Token(Token = "0x4000646")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private int m_animLayerIndexThumb;

	[Token(Token = "0x4000647")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private int m_animLayerIndexPoint;

	[Token(Token = "0x4000648")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private int m_animParamIndexFlex;

	[Token(Token = "0x4000649")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private int m_animParamIndexPose;

	[Token(Token = "0x400064A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private bool m_isPointing;

	[Token(Token = "0x400064B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x55")]
	private bool m_isGivingThumbsUp;

	[Token(Token = "0x400064C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float m_pointBlend;

	[Token(Token = "0x400064D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private float m_thumbsUpBlend;

	[Token(Token = "0x400064E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private float tableGrabBlend;

	[Token(Token = "0x400064F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public SphereCollider grabVolume;

	[Token(Token = "0x4000650")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private bool hasOverridePosition;

	[Token(Token = "0x4000651")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private Vector3 overridePosition;

	[Token(Token = "0x4000652")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Quaternion overrideRotation;

	[Token(Token = "0x4000653")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6A90DC", Offset = "0x6A90DC")]
	private float <overridePositionBlend>k__BackingField;

	[Token(Token = "0x4000654")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private Vector3 startingLocalPosition;

	[Token(Token = "0x4000655")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private Quaternion startingLocalRotation;

	[Token(Token = "0x4000656")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private Transform startingParent;

	[Token(Token = "0x170001E7")]
	private bool shouldPoseToHoldController
	{
		[Token(Token = "0x6000957")]
		[Address(RVA = "0x11555F0", Offset = "0x11555F0", VA = "0x11555F0")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170001E8")]
	private int handPoseId
	{
		[Token(Token = "0x6000958")]
		[Address(RVA = "0x1155600", Offset = "0x1155600", VA = "0x1155600")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x170001E9")]
	public float overridePositionBlend
	{
		[Token(Token = "0x6000959")]
		[Address(RVA = "0x1155628", Offset = "0x1155628", VA = "0x1155628")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6B021C", Offset = "0x6B021C")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x600095A")]
		[Address(RVA = "0x1155630", Offset = "0x1155630", VA = "0x1155630")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6B022C", Offset = "0x6B022C")]
		private set
		{
		}
	}

	[Token(Token = "0x600095B")]
	[Address(RVA = "0x1155638", Offset = "0x1155638", VA = "0x1155638")]
	public void SetOverridePosition(Vector3 position, Quaternion rotation)
	{
	}

	[Token(Token = "0x600095C")]
	[Address(RVA = "0x1155678", Offset = "0x1155678", VA = "0x1155678")]
	public void ClearOverridePosition()
	{
	}

	[Token(Token = "0x600095D")]
	[Address(RVA = "0x11556B0", Offset = "0x11556B0", VA = "0x11556B0")]
	private void UpdateOverridePosition()
	{
	}

	[Token(Token = "0x600095E")]
	[Address(RVA = "0x11558E0", Offset = "0x11558E0", VA = "0x11558E0")]
	private void Start()
	{
	}

	[Token(Token = "0x600095F")]
	[Address(RVA = "0x11559F4", Offset = "0x11559F4", VA = "0x11559F4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000960")]
	[Address(RVA = "0x115603C", Offset = "0x115603C", VA = "0x115603C")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000961")]
	[Address(RVA = "0x1155BD4", Offset = "0x1155BD4", VA = "0x1155BD4")]
	private void UpdateAnimStates()
	{
	}

	[Token(Token = "0x6000962")]
	[Address(RVA = "0x1155B34", Offset = "0x1155B34", VA = "0x1155B34")]
	private float InputValueRateChange(bool isDown, float value)
	{
		return default(float);
	}

	[Token(Token = "0x6000963")]
	[Address(RVA = "0x1155A98", Offset = "0x1155A98", VA = "0x1155A98")]
	private void UpdateCapTouchStates()
	{
	}

	[Token(Token = "0x6000964")]
	[Address(RVA = "0x1156040", Offset = "0x1156040", VA = "0x1156040")]
	public GameObject GrabVolumeCheck()
	{
		return null;
	}

	[Token(Token = "0x6000965")]
	[Address(RVA = "0x11561B8", Offset = "0x11561B8", VA = "0x11561B8")]
	public VRHand()
	{
	}
}
[Token(Token = "0x20000DA")]
public class CaptureCarousel : MonoBehaviour
{
	[Token(Token = "0x2000359")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6A82A4", Offset = "0x6A82A4")]
	private sealed class <Start>d__7 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400159A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400159B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400159C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CaptureCarousel <>4__this;

		[Token(Token = "0x400159D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private RenderTexture <rt>5__2;

		[Token(Token = "0x400159E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int <n>5__3;

		[Token(Token = "0x170003CA")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60016A8")]
			[Address(RVA = "0x10DB7D0", Offset = "0x10DB7D0", VA = "0x10DB7D0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003CB")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60016AA")]
			[Address(RVA = "0x10DB838", Offset = "0x10DB838", VA = "0x10DB838", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60016A5")]
		[Address(RVA = "0x10DB0A4", Offset = "0x10DB0A4", VA = "0x10DB0A4")]
		[DebuggerHidden]
		public <Start>d__7(int <>1__state)
		{
		}

		[Token(Token = "0x60016A6")]
		[Address(RVA = "0x10DB194", Offset = "0x10DB194", VA = "0x10DB194", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60016A7")]
		[Address(RVA = "0x10DB198", Offset = "0x10DB198", VA = "0x10DB198", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60016A9")]
		[Address(RVA = "0x10DB7D8", Offset = "0x10DB7D8", VA = "0x10DB7D8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000657")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Camera captureCamera;

	[Token(Token = "0x4000658")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int totalFrames;

	[Token(Token = "0x4000659")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public SimpleShadow shadow;

	[Token(Token = "0x400065A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject[] targetObjects;

	[Token(Token = "0x400065B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private GameObject currentTarget;

	[Token(Token = "0x400065C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public int screenshotWidth;

	[Token(Token = "0x400065D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public int screenshotHeight;

	[Token(Token = "0x6000966")]
	[Address(RVA = "0x10DB034", Offset = "0x10DB034", VA = "0x10DB034")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6B023C", Offset = "0x6B023C")]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x6000967")]
	[Address(RVA = "0x10DB0D0", Offset = "0x10DB0D0", VA = "0x10DB0D0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000968")]
	[Address(RVA = "0x10DB17C", Offset = "0x10DB17C", VA = "0x10DB17C")]
	public CaptureCarousel()
	{
	}
}
[Token(Token = "0x20000DB")]
public class MontageManager : SingletonBehaviour<MontageManager>, IDebugPanelProvider
{
	[Token(Token = "0x200035A")]
	public enum State
	{
		[Token(Token = "0x40015A0")]
		Inactive,
		[Token(Token = "0x40015A1")]
		Recording,
		[Token(Token = "0x40015A2")]
		Playback,
		[Token(Token = "0x40015A3")]
		PlaybackNoTimelapse
	}

	[Token(Token = "0x400065E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float timeBetweenFrames;

	[Token(Token = "0x400065F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6A90EC", Offset = "0x6A90EC")]
	private State <state>k__BackingField;

	[Token(Token = "0x4000660")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int frameNumber;

	[Token(Token = "0x4000661")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private double recordStartTime;

	[Token(Token = "0x4000662")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Camera animatedCamera;

	[Token(Token = "0x4000663")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public int captureWidth;

	[Token(Token = "0x4000664")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public int captureHeight;

	[Token(Token = "0x4000665")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private RenderTexture captureTarget;

	[Token(Token = "0x4000666")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Texture2D captureTexture;

	[Token(Token = "0x4000667")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private int frameWait;

	[Token(Token = "0x170001EA")]
	public State state
	{
		[Token(Token = "0x6000969")]
		[Address(RVA = "0x1001438", Offset = "0x1001438", VA = "0x1001438")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6B02A0", Offset = "0x6B02A0")]
		get
		{
			return default(State);
		}
		[Token(Token = "0x600096A")]
		[Address(RVA = "0x1001440", Offset = "0x1001440", VA = "0x1001440")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6B02B0", Offset = "0x6B02B0")]
		private set
		{
		}
	}

	[Token(Token = "0x600096B")]
	[Address(RVA = "0x1001448", Offset = "0x1001448", VA = "0x1001448")]
	private string GetSaveName(int frame)
	{
		return null;
	}

	[Token(Token = "0x600096C")]
	[Address(RVA = "0x10014C4", Offset = "0x10014C4", VA = "0x10014C4")]
	private void Update()
	{
	}

	[Token(Token = "0x600096D")]
	[Address(RVA = "0x1001B8C", Offset = "0x1001B8C", VA = "0x1001B8C")]
	public void Record()
	{
	}

	[Token(Token = "0x600096E")]
	[Address(RVA = "0x1001C80", Offset = "0x1001C80", VA = "0x1001C80")]
	private void StartCamera()
	{
	}

	[Token(Token = "0x600096F")]
	[Address(RVA = "0x1001DEC", Offset = "0x1001DEC", VA = "0x1001DEC")]
	public void Play()
	{
	}

	[Token(Token = "0x6000970")]
	[Address(RVA = "0x1001E24", Offset = "0x1001E24", VA = "0x1001E24")]
	private void PlayNoTimelapse()
	{
	}

	[Token(Token = "0x6000971")]
	[Address(RVA = "0x1001AF0", Offset = "0x1001AF0", VA = "0x1001AF0")]
	public void Stop()
	{
	}

	[Token(Token = "0x6000972")]
	[Address(RVA = "0x1001E5C", Offset = "0x1001E5C", VA = "0x1001E5C", Slot = "6")]
	public void OnDebugPanel()
	{
	}

	[Token(Token = "0x6000973")]
	[Address(RVA = "0x100217C", Offset = "0x100217C", VA = "0x100217C")]
	public MontageManager()
	{
	}
}
[Token(Token = "0x20000DC")]
[ExecuteInEditMode]
public class AmbientCubeBaker : MonoBehaviour
{
	[Token(Token = "0x4000668")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Color[] ambientColors;

	[Token(Token = "0x4000669")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Vector3[] ambientDirections;

	[Token(Token = "0x400066A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Vector4[] shaderVars;

	[Token(Token = "0x6000974")]
	[Address(RVA = "0x10A2FEC", Offset = "0x10A2FEC", VA = "0x10A2FEC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000975")]
	[Address(RVA = "0x10A33E4", Offset = "0x10A33E4", VA = "0x10A33E4")]
	public AmbientCubeBaker()
	{
	}
}
[Token(Token = "0x20000DD")]
public class CarTester : CityModule
{
	[Token(Token = "0x400066B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int numTestCars;

	[Token(Token = "0x6000976")]
	[Address(RVA = "0x11161B8", Offset = "0x11161B8", VA = "0x11161B8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000977")]
	[Address(RVA = "0x11161BC", Offset = "0x11161BC", VA = "0x11161BC")]
	public CarTester()
	{
	}
}
[Token(Token = "0x20000DE")]
[ExecuteInEditMode]
public class GroundPlacer : MonoBehaviour
{
	[Token(Token = "0x6000978")]
	[Address(RVA = "0x1060378", Offset = "0x1060378", VA = "0x1060378")]
	private void Start()
	{
	}

	[Token(Token = "0x6000979")]
	[Address(RVA = "0x10606F8", Offset = "0x10606F8", VA = "0x10606F8")]
	private float CalculateHeight(Vector3 position)
	{
		return default(float);
	}

	[Token(Token = "0x600097A")]
	[Address(RVA = "0x106037C", Offset = "0x106037C", VA = "0x106037C")]
	public void PlaceOnTerrain()
	{
	}

	[Token(Token = "0x600097B")]
	[Address(RVA = "0x106085C", Offset = "0x106085C", VA = "0x106085C")]
	public GroundPlacer()
	{
	}
}
[Token(Token = "0x20000DF")]
public class MeshBatchTester : MonoBehaviour
{
	[Token(Token = "0x200035B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6A82B4", Offset = "0x6A82B4")]
	private sealed class <Start>d__7 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40015A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40015A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40015A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MeshBatchTester <>4__this;

		[Token(Token = "0x170003CC")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60016AE")]
			[Address(RVA = "0x109BF88", Offset = "0x109BF88", VA = "0x109BF88", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003CD")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60016B0")]
			[Address(RVA = "0x109BFF0", Offset = "0x109BFF0", VA = "0x109BFF0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60016AB")]
		[Address(RVA = "0x109BA04", Offset = "0x109BA04", VA = "0x109BA04")]
		[DebuggerHidden]
		public <Start>d__7(int <>1__state)
		{
		}

		[Token(Token = "0x60016AC")]
		[Address(RVA = "0x109BA4C", Offset = "0x109BA4C", VA = "0x109BA4C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60016AD")]
		[Address(RVA = "0x109BA50", Offset = "0x109BA50", VA = "0x109BA50", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60016AF")]
		[Address(RVA = "0x109BF90", Offset = "0x109BF90", VA = "0x109BF90", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400066C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public MeshBatcher batcher;

	[Token(Token = "0x400066D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Mesh[] testMeshes;

	[Token(Token = "0x400066E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Material testMaterial;

	[Token(Token = "0x400066F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float spacingX;

	[Token(Token = "0x4000670")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float spacingY;

	[Token(Token = "0x4000671")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public int sizeX;

	[Token(Token = "0x4000672")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public int sizeY;

	[Token(Token = "0x600097C")]
	[Address(RVA = "0x109B994", Offset = "0x109B994", VA = "0x109B994")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6B02C0", Offset = "0x6B02C0")]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x600097D")]
	[Address(RVA = "0x109BA30", Offset = "0x109BA30", VA = "0x109BA30")]
	public MeshBatchTester()
	{
	}
}
[Token(Token = "0x20000E0")]
public class Rotate : MonoBehaviour
{
	[Token(Token = "0x4000673")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float speed;

	[Token(Token = "0x600097E")]
	[Address(RVA = "0x1041B54", Offset = "0x1041B54", VA = "0x1041B54")]
	private void Update()
	{
	}

	[Token(Token = "0x600097F")]
	[Address(RVA = "0x1041C58", Offset = "0x1041C58", VA = "0x1041C58")]
	public Rotate()
	{
	}
}
[Token(Token = "0x20000E1")]
public class ShadowVolume : MonoBehaviour
{
	[Token(Token = "0x4000674")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float minHeight;

	[Token(Token = "0x4000675")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float maxHeight;

	[Token(Token = "0x4000676")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Camera heightCaptureCamera;

	[Token(Token = "0x4000677")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Texture heightCaptureTexture;

	[Token(Token = "0x4000678")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Shader heightCaptureShader;

	[Token(Token = "0x4000679")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public int resolution;

	[Token(Token = "0x400067A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Material volumeUpdateMaterial;

	[Token(Token = "0x400067B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private RenderTexture shadowVolumeTexture1;

	[Token(Token = "0x400067C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private RenderTexture shadowVolumeTexture2;

	[Token(Token = "0x400067D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool shadowVolumeSwitch;

	[Token(Token = "0x400067E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private int timer;

	[Token(Token = "0x170001EB")]
	private RenderTexture currentShadowVolumeTexture
	{
		[Token(Token = "0x6000980")]
		[Address(RVA = "0x10569C0", Offset = "0x10569C0", VA = "0x10569C0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170001EC")]
	private RenderTexture previousShadowVolumeTexture
	{
		[Token(Token = "0x6000981")]
		[Address(RVA = "0x10569DC", Offset = "0x10569DC", VA = "0x10569DC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000982")]
	[Address(RVA = "0x10569F8", Offset = "0x10569F8", VA = "0x10569F8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000983")]
	[Address(RVA = "0x1056AEC", Offset = "0x1056AEC", VA = "0x1056AEC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000984")]
	[Address(RVA = "0x1056E3C", Offset = "0x1056E3C", VA = "0x1056E3C")]
	public ShadowVolume()
	{
	}
}
[Token(Token = "0x20000E2")]
public class BudgetManager : CityModule, ISimulationModule
{
	[Token(Token = "0x200035C")]
	public enum ExpenseCategory
	{
		[Token(Token = "0x40015A8")]
		Residential,
		[Token(Token = "0x40015A9")]
		Commercial,
		[Token(Token = "0x40015AA")]
		Industrial,
		[Token(Token = "0x40015AB")]
		Police,
		[Token(Token = "0x40015AC")]
		Fire,
		[Token(Token = "0x40015AD")]
		Hospital,
		[Token(Token = "0x40015AE")]
		School,
		[Token(Token = "0x40015AF")]
		Electricity,
		[Token(Token = "0x40015B0")]
		Water,
		[Token(Token = "0x40015B1")]
		Network,
		[Token(Token = "0x40015B2")]
		Road,
		[Token(Token = "0x40015B3")]
		Loans,
		[Token(Token = "0x40015B4")]
		Uncategorised,
		[Token(Token = "0x40015B5")]
		NumCategories
	}

	[Token(Token = "0x200035D")]
	public struct BudgetReport
	{
		[Token(Token = "0x40015B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int residentialIncome;

		[Token(Token = "0x40015B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public int residentialTaxCollected;

		[Token(Token = "0x40015B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public int commercialIncome;

		[Token(Token = "0x40015B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public int commercialTaxCollected;

		[Token(Token = "0x40015BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int industrialIncome;

		[Token(Token = "0x40015BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int industrialTaxCollected;

		[Token(Token = "0x40015BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int[] expensesByCategory;

		[Token(Token = "0x40015BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int totalExpenses;

		[Token(Token = "0x170003CE")]
		public int totalTaxesCollected
		{
			[Token(Token = "0x60016B1")]
			[Address(RVA = "0x721C98", Offset = "0x721C98", VA = "0x721C98")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170003CF")]
		public int weeklyIncome
		{
			[Token(Token = "0x60016B2")]
			[Address(RVA = "0x721CB0", Offset = "0x721CB0", VA = "0x721CB0")]
			get
			{
				return default(int);
			}
		}
	}

	[Token(Token = "0x200035E")]
	public class BudgetManagerSaveData : SaveSystem.ModuleData
	{
		[Token(Token = "0x40015BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int money;

		[Token(Token = "0x40015BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float timeLosingMoney;

		[Token(Token = "0x40015C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int loanRepaymentWeeksRemaining;

		[Token(Token = "0x40015C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public bool cityIsBankrupt;

		[Token(Token = "0x60016B3")]
		[Address(RVA = "0x10ADEA4", Offset = "0x10ADEA4", VA = "0x10ADEA4")]
		public BudgetManagerSaveData()
		{
		}
	}

	[Token(Token = "0x200035F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6A82C4", Offset = "0x6A82C4")]
	private sealed class <Simulate>d__33 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40015C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40015C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40015C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public BudgetManager <>4__this;

		[Token(Token = "0x40015C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float deltaTime;

		[Token(Token = "0x170003D0")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60016B7")]
			[Address(RVA = "0x10AE478", Offset = "0x10AE478", VA = "0x10AE478", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003D1")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60016B9")]
			[Address(RVA = "0x10AE4E0", Offset = "0x10AE4E0", VA = "0x10AE4E0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60016B4")]
		[Address(RVA = "0x10ADCD8", Offset = "0x10ADCD8", VA = "0x10ADCD8")]
		[DebuggerHidden]
		public <Simulate>d__33(int <>1__state)
		{
		}

		[Token(Token = "0x60016B5")]
		[Address(RVA = "0x10ADF70", Offset = "0x10ADF70", VA = "0x10ADF70", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60016B6")]
		[Address(RVA = "0x10ADF74", Offset = "0x10ADF74", VA = "0x10ADF74", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60016B8")]
		[Address(RVA = "0x10AE480", Offset = "0x10AE480", VA = "0x10AE480", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400067F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6A90FC", Offset = "0x6A90FC")]
	private int <money>k__BackingField;

	[Token(Token = "0x4000680")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public BudgetReport latestReport;

	[Token(Token = "0x4000681")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public int maxTaxRate;

	[Token(Token = "0x4000682")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public int minTaxRate;

	[Token(Token = "0x4000683")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public int residentialTaxRate;

	[Token(Token = "0x4000684")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public int commercialTaxRate;

	[Token(Token = "0x4000685")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public int industrialTaxRate;

	[Token(Token = "0x4000686")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public int loanRepaymentPeriodInWeeks;

	[Token(Token = "0x4000687")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public int loanOfferAmount;

	[Token(Token = "0x4000688")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public int bankruptBalanceThreshold;

	[Token(Token = "0x4000689")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public int bankruptTimeThreshold;

	[Token(Token = "0x400068A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public float loanInterest;

	[Token(Token = "0x400068B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private int loanRepaymentWeeksRemaining;

	[Token(Token = "0x400068C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private float timeLosingMoney;

	[Token(Token = "0x400068D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6A910C", Offset = "0x6A910C")]
	private bool <cityIsBankrupt>k__BackingField;

	[Token(Token = "0x170001ED")]
	public int money
	{
		[Token(Token = "0x6000985")]
		[Address(RVA = "0x10AD550", Offset = "0x10AD550", VA = "0x10AD550")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6B0324", Offset = "0x6B0324")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000986")]
		[Address(RVA = "0x10AD558", Offset = "0x10AD558", VA = "0x10AD558")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6B0334", Offset = "0x6B0334")]
		set
		{
		}
	}

	[Token(Token = "0x170001EE")]
	public bool cityIsBankrupt
	{
		[Token(Token = "0x6000987")]
		[Address(RVA = "0x10AD560", Offset = "0x10AD560", VA = "0x10AD560")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6B0344", Offset = "0x6B0344")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000988")]
		[Address(RVA = "0x10AD568", Offset = "0x10AD568", VA = "0x10AD568")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6B0354", Offset = "0x6B0354")]
		private set
		{
		}
	}

	[Token(Token = "0x170001EF")]
	private Player player
	{
		[Token(Token = "0x6000989")]
		[Address(RVA = "0x10AD574", Offset = "0x10AD574", VA = "0x10AD574")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170001F0")]
	public override Type saveModuleDataType
	{
		[Token(Token = "0x6000993")]
		[Address(RVA = "0x10ADD04", Offset = "0x10ADD04", VA = "0x10ADD04", Slot = "4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600098A")]
	[Address(RVA = "0x10AD5C4", Offset = "0x10AD5C4", VA = "0x10AD5C4")]
	private void Start()
	{
	}

	[Token(Token = "0x600098B")]
	[Address(RVA = "0x10AD810", Offset = "0x10AD810", VA = "0x10AD810", Slot = "8")]
	public override void Init()
	{
	}

	[Token(Token = "0x600098C")]
	[Address(RVA = "0x10AD84C", Offset = "0x10AD84C", VA = "0x10AD84C")]
	public void RefreshExpenses()
	{
	}

	[Token(Token = "0x600098D")]
	[Address(RVA = "0x10ADA24", Offset = "0x10ADA24", VA = "0x10ADA24")]
	public int GetTaxRate(ZoneManager.ZoneType zoneType)
	{
		return default(int);
	}

	[Token(Token = "0x600098E")]
	[Address(RVA = "0x10AD854", Offset = "0x10AD854", VA = "0x10AD854")]
	private void CalculateExpenses(ref BudgetReport report)
	{
	}

	[Token(Token = "0x600098F")]
	[Address(RVA = "0x10AD608", Offset = "0x10AD608", VA = "0x10AD608")]
	private BudgetReport CreateReport()
	{
		return default(BudgetReport);
	}

	[Token(Token = "0x6000990")]
	[Address(RVA = "0x10ADA60", Offset = "0x10ADA60", VA = "0x10ADA60")]
	public void ApplyWeeklyBudget(Player player)
	{
	}

	[Token(Token = "0x6000991")]
	[Address(RVA = "0x10ADAF0", Offset = "0x10ADAF0", VA = "0x10ADAF0")]
	public bool CanAffordUpkeepForNewBuilding(BuildingInfo info)
	{
		return default(bool);
	}

	[Token(Token = "0x6000992")]
	[Address(RVA = "0x10ADC58", Offset = "0x10ADC58", VA = "0x10ADC58", Slot = "11")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6B0364", Offset = "0x6B0364")]
	public IEnumerator Simulate(float deltaTime)
	{
		return null;
	}

	[Token(Token = "0x6000994")]
	[Address(RVA = "0x10ADD74", Offset = "0x10ADD74", VA = "0x10ADD74", Slot = "6")]
	public override void OnLoad(SaveSystem.SaveGame saveGame, SaveSystem.ModuleData data)
	{
	}

	[Token(Token = "0x6000995")]
	[Address(RVA = "0x10ADE1C", Offset = "0x10ADE1C", VA = "0x10ADE1C", Slot = "5")]
	public override SaveSystem.ModuleData OnSave()
	{
		return null;
	}

	[Token(Token = "0x6000996")]
	[Address(RVA = "0x10ADEAC", Offset = "0x10ADEAC", VA = "0x10ADEAC", Slot = "10")]
	public override void OnResetProgress()
	{
	}

	[Token(Token = "0x6000997")]
	[Address(RVA = "0x10ADF3C", Offset = "0x10ADF3C", VA = "0x10ADF3C")]
	public BudgetManager()
	{
	}

	[SpecialName]
	[Token(Token = "0x6000998")]
	[Address(RVA = "0x10ADF68", Offset = "0x10ADF68", VA = "0x10ADF68", Slot = "12")]
	private GameObject ISimulationModule.get_gameObject()
	{
		return null;
	}
}
[Token(Token = "0x20000E3")]
public class GlobalGameValues : ScriptableObjectSingleton<GlobalGameValues>
{
	[Serializable]
	[Token(Token = "0x2000360")]
	public class Construction
	{
		[Token(Token = "0x40015C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6AC6A4", Offset = "0x6AC6A4")]
		public int roadTileCost;

		[Token(Token = "0x40015C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6AC6DC", Offset = "0x6AC6DC")]
		public int bridgeTileCost;

		[Token(Token = "0x40015C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6AC714", Offset = "0x6AC714")]
		public int demolishTileCost;

		[Token(Token = "0x40015C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6AC74C", Offset = "0x6AC74C")]
		public int deforestationTileCost;

		[Token(Token = "0x40015CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6AC784", Offset = "0x6AC784")]
		public int landscapeFeatureDemolishCostPerTile;

		[Token(Token = "0x40015CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6AC7BC", Offset = "0x6AC7BC")]
		public int regionUnlockCost;

		[Token(Token = "0x40015CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6AC7F4", Offset = "0x6AC7F4")]
		public float timeBeforeUnoccupiedBadge;

		[Token(Token = "0x40015CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6AC82C", Offset = "0x6AC82C")]
		public float minBuildingAbandonmentTime;

		[Token(Token = "0x40015CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6AC864", Offset = "0x6AC864")]
		public float buildingAbandonmentTime;

		[Token(Token = "0x40015CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6AC89C", Offset = "0x6AC89C")]
		public float abandonedBuildingAutoDemolishTime;

		[Token(Token = "0x40015D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6AC8D4", Offset = "0x6AC8D4")]
		public float abandonedBuildingZoneScorePenalty;

		[Token(Token = "0x40015D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6AC90C", Offset = "0x6AC90C")]
		public int abandonedBuildingZoneScoreRadius;

		[Token(Token = "0x40015D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6AC944", Offset = "0x6AC944")]
		public float constructionMinRequiredZoneScore;

		[Token(Token = "0x40015D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6AC97C", Offset = "0x6AC97C")]
		public float timeBeforeDisplayingWarningBadges;

		[Token(Token = "0x40015D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6AC9B4", Offset = "0x6AC9B4")]
		public float timeToConstructZoneBuilding;

		[Token(Token = "0x40015D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6AC9EC", Offset = "0x6AC9EC")]
		public int maxConcurrentConstructionSites;

		[Token(Token = "0x40015D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6ACA24", Offset = "0x6ACA24")]
		public float minReplacementTime;

		[Token(Token = "0x40015D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6ACA5C", Offset = "0x6ACA5C")]
		public float refundPeriod;

		[Token(Token = "0x60016BA")]
		[Address(RVA = "0x105C9AC", Offset = "0x105C9AC", VA = "0x105C9AC")]
		public Construction()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x2000361")]
	public class Citizen
	{
		[Token(Token = "0x40015D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6ACA94", Offset = "0x6ACA94")]
		public float loseEmploymentChance;

		[Token(Token = "0x40015D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6ACACC", Offset = "0x6ACACC")]
		public float evictionChance;

		[Token(Token = "0x40015DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6ACB04", Offset = "0x6ACB04")]
		public float missingWorkUtilityTolerance;

		[Token(Token = "0x40015DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6ACB3C", Offset = "0x6ACB3C")]
		public float missingHomeUtilityTolerance;

		[Token(Token = "0x40015DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6ACB74", Offset = "0x6ACB74")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x6ACB74", Offset = "0x6ACB74")]
		public float minRequiredResidentialScore;

		[Token(Token = "0x40015DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6ACBC8", Offset = "0x6ACBC8")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x6ACBC8", Offset = "0x6ACBC8")]
		public float minRequiredJobScore;

		[Token(Token = "0x40015DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6ACC1C", Offset = "0x6ACC1C")]
		public int maxDesiredCommuteDistance;

		[Token(Token = "0x60016BB")]
		[Address(RVA = "0x105C988", Offset = "0x105C988", VA = "0x105C988")]
		public Citizen()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x2000362")]
	public class Budget
	{
		[Token(Token = "0x60016BC")]
		[Address(RVA = "0x105C980", Offset = "0x105C980", VA = "0x105C980")]
		public Budget()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x2000363")]
	public class Demand
	{
		[Token(Token = "0x40015DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6ACC54", Offset = "0x6ACC54")]
		public float marketDenomination;

		[Token(Token = "0x40015E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6ACC8C", Offset = "0x6ACC8C")]
		public float externalMarket;

		[Token(Token = "0x40015E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float maxLabourBase;

		[Token(Token = "0x40015E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float minProjectedIndustrial;

		[Token(Token = "0x40015E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6ACCC4", Offset = "0x6ACCC4")]
		public float birthRate;

		[Token(Token = "0x40015E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6ACCFC", Offset = "0x6ACCFC")]
		public float defaultResidentialRatio;

		[Token(Token = "0x40015E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6ACD34", Offset = "0x6ACD34")]
		public bool countAbandonedBuildings;

		[Token(Token = "0x60016BD")]
		[Address(RVA = "0x105CA0C", Offset = "0x105CA0C", VA = "0x105CA0C")]
		public Demand()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x2000364")]
	public class Zones
	{
		[Serializable]
		[Token(Token = "0x2000426")]
		public class Values
		{
			[Token(Token = "0x4001988")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6AD6D0", Offset = "0x6AD6D0")]
			public int tileBuildCost;

			[Token(Token = "0x4001989")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6AD708", Offset = "0x6AD708")]
			public int citizenCapacityPerTile;

			[Token(Token = "0x400198A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6AD740", Offset = "0x6AD740")]
			public int incomePerTile;

			[Token(Token = "0x400198B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6AD778", Offset = "0x6AD778")]
			public int powerConsumptionPerTile;

			[Token(Token = "0x400198C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6AD7B0", Offset = "0x6AD7B0")]
			public int waterConsumptionPerTile;

			[Token(Token = "0x400198D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6AD7E8", Offset = "0x6AD7E8")]
			public float mediumDensityMultipler;

			[Token(Token = "0x400198E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6AD820", Offset = "0x6AD820")]
			public float highDensityMultipler;

			[Token(Token = "0x60018F0")]
			[Address(RVA = "0x105CCB0", Offset = "0x105CCB0", VA = "0x105CCB0")]
			public int GetCitizenCapacityPerTile(ZoneDensity density)
			{
				return default(int);
			}

			[Token(Token = "0x60018F1")]
			[Address(RVA = "0x105CD10", Offset = "0x105CD10", VA = "0x105CD10")]
			public int GetPowerConsumptionPerTile(ZoneDensity density)
			{
				return default(int);
			}

			[Token(Token = "0x60018F2")]
			[Address(RVA = "0x105CD48", Offset = "0x105CD48", VA = "0x105CD48")]
			public int GetWaterConsumptionPerTile(ZoneDensity density)
			{
				return default(int);
			}

			[Token(Token = "0x60018F3")]
			[Address(RVA = "0x105CD80", Offset = "0x105CD80", VA = "0x105CD80")]
			public int GetIncomePerTile(ZoneDensity density)
			{
				return default(int);
			}

			[Token(Token = "0x60018F4")]
			[Address(RVA = "0x105CCE8", Offset = "0x105CCE8", VA = "0x105CCE8")]
			public float GetZoneDensityMultiplier(ZoneDensity density)
			{
				return default(float);
			}

			[Token(Token = "0x60018F5")]
			[Address(RVA = "0x105CC88", Offset = "0x105CC88", VA = "0x105CC88")]
			public Values()
			{
			}
		}

		[Token(Token = "0x40015E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Values residential;

		[Token(Token = "0x40015E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Values commercial;

		[Token(Token = "0x40015E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Values industrial;

		[Token(Token = "0x60016BE")]
		[Address(RVA = "0x105CB94", Offset = "0x105CB94", VA = "0x105CB94")]
		public Zones()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x2000365")]
	public class UI
	{
		[Token(Token = "0x40015E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6ACD6C", Offset = "0x6ACD6C")]
		[SerializeField]
		public Color costColor;

		[Token(Token = "0x40015EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6ACDB8", Offset = "0x6ACDB8")]
		public Color supplyColor;

		[Token(Token = "0x40015EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6ACDF0", Offset = "0x6ACDF0")]
		public Color utilityUsageColor;

		[Token(Token = "0x170003D2")]
		public string costColorHex
		{
			[Token(Token = "0x60016BF")]
			[Address(RVA = "0x105CAB8", Offset = "0x105CAB8", VA = "0x105CAB8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003D3")]
		public string supplyColorHex
		{
			[Token(Token = "0x60016C0")]
			[Address(RVA = "0x105CAC8", Offset = "0x105CAC8", VA = "0x105CAC8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003D4")]
		public string utilityUsageColorHex
		{
			[Token(Token = "0x60016C1")]
			[Address(RVA = "0x105CAD8", Offset = "0x105CAD8", VA = "0x105CAD8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60016C2")]
		[Address(RVA = "0x105CAE8", Offset = "0x105CAE8", VA = "0x105CAE8")]
		public UI()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x2000366")]
	public class Emergency
	{
		[Token(Token = "0x40015EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6ACE28", Offset = "0x6ACE28")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x6ACE28", Offset = "0x6ACE28")]
		public float crimeChance;

		[Token(Token = "0x40015ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6ACE7C", Offset = "0x6ACE7C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x6ACE7C", Offset = "0x6ACE7C")]
		public float fireChance;

		[Token(Token = "0x40015EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6ACED0", Offset = "0x6ACED0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x6ACED0", Offset = "0x6ACED0")]
		public float sicknessChance;

		[Token(Token = "0x40015EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6ACF24", Offset = "0x6ACF24")]
		public float minTimeBetweenIncidents;

		[Token(Token = "0x40015F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6ACF5C", Offset = "0x6ACF5C")]
		public float maxTimeBetweenIncidents;

		[Token(Token = "0x40015F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6ACF94", Offset = "0x6ACF94")]
		public int timeBetweenIncidentsPopulationScaler;

		[Token(Token = "0x40015F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6ACFCC", Offset = "0x6ACFCC")]
		public float emergencyUnlockGraceTime;

		[Token(Token = "0x40015F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6AD004", Offset = "0x6AD004")]
		public float airportIncidentChance;

		[Token(Token = "0x40015F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6AD03C", Offset = "0x6AD03C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x6AD03C", Offset = "0x6AD03C")]
		public float baseCrimeChanceOffset;

		[Token(Token = "0x40015F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6AD090", Offset = "0x6AD090")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x6AD090", Offset = "0x6AD090")]
		public float inGameCrimeIncidentChance;

		[Token(Token = "0x40015F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6AD0E4", Offset = "0x6AD0E4")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x6AD0E4", Offset = "0x6AD0E4")]
		public float policeCompetency;

		[Token(Token = "0x40015F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6AD138", Offset = "0x6AD138")]
		public float crimeDecayRate;

		[Token(Token = "0x40015F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6AD170", Offset = "0x6AD170")]
		public int crimeEffectRadius;

		[Token(Token = "0x40015F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x6AD1A8", Offset = "0x6AD1A8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6AD1A8", Offset = "0x6AD1A8")]
		public float crimeEffectAmount;

		[Token(Token = "0x40015FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6AD1FC", Offset = "0x6AD1FC")]
		public float emergencyIncidentResolveDuration;

		[Token(Token = "0x40015FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6AD234", Offset = "0x6AD234")]
		public float helicopterRescueDuration;

		[Token(Token = "0x40015FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6AD26C", Offset = "0x6AD26C")]
		public float fireResolveDuration;

		[Token(Token = "0x40015FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6AD2A4", Offset = "0x6AD2A4")]
		public float buildingBurnDuration;

		[Token(Token = "0x40015FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6AD2DC", Offset = "0x6AD2DC")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x6AD2DC", Offset = "0x6AD2DC")]
		public float fireSpreadChance;

		[Token(Token = "0x40015FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6AD330", Offset = "0x6AD330")]
		public float minTimeBetweenReginition;

		[Token(Token = "0x60016C3")]
		[Address(RVA = "0x105CA34", Offset = "0x105CA34", VA = "0x105CA34")]
		public Emergency()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x2000367")]
	public class Utility
	{
		[Token(Token = "0x4001600")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6AD368", Offset = "0x6AD368")]
		public float waterTreatmentPlantEfficiency;

		[Token(Token = "0x4001601")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6AD3A0", Offset = "0x6AD3A0")]
		public int lowWaterUsagePerTile;

		[Token(Token = "0x4001602")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6AD3D8", Offset = "0x6AD3D8")]
		public int mediumWaterUsagePerTile;

		[Token(Token = "0x4001603")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6AD410", Offset = "0x6AD410")]
		public int highWaterUsagePerTile;

		[Token(Token = "0x4001604")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6AD448", Offset = "0x6AD448")]
		public int lowPowerUsagePerTile;

		[Token(Token = "0x4001605")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6AD480", Offset = "0x6AD480")]
		public int mediumPowerUsagePerTile;

		[Token(Token = "0x4001606")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6AD4B8", Offset = "0x6AD4B8")]
		public int highPowerUsagePerTile;

		[Token(Token = "0x4001607")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6AD4F0", Offset = "0x6AD4F0")]
		public int networkUnlockGraceTime;

		[Token(Token = "0x60016C4")]
		[Address(RVA = "0x105CAF0", Offset = "0x105CAF0", VA = "0x105CAF0")]
		public int GetWaterUsagePerTile(BuildingInfo.UtilityUsage usageType)
		{
			return default(int);
		}

		[Token(Token = "0x60016C5")]
		[Address(RVA = "0x105CB28", Offset = "0x105CB28", VA = "0x105CB28")]
		public int GetPowerUsagePerTile(BuildingInfo.UtilityUsage usageType)
		{
			return default(int);
		}

		[Token(Token = "0x60016C6")]
		[Address(RVA = "0x105CB60", Offset = "0x105CB60", VA = "0x105CB60")]
		public Utility()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x2000368")]
	public class SpecialBuildingBehaviour
	{
		[Token(Token = "0x4001608")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float happinessBoostPercentage;

		[Token(Token = "0x4001609")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float commercialBoostPercentage;

		[Token(Token = "0x400160A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float industrialBoostPercentage;

		[Token(Token = "0x400160B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float schoolRadiusBoostMultiplier;

		[Token(Token = "0x400160C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float eyeSoreReductionPercentage;

		[Token(Token = "0x400160D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float smellyReductionPercentage;

		[Token(Token = "0x400160E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float noisyReductionPercentage;

		[Token(Token = "0x400160F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float overallHappinessBoostPercentage;

		[Token(Token = "0x60016C7")]
		[Address(RVA = "0x105CA9C", Offset = "0x105CA9C", VA = "0x105CA9C")]
		public SpecialBuildingBehaviour()
		{
		}
	}

	[Token(Token = "0x400068E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Construction constructionValues;

	[Token(Token = "0x400068F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Citizen citizenValues;

	[Token(Token = "0x4000690")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Budget budgetValues;

	[Token(Token = "0x4000691")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Demand demandValues;

	[Token(Token = "0x4000692")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6A911C", Offset = "0x6A911C")]
	public float[] taxRateZoneScoreShift;

	[Token(Token = "0x4000693")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Zones zoneValues;

	[Token(Token = "0x4000694")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public UI uiValues;

	[Token(Token = "0x4000695")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Emergency emergencyValues;

	[Token(Token = "0x4000696")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Utility utilityValues;

	[Token(Token = "0x4000697")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public SpecialBuildingBehaviour specialBuildingBehaviourValues;

	[Token(Token = "0x170001F1")]
	public static Construction construction
	{
		[Token(Token = "0x6000999")]
		[Address(RVA = "0x105C37C", Offset = "0x105C37C", VA = "0x105C37C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170001F2")]
	public static Citizen citizen
	{
		[Token(Token = "0x600099A")]
		[Address(RVA = "0x105C3F4", Offset = "0x105C3F4", VA = "0x105C3F4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170001F3")]
	public static Budget budget
	{
		[Token(Token = "0x600099B")]
		[Address(RVA = "0x105C46C", Offset = "0x105C46C", VA = "0x105C46C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170001F4")]
	public static Demand demand
	{
		[Token(Token = "0x600099C")]
		[Address(RVA = "0x105C4E4", Offset = "0x105C4E4", VA = "0x105C4E4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170001F5")]
	public static Zones zones
	{
		[Token(Token = "0x600099E")]
		[Address(RVA = "0x105C650", Offset = "0x105C650", VA = "0x105C650")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170001F6")]
	public static UI ui
	{
		[Token(Token = "0x60009A0")]
		[Address(RVA = "0x105C730", Offset = "0x105C730", VA = "0x105C730")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170001F7")]
	public static Emergency emergency
	{
		[Token(Token = "0x60009A1")]
		[Address(RVA = "0x105C7A8", Offset = "0x105C7A8", VA = "0x105C7A8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170001F8")]
	public static Utility utility
	{
		[Token(Token = "0x60009A2")]
		[Address(RVA = "0x105C820", Offset = "0x105C820", VA = "0x105C820")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170001F9")]
	public static SpecialBuildingBehaviour specialBuildingBehaviour
	{
		[Token(Token = "0x60009A3")]
		[Address(RVA = "0x105C898", Offset = "0x105C898", VA = "0x105C898")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600099D")]
	[Address(RVA = "0x105C55C", Offset = "0x105C55C", VA = "0x105C55C")]
	public static float GetTaxRateZoneScoreShift(int taxRate)
	{
		return default(float);
	}

	[Token(Token = "0x600099F")]
	[Address(RVA = "0x105C6C8", Offset = "0x105C6C8", VA = "0x105C6C8")]
	public static Zones.Values GetZoneValues(ZoneManager.ZoneType zoneType)
	{
		return null;
	}

	[Token(Token = "0x60009A4")]
	[Address(RVA = "0x105C910", Offset = "0x105C910", VA = "0x105C910")]
	public GlobalGameValues()
	{
	}
}
[Token(Token = "0x20000E4")]
public class CentroidProximityMap : InfluenceMap
{
	[Token(Token = "0x2000369")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6A82D4", Offset = "0x6A82D4")]
	private sealed class <Simulate>d__1 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001610")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001611")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001612")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CentroidProximityMap <>4__this;

		[Token(Token = "0x4001613")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <centerX>5__2;

		[Token(Token = "0x4001614")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <centerY>5__3;

		[Token(Token = "0x170003D5")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60016CB")]
			[Address(RVA = "0x11179A8", Offset = "0x11179A8", VA = "0x11179A8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003D6")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60016CD")]
			[Address(RVA = "0x1117A10", Offset = "0x1117A10", VA = "0x1117A10", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60016C8")]
		[Address(RVA = "0x11176EC", Offset = "0x11176EC", VA = "0x11176EC")]
		[DebuggerHidden]
		public <Simulate>d__1(int <>1__state)
		{
		}

		[Token(Token = "0x60016C9")]
		[Address(RVA = "0x1117718", Offset = "0x1117718", VA = "0x1117718", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60016CA")]
		[Address(RVA = "0x111771C", Offset = "0x111771C", VA = "0x111771C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60016CC")]
		[Address(RVA = "0x11179B0", Offset = "0x11179B0", VA = "0x11179B0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x60009A5")]
	[Address(RVA = "0x1117674", Offset = "0x1117674", VA = "0x1117674")]
	public CentroidProximityMap(City inCity)
	{
	}

	[Token(Token = "0x60009A6")]
	[Address(RVA = "0x111767C", Offset = "0x111767C", VA = "0x111767C", Slot = "12")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6B03C8", Offset = "0x6B03C8")]
	public override IEnumerator Simulate(float deltaTime)
	{
		return null;
	}
}
[Token(Token = "0x20000E5")]
public class CrimeMap : InfluenceMap
{
	[Token(Token = "0x200036A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6A82E4", Offset = "0x6A82E4")]
	private sealed class <Simulate>d__5 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001615")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001616")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001617")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CrimeMap <>4__this;

		[Token(Token = "0x4001618")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float deltaTime;

		[Token(Token = "0x170003D7")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60016D1")]
			[Address(RVA = "0x102AB88", Offset = "0x102AB88", VA = "0x102AB88", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003D8")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60016D3")]
			[Address(RVA = "0x102ABF0", Offset = "0x102ABF0", VA = "0x102ABF0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60016CE")]
		[Address(RVA = "0x102A880", Offset = "0x102A880", VA = "0x102A880")]
		[DebuggerHidden]
		public <Simulate>d__5(int <>1__state)
		{
		}

		[Token(Token = "0x60016CF")]
		[Address(RVA = "0x102AA44", Offset = "0x102AA44", VA = "0x102AA44", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60016D0")]
		[Address(RVA = "0x102AA48", Offset = "0x102AA48", VA = "0x102AA48", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60016D2")]
		[Address(RVA = "0x102AB90", Offset = "0x102AB90", VA = "0x102AB90", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000698")]
	private const float currentWeight = 0.1f;

	[Token(Token = "0x4000699")]
	private const float populationDensityImportance = 1f;

	[Token(Token = "0x400069A")]
	private const float policeStationCoverageImportance = -3f;

	[Token(Token = "0x400069B")]
	private const float landValueImportance = 1f;

	[Token(Token = "0x60009A7")]
	[Address(RVA = "0x102A7F8", Offset = "0x102A7F8", VA = "0x102A7F8")]
	public CrimeMap(City inCity)
	{
	}

	[Token(Token = "0x60009A8")]
	[Address(RVA = "0x102A800", Offset = "0x102A800", VA = "0x102A800", Slot = "12")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6B042C", Offset = "0x6B042C")]
	public override IEnumerator Simulate(float deltaTime)
	{
		return null;
	}

	[Token(Token = "0x60009A9")]
	[Address(RVA = "0x102A8AC", Offset = "0x102A8AC", VA = "0x102A8AC")]
	public void RaiseCrimeRateInArea(int crimeX, int crimeY)
	{
	}
}
[Token(Token = "0x20000E6")]
public class GroundWaterMap : InfluenceMap
{
	[Token(Token = "0x60009AA")]
	[Address(RVA = "0x1060864", Offset = "0x1060864", VA = "0x1060864")]
	public GroundWaterMap(City inCity)
	{
	}

	[Token(Token = "0x60009AB")]
	[Address(RVA = "0x1060A94", Offset = "0x1060A94", VA = "0x1060A94", Slot = "13")]
	public override void OnPostLoad()
	{
	}

	[Token(Token = "0x60009AC")]
	[Address(RVA = "0x10609A0", Offset = "0x10609A0", VA = "0x10609A0")]
	private void GenerateValues()
	{
	}

	[Token(Token = "0x60009AD")]
	[Address(RVA = "0x1060A98", Offset = "0x1060A98", VA = "0x1060A98")]
	public bool HasWater(int x, int y)
	{
		return default(bool);
	}

	[Token(Token = "0x60009AE")]
	[Address(RVA = "0x1060B20", Offset = "0x1060B20", VA = "0x1060B20", Slot = "14")]
	public override void Reset()
	{
	}
}
[Token(Token = "0x20000E7")]
public class InfluenceMap : IVisualiserTextureProvider
{
	[Token(Token = "0x200036B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6A82F4", Offset = "0x6A82F4")]
	private sealed class <Simulate>d__31 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001619")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400161A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x170003D9")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60016D7")]
			[Address(RVA = "0x108A074", Offset = "0x108A074", VA = "0x108A074", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003DA")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60016D9")]
			[Address(RVA = "0x108A0DC", Offset = "0x108A0DC", VA = "0x108A0DC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60016D4")]
		[Address(RVA = "0x108A02C", Offset = "0x108A02C", VA = "0x108A02C")]
		[DebuggerHidden]
		public <Simulate>d__31(int <>1__state)
		{
		}

		[Token(Token = "0x60016D5")]
		[Address(RVA = "0x108A058", Offset = "0x108A058", VA = "0x108A058", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60016D6")]
		[Address(RVA = "0x108A05C", Offset = "0x108A05C", VA = "0x108A05C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60016D8")]
		[Address(RVA = "0x108A07C", Offset = "0x108A07C", VA = "0x108A07C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400069C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	protected City city;

	[Token(Token = "0x400069D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected float[] current;

	[Token(Token = "0x400069E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	protected float[] previous;

	[Token(Token = "0x400069F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	protected Texture2D textureInternal;

	[Token(Token = "0x40006A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	protected bool isTextureDirty;

	[Token(Token = "0x40006A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	protected Color32[] textureData;

	[Token(Token = "0x40006A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6A9154", Offset = "0x6A9154")]
	private int <mapWidth>k__BackingField;

	[Token(Token = "0x40006A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6A9164", Offset = "0x6A9164")]
	private int <mapHeight>k__BackingField;

	[Token(Token = "0x170001FA")]
	public virtual string name
	{
		[Token(Token = "0x60009B0")]
		[Address(RVA = "0x106F7C0", Offset = "0x106F7C0", VA = "0x106F7C0", Slot = "8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170001FB")]
	public Texture2D visualiseTexture
	{
		[Token(Token = "0x60009B1")]
		[Address(RVA = "0x106F7E8", Offset = "0x106F7E8", VA = "0x106F7E8", Slot = "4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170001FC")]
	public virtual Texture2D secondaryTexture
	{
		[Token(Token = "0x60009B2")]
		[Address(RVA = "0x106F7F0", Offset = "0x106F7F0", VA = "0x106F7F0", Slot = "9")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170001FD")]
	public int mapWidth
	{
		[Token(Token = "0x60009B4")]
		[Address(RVA = "0x106F9BC", Offset = "0x106F9BC", VA = "0x106F9BC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6B0490", Offset = "0x6B0490")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60009B5")]
		[Address(RVA = "0x106F9C4", Offset = "0x106F9C4", VA = "0x106F9C4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6B04A0", Offset = "0x6B04A0")]
		private set
		{
		}
	}

	[Token(Token = "0x170001FE")]
	public int mapHeight
	{
		[Token(Token = "0x60009B6")]
		[Address(RVA = "0x106F9CC", Offset = "0x106F9CC", VA = "0x106F9CC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6B04B0", Offset = "0x6B04B0")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60009B7")]
		[Address(RVA = "0x106F9D4", Offset = "0x106F9D4", VA = "0x106F9D4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6B04C0", Offset = "0x6B04C0")]
		private set
		{
		}
	}

	[Token(Token = "0x170001FF")]
	protected virtual float minValue
	{
		[Token(Token = "0x60009B8")]
		[Address(RVA = "0x106F9DC", Offset = "0x106F9DC", VA = "0x106F9DC", Slot = "10")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000200")]
	protected virtual float maxValue
	{
		[Token(Token = "0x60009B9")]
		[Address(RVA = "0x106F9E4", Offset = "0x106F9E4", VA = "0x106F9E4", Slot = "11")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x60009AF")]
	[Address(RVA = "0x106F7B8", Offset = "0x106F7B8", VA = "0x106F7B8")]
	public float[] GetValues()
	{
		return null;
	}

	[Token(Token = "0x60009B3")]
	[Address(RVA = "0x106F7F8", Offset = "0x106F7F8", VA = "0x106F7F8", Slot = "7")]
	public void RefreshVisualiseTexture()
	{
	}

	[Token(Token = "0x60009BA")]
	[Address(RVA = "0x106F9EC", Offset = "0x106F9EC", VA = "0x106F9EC")]
	public void MarkDirty()
	{
	}

	[Token(Token = "0x60009BB")]
	[Address(RVA = "0x1060888", Offset = "0x1060888", VA = "0x1060888")]
	public InfluenceMap(City inCity)
	{
	}

	[Token(Token = "0x60009BC")]
	[Address(RVA = "0x106F808", Offset = "0x106F808", VA = "0x106F808")]
	protected void GenerateTexture()
	{
	}

	[Token(Token = "0x60009BD")]
	[Address(RVA = "0x106F9F8", Offset = "0x106F9F8", VA = "0x106F9F8")]
	protected void Flip()
	{
	}

	[Token(Token = "0x60009BE")]
	[Address(RVA = "0x106FA08", Offset = "0x106FA08", VA = "0x106FA08")]
	public float GetValue(int x, int y)
	{
		return default(float);
	}

	[Token(Token = "0x60009BF")]
	[Address(RVA = "0x106FA4C", Offset = "0x106FA4C", VA = "0x106FA4C", Slot = "12")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6B04D0", Offset = "0x6B04D0")]
	public virtual IEnumerator Simulate(float deltaTime)
	{
		return null;
	}

	[Token(Token = "0x60009C0")]
	[Address(RVA = "0x106FAAC", Offset = "0x106FAAC", VA = "0x106FAAC")]
	protected void BlurX(int kernelSize)
	{
	}

	[Token(Token = "0x60009C1")]
	[Address(RVA = "0x106FBAC", Offset = "0x106FBAC", VA = "0x106FBAC")]
	protected void BlurY(int kernelSize)
	{
	}

	[Token(Token = "0x60009C2")]
	[Address(RVA = "0x106FCB8", Offset = "0x106FCB8", VA = "0x106FCB8")]
	protected void BlurXMax(int kernelSize)
	{
	}

	[Token(Token = "0x60009C3")]
	[Address(RVA = "0x106FE60", Offset = "0x106FE60", VA = "0x106FE60")]
	protected void BlurYMax(int kernelSize)
	{
	}

	[Token(Token = "0x60009C4")]
	[Address(RVA = "0x1070014", Offset = "0x1070014", VA = "0x1070014")]
	protected void Blur(int kernelSize)
	{
	}

	[Token(Token = "0x60009C5")]
	[Address(RVA = "0x107014C", Offset = "0x107014C", VA = "0x107014C")]
	public void RestoreFromString(string stringData)
	{
	}

	[Token(Token = "0x60009C6")]
	[Address(RVA = "0x1070270", Offset = "0x1070270", VA = "0x1070270", Slot = "13")]
	public virtual void OnPostLoad()
	{
	}

	[Token(Token = "0x60009C7")]
	[Address(RVA = "0x1070274", Offset = "0x1070274", VA = "0x1070274", Slot = "14")]
	public virtual void Reset()
	{
	}
}
[Token(Token = "0x20000E8")]
public class LandValueMap : InfluenceMap
{
	[Token(Token = "0x200036C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6A8304", Offset = "0x6A8304")]
	private sealed class <Simulate>d__9 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400161B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400161C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x170003DB")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60016DD")]
			[Address(RVA = "0x108C4E4", Offset = "0x108C4E4", VA = "0x108C4E4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003DC")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60016DF")]
			[Address(RVA = "0x108C54C", Offset = "0x108C54C", VA = "0x108C54C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60016DA")]
		[Address(RVA = "0x108C49C", Offset = "0x108C49C", VA = "0x108C49C")]
		[DebuggerHidden]
		public <Simulate>d__9(int <>1__state)
		{
		}

		[Token(Token = "0x60016DB")]
		[Address(RVA = "0x108C4C8", Offset = "0x108C4C8", VA = "0x108C4C8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60016DC")]
		[Address(RVA = "0x108C4CC", Offset = "0x108C4CC", VA = "0x108C4CC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60016DE")]
		[Address(RVA = "0x108C4EC", Offset = "0x108C4EC", VA = "0x108C4EC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40006A4")]
	private const float currentWeight = 0.1f;

	[Token(Token = "0x40006A5")]
	private const float unspoiltValue = 0.1f;

	[Token(Token = "0x40006A6")]
	private const float waterValue = 0.5f;

	[Token(Token = "0x40006A7")]
	private const float crimeInfluence = -0.2f;

	[Token(Token = "0x40006A8")]
	private const float centroidProximityInfluence = 0.55f;

	[Token(Token = "0x40006A9")]
	private const float pollutionInfluence = -1f;

	[Token(Token = "0x40006AA")]
	private const float populationDensityInfluence = 0.25f;

	[Token(Token = "0x40006AB")]
	private const float treeValue = 0.2f;

	[Token(Token = "0x60009C8")]
	[Address(RVA = "0x108C434", Offset = "0x108C434", VA = "0x108C434")]
	public LandValueMap(City inCity)
	{
	}

	[Token(Token = "0x60009C9")]
	[Address(RVA = "0x108C43C", Offset = "0x108C43C", VA = "0x108C43C", Slot = "12")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6B0534", Offset = "0x6B0534")]
	public override IEnumerator Simulate(float deltaTime)
	{
		return null;
	}
}
[Token(Token = "0x20000E9")]
public class PollutionMap : InfluenceMap
{
	[Token(Token = "0x200036D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6A8314", Offset = "0x6A8314")]
	private sealed class <Simulate>d__2 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400161D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400161E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x170003DD")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60016E3")]
			[Address(RVA = "0x10FE44C", Offset = "0x10FE44C", VA = "0x10FE44C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003DE")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60016E5")]
			[Address(RVA = "0x10FE4B4", Offset = "0x10FE4B4", VA = "0x10FE4B4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60016E0")]
		[Address(RVA = "0x10FE404", Offset = "0x10FE404", VA = "0x10FE404")]
		[DebuggerHidden]
		public <Simulate>d__2(int <>1__state)
		{
		}

		[Token(Token = "0x60016E1")]
		[Address(RVA = "0x10FE430", Offset = "0x10FE430", VA = "0x10FE430", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60016E2")]
		[Address(RVA = "0x10FE434", Offset = "0x10FE434", VA = "0x10FE434", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60016E4")]
		[Address(RVA = "0x10FE454", Offset = "0x10FE454", VA = "0x10FE454", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40006AC")]
	private const float currentWeight = 0.1f;

	[Token(Token = "0x60009CA")]
	[Address(RVA = "0x10FE39C", Offset = "0x10FE39C", VA = "0x10FE39C")]
	public PollutionMap(City inCity)
	{
	}

	[Token(Token = "0x60009CB")]
	[Address(RVA = "0x10FE3A4", Offset = "0x10FE3A4", VA = "0x10FE3A4", Slot = "12")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6B0598", Offset = "0x6B0598")]
	public override IEnumerator Simulate(float deltaTime)
	{
		return null;
	}
}
[Token(Token = "0x20000EA")]
public class PopulationDensityMap : InfluenceMap
{
	[Token(Token = "0x200036E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6A8324", Offset = "0x6A8324")]
	private sealed class <Simulate>d__2 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400161F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001620")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001621")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PopulationDensityMap <>4__this;

		[Token(Token = "0x170003DF")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60016E9")]
			[Address(RVA = "0x10FE8DC", Offset = "0x10FE8DC", VA = "0x10FE8DC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003E0")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60016EB")]
			[Address(RVA = "0x10FE944", Offset = "0x10FE944", VA = "0x10FE944", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60016E6")]
		[Address(RVA = "0x10FE534", Offset = "0x10FE534", VA = "0x10FE534")]
		[DebuggerHidden]
		public <Simulate>d__2(int <>1__state)
		{
		}

		[Token(Token = "0x60016E7")]
		[Address(RVA = "0x10FE560", Offset = "0x10FE560", VA = "0x10FE560", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60016E8")]
		[Address(RVA = "0x10FE564", Offset = "0x10FE564", VA = "0x10FE564", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60016EA")]
		[Address(RVA = "0x10FE8E4", Offset = "0x10FE8E4", VA = "0x10FE8E4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40006AD")]
	private const float maxDensity = 1f;

	[Token(Token = "0x60009CC")]
	[Address(RVA = "0x10FE4BC", Offset = "0x10FE4BC", VA = "0x10FE4BC")]
	public PopulationDensityMap(City inCity)
	{
	}

	[Token(Token = "0x60009CD")]
	[Address(RVA = "0x10FE4C4", Offset = "0x10FE4C4", VA = "0x10FE4C4", Slot = "12")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6B05FC", Offset = "0x6B05FC")]
	public override IEnumerator Simulate(float deltaTime)
	{
		return null;
	}
}
[Token(Token = "0x20000EB")]
public class PortProximityMap : InfluenceMap
{
	[Token(Token = "0x200036F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6A8334", Offset = "0x6A8334")]
	private sealed class <Simulate>d__5 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001622")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001623")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001624")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PortProximityMap <>4__this;

		[Token(Token = "0x170003E1")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60016EF")]
			[Address(RVA = "0x10FEFB8", Offset = "0x10FEFB8", VA = "0x10FEFB8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003E2")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60016F1")]
			[Address(RVA = "0x10FF020", Offset = "0x10FF020", VA = "0x10FF020", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60016EC")]
		[Address(RVA = "0x10FEE10", Offset = "0x10FEE10", VA = "0x10FEE10")]
		[DebuggerHidden]
		public <Simulate>d__5(int <>1__state)
		{
		}

		[Token(Token = "0x60016ED")]
		[Address(RVA = "0x10FEE3C", Offset = "0x10FEE3C", VA = "0x10FEE3C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60016EE")]
		[Address(RVA = "0x10FEE40", Offset = "0x10FEE40", VA = "0x10FEE40", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60016F0")]
		[Address(RVA = "0x10FEFC0", Offset = "0x10FEFC0", VA = "0x10FEFC0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40006AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private List<int> roadProximity;

	[Token(Token = "0x60009CE")]
	[Address(RVA = "0x10FE94C", Offset = "0x10FE94C", VA = "0x10FE94C")]
	public PortProximityMap(City inCity)
	{
	}

	[Token(Token = "0x60009CF")]
	[Address(RVA = "0x10FE9CC", Offset = "0x10FE9CC", VA = "0x10FE9CC")]
	private void FillProximityList(RoadManager.Road road, int score = 0)
	{
	}

	[Token(Token = "0x60009D0")]
	[Address(RVA = "0x10FEB6C", Offset = "0x10FEB6C", VA = "0x10FEB6C")]
	public bool IsConnectedToPort(int x, int y)
	{
		return default(bool);
	}

	[Token(Token = "0x60009D1")]
	[Address(RVA = "0x10FED30", Offset = "0x10FED30", VA = "0x10FED30")]
	public bool IsConnectedToPort(BuildingInstance building)
	{
		return default(bool);
	}

	[Token(Token = "0x60009D2")]
	[Address(RVA = "0x10FEDA0", Offset = "0x10FEDA0", VA = "0x10FEDA0", Slot = "12")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6B0660", Offset = "0x6B0660")]
	public override IEnumerator Simulate(float deltaTime)
	{
		return null;
	}
}
[Token(Token = "0x20000EC")]
public class SandStormMap : InfluenceMap
{
	[Token(Token = "0x2000370")]
	public class Tile
	{
		[Token(Token = "0x4001625")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int particleSpawnMeshIndex;

		[Token(Token = "0x4001626")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public bool landscapeHasSandStorm;

		[Token(Token = "0x4001627")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x15")]
		public bool hasSandStorm;

		[Token(Token = "0x60016F2")]
		[Address(RVA = "0x1042B04", Offset = "0x1042B04", VA = "0x1042B04")]
		public Tile()
		{
		}
	}

	[Token(Token = "0x40006AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Tile[] tiles;

	[Token(Token = "0x40006B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private int[] treeCoverage;

	[Token(Token = "0x40006B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private int[] previewTreeCoverage;

	[Token(Token = "0x40006B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private bool isPreviewMode;

	[Token(Token = "0x40006B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Material sandStormMaterial;

	[Token(Token = "0x40006B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private ParticleSystem sandStormParticles;

	[Token(Token = "0x40006B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Mesh particlesShapeMesh;

	[Token(Token = "0x40006B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private List<Vector3> particleSpawnPositions;

	[Token(Token = "0x40006B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private List<int> particleSpawnMeshTriangles;

	[Token(Token = "0x17000201")]
	private bool showSandstormTileMap
	{
		[Token(Token = "0x60009D3")]
		[Address(RVA = "0x10428B8", Offset = "0x10428B8", VA = "0x10428B8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x60009D4")]
	[Address(RVA = "0x1042928", Offset = "0x1042928", VA = "0x1042928", Slot = "14")]
	public override void Reset()
	{
	}

	[Token(Token = "0x60009D5")]
	[Address(RVA = "0x10431BC", Offset = "0x10431BC", VA = "0x10431BC")]
	public SandStormMap(City inCity)
	{
	}

	[Token(Token = "0x60009D6")]
	[Address(RVA = "0x1043804", Offset = "0x1043804", VA = "0x1043804")]
	public bool HasSandStorm(int x, int y)
	{
		return default(bool);
	}

	[Token(Token = "0x60009D7")]
	[Address(RVA = "0x1043884", Offset = "0x1043884", VA = "0x1043884")]
	public bool HasSandStorm(int x, int y, int width, int height)
	{
		return default(bool);
	}

	[Token(Token = "0x60009D8")]
	[Address(RVA = "0x1043924", Offset = "0x1043924", VA = "0x1043924")]
	public bool HasSandstormInPreviewAndCurrent(int x, int y, int width, int height)
	{
		return default(bool);
	}

	[Token(Token = "0x60009D9")]
	[Address(RVA = "0x1043A08", Offset = "0x1043A08", VA = "0x1043A08")]
	public bool HasSandstormInPreview(int x, int y, int width, int height)
	{
		return default(bool);
	}

	[Token(Token = "0x60009DA")]
	[Address(RVA = "0x1043ACC", Offset = "0x1043ACC", VA = "0x1043ACC")]
	public void BeginPreviewChanges()
	{
	}

	[Token(Token = "0x60009DB")]
	[Address(RVA = "0x1043AD8", Offset = "0x1043AD8", VA = "0x1043AD8")]
	public void EndPreviewChanges()
	{
	}

	[Token(Token = "0x60009DC")]
	[Address(RVA = "0x1043AE0", Offset = "0x1043AE0", VA = "0x1043AE0")]
	public void ClearPreview()
	{
	}

	[Token(Token = "0x60009DD")]
	[Address(RVA = "0x1043B04", Offset = "0x1043B04", VA = "0x1043B04")]
	public void OnTreePlaced(int x, int y, int radius)
	{
	}

	[Token(Token = "0x60009DE")]
	[Address(RVA = "0x1043C44", Offset = "0x1043C44", VA = "0x1043C44")]
	public void OnTreeRemoved(int x, int y, int radius)
	{
	}

	[Token(Token = "0x60009DF")]
	[Address(RVA = "0x1043B6C", Offset = "0x1043B6C", VA = "0x1043B6C")]
	private void AdjustTreeCoverage(int x, int y, int radius, int delta)
	{
	}

	[Token(Token = "0x60009E0")]
	[Address(RVA = "0x1042B14", Offset = "0x1042B14", VA = "0x1042B14")]
	private void UpdateRegion(int x, int y, int width, int height, bool forceUpdate = false)
	{
	}

	[Token(Token = "0x60009E1")]
	[Address(RVA = "0x1043CAC", Offset = "0x1043CAC", VA = "0x1043CAC", Slot = "13")]
	public override void OnPostLoad()
	{
	}

	[Token(Token = "0x60009E2")]
	[Address(RVA = "0x10440FC", Offset = "0x10440FC", VA = "0x10440FC")]
	public void DebugDump()
	{
	}
}
[Token(Token = "0x20000ED")]
public class SpecialBehaviourMap
{
	[Token(Token = "0x2000371")]
	public class SingleBehaviourMap
	{
		[Token(Token = "0x4001628")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int[] map;

		[Token(Token = "0x60016F3")]
		[Address(RVA = "0xFEF1F8", Offset = "0xFEF1F8", VA = "0xFEF1F8")]
		public SingleBehaviourMap(int mapWidth, int mapHeight)
		{
		}

		[Token(Token = "0x60016F4")]
		[Address(RVA = "0xFEF300", Offset = "0xFEF300", VA = "0xFEF300")]
		public void Reset()
		{
		}
	}

	[Token(Token = "0x2000372")]
	private delegate bool BehaviourEffectsBuildingDelegate(BuildingInstance building);

	[Serializable]
	[Token(Token = "0x2000373")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6A8344", Offset = "0x6A8344")]
	private sealed class <>c
	{
		[Token(Token = "0x4001629")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x400162A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static BehaviourEffectsBuildingDelegate <>9__17_0;

		[Token(Token = "0x400162B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static BehaviourEffectsBuildingDelegate <>9__17_1;

		[Token(Token = "0x400162C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static BehaviourEffectsBuildingDelegate <>9__17_2;

		[Token(Token = "0x60016FA")]
		[Address(RVA = "0xFEFF5C", Offset = "0xFEFF5C", VA = "0xFEFF5C")]
		public <>c()
		{
		}

		[Token(Token = "0x60016FB")]
		[Address(RVA = "0xFEFF64", Offset = "0xFEFF64", VA = "0xFEFF64")]
		internal bool <GetBuildingEffectPredicate>b__17_0(BuildingInstance building)
		{
			return default(bool);
		}

		[Token(Token = "0x60016FC")]
		[Address(RVA = "0xFEFF90", Offset = "0xFEFF90", VA = "0xFEFF90")]
		internal bool <GetBuildingEffectPredicate>b__17_1(BuildingInstance building)
		{
			return default(bool);
		}

		[Token(Token = "0x60016FD")]
		[Address(RVA = "0xFEFFBC", Offset = "0xFEFFBC", VA = "0xFEFFBC")]
		internal bool <GetBuildingEffectPredicate>b__17_2(BuildingInstance building)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x40006B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public List<SingleBehaviourMap> behaviourMaps;

	[Token(Token = "0x40006B9")]
	public const int numBehaviourMaps = 11;

	[Token(Token = "0x40006BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private City city;

	[Token(Token = "0x17000202")]
	private int mapWidth
	{
		[Token(Token = "0x60009E3")]
		[Address(RVA = "0xFEF0A0", Offset = "0xFEF0A0", VA = "0xFEF0A0")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000203")]
	private int mapHeight
	{
		[Token(Token = "0x60009E4")]
		[Address(RVA = "0xFEF0BC", Offset = "0xFEF0BC", VA = "0xFEF0BC")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x60009E5")]
	[Address(RVA = "0xFEF0D8", Offset = "0xFEF0D8", VA = "0xFEF0D8")]
	public SpecialBehaviourMap(City inCity)
	{
	}

	[Token(Token = "0x60009E6")]
	[Address(RVA = "0xFEF26C", Offset = "0xFEF26C", VA = "0xFEF26C")]
	public void Reset()
	{
	}

	[Token(Token = "0x60009E7")]
	[Address(RVA = "0xFEF324", Offset = "0xFEF324", VA = "0xFEF324")]
	private SingleBehaviourMap GetMap(BuildingInfo.SpecialBehaviour behaviour)
	{
		return null;
	}

	[Token(Token = "0x60009E8")]
	[Address(RVA = "0xFEF43C", Offset = "0xFEF43C", VA = "0xFEF43C")]
	public static int BehaviourEnumToIndex(BuildingInfo.SpecialBehaviour behaviour)
	{
		return default(int);
	}

	[Token(Token = "0x60009E9")]
	[Address(RVA = "0xFEF478", Offset = "0xFEF478", VA = "0xFEF478")]
	public int GetInfluence(BuildingInfo.SpecialBehaviour behaviour, int x, int y)
	{
		return default(int);
	}

	[Token(Token = "0x60009EA")]
	[Address(RVA = "0xFEF4F0", Offset = "0xFEF4F0", VA = "0xFEF4F0")]
	public bool IsInfluenced(BuildingInfo.SpecialBehaviour behaviour, int x, int y, int width, int height)
	{
		return default(bool);
	}

	[Token(Token = "0x60009EB")]
	[Address(RVA = "0xFEF5D8", Offset = "0xFEF5D8", VA = "0xFEF5D8")]
	public int GetInfluence(BuildingInfo.SpecialBehaviour behaviour, BuildingInstance building)
	{
		return default(int);
	}

	[Token(Token = "0x60009EC")]
	[Address(RVA = "0xFEF64C", Offset = "0xFEF64C", VA = "0xFEF64C")]
	public int GetInfluence(BuildingInfo.SpecialBehaviour behaviour, int x, int y, int width, int height)
	{
		return default(int);
	}

	[Token(Token = "0x60009ED")]
	[Address(RVA = "0xFEF730", Offset = "0xFEF730", VA = "0xFEF730")]
	private BehaviourEffectsBuildingDelegate GetBuildingEffectPredicate(BuildingInfo.SpecialBehaviour behaviour)
	{
		return null;
	}

	[Token(Token = "0x60009EE")]
	[Address(RVA = "0xFEF970", Offset = "0xFEF970", VA = "0xFEF970")]
	private bool IsPositiveEffect(BuildingInfo.SpecialBehaviour behaviour, int delta)
	{
		return default(bool);
	}

	[Token(Token = "0x60009EF")]
	[Address(RVA = "0xFEF9D4", Offset = "0xFEF9D4", VA = "0xFEF9D4")]
	public void ModifyInfluence(BuildingInstance building, int delta, bool fromSaveData)
	{
	}

	[Token(Token = "0x60009F0")]
	[Address(RVA = "0xFEFA84", Offset = "0xFEFA84", VA = "0xFEFA84")]
	private void ModifyInfluence(BuildingInstance building, BuildingInfo.SpecialBehaviour behaviour, int delta)
	{
	}

	[Token(Token = "0x60009F1")]
	[Address(RVA = "0xFEFCE0", Offset = "0xFEFCE0", VA = "0xFEFCE0")]
	public static bool InInfluenceRange(BuildingInstance building, int x, int y)
	{
		return default(bool);
	}

	[Token(Token = "0x60009F2")]
	[Address(RVA = "0xFEFE08", Offset = "0xFEFE08", VA = "0xFEFE08")]
	public static bool InInfluenceRange(BuildingInstance sourceBuilding, BuildingInstance otherBuilding)
	{
		return default(bool);
	}

	[Token(Token = "0x60009F3")]
	[Address(RVA = "0xFEFEBC", Offset = "0xFEFEBC", VA = "0xFEFEBC")]
	public float ApplySpecialEffect(BuildingInfo.SpecialBehaviour specialBehaviour, int x, int y, float baseAmount, float boostPercentage)
	{
		return default(float);
	}
}
[Token(Token = "0x20000EE")]
public class TrafficDensityMap : InfluenceMap
{
	[Token(Token = "0x2000374")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6A8354", Offset = "0x6A8354")]
	private sealed class <Simulate>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400162D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400162E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400162F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TrafficDensityMap <>4__this;

		[Token(Token = "0x170003E3")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001701")]
			[Address(RVA = "0x107DBD4", Offset = "0x107DBD4", VA = "0x107DBD4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003E4")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001703")]
			[Address(RVA = "0x107DC3C", Offset = "0x107DC3C", VA = "0x107DC3C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60016FE")]
		[Address(RVA = "0x107D928", Offset = "0x107D928", VA = "0x107D928")]
		[DebuggerHidden]
		public <Simulate>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x60016FF")]
		[Address(RVA = "0x107D954", Offset = "0x107D954", VA = "0x107D954", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001700")]
		[Address(RVA = "0x107D958", Offset = "0x107D958", VA = "0x107D958", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001702")]
		[Address(RVA = "0x107DBDC", Offset = "0x107DBDC", VA = "0x107DBDC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40006BB")]
	private const float currentWeight = 0.1f;

	[Token(Token = "0x17000204")]
	protected override float minValue
	{
		[Token(Token = "0x60009F5")]
		[Address(RVA = "0x107D8A8", Offset = "0x107D8A8", VA = "0x107D8A8", Slot = "10")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000205")]
	protected override float maxValue
	{
		[Token(Token = "0x60009F6")]
		[Address(RVA = "0x107D8B0", Offset = "0x107D8B0", VA = "0x107D8B0", Slot = "11")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x60009F4")]
	[Address(RVA = "0x107D8A0", Offset = "0x107D8A0", VA = "0x107D8A0")]
	public TrafficDensityMap(City inCity)
	{
	}

	[Token(Token = "0x60009F7")]
	[Address(RVA = "0x107D8B8", Offset = "0x107D8B8", VA = "0x107D8B8", Slot = "12")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6B06C4", Offset = "0x6B06C4")]
	public override IEnumerator Simulate(float deltaTime)
	{
		return null;
	}
}
[Token(Token = "0x20000EF")]
public class WindMap : InfluenceMap
{
	[Token(Token = "0x17000206")]
	public Vector3 windDirection
	{
		[Token(Token = "0x60009F8")]
		[Address(RVA = "0x10259A8", Offset = "0x10259A8", VA = "0x10259A8")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x60009F9")]
	[Address(RVA = "0x10259E8", Offset = "0x10259E8", VA = "0x10259E8")]
	public WindMap(City inCity)
	{
	}

	[Token(Token = "0x60009FA")]
	[Address(RVA = "0x1025A10", Offset = "0x1025A10", VA = "0x1025A10")]
	private void GenerateWindValues()
	{
	}

	[Token(Token = "0x60009FB")]
	[Address(RVA = "0x1025EA4", Offset = "0x1025EA4", VA = "0x1025EA4", Slot = "14")]
	public override void Reset()
	{
	}
}
[Token(Token = "0x20000F0")]
public class ZoneProximityMap
{
	[Token(Token = "0x40006BC")]
	public const int reach = 2;

	[Token(Token = "0x40006BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private City city;

	[Token(Token = "0x40006BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private int[] values;

	[Token(Token = "0x17000207")]
	private int mapWidth
	{
		[Token(Token = "0x60009FC")]
		[Address(RVA = "0x117BD28", Offset = "0x117BD28", VA = "0x117BD28")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000208")]
	private int mapHeight
	{
		[Token(Token = "0x60009FD")]
		[Address(RVA = "0x117BD44", Offset = "0x117BD44", VA = "0x117BD44")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x60009FE")]
	[Address(RVA = "0x117BD60", Offset = "0x117BD60", VA = "0x117BD60")]
	public ZoneProximityMap(City inCity)
	{
	}

	[Token(Token = "0x60009FF")]
	[Address(RVA = "0x117BE04", Offset = "0x117BE04", VA = "0x117BE04")]
	public void Reset()
	{
	}

	[Token(Token = "0x6000A00")]
	[Address(RVA = "0x117AE54", Offset = "0x117AE54", VA = "0x117AE54")]
	public void Modify(int x, int y, int delta)
	{
	}

	[Token(Token = "0x6000A01")]
	[Address(RVA = "0x117BE28", Offset = "0x117BE28", VA = "0x117BE28")]
	public int GetValue(int x, int y)
	{
		return default(int);
	}

	[Token(Token = "0x6000A02")]
	[Address(RVA = "0x117BE94", Offset = "0x117BE94", VA = "0x117BE94")]
	public bool IsAffected(int x, int y, int width, int height)
	{
		return default(bool);
	}

	[Token(Token = "0x6000A03")]
	[Address(RVA = "0x117BF64", Offset = "0x117BF64", VA = "0x117BF64")]
	public void InitFromCity(ZoneManager.ZoneType zoneType)
	{
	}
}
[Token(Token = "0x20000F1")]
public class ZoneScoreMap : InfluenceMap
{
	[Token(Token = "0x2000375")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6A8364", Offset = "0x6A8364")]
	private sealed class <Simulate>d__3 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001630")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001631")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x170003E5")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001707")]
			[Address(RVA = "0x117D478", Offset = "0x117D478", VA = "0x117D478", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003E6")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001709")]
			[Address(RVA = "0x117D4E0", Offset = "0x117D4E0", VA = "0x117D4E0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001704")]
		[Address(RVA = "0x117D430", Offset = "0x117D430", VA = "0x117D430")]
		[DebuggerHidden]
		public <Simulate>d__3(int <>1__state)
		{
		}

		[Token(Token = "0x6001705")]
		[Address(RVA = "0x117D45C", Offset = "0x117D45C", VA = "0x117D45C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001706")]
		[Address(RVA = "0x117D460", Offset = "0x117D460", VA = "0x117D460", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001708")]
		[Address(RVA = "0x117D480", Offset = "0x117D480", VA = "0x117D480", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40006BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private ZoneManager.ZoneType zoneType;

	[Token(Token = "0x40006C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private ZoneScoreMapWeights weights;

	[Token(Token = "0x6000A04")]
	[Address(RVA = "0x117D394", Offset = "0x117D394", VA = "0x117D394")]
	public ZoneScoreMap(City inCity, ZoneManager.ZoneType inZoneType, ZoneScoreMapWeights inWeights)
	{
	}

	[Token(Token = "0x6000A05")]
	[Address(RVA = "0x117D3D0", Offset = "0x117D3D0", VA = "0x117D3D0", Slot = "12")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6B0728", Offset = "0x6B0728")]
	public override IEnumerator Simulate(float deltaTime)
	{
		return null;
	}
}
[Token(Token = "0x20000F2")]
public class ZoneScoreMapWeights : ScriptableObject
{
	[Serializable]
	[Token(Token = "0x2000376")]
	public class PositiveWeights
	{
		[Token(Token = "0x4001632")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x6AD528", Offset = "0x6AD528")]
		public float landValue;

		[Token(Token = "0x4001633")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x6AD540", Offset = "0x6AD540")]
		public float residentialZoneProximity;

		[Token(Token = "0x4001634")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x6AD558", Offset = "0x6AD558")]
		public float commercialZoneProximity;

		[Token(Token = "0x4001635")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x6AD570", Offset = "0x6AD570")]
		public float industrialZoneProximity;

		[Token(Token = "0x4001636")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x6AD588", Offset = "0x6AD588")]
		public float policeCoverage;

		[Token(Token = "0x4001637")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x6AD5A0", Offset = "0x6AD5A0")]
		public float fireCoverage;

		[Token(Token = "0x4001638")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x6AD5B8", Offset = "0x6AD5B8")]
		public float healthCoverage;

		[Token(Token = "0x4001639")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x6AD5D0", Offset = "0x6AD5D0")]
		public float schoolCoverage;

		[Token(Token = "0x400163A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x6AD5E8", Offset = "0x6AD5E8")]
		public float portProximity;

		[Token(Token = "0x600170A")]
		[Address(RVA = "0x117D4F8", Offset = "0x117D4F8", VA = "0x117D4F8")]
		public PositiveWeights()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x2000377")]
	public class NegativeWeights
	{
		[Token(Token = "0x400163B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x6AD600", Offset = "0x6AD600")]
		public float pollution;

		[Token(Token = "0x400163C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x6AD618", Offset = "0x6AD618")]
		public float trafficDensity;

		[Token(Token = "0x400163D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x6AD630", Offset = "0x6AD630")]
		public float crime;

		[Token(Token = "0x600170B")]
		[Address(RVA = "0x117D4F0", Offset = "0x117D4F0", VA = "0x117D4F0")]
		public NegativeWeights()
		{
		}
	}

	[Token(Token = "0x40006C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public PositiveWeights positive;

	[Token(Token = "0x40006C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public NegativeWeights negative;

	[Token(Token = "0x6000A06")]
	[Address(RVA = "0x117D4E8", Offset = "0x117D4E8", VA = "0x117D4E8")]
	public ZoneScoreMapWeights()
	{
	}
}
[Token(Token = "0x20000F3")]
public class LoanManager : SingletonBehaviour<LoanManager>
{
	[Serializable]
	[Token(Token = "0x2000378")]
	public class LoanType
	{
		[Token(Token = "0x400163E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int amount;

		[Token(Token = "0x400163F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int interestRate;

		[Token(Token = "0x4001640")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int length;

		[Token(Token = "0x170003E7")]
		public int totalCost
		{
			[Token(Token = "0x600170C")]
			[Address(RVA = "0x1094AA8", Offset = "0x1094AA8", VA = "0x1094AA8")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170003E8")]
		public int weeklyCost
		{
			[Token(Token = "0x600170D")]
			[Address(RVA = "0x1094A28", Offset = "0x1094A28", VA = "0x1094A28")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x600170E")]
		[Address(RVA = "0x1094AD0", Offset = "0x1094AD0", VA = "0x1094AD0")]
		public LoanType()
		{
		}
	}

	[Token(Token = "0x40006C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public LoanType[] loanTypes;

	[Token(Token = "0x40006C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[HideInInspector]
	public int[] loanWeeksRemaining;

	[Token(Token = "0x6000A07")]
	[Address(RVA = "0x10948F8", Offset = "0x10948F8", VA = "0x10948F8", Slot = "4")]
	public override void Awake()
	{
	}

	[Token(Token = "0x6000A08")]
	[Address(RVA = "0x1094970", Offset = "0x1094970", VA = "0x1094970")]
	public void ToggleLoan(int loanIndex)
	{
	}

	[Token(Token = "0x6000A09")]
	[Address(RVA = "0x1094974", Offset = "0x1094974", VA = "0x1094974")]
	public int GetWeeklyPayment()
	{
		return default(int);
	}

	[Token(Token = "0x6000A0A")]
	[Address(RVA = "0x1094A58", Offset = "0x1094A58", VA = "0x1094A58")]
	public LoanManager()
	{
	}
}
[Token(Token = "0x20000F4")]
public static class PathFinder
{
	[Token(Token = "0x2000379")]
	public class Path
	{
		[Token(Token = "0x4001641")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int startX;

		[Token(Token = "0x4001642")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int startY;

		[Token(Token = "0x4001643")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int endX;

		[Token(Token = "0x4001644")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int endY;

		[Token(Token = "0x4001645")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int endBuildingX;

		[Token(Token = "0x4001646")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public int endBuildingY;

		[Token(Token = "0x4001647")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public List<short> roads;

		[Token(Token = "0x4001648")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public int estimatedDistance;

		[Token(Token = "0x600170F")]
		[Address(RVA = "0xFD1724", Offset = "0xFD1724", VA = "0xFD1724")]
		public BuildingInstance GetEndBuilding(City city)
		{
			return null;
		}

		[Token(Token = "0x6001710")]
		[Address(RVA = "0xFD15B0", Offset = "0xFD15B0", VA = "0xFD15B0")]
		public Path()
		{
		}
	}

	[Token(Token = "0x200037A")]
	private class PathNode
	{
		[Token(Token = "0x4001649")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public short index;

		[Token(Token = "0x400164A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int hScore;

		[Token(Token = "0x400164B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int gScore;

		[Token(Token = "0x400164C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PathNode parent;

		[Token(Token = "0x170003E9")]
		public int fScore
		{
			[Token(Token = "0x6001712")]
			[Address(RVA = "0xFD162C", Offset = "0xFD162C", VA = "0xFD162C")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x6001711")]
		[Address(RVA = "0xFD14DC", Offset = "0xFD14DC", VA = "0xFD14DC")]
		public PathNode(short index, PathNode parent, int gScore, int hScore)
		{
		}
	}

	[Token(Token = "0x40006C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static List<PathNode> openSet;

	[Token(Token = "0x40006C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static List<PathNode> closedSet;

	[Token(Token = "0x40006C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static List<PathNode> pathNodePool;

	[Token(Token = "0x40006C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static Path temporaryPath;

	[Token(Token = "0x6000A0B")]
	[Address(RVA = "0xFD02F0", Offset = "0xFD02F0", VA = "0xFD02F0")]
	private static int GetHeuristic(int x, int y, int targetX, int targetY)
	{
		return default(int);
	}

	[Token(Token = "0x6000A0C")]
	[Address(RVA = "0xFD0310", Offset = "0xFD0310", VA = "0xFD0310")]
	public static Path FindPath(BuildingInstance start, BuildingInstance end, [Optional] Path result)
	{
		return null;
	}

	[Token(Token = "0x6000A0D")]
	[Address(RVA = "0xFD03DC", Offset = "0xFD03DC", VA = "0xFD03DC")]
	public static Path FindPath(City city, int startX, int startY, BuildingInstance end, [Optional] Path result)
	{
		return null;
	}

	[Token(Token = "0x6000A0E")]
	[Address(RVA = "0xFD0F60", Offset = "0xFD0F60", VA = "0xFD0F60")]
	public static bool AreConnected(BuildingInstance start, BuildingInstance end)
	{
		return default(bool);
	}

	[Token(Token = "0x6000A0F")]
	[Address(RVA = "0xFD1028", Offset = "0xFD1028", VA = "0xFD1028")]
	public static bool AreConnected(City city, int startX, int startY, BuildingInstance end)
	{
		return default(bool);
	}

	[Token(Token = "0x6000A10")]
	[Address(RVA = "0xFD10E4", Offset = "0xFD10E4", VA = "0xFD10E4")]
	public static bool AreConnected(City city, int startX, int startY, int endX, int endY)
	{
		return default(bool);
	}

	[Token(Token = "0x6000A11")]
	[Address(RVA = "0xFD1378", Offset = "0xFD1378", VA = "0xFD1378")]
	private static PathNode CreatePathNode(short index, PathNode parent, int gScore, int hScore)
	{
		return null;
	}

	[Token(Token = "0x6000A12")]
	[Address(RVA = "0xFD152C", Offset = "0xFD152C", VA = "0xFD152C")]
	private static void ReturnToPool(PathNode node)
	{
	}

	[Token(Token = "0x6000A13")]
	[Address(RVA = "0xFD04B8", Offset = "0xFD04B8", VA = "0xFD04B8")]
	public static Path FindPath(City city, int startX, int startY, int endX, int endY, [Optional] Path result)
	{
		return null;
	}
}
[Token(Token = "0x20000F5")]
public interface ISimulationModule
{
	[Token(Token = "0x17000209")]
	GameObject gameObject
	{
		[Token(Token = "0x6000A16")]
		get;
	}

	[Token(Token = "0x6000A15")]
	IEnumerator Simulate(float deltaTime);
}
[Token(Token = "0x20000F6")]
public class SimulationScheduler : CityModule
{
	[Token(Token = "0x200037B")]
	public enum SimulationSpeed
	{
		[Token(Token = "0x400164E")]
		Paused,
		[Token(Token = "0x400164F")]
		Normal,
		[Token(Token = "0x4001650")]
		Double,
		[Token(Token = "0x4001651")]
		Triple,
		[Token(Token = "0x4001652")]
		DebugSlomo,
		[Token(Token = "0x4001653")]
		Debug20X
	}

	[Token(Token = "0x200037C")]
	private class SimModule
	{
		[Token(Token = "0x4001654")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string moduleName;

		[Token(Token = "0x4001655")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ISimulationModule moduleInterface;

		[Token(Token = "0x4001656")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public IEnumerator state;

		[Token(Token = "0x4001657")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public double lastUpdateTime;

		[Token(Token = "0x4001658")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public int numSkips;

		[Token(Token = "0x170003EA")]
		public bool isSleeping
		{
			[Token(Token = "0x6001713")]
			[Address(RVA = "0xFE62B4", Offset = "0xFE62B4", VA = "0xFE62B4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001714")]
		[Address(RVA = "0xFE5BA0", Offset = "0xFE5BA0", VA = "0xFE5BA0")]
		public SimModule()
		{
		}
	}

	[Token(Token = "0x200037D")]
	public delegate IEnumerator SimUpdateMethod(float deltaTime);

	[Token(Token = "0x200037E")]
	public class SimulationSchedulerSaveData : SaveSystem.ModuleData
	{
		[Token(Token = "0x4001659")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public double simulationTime;

		[Token(Token = "0x400165A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public double realTimePassed;

		[Token(Token = "0x400165B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public DateTime simulationDate;

		[Token(Token = "0x6001719")]
		[Address(RVA = "0xFE6580", Offset = "0xFE6580", VA = "0xFE6580")]
		public SimulationSchedulerSaveData()
		{
		}
	}

	[Token(Token = "0x40006C9")]
	private const int sleepingModuleSkips = 10;

	[Token(Token = "0x40006CA")]
	public const float secondsPerDay = 3f;

	[Token(Token = "0x40006CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6A9184", Offset = "0x6A9184")]
	private double <realTimePassed>k__BackingField;

	[Token(Token = "0x40006CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6A9194", Offset = "0x6A9194")]
	private double <simulationTime>k__BackingField;

	[Token(Token = "0x40006CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6A91A4", Offset = "0x6A91A4")]
	private SimulationSpeed <simulationSpeed>k__BackingField;

	[Token(Token = "0x40006CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float[] simulationSpeeds;

	[Token(Token = "0x40006CF")]
	private const int maxCyclesPerModule = 60;

	[Token(Token = "0x40006D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private List<SimModule> modules;

	[Token(Token = "0x40006D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private int currentModuleIndex;

	[Token(Token = "0x40006D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private int currentModuleCycles;

	[Token(Token = "0x40006D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private int simulationTimeId;

	[Token(Token = "0x1700020A")]
	public static float secondsPerWeek
	{
		[Token(Token = "0x6000A17")]
		[Address(RVA = "0xFE5520", Offset = "0xFE5520", VA = "0xFE5520")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x1700020B")]
	public float dayProgress
	{
		[Token(Token = "0x6000A18")]
		[Address(RVA = "0xFE5528", Offset = "0xFE5528", VA = "0xFE5528")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x1700020C")]
	public float weekProgress
	{
		[Token(Token = "0x6000A19")]
		[Address(RVA = "0xFE55B0", Offset = "0xFE55B0", VA = "0xFE55B0")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x1700020D")]
	public int currentWeek
	{
		[Token(Token = "0x6000A1A")]
		[Address(RVA = "0xFE5638", Offset = "0xFE5638", VA = "0xFE5638")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x1700020E")]
	public bool isPausedByMenu
	{
		[Token(Token = "0x6000A1B")]
		[Address(RVA = "0xFE5650", Offset = "0xFE5650", VA = "0xFE5650")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700020F")]
	public double realTimePassed
	{
		[Token(Token = "0x6000A1C")]
		[Address(RVA = "0xFE57A8", Offset = "0xFE57A8", VA = "0xFE57A8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6B078C", Offset = "0x6B078C")]
		get
		{
			return default(double);
		}
		[Token(Token = "0x6000A1D")]
		[Address(RVA = "0xFE57B0", Offset = "0xFE57B0", VA = "0xFE57B0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6B079C", Offset = "0x6B079C")]
		private set
		{
		}
	}

	[Token(Token = "0x17000210")]
	public double simulationTime
	{
		[Token(Token = "0x6000A1E")]
		[Address(RVA = "0xFE57B8", Offset = "0xFE57B8", VA = "0xFE57B8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6B07AC", Offset = "0x6B07AC")]
		get
		{
			return default(double);
		}
		[Token(Token = "0x6000A1F")]
		[Address(RVA = "0xFE57C0", Offset = "0xFE57C0", VA = "0xFE57C0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6B07BC", Offset = "0x6B07BC")]
		private set
		{
		}
	}

	[Token(Token = "0x17000211")]
	public float simulationTimeForAnalytics
	{
		[Token(Token = "0x6000A20")]
		[Address(RVA = "0xFE57C8", Offset = "0xFE57C8", VA = "0xFE57C8")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000212")]
	public SimulationSpeed simulationSpeed
	{
		[Token(Token = "0x6000A21")]
		[Address(RVA = "0xFE57E0", Offset = "0xFE57E0", VA = "0xFE57E0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6B07CC", Offset = "0x6B07CC")]
		get
		{
			return default(SimulationSpeed);
		}
		[Token(Token = "0x6000A22")]
		[Address(RVA = "0xFE57E8", Offset = "0xFE57E8", VA = "0xFE57E8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6B07DC", Offset = "0x6B07DC")]
		set
		{
		}
	}

	[Token(Token = "0x17000213")]
	public float simulationDeltaTime
	{
		[Token(Token = "0x6000A23")]
		[Address(RVA = "0xFE57F0", Offset = "0xFE57F0", VA = "0xFE57F0")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000214")]
	public float simulationSpeedMultiplier
	{
		[Token(Token = "0x6000A24")]
		[Address(RVA = "0xFE582C", Offset = "0xFE582C", VA = "0xFE582C")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000215")]
	public override Type saveModuleDataType
	{
		[Token(Token = "0x6000A29")]
		[Address(RVA = "0xFE6498", Offset = "0xFE6498", VA = "0xFE6498", Slot = "4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000A25")]
	[Address(RVA = "0xFE5900", Offset = "0xFE5900", VA = "0xFE5900")]
	private void Start()
	{
	}

	[Token(Token = "0x6000A26")]
	[Address(RVA = "0xFE5BA8", Offset = "0xFE5BA8", VA = "0xFE5BA8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000A27")]
	[Address(RVA = "0xFE5D9C", Offset = "0xFE5D9C", VA = "0xFE5D9C")]
	public void Simulate(float deltaTime)
	{
	}

	[Token(Token = "0x6000A28")]
	[Address(RVA = "0xFE6380", Offset = "0xFE6380", VA = "0xFE6380")]
	private void NextModule()
	{
	}

	[Token(Token = "0x6000A2A")]
	[Address(RVA = "0xFE6508", Offset = "0xFE6508", VA = "0xFE6508", Slot = "5")]
	public override SaveSystem.ModuleData OnSave()
	{
		return null;
	}

	[Token(Token = "0x6000A2B")]
	[Address(RVA = "0xFE6588", Offset = "0xFE6588", VA = "0xFE6588", Slot = "6")]
	public override void OnLoad(SaveSystem.SaveGame saveGame, SaveSystem.ModuleData data)
	{
	}

	[Token(Token = "0x6000A2C")]
	[Address(RVA = "0xFE66D8", Offset = "0xFE66D8", VA = "0xFE66D8", Slot = "10")]
	public override void OnResetProgress()
	{
	}

	[Token(Token = "0x6000A2D")]
	[Address(RVA = "0xFE67E0", Offset = "0xFE67E0", VA = "0xFE67E0")]
	public SimulationScheduler()
	{
	}
}
[Token(Token = "0x20000F7")]
public class TerrainGenerator
{
	[Token(Token = "0x200037F")]
	public enum TileType : byte
	{
		[Token(Token = "0x400165D")]
		Water,
		[Token(Token = "0x400165E")]
		Land,
		[Token(Token = "0x400165F")]
		Beach,
		[Token(Token = "0x4001660")]
		Grass
	}

	[Token(Token = "0x40006D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private int width;

	[Token(Token = "0x40006D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private int height;

	[Token(Token = "0x40006D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private TileType[] data;

	[Token(Token = "0x6000A2E")]
	[Address(RVA = "0x107059C", Offset = "0x107059C", VA = "0x107059C")]
	public TerrainGenerator(int width, int height)
	{
	}

	[Token(Token = "0x6000A2F")]
	[Address(RVA = "0x1070614", Offset = "0x1070614", VA = "0x1070614")]
	public TileType GetTile(int x, int y)
	{
		return default(TileType);
	}

	[Token(Token = "0x6000A30")]
	[Address(RVA = "0x1070658", Offset = "0x1070658", VA = "0x1070658")]
	public bool Crop(int targetWidth, int targetHeight)
	{
		return default(bool);
	}

	[Token(Token = "0x6000A31")]
	[Address(RVA = "0x1070938", Offset = "0x1070938", VA = "0x1070938")]
	private int GetNeighbours(int x, int y, TileType edgeType1, TileType edgeType2)
	{
		return default(int);
	}

	[Token(Token = "0x6000A32")]
	[Address(RVA = "0x1070A7C", Offset = "0x1070A7C", VA = "0x1070A7C")]
	private void FillOcean(bool[] ocean, int x, int y)
	{
	}

	[Token(Token = "0x6000A33")]
	[Address(RVA = "0x1070B90", Offset = "0x1070B90", VA = "0x1070B90")]
	private int FillLakes()
	{
		return default(int);
	}

	[Token(Token = "0x6000A34")]
	[Address(RVA = "0x1070C8C", Offset = "0x1070C8C", VA = "0x1070C8C")]
	private void ErodeEdges(System.Random rnd, int changes)
	{
	}

	[Token(Token = "0x6000A35")]
	[Address(RVA = "0x1070DC0", Offset = "0x1070DC0", VA = "0x1070DC0")]
	public void Generate(int targetSize)
	{
	}

	[Token(Token = "0x6000A36")]
	[Address(RVA = "0x1071474", Offset = "0x1071474", VA = "0x1071474")]
	public void DebugPrint()
	{
	}
}
[Token(Token = "0x20000F8")]
public class VehicleCollection : ScriptableObject
{
	[Serializable]
	[Token(Token = "0x2000380")]
	public class Vehicle
	{
		[Token(Token = "0x4001661")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public GameObject prefab;

		[Token(Token = "0x4001662")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x6AD648", Offset = "0x6AD648")]
		public float spawnChance;

		[Token(Token = "0x4001663")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ColourSwatch colourSwatch;

		[Token(Token = "0x600171A")]
		[Address(RVA = "0x1013540", Offset = "0x1013540", VA = "0x1013540")]
		public Vehicle()
		{
		}
	}

	[Token(Token = "0x40006D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<Vehicle> prefabs;

	[Token(Token = "0x6000A37")]
	[Address(RVA = "0x1013248", Offset = "0x1013248", VA = "0x1013248")]
	public GameObject Spawn()
	{
		return null;
	}

	[Token(Token = "0x6000A38")]
	[Address(RVA = "0x1013274", Offset = "0x1013274", VA = "0x1013274")]
	public GameObject Spawn(int randHash)
	{
		return null;
	}

	[Token(Token = "0x6000A39")]
	[Address(RVA = "0x1013538", Offset = "0x1013538", VA = "0x1013538")]
	public VehicleCollection()
	{
	}
}
[Token(Token = "0x20000F9")]
public class Boat : MonoBehaviour
{
	[Token(Token = "0x40006D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ParticleSystem wake;

	[Token(Token = "0x40006D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float distanceFromWaterSurface;

	[Token(Token = "0x40006DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float offsetScaler;

	[Token(Token = "0x6000A3A")]
	[Address(RVA = "0x10A9B00", Offset = "0x10A9B00", VA = "0x10A9B00")]
	private float SampleHeightAtPosition(Vector3 position)
	{
		return default(float);
	}

	[Token(Token = "0x6000A3B")]
	[Address(RVA = "0x10A9BDC", Offset = "0x10A9BDC", VA = "0x10A9BDC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000A3C")]
	[Address(RVA = "0x10A9F24", Offset = "0x10A9F24", VA = "0x10A9F24")]
	public Boat()
	{
	}
}
[Token(Token = "0x20000FA")]
public class CarInfo : MonoBehaviour
{
	[Token(Token = "0x40006DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Color[] colorVariations;

	[Token(Token = "0x40006DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int runtimeIndex;

	[Token(Token = "0x40006DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public CarManager.CarState runtimeState;

	[Token(Token = "0x40006DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float runtimeProgress;

	[Token(Token = "0x40006DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public bool isSirenEnabled;

	[Token(Token = "0x6000A3D")]
	[Address(RVA = "0x10DB840", Offset = "0x10DB840", VA = "0x10DB840")]
	public CarInfo()
	{
	}
}
[Token(Token = "0x20000FB")]
public class HangGlider : MonoBehaviour
{
	[Token(Token = "0x40006E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float glideSpeed;

	[Token(Token = "0x40006E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float directionAdjustSpeed;

	[Token(Token = "0x40006E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float targetNodeDistance;

	[Token(Token = "0x40006E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float landingDistance;

	[Token(Token = "0x40006E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private HangGliderStory story;

	[Token(Token = "0x40006E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private City city;

	[Token(Token = "0x40006E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int shippingLaneNodeIndex;

	[Token(Token = "0x40006E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6A91B4", Offset = "0x6A91B4")]
	private bool <isFlying>k__BackingField;

	[Token(Token = "0x40006E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Vector3 targetPosition;

	[Token(Token = "0x40006E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private float targetHeight;

	[Token(Token = "0x40006EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float bank;

	[Token(Token = "0x40006EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private bool isLanding;

	[Token(Token = "0x40006EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x55")]
	private bool isWaitingForLaunch;

	[Token(Token = "0x40006ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float timeWaitingForLaunch;

	[Token(Token = "0x40006EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public GazeTimer gazeTimer;

	[Token(Token = "0x17000216")]
	public bool isFlying
	{
		[Token(Token = "0x6000A3E")]
		[Address(RVA = "0x1065060", Offset = "0x1065060", VA = "0x1065060")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6B07EC", Offset = "0x6B07EC")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000A3F")]
		[Address(RVA = "0x1065068", Offset = "0x1065068", VA = "0x1065068")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6B07FC", Offset = "0x6B07FC")]
		private set
		{
		}
	}

	[Token(Token = "0x17000217")]
	private List<Vector3> nodes
	{
		[Token(Token = "0x6000A40")]
		[Address(RVA = "0x1065074", Offset = "0x1065074", VA = "0x1065074")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000A41")]
	[Address(RVA = "0x10650A4", Offset = "0x10650A4", VA = "0x10650A4")]
	public void Init(HangGliderStory story)
	{
	}

	[Token(Token = "0x6000A42")]
	[Address(RVA = "0x10655A4", Offset = "0x10655A4", VA = "0x10655A4")]
	private bool FindLandingPosition()
	{
		return default(bool);
	}

	[Token(Token = "0x6000A43")]
	[Address(RVA = "0x10652E8", Offset = "0x10652E8", VA = "0x10652E8")]
	private void CalculateTargetPosition(int nodeIndex)
	{
	}

	[Token(Token = "0x6000A44")]
	[Address(RVA = "0x106576C", Offset = "0x106576C", VA = "0x106576C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000A45")]
	[Address(RVA = "0x1065CA8", Offset = "0x1065CA8", VA = "0x1065CA8")]
	public HangGlider()
	{
	}
}
[Token(Token = "0x20000FC")]
public class Helicopter : MonoBehaviour
{
	[Token(Token = "0x2000381")]
	public class HelicopterSaveData
	{
		[Token(Token = "0x4001664")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public HelicopterState state;

		[Token(Token = "0x4001665")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public Vector3 position;

		[Token(Token = "0x4001666")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Quaternion rotation;

		[Token(Token = "0x4001667")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float rotorBladeSpeed;

		[Token(Token = "0x4001668")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public Vector3 targetPosition;

		[Token(Token = "0x4001669")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float targetYaw;

		[Token(Token = "0x400166A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public bool shouldLandAtTarget;

		[Token(Token = "0x400166B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x45")]
		public bool shouldDeployAttachment;

		[Token(Token = "0x400166C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x46")]
		public bool shouldLowerAttachmentToGround;

		[Token(Token = "0x600171B")]
		[Address(RVA = "0x106A638", Offset = "0x106A638", VA = "0x106A638")]
		public HelicopterSaveData()
		{
		}
	}

	[Token(Token = "0x2000382")]
	public enum HelicopterState
	{
		[Token(Token = "0x400166E")]
		Landed,
		[Token(Token = "0x400166F")]
		TakingOff,
		[Token(Token = "0x4001670")]
		Flying,
		[Token(Token = "0x4001671")]
		Landing
	}

	[Token(Token = "0x40006EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public HelicopterState state;

	[Token(Token = "0x40006F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject rotorBlades;

	[Token(Token = "0x40006F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject rotorBladesSpinning;

	[Token(Token = "0x40006F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform rotorBladesRoot;

	[Token(Token = "0x40006F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Renderer searchLight;

	[Token(Token = "0x40006F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject attachment;

	[Token(Token = "0x40006F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public ParticleSystem waterDropEffect;

	[Token(Token = "0x40006F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public AudioSource primarySound;

	[Token(Token = "0x40006F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public AudioSource secondarySound;

	[Token(Token = "0x40006F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public AudioClip spinUp;

	[Token(Token = "0x40006F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public AudioClip spinDown;

	[Token(Token = "0x40006FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public AudioClip[] dropWaterSounds;

	[Token(Token = "0x40006FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6A91C4", Offset = "0x6A91C4")]
	private bool <shouldDeployAttachment>k__BackingField;

	[Token(Token = "0x40006FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x79")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6A91D4", Offset = "0x6A91D4")]
	private bool <shouldLowerAttachmentToGround>k__BackingField;

	[Token(Token = "0x40006FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private City city;

	[Token(Token = "0x40006FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private Material spinningMaterial;

	[Token(Token = "0x40006FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private float rotorBladeSpeed;

	[Token(Token = "0x4000700")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private float rotorRotation;

	[Token(Token = "0x4000701")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private Vector3 velocity;

	[Token(Token = "0x4000702")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	private float yawVelocity;

	[Token(Token = "0x4000703")]
	private const float spinningThreshold = 720f;

	[Token(Token = "0x4000704")]
	private const float spinAcceleration = 100f;

	[Token(Token = "0x4000705")]
	private const float maxSpinSpeed = 1000f;

	[Token(Token = "0x4000706")]
	private const float takeOffHeight = 3f;

	[Token(Token = "0x4000707")]
	private const float maxTakeOffLandingMoveSpeed = 1f;

	[Token(Token = "0x4000708")]
	private const float maxMoveSpeed = 4f;

	[Token(Token = "0x4000709")]
	private const float maxYawSpeed = 180f;

	[Token(Token = "0x400070A")]
	private const float maxSearchLightDistance = 4f;

	[Token(Token = "0x400070B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private Vector3 targetPosition;

	[Token(Token = "0x400070C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	private float targetYaw;

	[Token(Token = "0x400070D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private bool shouldLandAtTarget;

	[Token(Token = "0x400070E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private float searchLightTimer;

	[Token(Token = "0x400070F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private Vector3 searchLightVelocity;

	[Token(Token = "0x4000710")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public Transform targetTransform;

	[Token(Token = "0x4000711")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public bool debugFollowPlayer;

	[Token(Token = "0x4000712")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
	private Vector3 attachmentPosition;

	[Token(Token = "0x4000713")]
	private const float attachmentDropLength = 0.65f;

	[Token(Token = "0x4000714")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private BlobShadow[] blobShadows;

	[Token(Token = "0x17000218")]
	public bool waterDropEnabled
	{
		[Token(Token = "0x6000A46")]
		[Address(RVA = "0x106842C", Offset = "0x106842C", VA = "0x106842C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000A47")]
		[Address(RVA = "0x10684E0", Offset = "0x10684E0", VA = "0x10684E0")]
		set
		{
		}
	}

	[Token(Token = "0x17000219")]
	public bool shouldDeployAttachment
	{
		[Token(Token = "0x6000A48")]
		[Address(RVA = "0x1068620", Offset = "0x1068620", VA = "0x1068620")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6B080C", Offset = "0x6B080C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000A49")]
		[Address(RVA = "0x1068628", Offset = "0x1068628", VA = "0x1068628")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6B081C", Offset = "0x6B081C")]
		set
		{
		}
	}

	[Token(Token = "0x1700021A")]
	public bool shouldLowerAttachmentToGround
	{
		[Token(Token = "0x6000A4A")]
		[Address(RVA = "0x1068634", Offset = "0x1068634", VA = "0x1068634")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6B082C", Offset = "0x6B082C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000A4B")]
		[Address(RVA = "0x106863C", Offset = "0x106863C", VA = "0x106863C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6B083C", Offset = "0x6B083C")]
		set
		{
		}
	}

	[Token(Token = "0x1700021B")]
	public bool didReachTargetPosition
	{
		[Token(Token = "0x6000A4C")]
		[Address(RVA = "0x1068648", Offset = "0x1068648", VA = "0x1068648")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000A4D")]
	[Address(RVA = "0x10685E4", Offset = "0x10685E4", VA = "0x10685E4")]
	private void PlaySound(AudioClip clip)
	{
	}

	[Token(Token = "0x6000A4E")]
	[Address(RVA = "0x106876C", Offset = "0x106876C", VA = "0x106876C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000A4F")]
	[Address(RVA = "0x1068A1C", Offset = "0x1068A1C", VA = "0x1068A1C")]
	public void Init(City inCity)
	{
	}

	[Token(Token = "0x6000A50")]
	[Address(RVA = "0x1068A24", Offset = "0x1068A24", VA = "0x1068A24")]
	private float CalculateHoverHeight()
	{
		return default(float);
	}

	[Token(Token = "0x6000A51")]
	[Address(RVA = "0x1068C58", Offset = "0x1068C58", VA = "0x1068C58")]
	private void Update()
	{
	}

	[Token(Token = "0x6000A52")]
	[Address(RVA = "0x1068FF8", Offset = "0x1068FF8", VA = "0x1068FF8")]
	public void FocusSearchLight(Vector3 target)
	{
	}

	[Token(Token = "0x6000A53")]
	[Address(RVA = "0x1068E2C", Offset = "0x1068E2C", VA = "0x1068E2C")]
	public bool FlyTo(Vector3 location, float radius = 0.1f)
	{
		return default(bool);
	}

	[Token(Token = "0x6000A54")]
	[Address(RVA = "0x106A0BC", Offset = "0x106A0BC", VA = "0x106A0BC")]
	public bool LandAt(Vector3 location, Quaternion rotation)
	{
		return default(bool);
	}

	[Token(Token = "0x6000A55")]
	[Address(RVA = "0x106A214", Offset = "0x106A214", VA = "0x106A214")]
	private bool AccelerateRotorBladesToSpeed(float target, float deltaTime)
	{
		return default(bool);
	}

	[Token(Token = "0x6000A56")]
	[Address(RVA = "0x106920C", Offset = "0x106920C", VA = "0x106920C")]
	public void Simulate(float deltaTime)
	{
	}

	[Token(Token = "0x6000A57")]
	[Address(RVA = "0x106A304", Offset = "0x106A304", VA = "0x106A304")]
	private void UpdateShadowPlaneHeight()
	{
	}

	[Token(Token = "0x6000A58")]
	[Address(RVA = "0x106A550", Offset = "0x106A550", VA = "0x106A550")]
	public HelicopterSaveData GetSaveData()
	{
		return null;
	}

	[Token(Token = "0x6000A59")]
	[Address(RVA = "0x106A640", Offset = "0x106A640", VA = "0x106A640")]
	public void RestoreSaveData(HelicopterSaveData saveData)
	{
	}

	[Token(Token = "0x6000A5A")]
	[Address(RVA = "0x106A6E4", Offset = "0x106A6E4", VA = "0x106A6E4")]
	public Helicopter()
	{
	}
}
[Token(Token = "0x20000FD")]
public class HotAirBalloon : MonoBehaviour
{
	[Token(Token = "0x2000383")]
	private enum State
	{
		[Token(Token = "0x4001673")]
		WaitingToBeSeen,
		[Token(Token = "0x4001674")]
		Waiting,
		[Token(Token = "0x4001675")]
		Inflating,
		[Token(Token = "0x4001676")]
		TakingOff,
		[Token(Token = "0x4001677")]
		FlyingTowardsCityCenter,
		[Token(Token = "0x4001678")]
		FlyingAway
	}

	[Token(Token = "0x4000715")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float inflationDuration;

	[Token(Token = "0x4000716")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float deflatedScale;

	[Token(Token = "0x4000717")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float maxWaitDuration;

	[Token(Token = "0x4000718")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float maxWaitToBeSeenDuration;

	[Token(Token = "0x4000719")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float takeoffDuration;

	[Token(Token = "0x400071A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float takeOffAcceleration;

	[Token(Token = "0x400071B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float minCruisingAltitude;

	[Token(Token = "0x400071C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float maxCruisingAltitude;

	[Token(Token = "0x400071D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float flightSpeed;

	[Token(Token = "0x400071E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public bool startDeflated;

	[Token(Token = "0x400071F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public AudioClip takeoffClip;

	[Token(Token = "0x4000720")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6A91E4", Offset = "0x6A91E4")]
	private HotAirBalloonStory <story>k__BackingField;

	[Token(Token = "0x4000721")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GazeTimer gazeTimer;

	[Token(Token = "0x4000722")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private State state;

	[Token(Token = "0x4000723")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private City city;

	[Token(Token = "0x4000724")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private float timeInState;

	[Token(Token = "0x4000725")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private float waitDuration;

	[Token(Token = "0x4000726")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private float cruisingAltitude;

	[Token(Token = "0x4000727")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private Vector3 velocity;

	[Token(Token = "0x4000728")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Vector3 cityCenter;

	[Token(Token = "0x4000729")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private AudioSource audioSource;

	[Token(Token = "0x1700021C")]
	public HotAirBalloonStory story
	{
		[Token(Token = "0x6000A5B")]
		[Address(RVA = "0x106CB98", Offset = "0x106CB98", VA = "0x106CB98")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6B084C", Offset = "0x6B084C")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000A5C")]
		[Address(RVA = "0x106CBA0", Offset = "0x106CBA0", VA = "0x106CBA0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6B085C", Offset = "0x6B085C")]
		set
		{
		}
	}

	[Token(Token = "0x6000A5D")]
	[Address(RVA = "0x106CBA8", Offset = "0x106CBA8", VA = "0x106CBA8")]
	private void SetState(State newState)
	{
	}

	[Token(Token = "0x6000A5E")]
	[Address(RVA = "0x106CC2C", Offset = "0x106CC2C", VA = "0x106CC2C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000A5F")]
	[Address(RVA = "0x106CDC8", Offset = "0x106CDC8", VA = "0x106CDC8")]
	private void HandleFlight(float deltaTime)
	{
	}

	[Token(Token = "0x6000A60")]
	[Address(RVA = "0x106D324", Offset = "0x106D324", VA = "0x106D324")]
	private void Update()
	{
	}

	[Token(Token = "0x6000A61")]
	[Address(RVA = "0x106D6EC", Offset = "0x106D6EC", VA = "0x106D6EC")]
	public HotAirBalloon()
	{
	}
}
[Token(Token = "0x20000FE")]
public class JettyBoats : MonoBehaviour
{
	[Token(Token = "0x2000384")]
	public class Boat
	{
		[Token(Token = "0x4001679")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public GameObject gameObject;

		[Token(Token = "0x400167A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int targetX;

		[Token(Token = "0x400167B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int targetY;

		[Token(Token = "0x400167C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int lastX;

		[Token(Token = "0x400167D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public int lastY;

		[Token(Token = "0x400167E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Vector3 startPosition;

		[Token(Token = "0x400167F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public Quaternion startRotation;

		[Token(Token = "0x600171C")]
		[Address(RVA = "0x108BBC4", Offset = "0x108BBC4", VA = "0x108BBC4")]
		public Boat()
		{
		}
	}

	[Token(Token = "0x400072A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject[] boatObjects;

	[Token(Token = "0x400072B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private List<Boat> boats;

	[Token(Token = "0x400072C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private City city;

	[Token(Token = "0x400072D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float boatRotationSpeed;

	[Token(Token = "0x400072E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float boatMoveSpeed;

	[Token(Token = "0x400072F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float maxBoatDistance;

	[Token(Token = "0x4000730")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public bool enableDebugDraw;

	[Token(Token = "0x6000A62")]
	[Address(RVA = "0x108B178", Offset = "0x108B178", VA = "0x108B178")]
	private void PickNewTarget(Boat boat)
	{
	}

	[Token(Token = "0x6000A63")]
	[Address(RVA = "0x108BA44", Offset = "0x108BA44", VA = "0x108BA44")]
	private void Start()
	{
	}

	[Token(Token = "0x6000A64")]
	[Address(RVA = "0x108BBCC", Offset = "0x108BBCC", VA = "0x108BBCC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000A65")]
	[Address(RVA = "0x108C2FC", Offset = "0x108C2FC", VA = "0x108C2FC")]
	public JettyBoats()
	{
	}
}
[Token(Token = "0x20000FF")]
public class PlaneInfo : MonoBehaviour
{
	[Token(Token = "0x4000731")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool canLandAtAirport;

	[Token(Token = "0x4000732")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool applyColour;

	[Token(Token = "0x4000733")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Color colour;

	[Token(Token = "0x4000734")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AudioClip takeoffSound;

	[Token(Token = "0x4000735")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public AudioClip landingSound;

	[Token(Token = "0x6000A66")]
	[Address(RVA = "0xFD1998", Offset = "0xFD1998", VA = "0xFD1998")]
	private void Start()
	{
	}

	[Token(Token = "0x6000A67")]
	[Address(RVA = "0xFD1A9C", Offset = "0xFD1A9C", VA = "0xFD1A9C")]
	public void PlayTakeOffSound()
	{
	}

	[Token(Token = "0x6000A68")]
	[Address(RVA = "0xFD1B90", Offset = "0xFD1B90", VA = "0xFD1B90")]
	public void PlayLandingSound()
	{
	}

	[Token(Token = "0x6000A69")]
	[Address(RVA = "0xFD1C84", Offset = "0xFD1C84", VA = "0xFD1C84")]
	public PlaneInfo()
	{
	}
}
[Token(Token = "0x2000100")]
public class SeaPlane : MonoBehaviour
{
	[Token(Token = "0x2000385")]
	private enum State
	{
		[Token(Token = "0x4001681")]
		Landed,
		[Token(Token = "0x4001682")]
		TakingOff,
		[Token(Token = "0x4001683")]
		Flying,
		[Token(Token = "0x4001684")]
		Landing
	}

	[Token(Token = "0x4000736")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioClip takeoffSound;

	[Token(Token = "0x4000737")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AudioClip landingSound;

	[Token(Token = "0x4000738")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform leftProp;

	[Token(Token = "0x4000739")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform rightProp;

	[Token(Token = "0x400073A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private State state;

	[Token(Token = "0x400073B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Animator animator;

	[Token(Token = "0x400073C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private City city;

	[Token(Token = "0x400073D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Transform landingTransform;

	[Token(Token = "0x400073E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float flightAngle;

	[Token(Token = "0x400073F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private float flightOffset;

	[Token(Token = "0x4000740")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public float circleSize;

	[Token(Token = "0x4000741")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private Vector3 lastPosition;

	[Token(Token = "0x4000742")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private float speed;

	[Token(Token = "0x4000743")]
	private const float flightOffsetDistance = 3f;

	[Token(Token = "0x4000744")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public float maxBankAmount;

	[Token(Token = "0x4000745")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public float bankSpeed;

	[Token(Token = "0x4000746")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public float cruiseHeight;

	[Token(Token = "0x4000747")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public float delayBetweenFlights;

	[Token(Token = "0x4000748")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private float bank;

	[Token(Token = "0x4000749")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private float timeUntilNextFlight;

	[Token(Token = "0x6000A6A")]
	[Address(RVA = "0x104BEE0", Offset = "0x104BEE0", VA = "0x104BEE0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000A6B")]
	[Address(RVA = "0x104BF50", Offset = "0x104BF50", VA = "0x104BF50")]
	private void Update()
	{
	}

	[Token(Token = "0x6000A6C")]
	[Address(RVA = "0x104C310", Offset = "0x104C310", VA = "0x104C310")]
	private void FlyAroundPoint(Vector3 pivot, float distance, float height, float deltaTime)
	{
	}

	[Token(Token = "0x6000A6D")]
	[Address(RVA = "0x104C5B8", Offset = "0x104C5B8", VA = "0x104C5B8")]
	private bool Fly(float deltaTime)
	{
		return default(bool);
	}

	[Token(Token = "0x6000A6E")]
	[Address(RVA = "0x104CC18", Offset = "0x104CC18", VA = "0x104CC18")]
	private void CalculateSpeed(float deltaTime)
	{
	}

	[Token(Token = "0x6000A6F")]
	[Address(RVA = "0x104BFF4", Offset = "0x104BFF4", VA = "0x104BFF4")]
	private void Simulate(float deltaTime)
	{
	}

	[Token(Token = "0x6000A70")]
	[Address(RVA = "0x104CD40", Offset = "0x104CD40", VA = "0x104CD40")]
	public SeaPlane()
	{
	}
}
[Token(Token = "0x2000101")]
public class ShipDockBehaviour : StateMachineBehaviour
{
	[Token(Token = "0x400074A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string onExitMessage;

	[Token(Token = "0x6000A71")]
	[Address(RVA = "0x1056E58", Offset = "0x1056E58", VA = "0x1056E58", Slot = "6")]
	public override void OnStateExit(Animator animator, AnimatorStateInfo stateInfo, int layerIndex)
	{
	}

	[Token(Token = "0x6000A72")]
	[Address(RVA = "0x1056E80", Offset = "0x1056E80", VA = "0x1056E80")]
	public ShipDockBehaviour()
	{
	}
}
[Token(Token = "0x2000102")]
public class ShipInfo : MonoBehaviour
{
	[Token(Token = "0x2000386")]
	public enum State
	{
		[Token(Token = "0x4001686")]
		MovingToDock,
		[Token(Token = "0x4001687")]
		WaitingToEnterDock,
		[Token(Token = "0x4001688")]
		EnteringDock,
		[Token(Token = "0x4001689")]
		Docked,
		[Token(Token = "0x400168A")]
		WaitingToExitDock,
		[Token(Token = "0x400168B")]
		ExitingDock,
		[Token(Token = "0x400168C")]
		MovingToExit,
		[Token(Token = "0x400168D")]
		ExitingWorld,
		[Token(Token = "0x400168E")]
		WaitingForRemoval
	}

	[Token(Token = "0x400074B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject wake;

	[Token(Token = "0x400074C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Seaport.Space.Type seaportSpaceType;

	[Token(Token = "0x400074D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float size;

	[Token(Token = "0x400074E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float dolphinSpawnWidth;

	[Token(Token = "0x400074F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public State state;

	[Token(Token = "0x4000750")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private City city;

	[Token(Token = "0x4000751")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Animator animator;

	[Token(Token = "0x4000752")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private AudioSource audioSource;

	[Token(Token = "0x4000753")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6A91F4", Offset = "0x6A91F4")]
	private float <timeDocked>k__BackingField;

	[Token(Token = "0x4000754")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6A9204", Offset = "0x6A9204")]
	private float <timeQueued>k__BackingField;

	[Token(Token = "0x4000755")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private AnimatorOverrideController overrideController;

	[Token(Token = "0x4000756")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6A9214", Offset = "0x6A9214")]
	private float <speed>k__BackingField;

	[Token(Token = "0x4000757")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private float acceleration;

	[Token(Token = "0x4000758")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Vector3 lastPosition;

	[Token(Token = "0x4000759")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private int currentShippingLaneNode;

	[Token(Token = "0x400075A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private int pickedExitShippingLaneNode;

	[Token(Token = "0x400075B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private Vector3 pickedExitPosition;

	[Token(Token = "0x400075C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Vector3 pickedExitVector;

	[Token(Token = "0x400075D")]
	private const float turnSpeed = 40f;

	[Token(Token = "0x400075E")]
	private const float maxSpeed = 1f;

	[Token(Token = "0x1700021D")]
	public float timeDocked
	{
		[Token(Token = "0x6000A73")]
		[Address(RVA = "0x1056E88", Offset = "0x1056E88", VA = "0x1056E88")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6B086C", Offset = "0x6B086C")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000A74")]
		[Address(RVA = "0x1056E90", Offset = "0x1056E90", VA = "0x1056E90")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6B087C", Offset = "0x6B087C")]
		set
		{
		}
	}

	[Token(Token = "0x1700021E")]
	public float timeQueued
	{
		[Token(Token = "0x6000A75")]
		[Address(RVA = "0x1056E98", Offset = "0x1056E98", VA = "0x1056E98")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6B088C", Offset = "0x6B088C")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000A76")]
		[Address(RVA = "0x1056EA0", Offset = "0x1056EA0", VA = "0x1056EA0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6B089C", Offset = "0x6B089C")]
		set
		{
		}
	}

	[Token(Token = "0x1700021F")]
	public float speed
	{
		[Token(Token = "0x6000A77")]
		[Address(RVA = "0x1056EA8", Offset = "0x1056EA8", VA = "0x1056EA8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6B08AC", Offset = "0x6B08AC")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000A78")]
		[Address(RVA = "0x1056EB0", Offset = "0x1056EB0", VA = "0x1056EB0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6B08BC", Offset = "0x6B08BC")]
		private set
		{
		}
	}

	[Token(Token = "0x17000220")]
	private SeaTrafficManager trafficManager
	{
		[Token(Token = "0x6000A79")]
		[Address(RVA = "0x1056EB8", Offset = "0x1056EB8", VA = "0x1056EB8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000221")]
	private Seaport seaport
	{
		[Token(Token = "0x6000A7A")]
		[Address(RVA = "0x1056ED4", Offset = "0x1056ED4", VA = "0x1056ED4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000A7B")]
	[Address(RVA = "0x1056EFC", Offset = "0x1056EFC", VA = "0x1056EFC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000A7C")]
	[Address(RVA = "0x104EAA0", Offset = "0x104EAA0", VA = "0x104EAA0")]
	public void Init(City inCity, int startingLaneNode)
	{
	}

	[Token(Token = "0x6000A7D")]
	[Address(RVA = "0x1056FC4", Offset = "0x1056FC4", VA = "0x1056FC4")]
	public List<Vector3> GenerateDolphinSpawnPositions(int count)
	{
		return null;
	}

	[Token(Token = "0x6000A7E")]
	[Address(RVA = "0x1057218", Offset = "0x1057218", VA = "0x1057218")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000A7F")]
	[Address(RVA = "0x10573D4", Offset = "0x10573D4", VA = "0x10573D4")]
	private bool SteerTo(Vector3 targetPosition, Quaternion targetRotation, float deltaTime, bool stopAtDestination = false)
	{
		return default(bool);
	}

	[Token(Token = "0x6000A80")]
	[Address(RVA = "0x1057EBC", Offset = "0x1057EBC", VA = "0x1057EBC")]
	private bool SteerTo(Transform target, float deltaTime, bool stopAtDestination = false)
	{
		return default(bool);
	}

	[Token(Token = "0x6000A81")]
	[Address(RVA = "0x1057F60", Offset = "0x1057F60", VA = "0x1057F60")]
	private void CalculateSpeedFromAnimation(float deltaTime)
	{
	}

	[Token(Token = "0x6000A82")]
	[Address(RVA = "0x1058068", Offset = "0x1058068", VA = "0x1058068")]
	private int WrapNode(int node, int count)
	{
		return default(int);
	}

	[Token(Token = "0x6000A83")]
	[Address(RVA = "0x1058088", Offset = "0x1058088", VA = "0x1058088")]
	private bool SteerToNode(float deltaTime, List<Vector3> nodes, int targetNodeIndex, Vector3 finalPosition, Vector3 finalOffsetVector)
	{
		return default(bool);
	}

	[Token(Token = "0x6000A84")]
	[Address(RVA = "0x104D988", Offset = "0x104D988", VA = "0x104D988")]
	public void Simulate(float deltaTime)
	{
	}

	[Token(Token = "0x6000A85")]
	[Address(RVA = "0x10583B0", Offset = "0x10583B0", VA = "0x10583B0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000A86")]
	[Address(RVA = "0x105892C", Offset = "0x105892C", VA = "0x105892C")]
	public void OnDocked()
	{
	}

	[Token(Token = "0x6000A87")]
	[Address(RVA = "0x105858C", Offset = "0x105858C", VA = "0x105858C")]
	public void OnExitedDock()
	{
	}

	[Token(Token = "0x6000A88")]
	[Address(RVA = "0x1058A30", Offset = "0x1058A30", VA = "0x1058A30")]
	public ShipInfo()
	{
	}
}
[Token(Token = "0x2000103")]
public class SkySignPlane : MonoBehaviour
{
	[Token(Token = "0x400075F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TextMeshPro frontTextMesh;

	[Token(Token = "0x4000760")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TextMeshPro backTextMesh;

	[Token(Token = "0x4000761")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform signTransform;

	[Token(Token = "0x4000762")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform signEndPointTransform;

	[Token(Token = "0x4000763")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform signEndTransform;

	[Token(Token = "0x4000764")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float signWidthPadding;

	[Token(Token = "0x4000765")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float travelSpeed;

	[Token(Token = "0x6000A89")]
	[Address(RVA = "0xFE6B90", Offset = "0xFE6B90", VA = "0xFE6B90")]
	public void Start()
	{
	}

	[Token(Token = "0x6000A8A")]
	[Address(RVA = "0xFE6BD4", Offset = "0xFE6BD4", VA = "0xFE6BD4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000A8B")]
	[Address(RVA = "0xFE6DCC", Offset = "0xFE6DCC", VA = "0xFE6DCC")]
	public void SetMessage(string messageText)
	{
	}

	[Token(Token = "0x6000A8C")]
	[Address(RVA = "0xFE6EE4", Offset = "0xFE6EE4", VA = "0xFE6EE4")]
	public SkySignPlane()
	{
	}
}
[Token(Token = "0x2000104")]
public class ControllerLabel : MonoBehaviour
{
	[Token(Token = "0x4000766")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public LineRenderer line;

	[Token(Token = "0x4000767")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Text text;

	[Token(Token = "0x4000768")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float lineWidth;

	[Token(Token = "0x4000769")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float paddingX;

	[Token(Token = "0x400076A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float paddingY;

	[Token(Token = "0x400076B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public bool facePlayer;

	[Token(Token = "0x400076C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x35")]
	public bool keepBoxWidth;

	[Token(Token = "0x400076D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private RectTransform rectTransform;

	[Token(Token = "0x400076E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private CanvasGroup canvasGroup;

	[Token(Token = "0x400076F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Quaternion startingRotation;

	[Token(Token = "0x17000222")]
	private Player player
	{
		[Token(Token = "0x6000A8D")]
		[Address(RVA = "0x1029A20", Offset = "0x1029A20", VA = "0x1029A20")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000A8E")]
	[Address(RVA = "0x1029A70", Offset = "0x1029A70", VA = "0x1029A70")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000A8F")]
	[Address(RVA = "0x1029B04", Offset = "0x1029B04", VA = "0x1029B04")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000A90")]
	[Address(RVA = "0x1029F64", Offset = "0x1029F64", VA = "0x1029F64")]
	public ControllerLabel()
	{
	}
}
[Token(Token = "0x2000105")]
public class ControllerLabels : MonoBehaviour
{
	[Token(Token = "0x2000387")]
	[Flags]
	public enum LabelType
	{
		[Token(Token = "0x4001690")]
		None = 0,
		[Token(Token = "0x4001691")]
		Grab = 1,
		[Token(Token = "0x4001692")]
		Rotate = 2,
		[Token(Token = "0x4001693")]
		Orbit = 4,
		[Token(Token = "0x4001694")]
		Scale = 8,
		[Token(Token = "0x4001695")]
		Zoom = 0x10,
		[Token(Token = "0x4001696")]
		Trigger = 0x20,
		[Token(Token = "0x4001697")]
		Controller = 0x40
	}

	[Token(Token = "0x4000770")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ControllerLabel grabLabel;

	[Token(Token = "0x4000771")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ControllerLabel rotateLabel;

	[Token(Token = "0x4000772")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ControllerLabel zoomLabel;

	[Token(Token = "0x4000773")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ControllerLabel triggerLabel;

	[Token(Token = "0x17000223")]
	public LabelType activeLabels
	{
		[Token(Token = "0x6000A91")]
		[Address(RVA = "0x1029F88", Offset = "0x1029F88", VA = "0x1029F88")]
		set
		{
		}
	}

	[Token(Token = "0x6000A92")]
	[Address(RVA = "0x102A1A4", Offset = "0x102A1A4", VA = "0x102A1A4")]
	public ControllerLabels()
	{
	}
}
[Token(Token = "0x2000106")]
public class HandPoseHint : MonoBehaviour
{
	[Token(Token = "0x2000388")]
	public enum Gesture
	{
		[Token(Token = "0x4001699")]
		Hide,
		[Token(Token = "0x400169A")]
		Relaxed,
		[Token(Token = "0x400169B")]
		Pinch,
		[Token(Token = "0x400169C")]
		OpenPinch,
		[Token(Token = "0x400169D")]
		Grab,
		[Token(Token = "0x400169E")]
		KeepGrabbing,
		[Token(Token = "0x400169F")]
		ThumbsUp,
		[Token(Token = "0x40016A0")]
		OpenGrab
	}

	[Token(Token = "0x2000389")]
	public enum Movement
	{
		[Token(Token = "0x40016A2")]
		None,
		[Token(Token = "0x40016A3")]
		Pan,
		[Token(Token = "0x40016A4")]
		ZoomIn,
		[Token(Token = "0x40016A5")]
		ZoomOut,
		[Token(Token = "0x40016A6")]
		RotateClockwise,
		[Token(Token = "0x40016A7")]
		RotateAntiClockwise,
		[Token(Token = "0x40016A8")]
		Drag
	}

	[Token(Token = "0x4000774")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform leftHandTransform;

	[Token(Token = "0x4000775")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform rightHandTransform;

	[Token(Token = "0x4000776")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform rotationRoot;

	[Token(Token = "0x4000777")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public SpriteRenderer leftHandArrowHead;

	[Token(Token = "0x4000778")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public LineRenderer leftHandArrowTail;

	[Token(Token = "0x4000779")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public SpriteRenderer rightHandArrowHead;

	[Token(Token = "0x400077A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public LineRenderer rightHandArrowTail;

	[Token(Token = "0x400077B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Gesture leftHandGesture;

	[Token(Token = "0x400077C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public Gesture rightHandGesture;

	[Token(Token = "0x400077D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Movement movement;

	[Token(Token = "0x400077E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public float leftHandGestureStrength;

	[Token(Token = "0x400077F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public float rightHandGestureStrength;

	[Token(Token = "0x4000780")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Animator leftHandAnimator;

	[Token(Token = "0x4000781")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Animator rightHandAnimator;

	[Token(Token = "0x4000782")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public float gestureChangeSpeed;

	[Token(Token = "0x4000783")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public float demoFrequency;

	[Token(Token = "0x4000784")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public float relaxedAngle;

	[Token(Token = "0x4000785")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private int pinchId;

	[Token(Token = "0x4000786")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private int holdId;

	[Token(Token = "0x4000787")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private float handOffset;

	[Token(Token = "0x4000788")]
	private const float movementAnimationDelay = 0.5f;

	[Token(Token = "0x4000789")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private float movementAnimationTime;

	[Token(Token = "0x400078A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private Movement movementLastFrame;

	[Token(Token = "0x400078B")]
	private const int numCirclePoints = 32;

	[Token(Token = "0x400078C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private Vector3[] circlePoints;

	[Token(Token = "0x400078D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public float lineWidth;

	[Token(Token = "0x400078E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	public float arrowHeadScale;

	[Token(Token = "0x400078F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public float arrowHeadLineOffset;

	[Token(Token = "0x17000224")]
	public bool anyGestureVisible
	{
		[Token(Token = "0x6000A93")]
		[Address(RVA = "0x1060B24", Offset = "0x1060B24", VA = "0x1060B24")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000A94")]
	[Address(RVA = "0x1060B44", Offset = "0x1060B44", VA = "0x1060B44")]
	private void Start()
	{
	}

	[Token(Token = "0x6000A95")]
	[Address(RVA = "0x1060BD0", Offset = "0x1060BD0", VA = "0x1060BD0")]
	private void UpdateHand(Animator animator, Gesture gesture, float deltaTime)
	{
	}

	[Token(Token = "0x6000A96")]
	[Address(RVA = "0x1060EDC", Offset = "0x1060EDC", VA = "0x1060EDC")]
	private void DemoGesture(Animator animator, Gesture gesture)
	{
	}

	[Token(Token = "0x6000A97")]
	[Address(RVA = "0x1060F5C", Offset = "0x1060F5C", VA = "0x1060F5C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000A98")]
	[Address(RVA = "0x1062410", Offset = "0x1062410", VA = "0x1062410")]
	public void Configure(Gesture leftGesture, Gesture rightGesture, Movement desiredMovement = Movement.None)
	{
	}

	[Token(Token = "0x6000A99")]
	[Address(RVA = "0x10618B4", Offset = "0x10618B4", VA = "0x10618B4")]
	private void GenerateRotationHintArrow(SpriteRenderer arrowHead, LineRenderer arrowTail, Vector3 leftPosition, Vector3 rightPosition, float direction = 1f)
	{
	}

	[Token(Token = "0x6000A9A")]
	[Address(RVA = "0x1061F68", Offset = "0x1061F68", VA = "0x1061F68")]
	private void GenerateScaleHintArrow(SpriteRenderer arrowHead, LineRenderer arrowTail, Vector3 leftPosition, Vector3 rightPosition, float distance)
	{
	}

	[Token(Token = "0x6000A9B")]
	[Address(RVA = "0x106241C", Offset = "0x106241C", VA = "0x106241C")]
	public HandPoseHint()
	{
	}
}
[Token(Token = "0x2000107")]
public class HintArrow : MonoBehaviour
{
	[Token(Token = "0x200038A")]
	public enum ArrowType
	{
		[Token(Token = "0x40016AA")]
		None,
		[Token(Token = "0x40016AB")]
		Notification,
		[Token(Token = "0x40016AC")]
		Tutorial,
		[Token(Token = "0x40016AD")]
		TutorialImportant,
		[Token(Token = "0x40016AE")]
		SelectedInfoBoxTutorial,
		[Token(Token = "0x40016AF")]
		ControlsHint
	}

	[Token(Token = "0x4000790")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform targetTransform;

	[Token(Token = "0x4000791")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Image hintImage;

	[Token(Token = "0x4000792")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Image arrowImage;

	[Token(Token = "0x4000793")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform arrowRoot;

	[Token(Token = "0x4000794")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6A9224", Offset = "0x6A9224")]
	private bool <isGazingAtTarget>k__BackingField;

	[Token(Token = "0x4000795")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private ArrowType arrowType;

	[Token(Token = "0x4000796")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6A9234", Offset = "0x6A9234")]
	private Vector3 <arrowDirection>k__BackingField;

	[Token(Token = "0x4000797")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6A9244", Offset = "0x6A9244")]
	private float <arrowScale>k__BackingField;

	[Token(Token = "0x4000798")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Player player;

	[Token(Token = "0x4000799")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Vector3 startingArrowImageOffset;

	[Token(Token = "0x17000225")]
	public bool isGazingAtTarget
	{
		[Token(Token = "0x6000A9C")]
		[Address(RVA = "0x106B194", Offset = "0x106B194", VA = "0x106B194")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6B08CC", Offset = "0x6B08CC")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000A9D")]
		[Address(RVA = "0x106B19C", Offset = "0x106B19C", VA = "0x106B19C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6B08DC", Offset = "0x6B08DC")]
		private set
		{
		}
	}

	[Token(Token = "0x17000226")]
	private bool shouldHideWhenGazingAtTarget
	{
		[Token(Token = "0x6000A9E")]
		[Address(RVA = "0x106B1A8", Offset = "0x106B1A8", VA = "0x106B1A8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000227")]
	private bool shouldHintAtDirection
	{
		[Token(Token = "0x6000A9F")]
		[Address(RVA = "0x106B1BC", Offset = "0x106B1BC", VA = "0x106B1BC")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000228")]
	public Vector3 arrowDirection
	{
		[Token(Token = "0x6000AA0")]
		[Address(RVA = "0x106B1E8", Offset = "0x106B1E8", VA = "0x106B1E8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6B08EC", Offset = "0x6B08EC")]
		get
		{
			return default(Vector3);
		}
		[Token(Token = "0x6000AA1")]
		[Address(RVA = "0x106B1F4", Offset = "0x106B1F4", VA = "0x106B1F4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6B08FC", Offset = "0x6B08FC")]
		set
		{
		}
	}

	[Token(Token = "0x17000229")]
	public float arrowScale
	{
		[Token(Token = "0x6000AA2")]
		[Address(RVA = "0x106B200", Offset = "0x106B200", VA = "0x106B200")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6B090C", Offset = "0x6B090C")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000AA3")]
		[Address(RVA = "0x106B208", Offset = "0x106B208", VA = "0x106B208")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6B091C", Offset = "0x6B091C")]
		set
		{
		}
	}

	[Token(Token = "0x6000AA4")]
	[Address(RVA = "0x106B210", Offset = "0x106B210", VA = "0x106B210")]
	private void Start()
	{
	}

	[Token(Token = "0x6000AA5")]
	[Address(RVA = "0x106B2CC", Offset = "0x106B2CC", VA = "0x106B2CC")]
	public void Show(ArrowType type, Transform target, Vector3 direction, float scale = 1f)
	{
	}

	[Token(Token = "0x6000AA6")]
	[Address(RVA = "0x106B408", Offset = "0x106B408", VA = "0x106B408")]
	public void Hide(ArrowType type = ArrowType.None)
	{
	}

	[Token(Token = "0x6000AA7")]
	[Address(RVA = "0x106B454", Offset = "0x106B454", VA = "0x106B454")]
	public bool IsHintingAt(Transform target)
	{
		return default(bool);
	}

	[Token(Token = "0x6000AA8")]
	[Address(RVA = "0x106B4EC", Offset = "0x106B4EC", VA = "0x106B4EC")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000AA9")]
	[Address(RVA = "0x106BEDC", Offset = "0x106BEDC", VA = "0x106BEDC")]
	public HintArrow()
	{
	}
}
[Token(Token = "0x2000108")]
public class ThermalVentHintArrow : MonoBehaviour
{
	[Token(Token = "0x1700022A")]
	private Player player
	{
		[Token(Token = "0x6000AAA")]
		[Address(RVA = "0x1071CBC", Offset = "0x1071CBC", VA = "0x1071CBC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000AAB")]
	[Address(RVA = "0x1071D0C", Offset = "0x1071D0C", VA = "0x1071D0C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000AAC")]
	[Address(RVA = "0x1071FB4", Offset = "0x1071FB4", VA = "0x1071FB4")]
	public ThermalVentHintArrow()
	{
	}
}
[Token(Token = "0x2000109")]
public class TutorialManager : SingletonBehaviour<TutorialManager>, ISaveInterface, IDebugPanelProvider
{
	[Token(Token = "0x200038B")]
	public enum TutorialState
	{
		[Token(Token = "0x40016B1")]
		Start,
		[Token(Token = "0x40016B2")]
		ShowGrabMoveControls,
		[Token(Token = "0x40016B3")]
		ShowRotateInPlaceControls,
		[Token(Token = "0x40016B4")]
		ShowRotateControls,
		[Token(Token = "0x40016B5")]
		ShowZoomInPlaceControls,
		[Token(Token = "0x40016B6")]
		ShowZoomControls,
		[Token(Token = "0x40016B7")]
		ShowHandTrackingStartingPosition,
		[Token(Token = "0x40016B8")]
		ShowHandTrackingGrabMoveControls,
		[Token(Token = "0x40016B9")]
		ShowHandTrackingZoomOutControls,
		[Token(Token = "0x40016BA")]
		ShowHandTrackingZoomInControls,
		[Token(Token = "0x40016BB")]
		ShowHandTrackingRotateClockwiseControls,
		[Token(Token = "0x40016BC")]
		ShowHandTrackingRotateAntiClockwiseControls,
		[Token(Token = "0x40016BD")]
		ShowSeaportMessage,
		[Token(Token = "0x40016BE")]
		ShowRoadHintMessage,
		[Token(Token = "0x40016BF")]
		ShowUndoMessage,
		[Token(Token = "0x40016C0")]
		ShowUnequipMessage,
		[Token(Token = "0x40016C1")]
		ShowResidentialZoneHintMessage,
		[Token(Token = "0x40016C2")]
		ShowPowerHintMessage,
		[Token(Token = "0x40016C3")]
		ShowWaterHintMessage,
		[Token(Token = "0x40016C4")]
		ShowCommercialZoneHintMessage,
		[Token(Token = "0x40016C5")]
		ShowIndustrialZoneHintMessage,
		[Token(Token = "0x40016C6")]
		ShowSmartwatchHintMessage,
		[Token(Token = "0x40016C7")]
		ShowPoliceStationHint,
		[Token(Token = "0x40016C8")]
		ShowGrowCityHintMessage,
		[Token(Token = "0x40016C9")]
		ShowFireStationHint,
		[Token(Token = "0x40016CA")]
		ShowNetworkHintMessage,
		[Token(Token = "0x40016CB")]
		TriggerFireEvent,
		[Token(Token = "0x40016CC")]
		ShowRegionUnlockMessage,
		[Token(Token = "0x40016CD")]
		ShowBuildCityHallHint,
		[Token(Token = "0x40016CE")]
		ShowReturnToWorldMapHint,
		[Token(Token = "0x40016CF")]
		Ended
	}

	[Token(Token = "0x200038C")]
	public class TutorialSaveData : SaveSystem.ModuleData
	{
		[Token(Token = "0x40016D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public TutorialState state;

		[Token(Token = "0x40016D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public bool hasTriggeredFireEvent;

		[Token(Token = "0x40016D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
		public bool hasShownSmartwatchHint;

		[Token(Token = "0x40016D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E")]
		public bool hasGrabMoved;

		[Token(Token = "0x40016D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F")]
		public bool hasRotatedView;

		[Token(Token = "0x40016D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool hasZoomed;

		[Token(Token = "0x40016D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		public bool hasRotatedViewInPlace;

		[Token(Token = "0x40016D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x22")]
		public bool hasZoomedInPlace;

		[Token(Token = "0x40016D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x23")]
		public bool hasShownDisconnectedBuildingsHint;

		[Token(Token = "0x40016D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public bool hasResolvedDisconnectedBuildings;

		[Token(Token = "0x40016DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
		public bool hasShowSandstormWarningHint;

		[Token(Token = "0x40016DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x26")]
		public bool hasResolvedSandstormWarning;

		[Token(Token = "0x40016DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x27")]
		public bool hasUpgradedBuilding;

		[Token(Token = "0x40016DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool hasBuiltAirport;

		[Token(Token = "0x40016DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		public bool hasBuiltSchoolBoostingBuilding;

		[Token(Token = "0x40016DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A")]
		public bool hasShownUnpoweredCellTowerHint;

		[Token(Token = "0x40016E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2B")]
		public bool hasResolvedUnpoweredCellTower;

		[Token(Token = "0x40016E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public bool hasUsedUndo;

		[Token(Token = "0x40016E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2D")]
		public bool hasGrabMovedWithHandTracking;

		[Token(Token = "0x40016E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2E")]
		public bool hasRotatedClockwiseViewWithHandTracking;

		[Token(Token = "0x40016E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2F")]
		public bool hasRotatedAntiClockwiseViewWithHandTracking;

		[Token(Token = "0x40016E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool hasZoomedInWithHandTracking;

		[Token(Token = "0x40016E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
		public bool hasZoomedOutWithHandTracking;

		[Token(Token = "0x40016E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x32")]
		public bool hasBuiltWithHandTracking;

		[Token(Token = "0x40016E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x33")]
		public bool shouldSkipTutorial;

		[Token(Token = "0x600171D")]
		[Address(RVA = "0x1140704", Offset = "0x1140704", VA = "0x1140704")]
		public TutorialSaveData()
		{
		}
	}

	[Token(Token = "0x200038D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6A8384", Offset = "0x6A8384")]
	private sealed class <>c__DisplayClass102_0
	{
		[Token(Token = "0x40016E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Predicate<ToolMenu.Entry> predicate;

		[Token(Token = "0x600171E")]
		[Address(RVA = "0x11403EC", Offset = "0x11403EC", VA = "0x11403EC")]
		public <>c__DisplayClass102_0()
		{
		}

		[Token(Token = "0x600171F")]
		[Address(RVA = "0x11403F4", Offset = "0x11403F4", VA = "0x11403F4")]
		internal bool <HintAtMenuType>b__0(WheelMenuEntry x)
		{
			return default(bool);
		}

		[Token(Token = "0x6001720")]
		[Address(RVA = "0x114047C", Offset = "0x114047C", VA = "0x114047C")]
		internal bool <HintAtMenuType>b__1(WheelMenuEntry x)
		{
			return default(bool);
		}
	}

	[Serializable]
	[Token(Token = "0x200038E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6A8394", Offset = "0x6A8394")]
	private sealed class <>c
	{
		[Token(Token = "0x40016EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x40016EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Predicate<ToolMenu.Entry> <>9__105_0;

		[Token(Token = "0x40016EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static Predicate<ToolMenu.Entry> <>9__113_0;

		[Token(Token = "0x40016ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static Predicate<ToolMenu.Entry> <>9__113_1;

		[Token(Token = "0x40016EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public static Predicate<BuildingInstance> <>9__113_2;

		[Token(Token = "0x40016EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public static Predicate<ToolMenu.Entry> <>9__113_3;

		[Token(Token = "0x40016F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public static Predicate<BuildingInstance> <>9__113_4;

		[Token(Token = "0x40016F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public static Predicate<ToolMenu.Entry> <>9__113_5;

		[Token(Token = "0x40016F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public static Predicate<ToolMenu.Entry> <>9__113_6;

		[Token(Token = "0x40016F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public static Predicate<ToolMenu.Entry> <>9__113_7;

		[Token(Token = "0x40016F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public static Predicate<BuildingInstance> <>9__113_8;

		[Token(Token = "0x40016F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public static Predicate<BuildingInstance> <>9__113_9;

		[Token(Token = "0x40016F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public static Predicate<ToolMenu.Entry> <>9__113_10;

		[Token(Token = "0x40016F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public static Predicate<ToolMenu.Entry> <>9__113_11;

		[Token(Token = "0x40016F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public static Predicate<ToolMenu.Entry> <>9__114_0;

		[Token(Token = "0x40016F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public static Predicate<BuildingInstance> <>9__121_0;

		[Token(Token = "0x40016FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public static Predicate<BuildingInstance> <>9__121_1;

		[Token(Token = "0x40016FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public static Predicate<ToolMenu.Entry> <>9__121_2;

		[Token(Token = "0x40016FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public static Predicate<BuildingInstance> <>9__123_0;

		[Token(Token = "0x6001722")]
		[Address(RVA = "0x1140028", Offset = "0x1140028", VA = "0x1140028")]
		public <>c()
		{
		}

		[Token(Token = "0x6001723")]
		[Address(RVA = "0x1140030", Offset = "0x1140030", VA = "0x1140030")]
		internal bool <HasEnoughRoads>b__105_0(ToolMenu.Entry x)
		{
			return default(bool);
		}

		[Token(Token = "0x6001724")]
		[Address(RVA = "0x1140050", Offset = "0x1140050", VA = "0x1140050")]
		internal bool <UpdateState>b__113_0(ToolMenu.Entry x)
		{
			return default(bool);
		}

		[Token(Token = "0x6001725")]
		[Address(RVA = "0x1140070", Offset = "0x1140070", VA = "0x1140070")]
		internal bool <UpdateState>b__113_1(ToolMenu.Entry x)
		{
			return default(bool);
		}

		[Token(Token = "0x6001726")]
		[Address(RVA = "0x1140090", Offset = "0x1140090", VA = "0x1140090")]
		internal bool <UpdateState>b__113_2(BuildingInstance x)
		{
			return default(bool);
		}

		[Token(Token = "0x6001727")]
		[Address(RVA = "0x11400B8", Offset = "0x11400B8", VA = "0x11400B8")]
		internal bool <UpdateState>b__113_3(ToolMenu.Entry x)
		{
			return default(bool);
		}

		[Token(Token = "0x6001728")]
		[Address(RVA = "0x11400F8", Offset = "0x11400F8", VA = "0x11400F8")]
		internal bool <UpdateState>b__113_4(BuildingInstance x)
		{
			return default(bool);
		}

		[Token(Token = "0x6001729")]
		[Address(RVA = "0x1140120", Offset = "0x1140120", VA = "0x1140120")]
		internal bool <UpdateState>b__113_5(ToolMenu.Entry x)
		{
			return default(bool);
		}

		[Token(Token = "0x600172A")]
		[Address(RVA = "0x1140160", Offset = "0x1140160", VA = "0x1140160")]
		internal bool <UpdateState>b__113_6(ToolMenu.Entry x)
		{
			return default(bool);
		}

		[Token(Token = "0x600172B")]
		[Address(RVA = "0x11401A0", Offset = "0x11401A0", VA = "0x11401A0")]
		internal bool <UpdateState>b__113_7(ToolMenu.Entry x)
		{
			return default(bool);
		}

		[Token(Token = "0x600172C")]
		[Address(RVA = "0x11401E0", Offset = "0x11401E0", VA = "0x11401E0")]
		internal bool <UpdateState>b__113_8(BuildingInstance x)
		{
			return default(bool);
		}

		[Token(Token = "0x600172D")]
		[Address(RVA = "0x11401FC", Offset = "0x11401FC", VA = "0x11401FC")]
		internal bool <UpdateState>b__113_9(BuildingInstance x)
		{
			return default(bool);
		}

		[Token(Token = "0x600172E")]
		[Address(RVA = "0x1140224", Offset = "0x1140224", VA = "0x1140224")]
		internal bool <UpdateState>b__113_10(ToolMenu.Entry x)
		{
			return default(bool);
		}

		[Token(Token = "0x600172F")]
		[Address(RVA = "0x1140264", Offset = "0x1140264", VA = "0x1140264")]
		internal bool <UpdateState>b__113_11(ToolMenu.Entry x)
		{
			return default(bool);
		}

		[Token(Token = "0x6001730")]
		[Address(RVA = "0x11402A4", Offset = "0x11402A4", VA = "0x11402A4")]
		internal bool <ShowReturnToWorldMapHint>b__114_0(ToolMenu.Entry x)
		{
			return default(bool);
		}

		[Token(Token = "0x6001731")]
		[Address(RVA = "0x11402C4", Offset = "0x11402C4", VA = "0x11402C4")]
		internal bool <ShowGeneralHints>b__121_0(BuildingInstance x)
		{
			return default(bool);
		}

		[Token(Token = "0x6001732")]
		[Address(RVA = "0x114030C", Offset = "0x114030C", VA = "0x114030C")]
		internal bool <ShowGeneralHints>b__121_1(BuildingInstance x)
		{
			return default(bool);
		}

		[Token(Token = "0x6001733")]
		[Address(RVA = "0x11403A4", Offset = "0x11403A4", VA = "0x11403A4")]
		internal bool <ShowGeneralHints>b__121_2(ToolMenu.Entry x)
		{
			return default(bool);
		}

		[Token(Token = "0x6001734")]
		[Address(RVA = "0x11403C4", Offset = "0x11403C4", VA = "0x11403C4")]
		internal bool <ShowPostTutorialHints>b__123_0(BuildingInstance x)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x200038F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6A83A4", Offset = "0x6A83A4")]
	private sealed class <>c__DisplayClass107_0
	{
		[Token(Token = "0x40016FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public ZoneManager.ZoneType zoneType;

		[Token(Token = "0x6001735")]
		[Address(RVA = "0x1140504", Offset = "0x1140504", VA = "0x1140504")]
		public <>c__DisplayClass107_0()
		{
		}

		[Token(Token = "0x6001736")]
		[Address(RVA = "0x114050C", Offset = "0x114050C", VA = "0x114050C")]
		internal bool <ShowZoningHintMessage>b__0(ToolMenu.Entry x)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x2000390")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6A83B4", Offset = "0x6A83B4")]
	private sealed class <>c__DisplayClass122_0
	{
		[Token(Token = "0x40016FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public CityServiceManager.ServiceType serviceType;

		[Token(Token = "0x40016FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public BuildingInfo upgradedServiceBuilding;

		[Token(Token = "0x6001737")]
		[Address(RVA = "0x1140544", Offset = "0x1140544", VA = "0x1140544")]
		public <>c__DisplayClass122_0()
		{
		}

		[Token(Token = "0x6001738")]
		[Address(RVA = "0x114054C", Offset = "0x114054C", VA = "0x114054C")]
		internal bool <ShowUpgradeMessageForServiceBuilding>b__0(BuildingInfo x)
		{
			return default(bool);
		}

		[Token(Token = "0x6001739")]
		[Address(RVA = "0x11405F4", Offset = "0x11405F4", VA = "0x11405F4")]
		internal bool <ShowUpgradeMessageForServiceBuilding>b__1(BuildingInstance x)
		{
			return default(bool);
		}

		[Token(Token = "0x600173A")]
		[Address(RVA = "0x11406C0", Offset = "0x11406C0", VA = "0x11406C0")]
		internal bool <ShowUpgradeMessageForServiceBuilding>b__2(ToolMenu.Entry x)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x400079A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6A9254", Offset = "0x6A9254")]
	private TutorialState <state>k__BackingField;

	[Token(Token = "0x400079B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject inWorldTutorialTipPrefab;

	[Token(Token = "0x400079C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform regionUnlockHintTransform;

	[Token(Token = "0x400079D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private SelectedInfoBox inWorldTutorialTip;

	[Token(Token = "0x400079E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private HandPoseHint handPoseHint;

	[Token(Token = "0x400079F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6A9264", Offset = "0x6A9264")]
	private Vector3 <inWorldTutorialTipLocation>k__BackingField;

	[Token(Token = "0x40007A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private float timeInState;

	[Token(Token = "0x40007A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float stateDelay;

	[Token(Token = "0x40007A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private float stateTimer;

	[Token(Token = "0x40007A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public float interstepDelay;

	[Token(Token = "0x40007A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private bool hasGazedAtController;

	[Token(Token = "0x40007A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5D")]
	private bool shouldSkipTutorial;

	[Token(Token = "0x40007A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private int focusBuildingX;

	[Token(Token = "0x40007A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private int focusBuildingY;

	[Token(Token = "0x40007A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private bool hasTriggeredFireEvent;

	[Token(Token = "0x40007A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x69")]
	private bool hasShownSmartwatchHint;

	[Token(Token = "0x40007AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6A")]
	private bool hasGrabMoved;

	[Token(Token = "0x40007AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6B")]
	private bool hasGrabNotMoved;

	[Token(Token = "0x40007AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private bool hasRotatedView;

	[Token(Token = "0x40007AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6D")]
	private bool hasZoomed;

	[Token(Token = "0x40007AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6E")]
	private bool hasRotatedViewInPlace;

	[Token(Token = "0x40007AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6F")]
	private bool hasZoomedInPlace;

	[Token(Token = "0x40007B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private bool hasShownDisconnectedBuildingsHint;

	[Token(Token = "0x40007B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x71")]
	private bool hasResolvedDisconnectedBuildings;

	[Token(Token = "0x40007B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x72")]
	private bool hasShowSandstormWarningHint;

	[Token(Token = "0x40007B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x73")]
	private bool hasResolvedSandstormWarning;

	[Token(Token = "0x40007B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private bool hasUpgradedBuilding;

	[Token(Token = "0x40007B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x75")]
	private bool hasBuiltAirport;

	[Token(Token = "0x40007B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x76")]
	private bool hasBuiltSchoolBoostingBuilding;

	[Token(Token = "0x40007B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x77")]
	private bool hasShownUnpoweredCellTowerHint;

	[Token(Token = "0x40007B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private bool hasResolvedUnpoweredCellTower;

	[Token(Token = "0x40007B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x79")]
	private bool hasUsedUndo;

	[Token(Token = "0x40007BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7A")]
	private bool hasGrabMovedWithHandTracking;

	[Token(Token = "0x40007BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6A9274", Offset = "0x6A9274")]
	private bool <hasRotatedClockwiseViewWithHandTracking>k__BackingField;

	[Token(Token = "0x40007BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6A9284", Offset = "0x6A9284")]
	private bool <hasRotatedAntiClockwiseViewWithHandTracking>k__BackingField;

	[Token(Token = "0x40007BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6A9294", Offset = "0x6A9294")]
	private bool <hasZoomedInWithHandTracking>k__BackingField;

	[Token(Token = "0x40007BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6A92A4", Offset = "0x6A92A4")]
	private bool <hasZoomedOutWithHandTracking>k__BackingField;

	[Token(Token = "0x40007BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7F")]
	private bool hasBuiltWithHandTracking;

	[Token(Token = "0x40007C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private BuildingInfo policeDepartmentUpgrade;

	[Token(Token = "0x40007C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private BuildingInfo fireDepartmentUpgrade;

	[Token(Token = "0x40007C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private Vector3 controllerTutorialHintBoxPosition;

	[Token(Token = "0x40007C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	private float showNotEnoughFundsAlertTime;

	[Token(Token = "0x40007C4")]
	private const float showNotEnoughFundsDuration = 8f;

	[Token(Token = "0x40007C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private bool hasSentHandTrackingAnalyticsEvent;

	[Token(Token = "0x40007C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	private float handTrackingControlsStartTime;

	[Token(Token = "0x40007C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private float controlsStateTimer;

	[Token(Token = "0x40007C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private float timeSpentLookingAtWatch;

	[Token(Token = "0x1700022B")]
	public Type saveModuleDataType
	{
		[Token(Token = "0x6000AAD")]
		[Address(RVA = "0x107F0E4", Offset = "0x107F0E4", VA = "0x107F0E4", Slot = "6")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700022C")]
	public TutorialState state
	{
		[Token(Token = "0x6000AAE")]
		[Address(RVA = "0x107F154", Offset = "0x107F154", VA = "0x107F154")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6B092C", Offset = "0x6B092C")]
		get
		{
			return default(TutorialState);
		}
		[Token(Token = "0x6000AAF")]
		[Address(RVA = "0x107F15C", Offset = "0x107F15C", VA = "0x107F15C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6B093C", Offset = "0x6B093C")]
		private set
		{
		}
	}

	[Token(Token = "0x1700022D")]
	private Player player
	{
		[Token(Token = "0x6000AB0")]
		[Address(RVA = "0x107F164", Offset = "0x107F164", VA = "0x107F164")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700022E")]
	public Vector3 inWorldTutorialTipLocation
	{
		[Token(Token = "0x6000AB1")]
		[Address(RVA = "0x107F1B4", Offset = "0x107F1B4", VA = "0x107F1B4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6B094C", Offset = "0x6B094C")]
		get
		{
			return default(Vector3);
		}
		[Token(Token = "0x6000AB2")]
		[Address(RVA = "0x107F1C0", Offset = "0x107F1C0", VA = "0x107F1C0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6B095C", Offset = "0x6B095C")]
		private set
		{
		}
	}

	[Token(Token = "0x1700022F")]
	public bool isInTutorialLevel
	{
		[Token(Token = "0x6000AB3")]
		[Address(RVA = "0x107F1CC", Offset = "0x107F1CC", VA = "0x107F1CC")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000230")]
	public bool shouldAllowPlayerMovement
	{
		[Token(Token = "0x6000AB4")]
		[Address(RVA = "0x107F41C", Offset = "0x107F41C", VA = "0x107F41C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000231")]
	public bool shouldAllowPlayerToolUsage
	{
		[Token(Token = "0x6000AB5")]
		[Address(RVA = "0x107F42C", Offset = "0x107F42C", VA = "0x107F42C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000232")]
	public bool restrictToRoadTool
	{
		[Token(Token = "0x6000AB6")]
		[Address(RVA = "0x107F450", Offset = "0x107F450", VA = "0x107F450")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000233")]
	public bool restrictBuildingCategories
	{
		[Token(Token = "0x6000AB7")]
		[Address(RVA = "0x107F488", Offset = "0x107F488", VA = "0x107F488")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000234")]
	public bool canSpawnSeaport
	{
		[Token(Token = "0x6000AB8")]
		[Address(RVA = "0x107F4C0", Offset = "0x107F4C0", VA = "0x107F4C0")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000235")]
	public bool shouldHideWatchAndBuildButton
	{
		[Token(Token = "0x6000AB9")]
		[Address(RVA = "0x107F4F8", Offset = "0x107F4F8", VA = "0x107F4F8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000236")]
	private Vector3 seaportHintPosition
	{
		[Token(Token = "0x6000ABA")]
		[Address(RVA = "0x107F53C", Offset = "0x107F53C", VA = "0x107F53C")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x17000237")]
	public bool hasRotatedClockwiseViewWithHandTracking
	{
		[Token(Token = "0x6000ABB")]
		[Address(RVA = "0x107F5C8", Offset = "0x107F5C8", VA = "0x107F5C8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6B096C", Offset = "0x6B096C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000ABC")]
		[Address(RVA = "0x107F5D0", Offset = "0x107F5D0", VA = "0x107F5D0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6B097C", Offset = "0x6B097C")]
		private set
		{
		}
	}

	[Token(Token = "0x17000238")]
	public bool hasRotatedAntiClockwiseViewWithHandTracking
	{
		[Token(Token = "0x6000ABD")]
		[Address(RVA = "0x107F5DC", Offset = "0x107F5DC", VA = "0x107F5DC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6B098C", Offset = "0x6B098C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000ABE")]
		[Address(RVA = "0x107F5E4", Offset = "0x107F5E4", VA = "0x107F5E4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6B099C", Offset = "0x6B099C")]
		private set
		{
		}
	}

	[Token(Token = "0x17000239")]
	public bool hasZoomedInWithHandTracking
	{
		[Token(Token = "0x6000ABF")]
		[Address(RVA = "0x107F5F0", Offset = "0x107F5F0", VA = "0x107F5F0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6B09AC", Offset = "0x6B09AC")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000AC0")]
		[Address(RVA = "0x107F5F8", Offset = "0x107F5F8", VA = "0x107F5F8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6B09BC", Offset = "0x6B09BC")]
		private set
		{
		}
	}

	[Token(Token = "0x1700023A")]
	public bool hasZoomedOutWithHandTracking
	{
		[Token(Token = "0x6000AC1")]
		[Address(RVA = "0x107F604", Offset = "0x107F604", VA = "0x107F604")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6B09CC", Offset = "0x6B09CC")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000AC2")]
		[Address(RVA = "0x107F60C", Offset = "0x107F60C", VA = "0x107F60C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6B09DC", Offset = "0x6B09DC")]
		private set
		{
		}
	}

	[Token(Token = "0x1700023B")]
	public bool shouldShowHintInWatchDisplay
	{
		[Token(Token = "0x6000AC3")]
		[Address(RVA = "0x107F618", Offset = "0x107F618", VA = "0x107F618")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000AC4")]
	[Address(RVA = "0x107F650", Offset = "0x107F650", VA = "0x107F650")]
	public void ShowNotEnoughFundsAlert()
	{
	}

	[Token(Token = "0x6000AC5")]
	[Address(RVA = "0x107F684", Offset = "0x107F684", VA = "0x107F684")]
	private void Start()
	{
	}

	[Token(Token = "0x6000AC6")]
	[Address(RVA = "0x107F820", Offset = "0x107F820", VA = "0x107F820")]
	public void Reset()
	{
	}

	[Token(Token = "0x6000AC7")]
	[Address(RVA = "0x107F840", Offset = "0x107F840", VA = "0x107F840")]
	private void EnterState(TutorialState newState)
	{
	}

	[Token(Token = "0x6000AC8")]
	[Address(RVA = "0x107FE48", Offset = "0x107FE48", VA = "0x107FE48")]
	public void OnBuiltSchoolBoostingBuilding()
	{
	}

	[Token(Token = "0x6000AC9")]
	[Address(RVA = "0x107FE54", Offset = "0x107FE54", VA = "0x107FE54")]
	public void OnBuiltWithHandTracking()
	{
	}

	[Token(Token = "0x6000ACA")]
	[Address(RVA = "0x107FE60", Offset = "0x107FE60", VA = "0x107FE60")]
	public void OnGrabMove(float distance)
	{
	}

	[Token(Token = "0x6000ACB")]
	[Address(RVA = "0x107FF70", Offset = "0x107FF70", VA = "0x107FF70")]
	public void OnUsedUndo()
	{
	}

	[Token(Token = "0x6000ACC")]
	[Address(RVA = "0x107FF7C", Offset = "0x107FF7C", VA = "0x107FF7C")]
	public void OnRotateView()
	{
	}

	[Token(Token = "0x6000ACD")]
	[Address(RVA = "0x108022C", Offset = "0x108022C", VA = "0x108022C")]
	public void OnZoomView()
	{
	}

	[Token(Token = "0x6000ACE")]
	[Address(RVA = "0x10803F0", Offset = "0x10803F0", VA = "0x10803F0")]
	public void OnRotateInPlace()
	{
	}

	[Token(Token = "0x6000ACF")]
	[Address(RVA = "0x1080470", Offset = "0x1080470", VA = "0x1080470")]
	public void OnZoomInPlace()
	{
	}

	[Token(Token = "0x6000AD0")]
	[Address(RVA = "0x10804F0", Offset = "0x10804F0", VA = "0x10804F0")]
	public void OnUpgradedBuilding()
	{
	}

	[Token(Token = "0x6000AD1")]
	[Address(RVA = "0x10804FC", Offset = "0x10804FC", VA = "0x10804FC")]
	private void HintAtSelectedTool()
	{
	}

	[Token(Token = "0x6000AD2")]
	[Address(RVA = "0x10806C0", Offset = "0x10806C0", VA = "0x10806C0")]
	private void HintAtUndoBubble()
	{
	}

	[Token(Token = "0x6000AD3")]
	[Address(RVA = "0x1080880", Offset = "0x1080880", VA = "0x1080880")]
	private void HintAtMenuType(Predicate<ToolMenu.Entry> predicate)
	{
	}

	[Token(Token = "0x6000AD4")]
	[Address(RVA = "0x1080EA4", Offset = "0x1080EA4", VA = "0x1080EA4")]
	private bool FindBuilding(Predicate<BuildingInstance> predicate, bool moveTipLocation = true)
	{
		return default(bool);
	}

	[Token(Token = "0x6000AD5")]
	[Address(RVA = "0x108113C", Offset = "0x108113C", VA = "0x108113C")]
	private bool FindZoneableTile(out int tileX, out int tileY)
	{
		return default(bool);
	}

	[Token(Token = "0x6000AD6")]
	[Address(RVA = "0x1081328", Offset = "0x1081328", VA = "0x1081328")]
	private bool HasEnoughRoads()
	{
		return default(bool);
	}

	[Token(Token = "0x6000AD7")]
	[Address(RVA = "0x108154C", Offset = "0x108154C", VA = "0x108154C")]
	private void HintAtZoneableArea(ZoneManager.ZoneType zoneType, string message)
	{
	}

	[Token(Token = "0x6000AD8")]
	[Address(RVA = "0x1081708", Offset = "0x1081708", VA = "0x1081708")]
	private void ShowZoningHintMessage(ZoneManager.ZoneType zoneType)
	{
	}

	[Token(Token = "0x6000AD9")]
	[Address(RVA = "0x1081F2C", Offset = "0x1081F2C", VA = "0x1081F2C")]
	private bool CanAffordServiceBuilding(CityServiceManager.ServiceType serviceType)
	{
		return default(bool);
	}

	[Token(Token = "0x6000ADA")]
	[Address(RVA = "0x1082194", Offset = "0x1082194", VA = "0x1082194")]
	private bool CanBuildCityHall()
	{
		return default(bool);
	}

	[Token(Token = "0x6000ADB")]
	[Address(RVA = "0x1081BE0", Offset = "0x1081BE0", VA = "0x1081BE0")]
	private void ShowSelectedInfoBoxHint(string languageKey, Sprite icon, bool showHintIfLineMissing = true)
	{
	}

	[Token(Token = "0x6000ADC")]
	[Address(RVA = "0x10823FC", Offset = "0x10823FC", VA = "0x10823FC")]
	private void ShowControlsHint(ControllerLabels.LabelType labelType)
	{
	}

	[Token(Token = "0x6000ADD")]
	[Address(RVA = "0x1082634", Offset = "0x1082634", VA = "0x1082634")]
	private void UpdateState()
	{
	}

	[Token(Token = "0x6000ADE")]
	[Address(RVA = "0x1085AF8", Offset = "0x1085AF8", VA = "0x1085AF8")]
	private void ShowReturnToWorldMapHint()
	{
	}

	[Token(Token = "0x6000ADF")]
	[Address(RVA = "0x1085CB4", Offset = "0x1085CB4", VA = "0x1085CB4")]
	private bool ShouldPlayCompleteChime(TutorialState checkState)
	{
		return default(bool);
	}

	[Token(Token = "0x6000AE0")]
	[Address(RVA = "0x107F440", Offset = "0x107F440", VA = "0x107F440")]
	private bool IsControlsTutorialState(TutorialState checkState)
	{
		return default(bool);
	}

	[Token(Token = "0x6000AE1")]
	[Address(RVA = "0x1085CD8", Offset = "0x1085CD8", VA = "0x1085CD8")]
	private bool IsStateCompleted(TutorialState checkState)
	{
		return default(bool);
	}

	[Token(Token = "0x6000AE2")]
	[Address(RVA = "0x10867E0", Offset = "0x10867E0", VA = "0x10867E0")]
	private void CheckForFastForward()
	{
	}

	[Token(Token = "0x6000AE3")]
	[Address(RVA = "0x1086858", Offset = "0x1086858", VA = "0x1086858")]
	private void CheckForNeededRewind()
	{
	}

	[Token(Token = "0x6000AE4")]
	[Address(RVA = "0x1086AF4", Offset = "0x1086AF4", VA = "0x1086AF4")]
	private void ShowGeneralTutorialHints()
	{
	}

	[Token(Token = "0x6000AE5")]
	[Address(RVA = "0x1086D9C", Offset = "0x1086D9C", VA = "0x1086D9C")]
	private void ShowGeneralHints()
	{
	}

	[Token(Token = "0x6000AE6")]
	[Address(RVA = "0x10878E8", Offset = "0x10878E8", VA = "0x10878E8")]
	private bool ShowUpgradeMessageForServiceBuilding(ref BuildingInfo buildingTypeCached, CityServiceManager.ServiceType serviceType)
	{
		return default(bool);
	}

	[Token(Token = "0x6000AE7")]
	[Address(RVA = "0x1087CC0", Offset = "0x1087CC0", VA = "0x1087CC0")]
	private void ShowPostTutorialHints()
	{
	}

	[Token(Token = "0x6000AE8")]
	[Address(RVA = "0x1086940", Offset = "0x1086940", VA = "0x1086940")]
	private bool DoesNeedControlsTutorial()
	{
		return default(bool);
	}

	[Token(Token = "0x6000AE9")]
	[Address(RVA = "0x10883C0", Offset = "0x10883C0", VA = "0x10883C0")]
	private void ProcessTutorialState()
	{
	}

	[Token(Token = "0x6000AEA")]
	[Address(RVA = "0x10885DC", Offset = "0x10885DC", VA = "0x10885DC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000AEB")]
	[Address(RVA = "0x10888BC", Offset = "0x10888BC", VA = "0x10888BC", Slot = "7")]
	public SaveSystem.ModuleData OnSave()
	{
		return null;
	}

	[Token(Token = "0x6000AEC")]
	[Address(RVA = "0x10889EC", Offset = "0x10889EC", VA = "0x10889EC", Slot = "8")]
	public void OnLoad(SaveSystem.SaveGame saveGame, SaveSystem.ModuleData moduleData)
	{
	}

	[Token(Token = "0x6000AED")]
	[Address(RVA = "0x1088BA0", Offset = "0x1088BA0", VA = "0x1088BA0")]
	public void PostLoad()
	{
	}

	[Token(Token = "0x6000AEE")]
	[Address(RVA = "0x1088BA8", Offset = "0x1088BA8", VA = "0x1088BA8", Slot = "9")]
	public void OnDebugPanel()
	{
	}

	[Token(Token = "0x6000AEF")]
	[Address(RVA = "0x1088F3C", Offset = "0x1088F3C", VA = "0x1088F3C")]
	public void SkipTutorial()
	{
	}

	[Token(Token = "0x6000AF0")]
	[Address(RVA = "0x107F9A4", Offset = "0x107F9A4", VA = "0x107F9A4")]
	private void GenerateControllerTutorialHintBoxPosition()
	{
	}

	[Token(Token = "0x6000AF1")]
	[Address(RVA = "0x1088FD4", Offset = "0x1088FD4", VA = "0x1088FD4")]
	public TutorialManager()
	{
	}
}
[Token(Token = "0x200010A")]
public class ActiveToolDisplay : MonoBehaviour
{
	[Token(Token = "0x40007C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform displayRoot;

	[Token(Token = "0x40007CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform entryDisplayRoot;

	[Token(Token = "0x40007CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject elementPrefab;

	[Token(Token = "0x40007CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GazeSphere innerGazeTrigger;

	[Token(Token = "0x40007CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GazeSphere outerGazeTrigger;

	[Token(Token = "0x40007CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public WheelMenuDescriptionPanel wheelMenuDescriptionPanel;

	[Token(Token = "0x40007CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Bubble bubble;

	[Token(Token = "0x40007D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Button bubbleButton;

	[Token(Token = "0x40007D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private WheelMenuEntry selectedEntry;

	[Token(Token = "0x1700023C")]
	private Player player
	{
		[Token(Token = "0x6000AF2")]
		[Address(RVA = "0x109EEEC", Offset = "0x109EEEC", VA = "0x109EEEC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000AF3")]
	[Address(RVA = "0x109EF3C", Offset = "0x109EF3C", VA = "0x109EF3C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000AF4")]
	[Address(RVA = "0x109EFD0", Offset = "0x109EFD0", VA = "0x109EFD0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000AF5")]
	[Address(RVA = "0x109F15C", Offset = "0x109F15C", VA = "0x109F15C")]
	public void ClearSelection()
	{
	}

	[Token(Token = "0x6000AF6")]
	[Address(RVA = "0x109F220", Offset = "0x109F220", VA = "0x109F220")]
	public void OnPressBubble()
	{
	}

	[Token(Token = "0x6000AF7")]
	[Address(RVA = "0x109F5EC", Offset = "0x109F5EC", VA = "0x109F5EC")]
	public void Select(WheelMenuEntry existingEntry)
	{
	}

	[Token(Token = "0x6000AF8")]
	[Address(RVA = "0x109FA28", Offset = "0x109FA28", VA = "0x109FA28")]
	private void Update()
	{
	}

	[Token(Token = "0x6000AF9")]
	[Address(RVA = "0x10A0370", Offset = "0x10A0370", VA = "0x10A0370")]
	public ActiveToolDisplay()
	{
	}
}
[Token(Token = "0x200010B")]
[ExecuteInEditMode]
public class AutoResizeTextBox : MonoBehaviour
{
	[Token(Token = "0x40007D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Text textComponent;

	[Token(Token = "0x6000AFA")]
	[Address(RVA = "0x10A3C40", Offset = "0x10A3C40", VA = "0x10A3C40")]
	private void Update()
	{
	}

	[Token(Token = "0x6000AFB")]
	[Address(RVA = "0x10A3D64", Offset = "0x10A3D64", VA = "0x10A3D64")]
	public AutoResizeTextBox()
	{
	}
}
[Token(Token = "0x200010C")]
public class Bubble : MonoBehaviour, IPointerEnterHandler, IEventSystemHandler, IPointerExitHandler, IPointerDownHandler
{
	[Token(Token = "0x40007D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ParticleSystem burstEffect;

	[Token(Token = "0x40007D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public MeshRenderer crystalMeshRenderer;

	[Token(Token = "0x40007D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private MeshRenderer bubbleMeshRenderer;

	[Token(Token = "0x40007D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Vector3 startingScale;

	[Token(Token = "0x40007D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float wobbleAmplitude;

	[Token(Token = "0x40007D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float dampedWobbleAmplitude;

	[Token(Token = "0x40007D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private float phase;

	[Token(Token = "0x40007DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6A92B4", Offset = "0x6A92B4")]
	private SphereCollider <sphereCollider>k__BackingField;

	[Token(Token = "0x40007DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float startingColliderRadius;

	[Token(Token = "0x40007DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private Vector3 crystalVelocity;

	[Token(Token = "0x40007DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public float hintPulseAmplitude;

	[Token(Token = "0x40007DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public float hintPulseFrequency;

	[Token(Token = "0x40007DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6A92C4", Offset = "0x6A92C4")]
	private bool <isHintingAt>k__BackingField;

	[Token(Token = "0x40007E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private MaterialPropertyBlock materialProperties;

	[Token(Token = "0x40007E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Color bubbleColour;

	[Token(Token = "0x40007E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private int colorId;

	[Token(Token = "0x40007E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static List<Bubble> allBubbles;

	[Token(Token = "0x1700023D")]
	public SphereCollider sphereCollider
	{
		[Token(Token = "0x6000AFC")]
		[Address(RVA = "0x10AC458", Offset = "0x10AC458", VA = "0x10AC458")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6B09EC", Offset = "0x6B09EC")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000AFD")]
		[Address(RVA = "0x10AC460", Offset = "0x10AC460", VA = "0x10AC460")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6B09FC", Offset = "0x6B09FC")]
		private set
		{
		}
	}

	[Token(Token = "0x1700023E")]
	public float desiredRadius
	{
		[Token(Token = "0x6000AFE")]
		[Address(RVA = "0x10AC468", Offset = "0x10AC468", VA = "0x10AC468")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x1700023F")]
	public bool isHintingAt
	{
		[Token(Token = "0x6000AFF")]
		[Address(RVA = "0x10AC470", Offset = "0x10AC470", VA = "0x10AC470")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6B0A0C", Offset = "0x6B0A0C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000B00")]
		[Address(RVA = "0x10AC478", Offset = "0x10AC478", VA = "0x10AC478")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6B0A1C", Offset = "0x6B0A1C")]
		set
		{
		}
	}

	[Token(Token = "0x17000240")]
	public bool crystalised
	{
		[Token(Token = "0x6000B01")]
		[Address(RVA = "0x10AC484", Offset = "0x10AC484", VA = "0x10AC484")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000B02")]
		[Address(RVA = "0x109EFEC", Offset = "0x109EFEC", VA = "0x109EFEC")]
		set
		{
		}
	}

	[Token(Token = "0x6000B03")]
	[Address(RVA = "0x10AC51C", Offset = "0x10AC51C", VA = "0x10AC51C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000B04")]
	[Address(RVA = "0x109F8C4", Offset = "0x109F8C4", VA = "0x109F8C4")]
	public void SetColour(Color colour)
	{
	}

	[Token(Token = "0x6000B05")]
	[Address(RVA = "0x10AC6D0", Offset = "0x10AC6D0", VA = "0x10AC6D0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000B06")]
	[Address(RVA = "0x10AC6C0", Offset = "0x10AC6C0", VA = "0x10AC6C0")]
	public void Poke()
	{
	}

	[Token(Token = "0x6000B07")]
	[Address(RVA = "0x109F308", Offset = "0x109F308", VA = "0x109F308")]
	public void PlayBurstEffect()
	{
	}

	[Token(Token = "0x6000B08")]
	[Address(RVA = "0x10ACBF8", Offset = "0x10ACBF8", VA = "0x10ACBF8", Slot = "4")]
	public void OnPointerEnter(PointerEventData eventData)
	{
	}

	[Token(Token = "0x6000B09")]
	[Address(RVA = "0x10ACC74", Offset = "0x10ACC74", VA = "0x10ACC74", Slot = "6")]
	public void OnPointerDown(PointerEventData eventData)
	{
	}

	[Token(Token = "0x6000B0A")]
	[Address(RVA = "0x10ACE8C", Offset = "0x10ACE8C", VA = "0x10ACE8C", Slot = "5")]
	public void OnPointerExit(PointerEventData eventData)
	{
	}

	[Token(Token = "0x6000B0B")]
	[Address(RVA = "0x10ACF24", Offset = "0x10ACF24", VA = "0x10ACF24")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000B0C")]
	[Address(RVA = "0x10ACFA8", Offset = "0x10ACFA8", VA = "0x10ACFA8")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000B0D")]
	[Address(RVA = "0x10AD02C", Offset = "0x10AD02C", VA = "0x10AD02C")]
	public static float GetClosestDistanceToAnyBubble(Ray ray)
	{
		return default(float);
	}

	[Token(Token = "0x6000B0E")]
	[Address(RVA = "0x10AD380", Offset = "0x10AD380", VA = "0x10AD380")]
	public Bubble()
	{
	}
}
[Token(Token = "0x200010D")]
public class BudgetExpenseIcon : MonoBehaviour
{
	[Token(Token = "0x40007E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public BudgetManager.ExpenseCategory category;

	[Token(Token = "0x40007E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Text value;

	[Token(Token = "0x6000B10")]
	[Address(RVA = "0x10AD478", Offset = "0x10AD478", VA = "0x10AD478")]
	public void UpdateValue(BudgetManager.BudgetReport report)
	{
	}

	[Token(Token = "0x6000B11")]
	[Address(RVA = "0x10AD548", Offset = "0x10AD548", VA = "0x10AD548")]
	public BudgetExpenseIcon()
	{
	}
}
[Token(Token = "0x200010E")]
public class BudgetMenu : MonoBehaviour
{
	[Token(Token = "0x40007E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Text totalExpensesValue;

	[Token(Token = "0x40007E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Text totalTaxesValue;

	[Token(Token = "0x40007E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Text weeklyIncomeValue;

	[Token(Token = "0x40007E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Text residentialIncome;

	[Token(Token = "0x40007EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Text commercialIncome;

	[Token(Token = "0x40007EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Text industrialIncome;

	[Token(Token = "0x40007EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private BudgetExpenseIcon[] expenseIcons;

	[Token(Token = "0x40007ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private TaxRateControl[] taxRateControls;

	[Token(Token = "0x6000B12")]
	[Address(RVA = "0x10AE4E8", Offset = "0x10AE4E8", VA = "0x10AE4E8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000B13")]
	[Address(RVA = "0x10AE558", Offset = "0x10AE558", VA = "0x10AE558")]
	private void OnShowTab()
	{
	}

	[Token(Token = "0x6000B14")]
	[Address(RVA = "0x10AE55C", Offset = "0x10AE55C", VA = "0x10AE55C")]
	private void Refresh()
	{
	}

	[Token(Token = "0x6000B15")]
	[Address(RVA = "0x10AE8A8", Offset = "0x10AE8A8", VA = "0x10AE8A8")]
	public BudgetMenu()
	{
	}
}
[Token(Token = "0x200010F")]
public class BadgeGroup
{
	[Token(Token = "0x40007EE")]
	private const float badgeSpacing = 0.85f;

	[Token(Token = "0x40007EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6A92D4", Offset = "0x6A92D4")]
	private int <numActiveBadges>k__BackingField;

	[Token(Token = "0x40007F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private int[] badgeHandles;

	[Token(Token = "0x40007F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool isDirty;

	[Token(Token = "0x40007F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private BuildingBadgeManager manager;

	[Token(Token = "0x40007F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool useVerticalBadgeLayout;

	[Token(Token = "0x17000241")]
	public int numActiveBadges
	{
		[Token(Token = "0x6000B16")]
		[Address(RVA = "0x10A4408", Offset = "0x10A4408", VA = "0x10A4408")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6B0A2C", Offset = "0x6B0A2C")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000B17")]
		[Address(RVA = "0x10A4410", Offset = "0x10A4410", VA = "0x10A4410")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6B0A3C", Offset = "0x6B0A3C")]
		private set
		{
		}
	}

	[Token(Token = "0x6000B18")]
	[Address(RVA = "0x10A4418", Offset = "0x10A4418", VA = "0x10A4418")]
	public BadgeGroup(BuildingBadgeManager manager)
	{
	}

	[Token(Token = "0x6000B19")]
	[Address(RVA = "0x10A44D4", Offset = "0x10A44D4", VA = "0x10A44D4")]
	public void FreeBadges()
	{
	}

	[Token(Token = "0x6000B1A")]
	[Address(RVA = "0x10A4604", Offset = "0x10A4604", VA = "0x10A4604")]
	public bool IsBadgeEnabled(BuildingBadgeManager.BadgeType type)
	{
		return default(bool);
	}

	[Token(Token = "0x6000B1B")]
	[Address(RVA = "0x10A4648", Offset = "0x10A4648", VA = "0x10A4648")]
	public void SetBadgeEnabled(BuildingBadgeManager.BadgeType type, bool enabled)
	{
	}

	[Token(Token = "0x6000B1C")]
	[Address(RVA = "0x10A4A08", Offset = "0x10A4A08", VA = "0x10A4A08")]
	public void Refresh(BuildingInstance building)
	{
	}
}
[Token(Token = "0x2000110")]
public class BuildingBadgeManager : CityModule
{
	[Token(Token = "0x2000391")]
	public enum BadgeType
	{
		[Token(Token = "0x4001701")]
		NoElectricity,
		[Token(Token = "0x4001702")]
		NoWater,
		[Token(Token = "0x4001703")]
		NoNetwork,
		[Token(Token = "0x4001704")]
		SandStorm,
		[Token(Token = "0x4001705")]
		UpgradeAvailable
	}

	[Token(Token = "0x40007F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float badgeSize;

	[Token(Token = "0x40007F5")]
	public const int numBadgeTypes = 5;

	[Token(Token = "0x40007F6")]
	public const int numBadgeParticles = 8;

	[Token(Token = "0x40007F7")]
	private const int maxParticles = 1000;

	[Token(Token = "0x40007F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private int numActiveParticles;

	[Token(Token = "0x40007F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private ParticleSystem system;

	[Token(Token = "0x40007FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private NativeArray<ParticleSystem.Particle> particles;

	[Token(Token = "0x40007FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6A92E4", Offset = "0x6A92E4")]
	private bool <isVisible>k__BackingField;

	[Token(Token = "0x40007FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
	private bool isDirty;

	[Token(Token = "0x40007FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x42")]
	private bool waitingForBuildingEffectAnimation;

	[Token(Token = "0x40007FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public AnimationCurve curve;

	[Token(Token = "0x40007FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float animationSpeed;

	[Token(Token = "0x4000800")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private float animationTime;

	[Token(Token = "0x4000801")]
	private const float animationInDuration = 0.25f;

	[Token(Token = "0x17000242")]
	private Player player
	{
		[Token(Token = "0x6000B1D")]
		[Address(RVA = "0x10AF8C8", Offset = "0x10AF8C8", VA = "0x10AF8C8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000243")]
	public bool isVisible
	{
		[Token(Token = "0x6000B1E")]
		[Address(RVA = "0x10AF918", Offset = "0x10AF918", VA = "0x10AF918")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6B0A4C", Offset = "0x6B0A4C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000B1F")]
		[Address(RVA = "0x10AF920", Offset = "0x10AF920", VA = "0x10AF920")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6B0A5C", Offset = "0x6B0A5C")]
		private set
		{
		}
	}

	[Token(Token = "0x17000244")]
	public bool canAddNewBadges
	{
		[Token(Token = "0x6000B26")]
		[Address(RVA = "0x10A476C", Offset = "0x10A476C", VA = "0x10A476C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000B20")]
	[Address(RVA = "0x10AF92C", Offset = "0x10AF92C", VA = "0x10AF92C")]
	public void SetVisible(bool visible)
	{
	}

	[Token(Token = "0x6000B21")]
	[Address(RVA = "0x10A4CC0", Offset = "0x10A4CC0", VA = "0x10A4CC0")]
	public void UpdatePosition(int handle, Vector3 position)
	{
	}

	[Token(Token = "0x6000B22")]
	[Address(RVA = "0x10A4890", Offset = "0x10A4890", VA = "0x10A4890")]
	public int AllocateBadge(BadgeType type)
	{
		return default(int);
	}

	[Token(Token = "0x6000B23")]
	[Address(RVA = "0x10A4564", Offset = "0x10A4564", VA = "0x10A4564")]
	public void FreeBadge(int handle)
	{
	}

	[Token(Token = "0x6000B24")]
	[Address(RVA = "0x10AFA38", Offset = "0x10AFA38", VA = "0x10AFA38")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000B25")]
	[Address(RVA = "0x10AFACC", Offset = "0x10AFACC", VA = "0x10AFACC")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000B27")]
	[Address(RVA = "0x10AFB1C", Offset = "0x10AFB1C", VA = "0x10AFB1C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000B28")]
	[Address(RVA = "0x10AFDD8", Offset = "0x10AFDD8", VA = "0x10AFDD8", Slot = "10")]
	public override void OnResetProgress()
	{
	}

	[Token(Token = "0x6000B29")]
	[Address(RVA = "0x10AFE14", Offset = "0x10AFE14", VA = "0x10AFE14")]
	public BuildingBadgeManager()
	{
	}
}
[Token(Token = "0x2000111")]
public class BuildingHighlighter : SingletonBehaviour<BuildingHighlighter>
{
	[Token(Token = "0x2000392")]
	private struct Highlight
	{
		[Token(Token = "0x4001706")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public BuildingInstance building;

		[Token(Token = "0x4001707")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public GameObject highlightObject;
	}

	[Token(Token = "0x2000393")]
	public delegate bool HighlightMatcher(BuildingInstance building);

	[Token(Token = "0x2000394")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6A83C4", Offset = "0x6A83C4")]
	private sealed class <>c__DisplayClass11_0
	{
		[Token(Token = "0x4001708")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public BuildingInstance building;

		[Token(Token = "0x600173F")]
		[Address(RVA = "0x10CD338", Offset = "0x10CD338", VA = "0x10CD338")]
		public <>c__DisplayClass11_0()
		{
		}

		[Token(Token = "0x6001740")]
		[Address(RVA = "0x10CD958", Offset = "0x10CD958", VA = "0x10CD958")]
		internal bool <RemoveHighlight>b__0(Highlight x)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x4000802")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject highlightPrefab;

	[Token(Token = "0x4000803")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float highlightHeight;

	[Token(Token = "0x4000804")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private List<GameObject> highlightPool;

	[Token(Token = "0x4000805")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private List<Highlight> highlights;

	[Token(Token = "0x4000806")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private HighlightMatcher internalHighlightPredicate;

	[Token(Token = "0x17000245")]
	public HighlightMatcher highlightPredicate
	{
		[Token(Token = "0x6000B2A")]
		[Address(RVA = "0x10CCDBC", Offset = "0x10CCDBC", VA = "0x10CCDBC")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000B2B")]
		[Address(RVA = "0x10CCDC4", Offset = "0x10CCDC4", VA = "0x10CCDC4")]
		set
		{
		}
	}

	[Token(Token = "0x6000B2C")]
	[Address(RVA = "0x10CCF2C", Offset = "0x10CCF2C", VA = "0x10CCF2C")]
	private void AddHighlight(BuildingInstance building)
	{
	}

	[Token(Token = "0x6000B2D")]
	[Address(RVA = "0x10CD1B8", Offset = "0x10CD1B8", VA = "0x10CD1B8")]
	private void RemoveHighlight(BuildingInstance building)
	{
	}

	[Token(Token = "0x6000B2E")]
	[Address(RVA = "0x10CD340", Offset = "0x10CD340", VA = "0x10CD340")]
	private void ClearHighlights()
	{
	}

	[Token(Token = "0x6000B2F")]
	[Address(RVA = "0x10CCDCC", Offset = "0x10CCDCC", VA = "0x10CCDCC")]
	public void Refresh()
	{
	}

	[Token(Token = "0x6000B30")]
	[Address(RVA = "0x10CD8B0", Offset = "0x10CD8B0", VA = "0x10CD8B0")]
	public BuildingHighlighter()
	{
	}
}
[Token(Token = "0x2000112")]
public class CanvasHeightAdjuster : MonoBehaviour
{
	[Token(Token = "0x4000807")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Player player;

	[Token(Token = "0x4000808")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float adjustDelta;

	[Token(Token = "0x4000809")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float startingHeight;

	[Token(Token = "0x400080A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float sittingAdjustDelta;

	[Token(Token = "0x400080B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float sittingThreshold;

	[Token(Token = "0x400080C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float standingThreshold;

	[Token(Token = "0x400080D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public bool isSitting;

	[Token(Token = "0x6000B31")]
	[Address(RVA = "0x10DACEC", Offset = "0x10DACEC", VA = "0x10DACEC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000B32")]
	[Address(RVA = "0x10DADD8", Offset = "0x10DADD8", VA = "0x10DADD8")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000B33")]
	[Address(RVA = "0x10DB014", Offset = "0x10DB014", VA = "0x10DB014")]
	public CanvasHeightAdjuster()
	{
	}
}
[Token(Token = "0x2000113")]
public class CashRewardMessages : ScriptableObjectSingleton<CashRewardMessages>
{
	[Serializable]
	[Token(Token = "0x2000395")]
	public class Message
	{
		[Token(Token = "0x4001709")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string messageKey;

		[Token(Token = "0x400170A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public CityInfo.Theme requiredTheme;

		[Token(Token = "0x400170B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public BuildingInfo requiredBuilding;

		[Token(Token = "0x6001741")]
		[Address(RVA = "0x1116370", Offset = "0x1116370", VA = "0x1116370")]
		public Message()
		{
		}
	}

	[Token(Token = "0x400080E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<Message> messages;

	[Token(Token = "0x6000B34")]
	[Address(RVA = "0x11161CC", Offset = "0x11161CC", VA = "0x11161CC")]
	public Message PickMessage(City city)
	{
		return null;
	}

	[Token(Token = "0x6000B35")]
	[Address(RVA = "0x1116300", Offset = "0x1116300", VA = "0x1116300")]
	public CashRewardMessages()
	{
	}
}
[Token(Token = "0x2000114")]
public class CheatsMenu : MonoBehaviour
{
	[Token(Token = "0x400080F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public DebugFPSCount fpsCounter;

	[Token(Token = "0x4000810")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject messagesPanel;

	[Token(Token = "0x6000B36")]
	[Address(RVA = "0x11188C8", Offset = "0x11188C8", VA = "0x11188C8")]
	public void GiveCash()
	{
	}

	[Token(Token = "0x6000B37")]
	[Address(RVA = "0x1118954", Offset = "0x1118954", VA = "0x1118954")]
	public void LessCash()
	{
	}

	[Token(Token = "0x6000B38")]
	[Address(RVA = "0x11189D8", Offset = "0x11189D8", VA = "0x11189D8")]
	public void ZeroCash()
	{
	}

	[Token(Token = "0x6000B39")]
	[Address(RVA = "0x1118A54", Offset = "0x1118A54", VA = "0x1118A54")]
	public void LevelUp()
	{
	}

	[Token(Token = "0x6000B3A")]
	[Address(RVA = "0x1118AD0", Offset = "0x1118AD0", VA = "0x1118AD0")]
	public void UnlockAll()
	{
	}

	[Token(Token = "0x6000B3B")]
	[Address(RVA = "0x1118B4C", Offset = "0x1118B4C", VA = "0x1118B4C")]
	public void UnlockAllRegions()
	{
	}

	[Token(Token = "0x6000B3C")]
	[Address(RVA = "0x1118BC8", Offset = "0x1118BC8", VA = "0x1118BC8")]
	public void TriggerFire()
	{
	}

	[Token(Token = "0x6000B3D")]
	[Address(RVA = "0x1118C5C", Offset = "0x1118C5C", VA = "0x1118C5C")]
	public void TriggerPolice()
	{
	}

	[Token(Token = "0x6000B3E")]
	[Address(RVA = "0x1118CF4", Offset = "0x1118CF4", VA = "0x1118CF4")]
	public void TriggerAmbulance()
	{
	}

	[Token(Token = "0x6000B3F")]
	[Address(RVA = "0x1118D88", Offset = "0x1118D88", VA = "0x1118D88")]
	public void StreetView()
	{
	}

	[Token(Token = "0x6000B40")]
	[Address(RVA = "0x1118E34", Offset = "0x1118E34", VA = "0x1118E34")]
	public void PauseGame()
	{
	}

	[Token(Token = "0x6000B41")]
	[Address(RVA = "0x1118F0C", Offset = "0x1118F0C", VA = "0x1118F0C")]
	public void TimeX1()
	{
	}

	[Token(Token = "0x6000B42")]
	[Address(RVA = "0x1118FE8", Offset = "0x1118FE8", VA = "0x1118FE8")]
	public void TimeX2()
	{
	}

	[Token(Token = "0x6000B43")]
	[Address(RVA = "0x11190C4", Offset = "0x11190C4", VA = "0x11190C4")]
	public void TimeX3()
	{
	}

	[Token(Token = "0x6000B44")]
	[Address(RVA = "0x11191A0", Offset = "0x11191A0", VA = "0x11191A0")]
	public void TimeX20()
	{
	}

	[Token(Token = "0x6000B45")]
	[Address(RVA = "0x111927C", Offset = "0x111927C", VA = "0x111927C")]
	public void ToggleFPSCounter()
	{
	}

	[Token(Token = "0x6000B46")]
	[Address(RVA = "0x11192E4", Offset = "0x11192E4", VA = "0x11192E4")]
	public void StressTest()
	{
	}

	[Token(Token = "0x6000B47")]
	[Address(RVA = "0x1119454", Offset = "0x1119454", VA = "0x1119454")]
	public void FinishIsland()
	{
	}

	[Token(Token = "0x6000B48")]
	[Address(RVA = "0x1119590", Offset = "0x1119590", VA = "0x1119590")]
	public void SkipTutorial()
	{
	}

	[Token(Token = "0x6000B49")]
	[Address(RVA = "0x1119618", Offset = "0x1119618", VA = "0x1119618")]
	public void EruptVolcano()
	{
	}

	[Token(Token = "0x6000B4A")]
	[Address(RVA = "0x11197AC", Offset = "0x11197AC", VA = "0x11197AC")]
	public void ToggleMessagesPanel()
	{
	}

	[Token(Token = "0x6000B4B")]
	[Address(RVA = "0x11197EC", Offset = "0x11197EC", VA = "0x11197EC")]
	public void ShowCashRewardMessage(string message)
	{
	}

	[Token(Token = "0x6000B4C")]
	[Address(RVA = "0x11198D0", Offset = "0x11198D0", VA = "0x11198D0")]
	public CheatsMenu()
	{
	}
}
[Token(Token = "0x2000115")]
public class CityLevelGraph : MonoBehaviour
{
	[Token(Token = "0x4000811")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject cityLevelBar;

	[Token(Token = "0x4000812")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform cityLevelTop;

	[Token(Token = "0x4000813")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject[] cityLevelIcons;

	[Token(Token = "0x4000814")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float minCityLevelBarScale;

	[Token(Token = "0x4000815")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float maxCityLevelBarScale;

	[Token(Token = "0x4000816")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public int cityLevelsPerIcon;

	[Token(Token = "0x4000817")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Transform cityDioramaRoot;

	[Token(Token = "0x4000818")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Text cityLevelText;

	[Token(Token = "0x4000819")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Image cityLevelProgress;

	[Token(Token = "0x400081A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Text cityLevelName;

	[Token(Token = "0x400081B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public float growDuration;

	[Token(Token = "0x400081C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private float growProgress;

	[Token(Token = "0x400081D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private float timeVisible;

	[Token(Token = "0x400081E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public float growShakeAmount;

	[Token(Token = "0x400081F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public ParticleSystem fireworks;

	[Token(Token = "0x4000820")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public AudioClip levelUpLoopSound;

	[Token(Token = "0x4000821")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public AudioClip levelUpFinishSound;

	[Token(Token = "0x4000822")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private City city;

	[Token(Token = "0x4000823")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private AudioSource audioSource;

	[Token(Token = "0x4000824")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private int unlockedLevel;

	[Token(Token = "0x6000B4D")]
	[Address(RVA = "0x1120A80", Offset = "0x1120A80", VA = "0x1120A80")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000B4E")]
	[Address(RVA = "0x1120AD8", Offset = "0x1120AD8", VA = "0x1120AD8")]
	public void Animate(int inUnlockedLevel)
	{
	}

	[Token(Token = "0x6000B4F")]
	[Address(RVA = "0x1120DD4", Offset = "0x1120DD4", VA = "0x1120DD4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000B50")]
	[Address(RVA = "0x1120BB8", Offset = "0x1120BB8", VA = "0x1120BB8")]
	private void UpdateCityLevelBar(int level, float growAmount)
	{
	}

	[Token(Token = "0x6000B51")]
	[Address(RVA = "0x11210A0", Offset = "0x11210A0", VA = "0x11210A0")]
	public CityLevelGraph()
	{
	}
}
[Token(Token = "0x2000116")]
public class CreditsPanel : MonoBehaviour
{
	[Token(Token = "0x4000825")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ScrollRect scrollRect;

	[Token(Token = "0x4000826")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float scrollSpeed;

	[Token(Token = "0x6000B52")]
	[Address(RVA = "0x102A4B0", Offset = "0x102A4B0", VA = "0x102A4B0")]
	public void CloseButtonPressed()
	{
	}

	[Token(Token = "0x6000B53")]
	[Address(RVA = "0x102A4F4", Offset = "0x102A4F4", VA = "0x102A4F4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000B54")]
	[Address(RVA = "0x102A7E8", Offset = "0x102A7E8", VA = "0x102A7E8")]
	public CreditsPanel()
	{
	}
}
[Token(Token = "0x2000117")]
public class DebugFPSCount : MonoBehaviour
{
	[Token(Token = "0x4000827")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Text text;

	[Token(Token = "0x4000828")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float timeAccum;

	[Token(Token = "0x4000829")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private int frameAccum;

	[Token(Token = "0x400082A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float averageFrameRate;

	[Token(Token = "0x400082B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float min;

	[Token(Token = "0x400082C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float max;

	[Token(Token = "0x400082D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float averageMin;

	[Token(Token = "0x400082E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float averageMax;

	[Token(Token = "0x6000B55")]
	[Address(RVA = "0x102B488", Offset = "0x102B488", VA = "0x102B488")]
	private void Start()
	{
	}

	[Token(Token = "0x6000B56")]
	[Address(RVA = "0x102B4E0", Offset = "0x102B4E0", VA = "0x102B4E0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000B57")]
	[Address(RVA = "0x102B664", Offset = "0x102B664", VA = "0x102B664")]
	public DebugFPSCount()
	{
	}
}
[Token(Token = "0x2000118")]
public class DebugMenu : MonoBehaviour, IDebugPanelProvider
{
	[Token(Token = "0x2000396")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6A83D4", Offset = "0x6A83D4")]
	private sealed class <>c__DisplayClass6_0
	{
		[Token(Token = "0x400170C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public BuildingInfo info;

		[Token(Token = "0x400170D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public DebugMenu <>4__this;

		[Token(Token = "0x6001742")]
		[Address(RVA = "0x102BACC", Offset = "0x102BACC", VA = "0x102BACC")]
		public <>c__DisplayClass6_0()
		{
		}

		[Token(Token = "0x6001743")]
		[Address(RVA = "0x102C20C", Offset = "0x102C20C", VA = "0x102C20C")]
		internal void <Start>b__0()
		{
		}
	}

	[Token(Token = "0x400082F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform buildAnyMenuRoot;

	[Token(Token = "0x4000830")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject buildAnyButtonPrefab;

	[Token(Token = "0x17000246")]
	private City city
	{
		[Token(Token = "0x6000B58")]
		[Address(RVA = "0x102B66C", Offset = "0x102B66C", VA = "0x102B66C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000247")]
	private Player player
	{
		[Token(Token = "0x6000B59")]
		[Address(RVA = "0x102B6D4", Offset = "0x102B6D4", VA = "0x102B6D4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000B5A")]
	[Address(RVA = "0x102B724", Offset = "0x102B724", VA = "0x102B724")]
	private void Start()
	{
	}

	[Token(Token = "0x6000B5B")]
	[Address(RVA = "0x102BAD4", Offset = "0x102BAD4", VA = "0x102BAD4")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000B5C")]
	[Address(RVA = "0x102BB04", Offset = "0x102BB04", VA = "0x102BB04")]
	public void StressTest()
	{
	}

	[Token(Token = "0x6000B5D")]
	[Address(RVA = "0x102BBA0", Offset = "0x102BBA0", VA = "0x102BBA0")]
	public void UnlockAllCheat()
	{
	}

	[Token(Token = "0x6000B5E")]
	[Address(RVA = "0x102BC1C", Offset = "0x102BC1C", VA = "0x102BC1C")]
	public void ZoneDemandCheat()
	{
	}

	[Token(Token = "0x6000B5F")]
	[Address(RVA = "0x102BC64", Offset = "0x102BC64", VA = "0x102BC64")]
	public void FundsCheat()
	{
	}

	[Token(Token = "0x6000B60")]
	[Address(RVA = "0x102BC94", Offset = "0x102BC94", VA = "0x102BC94")]
	private int BuildRoad(int roadY)
	{
		return default(int);
	}

	[Token(Token = "0x6000B61")]
	[Address(RVA = "0x102BE68", Offset = "0x102BE68", VA = "0x102BE68")]
	public void BuildAny()
	{
	}

	[Token(Token = "0x6000B62")]
	[Address(RVA = "0x102BE98", Offset = "0x102BE98", VA = "0x102BE98")]
	public void BuildAll()
	{
	}

	[Token(Token = "0x6000B63")]
	[Address(RVA = "0x102C118", Offset = "0x102C118", VA = "0x102C118", Slot = "4")]
	public void OnDebugPanel()
	{
	}

	[Token(Token = "0x6000B64")]
	[Address(RVA = "0x102C204", Offset = "0x102C204", VA = "0x102C204")]
	public DebugMenu()
	{
	}
}
[Token(Token = "0x2000119")]
public class DepressableButton : MonoBehaviour, IPointerDownHandler, IEventSystemHandler, IPointerUpHandler
{
	[Token(Token = "0x4000831")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float maxDepression;

	[Token(Token = "0x4000832")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private float depression;

	[Token(Token = "0x4000833")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Vector3 startingLocalPosition;

	[Token(Token = "0x4000834")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private VRControllerInputModule vrInputModule;

	[Token(Token = "0x4000835")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool isPressing;

	[Token(Token = "0x4000836")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Button button;

	[Token(Token = "0x17000248")]
	private Player player
	{
		[Token(Token = "0x6000B65")]
		[Address(RVA = "0x102F5A4", Offset = "0x102F5A4", VA = "0x102F5A4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000B66")]
	[Address(RVA = "0x102F5F4", Offset = "0x102F5F4", VA = "0x102F5F4", Slot = "4")]
	public void OnPointerDown(PointerEventData eventData)
	{
	}

	[Token(Token = "0x6000B67")]
	[Address(RVA = "0x102F7A4", Offset = "0x102F7A4", VA = "0x102F7A4", Slot = "5")]
	public void OnPointerUp(PointerEventData eventData)
	{
	}

	[Token(Token = "0x6000B68")]
	[Address(RVA = "0x102F7AC", Offset = "0x102F7AC", VA = "0x102F7AC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000B69")]
	[Address(RVA = "0x102F85C", Offset = "0x102F85C", VA = "0x102F85C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000B6A")]
	[Address(RVA = "0x102FA60", Offset = "0x102FA60", VA = "0x102FA60")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000B6B")]
	[Address(RVA = "0x102FAE0", Offset = "0x102FAE0", VA = "0x102FAE0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000B6C")]
	[Address(RVA = "0x102FA6C", Offset = "0x102FA6C", VA = "0x102FA6C")]
	private void SetDepth(float amount)
	{
	}

	[Token(Token = "0x6000B6D")]
	[Address(RVA = "0x102FC3C", Offset = "0x102FC3C", VA = "0x102FC3C")]
	public DepressableButton()
	{
	}
}
[Token(Token = "0x200011A")]
public class DepressableRotatingButton : MonoBehaviour, IPointerDownHandler, IEventSystemHandler, IPointerUpHandler
{
	[Token(Token = "0x4000837")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool isPressing;

	[Token(Token = "0x4000838")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Button button;

	[Token(Token = "0x4000839")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Image image;

	[Token(Token = "0x400083A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float pressedAngle;

	[Token(Token = "0x400083B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private Quaternion startingRotation;

	[Token(Token = "0x400083C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private VRControllerInputModule vrInputModule;

	[Token(Token = "0x6000B6E")]
	[Address(RVA = "0x102FC50", Offset = "0x102FC50", VA = "0x102FC50")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000B6F")]
	[Address(RVA = "0x102FD00", Offset = "0x102FD00", VA = "0x102FD00")]
	public void Update()
	{
	}

	[Token(Token = "0x6000B70")]
	[Address(RVA = "0x10300D8", Offset = "0x10300D8", VA = "0x10300D8", Slot = "4")]
	public void OnPointerDown(PointerEventData eventData)
	{
	}

	[Token(Token = "0x6000B71")]
	[Address(RVA = "0x103010C", Offset = "0x103010C", VA = "0x103010C", Slot = "5")]
	public void OnPointerUp(PointerEventData eventData)
	{
	}

	[Token(Token = "0x6000B72")]
	[Address(RVA = "0x1030114", Offset = "0x1030114", VA = "0x1030114")]
	public DepressableRotatingButton()
	{
	}
}
[Token(Token = "0x200011B")]
public class DialogMessage : MonoBehaviour
{
	[Token(Token = "0x400083D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject singleButtonLayout;

	[Token(Token = "0x400083E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject dualButtonLayout;

	[Token(Token = "0x400083F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Text displayText;

	[Token(Token = "0x4000840")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Text singleButtonText;

	[Token(Token = "0x4000841")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Text leftButtonText;

	[Token(Token = "0x4000842")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Text rightButtonText;

	[Token(Token = "0x4000843")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject[] menusToHide;

	[Token(Token = "0x4000844")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool[] menusDisplayStatus;

	[Token(Token = "0x4000845")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool isDualButtonLayout;

	[Token(Token = "0x4000846")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Action<bool> resultHandler;

	[Token(Token = "0x17000249")]
	public bool isOpen
	{
		[Token(Token = "0x6000B73")]
		[Address(RVA = "0x10301A0", Offset = "0x10301A0", VA = "0x10301A0")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000B74")]
	[Address(RVA = "0x10301C4", Offset = "0x10301C4", VA = "0x10301C4")]
	public void ShowDialog(string message, string buttonText, [Optional] Action<bool> onClose)
	{
	}

	[Token(Token = "0x6000B75")]
	[Address(RVA = "0x103041C", Offset = "0x103041C", VA = "0x103041C")]
	public void ShowDialog(string message, string leftButton, string rightButton, Action<bool> onClose)
	{
	}

	[Token(Token = "0x6000B76")]
	[Address(RVA = "0x1030278", Offset = "0x1030278", VA = "0x1030278")]
	private void HideOtherMenus()
	{
	}

	[Token(Token = "0x6000B77")]
	[Address(RVA = "0x10304F0", Offset = "0x10304F0", VA = "0x10304F0")]
	public void Close()
	{
	}

	[Token(Token = "0x6000B78")]
	[Address(RVA = "0x1030618", Offset = "0x1030618", VA = "0x1030618")]
	public void SingleButtonPressed()
	{
	}

	[Token(Token = "0x6000B79")]
	[Address(RVA = "0x1030684", Offset = "0x1030684", VA = "0x1030684")]
	public void LeftButtonPressed()
	{
	}

	[Token(Token = "0x6000B7A")]
	[Address(RVA = "0x10306F0", Offset = "0x10306F0", VA = "0x10306F0")]
	public void RightButtonPressed()
	{
	}

	[Token(Token = "0x6000B7B")]
	[Address(RVA = "0x103075C", Offset = "0x103075C", VA = "0x103075C")]
	public DialogMessage()
	{
	}
}
[Token(Token = "0x200011C")]
public class ForceFrontFacingCanvas : MonoBehaviour
{
	[Token(Token = "0x4000847")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private CanvasGroup group;

	[Token(Token = "0x4000848")]
	private const float fadeStart = -0.3f;

	[Token(Token = "0x4000849")]
	private const float fadeEnd = -0.15f;

	[Token(Token = "0x1700024A")]
	private Player player
	{
		[Token(Token = "0x6000B7C")]
		[Address(RVA = "0x1038E7C", Offset = "0x1038E7C", VA = "0x1038E7C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000B7D")]
	[Address(RVA = "0x1038ECC", Offset = "0x1038ECC", VA = "0x1038ECC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000B7E")]
	[Address(RVA = "0x1038F24", Offset = "0x1038F24", VA = "0x1038F24")]
	private void Update()
	{
	}

	[Token(Token = "0x6000B7F")]
	[Address(RVA = "0x10391E4", Offset = "0x10391E4", VA = "0x10391E4")]
	public ForceFrontFacingCanvas()
	{
	}
}
[Token(Token = "0x200011D")]
public class GameCursors : ScriptableObjectSingleton<GameCursors>
{
	[Token(Token = "0x400084A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject genericCursor;

	[Token(Token = "0x400084B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject streetViewCursorPrefab;

	[Token(Token = "0x400084C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Color toolCursorColour;

	[Token(Token = "0x400084D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Color toolInvalidCursorColour;

	[Token(Token = "0x6000B80")]
	[Address(RVA = "0x103A444", Offset = "0x103A444", VA = "0x103A444")]
	public GameCursors()
	{
	}
}
[Token(Token = "0x200011E")]
public class GameIcons : ScriptableObjectSingleton<GameIcons>
{
	[Token(Token = "0x400084E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Sprite buildCost;

	[Token(Token = "0x400084F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Sprite buildCostExceedsFunds;

	[Token(Token = "0x4000850")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Sprite weeklyCostExceedsIncome;

	[Token(Token = "0x4000851")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Sprite refund;

	[Token(Token = "0x4000852")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Sprite cannotBuildHere;

	[Token(Token = "0x4000853")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Sprite bulldozer;

	[Token(Token = "0x4000854")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Sprite increasePower;

	[Token(Token = "0x4000855")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Sprite decreasePower;

	[Token(Token = "0x4000856")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Sprite noPower;

	[Token(Token = "0x4000857")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Sprite increaseWater;

	[Token(Token = "0x4000858")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Sprite decreaseWater;

	[Token(Token = "0x4000859")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Sprite noWater;

	[Token(Token = "0x400085A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Sprite increaseNetwork;

	[Token(Token = "0x400085B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Sprite decreaseNetwork;

	[Token(Token = "0x400085C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Sprite noNetwork;

	[Token(Token = "0x400085D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public Sprite increaseSandstorm;

	[Token(Token = "0x400085E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public Sprite decreaseSandstorm;

	[Token(Token = "0x400085F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public Sprite sandstormWarning;

	[Token(Token = "0x4000860")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public Sprite increasePolice;

	[Token(Token = "0x4000861")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public Sprite decreasePolice;

	[Token(Token = "0x4000862")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public Sprite noPolice;

	[Token(Token = "0x4000863")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public Sprite increaseFire;

	[Token(Token = "0x4000864")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public Sprite decreaseFire;

	[Token(Token = "0x4000865")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public Sprite noFire;

	[Token(Token = "0x4000866")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public Sprite increaseEducation;

	[Token(Token = "0x4000867")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public Sprite decreaseEducation;

	[Token(Token = "0x4000868")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public Sprite noEducation;

	[Token(Token = "0x4000869")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public Sprite increaseHealthcare;

	[Token(Token = "0x400086A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public Sprite decreaseHealthcare;

	[Token(Token = "0x400086B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public Sprite noHealthcare;

	[Token(Token = "0x400086C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	public Sprite increaseHappiness;

	[Token(Token = "0x400086D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	public Sprite decreaseHappiness;

	[Token(Token = "0x400086E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	public Sprite positiveResidential;

	[Token(Token = "0x400086F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	public Sprite negativeResidential;

	[Token(Token = "0x4000870")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	public Sprite positiveCommercial;

	[Token(Token = "0x4000871")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	public Sprite negativeCommercial;

	[Token(Token = "0x4000872")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	public Sprite positiveIndustrial;

	[Token(Token = "0x4000873")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	public Sprite negativeIndustrial;

	[Token(Token = "0x4000874")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	public Sprite increaseSmelly;

	[Token(Token = "0x4000875")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	public Sprite airport;

	[Token(Token = "0x4000876")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	public Sprite helicopter;

	[Token(Token = "0x4000877")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	public Sprite unlocksNewLevel;

	[Token(Token = "0x4000878")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	public Sprite upgrade;

	[Token(Token = "0x4000879")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	public Sprite efficiency;

	[Token(Token = "0x400087A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	public Sprite coastLineBuildRestriction;

	[Token(Token = "0x400087B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	public Sprite thermalVentBuildRestriction;

	[Token(Token = "0x400087C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	public Sprite groundWaterBuildRestriction;

	[Token(Token = "0x400087D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	public Sprite coastLineBuildRestrictionWarning;

	[Token(Token = "0x400087E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	public Sprite thermalVentBuildRestrictionWarning;

	[Token(Token = "0x400087F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	public Sprite groundWaterBuildRestrictionWarning;

	[Token(Token = "0x4000880")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	public Sprite bank;

	[Token(Token = "0x4000881")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	public Sprite info;

	[Token(Token = "0x4000882")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	public Sprite tick;

	[Token(Token = "0x4000883")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	public Sprite controlsMove;

	[Token(Token = "0x4000884")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
	public Sprite controlsRotate;

	[Token(Token = "0x4000885")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
	public Sprite controlsZoom;

	[Token(Token = "0x6000B81")]
	[Address(RVA = "0x103A524", Offset = "0x103A524", VA = "0x103A524")]
	public GameIcons()
	{
	}
}
[Token(Token = "0x200011F")]
public class GazeSphere : MonoBehaviour
{
	[Token(Token = "0x4000886")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float radius;

	[Token(Token = "0x1700024B")]
	public float worldSpaceRadius
	{
		[Token(Token = "0x6000B82")]
		[Address(RVA = "0x105A03C", Offset = "0x105A03C", VA = "0x105A03C")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x1700024C")]
	public float worldSpaceRadiusSqr
	{
		[Token(Token = "0x6000B83")]
		[Address(RVA = "0x105A0C4", Offset = "0x105A0C4", VA = "0x105A0C4")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x1700024D")]
	private Player player
	{
		[Token(Token = "0x6000B84")]
		[Address(RVA = "0x105A14C", Offset = "0x105A14C", VA = "0x105A14C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000B85")]
	[Address(RVA = "0x105A19C", Offset = "0x105A19C", VA = "0x105A19C")]
	public bool IsGazingAt()
	{
		return default(bool);
	}

	[Token(Token = "0x6000B86")]
	[Address(RVA = "0x105A628", Offset = "0x105A628", VA = "0x105A628")]
	public GazeSphere()
	{
	}
}
[Token(Token = "0x2000120")]
public class HandTrackingDialog : MonoBehaviour
{
	[Token(Token = "0x4000887")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public RectTransform panel;

	[Token(Token = "0x4000888")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Button okButton;

	[Token(Token = "0x4000889")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Text title;

	[Token(Token = "0x400088A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public List<SelectedInfoBoxLine> lines;

	[Token(Token = "0x400088B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float padding;

	[Token(Token = "0x400088C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6A92F4", Offset = "0x6A92F4")]
	private bool <hasShown>k__BackingField;

	[Token(Token = "0x400088D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private GameObject previousMenu;

	[Token(Token = "0x1700024E")]
	public bool hasShown
	{
		[Token(Token = "0x6000B87")]
		[Address(RVA = "0x10624A4", Offset = "0x10624A4", VA = "0x10624A4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6B0A6C", Offset = "0x6B0A6C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000B88")]
		[Address(RVA = "0x10624AC", Offset = "0x10624AC", VA = "0x10624AC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6B0A7C", Offset = "0x6B0A7C")]
		private set
		{
		}
	}

	[Token(Token = "0x1700024F")]
	public bool isOpen
	{
		[Token(Token = "0x6000B89")]
		[Address(RVA = "0x10624B8", Offset = "0x10624B8", VA = "0x10624B8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000250")]
	private Player player
	{
		[Token(Token = "0x6000B8A")]
		[Address(RVA = "0x10624DC", Offset = "0x10624DC", VA = "0x10624DC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000B8B")]
	[Address(RVA = "0x106252C", Offset = "0x106252C", VA = "0x106252C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000B8C")]
	[Address(RVA = "0x1062530", Offset = "0x1062530", VA = "0x1062530")]
	private void ArrangeLayout()
	{
	}

	[Token(Token = "0x6000B8D")]
	[Address(RVA = "0x1062954", Offset = "0x1062954", VA = "0x1062954")]
	public void Show()
	{
	}

	[Token(Token = "0x6000B8E")]
	[Address(RVA = "0x1062D6C", Offset = "0x1062D6C", VA = "0x1062D6C")]
	public void Hide()
	{
	}

	[Token(Token = "0x6000B8F")]
	[Address(RVA = "0x1062E34", Offset = "0x1062E34", VA = "0x1062E34")]
	public void OnPressOK()
	{
	}

	[Token(Token = "0x6000B90")]
	[Address(RVA = "0x1062E8C", Offset = "0x1062E8C", VA = "0x1062E8C")]
	public void Update()
	{
	}

	[Token(Token = "0x6000B91")]
	[Address(RVA = "0x1062F10", Offset = "0x1062F10", VA = "0x1062F10")]
	public HandTrackingDialog()
	{
	}
}
[Token(Token = "0x2000121")]
public class HandsTutorialHints : MonoBehaviour
{
	[Token(Token = "0x400088E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject moveHint;

	[Token(Token = "0x400088F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject rotateHint;

	[Token(Token = "0x4000890")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject scaleHint;

	[Token(Token = "0x4000891")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject scaleInArrow;

	[Token(Token = "0x4000892")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject scaleOutArrow;

	[Token(Token = "0x4000893")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject hintLinePrefab;

	[Token(Token = "0x4000894")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float lineWidth;

	[Token(Token = "0x4000895")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float arrowHeadScale;

	[Token(Token = "0x4000896")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float arrowHeadLineOffset;

	[Token(Token = "0x4000897")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private OVRHand hand;

	[Token(Token = "0x4000898")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private OVRSkeleton skeleton;

	[Token(Token = "0x4000899")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private OVRHand otherHand;

	[Token(Token = "0x400089A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private LineRenderer hintLine;

	[Token(Token = "0x400089B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private SpriteRenderer hintLineArrowHead;

	[Token(Token = "0x400089C")]
	private const int numCirclePoints = 32;

	[Token(Token = "0x400089D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Vector3[] circlePoints;

	[Token(Token = "0x400089E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private Vector3 lastFrameLeftPosition;

	[Token(Token = "0x400089F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private Vector3 lastFrameRightPosition;

	[Token(Token = "0x17000251")]
	private Player player
	{
		[Token(Token = "0x6000B92")]
		[Address(RVA = "0x10635D8", Offset = "0x10635D8", VA = "0x10635D8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000B93")]
	[Address(RVA = "0x1063628", Offset = "0x1063628", VA = "0x1063628")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000B94")]
	[Address(RVA = "0x1063854", Offset = "0x1063854", VA = "0x1063854")]
	public void Init(OVRHand hand, OVRSkeleton skeleton, OVRHand otherHand)
	{
	}

	[Token(Token = "0x6000B95")]
	[Address(RVA = "0x1063860", Offset = "0x1063860", VA = "0x1063860")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000B96")]
	[Address(RVA = "0x1064B40", Offset = "0x1064B40", VA = "0x1064B40")]
	private float Mod(float x, float y)
	{
		return default(float);
	}

	[Token(Token = "0x6000B97")]
	[Address(RVA = "0x1063DBC", Offset = "0x1063DBC", VA = "0x1063DBC")]
	private void HideArrows()
	{
	}

	[Token(Token = "0x6000B98")]
	[Address(RVA = "0x10645EC", Offset = "0x10645EC", VA = "0x10645EC")]
	private void GenerateScaleHintArrow(float direction)
	{
	}

	[Token(Token = "0x6000B99")]
	[Address(RVA = "0x1063E3C", Offset = "0x1063E3C", VA = "0x1063E3C")]
	private void GenerateRotationHintArrow(float direction = 1f)
	{
	}

	[Token(Token = "0x6000B9A")]
	[Address(RVA = "0x1064BBC", Offset = "0x1064BBC", VA = "0x1064BBC")]
	private bool GenerateLeftAndRight(out Vector3 leftPosition, out Vector3 rightPosition, bool useCached = true)
	{
		return default(bool);
	}

	[Token(Token = "0x6000B9B")]
	[Address(RVA = "0x1064FEC", Offset = "0x1064FEC", VA = "0x1064FEC")]
	public HandsTutorialHints()
	{
	}
}
[Token(Token = "0x2000122")]
public class HighlightSpot : MonoBehaviour
{
	[Token(Token = "0x40008A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public MeshRenderer mainSpot;

	[Token(Token = "0x40008A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public LineRenderer line;

	[Token(Token = "0x40008A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float lineLength;

	[Token(Token = "0x40008A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float lineWidth;

	[Token(Token = "0x40008A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private PlayerInterface playerInterface;

	[Token(Token = "0x40008A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Vector3 baseSpotScale;

	[Token(Token = "0x6000B9C")]
	[Address(RVA = "0x106A6EC", Offset = "0x106A6EC", VA = "0x106A6EC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000B9D")]
	[Address(RVA = "0x106A784", Offset = "0x106A784", VA = "0x106A784")]
	private void SetElementPosition(Renderer element)
	{
	}

	[Token(Token = "0x6000B9E")]
	[Address(RVA = "0x106A8D8", Offset = "0x106A8D8", VA = "0x106A8D8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000B9F")]
	[Address(RVA = "0x106B180", Offset = "0x106B180", VA = "0x106B180")]
	public HighlightSpot()
	{
	}
}
[Token(Token = "0x2000123")]
public class LargeMenu : MonoBehaviour
{
	[Token(Token = "0x40008A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Player player;

	[Token(Token = "0x40008A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6A9304", Offset = "0x6A9304")]
	private ToolTipManager <toolTip>k__BackingField;

	[Token(Token = "0x40008A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public SaveMenu saveMenu;

	[Token(Token = "0x40008A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6A9314", Offset = "0x6A9314")]
	private MenuTab <currentTab>k__BackingField;

	[Token(Token = "0x40008AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Color selectedTabColor;

	[Token(Token = "0x40008AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Color unselectedTabColor;

	[Token(Token = "0x17000252")]
	public ToolTipManager toolTip
	{
		[Token(Token = "0x6000BA0")]
		[Address(RVA = "0x10905D4", Offset = "0x10905D4", VA = "0x10905D4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6B0A8C", Offset = "0x6B0A8C")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000BA1")]
		[Address(RVA = "0x10905DC", Offset = "0x10905DC", VA = "0x10905DC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6B0A9C", Offset = "0x6B0A9C")]
		private set
		{
		}
	}

	[Token(Token = "0x17000253")]
	public bool isOpen
	{
		[Token(Token = "0x6000BA2")]
		[Address(RVA = "0x10905E4", Offset = "0x10905E4", VA = "0x10905E4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000254")]
	public MenuTab currentTab
	{
		[Token(Token = "0x6000BA3")]
		[Address(RVA = "0x1090608", Offset = "0x1090608", VA = "0x1090608")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6B0AAC", Offset = "0x6B0AAC")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000BA4")]
		[Address(RVA = "0x1090610", Offset = "0x1090610", VA = "0x1090610")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6B0ABC", Offset = "0x6B0ABC")]
		set
		{
		}
	}

	[Token(Token = "0x6000BA5")]
	[Address(RVA = "0x1090618", Offset = "0x1090618", VA = "0x1090618")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000BA6")]
	[Address(RVA = "0x1090688", Offset = "0x1090688", VA = "0x1090688")]
	public void Show()
	{
	}

	[Token(Token = "0x6000BA7")]
	[Address(RVA = "0x1090784", Offset = "0x1090784", VA = "0x1090784")]
	public void Hide()
	{
	}

	[Token(Token = "0x6000BA8")]
	[Address(RVA = "0x10907E4", Offset = "0x10907E4", VA = "0x10907E4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000BA9")]
	[Address(RVA = "0x1090AD4", Offset = "0x1090AD4", VA = "0x1090AD4")]
	public LargeMenu()
	{
	}
}
[Token(Token = "0x2000124")]
public class LoadScreen : MonoBehaviour
{
	[Token(Token = "0x2000397")]
	public class WaitForTransition : CustomYieldInstruction
	{
		[Token(Token = "0x400170E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private LoadScreen loadScreen;

		[Token(Token = "0x170003EB")]
		public override bool keepWaiting
		{
			[Token(Token = "0x6001745")]
			[Address(RVA = "0x10948E0", Offset = "0x10948E0", VA = "0x10948E0", Slot = "7")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001744")]
		[Address(RVA = "0x1093F54", Offset = "0x1093F54", VA = "0x1093F54")]
		public WaitForTransition(LoadScreen inLoadScreen)
		{
		}
	}

	[Token(Token = "0x2000398")]
	public enum LoadDisplayType
	{
		[Token(Token = "0x4001710")]
		None,
		[Token(Token = "0x4001711")]
		Black,
		[Token(Token = "0x4001712")]
		White,
		[Token(Token = "0x4001713")]
		LoadingIcon,
		[Token(Token = "0x4001714")]
		CompanyLogo,
		[Token(Token = "0x4001715")]
		PublisherLogo,
		[Token(Token = "0x4001716")]
		GameLogo
	}

	[Token(Token = "0x40008AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Camera loadingCamera;

	[Token(Token = "0x40008AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Renderer fadeBlock;

	[Token(Token = "0x40008AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public CanvasGroup canvasGroup;

	[Token(Token = "0x40008AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Canvas loadingCanvas;

	[Token(Token = "0x40008B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Image loadingPanel;

	[Token(Token = "0x40008B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Image loadingIcon;

	[Token(Token = "0x40008B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Image companyImage;

	[Token(Token = "0x40008B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Image publisherImage;

	[Token(Token = "0x40008B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GameObject companyLogoMesh;

	[Token(Token = "0x40008B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public GameObject publisherLogoMesh;

	[Token(Token = "0x40008B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public MeshRenderer gameLogo3D;

	[Token(Token = "0x40008B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Image gameLogoImage;

	[Token(Token = "0x40008B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Transform canvasRoot;

	[Token(Token = "0x40008B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public float iconSpinSpeed;

	[Token(Token = "0x40008BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public float fadeSpeed;

	[Token(Token = "0x40008BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public float timeBeforeShowingLoadSpinner;

	[Token(Token = "0x40008BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private float iconSpin;

	[Token(Token = "0x40008BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private float fadeAmount;

	[Token(Token = "0x40008BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private float iconFadeAmount;

	[Token(Token = "0x40008BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public bool useLogoMeshes;

	[Token(Token = "0x40008C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private Material gameLogoMaterial;

	[Token(Token = "0x40008C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private float timeShowingIcon;

	[Token(Token = "0x40008C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private LoadDisplayType displayType;

	[Token(Token = "0x40008C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private GameObject currentVisibleIcon;

	[Token(Token = "0x17000255")]
	private bool shouldShowFade
	{
		[Token(Token = "0x6000BAA")]
		[Address(RVA = "0x10939AC", Offset = "0x10939AC", VA = "0x10939AC")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000256")]
	private bool shouldShowCanvas
	{
		[Token(Token = "0x6000BAB")]
		[Address(RVA = "0x10939BC", Offset = "0x10939BC", VA = "0x10939BC")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000257")]
	private GameObject currentRequiredIcon
	{
		[Token(Token = "0x6000BAC")]
		[Address(RVA = "0x10939DC", Offset = "0x10939DC", VA = "0x10939DC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000258")]
	public bool isFadeTransitioning
	{
		[Token(Token = "0x6000BAD")]
		[Address(RVA = "0x1093A6C", Offset = "0x1093A6C", VA = "0x1093A6C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000259")]
	public float audioFadeVolume
	{
		[Token(Token = "0x6000BAE")]
		[Address(RVA = "0x1093BCC", Offset = "0x1093BCC", VA = "0x1093BCC")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x1700025A")]
	public bool isFadeVisible
	{
		[Token(Token = "0x6000BAF")]
		[Address(RVA = "0x1093BDC", Offset = "0x1093BDC", VA = "0x1093BDC")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000BB0")]
	[Address(RVA = "0x1093BFC", Offset = "0x1093BFC", VA = "0x1093BFC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000BB1")]
	[Address(RVA = "0x1093CDC", Offset = "0x1093CDC", VA = "0x1093CDC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000BB2")]
	[Address(RVA = "0x1093DA0", Offset = "0x1093DA0", VA = "0x1093DA0")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000BB3")]
	[Address(RVA = "0x1093E64", Offset = "0x1093E64", VA = "0x1093E64")]
	private void OnRecenter()
	{
	}

	[Token(Token = "0x6000BB4")]
	[Address(RVA = "0x1093EE0", Offset = "0x1093EE0", VA = "0x1093EE0")]
	public WaitForTransition Show(LoadDisplayType loadDisplayType)
	{
		return null;
	}

	[Token(Token = "0x6000BB5")]
	[Address(RVA = "0x1093F80", Offset = "0x1093F80", VA = "0x1093F80")]
	public void ShowImmediate(LoadDisplayType loadDisplayType)
	{
	}

	[Token(Token = "0x6000BB6")]
	[Address(RVA = "0x1093F90", Offset = "0x1093F90", VA = "0x1093F90")]
	public void ResetCameraOrientation()
	{
	}

	[Token(Token = "0x6000BB7")]
	[Address(RVA = "0x1094064", Offset = "0x1094064", VA = "0x1094064")]
	private void SetIconVisibility()
	{
	}

	[Token(Token = "0x6000BB8")]
	[Address(RVA = "0x1094154", Offset = "0x1094154", VA = "0x1094154")]
	public WaitForTransition Hide()
	{
		return null;
	}

	[Token(Token = "0x6000BB9")]
	[Address(RVA = "0x10941BC", Offset = "0x10941BC", VA = "0x10941BC")]
	public void HideImmediate()
	{
	}

	[Token(Token = "0x6000BBA")]
	[Address(RVA = "0x10941C8", Offset = "0x10941C8", VA = "0x10941C8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000BBB")]
	[Address(RVA = "0x10948B4", Offset = "0x10948B4", VA = "0x10948B4")]
	public LoadScreen()
	{
	}
}
[Token(Token = "0x2000125")]
public class LoanMenu : MonoBehaviour
{
	[Token(Token = "0x40008C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Text moneyText;

	[Token(Token = "0x40008C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Text moneyDeltaText;

	[Token(Token = "0x40008C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Player player;

	[Token(Token = "0x40008C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private LoanPanel[] panels;

	[Token(Token = "0x6000BBC")]
	[Address(RVA = "0x1094AD8", Offset = "0x1094AD8", VA = "0x1094AD8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000BBD")]
	[Address(RVA = "0x1094B84", Offset = "0x1094B84", VA = "0x1094B84")]
	private void Update()
	{
	}

	[Token(Token = "0x6000BBE")]
	[Address(RVA = "0x1094D20", Offset = "0x1094D20", VA = "0x1094D20")]
	private void OnShowTab()
	{
	}

	[Token(Token = "0x6000BBF")]
	[Address(RVA = "0x1094B88", Offset = "0x1094B88", VA = "0x1094B88")]
	private void Refresh()
	{
	}

	[Token(Token = "0x6000BC0")]
	[Address(RVA = "0x10951F8", Offset = "0x10951F8", VA = "0x10951F8")]
	public LoanMenu()
	{
	}
}
[Token(Token = "0x2000126")]
public class LoanPanel : MonoBehaviour
{
	[Token(Token = "0x40008C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int loanIndex;

	[Token(Token = "0x40008C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Text amount;

	[Token(Token = "0x40008CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Text amountValue;

	[Token(Token = "0x40008CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Text duration;

	[Token(Token = "0x40008CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Text interest;

	[Token(Token = "0x40008CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Text weeklyCost;

	[Token(Token = "0x40008CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Text total;

	[Token(Token = "0x40008CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Text weeksLeft;

	[Token(Token = "0x40008D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Text weeksLeftValue;

	[Token(Token = "0x40008D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Button button;

	[Token(Token = "0x40008D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Text buttonText;

	[Token(Token = "0x6000BC1")]
	[Address(RVA = "0x1095200", Offset = "0x1095200", VA = "0x1095200")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000BC2")]
	[Address(RVA = "0x1095294", Offset = "0x1095294", VA = "0x1095294")]
	private void OnClick()
	{
	}

	[Token(Token = "0x6000BC3")]
	[Address(RVA = "0x1094D24", Offset = "0x1094D24", VA = "0x1094D24")]
	public void Refresh()
	{
	}

	[Token(Token = "0x6000BC4")]
	[Address(RVA = "0x1095318", Offset = "0x1095318", VA = "0x1095318")]
	public LoanPanel()
	{
	}
}
[Token(Token = "0x2000127")]
public class MenuTab : MonoBehaviour, IPointerEnterHandler, IEventSystemHandler, IPointerExitHandler
{
	[Token(Token = "0x40008D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string tipText;

	[Token(Token = "0x40008D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject tabContents;

	[Token(Token = "0x40008D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject unselectedTab;

	[Token(Token = "0x40008D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject selectedTab;

	[Token(Token = "0x40008D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private LargeMenu handler;

	[Token(Token = "0x40008D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Button button;

	[Token(Token = "0x6000BC5")]
	[Address(RVA = "0x109B784", Offset = "0x109B784", VA = "0x109B784")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000BC6")]
	[Address(RVA = "0x1090954", Offset = "0x1090954", VA = "0x1090954")]
	public void SelectTab()
	{
	}

	[Token(Token = "0x6000BC7")]
	[Address(RVA = "0x1090894", Offset = "0x1090894", VA = "0x1090894")]
	public void HideContents()
	{
	}

	[Token(Token = "0x6000BC8")]
	[Address(RVA = "0x109B844", Offset = "0x109B844", VA = "0x109B844", Slot = "4")]
	public void OnPointerEnter(PointerEventData eventData)
	{
	}

	[Token(Token = "0x6000BC9")]
	[Address(RVA = "0x109B964", Offset = "0x109B964", VA = "0x109B964", Slot = "5")]
	public void OnPointerExit(PointerEventData eventData)
	{
	}

	[Token(Token = "0x6000BCA")]
	[Address(RVA = "0x109B98C", Offset = "0x109B98C", VA = "0x109B98C")]
	public MenuTab()
	{
	}
}
[Token(Token = "0x2000128")]
public class MilestonePanel : MonoBehaviour, ISmartwatchPanel
{
	[Token(Token = "0x2000399")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6A83E4", Offset = "0x6A83E4")]
	private sealed class <Animate>d__30 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001717")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001718")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001719")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MilestonePanel <>4__this;

		[Token(Token = "0x170003EC")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001749")]
			[Address(RVA = "0xFFF5FC", Offset = "0xFFF5FC", VA = "0xFFF5FC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003ED")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600174B")]
			[Address(RVA = "0xFFF664", Offset = "0xFFF664", VA = "0xFFF664", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001746")]
		[Address(RVA = "0xFFF080", Offset = "0xFFF080", VA = "0xFFF080")]
		[DebuggerHidden]
		public <Animate>d__30(int <>1__state)
		{
		}

		[Token(Token = "0x6001747")]
		[Address(RVA = "0xFFF3F0", Offset = "0xFFF3F0", VA = "0xFFF3F0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001748")]
		[Address(RVA = "0xFFF3F4", Offset = "0xFFF3F4", VA = "0xFFF3F4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600174A")]
		[Address(RVA = "0xFFF604", Offset = "0xFFF604", VA = "0xFFF604", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40008D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Text unlockTitleText;

	[Token(Token = "0x40008DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Text messageTitle;

	[Token(Token = "0x40008DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Text messageText;

	[Token(Token = "0x40008DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform iconRoot;

	[Token(Token = "0x40008DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform descriptionRoot;

	[Token(Token = "0x40008DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject coinIcon;

	[Token(Token = "0x40008DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject compassIcon;

	[Token(Token = "0x40008E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject bridgeIcon;

	[Token(Token = "0x40008E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GameObject treeIcon;

	[Token(Token = "0x40008E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public RectTransform descriptionPanel;

	[Token(Token = "0x40008E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public SelectedInfoBoxLine descriptionLinePrefab;

	[Token(Token = "0x40008E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public CityLevelGraph cityLevelGraph;

	[Token(Token = "0x40008E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private GameObject meshIcon;

	[Token(Token = "0x40008E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public float desiredMeshIconRadius;

	[Token(Token = "0x40008E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public float iconSpinSpeed;

	[Token(Token = "0x40008E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Color boldTextColour;

	[Token(Token = "0x40008E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private List<SelectedInfoBoxLine> textLines;

	[Token(Token = "0x40008EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private int numTextLines;

	[Token(Token = "0x40008EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	private float basePanelHeight;

	[Token(Token = "0x40008EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private Smartwatch smartwatch;

	[Token(Token = "0x40008ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private bool isWaitingForExpansion;

	[Token(Token = "0x40008EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB1")]
	private bool isRegionUnlock;

	[Token(Token = "0x40008EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static string overrideRewardMessage;

	[Token(Token = "0x40008F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	private int unlockedLevel;

	[Token(Token = "0x1700025B")]
	public bool isOpen
	{
		[Token(Token = "0x6000BCB")]
		[Address(RVA = "0xFFCB20", Offset = "0xFFCB20", VA = "0xFFCB20")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000BCC")]
	[Address(RVA = "0xFFCB44", Offset = "0xFFCB44", VA = "0xFFCB44")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000BCD")]
	[Address(RVA = "0xFFCBFC", Offset = "0xFFCBFC", VA = "0xFFCBFC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000BCE")]
	[Address(RVA = "0xFFCD28", Offset = "0xFFCD28", VA = "0xFFCD28", Slot = "4")]
	public void SetupPanel(Smartwatch.NotificationData notificationData)
	{
	}

	[Token(Token = "0x6000BCF")]
	[Address(RVA = "0xFFEF3C", Offset = "0xFFEF3C", VA = "0xFFEF3C", Slot = "5")]
	public void OnExpand()
	{
	}

	[Token(Token = "0x6000BD0")]
	[Address(RVA = "0xFFF010", Offset = "0xFFF010", VA = "0xFFF010")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6B0ACC", Offset = "0x6B0ACC")]
	private IEnumerator Animate()
	{
		return null;
	}

	[Token(Token = "0x6000BD1")]
	[Address(RVA = "0xFFF0AC", Offset = "0xFFF0AC", VA = "0xFFF0AC")]
	public void ShowConfirmButton()
	{
	}

	[Token(Token = "0x6000BD2")]
	[Address(RVA = "0xFFD7B0", Offset = "0xFFD7B0", VA = "0xFFD7B0")]
	private void GenerateMeshIcon(GameObject baseObject)
	{
	}

	[Token(Token = "0x6000BD3")]
	[Address(RVA = "0xFFF0C8", Offset = "0xFFF0C8", VA = "0xFFF0C8")]
	private void AppendLine(Sprite icon, string text)
	{
	}

	[Token(Token = "0x6000BD4")]
	[Address(RVA = "0xFFDF4C", Offset = "0xFFDF4C", VA = "0xFFDF4C")]
	private void AddBuildingDescription(BuildingInfo building)
	{
	}

	[Token(Token = "0x6000BD5")]
	[Address(RVA = "0xFFF360", Offset = "0xFFF360", VA = "0xFFF360")]
	public MilestonePanel()
	{
	}
}
[Token(Token = "0x2000129")]
public class MilestoneUnlockPanel : MonoBehaviour
{
	[Token(Token = "0x40008F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Image iconImage;

	[Token(Token = "0x40008F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Text descriptionText;

	[Token(Token = "0x6000BD7")]
	[Address(RVA = "0xFFF66C", Offset = "0xFFF66C", VA = "0xFFF66C")]
	public void Init(Sprite iconSprite, string title, string description)
	{
	}

	[Token(Token = "0x6000BD8")]
	[Address(RVA = "0xFFF72C", Offset = "0xFFF72C", VA = "0xFFF72C")]
	public MilestoneUnlockPanel()
	{
	}
}
[Token(Token = "0x200012A")]
public class PhysicalButtonHandFilter : MonoBehaviour
{
	[Token(Token = "0x40008F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool allowDominantHandActivation;

	[Token(Token = "0x40008F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool allowNonDominantHandActivation;

	[Token(Token = "0x6000BD9")]
	[Address(RVA = "0xFD1770", Offset = "0xFD1770", VA = "0xFD1770")]
	public PhysicalButtonHandFilter()
	{
	}
}
[Token(Token = "0x200012B")]
public class PinchIndicator : MonoBehaviour
{
	[Token(Token = "0x40008F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public SpriteRenderer ring;

	[Token(Token = "0x40008F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public SpriteRenderer fill;

	[Token(Token = "0x40008F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float maxSize;

	[Token(Token = "0x40008F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float minSize;

	[Token(Token = "0x6000BDA")]
	[Address(RVA = "0xFD1780", Offset = "0xFD1780", VA = "0xFD1780")]
	public void SetPinchStrength(float strength, bool isPinchActive)
	{
	}

	[Token(Token = "0x6000BDB")]
	[Address(RVA = "0xFD197C", Offset = "0xFD197C", VA = "0xFD197C")]
	public PinchIndicator()
	{
	}
}
[Token(Token = "0x200012C")]
public class SaveMenu : MonoBehaviour
{
	[Token(Token = "0x40008F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public SaveSlotGroup saveSlotGroup;

	[Token(Token = "0x40008FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Action onMenuClosed;

	[Token(Token = "0x40008FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Action<SaveSlot> onSlotChosen;

	[Token(Token = "0x6000BDC")]
	[Address(RVA = "0x1044430", Offset = "0x1044430", VA = "0x1044430")]
	private void Start()
	{
	}

	[Token(Token = "0x6000BDD")]
	[Address(RVA = "0x10444F0", Offset = "0x10444F0", VA = "0x10444F0")]
	public void CloseButtonPressed()
	{
	}

	[Token(Token = "0x6000BDE")]
	[Address(RVA = "0x1044540", Offset = "0x1044540", VA = "0x1044540")]
	public void Show()
	{
	}

	[Token(Token = "0x6000BDF")]
	[Address(RVA = "0x1044598", Offset = "0x1044598", VA = "0x1044598")]
	public void Hide()
	{
	}

	[Token(Token = "0x6000BE0")]
	[Address(RVA = "0x1044580", Offset = "0x1044580", VA = "0x1044580")]
	public void Refresh()
	{
	}

	[Token(Token = "0x6000BE1")]
	[Address(RVA = "0x1044664", Offset = "0x1044664", VA = "0x1044664")]
	public SaveMenu()
	{
	}

	[Token(Token = "0x6000BE2")]
	[Address(RVA = "0x104466C", Offset = "0x104466C", VA = "0x104466C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6B0B30", Offset = "0x6B0B30")]
	private void <Start>b__3_0(SaveSlot slot)
	{
	}
}
[Token(Token = "0x200012D")]
public class SaveSlot : MonoBehaviour, IPointerEnterHandler, IEventSystemHandler, IPointerExitHandler
{
	[Token(Token = "0x40008FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject empty;

	[Token(Token = "0x40008FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject filled;

	[Token(Token = "0x40008FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Button trashButton;

	[Token(Token = "0x40008FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Renderer screenshotImage;

	[Token(Token = "0x4000900")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Text dateText;

	[Token(Token = "0x4000901")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Text percentageCompletedText;

	[Token(Token = "0x4000902")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Text emptyText;

	[Token(Token = "0x4000903")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject addSymbol;

	[Token(Token = "0x4000904")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6A9324", Offset = "0x6A9324")]
	private bool <isSlotFilled>k__BackingField;

	[Token(Token = "0x4000905")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6A9334", Offset = "0x6A9334")]
	private string <filename>k__BackingField;

	[Token(Token = "0x4000906")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private bool showTrashIcon;

	[Token(Token = "0x4000907")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public Color standardColour;

	[Token(Token = "0x4000908")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public Color selectedColour;

	[Token(Token = "0x4000909")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static string[] monthNameLanguageCodes;

	[Token(Token = "0x1700025C")]
	public bool isSlotFilled
	{
		[Token(Token = "0x6000BE3")]
		[Address(RVA = "0x1044868", Offset = "0x1044868", VA = "0x1044868")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6B0B40", Offset = "0x6B0B40")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000BE4")]
		[Address(RVA = "0x1044870", Offset = "0x1044870", VA = "0x1044870")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6B0B50", Offset = "0x6B0B50")]
		private set
		{
		}
	}

	[Token(Token = "0x1700025D")]
	public string filename
	{
		[Token(Token = "0x6000BE5")]
		[Address(RVA = "0x104487C", Offset = "0x104487C", VA = "0x104487C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6B0B60", Offset = "0x6B0B60")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000BE6")]
		[Address(RVA = "0x1044884", Offset = "0x1044884", VA = "0x1044884")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6B0B70", Offset = "0x6B0B70")]
		private set
		{
		}
	}

	[Token(Token = "0x6000BE7")]
	[Address(RVA = "0x104488C", Offset = "0x104488C", VA = "0x104488C")]
	public void Refresh()
	{
	}

	[Token(Token = "0x6000BE8")]
	[Address(RVA = "0x1045264", Offset = "0x1045264", VA = "0x1045264")]
	public void SetSlot(string slotName, bool showTrashIcon)
	{
	}

	[Token(Token = "0x6000BE9")]
	[Address(RVA = "0x1045274", Offset = "0x1045274", VA = "0x1045274", Slot = "4")]
	public void OnPointerEnter(PointerEventData eventData)
	{
	}

	[Token(Token = "0x6000BEA")]
	[Address(RVA = "0x10452E0", Offset = "0x10452E0", VA = "0x10452E0", Slot = "5")]
	public void OnPointerExit(PointerEventData eventData)
	{
	}

	[Token(Token = "0x6000BEB")]
	[Address(RVA = "0x1045330", Offset = "0x1045330", VA = "0x1045330")]
	public SaveSlot()
	{
	}
}
[Token(Token = "0x200012E")]
public class SaveSlotGroup : MonoBehaviour
{
	[Token(Token = "0x200039A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6A83F4", Offset = "0x6A83F4")]
	private sealed class <>c__DisplayClass7_0
	{
		[Token(Token = "0x400171A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public SaveSlot saveSlot;

		[Token(Token = "0x400171B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string slotName;

		[Token(Token = "0x400171C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SaveSlotGroup <>4__this;

		[Token(Token = "0x400171D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Action<bool> <>9__2;

		[Token(Token = "0x600174C")]
		[Address(RVA = "0x104594C", Offset = "0x104594C", VA = "0x104594C")]
		public <>c__DisplayClass7_0()
		{
		}

		[Token(Token = "0x600174D")]
		[Address(RVA = "0x10459F4", Offset = "0x10459F4", VA = "0x10459F4")]
		internal void <Start>b__0()
		{
		}

		[Token(Token = "0x600174E")]
		[Address(RVA = "0x1045A64", Offset = "0x1045A64", VA = "0x1045A64")]
		internal void <Start>b__1()
		{
		}

		[Token(Token = "0x600174F")]
		[Address(RVA = "0x1045C3C", Offset = "0x1045C3C", VA = "0x1045C3C")]
		internal void <Start>b__2(bool result)
		{
		}
	}

	[Token(Token = "0x400090A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject outerPanel;

	[Token(Token = "0x400090B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject saveSlotPrefab;

	[Token(Token = "0x400090C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int width;

	[Token(Token = "0x400090D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public int height;

	[Token(Token = "0x400090E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float spacing;

	[Token(Token = "0x400090F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public bool showTrashIcons;

	[Token(Token = "0x4000910")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Action<SaveSlot> onSaveSlotClicked;

	[Token(Token = "0x6000BED")]
	[Address(RVA = "0x1045668", Offset = "0x1045668", VA = "0x1045668")]
	private void Start()
	{
	}

	[Token(Token = "0x6000BEE")]
	[Address(RVA = "0x10445C0", Offset = "0x10445C0", VA = "0x10445C0")]
	public void Refresh()
	{
	}

	[Token(Token = "0x6000BEF")]
	[Address(RVA = "0x10459D0", Offset = "0x10459D0", VA = "0x10459D0")]
	public SaveSlotGroup()
	{
	}
}
[Token(Token = "0x200012F")]
public class ScaleRotationIndicator : MonoBehaviour
{
	[Token(Token = "0x4000911")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Image indicatorSprite;

	[Token(Token = "0x4000912")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Image icon;

	[Token(Token = "0x4000913")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Canvas canvas;

	[Token(Token = "0x4000914")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Player player;

	[Token(Token = "0x4000915")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Sprite zoomSprite;

	[Token(Token = "0x4000916")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Sprite rotateSprite;

	[Token(Token = "0x6000BF0")]
	[Address(RVA = "0x104B428", Offset = "0x104B428", VA = "0x104B428")]
	private void Start()
	{
	}

	[Token(Token = "0x6000BF1")]
	[Address(RVA = "0x104B498", Offset = "0x104B498", VA = "0x104B498")]
	private void Update()
	{
	}

	[Token(Token = "0x6000BF2")]
	[Address(RVA = "0x104B8B0", Offset = "0x104B8B0", VA = "0x104B8B0")]
	public ScaleRotationIndicator()
	{
	}
}
[Token(Token = "0x2000130")]
public class SelectedInfoBox : MonoBehaviour
{
	[Token(Token = "0x200039B")]
	public enum SelectionType
	{
		[Token(Token = "0x400171F")]
		None,
		[Token(Token = "0x4001720")]
		Building,
		[Token(Token = "0x4001721")]
		ConstructionCost,
		[Token(Token = "0x4001722")]
		TutorialText
	}

	[Token(Token = "0x4000917")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private List<SelectedInfoBoxLine> textLines;

	[Token(Token = "0x4000918")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int numTextLines;

	[Token(Token = "0x4000919")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public SelectedInfoBoxLine textLinePrefab;

	[Token(Token = "0x400091A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform textLineRoot;

	[Token(Token = "0x400091B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform panelTop;

	[Token(Token = "0x400091C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Color boldColour;

	[Token(Token = "0x400091D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public LineRenderer line;

	[Token(Token = "0x400091E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Image arrow;

	[Token(Token = "0x400091F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public float panelPadding;

	[Token(Token = "0x4000920")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public float minHeight;

	[Token(Token = "0x4000921")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public float maxWidth;

	[Token(Token = "0x4000922")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public Color warningColor;

	[Token(Token = "0x4000923")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public Color minorWarningColor;

	[Token(Token = "0x4000924")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	public Color baseTextColor;

	[Token(Token = "0x4000925")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public Text mainText;

	[Token(Token = "0x4000926")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public RectTransform panel;

	[Token(Token = "0x4000927")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public Image icon;

	[Token(Token = "0x4000928")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6A9344", Offset = "0x6A9344")]
	private SelectionType <currentSelectionType>k__BackingField;

	[Token(Token = "0x4000929")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private int selectionX;

	[Token(Token = "0x400092A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private int selectionY;

	[Token(Token = "0x400092B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private Canvas canvas;

	[Token(Token = "0x400092C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private ConstructionCost costReport;

	[Token(Token = "0x400092D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public Font boldFont;

	[Token(Token = "0x400092E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public Font lightFont;

	[Token(Token = "0x400092F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private float baseScale;

	[Token(Token = "0x4000930")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private string warningColorCode;

	[Token(Token = "0x4000931")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private string minorWarningColorCode;

	[Token(Token = "0x4000932")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private string boldOpeningTag;

	[Token(Token = "0x4000933")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	public AnimationCurve animateInCurve;

	[Token(Token = "0x4000934")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	public float animateInDuration;

	[Token(Token = "0x4000935")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
	private float animateInTime;

	[Token(Token = "0x4000936")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	private bool shouldShowArrow;

	[Token(Token = "0x4000937")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
	public float maxScale;

	[Token(Token = "0x4000938")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private Dictionary<string, string> languageKeyToFormattedText;

	[Token(Token = "0x1700025E")]
	public SelectionType currentSelectionType
	{
		[Token(Token = "0x6000BF3")]
		[Address(RVA = "0x104FA8C", Offset = "0x104FA8C", VA = "0x104FA8C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6B0B80", Offset = "0x6B0B80")]
		get
		{
			return default(SelectionType);
		}
		[Token(Token = "0x6000BF4")]
		[Address(RVA = "0x104FA94", Offset = "0x104FA94", VA = "0x104FA94")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6B0B90", Offset = "0x6B0B90")]
		private set
		{
		}
	}

	[Token(Token = "0x1700025F")]
	private Player player
	{
		[Token(Token = "0x6000BF5")]
		[Address(RVA = "0x104FA9C", Offset = "0x104FA9C", VA = "0x104FA9C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000260")]
	public bool isVisible
	{
		[Token(Token = "0x6000BF6")]
		[Address(RVA = "0x104FAEC", Offset = "0x104FAEC", VA = "0x104FAEC")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000BF7")]
	[Address(RVA = "0x104FB08", Offset = "0x104FB08", VA = "0x104FB08")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000BF8")]
	[Address(RVA = "0x104FBEC", Offset = "0x104FBEC", VA = "0x104FBEC")]
	private Vector3 GetWorldLocation()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000BF9")]
	[Address(RVA = "0x104FD6C", Offset = "0x104FD6C", VA = "0x104FD6C")]
	private Vector3 GetCityLocation()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000BFA")]
	[Address(RVA = "0x104FF38", Offset = "0x104FF38", VA = "0x104FF38")]
	public void Select(BuildingInstance building)
	{
	}

	[Token(Token = "0x6000BFB")]
	[Address(RVA = "0x104FF60", Offset = "0x104FF60", VA = "0x104FF60")]
	public void ShowConstructionCost(ConstructionCost cost)
	{
	}

	[Token(Token = "0x6000BFC")]
	[Address(RVA = "0x104FF70", Offset = "0x104FF70", VA = "0x104FF70")]
	public void ResetAnimationIn()
	{
	}

	[Token(Token = "0x6000BFD")]
	[Address(RVA = "0x104FF78", Offset = "0x104FF78", VA = "0x104FF78")]
	private string LookupAndFormatText(string languageKey)
	{
		return null;
	}

	[Token(Token = "0x6000BFE")]
	[Address(RVA = "0x1050084", Offset = "0x1050084", VA = "0x1050084")]
	public void ShowTutorialText(string languageKey, Sprite icon, bool showArrow = true, bool useLightWeightText = true)
	{
	}

	[Token(Token = "0x6000BFF")]
	[Address(RVA = "0x1050478", Offset = "0x1050478", VA = "0x1050478")]
	public void AppendTutorialText(string languageKey, Sprite icon)
	{
	}

	[Token(Token = "0x6000C00")]
	[Address(RVA = "0x10504C4", Offset = "0x10504C4", VA = "0x10504C4")]
	public void Clear()
	{
	}

	[Token(Token = "0x6000C01")]
	[Address(RVA = "0x10504CC", Offset = "0x10504CC", VA = "0x10504CC")]
	private void AddBuildingEffectIcon(BuildingEffectCalculator calculator, int iconIndex, Sprite sprite, bool isNegative, bool showIfZero = false)
	{
	}

	[Token(Token = "0x6000C02")]
	[Address(RVA = "0x1050638", Offset = "0x1050638", VA = "0x1050638")]
	private Color GetEfficiencyColour(int efficiencyPercent)
	{
		return default(Color);
	}

	[Token(Token = "0x6000C03")]
	[Address(RVA = "0x1050694", Offset = "0x1050694", VA = "0x1050694")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000C04")]
	[Address(RVA = "0x1051B3C", Offset = "0x1051B3C", VA = "0x1051B3C")]
	private void UpdateCanvasLayout()
	{
	}

	[Token(Token = "0x6000C05")]
	[Address(RVA = "0x1051DD0", Offset = "0x1051DD0", VA = "0x1051DD0")]
	private void UpdateCanvasPositioning()
	{
	}

	[Token(Token = "0x6000C06")]
	[Address(RVA = "0x1052970", Offset = "0x1052970", VA = "0x1052970")]
	private void LateUpdateOld()
	{
	}

	[Token(Token = "0x6000C07")]
	[Address(RVA = "0x10500F8", Offset = "0x10500F8", VA = "0x10500F8")]
	private void ClearLines()
	{
	}

	[Token(Token = "0x6000C08")]
	[Address(RVA = "0x10501A4", Offset = "0x10501A4", VA = "0x10501A4")]
	private void AppendLine(Sprite icon, string text, Color textColour, bool useLightWeightText = false)
	{
	}

	[Token(Token = "0x6000C09")]
	[Address(RVA = "0x10549DC", Offset = "0x10549DC", VA = "0x10549DC")]
	public SelectedInfoBoxLine FindTextLine(Sprite matchingIcon)
	{
		return null;
	}

	[Token(Token = "0x6000C0A")]
	[Address(RVA = "0x1054B0C", Offset = "0x1054B0C", VA = "0x1054B0C")]
	public SelectedInfoBox()
	{
	}
}
[Token(Token = "0x2000131")]
public class SelectedInfoBoxLine : MonoBehaviour
{
	[Token(Token = "0x4000939")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float paddingHeight;

	[Token(Token = "0x400093A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Image iconImage;

	[Token(Token = "0x400093B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Text textObject;

	[Token(Token = "0x17000261")]
	public Sprite icon
	{
		[Token(Token = "0x6000C0B")]
		[Address(RVA = "0x1054AF0", Offset = "0x1054AF0", VA = "0x1054AF0")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000C0C")]
		[Address(RVA = "0x1054828", Offset = "0x1054828", VA = "0x1054828")]
		set
		{
		}
	}

	[Token(Token = "0x17000262")]
	public Color textColour
	{
		[Token(Token = "0x6000C0E")]
		[Address(RVA = "0x1054C0C", Offset = "0x1054C0C", VA = "0x1054C0C")]
		get
		{
			return default(Color);
		}
		[Token(Token = "0x6000C0F")]
		[Address(RVA = "0x10548D0", Offset = "0x10548D0", VA = "0x10548D0")]
		set
		{
		}
	}

	[Token(Token = "0x17000263")]
	public Font font
	{
		[Token(Token = "0x6000C10")]
		[Address(RVA = "0x1054C30", Offset = "0x1054C30", VA = "0x1054C30")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000C11")]
		[Address(RVA = "0x10548F4", Offset = "0x10548F4", VA = "0x10548F4")]
		set
		{
		}
	}

	[Token(Token = "0x17000264")]
	public float width
	{
		[Token(Token = "0x6000C12")]
		[Address(RVA = "0x1052804", Offset = "0x1052804", VA = "0x1052804")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000265")]
	public float height
	{
		[Token(Token = "0x6000C13")]
		[Address(RVA = "0x1052868", Offset = "0x1052868", VA = "0x1052868")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x6000C0D")]
	[Address(RVA = "0x1054910", Offset = "0x1054910", VA = "0x1054910")]
	public void SetText(string value)
	{
	}

	[Token(Token = "0x6000C14")]
	[Address(RVA = "0x1054C4C", Offset = "0x1054C4C", VA = "0x1054C4C")]
	public SelectedInfoBoxLine()
	{
	}
}
[Token(Token = "0x2000132")]
public class ServiceInfoPanel : MonoBehaviour
{
	[Token(Token = "0x400093C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public CityServiceManager.ServiceType serviceType;

	[Token(Token = "0x400093D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Image icon;

	[Token(Token = "0x400093E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Text expenseCostValue;

	[Token(Token = "0x400093F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Image coverageIndicator;

	[Token(Token = "0x4000940")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float chartSize;

	[Token(Token = "0x6000C15")]
	[Address(RVA = "0x1054C5C", Offset = "0x1054C5C", VA = "0x1054C5C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000C16")]
	[Address(RVA = "0x1054E1C", Offset = "0x1054E1C", VA = "0x1054E1C")]
	private void OnCreate(ToolMenu.Entry tool)
	{
	}

	[Token(Token = "0x6000C17")]
	[Address(RVA = "0x1054C60", Offset = "0x1054C60", VA = "0x1054C60")]
	private void Refresh()
	{
	}

	[Token(Token = "0x6000C18")]
	[Address(RVA = "0x1054EB8", Offset = "0x1054EB8", VA = "0x1054EB8")]
	public ServiceInfoPanel()
	{
	}
}
[Token(Token = "0x2000133")]
public class SettingsMenu : MonoBehaviour
{
	[Token(Token = "0x200039C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6A8404", Offset = "0x6A8404")]
	private sealed class <>c__DisplayClass30_0
	{
		[Token(Token = "0x4001723")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public LargeMenu largeMenu;

		[Token(Token = "0x4001724")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public SettingsMenu <>4__this;

		[Token(Token = "0x6001750")]
		[Address(RVA = "0x10561DC", Offset = "0x10561DC", VA = "0x10561DC")]
		public <>c__DisplayClass30_0()
		{
		}

		[Token(Token = "0x6001751")]
		[Address(RVA = "0x10568B8", Offset = "0x10568B8", VA = "0x10568B8")]
		internal void <ReturnToMainMenu>b__0(bool result)
		{
		}
	}

	[Token(Token = "0x4000941")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public UISlider music;

	[Token(Token = "0x4000942")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public UISlider comfortCage;

	[Token(Token = "0x4000943")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public UIComboSelector handedness;

	[Token(Token = "0x4000944")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public UIComboSelector cameraRotationType;

	[Token(Token = "0x4000945")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public UIComboSelector cameraRotationSnapSpeed;

	[Token(Token = "0x4000946")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public UIComboSelector cameraRotationSmoothSpeed;

	[Token(Token = "0x4000947")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public SaveMenu saveSlotsMenu;

	[Token(Token = "0x4000948")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject cheatsMenu;

	[Token(Token = "0x4000949")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GameObject devMenu;

	[Token(Token = "0x400094A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public GameObject miniStoriesDebugMenu;

	[Token(Token = "0x400094B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public GameObject[] devOnlyOptions;

	[Token(Token = "0x400094C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public RectTransform comfortHintPanel;

	[Token(Token = "0x400094D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Text comfortHintText;

	[Token(Token = "0x400094E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public RectTransform handTrackingTipPanel;

	[Token(Token = "0x400094F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Text handTrackingTipPanelText;

	[Token(Token = "0x4000950")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public Image handTrackingTipIcon;

	[Token(Token = "0x4000951")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public Sprite handTrackingHandSprite;

	[Token(Token = "0x4000952")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public Sprite handTrackingControllerSprite;

	[Token(Token = "0x4000953")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private PlayerGameSettings playerGameSettingsOnOpen;

	[Token(Token = "0x17000266")]
	private Player player
	{
		[Token(Token = "0x6000C19")]
		[Address(RVA = "0x10551F4", Offset = "0x10551F4", VA = "0x10551F4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000267")]
	public bool anySettingsMenusOpened
	{
		[Token(Token = "0x6000C1A")]
		[Address(RVA = "0x1055244", Offset = "0x1055244", VA = "0x1055244")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000C1B")]
	[Address(RVA = "0x1055308", Offset = "0x1055308", VA = "0x1055308")]
	private void Start()
	{
	}

	[Token(Token = "0x6000C1C")]
	[Address(RVA = "0x1055938", Offset = "0x1055938", VA = "0x1055938")]
	private void RefreshSpeedWidgets()
	{
	}

	[Token(Token = "0x6000C1D")]
	[Address(RVA = "0x1055B04", Offset = "0x1055B04", VA = "0x1055B04")]
	public void Show()
	{
	}

	[Token(Token = "0x6000C1E")]
	[Address(RVA = "0x1055C94", Offset = "0x1055C94", VA = "0x1055C94")]
	public void HideAllSettingsMenus()
	{
	}

	[Token(Token = "0x6000C1F")]
	[Address(RVA = "0x1055598", Offset = "0x1055598", VA = "0x1055598")]
	private void RefreshWidgets()
	{
	}

	[Token(Token = "0x6000C20")]
	[Address(RVA = "0x1055FA8", Offset = "0x1055FA8", VA = "0x1055FA8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000C21")]
	[Address(RVA = "0x1055FAC", Offset = "0x1055FAC", VA = "0x1055FAC")]
	public void ViewSaveSlotsPressed()
	{
	}

	[Token(Token = "0x6000C22")]
	[Address(RVA = "0x1055FD8", Offset = "0x1055FD8", VA = "0x1055FD8")]
	public void ReturnToMainMenu()
	{
	}

	[Token(Token = "0x6000C23")]
	[Address(RVA = "0x10561E4", Offset = "0x10561E4", VA = "0x10561E4")]
	public void ToggleCheatsMenu()
	{
	}

	[Token(Token = "0x6000C24")]
	[Address(RVA = "0x1056224", Offset = "0x1056224", VA = "0x1056224")]
	public void ToggleDevMenu()
	{
	}

	[Token(Token = "0x6000C25")]
	[Address(RVA = "0x1056264", Offset = "0x1056264", VA = "0x1056264")]
	public void ToggleMiniStoriesDebugPanel()
	{
	}

	[Token(Token = "0x6000C26")]
	[Address(RVA = "0x1055DB0", Offset = "0x1055DB0", VA = "0x1055DB0")]
	private void FireSettingsChangedAnalyticsEvent()
	{
	}

	[Token(Token = "0x6000C27")]
	[Address(RVA = "0x10562A4", Offset = "0x10562A4", VA = "0x10562A4")]
	public void StartGamePressed()
	{
	}

	[Token(Token = "0x6000C28")]
	[Address(RVA = "0x10562D0", Offset = "0x10562D0", VA = "0x10562D0")]
	public void CreditsButtonPressed()
	{
	}

	[Token(Token = "0x6000C29")]
	[Address(RVA = "0x1056350", Offset = "0x1056350", VA = "0x1056350")]
	private void Update()
	{
	}

	[Token(Token = "0x6000C2A")]
	[Address(RVA = "0x10565C8", Offset = "0x10565C8", VA = "0x10565C8")]
	public SettingsMenu()
	{
	}

	[Token(Token = "0x6000C2B")]
	[Address(RVA = "0x1056630", Offset = "0x1056630", VA = "0x1056630")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6B0BA0", Offset = "0x6B0BA0")]
	private void <Start>b__23_0(bool isEnabled)
	{
	}

	[Token(Token = "0x6000C2C")]
	[Address(RVA = "0x105669C", Offset = "0x105669C", VA = "0x105669C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6B0BB0", Offset = "0x6B0BB0")]
	private void <Start>b__23_1(bool isEnabled)
	{
	}

	[Token(Token = "0x6000C2D")]
	[Address(RVA = "0x1056708", Offset = "0x1056708", VA = "0x1056708")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6B0BC0", Offset = "0x6B0BC0")]
	private void <Start>b__23_2(int index)
	{
	}

	[Token(Token = "0x6000C2E")]
	[Address(RVA = "0x1056770", Offset = "0x1056770", VA = "0x1056770")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6B0BD0", Offset = "0x6B0BD0")]
	private void <Start>b__23_3(int index)
	{
	}

	[Token(Token = "0x6000C2F")]
	[Address(RVA = "0x10567E8", Offset = "0x10567E8", VA = "0x10567E8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6B0BE0", Offset = "0x6B0BE0")]
	private void <Start>b__23_4(int index)
	{
	}

	[Token(Token = "0x6000C30")]
	[Address(RVA = "0x1056850", Offset = "0x1056850", VA = "0x1056850")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6B0BF0", Offset = "0x6B0BF0")]
	private void <Start>b__23_5(int index)
	{
	}
}
[Token(Token = "0x2000134")]
public class TaxRateControl : MonoBehaviour
{
	[Token(Token = "0x4000954")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public BudgetManager.ExpenseCategory category;

	[Token(Token = "0x4000955")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Button minusButton;

	[Token(Token = "0x4000956")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Button plusButton;

	[Token(Token = "0x4000957")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Text rateText;

	[Token(Token = "0x17000268")]
	private int rate
	{
		[Token(Token = "0x6000C31")]
		[Address(RVA = "0xFF3CB8", Offset = "0xFF3CB8", VA = "0xFF3CB8")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000C32")]
		[Address(RVA = "0xFF3DD8", Offset = "0xFF3DD8", VA = "0xFF3DD8")]
		set
		{
		}
	}

	[Token(Token = "0x6000C33")]
	[Address(RVA = "0xFF3EFC", Offset = "0xFF3EFC", VA = "0xFF3EFC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000C34")]
	[Address(RVA = "0xFF3FD4", Offset = "0xFF3FD4", VA = "0xFF3FD4")]
	public void Refresh()
	{
	}

	[Token(Token = "0x6000C35")]
	[Address(RVA = "0xFF4078", Offset = "0xFF4078", VA = "0xFF4078")]
	private void IncreaseRate()
	{
	}

	[Token(Token = "0x6000C36")]
	[Address(RVA = "0xFF4150", Offset = "0xFF4150", VA = "0xFF4150")]
	private void DecreaseRate()
	{
	}

	[Token(Token = "0x6000C37")]
	[Address(RVA = "0xFF4228", Offset = "0xFF4228", VA = "0xFF4228")]
	public TaxRateControl()
	{
	}
}
[Token(Token = "0x2000135")]
public class TimeControl : MonoBehaviour
{
	[Token(Token = "0x4000958")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Button pauseButton;

	[Token(Token = "0x4000959")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Button speedButton;

	[Token(Token = "0x400095A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Image pauseButtonIcon;

	[Token(Token = "0x400095B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Image speedButtonIcon;

	[Token(Token = "0x400095C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Sprite playSprite;

	[Token(Token = "0x400095D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Sprite speed1Sprite;

	[Token(Token = "0x400095E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Sprite speed2Sprite;

	[Token(Token = "0x400095F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Sprite speed3Sprite;

	[Token(Token = "0x4000960")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Image timeProgress;

	[Token(Token = "0x4000961")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Text dateText;

	[Token(Token = "0x6000C38")]
	[Address(RVA = "0x107A07C", Offset = "0x107A07C", VA = "0x107A07C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000C39")]
	[Address(RVA = "0x107A190", Offset = "0x107A190", VA = "0x107A190")]
	private void SetSpeedFromIcon()
	{
	}

	[Token(Token = "0x6000C3A")]
	[Address(RVA = "0x107A32C", Offset = "0x107A32C", VA = "0x107A32C")]
	private void PauseClicked()
	{
	}

	[Token(Token = "0x6000C3B")]
	[Address(RVA = "0x107A418", Offset = "0x107A418", VA = "0x107A418")]
	private void SpeedClicked()
	{
	}

	[Token(Token = "0x6000C3C")]
	[Address(RVA = "0x107A584", Offset = "0x107A584", VA = "0x107A584")]
	private void Update()
	{
	}

	[Token(Token = "0x6000C3D")]
	[Address(RVA = "0x107A68C", Offset = "0x107A68C", VA = "0x107A68C")]
	public TimeControl()
	{
	}
}
[Token(Token = "0x2000136")]
public class ToolMenu : ScriptableObject
{
	[Token(Token = "0x200039D")]
	public enum EntryType
	{
		[Token(Token = "0x4001726")]
		Category,
		[Token(Token = "0x4001727")]
		Button,
		[Token(Token = "0x4001728")]
		BulldozeTool,
		[Token(Token = "0x4001729")]
		RoadTool,
		[Token(Token = "0x400172A")]
		BuildingTool,
		[Token(Token = "0x400172B")]
		ZoneTool,
		[Token(Token = "0x400172C")]
		StreetViewTool,
		[Token(Token = "0x400172D")]
		BackButton,
		[Token(Token = "0x400172E")]
		BuildButton,
		[Token(Token = "0x400172F")]
		EmptySlot,
		[Token(Token = "0x4001730")]
		PropTool,
		[Token(Token = "0x4001731")]
		Locked,
		[Token(Token = "0x4001732")]
		UndoButton,
		[Token(Token = "0x4001733")]
		ReturnToWorldMap
	}

	[Serializable]
	[Token(Token = "0x200039E")]
	public class Entry
	{
		[Token(Token = "0x4001734")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string label;

		[Token(Token = "0x4001735")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string description;

		[Token(Token = "0x4001736")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public EntryType type;

		[Token(Token = "0x4001737")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public ToolMenu submenu;

		[Token(Token = "0x4001738")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public BuildingInfo buildingType;

		[Token(Token = "0x4001739")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public PropCollection propType;

		[Token(Token = "0x400173A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public string message;

		[Token(Token = "0x400173B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public ZoneManager.ZoneType zoneType;

		[Token(Token = "0x400173C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public VisualiserManager.VisualiserType visualiser;

		[Token(Token = "0x400173D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public GameObject infoPanelPrefab;

		[Token(Token = "0x400173E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public GameObject meshIconPrefab;

		[Token(Token = "0x400173F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Color colour;

		[Token(Token = "0x6001752")]
		[Address(RVA = "0x107A69C", Offset = "0x107A69C", VA = "0x107A69C")]
		public Entry()
		{
		}
	}

	[Token(Token = "0x4000962")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Entry[] entries;

	[Token(Token = "0x6000C3E")]
	[Address(RVA = "0x107A694", Offset = "0x107A694", VA = "0x107A694")]
	public ToolMenu()
	{
	}
}
[Token(Token = "0x2000137")]
public class ToolTipManager : MonoBehaviour
{
	[Token(Token = "0x4000963")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject tipPanelSmall;

	[Token(Token = "0x4000964")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Text tipTextSmall;

	[Token(Token = "0x4000965")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject tipPanelTopArrow;

	[Token(Token = "0x4000966")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject tipPanelBottomArrow;

	[Token(Token = "0x4000967")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform tipPanelTopArrowPoint;

	[Token(Token = "0x4000968")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Transform tipPanelBottomArrowPoint;

	[Token(Token = "0x4000969")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject tipPanel;

	[Token(Token = "0x400096A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Text tipText;

	[Token(Token = "0x400096B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Image tipIcon;

	[Token(Token = "0x400096C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public float tipPanelPadding;

	[Token(Token = "0x400096D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public float tipPanelMinHeight;

	[Token(Token = "0x400096E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private float tipPanelMaxWidth;

	[Token(Token = "0x400096F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private float tipPanelSmallMaxWidth;

	[Token(Token = "0x6000C3F")]
	[Address(RVA = "0x107A6D0", Offset = "0x107A6D0", VA = "0x107A6D0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000C40")]
	[Address(RVA = "0x107A7D0", Offset = "0x107A7D0", VA = "0x107A7D0")]
	public void ShowTip(string text, Transform targetTransform, Vector3 positionOffset, bool arrowOnTop = false)
	{
	}

	[Token(Token = "0x6000C41")]
	[Address(RVA = "0x107AB88", Offset = "0x107AB88", VA = "0x107AB88")]
	public void HideTip()
	{
	}

	[Token(Token = "0x6000C42")]
	[Address(RVA = "0x107ABB8", Offset = "0x107ABB8", VA = "0x107ABB8")]
	public void ShowTipSmall(string text, Transform targetTransform, Vector3 localOffset)
	{
	}

	[Token(Token = "0x6000C43")]
	[Address(RVA = "0x107AF58", Offset = "0x107AF58", VA = "0x107AF58")]
	public void HideTipSmall()
	{
	}

	[Token(Token = "0x6000C44")]
	[Address(RVA = "0x107AF88", Offset = "0x107AF88", VA = "0x107AF88")]
	public ToolTipManager()
	{
	}
}
[Token(Token = "0x2000138")]
public class ToolTipRegion : MonoBehaviour, IPointerEnterHandler, IEventSystemHandler, IPointerExitHandler
{
	[Token(Token = "0x4000970")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string tipText;

	[Token(Token = "0x4000971")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Vector3 tipPanelOffset;

	[Token(Token = "0x4000972")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private ToolTipManager manager;

	[Token(Token = "0x6000C45")]
	[Address(RVA = "0x107AF9C", Offset = "0x107AF9C", VA = "0x107AF9C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000C46")]
	[Address(RVA = "0x107B010", Offset = "0x107B010", VA = "0x107B010", Slot = "4")]
	public void OnPointerEnter(PointerEventData eventData)
	{
	}

	[Token(Token = "0x6000C47")]
	[Address(RVA = "0x107B0B8", Offset = "0x107B0B8", VA = "0x107B0B8", Slot = "5")]
	public void OnPointerExit(PointerEventData eventData)
	{
	}

	[Token(Token = "0x6000C48")]
	[Address(RVA = "0x107B0D0", Offset = "0x107B0D0", VA = "0x107B0D0")]
	public ToolTipRegion()
	{
	}
}
[Token(Token = "0x2000139")]
public class TriggerBoxButton : MonoBehaviour
{
	[Token(Token = "0x4000973")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Button button;

	[Token(Token = "0x4000974")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Image image;

	[Token(Token = "0x4000975")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Collider pressingCollider;

	[Token(Token = "0x4000976")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Collider lastPressedCollider;

	[Token(Token = "0x4000977")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float pressedAngle;

	[Token(Token = "0x4000978")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private bool isPressed;

	[Token(Token = "0x4000979")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Quaternion startingRotation;

	[Token(Token = "0x6000C49")]
	[Address(RVA = "0x107E834", Offset = "0x107E834", VA = "0x107E834")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000C4A")]
	[Address(RVA = "0x107E8B0", Offset = "0x107E8B0", VA = "0x107E8B0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000C4B")]
	[Address(RVA = "0x107ED60", Offset = "0x107ED60", VA = "0x107ED60")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000C4C")]
	[Address(RVA = "0x107F054", Offset = "0x107F054", VA = "0x107F054")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x6000C4D")]
	[Address(RVA = "0x107F0DC", Offset = "0x107F0DC", VA = "0x107F0DC")]
	public TriggerBoxButton()
	{
	}
}
[Token(Token = "0x200013A")]
public class UIBlocker : MonoBehaviour
{
	[Token(Token = "0x6000C4E")]
	[Address(RVA = "0x1140EF0", Offset = "0x1140EF0", VA = "0x1140EF0")]
	public UIBlocker()
	{
	}
}
[Token(Token = "0x200013B")]
public class UIComboSelector : MonoBehaviour
{
	[Token(Token = "0x400097A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Text optionText;

	[Token(Token = "0x400097B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string[] optionNames;

	[Token(Token = "0x400097C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int optionIndex;

	[Token(Token = "0x400097D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public bool localiseStrings;

	[Token(Token = "0x400097E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Action<int> onOptionChanged;

	[Token(Token = "0x17000269")]
	private string optionTextString
	{
		[Token(Token = "0x6000C4F")]
		[Address(RVA = "0x1140EF8", Offset = "0x1140EF8", VA = "0x1140EF8")]
		set
		{
		}
	}

	[Token(Token = "0x6000C50")]
	[Address(RVA = "0x1140F9C", Offset = "0x1140F9C", VA = "0x1140F9C")]
	public void OnEnable()
	{
	}

	[Token(Token = "0x6000C51")]
	[Address(RVA = "0x1140FDC", Offset = "0x1140FDC", VA = "0x1140FDC")]
	public void SetOptionIndex(int index)
	{
	}

	[Token(Token = "0x6000C52")]
	[Address(RVA = "0x1141034", Offset = "0x1141034", VA = "0x1141034")]
	public void Previous()
	{
	}

	[Token(Token = "0x6000C53")]
	[Address(RVA = "0x1141100", Offset = "0x1141100", VA = "0x1141100")]
	public void Next()
	{
	}

	[Token(Token = "0x6000C54")]
	[Address(RVA = "0x11411C8", Offset = "0x11411C8", VA = "0x11411C8")]
	public UIComboSelector()
	{
	}
}
[Token(Token = "0x200013C")]
public class UIRoundedRectangle : MaskableGraphic
{
	[Token(Token = "0x400097F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	[SerializeField]
	private Texture m_Texture;

	[Token(Token = "0x4000980")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	[SerializeField]
	private float _radius;

	[Token(Token = "0x4000981")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	public int cornerSegments;

	[Token(Token = "0x4000982")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public bool roundTopLeftCorner;

	[Token(Token = "0x4000983")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD1")]
	public bool roundTopRightCorner;

	[Token(Token = "0x4000984")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD2")]
	public bool roundBottomLeftCorner;

	[Token(Token = "0x4000985")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD3")]
	public bool roundBottomRightCorner;

	[Token(Token = "0x4000986")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	public float borderUVsize;

	[Token(Token = "0x1700026A")]
	public Texture texture
	{
		[Token(Token = "0x6000C55")]
		[Address(RVA = "0x11411D8", Offset = "0x11411D8", VA = "0x11411D8")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000C56")]
		[Address(RVA = "0x11411E0", Offset = "0x11411E0", VA = "0x11411E0")]
		set
		{
		}
	}

	[Token(Token = "0x1700026B")]
	public float radius
	{
		[Token(Token = "0x6000C57")]
		[Address(RVA = "0x114129C", Offset = "0x114129C", VA = "0x114129C")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000C58")]
		[Address(RVA = "0x11412A4", Offset = "0x11412A4", VA = "0x11412A4")]
		set
		{
		}
	}

	[Token(Token = "0x1700026C")]
	public override Texture mainTexture
	{
		[Token(Token = "0x6000C5A")]
		[Address(RVA = "0x1141300", Offset = "0x1141300", VA = "0x1141300", Slot = "35")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000C59")]
	[Address(RVA = "0x11412B8", Offset = "0x11412B8", VA = "0x11412B8", Slot = "10")]
	protected override void OnRectTransformDimensionsChange()
	{
	}

	[Token(Token = "0x6000C5B")]
	[Address(RVA = "0x11413AC", Offset = "0x11413AC", VA = "0x11413AC")]
	private void AddRoundedCorner(VertexHelper vh, Vector3 corner, Vector2 cornerUV, Vector3 direction, float startAngle)
	{
	}

	[Token(Token = "0x6000C5C")]
	[Address(RVA = "0x1141830", Offset = "0x1141830", VA = "0x1141830")]
	private void AddSquareCorner(VertexHelper vh, Vector3 corner, Vector2 cornerUV, Vector3 direction, float startAngle)
	{
	}

	[Token(Token = "0x6000C5D")]
	[Address(RVA = "0x1141CC4", Offset = "0x1141CC4", VA = "0x1141CC4", Slot = "44")]
	protected override void OnPopulateMesh(VertexHelper vh)
	{
	}

	[Token(Token = "0x6000C5E")]
	[Address(RVA = "0x114275C", Offset = "0x114275C", VA = "0x114275C")]
	public UIRoundedRectangle()
	{
	}
}
[Token(Token = "0x200013D")]
public class UIRoundedRectangle3D : MaskableGraphic
{
	[Token(Token = "0x4000987")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	[SerializeField]
	private Texture m_Texture;

	[Token(Token = "0x4000988")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	[SerializeField]
	private float _radius;

	[Token(Token = "0x4000989")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	[SerializeField]
	private float _thickness;

	[Token(Token = "0x400098A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public int cornerSegments;

	[Token(Token = "0x400098B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	public bool roundTopLeftCorner;

	[Token(Token = "0x400098C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD5")]
	public bool roundTopRightCorner;

	[Token(Token = "0x400098D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD6")]
	public bool roundBottomLeftCorner;

	[Token(Token = "0x400098E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD7")]
	public bool roundBottomRightCorner;

	[Token(Token = "0x400098F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public float borderUVsize;

	[Token(Token = "0x4000990")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
	public float edgeThickness;

	[Token(Token = "0x4000991")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public Color edgeColor;

	[Token(Token = "0x1700026D")]
	public Texture texture
	{
		[Token(Token = "0x6000C5F")]
		[Address(RVA = "0x1142784", Offset = "0x1142784", VA = "0x1142784")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000C60")]
		[Address(RVA = "0x114278C", Offset = "0x114278C", VA = "0x114278C")]
		set
		{
		}
	}

	[Token(Token = "0x1700026E")]
	public float radius
	{
		[Token(Token = "0x6000C61")]
		[Address(RVA = "0x1142848", Offset = "0x1142848", VA = "0x1142848")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000C62")]
		[Address(RVA = "0x1142850", Offset = "0x1142850", VA = "0x1142850")]
		set
		{
		}
	}

	[Token(Token = "0x1700026F")]
	public float thickness
	{
		[Token(Token = "0x6000C63")]
		[Address(RVA = "0x1142864", Offset = "0x1142864", VA = "0x1142864")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000C64")]
		[Address(RVA = "0x114286C", Offset = "0x114286C", VA = "0x114286C")]
		set
		{
		}
	}

	[Token(Token = "0x17000270")]
	public override Texture mainTexture
	{
		[Token(Token = "0x6000C66")]
		[Address(RVA = "0x11428C8", Offset = "0x11428C8", VA = "0x11428C8", Slot = "35")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000C65")]
	[Address(RVA = "0x1142880", Offset = "0x1142880", VA = "0x1142880", Slot = "10")]
	protected override void OnRectTransformDimensionsChange()
	{
	}

	[Token(Token = "0x6000C67")]
	[Address(RVA = "0x1142974", Offset = "0x1142974", VA = "0x1142974")]
	private void AddRoundedCorner(VertexHelper vh, Vector3 corner, Vector2 cornerUV, Vector3 direction, float startAngle)
	{
	}

	[Token(Token = "0x6000C68")]
	[Address(RVA = "0x1142DF8", Offset = "0x1142DF8", VA = "0x1142DF8")]
	private void AddSquareCorner(VertexHelper vh, Vector3 corner, Vector2 cornerUV, Vector3 direction, float startAngle)
	{
	}

	[Token(Token = "0x6000C69")]
	[Address(RVA = "0x114328C", Offset = "0x114328C", VA = "0x114328C")]
	private void AddEdgeCorner(VertexHelper vh, Vector3 corner, Vector2 cornerUV, Vector3 direction, Color col, float startAngle)
	{
	}

	[Token(Token = "0x6000C6A")]
	[Address(RVA = "0x11436E8", Offset = "0x11436E8", VA = "0x11436E8")]
	private void PopulateEdges(VertexHelper vh, float edgeOffset = 0f)
	{
	}

	[Token(Token = "0x6000C6B")]
	[Address(RVA = "0x1143F04", Offset = "0x1143F04", VA = "0x1143F04", Slot = "44")]
	protected override void OnPopulateMesh(VertexHelper vh)
	{
	}

	[Token(Token = "0x6000C6C")]
	[Address(RVA = "0x1143F68", Offset = "0x1143F68", VA = "0x1143F68")]
	private void Populate(VertexHelper vh)
	{
	}

	[Token(Token = "0x6000C6D")]
	[Address(RVA = "0x11449F4", Offset = "0x11449F4", VA = "0x11449F4")]
	public UIRoundedRectangle3D()
	{
	}
}
[Token(Token = "0x200013E")]
public class UISlider : MonoBehaviour
{
	[Token(Token = "0x4000992")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Image backDrop;

	[Token(Token = "0x4000993")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Image switchImage;

	[Token(Token = "0x4000994")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Sprite backDropEnabledSprite;

	[Token(Token = "0x4000995")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Sprite backDropDisabledSprite;

	[Token(Token = "0x4000996")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Sprite switchEnabledSprite;

	[Token(Token = "0x4000997")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Sprite switchDisabledSprite;

	[Token(Token = "0x4000998")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public bool sliderEnabled;

	[Token(Token = "0x4000999")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float animationDuration;

	[Token(Token = "0x400099A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float minSwitchPosition;

	[Token(Token = "0x400099B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public float maxSwitchPosition;

	[Token(Token = "0x400099C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Button button;

	[Token(Token = "0x400099D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private float switchPosition;

	[Token(Token = "0x400099E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Action<bool> onOptionChanged;

	[Token(Token = "0x6000C6E")]
	[Address(RVA = "0x1144A44", Offset = "0x1144A44", VA = "0x1144A44")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000C6F")]
	[Address(RVA = "0x1144AEC", Offset = "0x1144AEC", VA = "0x1144AEC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000C70")]
	[Address(RVA = "0x1144B18", Offset = "0x1144B18", VA = "0x1144B18")]
	public void SetSliderEnabled(bool shouldBeEnabled)
	{
	}

	[Token(Token = "0x6000C71")]
	[Address(RVA = "0x1144B48", Offset = "0x1144B48", VA = "0x1144B48")]
	private void Update()
	{
	}

	[Token(Token = "0x6000C72")]
	[Address(RVA = "0x1144CCC", Offset = "0x1144CCC", VA = "0x1144CCC")]
	public UISlider()
	{
	}

	[Token(Token = "0x6000C73")]
	[Address(RVA = "0x1144CE0", Offset = "0x1144CE0", VA = "0x1144CE0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6B0C00", Offset = "0x6B0C00")]
	private void <Awake>b__13_0()
	{
	}
}
[Token(Token = "0x200013F")]
public class UITrapezium : MaskableGraphic, ICanvasRaycastFilter
{
	[Token(Token = "0x400099F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public float baseWidth;

	[Token(Token = "0x40009A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	public float shift;

	[Token(Token = "0x40009A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public float outlineWidth;

	[Token(Token = "0x40009A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	public float outlineUV;

	[Token(Token = "0x40009A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public bool edgeLeft;

	[Token(Token = "0x40009A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD1")]
	public bool edgeRight;

	[Token(Token = "0x40009A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	public float innerOutlineUV;

	[Token(Token = "0x40009A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	[SerializeField]
	private Texture m_Texture;

	[Token(Token = "0x40009A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	[SerializeField]
	private float _additionalHeight;

	[Token(Token = "0x40009A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
	[SerializeField]
	private float _accentSize;

	[Token(Token = "0x40009A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	[SerializeField]
	private Color _accentColor;

	[Token(Token = "0x17000271")]
	public Texture texture
	{
		[Token(Token = "0x6000C74")]
		[Address(RVA = "0x1144D7C", Offset = "0x1144D7C", VA = "0x1144D7C")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000C75")]
		[Address(RVA = "0x1144D84", Offset = "0x1144D84", VA = "0x1144D84")]
		set
		{
		}
	}

	[Token(Token = "0x17000272")]
	public float additionalHeight
	{
		[Token(Token = "0x6000C76")]
		[Address(RVA = "0x1144E40", Offset = "0x1144E40", VA = "0x1144E40")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000C77")]
		[Address(RVA = "0x1144E48", Offset = "0x1144E48", VA = "0x1144E48")]
		set
		{
		}
	}

	[Token(Token = "0x17000273")]
	public float accentSize
	{
		[Token(Token = "0x6000C78")]
		[Address(RVA = "0x1144E5C", Offset = "0x1144E5C", VA = "0x1144E5C")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000C79")]
		[Address(RVA = "0x1144E64", Offset = "0x1144E64", VA = "0x1144E64")]
		set
		{
		}
	}

	[Token(Token = "0x17000274")]
	public Color accentColor
	{
		[Token(Token = "0x6000C7A")]
		[Address(RVA = "0x1144E78", Offset = "0x1144E78", VA = "0x1144E78")]
		get
		{
			return default(Color);
		}
		[Token(Token = "0x6000C7B")]
		[Address(RVA = "0x1144E84", Offset = "0x1144E84", VA = "0x1144E84")]
		set
		{
		}
	}

	[Token(Token = "0x17000275")]
	public override Texture mainTexture
	{
		[Token(Token = "0x6000C7D")]
		[Address(RVA = "0x1144EE4", Offset = "0x1144EE4", VA = "0x1144EE4", Slot = "35")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000C7C")]
	[Address(RVA = "0x1144E9C", Offset = "0x1144E9C", VA = "0x1144E9C", Slot = "10")]
	protected override void OnRectTransformDimensionsChange()
	{
	}

	[Token(Token = "0x6000C7E")]
	[Address(RVA = "0x1144F90", Offset = "0x1144F90", VA = "0x1144F90", Slot = "44")]
	protected override void OnPopulateMesh(VertexHelper vh)
	{
	}

	[Token(Token = "0x6000C7F")]
	[Address(RVA = "0x11462A0", Offset = "0x11462A0", VA = "0x11462A0", Slot = "65")]
	public bool IsRaycastLocationValid(Vector2 screenPosition, Camera eventCamera)
	{
		return default(bool);
	}

	[Token(Token = "0x6000C80")]
	[Address(RVA = "0x1146514", Offset = "0x1146514", VA = "0x1146514")]
	public UITrapezium()
	{
	}
}
[Token(Token = "0x2000140")]
public class UtilityInfoPanel : MonoBehaviour
{
	[Token(Token = "0x200039F")]
	public enum Type
	{
		[Token(Token = "0x4001741")]
		Electricity,
		[Token(Token = "0x4001742")]
		Water
	}

	[Token(Token = "0x40009AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Type type;

	[Token(Token = "0x40009AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Text consumptionValue;

	[Token(Token = "0x40009AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Text productionValue;

	[Token(Token = "0x40009AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Image arrow;

	[Token(Token = "0x40009AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float chartSize;

	[Token(Token = "0x6000C81")]
	[Address(RVA = "0x1150140", Offset = "0x1150140", VA = "0x1150140")]
	private void Update()
	{
	}

	[Token(Token = "0x6000C82")]
	[Address(RVA = "0x1150144", Offset = "0x1150144", VA = "0x1150144")]
	private void Refresh()
	{
	}

	[Token(Token = "0x6000C83")]
	[Address(RVA = "0x1150378", Offset = "0x1150378", VA = "0x1150378")]
	public UtilityInfoPanel()
	{
	}
}
[Token(Token = "0x2000141")]
public class VRPlayerInterface : MonoBehaviour
{
	[Token(Token = "0x40009AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Smartwatch smartWatch;

	[Token(Token = "0x40009B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject leftController;

	[Token(Token = "0x40009B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject rightController;

	[Token(Token = "0x40009B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject leftHandTool;

	[Token(Token = "0x40009B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject rightHandTool;

	[Token(Token = "0x40009B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public VRHand leftHand;

	[Token(Token = "0x40009B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public VRHand rightHand;

	[Token(Token = "0x6000C84")]
	[Address(RVA = "0x1012400", Offset = "0x1012400", VA = "0x1012400")]
	private void Start()
	{
	}

	[Token(Token = "0x6000C85")]
	[Address(RVA = "0x10124C0", Offset = "0x10124C0", VA = "0x10124C0")]
	public VRPlayerInterface()
	{
	}

	[Token(Token = "0x6000C86")]
	[Address(RVA = "0x10124C8", Offset = "0x10124C8", VA = "0x10124C8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6B0C10", Offset = "0x6B0C10")]
	private void <Start>b__7_0(bool isExpanded)
	{
	}
}
[Token(Token = "0x2000142")]
public class FingerPoseTrigger : MonoBehaviour
{
	[Token(Token = "0x6000C87")]
	[Address(RVA = "0x1037CC8", Offset = "0x1037CC8", VA = "0x1037CC8")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000C88")]
	[Address(RVA = "0x1037DB0", Offset = "0x1037DB0", VA = "0x1037DB0")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x6000C89")]
	[Address(RVA = "0x1037E98", Offset = "0x1037E98", VA = "0x1037E98")]
	public FingerPoseTrigger()
	{
	}
}
[Token(Token = "0x2000143")]
public class GenericWatchPanel : MonoBehaviour, ISmartwatchPanel
{
	[Token(Token = "0x40009B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public RectTransform panel;

	[Token(Token = "0x40009B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float panelPadding;

	[Token(Token = "0x40009B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Text titleText;

	[Token(Token = "0x40009B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public SelectedInfoBoxLine textLinePrefab;

	[Token(Token = "0x40009BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform textLineRoot;

	[Token(Token = "0x40009BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Font boldFont;

	[Token(Token = "0x40009BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Font lightFont;

	[Token(Token = "0x40009BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private List<SelectedInfoBoxLine> textLines;

	[Token(Token = "0x40009BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private int numTextLines;

	[Token(Token = "0x40009BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private float startingHeight;

	[Token(Token = "0x6000C8A")]
	[Address(RVA = "0x105AEB0", Offset = "0x105AEB0", VA = "0x105AEB0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000C8B")]
	[Address(RVA = "0x105AF04", Offset = "0x105AF04", VA = "0x105AF04")]
	private void SetupBankruptPanel()
	{
	}

	[Token(Token = "0x6000C8C")]
	[Address(RVA = "0x105B484", Offset = "0x105B484", VA = "0x105B484")]
	private void SetupGameOverPanel()
	{
	}

	[Token(Token = "0x6000C8D")]
	[Address(RVA = "0x105B5C8", Offset = "0x105B5C8", VA = "0x105B5C8")]
	private void SetupTutorialPanel()
	{
	}

	[Token(Token = "0x6000C8E")]
	[Address(RVA = "0x105B6CC", Offset = "0x105B6CC", VA = "0x105B6CC")]
	private void SetupUnlockedIslandsPanel()
	{
	}

	[Token(Token = "0x6000C8F")]
	[Address(RVA = "0x105B3B4", Offset = "0x105B3B4", VA = "0x105B3B4")]
	private void UpdateCanvasLayout()
	{
	}

	[Token(Token = "0x6000C90")]
	[Address(RVA = "0x105B070", Offset = "0x105B070", VA = "0x105B070")]
	private void ClearLines()
	{
	}

	[Token(Token = "0x6000C91")]
	[Address(RVA = "0x105B11C", Offset = "0x105B11C", VA = "0x105B11C")]
	private void AppendLine(Sprite icon, string text, bool useLightWeightText = true)
	{
	}

	[Token(Token = "0x6000C92")]
	[Address(RVA = "0x105B7D0", Offset = "0x105B7D0", VA = "0x105B7D0", Slot = "4")]
	public void SetupPanel(Smartwatch.NotificationData notificationData)
	{
	}

	[Token(Token = "0x6000C93")]
	[Address(RVA = "0x105B80C", Offset = "0x105B80C", VA = "0x105B80C", Slot = "5")]
	public void OnExpand()
	{
	}

	[Token(Token = "0x6000C94")]
	[Address(RVA = "0x105B838", Offset = "0x105B838", VA = "0x105B838")]
	public GenericWatchPanel()
	{
	}
}
[Token(Token = "0x2000144")]
public class HappinessFactorPanel : MonoBehaviour
{
	[Token(Token = "0x40009C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Text label;

	[Token(Token = "0x40009C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Text percentage;

	[Token(Token = "0x6000C95")]
	[Address(RVA = "0x1066654", Offset = "0x1066654", VA = "0x1066654")]
	public void Set(HappinessManager.HappinessFactor factor)
	{
	}

	[Token(Token = "0x6000C96")]
	[Address(RVA = "0x1066828", Offset = "0x1066828", VA = "0x1066828")]
	public HappinessFactorPanel()
	{
	}
}
[Token(Token = "0x2000145")]
public class HappinessWatchPanel : MonoBehaviour
{
	[Token(Token = "0x40009C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Image smileyImage;

	[Token(Token = "0x40009C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Sprite[] smileySprites;

	[Token(Token = "0x40009C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Text happinessPercentageText;

	[Token(Token = "0x40009C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public HappinessFactorPanel[] factorPanels;

	[Token(Token = "0x6000C97")]
	[Address(RVA = "0x1067FF0", Offset = "0x1067FF0", VA = "0x1067FF0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000C98")]
	[Address(RVA = "0x10682F0", Offset = "0x10682F0", VA = "0x10682F0")]
	public HappinessWatchPanel()
	{
	}
}
[Token(Token = "0x2000146")]
public class ServiceStatusWatchPanel : MonoBehaviour
{
	[Token(Token = "0x40009C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Text policeCoveragePercentage;

	[Token(Token = "0x40009C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Image policeCoverageProgress;

	[Token(Token = "0x40009C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Text fireCoveragePercentage;

	[Token(Token = "0x40009C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Image fireCoverageProgress;

	[Token(Token = "0x40009CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Text hospitalCoveragePercentage;

	[Token(Token = "0x40009CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Image hospitalCoverageProgress;

	[Token(Token = "0x40009CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Text schoolCoveragePercentage;

	[Token(Token = "0x40009CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Image schoolCoverageProgress;

	[Token(Token = "0x40009CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Color goodCoverage;

	[Token(Token = "0x40009CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Color averageCoverage;

	[Token(Token = "0x40009D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Color badCoverage;

	[Token(Token = "0x6000C99")]
	[Address(RVA = "0x1054EC8", Offset = "0x1054EC8", VA = "0x1054EC8")]
	private void UpdateCoverage(Text text, Image progress, float amount)
	{
	}

	[Token(Token = "0x6000C9A")]
	[Address(RVA = "0x1055024", Offset = "0x1055024", VA = "0x1055024")]
	public void Update()
	{
	}

	[Token(Token = "0x6000C9B")]
	[Address(RVA = "0x10551A0", Offset = "0x10551A0", VA = "0x10551A0")]
	public ServiceStatusWatchPanel()
	{
	}
}
[Token(Token = "0x2000147")]
public interface ISmartwatchPanel
{
	[Token(Token = "0x6000C9C")]
	void SetupPanel(Smartwatch.NotificationData notificationData);

	[Token(Token = "0x6000C9D")]
	void OnExpand();
}
[Token(Token = "0x2000148")]
public class Smartwatch : MonoBehaviour
{
	[Token(Token = "0x20003A0")]
	public enum NotificationType
	{
		[Token(Token = "0x4001744")]
		None,
		[Token(Token = "0x4001745")]
		MilestoneReward,
		[Token(Token = "0x4001746")]
		Bankrupt,
		[Token(Token = "0x4001747")]
		GameOver,
		[Token(Token = "0x4001748")]
		WatchIntroduction,
		[Token(Token = "0x4001749")]
		IslandsUnlocked
	}

	[Token(Token = "0x20003A1")]
	public class NotificationData
	{
		[Token(Token = "0x400174A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public NotificationType type;

		[Token(Token = "0x400174B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int levelUnlocked;

		[Token(Token = "0x6001753")]
		[Address(RVA = "0xFE87D4", Offset = "0xFE87D4", VA = "0xFE87D4")]
		public NotificationData(NotificationType inType, int inLevelUnlocked = 0)
		{
		}
	}

	[Token(Token = "0x20003A2")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6A8414", Offset = "0x6A8414")]
	private sealed class <>c__DisplayClass94_0
	{
		[Token(Token = "0x400174C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public CanvasGroup notificationPanel;

		[Token(Token = "0x6001754")]
		[Address(RVA = "0xFEA87C", Offset = "0xFEA87C", VA = "0xFEA87C")]
		public <>c__DisplayClass94_0()
		{
		}

		[Token(Token = "0x6001755")]
		[Address(RVA = "0xFEAF78", Offset = "0xFEAF78", VA = "0xFEAF78")]
		internal bool <ShowPanel>b__0(CanvasGroup x)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x40009D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Animator animator;

	[Token(Token = "0x40009D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Player player;

	[Token(Token = "0x40009D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject watchRoot;

	[Token(Token = "0x40009D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject hintIcon;

	[Token(Token = "0x40009D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform hintArrowRoot;

	[Token(Token = "0x40009D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float timeBeforeShowingHintArrow;

	[Token(Token = "0x40009D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6A93E4", Offset = "0x6A93E4")]
	private bool <isExpanded>k__BackingField;

	[Token(Token = "0x40009D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Action<bool> onExpansionStateChanged;

	[Token(Token = "0x40009D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Color pausedTimeColour;

	[Token(Token = "0x40009DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Color notificationColour;

	[Token(Token = "0x40009DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Color timeColour;

	[Token(Token = "0x40009DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Text dayText;

	[Token(Token = "0x40009DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Text weekText;

	[Token(Token = "0x40009DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public Text weekLabel;

	[Token(Token = "0x40009DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public Image weekProgress;

	[Token(Token = "0x40009E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public Image weekProgressUnder;

	[Token(Token = "0x40009E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public Image dayProgress;

	[Token(Token = "0x40009E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public Image dayProgressUnder;

	[Token(Token = "0x40009E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public Text timePlayedText;

	[Token(Token = "0x40009E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private Color progressUnderColour;

	[Token(Token = "0x40009E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private SimulationScheduler.SimulationSpeed oldSpeed;

	[Token(Token = "0x40009E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public Image pauseButtonImage;

	[Token(Token = "0x40009E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public Sprite[] pauseButtonSprites;

	[Token(Token = "0x40009E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public Image speedButtonImage;

	[Token(Token = "0x40009E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public Sprite[] speedButtonSprites;

	[Token(Token = "0x40009EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public CanvasGroup[] displayPanels;

	[Token(Token = "0x40009EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public float displayPanelSpacing;

	[Token(Token = "0x40009EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
	private int currentDisplayPanelIndex;

	[Token(Token = "0x40009ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	public CanvasGroup statsDisplayPanel;

	[Token(Token = "0x40009EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	public CanvasGroup milestoneDisplayPanel;

	[Token(Token = "0x40009EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	public CanvasGroup genericDisplayPanel;

	[Token(Token = "0x40009F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	public CanvasGroup worldMapStatsDisplayPanel;

	[Token(Token = "0x40009F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	public GameObject defaultButtonGroup;

	[Token(Token = "0x40009F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	public GameObject confirmButtonGroup;

	[Token(Token = "0x40009F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	public GameObject dateFace;

	[Token(Token = "0x40009F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	public GameObject messageFace;

	[Token(Token = "0x40009F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	public GameObject messageOpenFace;

	[Token(Token = "0x40009F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	public GameObject playTimeFace;

	[Token(Token = "0x40009F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	public ControllerLabel settingsHintLabel;

	[Token(Token = "0x40009F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	public Button settingsButton;

	[Token(Token = "0x40009F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	public MeshRenderer notificationMesh;

	[Token(Token = "0x40009FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	private List<NotificationData> queuedNotifications;

	[Token(Token = "0x40009FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	private bool didPauseFromNotification;

	[Token(Token = "0x40009FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x179")]
	private bool makeNotificationSound;

	[Token(Token = "0x40009FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x17C")]
	private float notificationVibrationTimer;

	[Token(Token = "0x40009FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	private int notificationVibrationPattern;

	[Token(Token = "0x40009FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x184")]
	private float timeMakingNotificationSound;

	[Token(Token = "0x4000A00")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	private float timeSinceLastNotification;

	[Token(Token = "0x4000A01")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18C")]
	private float buttonPressCooldown;

	[Token(Token = "0x4000A02")]
	private const float timeShiftSoundVolume = 0.25f;

	[Token(Token = "0x4000A03")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6A93F4", Offset = "0x6A93F4")]
	private bool <shouldHideButtons>k__BackingField;

	[Token(Token = "0x4000A04")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	private string[] weekdayLanguageCodes;

	[Token(Token = "0x17000276")]
	public bool isExpanded
	{
		[Token(Token = "0x6000C9E")]
		[Address(RVA = "0xFE75F4", Offset = "0xFE75F4", VA = "0xFE75F4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6B0C20", Offset = "0x6B0C20")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000C9F")]
		[Address(RVA = "0xFE75FC", Offset = "0xFE75FC", VA = "0xFE75FC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6B0C30", Offset = "0x6B0C30")]
		private set
		{
		}
	}

	[Token(Token = "0x17000277")]
	private CanvasGroup currentDisplayPanel
	{
		[Token(Token = "0x6000CA0")]
		[Address(RVA = "0xFE7608", Offset = "0xFE7608", VA = "0xFE7608")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000278")]
	public bool hasQueuedNotification
	{
		[Token(Token = "0x6000CA1")]
		[Address(RVA = "0xFE7648", Offset = "0xFE7648", VA = "0xFE7648")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000279")]
	public bool canBeExpanded
	{
		[Token(Token = "0x6000CA2")]
		[Address(RVA = "0xFE76A0", Offset = "0xFE76A0", VA = "0xFE76A0")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700027A")]
	public bool hasNotificationMessage
	{
		[Token(Token = "0x6000CA3")]
		[Address(RVA = "0xFE7710", Offset = "0xFE7710", VA = "0xFE7710")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700027B")]
	public bool canQueueNotification
	{
		[Token(Token = "0x6000CA4")]
		[Address(RVA = "0xFE7760", Offset = "0xFE7760", VA = "0xFE7760")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700027C")]
	public bool shouldHideButtons
	{
		[Token(Token = "0x6000CA5")]
		[Address(RVA = "0xFE77A8", Offset = "0xFE77A8", VA = "0xFE77A8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6B0C40", Offset = "0x6B0C40")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000CA6")]
		[Address(RVA = "0xFE77B0", Offset = "0xFE77B0", VA = "0xFE77B0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6B0C50", Offset = "0x6B0C50")]
		set
		{
		}
	}

	[Token(Token = "0x6000CA7")]
	[Address(RVA = "0xFE77BC", Offset = "0xFE77BC", VA = "0xFE77BC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000CA8")]
	[Address(RVA = "0xFE7860", Offset = "0xFE7860", VA = "0xFE7860")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000CA9")]
	[Address(RVA = "0xFE7B94", Offset = "0xFE7B94", VA = "0xFE7B94")]
	private void Start()
	{
	}

	[Token(Token = "0x6000CAA")]
	[Address(RVA = "0xFE8424", Offset = "0xFE8424", VA = "0xFE8424")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000CAB")]
	[Address(RVA = "0xFE85B8", Offset = "0xFE85B8", VA = "0xFE85B8")]
	private void ResetWatch()
	{
	}

	[Token(Token = "0x6000CAC")]
	[Address(RVA = "0xFE875C", Offset = "0xFE875C", VA = "0xFE875C")]
	public void OnLevelUp(int newLevel)
	{
	}

	[Token(Token = "0x6000CAD")]
	[Address(RVA = "0xFE880C", Offset = "0xFE880C", VA = "0xFE880C")]
	private void QueueNotification(NotificationData notificationData)
	{
	}

	[Token(Token = "0x6000CAE")]
	[Address(RVA = "0xFE8874", Offset = "0xFE8874", VA = "0xFE8874")]
	public void QueueNotification(NotificationType notificationType)
	{
	}

	[Token(Token = "0x6000CAF")]
	[Address(RVA = "0xFE8900", Offset = "0xFE8900", VA = "0xFE8900")]
	private CanvasGroup GetNotificationPanel(NotificationType notificationType)
	{
		return null;
	}

	[Token(Token = "0x6000CB0")]
	[Address(RVA = "0xFE893C", Offset = "0xFE893C", VA = "0xFE893C")]
	private void ShowQueuedNotification()
	{
	}

	[Token(Token = "0x6000CB1")]
	[Address(RVA = "0xFE8A88", Offset = "0xFE8A88", VA = "0xFE8A88")]
	private bool IsAnyStatDisplayPanel(int index)
	{
		return default(bool);
	}

	[Token(Token = "0x6000CB2")]
	[Address(RVA = "0xFE8AC8", Offset = "0xFE8AC8", VA = "0xFE8AC8")]
	private bool IsStatDisplayPanel(int index)
	{
		return default(bool);
	}

	[Token(Token = "0x6000CB3")]
	[Address(RVA = "0xFE8B70", Offset = "0xFE8B70", VA = "0xFE8B70")]
	private bool IsWorldMapStatDisplayPanel(int index)
	{
		return default(bool);
	}

	[Token(Token = "0x6000CB4")]
	[Address(RVA = "0xFE8C18", Offset = "0xFE8C18", VA = "0xFE8C18")]
	private void AnimateProgress(Image progressImage, Image underImage, float newAmount)
	{
	}

	[Token(Token = "0x6000CB5")]
	[Address(RVA = "0xFE7E24", Offset = "0xFE7E24", VA = "0xFE7E24")]
	private void UpdateWatchFace()
	{
	}

	[Token(Token = "0x6000CB6")]
	[Address(RVA = "0xFE8D40", Offset = "0xFE8D40", VA = "0xFE8D40")]
	private void ResetPanels()
	{
	}

	[Token(Token = "0x6000CB7")]
	[Address(RVA = "0xFE8EE0", Offset = "0xFE8EE0", VA = "0xFE8EE0")]
	private void AnimatePanels()
	{
	}

	[Token(Token = "0x6000CB8")]
	[Address(RVA = "0xFE901C", Offset = "0xFE901C", VA = "0xFE901C")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000CB9")]
	[Address(RVA = "0xFE9134", Offset = "0xFE9134", VA = "0xFE9134")]
	public bool CheckIfAlmostLookingAtWatch()
	{
		return default(bool);
	}

	[Token(Token = "0x6000CBA")]
	[Address(RVA = "0xFE93F4", Offset = "0xFE93F4", VA = "0xFE93F4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000CBB")]
	[Address(RVA = "0xFEA394", Offset = "0xFEA394", VA = "0xFEA394")]
	public void PausePlayPressed()
	{
	}

	[Token(Token = "0x6000CBC")]
	[Address(RVA = "0xFEA604", Offset = "0xFEA604", VA = "0xFEA604")]
	public void TimeCompressionPressed()
	{
	}

	[Token(Token = "0x6000CBD")]
	[Address(RVA = "0xFE8FC4", Offset = "0xFE8FC4", VA = "0xFE8FC4")]
	private float GetPanelPosition(int panelIndex)
	{
		return default(float);
	}

	[Token(Token = "0x6000CBE")]
	[Address(RVA = "0xFE8DA0", Offset = "0xFE8DA0", VA = "0xFE8DA0")]
	private void SetPanelPosition(int panelIndex, float position)
	{
	}

	[Token(Token = "0x6000CBF")]
	[Address(RVA = "0xFE864C", Offset = "0xFE864C", VA = "0xFE864C")]
	public void ShowPanel(NotificationType notificationType, [Optional] NotificationData notificationData)
	{
	}

	[Token(Token = "0x6000CC0")]
	[Address(RVA = "0xFE79A0", Offset = "0xFE79A0", VA = "0xFE79A0")]
	private void ShowPanel(int index, [Optional] NotificationData notificationData)
	{
	}

	[Token(Token = "0x6000CC1")]
	[Address(RVA = "0xFEA884", Offset = "0xFEA884", VA = "0xFEA884")]
	public void NextDisplayPressed()
	{
	}

	[Token(Token = "0x6000CC2")]
	[Address(RVA = "0xFEA8F8", Offset = "0xFEA8F8", VA = "0xFEA8F8")]
	public void ConfirmButtonPressed()
	{
	}

	[Token(Token = "0x6000CC3")]
	[Address(RVA = "0xFE9020", Offset = "0xFE9020", VA = "0xFE9020")]
	private void UpdateHintArrow()
	{
	}

	[Token(Token = "0x6000CC4")]
	[Address(RVA = "0xFEAADC", Offset = "0xFEAADC", VA = "0xFEAADC")]
	public void SettingsButtonPressed()
	{
	}

	[Token(Token = "0x6000CC5")]
	[Address(RVA = "0xFEAB34", Offset = "0xFEAB34", VA = "0xFEAB34")]
	public Smartwatch()
	{
	}

	[Token(Token = "0x6000CC6")]
	[Address(RVA = "0xFEAD88", Offset = "0xFEAD88", VA = "0xFEAD88")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6B0C60", Offset = "0x6B0C60")]
	private bool <OnEnable>b__71_0(CanvasGroup x)
	{
		return default(bool);
	}

	[Token(Token = "0x6000CC7")]
	[Address(RVA = "0xFEAE04", Offset = "0xFEAE04", VA = "0xFEAE04")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6B0C70", Offset = "0x6B0C70")]
	private bool <OnEnable>b__71_1(CanvasGroup x)
	{
		return default(bool);
	}

	[Token(Token = "0x6000CC8")]
	[Address(RVA = "0xFEAE80", Offset = "0xFEAE80", VA = "0xFEAE80")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6B0C80", Offset = "0x6B0C80")]
	private bool <Update>b__89_0(CanvasGroup x)
	{
		return default(bool);
	}

	[Token(Token = "0x6000CC9")]
	[Address(RVA = "0xFEAEFC", Offset = "0xFEAEFC", VA = "0xFEAEFC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6B0C90", Offset = "0x6B0C90")]
	private bool <Update>b__89_1(CanvasGroup x)
	{
		return default(bool);
	}
}
[Token(Token = "0x2000149")]
public class StatusWatchPanel : MonoBehaviour
{
	[Token(Token = "0x4000A05")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Text populationText;

	[Token(Token = "0x4000A06")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Text moneyText;

	[Token(Token = "0x4000A07")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Text moneyDeltaText;

	[Token(Token = "0x4000A08")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Text moneyDeltaTextPerWeek;

	[Token(Token = "0x4000A09")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Text cityLevelText;

	[Token(Token = "0x4000A0A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Image cityLevelProgress;

	[Token(Token = "0x4000A0B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Text cityLevelName;

	[Token(Token = "0x4000A0C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject residentialBar;

	[Token(Token = "0x4000A0D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Transform residentialBarTop;

	[Token(Token = "0x4000A0E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public GameObject residentialBarIcon;

	[Token(Token = "0x4000A0F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public GameObject commercialBar;

	[Token(Token = "0x4000A10")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Transform commercialBarTop;

	[Token(Token = "0x4000A11")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public GameObject commercialBarIcon;

	[Token(Token = "0x4000A12")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public GameObject industrialBar;

	[Token(Token = "0x4000A13")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Transform industrialBarTop;

	[Token(Token = "0x4000A14")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public GameObject industrialBarIcon;

	[Token(Token = "0x4000A15")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public GameObject happinessArrow;

	[Token(Token = "0x4000A16")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private float happinessArrowMoveSpeed;

	[Token(Token = "0x4000A17")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public GameObject waterGaugeArrow;

	[Token(Token = "0x4000A18")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public GameObject powerGaugeArrow;

	[Token(Token = "0x4000A19")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public GameObject waterBar;

	[Token(Token = "0x4000A1A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public GameObject powerBar;

	[Token(Token = "0x4000A1B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public float minBarScale;

	[Token(Token = "0x4000A1C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	public float maxBarScale;

	[Token(Token = "0x4000A1D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public GameObject cityLevelBar;

	[Token(Token = "0x4000A1E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public Transform cityLevelTop;

	[Token(Token = "0x4000A1F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public GameObject[] cityLevelIcons;

	[Token(Token = "0x4000A20")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public float minCityLevelBarScale;

	[Token(Token = "0x4000A21")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
	public float maxCityLevelBarScale;

	[Token(Token = "0x4000A22")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public int cityLevelsPerIcon;

	[Token(Token = "0x4000A23")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public Transform cityDioramaRoot;

	[Token(Token = "0x4000A24")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public Image hintIcon;

	[Token(Token = "0x4000A25")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	public Text hintText;

	[Token(Token = "0x4000A26")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	public RectTransform hintPanel;

	[Token(Token = "0x4000A27")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	public float hintTextPadding;

	[Token(Token = "0x4000A28")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	public Image cashDeltaIcon;

	[Token(Token = "0x4000A29")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	public Sprite cashIncreaseIcon;

	[Token(Token = "0x4000A2A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	public Sprite cashDecreaseIcon;

	[Token(Token = "0x4000A2B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	public GameObject[] peoplePrefabs;

	[Token(Token = "0x4000A2C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	public Transform peopleRoot;

	[Token(Token = "0x4000A2D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	public int peoplePerRow;

	[Token(Token = "0x4000A2E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14C")]
	public Vector3 peopleSpacing;

	[Token(Token = "0x4000A2F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	private List<GameObject> people;

	[Token(Token = "0x4000A30")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	private Player player;

	[Token(Token = "0x4000A31")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	private MaterialPropertyBlock peopleIconProperties;

	[Token(Token = "0x4000A32")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	private int colorId;

	[Token(Token = "0x4000A33")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x174")]
	public Color negativeIncomeColor;

	[Token(Token = "0x4000A34")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x184")]
	public bool isMenuRoomStatusDisplay;

	[Token(Token = "0x4000A35")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	private StatusWatchPanelElement currentHoveredElement;

	[Token(Token = "0x4000A36")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	public Color boldColour;

	[Token(Token = "0x4000A37")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	private string boldOpeningTag;

	[Token(Token = "0x4000A38")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	private Dictionary<string, string> languageKeyToFormattedText;

	[Token(Token = "0x4000A39")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	public float minPeopleScale;

	[Token(Token = "0x4000A3A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B4")]
	public float maxPeopleScale;

	[Token(Token = "0x4000A3B")]
	private const int populationPerPersonIcon = 1000;

	[Token(Token = "0x6000CCA")]
	[Address(RVA = "0xFF06C4", Offset = "0xFF06C4", VA = "0xFF06C4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000CCB")]
	[Address(RVA = "0xFF07A8", Offset = "0xFF07A8", VA = "0xFF07A8")]
	private void SetBar(GameObject bar, Transform top, GameObject icon, float amount, bool animate)
	{
	}

	[Token(Token = "0x6000CCC")]
	[Address(RVA = "0xFF0954", Offset = "0xFF0954", VA = "0xFF0954")]
	private void UpdatePopulation(int populationCount)
	{
	}

	[Token(Token = "0x6000CCD")]
	[Address(RVA = "0xFF0E4C", Offset = "0xFF0E4C", VA = "0xFF0E4C")]
	private void UpdateCityLevelBar(City city)
	{
	}

	[Token(Token = "0x6000CCE")]
	[Address(RVA = "0xFF1024", Offset = "0xFF1024", VA = "0xFF1024")]
	private string GetMoneyString(int amount, bool isDelta = false)
	{
		return null;
	}

	[Token(Token = "0x6000CCF")]
	[Address(RVA = "0xFF1140", Offset = "0xFF1140", VA = "0xFF1140")]
	private void UpdateDemandBars(bool animate)
	{
	}

	[Token(Token = "0x6000CD0")]
	[Address(RVA = "0xFF1268", Offset = "0xFF1268", VA = "0xFF1268")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000CD1")]
	[Address(RVA = "0xFF1360", Offset = "0xFF1360", VA = "0xFF1360")]
	private void UpdateArrow(GameObject arrow, float amount)
	{
	}

	[Token(Token = "0x6000CD2")]
	[Address(RVA = "0xFF14FC", Offset = "0xFF14FC", VA = "0xFF14FC")]
	private void UpdateHappiness(float happinessAmount)
	{
	}

	[Token(Token = "0x6000CD3")]
	[Address(RVA = "0xFF1504", Offset = "0xFF1504", VA = "0xFF1504")]
	private void UpdateUtility(GameObject bar, UtilityState utilityState)
	{
	}

	[Token(Token = "0x6000CD4")]
	[Address(RVA = "0xFF16AC", Offset = "0xFF16AC", VA = "0xFF16AC")]
	private void UpdateUtilityOld(GameObject arrow, UtilityState utilityState)
	{
	}

	[Token(Token = "0x6000CD5")]
	[Address(RVA = "0xFF1830", Offset = "0xFF1830", VA = "0xFF1830")]
	private void UpdateUtilities(City city)
	{
	}

	[Token(Token = "0x6000CD6")]
	[Address(RVA = "0xFF187C", Offset = "0xFF187C", VA = "0xFF187C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000CD7")]
	[Address(RVA = "0xFF2094", Offset = "0xFF2094", VA = "0xFF2094")]
	private void SetHintText(string languageKey, [Optional] Sprite icon)
	{
	}

	[Token(Token = "0x6000CD8")]
	[Address(RVA = "0xFF22D0", Offset = "0xFF22D0", VA = "0xFF22D0")]
	public void OnHoverElement(StatusWatchPanelElement element)
	{
	}

	[Token(Token = "0x6000CD9")]
	[Address(RVA = "0xFF22D8", Offset = "0xFF22D8", VA = "0xFF22D8")]
	public StatusWatchPanel()
	{
	}
}
[Token(Token = "0x200014A")]
public class StatusWatchPanelElement : MonoBehaviour, IPointerEnterHandler, IEventSystemHandler, IPointerExitHandler
{
	[Token(Token = "0x4000A3C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float hoverMovementDuration;

	[Token(Token = "0x4000A3D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float hoverMovementDistance;

	[Token(Token = "0x4000A3E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string hintMessage;

	[Token(Token = "0x4000A3F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6A9404", Offset = "0x6A9404")]
	private bool <isHovering>k__BackingField;

	[Token(Token = "0x4000A40")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private Vector3 startingLocalPosition;

	[Token(Token = "0x4000A41")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private UIRoundedRectangle3D roundedRectangle3D;

	[Token(Token = "0x4000A42")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private StatusWatchPanel statusWatchPanel;

	[Token(Token = "0x1700027D")]
	public bool isHovering
	{
		[Token(Token = "0x6000CDA")]
		[Address(RVA = "0xFF23E4", Offset = "0xFF23E4", VA = "0xFF23E4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6B0CA0", Offset = "0x6B0CA0")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000CDB")]
		[Address(RVA = "0xFF23EC", Offset = "0xFF23EC", VA = "0xFF23EC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6B0CB0", Offset = "0x6B0CB0")]
		private set
		{
		}
	}

	[Token(Token = "0x6000CDC")]
	[Address(RVA = "0xFF23F8", Offset = "0xFF23F8", VA = "0xFF23F8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000CDD")]
	[Address(RVA = "0xFF248C", Offset = "0xFF248C", VA = "0xFF248C", Slot = "4")]
	public void OnPointerEnter(PointerEventData eventData)
	{
	}

	[Token(Token = "0x6000CDE")]
	[Address(RVA = "0xFF2540", Offset = "0xFF2540", VA = "0xFF2540", Slot = "5")]
	public void OnPointerExit(PointerEventData eventData)
	{
	}

	[Token(Token = "0x6000CDF")]
	[Address(RVA = "0xFF2548", Offset = "0xFF2548", VA = "0xFF2548")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000CE0")]
	[Address(RVA = "0xFF2550", Offset = "0xFF2550", VA = "0xFF2550")]
	private void Update()
	{
	}

	[Token(Token = "0x6000CE1")]
	[Address(RVA = "0xFF2704", Offset = "0xFF2704", VA = "0xFF2704")]
	public StatusWatchPanelElement()
	{
	}
}
[Token(Token = "0x200014B")]
public class WheelMenu : MonoBehaviour
{
	[Token(Token = "0x4000A43")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public WheelMenu parentMenu;

	[Token(Token = "0x4000A44")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public WheelMenu subMenu;

	[Token(Token = "0x4000A45")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ToolMenu menu;

	[Token(Token = "0x4000A46")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject elementPrefab;

	[Token(Token = "0x4000A47")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float innerDistance;

	[Token(Token = "0x4000A48")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float outerDistance;

	[Token(Token = "0x4000A49")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public int numElements;

	[Token(Token = "0x4000A4A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public List<WheelMenuEntry> elements;

	[Token(Token = "0x4000A4B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float adjustment;

	[Token(Token = "0x4000A4C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public int ring;

	[Token(Token = "0x4000A4D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public int startingElementPosition;

	[Token(Token = "0x4000A4E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public Color selectedColor;

	[Token(Token = "0x4000A4F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public Color color1;

	[Token(Token = "0x4000A50")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public Color color2;

	[Token(Token = "0x4000A51")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public GameObject tooltip;

	[Token(Token = "0x4000A52")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public Text tooltipText;

	[Token(Token = "0x4000A53")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private GameObject tooltipReference;

	[Token(Token = "0x4000A54")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public WheelMenuDescriptionPanel wheelMenuDescriptionPanel;

	[Token(Token = "0x4000A55")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public ZoneDemandPanel zoneDemandPanel;

	[Token(Token = "0x4000A56")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public Image selectedArrow;

	[Token(Token = "0x4000A57")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public ToolMenu.Entry backButton;

	[Token(Token = "0x4000A58")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public Transform backButtonRoot;

	[Token(Token = "0x4000A59")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public WheelMenuEntry backButtonEntry;

	[Token(Token = "0x4000A5A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private Vector3 parentCollapsePosition;

	[Token(Token = "0x4000A5B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public ToolMenu.Entry buildButton;

	[Token(Token = "0x4000A5C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public Transform buildButtonRoot;

	[Token(Token = "0x4000A5D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public WheelMenuEntry buildButtonEntry;

	[Token(Token = "0x4000A5E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public ToolMenu.Entry undoButton;

	[Token(Token = "0x4000A5F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	public Transform undoButtonRoot;

	[Token(Token = "0x4000A60")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	public WheelMenuEntry undoButtonEntry;

	[Token(Token = "0x4000A61")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	public GazeSphere innerGazeTrigger;

	[Token(Token = "0x4000A62")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	public GazeSphere outerGazeTrigger;

	[Token(Token = "0x4000A63")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6A9414", Offset = "0x6A9414")]
	private WheelMenuEntry <selectedElement>k__BackingField;

	[Token(Token = "0x4000A64")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	private ToolMenu.Entry selectedToolInternal;

	[Token(Token = "0x4000A65")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6A9424", Offset = "0x6A9424")]
	private bool <isMenuCollapsed>k__BackingField;

	[Token(Token = "0x4000A66")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x139")]
	private bool hasGazeTriggeredBeenActivated;

	[Token(Token = "0x1700027E")]
	public WheelMenuEntry selectedElement
	{
		[Token(Token = "0x6000CE2")]
		[Address(RVA = "0x101B9EC", Offset = "0x101B9EC", VA = "0x101B9EC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6B0CC0", Offset = "0x6B0CC0")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000CE3")]
		[Address(RVA = "0x101B9F4", Offset = "0x101B9F4", VA = "0x101B9F4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6B0CD0", Offset = "0x6B0CD0")]
		private set
		{
		}
	}

	[Token(Token = "0x1700027F")]
	public ToolMenu.Entry selectedTool
	{
		[Token(Token = "0x6000CE4")]
		[Address(RVA = "0x101B9FC", Offset = "0x101B9FC", VA = "0x101B9FC")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000CE5")]
		[Address(RVA = "0x101BA98", Offset = "0x101BA98", VA = "0x101BA98")]
		set
		{
		}
	}

	[Token(Token = "0x17000280")]
	public bool isMenuCollapsed
	{
		[Token(Token = "0x6000CE6")]
		[Address(RVA = "0x101BB40", Offset = "0x101BB40", VA = "0x101BB40")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6B0CE0", Offset = "0x6B0CE0")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000CE7")]
		[Address(RVA = "0x101BB48", Offset = "0x101BB48", VA = "0x101BB48")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6B0CF0", Offset = "0x6B0CF0")]
		private set
		{
		}
	}

	[Token(Token = "0x17000281")]
	public bool isMainMenu
	{
		[Token(Token = "0x6000CE8")]
		[Address(RVA = "0x101BB54", Offset = "0x101BB54", VA = "0x101BB54")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000282")]
	public bool isAnyMenuOpen
	{
		[Token(Token = "0x6000CE9")]
		[Address(RVA = "0x101BC10", Offset = "0x101BC10", VA = "0x101BC10")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000283")]
	private Player player
	{
		[Token(Token = "0x6000CEA")]
		[Address(RVA = "0x101BCF8", Offset = "0x101BCF8", VA = "0x101BCF8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000CEB")]
	[Address(RVA = "0x101BD48", Offset = "0x101BD48", VA = "0x101BD48")]
	private void Start()
	{
	}

	[Token(Token = "0x6000CEC")]
	[Address(RVA = "0x101CC8C", Offset = "0x101CC8C", VA = "0x101CC8C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000CED")]
	[Address(RVA = "0x101CD1C", Offset = "0x101CD1C", VA = "0x101CD1C")]
	public void SetMenu(ToolMenu newMenu, WheelMenuEntry pressedEntry)
	{
	}

	[Token(Token = "0x6000CEE")]
	[Address(RVA = "0x101CEE0", Offset = "0x101CEE0", VA = "0x101CEE0")]
	public void CollapseMenu()
	{
	}

	[Token(Token = "0x6000CEF")]
	[Address(RVA = "0x101D150", Offset = "0x101D150", VA = "0x101D150")]
	public void ExpandFromBuildButton()
	{
	}

	[Token(Token = "0x6000CF0")]
	[Address(RVA = "0x101D270", Offset = "0x101D270", VA = "0x101D270")]
	public void ExpandMenu()
	{
	}

	[Token(Token = "0x6000CF1")]
	[Address(RVA = "0x101DA30", Offset = "0x101DA30", VA = "0x101DA30")]
	public void SetSubMenu(ToolMenu newMenu, WheelMenuEntry pressedEntry)
	{
	}

	[Token(Token = "0x6000CF2")]
	[Address(RVA = "0x101DB70", Offset = "0x101DB70", VA = "0x101DB70")]
	public void Unselect()
	{
	}

	[Token(Token = "0x6000CF3")]
	[Address(RVA = "0x101DB74", Offset = "0x101DB74", VA = "0x101DB74")]
	public void SelectEntry(int index)
	{
	}

	[Token(Token = "0x6000CF4")]
	[Address(RVA = "0x101DBF0", Offset = "0x101DBF0", VA = "0x101DBF0")]
	public void SelectEntry(WheelMenuEntry entry)
	{
	}

	[Token(Token = "0x6000CF5")]
	[Address(RVA = "0x101BE9C", Offset = "0x101BE9C", VA = "0x101BE9C")]
	public void RegenerateElements()
	{
	}

	[Token(Token = "0x6000CF6")]
	[Address(RVA = "0x101D4E4", Offset = "0x101D4E4", VA = "0x101D4E4")]
	private void OrganiseLayout()
	{
	}

	[Token(Token = "0x6000CF7")]
	[Address(RVA = "0x101EB00", Offset = "0x101EB00", VA = "0x101EB00")]
	private void OrganiseLayoutOld()
	{
	}

	[Token(Token = "0x6000CF8")]
	[Address(RVA = "0x101F11C", Offset = "0x101F11C", VA = "0x101F11C")]
	public void SetTooltip(Vector3 offset, string text, [Optional] GameObject referenceObject)
	{
	}

	[Token(Token = "0x6000CF9")]
	[Address(RVA = "0x101C894", Offset = "0x101C894", VA = "0x101C894")]
	public void HideTooltip()
	{
	}

	[Token(Token = "0x6000CFA")]
	[Address(RVA = "0x101CA6C", Offset = "0x101CA6C", VA = "0x101CA6C")]
	private void ShowZoneDemandPanel(bool shouldShow)
	{
	}

	[Token(Token = "0x6000CFB")]
	[Address(RVA = "0x101F3D0", Offset = "0x101F3D0", VA = "0x101F3D0")]
	public void ShowDescriptionPanel(Vector3 offset, ToolMenu.Entry details)
	{
	}

	[Token(Token = "0x6000CFC")]
	[Address(RVA = "0x101C974", Offset = "0x101C974", VA = "0x101C974")]
	public void HideDescriptionPanel()
	{
	}

	[Token(Token = "0x6000CFD")]
	[Address(RVA = "0x101FAB0", Offset = "0x101FAB0", VA = "0x101FAB0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000CFE")]
	[Address(RVA = "0x101FE7C", Offset = "0x101FE7C", VA = "0x101FE7C")]
	public void ToggleMenu()
	{
	}

	[Token(Token = "0x6000CFF")]
	[Address(RVA = "0x101FEF0", Offset = "0x101FEF0", VA = "0x101FEF0")]
	public WheelMenu()
	{
	}
}
[Token(Token = "0x200014C")]
public class WheelMenuDescriptionPanel : MonoBehaviour
{
	[Token(Token = "0x20003A3")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6A8424", Offset = "0x6A8424")]
	private sealed class <>c__DisplayClass28_0
	{
		[Token(Token = "0x400174D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public HashSet<BuildingInstance> affectedBuildings;

		[Token(Token = "0x400174E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public HashSet<BuildingInstance> negativeAffectedBuildings;

		[Token(Token = "0x6001756")]
		[Address(RVA = "0x1022948", Offset = "0x1022948", VA = "0x1022948")]
		public <>c__DisplayClass28_0()
		{
		}

		[Token(Token = "0x6001757")]
		[Address(RVA = "0x10229F8", Offset = "0x10229F8", VA = "0x10229F8")]
		internal void <SetDescription>b__0(BuildingInstance b)
		{
		}

		[Token(Token = "0x6001758")]
		[Address(RVA = "0x1022AD4", Offset = "0x1022AD4", VA = "0x1022AD4")]
		internal void <SetDescription>b__1(BuildingInstance b)
		{
		}

		[Token(Token = "0x6001759")]
		[Address(RVA = "0x1022BB0", Offset = "0x1022BB0", VA = "0x1022BB0")]
		internal void <SetDescription>b__2(BuildingInstance b)
		{
		}

		[Token(Token = "0x600175A")]
		[Address(RVA = "0x1022C8C", Offset = "0x1022C8C", VA = "0x1022C8C")]
		internal void <SetDescription>b__3(BuildingInstance b)
		{
		}

		[Token(Token = "0x600175B")]
		[Address(RVA = "0x1022D2C", Offset = "0x1022D2C", VA = "0x1022D2C")]
		internal void <SetDescription>b__4(BuildingInstance b)
		{
		}
	}

	[Token(Token = "0x20003A4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6A8434", Offset = "0x6A8434")]
	private sealed class <>c__DisplayClass29_0
	{
		[Token(Token = "0x400174F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public BuildingInfo building;

		[Token(Token = "0x600175C")]
		[Address(RVA = "0x1022950", Offset = "0x1022950", VA = "0x1022950")]
		public <>c__DisplayClass29_0()
		{
		}

		[Token(Token = "0x600175D")]
		[Address(RVA = "0x1022E08", Offset = "0x1022E08", VA = "0x1022E08")]
		internal bool <SetDescription>b__0(BuildingInstance x)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x4000A67")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Color defaultTextColour;

	[Token(Token = "0x4000A68")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Color warningTextColour;

	[Token(Token = "0x4000A69")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Color boldTextColour;

	[Token(Token = "0x4000A6A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Text title;

	[Token(Token = "0x4000A6B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Transform textLineRoot;

	[Token(Token = "0x4000A6C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GameObject buildingCostRoot;

	[Token(Token = "0x4000A6D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Text buildCost;

	[Token(Token = "0x4000A6E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Text weeklyCost;

	[Token(Token = "0x4000A6F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Text perWeek;

	[Token(Token = "0x4000A70")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public GameObject simpleCostRoot;

	[Token(Token = "0x4000A71")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Text simpleBuildCost;

	[Token(Token = "0x4000A72")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Image powerUsageIcon;

	[Token(Token = "0x4000A73")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public Sprite[] powerUsageSprites;

	[Token(Token = "0x4000A74")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public Text powerUsageText;

	[Token(Token = "0x4000A75")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public Image waterUsageIcon;

	[Token(Token = "0x4000A76")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public Sprite[] waterUsageSprites;

	[Token(Token = "0x4000A77")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public Text waterUsageText;

	[Token(Token = "0x4000A78")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public GameObject powerUsageGroup;

	[Token(Token = "0x4000A79")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public GameObject waterUsageGroup;

	[Token(Token = "0x4000A7A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public SelectedInfoBoxLine textLinePrefab;

	[Token(Token = "0x4000A7B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private List<SelectedInfoBoxLine> textLines;

	[Token(Token = "0x4000A7C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private int numTextLines;

	[Token(Token = "0x4000A7D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
	private float startingHeight;

	[Token(Token = "0x6000D00")]
	[Address(RVA = "0x101FF60", Offset = "0x101FF60", VA = "0x101FF60")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000D01")]
	[Address(RVA = "0x101FFE8", Offset = "0x101FFE8", VA = "0x101FFE8")]
	private void Clear()
	{
	}

	[Token(Token = "0x6000D02")]
	[Address(RVA = "0x101F534", Offset = "0x101F534", VA = "0x101F534")]
	public void SetDescription(ToolMenu.Entry details)
	{
	}

	[Token(Token = "0x6000D03")]
	[Address(RVA = "0x1021618", Offset = "0x1021618", VA = "0x1021618")]
	public void SetDescription(string titleText, int cost, Sprite icon, string description)
	{
	}

	[Token(Token = "0x6000D04")]
	[Address(RVA = "0x1021C58", Offset = "0x1021C58", VA = "0x1021C58")]
	private string GetUsageString(int usageIndex)
	{
		return null;
	}

	[Token(Token = "0x6000D05")]
	[Address(RVA = "0x1021D4C", Offset = "0x1021D4C", VA = "0x1021D4C")]
	public void SetDescription(BuildingInstance building)
	{
	}

	[Token(Token = "0x6000D06")]
	[Address(RVA = "0x1020094", Offset = "0x1020094", VA = "0x1020094")]
	public void SetDescription(BuildingInfo building)
	{
	}

	[Token(Token = "0x6000D07")]
	[Address(RVA = "0x1021A60", Offset = "0x1021A60", VA = "0x1021A60")]
	private void AdjustPanelSize()
	{
	}

	[Token(Token = "0x6000D08")]
	[Address(RVA = "0x1021794", Offset = "0x1021794", VA = "0x1021794")]
	private void AppendLine(Sprite icon, string text, Color textColour)
	{
	}

	[Token(Token = "0x6000D09")]
	[Address(RVA = "0x1022958", Offset = "0x1022958", VA = "0x1022958")]
	public WheelMenuDescriptionPanel()
	{
	}
}
[Token(Token = "0x200014D")]
public class WheelMenuEntry : MonoBehaviour, IPointerEnterHandler, IEventSystemHandler, IPointerExitHandler
{
	[Token(Token = "0x4000A7E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public UITrapezium trapezium;

	[Token(Token = "0x4000A7F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Button button;

	[Token(Token = "0x4000A80")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Image icon;

	[Token(Token = "0x4000A81")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Text text;

	[Token(Token = "0x4000A82")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject padlock;

	[Token(Token = "0x4000A83")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Image newIndicator;

	[Token(Token = "0x4000A84")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6A9434", Offset = "0x6A9434")]
	private int <lastSelectedChildIndex>k__BackingField;

	[Token(Token = "0x4000A85")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6A9444", Offset = "0x6A9444")]
	private WheelMenu <wheelMenu>k__BackingField;

	[Token(Token = "0x4000A86")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6A9454", Offset = "0x6A9454")]
	private ToolMenu.Entry <menuDetails>k__BackingField;

	[Token(Token = "0x4000A87")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6A9464", Offset = "0x6A9464")]
	private bool <isLocked>k__BackingField;

	[Token(Token = "0x4000A88")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private int unlockLevelRequired;

	[Token(Token = "0x4000A89")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Color lockedColor;

	[Token(Token = "0x4000A8A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Color unlockedColor;

	[Token(Token = "0x4000A8B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private GameObject meshIcon;

	[Token(Token = "0x4000A8C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6A9474", Offset = "0x6A9474")]
	private Bubble <bubble>k__BackingField;

	[Token(Token = "0x4000A8D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private bool isHoveringOver;

	[Token(Token = "0x4000A8E")]
	private const float hoverProjectionAmount = 20f;

	[Token(Token = "0x4000A8F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x99")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6A9484", Offset = "0x6A9484")]
	private bool <isCollapsing>k__BackingField;

	[Token(Token = "0x4000A90")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6A9494", Offset = "0x6A9494")]
	private Vector3 <layoutPosition>k__BackingField;

	[Token(Token = "0x4000A91")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private bool isExpanding;

	[Token(Token = "0x4000A92")]
	private const float meshIconTiltAngle = -15f;

	[Token(Token = "0x4000A93")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private BuildingInfo upgradedBuildingType;

	[Token(Token = "0x17000284")]
	public int lastSelectedChildIndex
	{
		[Token(Token = "0x6000D0A")]
		[Address(RVA = "0x1022E90", Offset = "0x1022E90", VA = "0x1022E90")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6B0D00", Offset = "0x6B0D00")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000D0B")]
		[Address(RVA = "0x1022E98", Offset = "0x1022E98", VA = "0x1022E98")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6B0D10", Offset = "0x6B0D10")]
		set
		{
		}
	}

	[Token(Token = "0x17000285")]
	public WheelMenu wheelMenu
	{
		[Token(Token = "0x6000D0C")]
		[Address(RVA = "0x1022EA0", Offset = "0x1022EA0", VA = "0x1022EA0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6B0D20", Offset = "0x6B0D20")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000D0D")]
		[Address(RVA = "0x1022EA8", Offset = "0x1022EA8", VA = "0x1022EA8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6B0D30", Offset = "0x6B0D30")]
		private set
		{
		}
	}

	[Token(Token = "0x17000286")]
	public ToolMenu.Entry menuDetails
	{
		[Token(Token = "0x6000D0E")]
		[Address(RVA = "0x1022EB0", Offset = "0x1022EB0", VA = "0x1022EB0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6B0D40", Offset = "0x6B0D40")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000D0F")]
		[Address(RVA = "0x1022EB8", Offset = "0x1022EB8", VA = "0x1022EB8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6B0D50", Offset = "0x6B0D50")]
		private set
		{
		}
	}

	[Token(Token = "0x17000287")]
	public bool isLocked
	{
		[Token(Token = "0x6000D10")]
		[Address(RVA = "0x1022EC0", Offset = "0x1022EC0", VA = "0x1022EC0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6B0D60", Offset = "0x6B0D60")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000D11")]
		[Address(RVA = "0x1022EC8", Offset = "0x1022EC8", VA = "0x1022EC8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6B0D70", Offset = "0x6B0D70")]
		private set
		{
		}
	}

	[Token(Token = "0x17000288")]
	private Player player
	{
		[Token(Token = "0x6000D12")]
		[Address(RVA = "0x1022ED4", Offset = "0x1022ED4", VA = "0x1022ED4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000289")]
	public Bubble bubble
	{
		[Token(Token = "0x6000D13")]
		[Address(RVA = "0x1022F24", Offset = "0x1022F24", VA = "0x1022F24")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6B0D80", Offset = "0x6B0D80")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000D14")]
		[Address(RVA = "0x1022F2C", Offset = "0x1022F2C", VA = "0x1022F2C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6B0D90", Offset = "0x6B0D90")]
		private set
		{
		}
	}

	[Token(Token = "0x1700028A")]
	public bool isCollapsing
	{
		[Token(Token = "0x6000D15")]
		[Address(RVA = "0x1022F34", Offset = "0x1022F34", VA = "0x1022F34")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6B0DA0", Offset = "0x6B0DA0")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000D16")]
		[Address(RVA = "0x1022F3C", Offset = "0x1022F3C", VA = "0x1022F3C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6B0DB0", Offset = "0x6B0DB0")]
		private set
		{
		}
	}

	[Token(Token = "0x1700028B")]
	public Vector3 layoutPosition
	{
		[Token(Token = "0x6000D17")]
		[Address(RVA = "0x1022F48", Offset = "0x1022F48", VA = "0x1022F48")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6B0DC0", Offset = "0x6B0DC0")]
		get
		{
			return default(Vector3);
		}
		[Token(Token = "0x6000D18")]
		[Address(RVA = "0x1022F54", Offset = "0x1022F54", VA = "0x1022F54")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6B0DD0", Offset = "0x6B0DD0")]
		set
		{
		}
	}

	[Token(Token = "0x6000D19")]
	[Address(RVA = "0x101E468", Offset = "0x101E468", VA = "0x101E468")]
	public void Init(WheelMenu newParentMenu, ToolMenu.Entry newMenuDetails)
	{
	}

	[Token(Token = "0x6000D1A")]
	[Address(RVA = "0x102397C", Offset = "0x102397C", VA = "0x102397C")]
	private void GenerateMeshIcon(GameObject baseObject, bool isBuilding)
	{
	}

	[Token(Token = "0x6000D1B")]
	[Address(RVA = "0x101CB74", Offset = "0x101CB74", VA = "0x101CB74")]
	public void CollapseTo(Vector3 position, bool playBurstEffect = true)
	{
	}

	[Token(Token = "0x6000D1C")]
	[Address(RVA = "0x101E9B0", Offset = "0x101E9B0", VA = "0x101E9B0")]
	public void ExpandTo(Vector3 position)
	{
	}

	[Token(Token = "0x6000D1D")]
	[Address(RVA = "0x102416C", Offset = "0x102416C", VA = "0x102416C")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000D1E")]
	[Address(RVA = "0x10248A4", Offset = "0x10248A4", VA = "0x10248A4")]
	private void OnButtonClicked()
	{
	}

	[Token(Token = "0x6000D1F")]
	[Address(RVA = "0x1024A1C", Offset = "0x1024A1C", VA = "0x1024A1C")]
	public void OnUnselected()
	{
	}

	[Token(Token = "0x6000D20")]
	[Address(RVA = "0x101DDCC", Offset = "0x101DDCC", VA = "0x101DDCC")]
	public void OnSelected()
	{
	}

	[Token(Token = "0x6000D21")]
	[Address(RVA = "0x1024A20", Offset = "0x1024A20", VA = "0x1024A20")]
	public Vector3 GetSelectionArrowOffset()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000D22")]
	[Address(RVA = "0x1024B18", Offset = "0x1024B18", VA = "0x1024B18")]
	public string GenerateTextDescription()
	{
		return null;
	}

	[Token(Token = "0x6000D23")]
	[Address(RVA = "0x10253E8", Offset = "0x10253E8", VA = "0x10253E8", Slot = "4")]
	public void OnPointerEnter(PointerEventData eventData)
	{
	}

	[Token(Token = "0x6000D24")]
	[Address(RVA = "0x1025880", Offset = "0x1025880", VA = "0x1025880")]
	public void OnLevelUp(int cityLevel)
	{
	}

	[Token(Token = "0x6000D25")]
	[Address(RVA = "0x1025884", Offset = "0x1025884", VA = "0x1025884", Slot = "5")]
	public void OnPointerExit(PointerEventData eventData)
	{
	}

	[Token(Token = "0x6000D26")]
	[Address(RVA = "0x1022F60", Offset = "0x1022F60", VA = "0x1022F60")]
	private void UpdateLockedStatus()
	{
	}

	[Token(Token = "0x6000D27")]
	[Address(RVA = "0x1025924", Offset = "0x1025924", VA = "0x1025924")]
	public WheelMenuEntry()
	{
	}
}
[Token(Token = "0x200014E")]
public class ZoneDemandPanel : MonoBehaviour
{
	[Token(Token = "0x4000A94")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject residentialBar;

	[Token(Token = "0x4000A95")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform residentialBarTop;

	[Token(Token = "0x4000A96")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject residentialBarIcon;

	[Token(Token = "0x4000A97")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject commercialBar;

	[Token(Token = "0x4000A98")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform commercialBarTop;

	[Token(Token = "0x4000A99")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject commercialBarIcon;

	[Token(Token = "0x4000A9A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject industrialBar;

	[Token(Token = "0x4000A9B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Transform industrialBarTop;

	[Token(Token = "0x4000A9C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GameObject industrialBarIcon;

	[Token(Token = "0x4000A9D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public float minBarScale;

	[Token(Token = "0x4000A9E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public float maxBarScale;

	[Token(Token = "0x6000D28")]
	[Address(RVA = "0x11784D0", Offset = "0x11784D0", VA = "0x11784D0")]
	private void SetBar(GameObject bar, Transform top, GameObject icon, float amount, bool animate)
	{
	}

	[Token(Token = "0x6000D29")]
	[Address(RVA = "0x117867C", Offset = "0x117867C", VA = "0x117867C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000D2A")]
	[Address(RVA = "0x11787AC", Offset = "0x11787AC", VA = "0x11787AC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000D2B")]
	[Address(RVA = "0x1178684", Offset = "0x1178684", VA = "0x1178684")]
	private void UpdateBars(bool animate)
	{
	}

	[Token(Token = "0x6000D2C")]
	[Address(RVA = "0x11787B4", Offset = "0x11787B4", VA = "0x11787B4")]
	public ZoneDemandPanel()
	{
	}
}
[Token(Token = "0x200014F")]
public class ZoomIndicator : MonoBehaviour
{
	[Token(Token = "0x4000A9F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform pivot;

	[Token(Token = "0x4000AA0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float range;

	[Token(Token = "0x4000AA1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6A94A4", Offset = "0x6A94A4")]
	private Player <player>k__BackingField;

	[Token(Token = "0x1700028C")]
	public Player player
	{
		[Token(Token = "0x6000D2D")]
		[Address(RVA = "0x117D564", Offset = "0x117D564", VA = "0x117D564")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6B0DE0", Offset = "0x6B0DE0")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000D2E")]
		[Address(RVA = "0x117D56C", Offset = "0x117D56C", VA = "0x117D56C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6B0DF0", Offset = "0x6B0DF0")]
		set
		{
		}
	}

	[Token(Token = "0x6000D2F")]
	[Address(RVA = "0x117D574", Offset = "0x117D574", VA = "0x117D574")]
	public void UpdateArrow(float playerHeight)
	{
	}

	[Token(Token = "0x6000D30")]
	[Address(RVA = "0x117D6C8", Offset = "0x117D6C8", VA = "0x117D6C8")]
	public ZoomIndicator()
	{
	}
}
[Token(Token = "0x2000150")]
public class BoardVisualizer : MonoBehaviour
{
	[Token(Token = "0x4000AA2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Material rock;

	[Token(Token = "0x4000AA3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Material scissors;

	[Token(Token = "0x4000AA4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Material paper;

	[Token(Token = "0x4000AA5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Renderer rend;

	[Token(Token = "0x6000D31")]
	[Address(RVA = "0x10A9A34", Offset = "0x10A9A34", VA = "0x10A9A34")]
	private void Start()
	{
	}

	[Token(Token = "0x6000D32")]
	[Address(RVA = "0x10A9A8C", Offset = "0x10A9A8C", VA = "0x10A9A8C")]
	public void ShowRock()
	{
	}

	[Token(Token = "0x6000D33")]
	[Address(RVA = "0x10A9AB0", Offset = "0x10A9AB0", VA = "0x10A9AB0")]
	public void ShowScissors()
	{
	}

	[Token(Token = "0x6000D34")]
	[Address(RVA = "0x10A9AD4", Offset = "0x10A9AD4", VA = "0x10A9AD4")]
	public void ShowPaper()
	{
	}

	[Token(Token = "0x6000D35")]
	[Address(RVA = "0x10A9AF8", Offset = "0x10A9AF8", VA = "0x10A9AF8")]
	public BoardVisualizer()
	{
	}
}
[Token(Token = "0x2000151")]
public class Comments : MonoBehaviour
{
	[Token(Token = "0x4000AA6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Multiline]
	public string text;

	[Token(Token = "0x6000D36")]
	[Address(RVA = "0x11262B0", Offset = "0x11262B0", VA = "0x11262B0")]
	public Comments()
	{
	}
}
[Token(Token = "0x2000152")]
public class GestureRecognizer : MonoBehaviour
{
	[Token(Token = "0x4000AA7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6A94C4", Offset = "0x6A94C4")]
	public GestureSO gestureToRecognize;

	[Token(Token = "0x4000AA8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6A94FC", Offset = "0x6A94FC")]
	public UnityEvent OnGestureRecognized;

	[Token(Token = "0x4000AA9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6A9534", Offset = "0x6A9534")]
	private bool shouldRecognize;

	[Token(Token = "0x4000AAA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6A9580", Offset = "0x6A9580")]
	public float timeBetweenRecognition;

	[Token(Token = "0x4000AAB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6A95B8", Offset = "0x6A95B8")]
	public float recognitionThreshold;

	[Token(Token = "0x4000AAC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6A95F0", Offset = "0x6A95F0")]
	public bool waitForHighConfidenceData;

	[Token(Token = "0x4000AAD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private OVRSkeleton skeleton;

	[Token(Token = "0x4000AAE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private List<OVRBone> fingerBones;

	[Token(Token = "0x4000AAF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float lastRecognition;

	[Token(Token = "0x4000AB0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private OVRHand hand;

	[Token(Token = "0x6000D37")]
	[Address(RVA = "0x105B8B0", Offset = "0x105B8B0", VA = "0x105B8B0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000D38")]
	[Address(RVA = "0x105BADC", Offset = "0x105BADC", VA = "0x105BADC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000D39")]
	[Address(RVA = "0x105BC00", Offset = "0x105BC00", VA = "0x105BC00")]
	private bool CheckRecognition()
	{
		return default(bool);
	}

	[Token(Token = "0x6000D3A")]
	[Address(RVA = "0x105B8BC", Offset = "0x105B8BC", VA = "0x105B8BC")]
	private void LoadSkeleton()
	{
	}

	[Token(Token = "0x6000D3B")]
	[Address(RVA = "0x105BE54", Offset = "0x105BE54", VA = "0x105BE54")]
	public GestureRecognizer()
	{
	}
}
[Serializable]
[Token(Token = "0x2000153")]
public class GestureSO : ScriptableObject
{
	[Token(Token = "0x4000AB1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string gestureName;

	[Token(Token = "0x4000AB2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GestureHand hand;

	[Token(Token = "0x4000AB3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public List<Vector3> fingerPositions;

	[Token(Token = "0x6000D3C")]
	[Address(RVA = "0x105BE74", Offset = "0x105BE74", VA = "0x105BE74")]
	public GestureSO()
	{
	}
}
[Token(Token = "0x2000154")]
public enum GestureHand
{
	[Token(Token = "0x4000AB5")]
	LeftHand,
	[Token(Token = "0x4000AB6")]
	RightHand
}
[Token(Token = "0x2000155")]
public class GestureSaver : MonoBehaviour
{
	[Token(Token = "0x4000AB7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[HideInInspector]
	public OVRSkeleton skeleton;

	[Token(Token = "0x4000AB8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<OVRBone> fingerBones;

	[Token(Token = "0x4000AB9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[HideInInspector]
	public string gestureName;

	[Token(Token = "0x4000ABA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6A9648", Offset = "0x6A9648")]
	public GestureHand handToSave;

	[Token(Token = "0x4000ABB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6A9680", Offset = "0x6A9680")]
	public KeyCode saveKey;

	[Token(Token = "0x6000D3D")]
	[Address(RVA = "0x105BE7C", Offset = "0x105BE7C", VA = "0x105BE7C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000D3E")]
	[Address(RVA = "0x105C0D0", Offset = "0x105C0D0", VA = "0x105C0D0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000D3F")]
	[Address(RVA = "0x105C10C", Offset = "0x105C10C", VA = "0x105C10C")]
	public void SaveGesture()
	{
	}

	[Token(Token = "0x6000D40")]
	[Address(RVA = "0x105C310", Offset = "0x105C310", VA = "0x105C310")]
	private void CreateGestureAsset([Optional] List<Vector3> data)
	{
	}

	[Token(Token = "0x6000D41")]
	[Address(RVA = "0x105C314", Offset = "0x105C314", VA = "0x105C314")]
	public string GetSavedGestureLocation()
	{
		return null;
	}

	[Token(Token = "0x6000D42")]
	[Address(RVA = "0x105BE80", Offset = "0x105BE80", VA = "0x105BE80")]
	private void LoadSkeleton()
	{
	}

	[Token(Token = "0x6000D43")]
	[Address(RVA = "0x105C374", Offset = "0x105C374", VA = "0x105C374")]
	public GestureSaver()
	{
	}
}
[Token(Token = "0x2000156")]
[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0x6A7744", Offset = "0x6A7744")]
public class FastList<T>
{
	[Token(Token = "0x20003A5")]
	public delegate int CompareFunc(T left, T right);

	[Token(Token = "0x20003A6")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6A8444", Offset = "0x6A8444")]
	private sealed class <GetEnumerator>d__25 : IEnumerator<T>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001750")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int <>1__state;

		[Token(Token = "0x4001751")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private T <>2__current;

		[Token(Token = "0x4001752")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public FastList<T> <>4__this;

		[Token(Token = "0x4001753")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int <i>5__2;

		[Token(Token = "0x170003EE")]
		private T System.Collections.Generic.IEnumerator<T>.Current
		{
			[Token(Token = "0x6001765")]
			[DebuggerHidden]
			get
			{
				return (T)null;
			}
		}

		[Token(Token = "0x170003EF")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001767")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001762")]
		[DebuggerHidden]
		public <GetEnumerator>d__25(int <>1__state)
		{
		}

		[Token(Token = "0x6001763")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001764")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001766")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000ABC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public T[] array;

	[Token(Token = "0x4000ABD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public int size;

	[Token(Token = "0x1700028D")]
	public int Count
	{
		[Token(Token = "0x6000D46")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000D47")]
		set
		{
		}
	}

	[Token(Token = "0x1700028E")]
	public T Item
	{
		[Token(Token = "0x6000D48")]
		get
		{
			return (T)null;
		}
		[Token(Token = "0x6000D49")]
		set
		{
		}
	}

	[Token(Token = "0x6000D44")]
	public FastList()
	{
	}

	[Token(Token = "0x6000D45")]
	public FastList(int size)
	{
	}

	[Token(Token = "0x6000D4A")]
	public void Add(T item)
	{
	}

	[Token(Token = "0x6000D4B")]
	public void AddUnique(T item)
	{
	}

	[Token(Token = "0x6000D4C")]
	public void AddRange(IEnumerable<T> items)
	{
	}

	[Token(Token = "0x6000D4D")]
	public void Insert(int index, T item)
	{
	}

	[Token(Token = "0x6000D4E")]
	public bool Remove(T item)
	{
		return default(bool);
	}

	[Token(Token = "0x6000D4F")]
	public void RemoveAt(int index)
	{
	}

	[Token(Token = "0x6000D50")]
	public bool RemoveFast(T item)
	{
		return default(bool);
	}

	[Token(Token = "0x6000D51")]
	public void RemoveAtFast(int index)
	{
	}

	[Token(Token = "0x6000D52")]
	public bool Contains(T item)
	{
		return default(bool);
	}

	[Token(Token = "0x6000D53")]
	public int IndexOf(T item)
	{
		return default(int);
	}

	[Token(Token = "0x6000D54")]
	public T Pop()
	{
		return (T)null;
	}

	[Token(Token = "0x6000D55")]
	public T[] ToArray()
	{
		return null;
	}

	[Token(Token = "0x6000D56")]
	public void Sort(CompareFunc comparer)
	{
	}

	[Token(Token = "0x6000D57")]
	public void InsertionSort(CompareFunc comparer)
	{
	}

	[Token(Token = "0x6000D58")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6B0E00", Offset = "0x6B0E00")]
	public IEnumerator<T> GetEnumerator()
	{
		return null;
	}

	[Token(Token = "0x6000D59")]
	public T Find(Predicate<T> match)
	{
		return (T)null;
	}

	[Token(Token = "0x6000D5A")]
	private void Allocate()
	{
	}

	[Token(Token = "0x6000D5B")]
	private void Trim()
	{
	}

	[Token(Token = "0x6000D5C")]
	public void Clear()
	{
	}

	[Token(Token = "0x6000D5D")]
	public void Release()
	{
	}
}
[Token(Token = "0x2000157")]
public class InspectorNoteAttribute : PropertyAttribute
{
	[Token(Token = "0x4000ABE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public readonly string header;

	[Token(Token = "0x4000ABF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public readonly string message;

	[Token(Token = "0x6000D5E")]
	[Address(RVA = "0x108B140", Offset = "0x108B140", VA = "0x108B140")]
	public InspectorNoteAttribute(string header, string message = "")
	{
	}
}
[Token(Token = "0x2000158")]
public class InspectorCommentAttribute : PropertyAttribute
{
	[Token(Token = "0x4000AC0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public readonly string message;

	[Token(Token = "0x6000D5F")]
	[Address(RVA = "0x108B114", Offset = "0x108B114", VA = "0x108B114")]
	public InspectorCommentAttribute(string message = "")
	{
	}
}
[Token(Token = "0x2000159")]
public class OvrAvatarTestDriver : OvrAvatarDriver
{
	[Token(Token = "0x4000AC1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private Vector3 headPos;

	[Token(Token = "0x4000AC2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private Quaternion headRot;

	[Token(Token = "0x4000AC3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	private float voiceAmplitude;

	[Token(Token = "0x6000D60")]
	[Address(RVA = "0xFCD71C", Offset = "0xFCD71C", VA = "0xFCD71C")]
	private ControllerPose GetMalibuControllerPose(OVRInput.Controller controller)
	{
		return default(ControllerPose);
	}

	[Token(Token = "0x6000D61")]
	[Address(RVA = "0xFCD888", Offset = "0xFCD888", VA = "0xFCD888")]
	private ControllerPose GetControllerPose(OVRInput.Controller controller)
	{
		return default(ControllerPose);
	}

	[Token(Token = "0x6000D62")]
	[Address(RVA = "0xFCDC2C", Offset = "0xFCDC2C", VA = "0xFCDC2C")]
	private void CalculateCurrentPose()
	{
	}

	[Token(Token = "0x6000D63")]
	[Address(RVA = "0xFCDDD4", Offset = "0xFCDDD4", VA = "0xFCDDD4", Slot = "4")]
	public override void UpdateTransforms(IntPtr sdkAvatar)
	{
	}

	[Token(Token = "0x6000D64")]
	[Address(RVA = "0xFCDE04", Offset = "0xFCDE04", VA = "0xFCDE04")]
	public OvrAvatarTestDriver()
	{
	}
}
[Token(Token = "0x200015A")]
public class PoseEditHelper : MonoBehaviour
{
	[Token(Token = "0x4000AC4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform poseRoot;

	[Token(Token = "0x6000D65")]
	[Address(RVA = "0x10FF028", Offset = "0x10FF028", VA = "0x10FF028")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x6000D66")]
	[Address(RVA = "0x10FF0B4", Offset = "0x10FF0B4", VA = "0x10FF0B4")]
	private void DrawJoints(Transform joint)
	{
	}

	[Token(Token = "0x6000D67")]
	[Address(RVA = "0x10FF220", Offset = "0x10FF220", VA = "0x10FF220")]
	public PoseEditHelper()
	{
	}
}
[Token(Token = "0x200015B")]
public class GazeTargetSpawner : MonoBehaviour
{
	[Token(Token = "0x4000AC5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject GazeTargetPrefab;

	[Token(Token = "0x4000AC6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int NumberOfDummyTargets;

	[Token(Token = "0x4000AC7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int RadiusMultiplier;

	[Token(Token = "0x4000AC8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private bool isVisible;

	[Token(Token = "0x1700028F")]
	public bool IsVisible
	{
		[Token(Token = "0x6000D68")]
		[Address(RVA = "0x105A9AC", Offset = "0x105A9AC", VA = "0x105A9AC")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000D69")]
		[Address(RVA = "0x105A9B4", Offset = "0x105A9B4", VA = "0x105A9B4")]
		set
		{
		}
	}

	[Token(Token = "0x6000D6A")]
	[Address(RVA = "0x105AADC", Offset = "0x105AADC", VA = "0x105AADC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000D6B")]
	[Address(RVA = "0x105ACF8", Offset = "0x105ACF8", VA = "0x105ACF8")]
	private void OnValidate()
	{
	}

	[Token(Token = "0x6000D6C")]
	[Address(RVA = "0x105AD00", Offset = "0x105AD00", VA = "0x105AD00")]
	public GazeTargetSpawner()
	{
	}
}
[Token(Token = "0x200015C")]
public class RemoteLoopbackManager : MonoBehaviour
{
	[Token(Token = "0x20003A7")]
	private class PacketLatencyPair
	{
		[Token(Token = "0x4001754")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public byte[] PacketData;

		[Token(Token = "0x4001755")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float FakeLatency;

		[Token(Token = "0x6001768")]
		[Address(RVA = "0x11073A8", Offset = "0x11073A8", VA = "0x11073A8")]
		public PacketLatencyPair()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x20003A8")]
	public class SimulatedLatencySettings
	{
		[Token(Token = "0x4001756")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x6AD660", Offset = "0x6AD660")]
		public float FakeLatencyMax;

		[Token(Token = "0x4001757")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x6AD678", Offset = "0x6AD678")]
		public float FakeLatencyMin;

		[Token(Token = "0x4001758")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x6AD690", Offset = "0x6AD690")]
		public float LatencyWeight;

		[Token(Token = "0x4001759")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x6AD6A8", Offset = "0x6AD6A8")]
		public int MaxSamples;

		[Token(Token = "0x400175A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal float AverageWindow;

		[Token(Token = "0x400175B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		internal float LatencySum;

		[Token(Token = "0x400175C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		internal LinkedList<float> LatencyValues;

		[Token(Token = "0x6001769")]
		[Address(RVA = "0x11073B0", Offset = "0x11073B0", VA = "0x11073B0")]
		public float NextValue()
		{
			return default(float);
		}

		[Token(Token = "0x600176A")]
		[Address(RVA = "0x1107548", Offset = "0x1107548", VA = "0x1107548")]
		public SimulatedLatencySettings()
		{
		}
	}

	[Token(Token = "0x4000AC9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OvrAvatar LocalAvatar;

	[Token(Token = "0x4000ACA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public OvrAvatar LoopbackAvatar;

	[Token(Token = "0x4000ACB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public SimulatedLatencySettings LatencySettings;

	[Token(Token = "0x4000ACC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private int PacketSequence;

	[Token(Token = "0x4000ACD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private LinkedList<PacketLatencyPair> packetQueue;

	[Token(Token = "0x6000D6D")]
	[Address(RVA = "0x1106A48", Offset = "0x1106A48", VA = "0x1106A48")]
	private void Start()
	{
	}

	[Token(Token = "0x6000D6E")]
	[Address(RVA = "0x1106B6C", Offset = "0x1106B6C", VA = "0x1106B6C")]
	private void OnLocalAvatarPacketRecorded(object sender, OvrAvatar.PacketEventArgs args)
	{
	}

	[Token(Token = "0x6000D6F")]
	[Address(RVA = "0x1106ED0", Offset = "0x1106ED0", VA = "0x1106ED0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000D70")]
	[Address(RVA = "0x1106E34", Offset = "0x1106E34", VA = "0x1106E34")]
	private void SendPacketData(byte[] data)
	{
	}

	[Token(Token = "0x6000D71")]
	[Address(RVA = "0x110712C", Offset = "0x110712C", VA = "0x110712C")]
	private void ReceivePacketData(byte[] data)
	{
	}

	[Token(Token = "0x6000D72")]
	[Address(RVA = "0x11074BC", Offset = "0x11074BC", VA = "0x11074BC")]
	public RemoteLoopbackManager()
	{
	}
}
[Token(Token = "0x200015D")]
public class P2PManager
{
	[Token(Token = "0x20003A9")]
	private enum MessageType : byte
	{
		[Token(Token = "0x400175E")]
		Update = 1
	}

	[Token(Token = "0x6000D73")]
	[Address(RVA = "0xFCF10C", Offset = "0xFCF10C", VA = "0xFCF10C")]
	public P2PManager()
	{
	}

	[Token(Token = "0x6000D74")]
	[Address(RVA = "0xFCF1CC", Offset = "0xFCF1CC", VA = "0xFCF1CC")]
	public void ConnectTo(ulong userID)
	{
	}

	[Token(Token = "0x6000D75")]
	[Address(RVA = "0xFCF2B0", Offset = "0xFCF2B0", VA = "0xFCF2B0")]
	public void Disconnect(ulong userID)
	{
	}

	[Token(Token = "0x6000D76")]
	[Address(RVA = "0xFCF334", Offset = "0xFCF334", VA = "0xFCF334")]
	private void PeerConnectRequestCallback(Message<NetworkingPeer> msg)
	{
	}

	[Token(Token = "0x6000D77")]
	[Address(RVA = "0xFCF490", Offset = "0xFCF490", VA = "0xFCF490")]
	private void ConnectionStateChangedCallback(Message<NetworkingPeer> msg)
	{
	}

	[Token(Token = "0x6000D78")]
	[Address(RVA = "0xFCF740", Offset = "0xFCF740", VA = "0xFCF740")]
	public void SendAvatarUpdate(ulong userID, Transform rootTransform, uint sequence, byte[] avatarPacket)
	{
	}

	[Token(Token = "0x6000D79")]
	[Address(RVA = "0xFCFB34", Offset = "0xFCFB34", VA = "0xFCFB34")]
	public void GetRemotePackets()
	{
	}

	[Token(Token = "0x6000D7A")]
	[Address(RVA = "0xFCFDD8", Offset = "0xFCFDD8", VA = "0xFCFDD8")]
	public void processAvatarPacket(RemotePlayer remote, ref byte[] packet, ref int offset)
	{
	}

	[Token(Token = "0x6000D7B")]
	[Address(RVA = "0xFCF904", Offset = "0xFCF904", VA = "0xFCF904")]
	private void PackByte(byte b, byte[] buf, ref int offset)
	{
	}

	[Token(Token = "0x6000D7C")]
	[Address(RVA = "0xFCFD08", Offset = "0xFCFD08", VA = "0xFCFD08")]
	private byte ReadByte(byte[] buf, ref int offset)
	{
		return default(byte);
	}

	[Token(Token = "0x6000D7D")]
	[Address(RVA = "0xFCF9EC", Offset = "0xFCF9EC", VA = "0xFCF9EC")]
	private void PackFloat(float f, byte[] buf, ref int offset)
	{
	}

	[Token(Token = "0x6000D7E")]
	[Address(RVA = "0xFCFFF0", Offset = "0xFCFFF0", VA = "0xFCFFF0")]
	private float ReadFloat(byte[] buf, ref int offset)
	{
		return default(float);
	}

	[Token(Token = "0x6000D7F")]
	[Address(RVA = "0xFCF94C", Offset = "0xFCF94C", VA = "0xFCF94C")]
	private void PackULong(ulong u, byte[] buf, ref int offset)
	{
	}

	[Token(Token = "0x6000D80")]
	[Address(RVA = "0xFCFD4C", Offset = "0xFCFD4C", VA = "0xFCFD4C")]
	private ulong ReadULong(byte[] buf, ref int offset)
	{
		return default(ulong);
	}

	[Token(Token = "0x6000D81")]
	[Address(RVA = "0xFCFA94", Offset = "0xFCFA94", VA = "0xFCFA94")]
	private void PackUInt32(uint u, byte[] buf, ref int offset)
	{
	}

	[Token(Token = "0x6000D82")]
	[Address(RVA = "0xFD007C", Offset = "0xFD007C", VA = "0xFD007C")]
	private uint ReadUInt32(byte[] buf, ref int offset)
	{
		return default(uint);
	}
}
[Token(Token = "0x200015E")]
public class PlayerController : SocialPlatformManager
{
	[Token(Token = "0x4000ACE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public Camera spyCamera;

	[Token(Token = "0x4000ACF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private GameObject cameraRig;

	[Token(Token = "0x4000AD0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private bool showUI;

	[Token(Token = "0x6000D83")]
	[Address(RVA = "0xFD6D7C", Offset = "0xFD6D7C", VA = "0xFD6D7C", Slot = "5")]
	public override void Awake()
	{
	}

	[Token(Token = "0x6000D84")]
	[Address(RVA = "0xFD6DB8", Offset = "0xFD6DB8", VA = "0xFD6DB8", Slot = "6")]
	public override void Start()
	{
	}

	[Token(Token = "0x6000D85")]
	[Address(RVA = "0xFD6DF0", Offset = "0xFD6DF0", VA = "0xFD6DF0", Slot = "4")]
	public override void Update()
	{
	}

	[Token(Token = "0x6000D86")]
	[Address(RVA = "0xFD6E18", Offset = "0xFD6E18", VA = "0xFD6E18")]
	private void checkInput()
	{
	}

	[Token(Token = "0x6000D87")]
	[Address(RVA = "0xFD6FB8", Offset = "0xFD6FB8", VA = "0xFD6FB8")]
	private void ToggleCamera()
	{
	}

	[Token(Token = "0x6000D88")]
	[Address(RVA = "0xFD7038", Offset = "0xFD7038", VA = "0xFD7038")]
	private void ToggleUI()
	{
	}

	[Token(Token = "0x6000D89")]
	[Address(RVA = "0xFD708C", Offset = "0xFD708C", VA = "0xFD708C")]
	public PlayerController()
	{
	}
}
[Token(Token = "0x200015F")]
public class RemotePlayer
{
	[Token(Token = "0x4000AD1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ulong remoteUserID;

	[Token(Token = "0x4000AD2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool stillInRoom;

	[Token(Token = "0x4000AD3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public PeerConnectionState p2pConnectionState;

	[Token(Token = "0x4000AD4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public PeerConnectionState voipConnectionState;

	[Token(Token = "0x4000AD5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OvrAvatar RemoteAvatar;

	[Token(Token = "0x4000AD6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Vector3 receivedRootPosition;

	[Token(Token = "0x4000AD7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public Vector3 receivedRootPositionPrior;

	[Token(Token = "0x4000AD8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Quaternion receivedRootRotation;

	[Token(Token = "0x4000AD9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Quaternion receivedRootRotationPrior;

	[Token(Token = "0x4000ADA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public VoipAudioSourceHiLevel voipSource;

	[Token(Token = "0x6000D8A")]
	[Address(RVA = "0x11075D0", Offset = "0x11075D0", VA = "0x11075D0")]
	public RemotePlayer()
	{
	}
}
[Token(Token = "0x2000160")]
public class RoomManager
{
	[Token(Token = "0x4000ADB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ulong roomID;

	[Token(Token = "0x4000ADC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private ulong invitedRoomID;

	[Token(Token = "0x4000ADD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool amIServer;

	[Token(Token = "0x4000ADE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	private bool startupDone;

	[Token(Token = "0x6000D8B")]
	[Address(RVA = "0x1040BBC", Offset = "0x1040BBC", VA = "0x1040BBC")]
	public RoomManager()
	{
	}

	[Token(Token = "0x6000D8C")]
	[Address(RVA = "0x1040C88", Offset = "0x1040C88", VA = "0x1040C88")]
	private void AcceptingInviteCallback(Message<string> msg)
	{
	}

	[Token(Token = "0x6000D8D")]
	[Address(RVA = "0x1040DE8", Offset = "0x1040DE8", VA = "0x1040DE8")]
	public bool CheckForInvite()
	{
		return default(bool);
	}

	[Token(Token = "0x6000D8E")]
	[Address(RVA = "0x1040EF8", Offset = "0x1040EF8", VA = "0x1040EF8")]
	public void CreateRoom()
	{
	}

	[Token(Token = "0x6000D8F")]
	[Address(RVA = "0x1040FAC", Offset = "0x1040FAC", VA = "0x1040FAC")]
	private void CreateAndJoinPrivateRoomCallback(Message<Room> msg)
	{
	}

	[Token(Token = "0x6000D90")]
	[Address(RVA = "0x10410E0", Offset = "0x10410E0", VA = "0x10410E0")]
	private void OnLaunchInviteWorkflowComplete(Message msg)
	{
	}

	[Token(Token = "0x6000D91")]
	[Address(RVA = "0x1040E18", Offset = "0x1040E18", VA = "0x1040E18")]
	public void JoinExistingRoom(ulong roomID)
	{
	}

	[Token(Token = "0x6000D92")]
	[Address(RVA = "0x104116C", Offset = "0x104116C", VA = "0x104116C")]
	private void JoinRoomCallback(Message<Room> msg)
	{
	}

	[Token(Token = "0x6000D93")]
	[Address(RVA = "0x1041808", Offset = "0x1041808", VA = "0x1041808")]
	private void RoomUpdateCallback(Message<Room> msg)
	{
	}

	[Token(Token = "0x6000D94")]
	[Address(RVA = "0x1041AD8", Offset = "0x1041AD8", VA = "0x1041AD8")]
	public void LeaveCurrentRoom()
	{
	}

	[Token(Token = "0x6000D95")]
	[Address(RVA = "0x104140C", Offset = "0x104140C", VA = "0x104140C")]
	private void ProcessRoomData(Message<Room> msg)
	{
	}
}
[Token(Token = "0x2000161")]
public class SocialPlatformManager : MonoBehaviour
{
	[Token(Token = "0x20003AA")]
	public enum State
	{
		[Token(Token = "0x4001760")]
		INITIALIZING,
		[Token(Token = "0x4001761")]
		CHECKING_LAUNCH_STATE,
		[Token(Token = "0x4001762")]
		CREATING_A_ROOM,
		[Token(Token = "0x4001763")]
		WAITING_IN_A_ROOM,
		[Token(Token = "0x4001764")]
		JOINING_A_ROOM,
		[Token(Token = "0x4001765")]
		CONNECTED_IN_A_ROOM,
		[Token(Token = "0x4001766")]
		LEAVING_A_ROOM,
		[Token(Token = "0x4001767")]
		SHUTDOWN
	}

	[Token(Token = "0x4000ADF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly Vector3 START_ROTATION_ONE;

	[Token(Token = "0x4000AE0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private static readonly Vector3 START_POSITION_ONE;

	[Token(Token = "0x4000AE1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static readonly Vector3 START_ROTATION_TWO;

	[Token(Token = "0x4000AE2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private static readonly Vector3 START_POSITION_TWO;

	[Token(Token = "0x4000AE3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private static readonly Vector3 START_ROTATION_THREE;

	[Token(Token = "0x4000AE4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private static readonly Vector3 START_POSITION_THREE;

	[Token(Token = "0x4000AE5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private static readonly Vector3 START_ROTATION_FOUR;

	[Token(Token = "0x4000AE6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private static readonly Vector3 START_POSITION_FOUR;

	[Token(Token = "0x4000AE7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private static readonly Color BLACK;

	[Token(Token = "0x4000AE8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private static readonly Color WHITE;

	[Token(Token = "0x4000AE9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private static readonly Color CYAN;

	[Token(Token = "0x4000AEA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private static readonly Color BLUE;

	[Token(Token = "0x4000AEB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private static readonly Color GREEN;

	[Token(Token = "0x4000AEC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float voiceCurrent;

	[Token(Token = "0x4000AED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private uint packetSequence;

	[Token(Token = "0x4000AEE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public OvrAvatar localAvatarPrefab;

	[Token(Token = "0x4000AEF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OvrAvatar remoteAvatarPrefab;

	[Token(Token = "0x4000AF0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject helpPanel;

	[Token(Token = "0x4000AF1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	protected MeshRenderer helpMesh;

	[Token(Token = "0x4000AF2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Material riftMaterial;

	[Token(Token = "0x4000AF3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Material gearMaterial;

	[Token(Token = "0x4000AF4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	protected OvrAvatar localAvatar;

	[Token(Token = "0x4000AF5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	protected GameObject localTrackingSpace;

	[Token(Token = "0x4000AF6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	protected GameObject localPlayerHead;

	[Token(Token = "0x4000AF7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	protected Dictionary<ulong, RemotePlayer> remoteUsers;

	[Token(Token = "0x4000AF8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public GameObject roomSphere;

	[Token(Token = "0x4000AF9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	protected MeshRenderer sphereMesh;

	[Token(Token = "0x4000AFA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public GameObject roomFloor;

	[Token(Token = "0x4000AFB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	protected MeshRenderer floorMesh;

	[Token(Token = "0x4000AFC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	protected State currentState;

	[Token(Token = "0x4000AFD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	protected static SocialPlatformManager s_instance;

	[Token(Token = "0x4000AFE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	protected RoomManager roomManager;

	[Token(Token = "0x4000AFF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	protected P2PManager p2pManager;

	[Token(Token = "0x4000B00")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	protected VoipManager voipManager;

	[Token(Token = "0x4000B01")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	protected ulong myID;

	[Token(Token = "0x4000B02")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	protected string myOculusID;

	[Token(Token = "0x4000B03")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public static readonly float VOIP_SCALE;

	[Token(Token = "0x17000290")]
	public static State CurrentState
	{
		[Token(Token = "0x6000DA2")]
		[Address(RVA = "0xFECE9C", Offset = "0xFECE9C", VA = "0xFECE9C")]
		get
		{
			return default(State);
		}
	}

	[Token(Token = "0x17000291")]
	public static ulong MyID
	{
		[Token(Token = "0x6000DA3")]
		[Address(RVA = "0xFECF10", Offset = "0xFECF10", VA = "0xFECF10")]
		get
		{
			return default(ulong);
		}
	}

	[Token(Token = "0x17000292")]
	public static string MyOculusID
	{
		[Token(Token = "0x6000DA4")]
		[Address(RVA = "0xFECFE8", Offset = "0xFECFE8", VA = "0xFECFE8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000D96")]
	[Address(RVA = "0xFEB134", Offset = "0xFEB134", VA = "0xFEB134", Slot = "4")]
	public virtual void Update()
	{
	}

	[Token(Token = "0x6000D97")]
	[Address(RVA = "0xFEB4C0", Offset = "0xFEB4C0", VA = "0xFEB4C0", Slot = "5")]
	public virtual void Awake()
	{
	}

	[Token(Token = "0x6000D98")]
	[Address(RVA = "0xFEBB9C", Offset = "0xFEBB9C", VA = "0xFEBB9C")]
	private void InitCallback(Message<PlatformInitialize> msg)
	{
	}

	[Token(Token = "0x6000D99")]
	[Address(RVA = "0xFEBE64", Offset = "0xFEBE64", VA = "0xFEBE64", Slot = "6")]
	public virtual void Start()
	{
	}

	[Token(Token = "0x6000D9A")]
	[Address(RVA = "0xFEBE68", Offset = "0xFEBE68", VA = "0xFEBE68")]
	private void IsEntitledCallback(Message msg)
	{
	}

	[Token(Token = "0x6000D9B")]
	[Address(RVA = "0xFEBF5C", Offset = "0xFEBF5C", VA = "0xFEBF5C")]
	private void GetLoggedInUserCallback(Message<User> msg)
	{
	}

	[Token(Token = "0x6000D9C")]
	[Address(RVA = "0xFEC650", Offset = "0xFEC650", VA = "0xFEC650")]
	private void GetLoggedInUserFriendsAndRoomsCallback(Message<UserAndRoomList> msg)
	{
	}

	[Token(Token = "0x6000D9D")]
	[Address(RVA = "0xFECB10", Offset = "0xFECB10", VA = "0xFECB10")]
	public void OnLocalAvatarPacketRecorded(object sender, OvrAvatar.PacketEventArgs args)
	{
	}

	[Token(Token = "0x6000D9E")]
	[Address(RVA = "0xFECCDC", Offset = "0xFECCDC", VA = "0xFECCDC")]
	public void OnApplicationQuit()
	{
	}

	[Token(Token = "0x6000D9F")]
	[Address(RVA = "0xFECE2C", Offset = "0xFECE2C", VA = "0xFECE2C")]
	public void AddUser(ulong userID, ref RemotePlayer remoteUser)
	{
	}

	[Token(Token = "0x6000DA0")]
	[Address(RVA = "0xFEB7C0", Offset = "0xFEB7C0", VA = "0xFEB7C0")]
	public void LogOutputLine(string line)
	{
	}

	[Token(Token = "0x6000DA1")]
	[Address(RVA = "0xFEBCF8", Offset = "0xFEBCF8", VA = "0xFEBCF8")]
	public static void TerminateWithError(Message msg)
	{
	}

	[Token(Token = "0x6000DA5")]
	[Address(RVA = "0xFEB874", Offset = "0xFEB874", VA = "0xFEB874")]
	public static void TransitionToState(State newState)
	{
	}

	[Token(Token = "0x6000DA6")]
	[Address(RVA = "0xFED0FC", Offset = "0xFED0FC", VA = "0xFED0FC")]
	private static void SetSphereColorForState()
	{
	}

	[Token(Token = "0x6000DA7")]
	[Address(RVA = "0xFED27C", Offset = "0xFED27C", VA = "0xFED27C")]
	public static void SetFloorColorForState(bool host)
	{
	}

	[Token(Token = "0x6000DA8")]
	[Address(RVA = "0xFED364", Offset = "0xFED364", VA = "0xFED364")]
	public static void MarkAllRemoteUsersAsNotInRoom()
	{
	}

	[Token(Token = "0x6000DA9")]
	[Address(RVA = "0xFED488", Offset = "0xFED488", VA = "0xFED488")]
	public static void MarkRemoteUserInRoom(ulong userID)
	{
	}

	[Token(Token = "0x6000DAA")]
	[Address(RVA = "0xFED558", Offset = "0xFED558", VA = "0xFED558")]
	public static void ForgetRemoteUsersNotInRoom()
	{
	}

	[Token(Token = "0x6000DAB")]
	[Address(RVA = "0xFEBDA8", Offset = "0xFEBDA8", VA = "0xFEBDA8")]
	public static void LogOutput(string line)
	{
	}

	[Token(Token = "0x6000DAC")]
	[Address(RVA = "0xFED984", Offset = "0xFED984", VA = "0xFED984")]
	public static bool IsUserInRoom(ulong userID)
	{
		return default(bool);
	}

	[Token(Token = "0x6000DAD")]
	[Address(RVA = "0xFEDA10", Offset = "0xFEDA10", VA = "0xFEDA10")]
	public static void AddRemoteUser(ulong userID)
	{
	}

	[Token(Token = "0x6000DAE")]
	[Address(RVA = "0xFED7A8", Offset = "0xFED7A8", VA = "0xFED7A8")]
	public static void RemoveRemoteUser(ulong userID)
	{
	}

	[Token(Token = "0x6000DAF")]
	[Address(RVA = "0xFEDBE4", Offset = "0xFEDBE4", VA = "0xFEDBE4")]
	public void UpdateVoiceData(short[] pcmData, int numChannels)
	{
	}

	[Token(Token = "0x6000DB0")]
	[Address(RVA = "0xFEB0AC", Offset = "0xFEB0AC", VA = "0xFEB0AC")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x6B0E64", Offset = "0x6B0E64")]
	public static void MicFilter(short[] pcmData, UIntPtr pcmDataLength, int frequency, int numChannels)
	{
	}

	[Token(Token = "0x6000DB1")]
	[Address(RVA = "0xFEDD20", Offset = "0xFEDD20", VA = "0xFEDD20")]
	public static RemotePlayer GetRemoteUser(ulong userID)
	{
		return null;
	}

	[Token(Token = "0x6000DB2")]
	[Address(RVA = "0xFEDDE8", Offset = "0xFEDDE8", VA = "0xFEDDE8")]
	public SocialPlatformManager()
	{
	}
}
[Token(Token = "0x2000162")]
public class VoipManager
{
	[Token(Token = "0x6000DB4")]
	[Address(RVA = "0x1016580", Offset = "0x1016580", VA = "0x1016580")]
	public VoipManager()
	{
	}

	[Token(Token = "0x6000DB5")]
	[Address(RVA = "0x1016640", Offset = "0x1016640", VA = "0x1016640")]
	public void ConnectTo(ulong userID)
	{
	}

	[Token(Token = "0x6000DB6")]
	[Address(RVA = "0x1016724", Offset = "0x1016724", VA = "0x1016724")]
	public void Disconnect(ulong userID)
	{
	}

	[Token(Token = "0x6000DB7")]
	[Address(RVA = "0x10167A8", Offset = "0x10167A8", VA = "0x10167A8")]
	private void VoipConnectRequestCallback(Message<NetworkingPeer> msg)
	{
	}

	[Token(Token = "0x6000DB8")]
	[Address(RVA = "0x1016904", Offset = "0x1016904", VA = "0x1016904")]
	private void VoipStateChangedCallback(Message<NetworkingPeer> msg)
	{
	}
}
[Token(Token = "0x2000163")]
public class GazeTarget : MonoBehaviour
{
	[Token(Token = "0x4000B04")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ovrAvatarGazeTargetType Type;

	[Token(Token = "0x4000B05")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static ovrAvatarGazeTargets RuntimeTargetList;

	[Token(Token = "0x6000DB9")]
	[Address(RVA = "0x105A638", Offset = "0x105A638", VA = "0x105A638")]
	static GazeTarget()
	{
	}

	[Token(Token = "0x6000DBA")]
	[Address(RVA = "0x105A6A8", Offset = "0x105A6A8", VA = "0x105A6A8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000DBB")]
	[Address(RVA = "0x105A824", Offset = "0x105A824", VA = "0x105A824")]
	private void Update()
	{
	}

	[Token(Token = "0x6000DBC")]
	[Address(RVA = "0x105A888", Offset = "0x105A888", VA = "0x105A888")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000DBD")]
	[Address(RVA = "0x105A6E4", Offset = "0x105A6E4", VA = "0x105A6E4")]
	private void UpdateGazeTarget()
	{
	}

	[Token(Token = "0x6000DBE")]
	[Address(RVA = "0x105A944", Offset = "0x105A944", VA = "0x105A944")]
	private ovrAvatarGazeTarget CreateOvrGazeTarget(uint targetId, Vector3 targetPosition, ovrAvatarGazeTargetType targetType)
	{
		return default(ovrAvatarGazeTarget);
	}

	[Token(Token = "0x6000DBF")]
	[Address(RVA = "0x105A9A4", Offset = "0x105A9A4", VA = "0x105A9A4")]
	public GazeTarget()
	{
	}
}
[Serializable]
[Token(Token = "0x2000164")]
public class AvatarLayer
{
	[Token(Token = "0x4000B06")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int layerIndex;

	[Token(Token = "0x6000DC0")]
	[Address(RVA = "0x10A4400", Offset = "0x10A4400", VA = "0x10A4400")]
	public AvatarLayer()
	{
	}
}
[Serializable]
[Token(Token = "0x2000165")]
public class PacketRecordSettings
{
	[Token(Token = "0x4000B07")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	internal bool RecordingFrames;

	[Token(Token = "0x4000B08")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float UpdateRate;

	[Token(Token = "0x4000B09")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	internal float AccumulatedTime;

	[Token(Token = "0x6000DC1")]
	[Address(RVA = "0xFD0108", Offset = "0xFD0108", VA = "0xFD0108")]
	public PacketRecordSettings()
	{
	}
}
[Token(Token = "0x2000166")]
public class OvrAvatar : MonoBehaviour
{
	[Token(Token = "0x20003AB")]
	public class PacketEventArgs : EventArgs
	{
		[Token(Token = "0x4001768")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly OvrAvatarPacket Packet;

		[Token(Token = "0x600176B")]
		[Address(RVA = "0x1137328", Offset = "0x1137328", VA = "0x1137328")]
		public PacketEventArgs(OvrAvatarPacket packet)
		{
		}
	}

	[Token(Token = "0x20003AC")]
	public enum HandType
	{
		[Token(Token = "0x400176A")]
		Right,
		[Token(Token = "0x400176B")]
		Left,
		[Token(Token = "0x400176C")]
		Max
	}

	[Token(Token = "0x20003AD")]
	public enum HandJoint
	{
		[Token(Token = "0x400176E")]
		HandBase,
		[Token(Token = "0x400176F")]
		IndexBase,
		[Token(Token = "0x4001770")]
		IndexTip,
		[Token(Token = "0x4001771")]
		ThumbBase,
		[Token(Token = "0x4001772")]
		ThumbTip,
		[Token(Token = "0x4001773")]
		Max
	}

	[Token(Token = "0x20003AE")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6A8454", Offset = "0x6A8454")]
	private sealed class <WaitForMouthAudioSource>d__137 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001774")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001775")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001776")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public OvrAvatar <>4__this;

		[Token(Token = "0x170003F0")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600176F")]
			[Address(RVA = "0x1139628", Offset = "0x1139628", VA = "0x1139628", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003F1")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001771")]
			[Address(RVA = "0x1139690", Offset = "0x1139690", VA = "0x1139690", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600176C")]
		[Address(RVA = "0x113905C", Offset = "0x113905C", VA = "0x113905C")]
		[DebuggerHidden]
		public <WaitForMouthAudioSource>d__137(int <>1__state)
		{
		}

		[Token(Token = "0x600176D")]
		[Address(RVA = "0x1139498", Offset = "0x1139498", VA = "0x1139498", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600176E")]
		[Address(RVA = "0x113949C", Offset = "0x113949C", VA = "0x113949C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001770")]
		[Address(RVA = "0x1139630", Offset = "0x1139630", VA = "0x1139630", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000B0A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6A96C8", Offset = "0x6A96C8")]
	public IntPtr sdkAvatar;

	[Token(Token = "0x4000B0B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string oculusUserID;

	[Token(Token = "0x4000B0C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OvrAvatarDriver Driver;

	[Token(Token = "0x4000B0D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6A9700", Offset = "0x6A9700")]
	public bool EnableBody;

	[Token(Token = "0x4000B0E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	public bool EnableHands;

	[Token(Token = "0x4000B0F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x32")]
	public bool EnableBase;

	[Token(Token = "0x4000B10")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x33")]
	public bool EnableExpressive;

	[Token(Token = "0x4000B11")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6A9738", Offset = "0x6A9738")]
	public bool RecordPackets;

	[Token(Token = "0x4000B12")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x35")]
	public bool UseSDKPackets;

	[Token(Token = "0x4000B13")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public PacketRecordSettings PacketSettings;

	[Token(Token = "0x4000B14")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6A9770", Offset = "0x6A9770")]
	public bool StartWithControllers;

	[Token(Token = "0x4000B15")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public AvatarLayer FirstPersonLayer;

	[Token(Token = "0x4000B16")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public AvatarLayer ThirdPersonLayer;

	[Token(Token = "0x4000B17")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public bool ShowFirstPerson;

	[Token(Token = "0x4000B18")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
	public bool ShowThirdPerson;

	[Token(Token = "0x4000B19")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	internal ovrAvatarCapabilities Capabilities;

	[Token(Token = "0x4000B1A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6A97A8", Offset = "0x6A97A8")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6A97A8", Offset = "0x6A97A8")]
	[SerializeField]
	internal ovrAvatarAssetLevelOfDetail LevelOfDetail;

	[Token(Token = "0x4000B1B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6A9818", Offset = "0x6A9818")]
	private bool CombineMeshes;

	[Token(Token = "0x4000B1C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x65")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6A9850", Offset = "0x6A9850")]
	public bool UseTransparentRenderQueue;

	[Token(Token = "0x4000B1D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6A9888", Offset = "0x6A9888")]
	public Shader Monochrome_SurfaceShader;

	[Token(Token = "0x4000B1E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Shader Monochrome_SurfaceShader_SelfOccluding;

	[Token(Token = "0x4000B1F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Shader Monochrome_SurfaceShader_PBS;

	[Token(Token = "0x4000B20")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Shader Skinshaded_SurfaceShader_SingleComponent;

	[Token(Token = "0x4000B21")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Shader Skinshaded_VertFrag_SingleComponent;

	[Token(Token = "0x4000B22")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public Shader Skinshaded_VertFrag_CombinedMesh;

	[Token(Token = "0x4000B23")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public Shader Skinshaded_Expressive_SurfaceShader_SingleComponent;

	[Token(Token = "0x4000B24")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public Shader Skinshaded_Expressive_VertFrag_SingleComponent;

	[Token(Token = "0x4000B25")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public Shader Skinshaded_Expressive_VertFrag_CombinedMesh;

	[Token(Token = "0x4000B26")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public Shader Loader_VertFrag_CombinedMesh;

	[Token(Token = "0x4000B27")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public Shader EyeLens;

	[Token(Token = "0x4000B28")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public Shader ControllerShader;

	[Token(Token = "0x4000B29")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6A98C0", Offset = "0x6A98C0")]
	public bool CanOwnMicrophone;

	[Token(Token = "0x4000B2A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC9")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6A98F8", Offset = "0x6A98F8")]
	public bool EnableLaughter;

	[Token(Token = "0x4000B2B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public GameObject MouthAnchor;

	[Token(Token = "0x4000B2C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public Transform LeftHandCustomPose;

	[Token(Token = "0x4000B2D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public Transform RightHandCustomPose;

	[Token(Token = "0x4000B2E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private HashSet<ulong> assetLoadingIds;

	[Token(Token = "0x4000B2F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private bool assetsFinishedLoading;

	[Token(Token = "0x4000B30")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private OvrAvatarMaterialManager materialManager;

	[Token(Token = "0x4000B31")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private bool waitingForCombinedMesh;

	[Token(Token = "0x4000B32")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static bool doneExpressiveGlobalInit;

	[Token(Token = "0x4000B33")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
	private Vector4 clothingAlphaOffset;

	[Token(Token = "0x4000B34")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	private ulong clothingAlphaTexture;

	[Token(Token = "0x4000B35")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private OVRLipSyncMicInput micInput;

	[Token(Token = "0x4000B36")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	private OVRLipSyncContext lipsyncContext;

	[Token(Token = "0x4000B37")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	private OVRLipSync.Frame currentFrame;

	[Token(Token = "0x4000B38")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	private float[] visemes;

	[Token(Token = "0x4000B39")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	private AudioSource audioSource;

	[Token(Token = "0x4000B3A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	private ONSPAudioSource spatializedSource;

	[Token(Token = "0x4000B3B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	private List<float[]> voiceUpdates;

	[Token(Token = "0x4000B3C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static ovrAvatarVisemes RuntimeVisemes;

	[Token(Token = "0x4000B3D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	private Transform cachedLeftHandCustomPose;

	[Token(Token = "0x4000B3E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	private Transform[] cachedCustomLeftHandJoints;

	[Token(Token = "0x4000B3F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	private ovrAvatarTransform[] cachedLeftHandTransforms;

	[Token(Token = "0x4000B40")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	private Transform cachedRightHandCustomPose;

	[Token(Token = "0x4000B41")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	private Transform[] cachedCustomRightHandJoints;

	[Token(Token = "0x4000B42")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	private ovrAvatarTransform[] cachedRightHandTransforms;

	[Token(Token = "0x4000B43")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	private bool showLeftController;

	[Token(Token = "0x4000B44")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x189")]
	private bool showRightController;

	[Token(Token = "0x4000B45")]
	private const bool USE_MOBILE_TEXTURE_FORMAT = true;

	[Token(Token = "0x4000B46")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static readonly Vector3 MOUTH_HEAD_OFFSET;

	[Token(Token = "0x4000B47")]
	private const string MOUTH_HELPER_NAME = "MouthAnchor";

	[Token(Token = "0x4000B48")]
	private const int VISEME_COUNT = 16;

	[Token(Token = "0x4000B49")]
	private const float ACTION_UNIT_ONSET_SPEED = 30f;

	[Token(Token = "0x4000B4A")]
	private const float ACTION_UNIT_FALLOFF_SPEED = 20f;

	[Token(Token = "0x4000B4B")]
	private const float VISEME_LEVEL_MULTIPLIER = 1.5f;

	[Token(Token = "0x4000B4C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	internal ulong oculusUserIDInternal;

	[Token(Token = "0x4000B4D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	internal OvrAvatarBase Base;

	[Token(Token = "0x4000B4E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	internal OvrAvatarTouchController ControllerLeft;

	[Token(Token = "0x4000B4F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	internal OvrAvatarTouchController ControllerRight;

	[Token(Token = "0x4000B50")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	internal OvrAvatarBody Body;

	[Token(Token = "0x4000B51")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	internal OvrAvatarHand HandLeft;

	[Token(Token = "0x4000B52")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	internal OvrAvatarHand HandRight;

	[Token(Token = "0x4000B53")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
	internal ovrAvatarLookAndFeelVersion LookAndFeelVersion;

	[Token(Token = "0x4000B54")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1CC")]
	internal ovrAvatarLookAndFeelVersion FallbackLookAndFeelVersion;

	[Token(Token = "0x4000B55")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
	private OvrAvatarPacket CurrentUnityPacket;

	[Token(Token = "0x4000B56")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
	public EventHandler<PacketEventArgs> PacketRecorded;

	[Token(Token = "0x4000B57")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private static string[,] HandJoints;

	[Token(Token = "0x4000B58")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private static Vector3 MOUTH_POSITION_OFFSET;

	[Token(Token = "0x4000B59")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private static string VOICE_PROPERTY;

	[Token(Token = "0x4000B5A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private static string MOUTH_POSITION_PROPERTY;

	[Token(Token = "0x4000B5B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private static string MOUTH_DIRECTION_PROPERTY;

	[Token(Token = "0x4000B5C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private static string MOUTH_SCALE_PROPERTY;

	[Token(Token = "0x4000B5D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private static float MOUTH_SCALE_GLOBAL;

	[Token(Token = "0x4000B5E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private static float MOUTH_MAX_GLOBAL;

	[Token(Token = "0x4000B5F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private static string NECK_JONT;

	[Token(Token = "0x4000B60")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
	public float VoiceAmplitude;

	[Token(Token = "0x4000B61")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E4")]
	public bool EnableMouthVertexAnimation;

	[Token(Token = "0x4000B62")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private static ovrAvatarLights ovrLights;

	[Token(Token = "0x6000DC2")]
	[Address(RVA = "0x1133C98", Offset = "0x1133C98", VA = "0x1133C98")]
	static OvrAvatar()
	{
	}

	[Token(Token = "0x6000DC3")]
	[Address(RVA = "0x1134000", Offset = "0x1134000", VA = "0x1134000")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000DC4")]
	[Address(RVA = "0x113408C", Offset = "0x113408C", VA = "0x113408C")]
	public void AssetLoadedCallback(OvrAvatarAsset asset)
	{
	}

	[Token(Token = "0x6000DC5")]
	[Address(RVA = "0x11340F8", Offset = "0x11340F8", VA = "0x11340F8")]
	public void CombinedMeshLoadedCallback(IntPtr assetPtr)
	{
	}

	[Token(Token = "0x6000DC6")]
	[Address(RVA = "0x1134220", Offset = "0x1134220", VA = "0x1134220")]
	private OvrAvatarSkinnedMeshRenderComponent AddSkinnedMeshRenderComponent(GameObject gameObject, ovrAvatarRenderPart_SkinnedMeshRender skinnedMeshRender)
	{
		return null;
	}

	[Token(Token = "0x6000DC7")]
	[Address(RVA = "0x1134304", Offset = "0x1134304", VA = "0x1134304")]
	private OvrAvatarSkinnedMeshRenderPBSComponent AddSkinnedMeshRenderPBSComponent(GameObject gameObject, ovrAvatarRenderPart_SkinnedMeshRenderPBS skinnedMeshRenderPBS)
	{
		return null;
	}

	[Token(Token = "0x6000DC8")]
	[Address(RVA = "0x11343E4", Offset = "0x11343E4", VA = "0x11343E4")]
	private OvrAvatarSkinnedMeshPBSV2RenderComponent AddSkinnedMeshRenderPBSV2Component(IntPtr renderPart, GameObject go, ovrAvatarRenderPart_SkinnedMeshRenderPBS_V2 skinnedMeshRenderPBSV2, bool isBodyPartZero, bool isControllerModel)
	{
		return null;
	}

	[Token(Token = "0x6000DC9")]
	[Address(RVA = "0x11345CC", Offset = "0x11345CC", VA = "0x11345CC")]
	public static IntPtr GetRenderPart(ovrAvatarComponent component, uint renderPartIndex)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6000DCA")]
	[Address(RVA = "0x1134694", Offset = "0x1134694", VA = "0x1134694")]
	private static string GetRenderPartName(ovrAvatarComponent component, uint renderPartIndex)
	{
		return null;
	}

	[Token(Token = "0x6000DCB")]
	[Address(RVA = "0x1134718", Offset = "0x1134718", VA = "0x1134718")]
	internal static void ConvertTransform(float[] transform, ref ovrAvatarTransform target)
	{
	}

	[Token(Token = "0x6000DCC")]
	[Address(RVA = "0x1134800", Offset = "0x1134800", VA = "0x1134800")]
	internal static void ConvertTransform(ovrAvatarTransform transform, Transform target)
	{
	}

	[Token(Token = "0x6000DCD")]
	[Address(RVA = "0x113488C", Offset = "0x113488C", VA = "0x113488C")]
	public static ovrAvatarTransform CreateOvrAvatarTransform(Vector3 position, Quaternion orientation)
	{
		return default(ovrAvatarTransform);
	}

	[Token(Token = "0x6000DCE")]
	[Address(RVA = "0x11349A8", Offset = "0x11349A8", VA = "0x11349A8")]
	private static ovrAvatarGazeTarget CreateOvrGazeTarget(uint targetId, Vector3 targetPosition, ovrAvatarGazeTargetType targetType)
	{
		return default(ovrAvatarGazeTarget);
	}

	[Token(Token = "0x6000DCF")]
	[Address(RVA = "0x1134A08", Offset = "0x1134A08", VA = "0x1134A08")]
	private void BuildRenderComponents()
	{
	}

	[Token(Token = "0x6000DD0")]
	private void AddAvatarComponent<T>(ref T root, ovrAvatarComponent nativeComponent) where T : OvrAvatarComponent
	{
	}

	[Token(Token = "0x6000DD1")]
	[Address(RVA = "0x1134E8C", Offset = "0x1134E8C", VA = "0x1134E8C")]
	private void UpdateCustomPoses()
	{
	}

	[Token(Token = "0x6000DD2")]
	[Address(RVA = "0x11351EC", Offset = "0x11351EC", VA = "0x11351EC")]
	private static bool UpdatePoseRoot(Transform poseRoot, ref Transform cachedPoseRoot, ref Transform[] cachedPoseJoints, ref ovrAvatarTransform[] transforms)
	{
		return default(bool);
	}

	[Token(Token = "0x6000DD3")]
	[Address(RVA = "0x1135350", Offset = "0x1135350", VA = "0x1135350")]
	private static bool UpdateTransforms(Transform[] joints, ovrAvatarTransform[] transforms)
	{
		return default(bool);
	}

	[Token(Token = "0x6000DD4")]
	[Address(RVA = "0x1135618", Offset = "0x1135618", VA = "0x1135618")]
	private static void OrderJoints(Transform transform, List<Transform> joints)
	{
	}

	[Token(Token = "0x6000DD5")]
	[Address(RVA = "0x1135704", Offset = "0x1135704", VA = "0x1135704")]
	private void AvatarSpecificationCallback(IntPtr avatarSpecification)
	{
	}

	[Token(Token = "0x6000DD6")]
	[Address(RVA = "0x1135D08", Offset = "0x1135D08", VA = "0x1135D08")]
	private void Start()
	{
	}

	[Token(Token = "0x6000DD7")]
	[Address(RVA = "0x1136008", Offset = "0x1136008", VA = "0x1136008")]
	private void Update()
	{
	}

	[Token(Token = "0x6000DD8")]
	[Address(RVA = "0x1136A20", Offset = "0x1136A20", VA = "0x1136A20")]
	public static ovrAvatarHandInputState CreateInputState(ovrAvatarTransform transform, OvrAvatarDriver.ControllerPose pose)
	{
		return default(ovrAvatarHandInputState);
	}

	[Token(Token = "0x6000DD9")]
	[Address(RVA = "0x1136A74", Offset = "0x1136A74", VA = "0x1136A74")]
	public void ShowControllers(bool show)
	{
	}

	[Token(Token = "0x6000DDA")]
	[Address(RVA = "0x113597C", Offset = "0x113597C", VA = "0x113597C")]
	public void ShowLeftController(bool show)
	{
	}

	[Token(Token = "0x6000DDB")]
	[Address(RVA = "0x1135A18", Offset = "0x1135A18", VA = "0x1135A18")]
	public void ShowRightController(bool show)
	{
	}

	[Token(Token = "0x6000DDC")]
	[Address(RVA = "0x1136AA4", Offset = "0x1136AA4", VA = "0x1136AA4")]
	public void UpdateVoiceVisualization(float[] voiceSamples)
	{
	}

	[Token(Token = "0x6000DDD")]
	[Address(RVA = "0x113637C", Offset = "0x113637C", VA = "0x113637C")]
	private void RecordFrame()
	{
	}

	[Token(Token = "0x6000DDE")]
	[Address(RVA = "0x1136CEC", Offset = "0x1136CEC", VA = "0x1136CEC")]
	private void RecordUnityFrame()
	{
	}

	[Token(Token = "0x6000DDF")]
	[Address(RVA = "0x1136B0C", Offset = "0x1136B0C", VA = "0x1136B0C")]
	private void RecordSDKFrame()
	{
	}

	[Token(Token = "0x6000DE0")]
	[Address(RVA = "0x11373A4", Offset = "0x11373A4", VA = "0x11373A4")]
	private void AddRenderParts(OvrAvatarComponent ovrComponent, ovrAvatarComponent component, Transform parent)
	{
	}

	[Token(Token = "0x6000DE1")]
	[Address(RVA = "0x11377A8", Offset = "0x11377A8", VA = "0x11377A8")]
	public void RefreshBodyParts()
	{
	}

	[Token(Token = "0x6000DE2")]
	[Address(RVA = "0x1137B30", Offset = "0x1137B30", VA = "0x1137B30")]
	public ovrAvatarBodyComponent? GetBodyComponent()
	{
		return null;
	}

	[Token(Token = "0x6000DE3")]
	[Address(RVA = "0x1137C70", Offset = "0x1137C70", VA = "0x1137C70")]
	public Transform GetHandTransform(HandType hand, HandJoint joint)
	{
		return null;
	}

	[Token(Token = "0x6000DE4")]
	[Address(RVA = "0x1137E28", Offset = "0x1137E28", VA = "0x1137E28")]
	public void GetPointingDirection(HandType hand, ref Vector3 forward, ref Vector3 up)
	{
	}

	[Token(Token = "0x6000DE5")]
	[Address(RVA = "0x113651C", Offset = "0x113651C", VA = "0x113651C")]
	private void UpdateVoiceBehavior()
	{
	}

	[Token(Token = "0x6000DE6")]
	[Address(RVA = "0x1137F00", Offset = "0x1137F00", VA = "0x1137F00")]
	private bool IsValidMic()
	{
		return default(bool);
	}

	[Token(Token = "0x6000DE7")]
	[Address(RVA = "0x113638C", Offset = "0x113638C", VA = "0x113638C")]
	private void InitPostLoad()
	{
	}

	[Token(Token = "0x6000DE8")]
	[Address(RVA = "0x1137FF4", Offset = "0x1137FF4", VA = "0x1137FF4")]
	private static void ExpressiveGlobalInit()
	{
	}

	[Token(Token = "0x6000DE9")]
	[Address(RVA = "0x11385A0", Offset = "0x11385A0", VA = "0x11385A0")]
	private static void InitializeLights()
	{
	}

	[Token(Token = "0x6000DEA")]
	[Address(RVA = "0x1138A60", Offset = "0x1138A60", VA = "0x1138A60")]
	private static ovrAvatarLight CreateLightDirectional(uint id, Vector3 direction, float intensity, ref ovrAvatarLight light)
	{
		return default(ovrAvatarLight);
	}

	[Token(Token = "0x6000DEB")]
	[Address(RVA = "0x1138AD8", Offset = "0x1138AD8", VA = "0x1138AD8")]
	private static ovrAvatarLight CreateLightPoint(uint id, Vector3 position, float range, float intensity, ref ovrAvatarLight light)
	{
		return default(ovrAvatarLight);
	}

	[Token(Token = "0x6000DEC")]
	[Address(RVA = "0x1138B54", Offset = "0x1138B54", VA = "0x1138B54")]
	private static ovrAvatarLight CreateLightSpot(uint id, Vector3 position, Vector3 direction, float spotAngleDeg, float range, float intensity, ref ovrAvatarLight light)
	{
		return default(ovrAvatarLight);
	}

	[Token(Token = "0x6000DED")]
	[Address(RVA = "0x11368B4", Offset = "0x11368B4", VA = "0x11368B4")]
	private void UpdateExpressive()
	{
	}

	[Token(Token = "0x6000DEE")]
	[Address(RVA = "0x11380B0", Offset = "0x11380B0", VA = "0x11380B0")]
	private void ConfigureHelpers()
	{
	}

	[Token(Token = "0x6000DEF")]
	[Address(RVA = "0x1138FEC", Offset = "0x1138FEC", VA = "0x1138FEC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6B0EC8", Offset = "0x6B0EC8")]
	private IEnumerator WaitForMouthAudioSource()
	{
		return null;
	}

	[Token(Token = "0x6000DF0")]
	[Address(RVA = "0x1139088", Offset = "0x1139088", VA = "0x1139088")]
	public void DestroyHelperObjects()
	{
	}

	[Token(Token = "0x6000DF1")]
	[Address(RVA = "0x1138E90", Offset = "0x1138E90", VA = "0x1138E90")]
	public GameObject CreateHelperObject(Transform parent, Vector3 localPositionOffset, string helperName, string helperTag = "")
	{
		return null;
	}

	[Token(Token = "0x6000DF2")]
	[Address(RVA = "0x1139150", Offset = "0x1139150", VA = "0x1139150")]
	public void UpdateVoiceData(short[] pcmData, int numChannels)
	{
	}

	[Token(Token = "0x6000DF3")]
	[Address(RVA = "0x113923C", Offset = "0x113923C", VA = "0x113923C")]
	public void UpdateVoiceData(float[] pcmData, int numChannels)
	{
	}

	[Token(Token = "0x6000DF4")]
	[Address(RVA = "0x1138C24", Offset = "0x1138C24", VA = "0x1138C24")]
	private void UpdateFacewave()
	{
	}

	[Token(Token = "0x6000DF5")]
	[Address(RVA = "0x1139328", Offset = "0x1139328", VA = "0x1139328")]
	public OvrAvatar()
	{
	}
}
[Token(Token = "0x2000167")]
public class OvrAvatarAsset
{
	[Token(Token = "0x4000B63")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ulong assetID;

	[Token(Token = "0x6000DF6")]
	[Address(RVA = "0x1139698", Offset = "0x1139698", VA = "0x1139698")]
	public OvrAvatarAsset()
	{
	}
}
[Token(Token = "0x2000168")]
public class OvrAvatarAssetMesh : OvrAvatarAsset
{
	[Token(Token = "0x4000B64")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Mesh mesh;

	[Token(Token = "0x4000B65")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private ovrAvatarSkinnedMeshPose skinnedBindPose;

	[Token(Token = "0x4000B66")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public string[] jointNames;

	[Token(Token = "0x6000DF7")]
	[Address(RVA = "0x1139748", Offset = "0x1139748", VA = "0x1139748")]
	public OvrAvatarAssetMesh(ulong _assetId, IntPtr asset, ovrAvatarAssetType meshType)
	{
	}

	[Token(Token = "0x6000DF8")]
	[Address(RVA = "0x113AA28", Offset = "0x113AA28", VA = "0x113AA28")]
	private void LoadSubmeshes(IntPtr asset, IntPtr indexBufferPtr, ulong indexCount)
	{
	}

	[Token(Token = "0x6000DF9")]
	[Address(RVA = "0x113A5CC", Offset = "0x113A5CC", VA = "0x113A5CC")]
	private void LoadBlendShapes(IntPtr asset, long vertexCount)
	{
	}

	[Token(Token = "0x6000DFA")]
	[Address(RVA = "0x113A370", Offset = "0x113A370", VA = "0x113A370")]
	private void SetSkinnedBindPose(IntPtr asset, ovrAvatarAssetType meshType)
	{
	}

	[Token(Token = "0x6000DFB")]
	[Address(RVA = "0x113A440", Offset = "0x113A440", VA = "0x113A440")]
	private void GetVertexAndIndexData(IntPtr asset, ovrAvatarAssetType meshType, out long vertexCount, out IntPtr vertexBuffer, out uint indexCount, out IntPtr indexBuffer)
	{
	}

	[Token(Token = "0x6000DFC")]
	[Address(RVA = "0x113AC8C", Offset = "0x113AC8C", VA = "0x113AC8C")]
	public SkinnedMeshRenderer CreateSkinnedMeshRendererOnObject(GameObject target)
	{
		return null;
	}
}
[Token(Token = "0x2000169")]
public class OvrAvatarAssetTexture : OvrAvatarAsset
{
	[Token(Token = "0x4000B67")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Texture2D texture;

	[Token(Token = "0x4000B68")]
	private const int ASTCHeaderSize = 16;

	[Token(Token = "0x6000DFD")]
	[Address(RVA = "0x113B20C", Offset = "0x113B20C", VA = "0x113B20C")]
	public OvrAvatarAssetTexture(ulong _assetId, IntPtr asset)
	{
	}
}
[Token(Token = "0x200016A")]
public class OvrAvatarBase : OvrAvatarComponent
{
	[Token(Token = "0x4000B69")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private ovrAvatarBaseComponent component;

	[Token(Token = "0x6000DFE")]
	[Address(RVA = "0x113B474", Offset = "0x113B474", VA = "0x113B474")]
	private void Update()
	{
	}

	[Token(Token = "0x6000DFF")]
	[Address(RVA = "0x113B87C", Offset = "0x113B87C", VA = "0x113B87C")]
	public OvrAvatarBase()
	{
	}
}
[Token(Token = "0x200016B")]
public class OvrAvatarBody : OvrAvatarComponent
{
	[Token(Token = "0x4000B6A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public ovrAvatarBodyComponent component;

	[Token(Token = "0x6000E00")]
	[Address(RVA = "0x11379D4", Offset = "0x11379D4", VA = "0x11379D4")]
	public ovrAvatarComponent? GetNativeAvatarComponent()
	{
		return null;
	}

	[Token(Token = "0x6000E01")]
	[Address(RVA = "0x113B978", Offset = "0x113B978", VA = "0x113B978")]
	private void Update()
	{
	}

	[Token(Token = "0x6000E02")]
	[Address(RVA = "0x113BA94", Offset = "0x113BA94", VA = "0x113BA94")]
	public OvrAvatarBody()
	{
	}
}
[Token(Token = "0x200016C")]
public class OvrAvatarComponent : MonoBehaviour
{
	[Token(Token = "0x4000B6B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static readonly string[] LayerKeywords;

	[Token(Token = "0x4000B6C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static readonly string[] LayerSampleModeParameters;

	[Token(Token = "0x4000B6D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static readonly string[] LayerBlendModeParameters;

	[Token(Token = "0x4000B6E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static readonly string[] LayerMaskTypeParameters;

	[Token(Token = "0x4000B6F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public static readonly string[] LayerColorParameters;

	[Token(Token = "0x4000B70")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public static readonly string[] LayerSurfaceParameters;

	[Token(Token = "0x4000B71")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public static readonly string[] LayerSampleParametersParameters;

	[Token(Token = "0x4000B72")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public static readonly string[] LayerMaskParametersParameters;

	[Token(Token = "0x4000B73")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public static readonly string[] LayerMaskAxisParameters;

	[Token(Token = "0x4000B74")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Dictionary<Material, ovrAvatarMaterialState> materialStates;

	[Token(Token = "0x4000B75")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<OvrAvatarRenderComponent> RenderParts;

	[Token(Token = "0x4000B76")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	protected OvrAvatar owner;

	[Token(Token = "0x4000B77")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	protected ovrAvatarComponent nativeAvatarComponent;

	[Token(Token = "0x6000E03")]
	[Address(RVA = "0x113BAF8", Offset = "0x113BAF8", VA = "0x113BAF8")]
	public void SetOvrAvatarOwner(OvrAvatar ovrAvatarOwner)
	{
	}

	[Token(Token = "0x6000E04")]
	[Address(RVA = "0x113B590", Offset = "0x113B590", VA = "0x113B590")]
	public void UpdateAvatar(IntPtr nativeComponent)
	{
	}

	[Token(Token = "0x6000E05")]
	[Address(RVA = "0x113BB00", Offset = "0x113BB00", VA = "0x113BB00")]
	protected void UpdateActive(OvrAvatar avatar, ovrAvatarVisibilityFlags mask)
	{
	}

	[Token(Token = "0x6000E06")]
	[Address(RVA = "0x113BB60", Offset = "0x113BB60", VA = "0x113BB60")]
	public void UpdateAvatarMaterial(Material mat, ovrAvatarMaterialState matState)
	{
	}

	[Token(Token = "0x6000E07")]
	[Address(RVA = "0x113C344", Offset = "0x113C344", VA = "0x113C344")]
	public static Texture2D GetLoadedTexture(ulong assetId)
	{
		return null;
	}

	[Token(Token = "0x6000E08")]
	[Address(RVA = "0x113B8E0", Offset = "0x113B8E0", VA = "0x113B8E0")]
	public OvrAvatarComponent()
	{
	}
}
[Token(Token = "0x200016D")]
public abstract class OvrAvatarDriver : MonoBehaviour
{
	[Token(Token = "0x20003AF")]
	public enum PacketMode
	{
		[Token(Token = "0x4001778")]
		SDK,
		[Token(Token = "0x4001779")]
		Unity
	}

	[Token(Token = "0x20003B0")]
	public struct ControllerPose
	{
		[Token(Token = "0x400177A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ovrAvatarButton buttons;

		[Token(Token = "0x400177B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public ovrAvatarTouch touches;

		[Token(Token = "0x400177C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Vector2 joystickPosition;

		[Token(Token = "0x400177D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float indexTrigger;

		[Token(Token = "0x400177E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float handTrigger;

		[Token(Token = "0x400177F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool isActive;

		[Token(Token = "0x6001772")]
		[Address(RVA = "0x113D4EC", Offset = "0x113D4EC", VA = "0x113D4EC")]
		public static ControllerPose Interpolate(ControllerPose a, ControllerPose b, float t)
		{
			return default(ControllerPose);
		}
	}

	[Token(Token = "0x20003B1")]
	public struct PoseFrame
	{
		[Token(Token = "0x4001780")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Vector3 headPosition;

		[Token(Token = "0x4001781")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public Quaternion headRotation;

		[Token(Token = "0x4001782")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Vector3 handLeftPosition;

		[Token(Token = "0x4001783")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Quaternion handLeftRotation;

		[Token(Token = "0x4001784")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Vector3 handRightPosition;

		[Token(Token = "0x4001785")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public Quaternion handRightRotation;

		[Token(Token = "0x4001786")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public float voiceAmplitude;

		[Token(Token = "0x4001787")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public ControllerPose controllerLeftPose;

		[Token(Token = "0x4001788")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		public ControllerPose controllerRightPose;

		[Token(Token = "0x6001773")]
		[Address(RVA = "0x1136F70", Offset = "0x1136F70", VA = "0x1136F70")]
		public static PoseFrame Interpolate(PoseFrame a, PoseFrame b, float t)
		{
			return default(PoseFrame);
		}
	}

	[Token(Token = "0x4000B78")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public PacketMode Mode;

	[Token(Token = "0x4000B79")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	protected PoseFrame CurrentPose;

	[Token(Token = "0x4000B7A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private ovrAvatarControllerType ControllerType;

	[Token(Token = "0x6000E0A")]
	[Address(RVA = "0x113D438", Offset = "0x113D438", VA = "0x113D438")]
	public PoseFrame GetCurrentPose()
	{
		return default(PoseFrame);
	}

	[Token(Token = "0x6000E0B")]
	public abstract void UpdateTransforms(IntPtr sdkAvatar);

	[Token(Token = "0x6000E0C")]
	[Address(RVA = "0x113D448", Offset = "0x113D448", VA = "0x113D448")]
	private void Start()
	{
	}

	[Token(Token = "0x6000E0D")]
	[Address(RVA = "0x1135AB4", Offset = "0x1135AB4", VA = "0x1135AB4")]
	public void UpdateTransformsFromPose(IntPtr sdkAvatar)
	{
	}

	[Token(Token = "0x6000E0E")]
	[Address(RVA = "0x113D4D4", Offset = "0x113D4D4", VA = "0x113D4D4")]
	public static bool GetIsTrackedRemote()
	{
		return default(bool);
	}

	[Token(Token = "0x6000E0F")]
	[Address(RVA = "0x113D4DC", Offset = "0x113D4DC", VA = "0x113D4DC")]
	protected OvrAvatarDriver()
	{
	}
}
[Token(Token = "0x200016E")]
public class OvrAvatarHand : OvrAvatarComponent
{
	[Token(Token = "0x4000B7B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public bool isLeftHand;

	[Token(Token = "0x4000B7C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private ovrAvatarHandComponent component;

	[Token(Token = "0x6000E10")]
	[Address(RVA = "0x113D648", Offset = "0x113D648", VA = "0x113D648")]
	private void Update()
	{
	}

	[Token(Token = "0x6000E11")]
	[Address(RVA = "0x113D7A4", Offset = "0x113D7A4", VA = "0x113D7A4")]
	public OvrAvatarHand()
	{
	}
}
[Token(Token = "0x200016F")]
public class OvrAvatarLocalDriver : OvrAvatarDriver
{
	[Token(Token = "0x4000B7D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private Vector3 centerEyePosition;

	[Token(Token = "0x4000B7E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private Quaternion centerEyeRotation;

	[Token(Token = "0x4000B7F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	private float voiceAmplitude;

	[Token(Token = "0x6000E12")]
	[Address(RVA = "0x113D810", Offset = "0x113D810", VA = "0x113D810")]
	private ControllerPose GetMalibuControllerPose(OVRInput.Controller controller)
	{
		return default(ControllerPose);
	}

	[Token(Token = "0x6000E13")]
	[Address(RVA = "0x113D97C", Offset = "0x113D97C", VA = "0x113D97C")]
	private ControllerPose GetControllerPose(OVRInput.Controller controller)
	{
		return default(ControllerPose);
	}

	[Token(Token = "0x6000E14")]
	[Address(RVA = "0x113DD20", Offset = "0x113DD20", VA = "0x113DD20")]
	private void CalculateCurrentPose()
	{
	}

	[Token(Token = "0x6000E15")]
	[Address(RVA = "0x113DF3C", Offset = "0x113DF3C", VA = "0x113DF3C", Slot = "4")]
	public override void UpdateTransforms(IntPtr sdkAvatar)
	{
	}

	[Token(Token = "0x6000E16")]
	[Address(RVA = "0x113DF68", Offset = "0x113DF68", VA = "0x113DF68")]
	public OvrAvatarLocalDriver()
	{
	}
}
[Token(Token = "0x2000170")]
public class OvrAvatarMaterialManager : MonoBehaviour
{
	[Token(Token = "0x20003B2")]
	public enum TextureType
	{
		[Token(Token = "0x400178A")]
		DiffuseTextures,
		[Token(Token = "0x400178B")]
		NormalMaps,
		[Token(Token = "0x400178C")]
		RoughnessMaps,
		[Token(Token = "0x400178D")]
		Count
	}

	[Token(Token = "0x20003B3")]
	public struct AvatarComponentMaterialProperties
	{
		[Token(Token = "0x400178E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ovrAvatarBodyPartType TypeIndex;

		[Token(Token = "0x400178F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public Color Color;

		[Token(Token = "0x4001790")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Texture2D[] Textures;

		[Token(Token = "0x4001791")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float DiffuseIntensity;

		[Token(Token = "0x4001792")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float RimIntensity;

		[Token(Token = "0x4001793")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float ReflectionIntensity;
	}

	[Token(Token = "0x20003B4")]
	public struct AvatarTextureArrayProperties
	{
		[Token(Token = "0x4001794")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Texture2D[] Textures;

		[Token(Token = "0x4001795")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Texture2DArray TextureArray;
	}

	[Token(Token = "0x20003B5")]
	public struct AvatarMaterialPropertyBlock
	{
		[Token(Token = "0x4001796")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Vector4[] Colors;

		[Token(Token = "0x4001797")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float[] DiffuseIntensities;

		[Token(Token = "0x4001798")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float[] RimIntensities;

		[Token(Token = "0x4001799")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float[] ReflectionIntensities;
	}

	[Serializable]
	[Token(Token = "0x20003B6")]
	public class AvatarMaterialConfig
	{
		[Token(Token = "0x400179A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public AvatarComponentMaterialProperties[] ComponentMaterialProperties;

		[Token(Token = "0x400179B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AvatarMaterialPropertyBlock MaterialPropertyBlock;

		[Token(Token = "0x6001774")]
		[Address(RVA = "0xFC8C78", Offset = "0xFC8C78", VA = "0xFC8C78")]
		public AvatarMaterialConfig()
		{
		}
	}

	[Token(Token = "0x20003B7")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6A8464", Offset = "0x6A8464")]
	private sealed class <RunLoadingAnimation>d__49 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400179C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400179D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400179E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public OvrAvatarMaterialManager <>4__this;

		[Token(Token = "0x400179F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Action callBack;

		[Token(Token = "0x40017A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int <srcBlend>5__2;

		[Token(Token = "0x40017A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private int <dstBlend>5__3;

		[Token(Token = "0x40017A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private string <lightModeTag>5__4;

		[Token(Token = "0x40017A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private string <renderTypeTag>5__5;

		[Token(Token = "0x40017A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private string <renderQueueTag>5__6;

		[Token(Token = "0x40017A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private string <ignoreProjectorTag>5__7;

		[Token(Token = "0x40017A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private int <renderQueue>5__8;

		[Token(Token = "0x40017A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private bool <transparentQueue>5__9;

		[Token(Token = "0x170003F2")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001778")]
			[Address(RVA = "0xFC8C08", Offset = "0xFC8C08", VA = "0xFC8C08", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003F3")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600177A")]
			[Address(RVA = "0xFC8C70", Offset = "0xFC8C70", VA = "0xFC8C70", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001775")]
		[Address(RVA = "0xFC834C", Offset = "0xFC834C", VA = "0xFC834C")]
		[DebuggerHidden]
		public <RunLoadingAnimation>d__49(int <>1__state)
		{
		}

		[Token(Token = "0x6001776")]
		[Address(RVA = "0xFC8378", Offset = "0xFC8378", VA = "0xFC8378", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001777")]
		[Address(RVA = "0xFC837C", Offset = "0xFC837C", VA = "0xFC837C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001779")]
		[Address(RVA = "0xFC8C10", Offset = "0xFC8C10", VA = "0xFC8C10", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000B80")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Renderer TargetRenderer;

	[Token(Token = "0x4000B81")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private AvatarTextureArrayProperties[] TextureArrays;

	[Token(Token = "0x4000B82")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private readonly string[] TextureTypeToShaderProperties;

	[Token(Token = "0x4000B83")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AvatarMaterialConfig LocalAvatarConfig;

	[Token(Token = "0x4000B84")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public List<ReflectionProbeBlendInfo> ReflectionProbes;

	[Token(Token = "0x4000B85")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Shader CombinedShader;

	[Token(Token = "0x4000B86")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static string AVATAR_SHADER_LOADER;

	[Token(Token = "0x4000B87")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static string AVATAR_SHADER_MAINTEX;

	[Token(Token = "0x4000B88")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static string AVATAR_SHADER_NORMALMAP;

	[Token(Token = "0x4000B89")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static string AVATAR_SHADER_ROUGHNESSMAP;

	[Token(Token = "0x4000B8A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public static string AVATAR_SHADER_COLOR;

	[Token(Token = "0x4000B8B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public static string AVATAR_SHADER_DIFFUSEINTENSITY;

	[Token(Token = "0x4000B8C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public static string AVATAR_SHADER_RIMINTENSITY;

	[Token(Token = "0x4000B8D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public static string AVATAR_SHADER_REFLECTIONINTENSITY;

	[Token(Token = "0x4000B8E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public static string AVATAR_SHADER_CUBEMAP;

	[Token(Token = "0x4000B8F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public static string AVATAR_SHADER_ALPHA;

	[Token(Token = "0x4000B90")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public static string AVATAR_SHADER_LOADING_DIMMER;

	[Token(Token = "0x4000B91")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public static string AVATAR_SHADER_IRIS_COLOR;

	[Token(Token = "0x4000B92")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public static string AVATAR_SHADER_LIP_COLOR;

	[Token(Token = "0x4000B93")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public static string AVATAR_SHADER_BROW_COLOR;

	[Token(Token = "0x4000B94")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public static string AVATAR_SHADER_LASH_COLOR;

	[Token(Token = "0x4000B95")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public static string AVATAR_SHADER_SCLERA_COLOR;

	[Token(Token = "0x4000B96")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public static string AVATAR_SHADER_GUM_COLOR;

	[Token(Token = "0x4000B97")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public static string AVATAR_SHADER_TEETH_COLOR;

	[Token(Token = "0x4000B98")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public static string AVATAR_SHADER_LIP_SMOOTHNESS;

	[Token(Token = "0x4000B99")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public static float[] DiffuseIntensities;

	[Token(Token = "0x4000B9A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public static float[] RimIntensities;

	[Token(Token = "0x4000B9B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public static float[] ReflectionIntensities;

	[Token(Token = "0x4000B9C")]
	private const float LOADING_ANIMATION_AMPLITUDE = 0.5f;

	[Token(Token = "0x4000B9D")]
	private const float LOADING_ANIMATION_PERIOD = 0.35f;

	[Token(Token = "0x4000B9E")]
	private const float LOADING_ANIMATION_CURVE_SCALE = 0.25f;

	[Token(Token = "0x4000B9F")]
	private const float LOADING_ANIMATION_DIMMER_MIN = 0.3f;

	[Token(Token = "0x6000E17")]
	[Address(RVA = "0x113E018", Offset = "0x113E018", VA = "0x113E018")]
	public void CreateTextureArrays()
	{
	}

	[Token(Token = "0x6000E18")]
	[Address(RVA = "0x113E178", Offset = "0x113E178", VA = "0x113E178")]
	public void SetRenderer(Renderer renderer)
	{
	}

	[Token(Token = "0x6000E19")]
	[Address(RVA = "0x113E1A0", Offset = "0x113E1A0", VA = "0x113E1A0")]
	public void OnCombinedMeshReady()
	{
	}

	[Token(Token = "0x6000E1A")]
	[Address(RVA = "0x113E8B8", Offset = "0x113E8B8", VA = "0x113E8B8")]
	public void AddTextureIDToTextureManager(ulong assetID, bool isSingleComponent)
	{
	}

	[Token(Token = "0x6000E1B")]
	[Address(RVA = "0x113E924", Offset = "0x113E924", VA = "0x113E924")]
	private void DeleteTextureSet()
	{
	}

	[Token(Token = "0x6000E1C")]
	[Address(RVA = "0x113E234", Offset = "0x113E234", VA = "0x113E234")]
	public void InitTextureArrays()
	{
	}

	[Token(Token = "0x6000E1D")]
	[Address(RVA = "0x113E978", Offset = "0x113E978", VA = "0x113E978")]
	private void ProcessTexturesWithMips(Texture2D[] textures, int texArrayResolution, Texture2DArray texArray)
	{
	}

	[Token(Token = "0x6000E1E")]
	[Address(RVA = "0x113E634", Offset = "0x113E634", VA = "0x113E634")]
	private void SetMaterialPropertyBlock()
	{
	}

	[Token(Token = "0x6000E1F")]
	[Address(RVA = "0x113EA68", Offset = "0x113EA68", VA = "0x113EA68")]
	private void ApplyMaterialPropertyBlock()
	{
	}

	[Token(Token = "0x6000E20")]
	[Address(RVA = "0x113ECE0", Offset = "0x113ECE0", VA = "0x113ECE0")]
	public static ovrAvatarBodyPartType GetComponentType(string objectName)
	{
		return default(ovrAvatarBodyPartType);
	}

	[Token(Token = "0x6000E21")]
	[Address(RVA = "0x113EDDC", Offset = "0x113EDDC", VA = "0x113EDDC")]
	private ulong GetTextureIDForType(ovrAvatarPBSMaterialState materialState, TextureType type)
	{
		return default(ulong);
	}

	[Token(Token = "0x6000E22")]
	[Address(RVA = "0x113EE14", Offset = "0x113EE14", VA = "0x113EE14")]
	public void ValidateTextures(ovrAvatarPBSMaterialState[] materialStates)
	{
	}

	[Token(Token = "0x6000E23")]
	[Address(RVA = "0x113E83C", Offset = "0x113E83C", VA = "0x113E83C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6B0F2C", Offset = "0x6B0F2C")]
	private IEnumerator RunLoadingAnimation(Action callBack)
	{
		return null;
	}

	[Token(Token = "0x6000E24")]
	[Address(RVA = "0x113FBC8", Offset = "0x113FBC8", VA = "0x113FBC8")]
	public OvrAvatarMaterialManager()
	{
	}
}
[Token(Token = "0x2000171")]
public class OvrAvatarPacket
{
	[Token(Token = "0x4000BA0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public IntPtr ovrNativePacket;

	[Token(Token = "0x4000BA1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private List<float> frameTimes;

	[Token(Token = "0x4000BA2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private List<OvrAvatarDriver.PoseFrame> frames;

	[Token(Token = "0x4000BA3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private List<byte[]> encodedAudioPackets;

	[Token(Token = "0x17000293")]
	public float Duration
	{
		[Token(Token = "0x6000E26")]
		[Address(RVA = "0xFC8C80", Offset = "0xFC8C80", VA = "0xFC8C80")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000294")]
	public OvrAvatarDriver.PoseFrame FinalFrame
	{
		[Token(Token = "0x6000E27")]
		[Address(RVA = "0xFC8CEC", Offset = "0xFC8CEC", VA = "0xFC8CEC")]
		get
		{
			return default(OvrAvatarDriver.PoseFrame);
		}
	}

	[Token(Token = "0x6000E28")]
	[Address(RVA = "0xFC8D70", Offset = "0xFC8D70", VA = "0xFC8D70")]
	public OvrAvatarPacket()
	{
	}

	[Token(Token = "0x6000E29")]
	[Address(RVA = "0xFC8E34", Offset = "0xFC8E34", VA = "0xFC8E34")]
	public OvrAvatarPacket(OvrAvatarDriver.PoseFrame initialPose)
	{
	}

	[Token(Token = "0x6000E2A")]
	[Address(RVA = "0xFC8F74", Offset = "0xFC8F74", VA = "0xFC8F74")]
	private OvrAvatarPacket(List<float> frameTimes, List<OvrAvatarDriver.PoseFrame> frames, List<byte[]> audioPackets)
	{
	}

	[Token(Token = "0x6000E2B")]
	[Address(RVA = "0xFC9050", Offset = "0xFC9050", VA = "0xFC9050")]
	public void AddFrame(OvrAvatarDriver.PoseFrame frame, float deltaSeconds)
	{
	}

	[Token(Token = "0x6000E2C")]
	[Address(RVA = "0xFC9120", Offset = "0xFC9120", VA = "0xFC9120")]
	public OvrAvatarDriver.PoseFrame GetPoseFrame(float seconds)
	{
		return default(OvrAvatarDriver.PoseFrame);
	}

	[Token(Token = "0x6000E2D")]
	[Address(RVA = "0xFC932C", Offset = "0xFC932C", VA = "0xFC932C")]
	public static OvrAvatarPacket Read(Stream stream)
	{
		return null;
	}

	[Token(Token = "0x6000E2E")]
	[Address(RVA = "0xFC9584", Offset = "0xFC9584", VA = "0xFC9584")]
	public void Write(Stream stream)
	{
	}
}
[Token(Token = "0x2000172")]
internal static class BinaryWriterExtensions
{
	[Token(Token = "0x6000E2F")]
	[Address(RVA = "0x10A5304", Offset = "0x10A5304", VA = "0x10A5304")]
	public static void Write(this BinaryWriter writer, OvrAvatarDriver.PoseFrame frame)
	{
	}

	[Token(Token = "0x6000E30")]
	[Address(RVA = "0x10A5418", Offset = "0x10A5418", VA = "0x10A5418")]
	public static void Write(this BinaryWriter writer, Vector3 vec3)
	{
	}

	[Token(Token = "0x6000E31")]
	[Address(RVA = "0x10A55C4", Offset = "0x10A55C4", VA = "0x10A55C4")]
	public static void Write(this BinaryWriter writer, Vector2 vec2)
	{
	}

	[Token(Token = "0x6000E32")]
	[Address(RVA = "0x10A5488", Offset = "0x10A5488", VA = "0x10A5488")]
	public static void Write(this BinaryWriter writer, Quaternion quat)
	{
	}

	[Token(Token = "0x6000E33")]
	[Address(RVA = "0x10A551C", Offset = "0x10A551C", VA = "0x10A551C")]
	public static void Write(this BinaryWriter writer, OvrAvatarDriver.ControllerPose pose)
	{
	}
}
[Token(Token = "0x2000173")]
internal static class BinaryReaderExtensions
{
	[Token(Token = "0x6000E34")]
	[Address(RVA = "0x10A4F04", Offset = "0x10A4F04", VA = "0x10A4F04")]
	public static OvrAvatarDriver.PoseFrame ReadPoseFrame(this BinaryReader reader)
	{
		return default(OvrAvatarDriver.PoseFrame);
	}

	[Token(Token = "0x6000E35")]
	[Address(RVA = "0x10A52A8", Offset = "0x10A52A8", VA = "0x10A52A8")]
	public static Vector2 ReadVector2(this BinaryReader reader)
	{
		return default(Vector2);
	}

	[Token(Token = "0x6000E36")]
	[Address(RVA = "0x10A50A4", Offset = "0x10A50A4", VA = "0x10A50A4")]
	public static Vector3 ReadVector3(this BinaryReader reader)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000E37")]
	[Address(RVA = "0x10A511C", Offset = "0x10A511C", VA = "0x10A511C")]
	public static Quaternion ReadQuaternion(this BinaryReader reader)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x6000E38")]
	[Address(RVA = "0x10A51B8", Offset = "0x10A51B8", VA = "0x10A51B8")]
	public static OvrAvatarDriver.ControllerPose ReadControllerPose(this BinaryReader reader)
	{
		return default(OvrAvatarDriver.ControllerPose);
	}
}
[Token(Token = "0x2000174")]
public class OvrAvatarRemoteDriver : OvrAvatarDriver
{
	[Token(Token = "0x4000BA4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private Queue<OvrAvatarPacket> packetQueue;

	[Token(Token = "0x4000BA5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private IntPtr CurrentSDKPacket;

	[Token(Token = "0x4000BA6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private float CurrentPacketTime;

	[Token(Token = "0x4000BA7")]
	private const int MinPacketQueue = 1;

	[Token(Token = "0x4000BA8")]
	private const int MaxPacketQueue = 4;

	[Token(Token = "0x4000BA9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	private int CurrentSequence;

	[Token(Token = "0x4000BAA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private bool isStreaming;

	[Token(Token = "0x4000BAB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private OvrAvatarPacket currentPacket;

	[Token(Token = "0x6000E39")]
	[Address(RVA = "0xFC9774", Offset = "0xFC9774", VA = "0xFC9774")]
	public void QueuePacket(int sequence, OvrAvatarPacket packet)
	{
	}

	[Token(Token = "0x6000E3A")]
	[Address(RVA = "0xFC9800", Offset = "0xFC9800", VA = "0xFC9800", Slot = "4")]
	public override void UpdateTransforms(IntPtr sdkAvatar)
	{
	}

	[Token(Token = "0x6000E3B")]
	[Address(RVA = "0xFC981C", Offset = "0xFC981C", VA = "0xFC981C")]
	private void UpdateFromSDKPacket(IntPtr sdkAvatar)
	{
	}

	[Token(Token = "0x6000E3C")]
	[Address(RVA = "0xFC99C8", Offset = "0xFC99C8", VA = "0xFC99C8")]
	private void UpdateFromUnityPacket(IntPtr sdkAvatar)
	{
	}

	[Token(Token = "0x6000E3D")]
	[Address(RVA = "0xFC9B64", Offset = "0xFC9B64", VA = "0xFC9B64")]
	public OvrAvatarRemoteDriver()
	{
	}
}
[Token(Token = "0x2000175")]
public class OvrAvatarRenderComponent : MonoBehaviour
{
	[Token(Token = "0x4000BAC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool firstSkinnedUpdate;

	[Token(Token = "0x4000BAD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public SkinnedMeshRenderer mesh;

	[Token(Token = "0x4000BAE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform[] bones;

	[Token(Token = "0x4000BAF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool isBodyComponent;

	[Token(Token = "0x6000E3E")]
	[Address(RVA = "0xFC9BDC", Offset = "0xFC9BDC", VA = "0xFC9BDC")]
	protected void UpdateActive(OvrAvatar avatar, ovrAvatarVisibilityFlags mask)
	{
	}

	[Token(Token = "0x6000E3F")]
	[Address(RVA = "0xFC9CC0", Offset = "0xFC9CC0", VA = "0xFC9CC0")]
	protected SkinnedMeshRenderer CreateSkinnedMesh(ulong assetID, ovrAvatarVisibilityFlags visibilityMask, int thirdPersonLayer, int firstPersonLayer)
	{
		return null;
	}

	[Token(Token = "0x6000E40")]
	[Address(RVA = "0xFC9F38", Offset = "0xFC9F38", VA = "0xFC9F38")]
	protected void UpdateSkinnedMesh(OvrAvatar avatar, Transform[] bones, ovrAvatarTransform localTransform, ovrAvatarVisibilityFlags visibilityMask, IntPtr renderPart)
	{
	}

	[Token(Token = "0x6000E41")]
	[Address(RVA = "0xFCA2CC", Offset = "0xFCA2CC", VA = "0xFCA2CC")]
	protected Material CreateAvatarMaterial(string name, Shader shader)
	{
		return null;
	}

	[Token(Token = "0x6000E42")]
	[Address(RVA = "0xFCA3C4", Offset = "0xFCA3C4", VA = "0xFCA3C4")]
	public OvrAvatarRenderComponent()
	{
	}
}
[Token(Token = "0x2000176")]
[Flags]
public enum ovrAvatarCapabilities
{
	[Token(Token = "0x4000BB1")]
	Body = 1,
	[Token(Token = "0x4000BB2")]
	Hands = 2,
	[Token(Token = "0x4000BB3")]
	Base = 4,
	[Token(Token = "0x4000BB4")]
	BodyTilt = 0x10,
	[Token(Token = "0x4000BB5")]
	Expressive = 0x20,
	[Token(Token = "0x4000BB6")]
	All = -1
}
[Token(Token = "0x2000177")]
public enum ovrAvatarMessageType
{
	[Token(Token = "0x4000BB8")]
	AvatarSpecification,
	[Token(Token = "0x4000BB9")]
	AssetLoaded,
	[Token(Token = "0x4000BBA")]
	Count
}
[Token(Token = "0x2000178")]
public struct ovrAvatarMessage_AvatarSpecification
{
	[Token(Token = "0x4000BBB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public IntPtr avatarSpec;

	[Token(Token = "0x4000BBC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public ulong oculusUserID;
}
[Token(Token = "0x2000179")]
public struct ovrAvatarMessage_AssetLoaded
{
	[Token(Token = "0x4000BBD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ulong assetID;

	[Token(Token = "0x4000BBE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public IntPtr asset;
}
[Token(Token = "0x200017A")]
public enum ovrAvatarAssetType
{
	[Token(Token = "0x4000BC0")]
	Mesh,
	[Token(Token = "0x4000BC1")]
	Texture,
	[Token(Token = "0x4000BC2")]
	Pose,
	[Token(Token = "0x4000BC3")]
	Material,
	[Token(Token = "0x4000BC4")]
	CombinedMesh,
	[Token(Token = "0x4000BC5")]
	PBSMaterial,
	[Token(Token = "0x4000BC6")]
	FailedLoad,
	[Token(Token = "0x4000BC7")]
	Count
}
[Token(Token = "0x200017B")]
public struct ovrAvatarMeshVertex
{
	[Token(Token = "0x4000BC8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float x;

	[Token(Token = "0x4000BC9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public float y;

	[Token(Token = "0x4000BCA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float z;

	[Token(Token = "0x4000BCB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public float nx;

	[Token(Token = "0x4000BCC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float ny;

	[Token(Token = "0x4000BCD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float nz;

	[Token(Token = "0x4000BCE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float tx;

	[Token(Token = "0x4000BCF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float ty;

	[Token(Token = "0x4000BD0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float tz;

	[Token(Token = "0x4000BD1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float tw;

	[Token(Token = "0x4000BD2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float u;

	[Token(Token = "0x4000BD3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float v;

	[Token(Token = "0x4000BD4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public byte[] blendIndices;

	[Token(Token = "0x4000BD5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float[] blendWeights;
}
[Token(Token = "0x200017C")]
public struct ovrAvatarMeshVertexV2
{
	[Token(Token = "0x4000BD6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float x;

	[Token(Token = "0x4000BD7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public float y;

	[Token(Token = "0x4000BD8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float z;

	[Token(Token = "0x4000BD9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public float nx;

	[Token(Token = "0x4000BDA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float ny;

	[Token(Token = "0x4000BDB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float nz;

	[Token(Token = "0x4000BDC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float tx;

	[Token(Token = "0x4000BDD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float ty;

	[Token(Token = "0x4000BDE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float tz;

	[Token(Token = "0x4000BDF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float tw;

	[Token(Token = "0x4000BE0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float u;

	[Token(Token = "0x4000BE1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float v;

	[Token(Token = "0x4000BE2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float r;

	[Token(Token = "0x4000BE3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float g;

	[Token(Token = "0x4000BE4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float b;

	[Token(Token = "0x4000BE5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float a;

	[Token(Token = "0x4000BE6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public byte[] blendIndices;

	[Token(Token = "0x4000BE7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float[] blendWeights;
}
[Token(Token = "0x200017D")]
public struct ovrAvatarBlendVertex
{
	[Token(Token = "0x4000BE8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float x;

	[Token(Token = "0x4000BE9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public float y;

	[Token(Token = "0x4000BEA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float z;

	[Token(Token = "0x4000BEB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public float nx;

	[Token(Token = "0x4000BEC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float ny;

	[Token(Token = "0x4000BED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float nz;

	[Token(Token = "0x4000BEE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float tx;

	[Token(Token = "0x4000BEF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float ty;

	[Token(Token = "0x4000BF0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float tz;
}
[Token(Token = "0x200017E")]
public struct ovrAvatarMeshAssetData
{
	[Token(Token = "0x4000BF1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint vertexCount;

	[Token(Token = "0x4000BF2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public IntPtr vertexBuffer;

	[Token(Token = "0x4000BF3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public uint indexCount;

	[Token(Token = "0x4000BF4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public IntPtr indexBuffer;

	[Token(Token = "0x4000BF5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ovrAvatarSkinnedMeshPose skinnedBindPose;
}
[Token(Token = "0x200017F")]
public struct ovrAvatarMeshAssetDataV2
{
	[Token(Token = "0x4000BF6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint vertexCount;

	[Token(Token = "0x4000BF7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public IntPtr vertexBuffer;

	[Token(Token = "0x4000BF8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public uint indexCount;

	[Token(Token = "0x4000BF9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public IntPtr indexBuffer;

	[Token(Token = "0x4000BFA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ovrAvatarSkinnedMeshPose skinnedBindPose;
}
[Token(Token = "0x2000180")]
public enum ovrAvatarTextureFormat
{
	[Token(Token = "0x4000BFC")]
	RGB24,
	[Token(Token = "0x4000BFD")]
	DXT1,
	[Token(Token = "0x4000BFE")]
	DXT5,
	[Token(Token = "0x4000BFF")]
	ASTC_RGB_6x6,
	[Token(Token = "0x4000C00")]
	ASTC_RGB_6x6_MIPMAPS,
	[Token(Token = "0x4000C01")]
	Count
}
[Token(Token = "0x2000181")]
public struct ovrAvatarTextureAssetData
{
	[Token(Token = "0x4000C02")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTextureFormat format;

	[Token(Token = "0x4000C03")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public uint sizeX;

	[Token(Token = "0x4000C04")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public uint sizeY;

	[Token(Token = "0x4000C05")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public uint mipCount;

	[Token(Token = "0x4000C06")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ulong textureDataSize;

	[Token(Token = "0x4000C07")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public IntPtr textureData;
}
[Token(Token = "0x2000182")]
public enum ovrAvatarRenderPartType
{
	[Token(Token = "0x4000C09")]
	SkinnedMeshRender,
	[Token(Token = "0x4000C0A")]
	SkinnedMeshRenderPBS,
	[Token(Token = "0x4000C0B")]
	ProjectorRender,
	[Token(Token = "0x4000C0C")]
	SkinnedMeshRenderPBS_V2,
	[Token(Token = "0x4000C0D")]
	Count
}
[Token(Token = "0x2000183")]
public enum ovrAvatarLogLevel
{
	[Token(Token = "0x4000C0F")]
	Unknown,
	[Token(Token = "0x4000C10")]
	Default,
	[Token(Token = "0x4000C11")]
	Verbose,
	[Token(Token = "0x4000C12")]
	Debug,
	[Token(Token = "0x4000C13")]
	Info,
	[Token(Token = "0x4000C14")]
	Warn,
	[Token(Token = "0x4000C15")]
	Error,
	[Token(Token = "0x4000C16")]
	Fatal,
	[Token(Token = "0x4000C17")]
	Silent
}
[Token(Token = "0x2000184")]
public struct ovrAvatarTransform
{
	[Token(Token = "0x4000C18")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector3 position;

	[Token(Token = "0x4000C19")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Quaternion orientation;

	[Token(Token = "0x4000C1A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Vector3 scale;
}
[Token(Token = "0x2000185")]
[Flags]
public enum ovrAvatarButton
{
	[Token(Token = "0x4000C1C")]
	One = 1,
	[Token(Token = "0x4000C1D")]
	Two = 2,
	[Token(Token = "0x4000C1E")]
	Three = 4,
	[Token(Token = "0x4000C1F")]
	Joystick = 8
}
[Token(Token = "0x2000186")]
[Flags]
public enum ovrAvatarTouch
{
	[Token(Token = "0x4000C21")]
	One = 1,
	[Token(Token = "0x4000C22")]
	Two = 2,
	[Token(Token = "0x4000C23")]
	Joystick = 4,
	[Token(Token = "0x4000C24")]
	ThumbRest = 8,
	[Token(Token = "0x4000C25")]
	Index = 0x10,
	[Token(Token = "0x4000C26")]
	Pointing = 0x40,
	[Token(Token = "0x4000C27")]
	ThumbUp = 0x80
}
[Token(Token = "0x2000187")]
public struct ovrAvatarHandInputState
{
	[Token(Token = "0x4000C28")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform transform;

	[Token(Token = "0x4000C29")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ovrAvatarButton buttonMask;

	[Token(Token = "0x4000C2A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public ovrAvatarTouch touchMask;

	[Token(Token = "0x4000C2B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float joystickX;

	[Token(Token = "0x4000C2C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float joystickY;

	[Token(Token = "0x4000C2D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float indexTrigger;

	[Token(Token = "0x4000C2E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float handTrigger;

	[Token(Token = "0x4000C2F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool isActive;
}
[Token(Token = "0x2000188")]
public struct ovrAvatarComponent
{
	[Token(Token = "0x4000C30")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform transform;

	[Token(Token = "0x4000C31")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public uint renderPartCount;

	[Token(Token = "0x4000C32")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public IntPtr renderParts;

	[Token(Token = "0x4000C33")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public string name;
}
[Token(Token = "0x2000189")]
internal struct ovrAvatarComponent_Offsets
{
	[Token(Token = "0x4000C34")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static long transform;

	[Token(Token = "0x4000C35")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static int renderPartCount;

	[Token(Token = "0x4000C36")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public static int renderParts;

	[Token(Token = "0x4000C37")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static int name;
}
[Token(Token = "0x200018A")]
public struct ovrAvatarBaseComponent
{
	[Token(Token = "0x4000C38")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector3 basePosition;

	[Token(Token = "0x4000C39")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public IntPtr renderComponent;
}
[Token(Token = "0x200018B")]
public struct ovrAvatarBodyComponent
{
	[Token(Token = "0x4000C3A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform leftEyeTransform;

	[Token(Token = "0x4000C3B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ovrAvatarTransform rightEyeTransform;

	[Token(Token = "0x4000C3C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public ovrAvatarTransform centerEyeTransform;

	[Token(Token = "0x4000C3D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public IntPtr renderComponent;
}
[Token(Token = "0x200018C")]
public struct ovrAvatarBodyComponent_Offsets
{
	[Token(Token = "0x4000C3E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static long leftEyeTransform;

	[Token(Token = "0x4000C3F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static long rightEyeTransform;

	[Token(Token = "0x4000C40")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static long centerEyeTransform;

	[Token(Token = "0x4000C41")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static long renderComponent;
}
[Token(Token = "0x200018D")]
public struct ovrAvatarControllerComponent
{
	[Token(Token = "0x4000C42")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarHandInputState inputState;

	[Token(Token = "0x4000C43")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public IntPtr renderComponent;
}
[Token(Token = "0x200018E")]
public struct ovrAvatarHandComponent
{
	[Token(Token = "0x4000C44")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarHandInputState inputState;

	[Token(Token = "0x4000C45")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public IntPtr renderComponent;
}
[Token(Token = "0x200018F")]
public enum ovrAvatarMaterialLayerBlendMode
{
	[Token(Token = "0x4000C47")]
	Add,
	[Token(Token = "0x4000C48")]
	Multiply,
	[Token(Token = "0x4000C49")]
	Count
}
[Token(Token = "0x2000190")]
public enum ovrAvatarMaterialLayerSampleMode
{
	[Token(Token = "0x4000C4B")]
	Color,
	[Token(Token = "0x4000C4C")]
	Texture,
	[Token(Token = "0x4000C4D")]
	TextureSingleChannel,
	[Token(Token = "0x4000C4E")]
	Parallax,
	[Token(Token = "0x4000C4F")]
	Count
}
[Token(Token = "0x2000191")]
public enum ovrAvatarMaterialMaskType
{
	[Token(Token = "0x4000C51")]
	None,
	[Token(Token = "0x4000C52")]
	Positional,
	[Token(Token = "0x4000C53")]
	ViewReflection,
	[Token(Token = "0x4000C54")]
	Fresnel,
	[Token(Token = "0x4000C55")]
	Pulse,
	[Token(Token = "0x4000C56")]
	Count
}
[Token(Token = "0x2000192")]
public enum ovrAvatarControllerType
{
	[Token(Token = "0x4000C58")]
	Touch,
	[Token(Token = "0x4000C59")]
	Malibu,
	[Token(Token = "0x4000C5A")]
	Go,
	[Token(Token = "0x4000C5B")]
	Quest,
	[Token(Token = "0x4000C5C")]
	Count
}
[Token(Token = "0x2000193")]
public enum ovrAvatarAssetLevelOfDetail
{
	[Token(Token = "0x4000C5E")]
	Lowest = 1,
	[Token(Token = "0x4000C5F")]
	Medium = 3,
	[Token(Token = "0x4000C60")]
	Highest = 5
}
[Token(Token = "0x2000194")]
public enum ovrAvatarLookAndFeelVersion
{
	[Token(Token = "0x4000C62")]
	Unknown = -1,
	[Token(Token = "0x4000C63")]
	One,
	[Token(Token = "0x4000C64")]
	Two
}
[Token(Token = "0x2000195")]
public struct ovrAvatarMaterialLayerState
{
	[Token(Token = "0x4000C65")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarMaterialLayerBlendMode blendMode;

	[Token(Token = "0x4000C66")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public ovrAvatarMaterialLayerSampleMode sampleMode;

	[Token(Token = "0x4000C67")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public ovrAvatarMaterialMaskType maskType;

	[Token(Token = "0x4000C68")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Vector4 layerColor;

	[Token(Token = "0x4000C69")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Vector4 sampleParameters;

	[Token(Token = "0x4000C6A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ulong sampleTexture;

	[Token(Token = "0x4000C6B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Vector4 sampleScaleOffset;

	[Token(Token = "0x4000C6C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Vector4 maskParameters;

	[Token(Token = "0x4000C6D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Vector4 maskAxis;

	[Token(Token = "0x6000E45")]
	[Address(RVA = "0x117EB40", Offset = "0x117EB40", VA = "0x117EB40")]
	private static bool VectorEquals(Vector4 a, Vector4 b)
	{
		return default(bool);
	}

	[Token(Token = "0x6000E46")]
	[Address(RVA = "0x722F14", Offset = "0x722F14", VA = "0x722F14", Slot = "0")]
	public override bool Equals(object obj)
	{
		return default(bool);
	}

	[Token(Token = "0x6000E47")]
	[Address(RVA = "0x722F1C", Offset = "0x722F1C", VA = "0x722F1C", Slot = "2")]
	public override int GetHashCode()
	{
		return default(int);
	}
}
[Token(Token = "0x2000196")]
public struct ovrAvatarMaterialState
{
	[Token(Token = "0x4000C6E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector4 baseColor;

	[Token(Token = "0x4000C6F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ovrAvatarMaterialMaskType baseMaskType;

	[Token(Token = "0x4000C70")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public Vector4 baseMaskParameters;

	[Token(Token = "0x4000C71")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Vector4 baseMaskAxis;

	[Token(Token = "0x4000C72")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public ovrAvatarMaterialLayerSampleMode sampleMode;

	[Token(Token = "0x4000C73")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ulong alphaMaskTextureID;

	[Token(Token = "0x4000C74")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Vector4 alphaMaskScaleOffset;

	[Token(Token = "0x4000C75")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public ulong normalMapTextureID;

	[Token(Token = "0x4000C76")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Vector4 normalMapScaleOffset;

	[Token(Token = "0x4000C77")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public ulong parallaxMapTextureID;

	[Token(Token = "0x4000C78")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Vector4 parallaxMapScaleOffset;

	[Token(Token = "0x4000C79")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public ulong roughnessMapTextureID;

	[Token(Token = "0x4000C7A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Vector4 roughnessMapScaleOffset;

	[Token(Token = "0x4000C7B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public uint layerCount;

	[Token(Token = "0x4000C7C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public ovrAvatarMaterialLayerState[] layers;

	[Token(Token = "0x6000E48")]
	[Address(RVA = "0x117EE74", Offset = "0x117EE74", VA = "0x117EE74")]
	private static bool VectorEquals(Vector4 a, Vector4 b)
	{
		return default(bool);
	}

	[Token(Token = "0x6000E49")]
	[Address(RVA = "0x723154", Offset = "0x723154", VA = "0x723154", Slot = "0")]
	public override bool Equals(object obj)
	{
		return default(bool);
	}

	[Token(Token = "0x6000E4A")]
	[Address(RVA = "0x72315C", Offset = "0x72315C", VA = "0x72315C", Slot = "2")]
	public override int GetHashCode()
	{
		return default(int);
	}
}
[Token(Token = "0x2000197")]
public struct ovrAvatarExpressiveParameters
{
	[Token(Token = "0x4000C7D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector4 irisColor;

	[Token(Token = "0x4000C7E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Vector4 scleraColor;

	[Token(Token = "0x4000C7F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Vector4 lashColor;

	[Token(Token = "0x4000C80")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Vector4 browColor;

	[Token(Token = "0x4000C81")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Vector4 lipColor;

	[Token(Token = "0x4000C82")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Vector4 teethColor;

	[Token(Token = "0x4000C83")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Vector4 gumColor;

	[Token(Token = "0x4000C84")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public float browLashIntensity;

	[Token(Token = "0x4000C85")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public float lipSmoothness;

	[Token(Token = "0x6000E4B")]
	[Address(RVA = "0x117E1E8", Offset = "0x117E1E8", VA = "0x117E1E8")]
	private static bool VectorEquals(Vector4 a, Vector4 b)
	{
		return default(bool);
	}

	[Token(Token = "0x6000E4C")]
	[Address(RVA = "0x722C5C", Offset = "0x722C5C", VA = "0x722C5C", Slot = "0")]
	public override bool Equals(object obj)
	{
		return default(bool);
	}

	[Token(Token = "0x6000E4D")]
	[Address(RVA = "0x722C64", Offset = "0x722C64", VA = "0x722C64", Slot = "2")]
	public override int GetHashCode()
	{
		return default(int);
	}
}
[Token(Token = "0x2000198")]
public struct ovrAvatarPBSMaterialState
{
	[Token(Token = "0x4000C86")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector4 baseColor;

	[Token(Token = "0x4000C87")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ulong albedoTextureID;

	[Token(Token = "0x4000C88")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector4 albedoMultiplier;

	[Token(Token = "0x4000C89")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ulong metallicnessTextureID;

	[Token(Token = "0x4000C8A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float glossinessScale;

	[Token(Token = "0x4000C8B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ulong normalTextureID;

	[Token(Token = "0x4000C8C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public ulong heightTextureID;

	[Token(Token = "0x4000C8D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public ulong occlusionTextureID;

	[Token(Token = "0x4000C8E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public ulong emissionTextureID;

	[Token(Token = "0x4000C8F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Vector4 emissionMultiplier;

	[Token(Token = "0x4000C90")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public ulong detailMaskTextureID;

	[Token(Token = "0x4000C91")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public ulong detailAlbedoTextureID;

	[Token(Token = "0x4000C92")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public ulong detailNormalTextureID;

	[Token(Token = "0x6000E4E")]
	[Address(RVA = "0x117F3A0", Offset = "0x117F3A0", VA = "0x117F3A0")]
	private static bool VectorEquals(Vector4 a, Vector4 b)
	{
		return default(bool);
	}

	[Token(Token = "0x6000E4F")]
	[Address(RVA = "0x7239DC", Offset = "0x7239DC", VA = "0x7239DC", Slot = "0")]
	public override bool Equals(object obj)
	{
		return default(bool);
	}

	[Token(Token = "0x6000E50")]
	[Address(RVA = "0x7239E4", Offset = "0x7239E4", VA = "0x7239E4", Slot = "2")]
	public override int GetHashCode()
	{
		return default(int);
	}
}
[Token(Token = "0x2000199")]
public class OvrAvatarAssetMaterial : OvrAvatarAsset
{
	[Token(Token = "0x4000C93")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ovrAvatarMaterialState material;

	[Token(Token = "0x6000E51")]
	[Address(RVA = "0x11396A0", Offset = "0x11396A0", VA = "0x11396A0")]
	public OvrAvatarAssetMaterial(ulong id, IntPtr mat)
	{
	}
}
[Token(Token = "0x200019A")]
public struct ovrAvatarSkinnedMeshPose
{
	[Token(Token = "0x4000C94")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint jointCount;

	[Token(Token = "0x4000C95")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public ovrAvatarTransform[] jointTransform;

	[Token(Token = "0x4000C96")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int[] jointParents;

	[Token(Token = "0x4000C97")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public IntPtr[] jointNames;
}
[Token(Token = "0x200019B")]
[Flags]
public enum ovrAvatarVisibilityFlags
{
	[Token(Token = "0x4000C99")]
	FirstPerson = 1,
	[Token(Token = "0x4000C9A")]
	ThirdPerson = 2,
	[Token(Token = "0x4000C9B")]
	SelfOccluding = 4
}
[Token(Token = "0x200019C")]
public struct ovrAvatarRenderPart_SkinnedMeshRender
{
	[Token(Token = "0x4000C9C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform localTransform;

	[Token(Token = "0x4000C9D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ovrAvatarVisibilityFlags visibilityMask;

	[Token(Token = "0x4000C9E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ulong meshAssetID;

	[Token(Token = "0x4000C9F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ovrAvatarMaterialState materialState;

	[Token(Token = "0x4000CA0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public ovrAvatarSkinnedMeshPose skinnedPose;
}
[Token(Token = "0x200019D")]
public struct ovrAvatarRenderPart_SkinnedMeshRenderPBS
{
	[Token(Token = "0x4000CA1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform localTransform;

	[Token(Token = "0x4000CA2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ovrAvatarVisibilityFlags visibilityMask;

	[Token(Token = "0x4000CA3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ulong meshAssetID;

	[Token(Token = "0x4000CA4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ulong albedoTextureAssetID;

	[Token(Token = "0x4000CA5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public ulong surfaceTextureAssetID;

	[Token(Token = "0x4000CA6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public ovrAvatarSkinnedMeshPose skinnedPose;
}
[Token(Token = "0x200019E")]
public struct ovrAvatarRenderPart_ProjectorRender
{
	[Token(Token = "0x4000CA7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform localTransform;

	[Token(Token = "0x4000CA8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public uint componentIndex;

	[Token(Token = "0x4000CA9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public uint renderPartIndex;

	[Token(Token = "0x4000CAA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ovrAvatarMaterialState materialState;
}
[Token(Token = "0x200019F")]
public struct ovrAvatarRenderPart_SkinnedMeshRenderPBS_V2
{
	[Token(Token = "0x4000CAB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform localTransform;

	[Token(Token = "0x4000CAC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ovrAvatarVisibilityFlags visibilityMask;

	[Token(Token = "0x4000CAD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ulong meshAssetID;

	[Token(Token = "0x4000CAE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ovrAvatarPBSMaterialState materialState;

	[Token(Token = "0x4000CAF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public ovrAvatarSkinnedMeshPose skinnedPose;
}
[Token(Token = "0x20001A0")]
public enum ovrAvatarHandGesture
{
	[Token(Token = "0x4000CB1")]
	Default,
	[Token(Token = "0x4000CB2")]
	GripSphere,
	[Token(Token = "0x4000CB3")]
	GripCube,
	[Token(Token = "0x4000CB4")]
	Count
}
[Token(Token = "0x20001A1")]
public enum ovrAvatarBodyPartType
{
	[Token(Token = "0x4000CB6")]
	Body,
	[Token(Token = "0x4000CB7")]
	Clothing,
	[Token(Token = "0x4000CB8")]
	Eyewear,
	[Token(Token = "0x4000CB9")]
	Hair,
	[Token(Token = "0x4000CBA")]
	Beard,
	[Token(Token = "0x4000CBB")]
	Count
}
[Token(Token = "0x20001A2")]
public struct ovrAvatarBlendShapeParams
{
	[Token(Token = "0x4000CBC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint blendShapeParamCount;

	[Token(Token = "0x4000CBD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float[] blendShapeParams;
}
[Token(Token = "0x20001A3")]
internal struct ovrAvatarBlendShapeParams_Offsets
{
	[Token(Token = "0x4000CBE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int blendShapeParamCount;

	[Token(Token = "0x4000CBF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static long blendShapeParams;
}
[Token(Token = "0x20001A4")]
public struct ovrAvatarVisemes
{
	[Token(Token = "0x4000CC0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint visemeParamCount;

	[Token(Token = "0x4000CC1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float[] visemeParams;
}
[Token(Token = "0x20001A5")]
internal struct ovrAvatarVisemes_Offsets
{
	[Token(Token = "0x4000CC2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int visemeParamCount;

	[Token(Token = "0x4000CC3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static long visemeParams;
}
[Token(Token = "0x20001A6")]
public enum ovrAvatarGazeTargetType
{
	[Token(Token = "0x4000CC5")]
	AvatarHead,
	[Token(Token = "0x4000CC6")]
	AvatarHand,
	[Token(Token = "0x4000CC7")]
	Object,
	[Token(Token = "0x4000CC8")]
	ObjectStatic,
	[Token(Token = "0x4000CC9")]
	Count
}
[Token(Token = "0x20001A7")]
public struct ovrAvatarGazeTarget
{
	[Token(Token = "0x4000CCA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint id;

	[Token(Token = "0x4000CCB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public Vector3 worldPosition;

	[Token(Token = "0x4000CCC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ovrAvatarGazeTargetType type;
}
[Token(Token = "0x20001A8")]
internal struct ovrAvatarGazeTarget_Offsets
{
	[Token(Token = "0x4000CCD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int id;

	[Token(Token = "0x4000CCE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public static int worldPosition;

	[Token(Token = "0x4000CCF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static int type;
}
[Token(Token = "0x20001A9")]
public struct ovrAvatarGazeTargets
{
	[Token(Token = "0x4000CD0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint targetCount;

	[Token(Token = "0x4000CD1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public ovrAvatarGazeTarget[] targets;
}
[Token(Token = "0x20001AA")]
internal struct ovrAvatarGazeTargets_Offsets
{
	[Token(Token = "0x4000CD2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int targetCount;

	[Token(Token = "0x4000CD3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static long targets;
}
[Token(Token = "0x20001AB")]
public enum ovrAvatarLightType
{
	[Token(Token = "0x4000CD5")]
	Point,
	[Token(Token = "0x4000CD6")]
	Direction,
	[Token(Token = "0x4000CD7")]
	Spot,
	[Token(Token = "0x4000CD8")]
	Count
}
[Token(Token = "0x20001AC")]
public struct ovrAvatarLight
{
	[Token(Token = "0x4000CD9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint id;

	[Token(Token = "0x4000CDA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public ovrAvatarLightType type;

	[Token(Token = "0x4000CDB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float intensity;

	[Token(Token = "0x4000CDC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Vector3 worldDirection;

	[Token(Token = "0x4000CDD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 worldPosition;

	[Token(Token = "0x4000CDE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float range;

	[Token(Token = "0x4000CDF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float spotAngleDeg;
}
[Token(Token = "0x20001AD")]
internal struct ovrAvatarLight_Offsets
{
	[Token(Token = "0x4000CE0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static long id;

	[Token(Token = "0x4000CE1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static long type;

	[Token(Token = "0x4000CE2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static long intensity;

	[Token(Token = "0x4000CE3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static long worldDirection;

	[Token(Token = "0x4000CE4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public static long worldPosition;

	[Token(Token = "0x4000CE5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public static long range;

	[Token(Token = "0x4000CE6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public static long spotAngleDeg;
}
[Token(Token = "0x20001AE")]
public struct ovrAvatarLights
{
	[Token(Token = "0x4000CE7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float ambientIntensity;

	[Token(Token = "0x4000CE8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public uint lightCount;

	[Token(Token = "0x4000CE9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public ovrAvatarLight[] lights;
}
[Token(Token = "0x20001AF")]
internal struct ovrAvatarLights_Offsets
{
	[Token(Token = "0x4000CEA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static long ambientIntensity;

	[Token(Token = "0x4000CEB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static long lightCount;

	[Token(Token = "0x4000CEC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static long lights;
}
[Token(Token = "0x20001B0")]
[Flags]
public enum ovrAvatarDebugContext : uint
{
	[Token(Token = "0x4000CEE")]
	None = 0u,
	[Token(Token = "0x4000CEF")]
	GazeTarget = 1u,
	[Token(Token = "0x4000CF0")]
	Any = uint.MaxValue
}
[Token(Token = "0x20001B1")]
public struct ovrAvatarDebugLine
{
	[Token(Token = "0x4000CF1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector3 startPoint;

	[Token(Token = "0x4000CF2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Vector3 endPoint;

	[Token(Token = "0x4000CF3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 color;

	[Token(Token = "0x4000CF4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public ovrAvatarDebugContext context;

	[Token(Token = "0x4000CF5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public IntPtr text;
}
[Token(Token = "0x20001B2")]
public struct ovrAvatarDebugTransform
{
	[Token(Token = "0x4000CF6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform transform;

	[Token(Token = "0x4000CF7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ovrAvatarDebugContext context;

	[Token(Token = "0x4000CF8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public IntPtr text;
}
[Token(Token = "0x20001B3")]
public delegate void specificationCallback(IntPtr specification);
[Token(Token = "0x20001B4")]
public delegate void assetLoadedCallback(OvrAvatarAsset asset);
[Token(Token = "0x20001B5")]
public delegate void combinedMeshLoadedCallback(IntPtr asset);
[Token(Token = "0x20001B6")]
public class OvrAvatarSDKManager : MonoBehaviour
{
	[Token(Token = "0x20003B8")]
	public struct AvatarSpecRequestParams
	{
		[Token(Token = "0x40017A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ulong _userId;

		[Token(Token = "0x40017A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public specificationCallback _callback;

		[Token(Token = "0x40017AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool _useCombinedMesh;

		[Token(Token = "0x40017AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public ovrAvatarAssetLevelOfDetail _lod;

		[Token(Token = "0x40017AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool _forceMobileTextureFormat;

		[Token(Token = "0x40017AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public ovrAvatarLookAndFeelVersion _lookVersion;

		[Token(Token = "0x40017AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ovrAvatarLookAndFeelVersion _fallbackVersion;

		[Token(Token = "0x40017AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public bool _enableExpressive;

		[Token(Token = "0x600177B")]
		[Address(RVA = "0x7217F0", Offset = "0x7217F0", VA = "0x7217F0")]
		public AvatarSpecRequestParams(ulong userId, specificationCallback callback, bool useCombinedMesh, ovrAvatarAssetLevelOfDetail lod, bool forceMobileTextureFormat, ovrAvatarLookAndFeelVersion lookVersion, ovrAvatarLookAndFeelVersion fallbackVersion, bool enableExpressive)
		{
		}
	}

	[Token(Token = "0x4000CF9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static OvrAvatarSDKManager _instance;

	[Token(Token = "0x4000CFA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool initialized;

	[Token(Token = "0x4000CFB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Dictionary<ulong, HashSet<specificationCallback>> specificationCallbacks;

	[Token(Token = "0x4000CFC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Dictionary<ulong, HashSet<assetLoadedCallback>> assetLoadedCallbacks;

	[Token(Token = "0x4000CFD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Dictionary<IntPtr, combinedMeshLoadedCallback> combinedMeshLoadedCallbacks;

	[Token(Token = "0x4000CFE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Dictionary<ulong, OvrAvatarAsset> assetCache;

	[Token(Token = "0x4000CFF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private OvrAvatarTextureCopyManager textureCopyManager;

	[Token(Token = "0x4000D00")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public ovrAvatarLogLevel LoggingLevel;

	[Token(Token = "0x4000D01")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Queue<AvatarSpecRequestParams> avatarSpecificationQueue;

	[Token(Token = "0x4000D02")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private List<int> loadingAvatars;

	[Token(Token = "0x4000D03")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private bool avatarSpecRequestAvailable;

	[Token(Token = "0x4000D04")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private float lastDispatchedAvatarSpecRequestTime;

	[Token(Token = "0x4000D05")]
	private const float AVATAR_SPEC_REQUEST_TIMEOUT = 5f;

	[Token(Token = "0x17000295")]
	public static OvrAvatarSDKManager Instance
	{
		[Token(Token = "0x6000E64")]
		[Address(RVA = "0xFC89A4", Offset = "0xFC89A4", VA = "0xFC89A4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000E65")]
	[Address(RVA = "0xFCA3D4", Offset = "0xFCA3D4", VA = "0xFCA3D4")]
	private bool Initialize()
	{
		return default(bool);
	}

	[Token(Token = "0x6000E66")]
	[Address(RVA = "0xFCA620", Offset = "0xFCA620", VA = "0xFCA620")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000E67")]
	[Address(RVA = "0xFCA694", Offset = "0xFCA694", VA = "0xFCA694")]
	private void Update()
	{
	}

	[Token(Token = "0x6000E68")]
	[Address(RVA = "0xFCAEE8", Offset = "0xFCAEE8", VA = "0xFCAEE8")]
	public bool IsAvatarSpecWaiting()
	{
		return default(bool);
	}

	[Token(Token = "0x6000E69")]
	[Address(RVA = "0xFCAF40", Offset = "0xFCAF40", VA = "0xFCAF40")]
	public bool IsAvatarLoading()
	{
		return default(bool);
	}

	[Token(Token = "0x6000E6A")]
	[Address(RVA = "0xFCAF98", Offset = "0xFCAF98", VA = "0xFCAF98")]
	public void AddLoadingAvatar(int gameobjectID)
	{
	}

	[Token(Token = "0x6000E6B")]
	[Address(RVA = "0xFCB000", Offset = "0xFCB000", VA = "0xFCB000")]
	public void RemoveLoadingAvatar(int gameobjectID)
	{
	}

	[Token(Token = "0x6000E6C")]
	[Address(RVA = "0xFCB068", Offset = "0xFCB068", VA = "0xFCB068")]
	public void RequestAvatarSpecification(AvatarSpecRequestParams avatarSpecRequest)
	{
	}

	[Token(Token = "0x6000E6D")]
	[Address(RVA = "0xFCAD20", Offset = "0xFCAD20", VA = "0xFCAD20")]
	private void DispatchAvatarSpecificationRequest(AvatarSpecRequestParams avatarSpecRequest)
	{
	}

	[Token(Token = "0x6000E6E")]
	[Address(RVA = "0xFCB148", Offset = "0xFCB148", VA = "0xFCB148")]
	public void BeginLoadingAsset(ulong assetId, ovrAvatarAssetLevelOfDetail lod, assetLoadedCallback callback)
	{
	}

	[Token(Token = "0x6000E6F")]
	[Address(RVA = "0xFCB264", Offset = "0xFCB264", VA = "0xFCB264")]
	public void RegisterCombinedMeshCallback(IntPtr sdkAvatar, combinedMeshLoadedCallback callback)
	{
	}

	[Token(Token = "0x6000E70")]
	[Address(RVA = "0xFC9EB8", Offset = "0xFC9EB8", VA = "0xFC9EB8")]
	public OvrAvatarAsset GetAsset(ulong assetId)
	{
		return null;
	}

	[Token(Token = "0x6000E71")]
	[Address(RVA = "0xFCB344", Offset = "0xFCB344", VA = "0xFCB344")]
	public void DeleteAssetFromCache(ulong assetId)
	{
	}

	[Token(Token = "0x6000E72")]
	[Address(RVA = "0xFCA5D4", Offset = "0xFCA5D4", VA = "0xFCA5D4")]
	public string GetAppId()
	{
		return null;
	}

	[Token(Token = "0x6000E73")]
	[Address(RVA = "0xFC8B34", Offset = "0xFC8B34", VA = "0xFC8B34")]
	public OvrAvatarTextureCopyManager GetTextureCopyManager()
	{
		return null;
	}

	[Token(Token = "0x6000E74")]
	[Address(RVA = "0xFCB41C", Offset = "0xFCB41C", VA = "0xFCB41C")]
	public OvrAvatarSDKManager()
	{
	}
}
[Token(Token = "0x20001B7")]
public sealed class OvrAvatarSettings : ScriptableObject
{
	[Token(Token = "0x4000D06")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static OvrAvatarSettings instance;

	[Token(Token = "0x4000D07")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private string ovrAppID;

	[Token(Token = "0x4000D08")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private string ovrGearAppID;

	[Token(Token = "0x17000296")]
	public static string AppID
	{
		[Token(Token = "0x6000E75")]
		[Address(RVA = "0xFCB3DC", Offset = "0xFCB3DC", VA = "0xFCB3DC")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000E76")]
		[Address(RVA = "0xFCB574", Offset = "0xFCB574", VA = "0xFCB574")]
		set
		{
		}
	}

	[Token(Token = "0x17000297")]
	public static string MobileAppID
	{
		[Token(Token = "0x6000E77")]
		[Address(RVA = "0xFCB3FC", Offset = "0xFCB3FC", VA = "0xFCB3FC")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000E78")]
		[Address(RVA = "0xFCB5A0", Offset = "0xFCB5A0", VA = "0xFCB5A0")]
		set
		{
		}
	}

	[Token(Token = "0x17000298")]
	public static OvrAvatarSettings Instance
	{
		[Token(Token = "0x6000E79")]
		[Address(RVA = "0xFCB460", Offset = "0xFCB460", VA = "0xFCB460")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000E7A")]
		[Address(RVA = "0xFCB5CC", Offset = "0xFCB5CC", VA = "0xFCB5CC")]
		set
		{
		}
	}

	[Token(Token = "0x6000E7B")]
	[Address(RVA = "0xFCB620", Offset = "0xFCB620", VA = "0xFCB620")]
	public OvrAvatarSettings()
	{
	}
}
[Token(Token = "0x20001B8")]
public class OvrAvatarSkinnedMeshRenderComponent : OvrAvatarRenderComponent
{
	[Token(Token = "0x4000D09")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Shader surface;

	[Token(Token = "0x4000D0A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Shader surfaceSelfOccluding;

	[Token(Token = "0x4000D0B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool previouslyActive;

	[Token(Token = "0x6000E7C")]
	[Address(RVA = "0xFCCF5C", Offset = "0xFCCF5C", VA = "0xFCCF5C")]
	internal void Initialize(ovrAvatarRenderPart_SkinnedMeshRender skinnedMeshRender, Shader surface, Shader surfaceSelfOccluding, int thirdPersonLayer, int firstPersonLayer)
	{
	}

	[Token(Token = "0x6000E7D")]
	[Address(RVA = "0xFCD200", Offset = "0xFCD200", VA = "0xFCD200")]
	public void UpdateSkinnedMeshRender(OvrAvatarComponent component, OvrAvatar avatar, IntPtr renderPart)
	{
	}

	[Token(Token = "0x6000E7E")]
	[Address(RVA = "0xFCD0A0", Offset = "0xFCD0A0", VA = "0xFCD0A0")]
	private void UpdateMeshMaterial(ovrAvatarVisibilityFlags visibilityMask, SkinnedMeshRenderer rootMesh)
	{
	}

	[Token(Token = "0x6000E7F")]
	[Address(RVA = "0xFCD42C", Offset = "0xFCD42C", VA = "0xFCD42C")]
	public OvrAvatarSkinnedMeshRenderComponent()
	{
	}
}
[Token(Token = "0x20001B9")]
public class OvrAvatarSkinnedMeshRenderPBSComponent : OvrAvatarRenderComponent
{
	[Token(Token = "0x4000D0C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	private bool isMaterialInitilized;

	[Token(Token = "0x6000E80")]
	[Address(RVA = "0xFCD43C", Offset = "0xFCD43C", VA = "0xFCD43C")]
	internal void Initialize(ovrAvatarRenderPart_SkinnedMeshRenderPBS skinnedMeshRenderPBS, Shader shader, int thirdPersonLayer, int firstPersonLayer)
	{
	}

	[Token(Token = "0x6000E81")]
	[Address(RVA = "0xFCD56C", Offset = "0xFCD56C", VA = "0xFCD56C")]
	internal void UpdateSkinnedMeshRenderPBS(OvrAvatar avatar, IntPtr renderPart, Material mat)
	{
	}

	[Token(Token = "0x6000E82")]
	[Address(RVA = "0xFCD70C", Offset = "0xFCD70C", VA = "0xFCD70C")]
	public OvrAvatarSkinnedMeshRenderPBSComponent()
	{
	}
}
[Token(Token = "0x20001BA")]
public class OvrAvatarSkinnedMeshPBSV2RenderComponent : OvrAvatarRenderComponent
{
	[Token(Token = "0x4000D0D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private OvrAvatarMaterialManager avatarMaterialManager;

	[Token(Token = "0x4000D0E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool previouslyActive;

	[Token(Token = "0x4000D0F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
	private bool isCombinedMaterial;

	[Token(Token = "0x4000D10")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private ovrAvatarExpressiveParameters ExpressiveParameters;

	[Token(Token = "0x4000D11")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private bool EnableExpressive;

	[Token(Token = "0x4000D12")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private int blendShapeCount;

	[Token(Token = "0x4000D13")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private ovrAvatarBlendShapeParams blendShapeParams;

	[Token(Token = "0x4000D14")]
	private const string MAIN_MATERIAL_NAME = "main_material";

	[Token(Token = "0x4000D15")]
	private const string EYE_MATERIAL_NAME = "eye_material";

	[Token(Token = "0x4000D16")]
	private const string DEFAULT_MATERIAL_NAME = "_material";

	[Token(Token = "0x6000E83")]
	[Address(RVA = "0xFCB678", Offset = "0xFCB678", VA = "0xFCB678")]
	internal void Initialize(IntPtr renderPart, ovrAvatarRenderPart_SkinnedMeshRenderPBS_V2 skinnedMeshRender, OvrAvatarMaterialManager materialManager, int thirdPersonLayer, int firstPersonLayer, bool combinedMesh, ovrAvatarAssetLevelOfDetail lod, bool assignExpressiveParams, OvrAvatar avatar, bool isControllerModel)
	{
	}

	[Token(Token = "0x6000E84")]
	[Address(RVA = "0xFCC4E0", Offset = "0xFCC4E0", VA = "0xFCC4E0")]
	public void UpdateSkinnedMeshRender(OvrAvatarComponent component, OvrAvatar avatar, IntPtr renderPart)
	{
	}

	[Token(Token = "0x6000E85")]
	[Address(RVA = "0xFCC6FC", Offset = "0xFCC6FC", VA = "0xFCC6FC")]
	private void InitializeSingleComponentMaterial(IntPtr renderPart, int lodIndex)
	{
	}

	[Token(Token = "0x6000E86")]
	[Address(RVA = "0xFCBC54", Offset = "0xFCBC54", VA = "0xFCBC54")]
	private void InitializeCombinedMaterial(IntPtr renderPart, int lodIndex)
	{
	}

	[Token(Token = "0x6000E87")]
	[Address(RVA = "0xFCBA24", Offset = "0xFCBA24", VA = "0xFCBA24")]
	private void SetMaterialTransparent(Material mat)
	{
	}

	[Token(Token = "0x6000E88")]
	[Address(RVA = "0xFCBB38", Offset = "0xFCBB38", VA = "0xFCBB38")]
	private void SetMaterialOpaque(Material mat)
	{
	}

	[Token(Token = "0x6000E89")]
	[Address(RVA = "0xFCCF4C", Offset = "0xFCCF4C", VA = "0xFCCF4C")]
	public OvrAvatarSkinnedMeshPBSV2RenderComponent()
	{
	}
}
[Token(Token = "0x20001BB")]
public class OvrAvatarTextureCopyManager : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x20003B9")]
	public struct FallbackTextureSet
	{
		[Token(Token = "0x40017B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool Initialized;

		[Token(Token = "0x40017B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Texture2D DiffuseRoughness;

		[Token(Token = "0x40017B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Texture2D Normal;
	}

	[Token(Token = "0x20003BA")]
	private struct CopyTextureParams
	{
		[Token(Token = "0x40017B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Texture Src;

		[Token(Token = "0x40017B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Texture Dst;

		[Token(Token = "0x40017B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int Mip;

		[Token(Token = "0x40017B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int SrcSize;

		[Token(Token = "0x40017B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int DstElement;

		[Token(Token = "0x600177C")]
		[Address(RVA = "0x721858", Offset = "0x721858", VA = "0x721858")]
		public CopyTextureParams(Texture src, Texture dst, int mip, int srcSize, int dstElement)
		{
		}
	}

	[Token(Token = "0x20003BB")]
	public struct TextureSet
	{
		[Token(Token = "0x40017B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Dictionary<ulong, bool> TextureIDSingleMeshPair;

		[Token(Token = "0x40017B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public bool IsProcessed;

		[Token(Token = "0x600177D")]
		[Address(RVA = "0x7218E0", Offset = "0x7218E0", VA = "0x7218E0")]
		public TextureSet(Dictionary<ulong, bool> textureIDSingleMeshPair, bool isProcessed)
		{
		}
	}

	[Token(Token = "0x20003BC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6A8474", Offset = "0x6A8474")]
	private sealed class <DeleteTextureSetCoroutine>d__24 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40017BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40017BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40017BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TextureSet textureSetToDelete;

		[Token(Token = "0x40017BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public OvrAvatarTextureCopyManager <>4__this;

		[Token(Token = "0x40017BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public int gameobjectID;

		[Token(Token = "0x170003F4")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001781")]
			[Address(RVA = "0xFCEECC", Offset = "0xFCEECC", VA = "0xFCEECC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003F5")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001783")]
			[Address(RVA = "0xFCEF34", Offset = "0xFCEF34", VA = "0xFCEF34", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600177E")]
		[Address(RVA = "0xFCE88C", Offset = "0xFCE88C", VA = "0xFCE88C")]
		[DebuggerHidden]
		public <DeleteTextureSetCoroutine>d__24(int <>1__state)
		{
		}

		[Token(Token = "0x600177F")]
		[Address(RVA = "0xFCE9F4", Offset = "0xFCE9F4", VA = "0xFCE9F4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001780")]
		[Address(RVA = "0xFCE9F8", Offset = "0xFCE9F8", VA = "0xFCE9F8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001782")]
		[Address(RVA = "0xFCEED4", Offset = "0xFCEED4", VA = "0xFCEED4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000D17")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public FallbackTextureSet[] FallbackTextureSets;

	[Token(Token = "0x4000D18")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Queue<CopyTextureParams> texturesToCopy;

	[Token(Token = "0x4000D19")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Dictionary<int, TextureSet> textureSets;

	[Token(Token = "0x4000D1A")]
	private const int TEXTURES_TO_COPY_QUEUE_CAPACITY = 256;

	[Token(Token = "0x4000D1B")]
	private const int COPIES_PER_FRAME = 8;

	[Token(Token = "0x4000D1C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private readonly string[] FALLBACK_TEXTURE_PATHS_DIFFUSE_ROUGHNESS;

	[Token(Token = "0x4000D1D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private readonly string[] FALLBACK_TEXTURE_PATHS_NORMAL;

	[Token(Token = "0x4000D1E")]
	private const string PATH_HIGHEST_DIFFUSE_ROUGHNESS = "FallbackTextures/fallback_diffuse_roughness_2048";

	[Token(Token = "0x4000D1F")]
	private const string PATH_MEDIUM_DIFFUSE_ROUGHNESS = "FallbackTextures/fallback_diffuse_roughness_1024";

	[Token(Token = "0x4000D20")]
	private const string PATH_LOWEST_DIFFUSE_ROUGHNESS = "FallbackTextures/fallback_diffuse_roughness_256";

	[Token(Token = "0x4000D21")]
	private const string PATH_HIGHEST_NORMAL = "FallbackTextures/fallback_normal_2048";

	[Token(Token = "0x4000D22")]
	private const string PATH_MEDIUM_NORMAL = "FallbackTextures/fallback_normal_1024";

	[Token(Token = "0x4000D23")]
	private const string PATH_LOWEST_NORMAL = "FallbackTextures/fallback_normal_256";

	[Token(Token = "0x4000D24")]
	private const int GPU_TEXTURE_COPY_WAIT_TIME = 10;

	[Token(Token = "0x6000E8A")]
	[Address(RVA = "0xFCDEBC", Offset = "0xFCDEBC", VA = "0xFCDEBC")]
	public OvrAvatarTextureCopyManager()
	{
	}

	[Token(Token = "0x6000E8B")]
	[Address(RVA = "0xFCE218", Offset = "0xFCE218", VA = "0xFCE218")]
	public void Update()
	{
	}

	[Token(Token = "0x6000E8C")]
	[Address(RVA = "0xFC8BB8", Offset = "0xFC8BB8", VA = "0xFC8BB8")]
	public int GetTextureCount()
	{
		return default(int);
	}

	[Token(Token = "0x6000E8D")]
	[Address(RVA = "0xFCE410", Offset = "0xFCE410", VA = "0xFCE410")]
	public void CopyTexture(Texture src, Texture dst, int mipLevel, int mipSize, int dstElement, bool useQueue = true)
	{
	}

	[Token(Token = "0x6000E8E")]
	[Address(RVA = "0xFCE380", Offset = "0xFCE380", VA = "0xFCE380")]
	private void CopyTexture(CopyTextureParams copyTextureParams)
	{
	}

	[Token(Token = "0x6000E8F")]
	[Address(RVA = "0xFCE5A4", Offset = "0xFCE5A4", VA = "0xFCE5A4")]
	public void AddTextureIDToTextureSet(int gameobjectID, ulong textureID, bool isSingleMesh)
	{
	}

	[Token(Token = "0x6000E90")]
	[Address(RVA = "0xFCE750", Offset = "0xFCE750", VA = "0xFCE750")]
	public void DeleteTextureSet(int gameobjectID)
	{
	}

	[Token(Token = "0x6000E91")]
	[Address(RVA = "0xFCE7F8", Offset = "0xFCE7F8", VA = "0xFCE7F8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6B1030", Offset = "0x6B1030")]
	private IEnumerator DeleteTextureSetCoroutine(TextureSet textureSetToDelete, int gameobjectID)
	{
		return null;
	}

	[Token(Token = "0x6000E92")]
	[Address(RVA = "0xFCB0FC", Offset = "0xFCB0FC", VA = "0xFCB0FC")]
	public void CheckFallbackTextureSet(ovrAvatarAssetLevelOfDetail lod)
	{
	}

	[Token(Token = "0x6000E93")]
	[Address(RVA = "0xFCE8B8", Offset = "0xFCE8B8", VA = "0xFCE8B8")]
	private void InitFallbackTextureSet(ovrAvatarAssetLevelOfDetail lod)
	{
	}
}
[Token(Token = "0x20001BC")]
public class OvrAvatarTouchController : OvrAvatarComponent
{
	[Token(Token = "0x4000D25")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public bool isLeftHand;

	[Token(Token = "0x4000D26")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private ovrAvatarControllerComponent component;

	[Token(Token = "0x6000E94")]
	[Address(RVA = "0xFCEF3C", Offset = "0xFCEF3C", VA = "0xFCEF3C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000E95")]
	[Address(RVA = "0xFCF09C", Offset = "0xFCF09C", VA = "0xFCF09C")]
	public OvrAvatarTouchController()
	{
	}
}
[Token(Token = "0x20001BD")]
public class EnableSwitch : MonoBehaviour
{
	[Token(Token = "0x4000D27")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject[] SwitchTargets;

	[Token(Token = "0x6000E96")]
	public bool SetActive<T>(int target) where T : MonoBehaviour
	{
		return default(bool);
	}

	[Token(Token = "0x6000E97")]
	[Address(RVA = "0x10379A0", Offset = "0x10379A0", VA = "0x10379A0")]
	public EnableSwitch()
	{
	}
}
[Token(Token = "0x20001BE")]
public class LipSyncDemo_Control : MonoBehaviour
{
	[Token(Token = "0x4000D28")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6A9950", Offset = "0x6A9950")]
	public KeyCode rotateLeftKey;

	[Token(Token = "0x4000D29")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6A9988", Offset = "0x6A9988")]
	public KeyCode rotateRightKey;

	[Token(Token = "0x4000D2A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6A99C0", Offset = "0x6A99C0")]
	public KeyCode resetRotationKey;

	[Token(Token = "0x4000D2B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float resetRotation;

	[Token(Token = "0x4000D2C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float rotationAmount;

	[Token(Token = "0x4000D2D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float rotationMax;

	[Token(Token = "0x6000E98")]
	[Address(RVA = "0x1093008", Offset = "0x1093008", VA = "0x1093008")]
	private void Start()
	{
	}

	[Token(Token = "0x6000E99")]
	[Address(RVA = "0x109300C", Offset = "0x109300C", VA = "0x109300C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000E9A")]
	[Address(RVA = "0x109308C", Offset = "0x109308C", VA = "0x109308C")]
	private void RotateObject(float amountDegrees, bool absolute = false)
	{
	}

	[Token(Token = "0x6000E9B")]
	[Address(RVA = "0x1093278", Offset = "0x1093278", VA = "0x1093278")]
	public LipSyncDemo_Control()
	{
	}
}
[Token(Token = "0x20001BF")]
public class LipSyncDemo_SetCurrentTarget : MonoBehaviour
{
	[Token(Token = "0x4000D2E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public EnableSwitch[] SwitchTargets;

	[Token(Token = "0x4000D2F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int targetSet;

	[Token(Token = "0x4000D30")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private int maxTarget;

	[Token(Token = "0x4000D31")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool XRButtonBeingPressed;

	[Token(Token = "0x6000E9C")]
	[Address(RVA = "0x10932A8", Offset = "0x10932A8", VA = "0x10932A8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000E9D")]
	[Address(RVA = "0x10933AC", Offset = "0x10933AC", VA = "0x10933AC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000E9E")]
	[Address(RVA = "0x10936C0", Offset = "0x10936C0", VA = "0x10936C0")]
	private void SetCurrentTarget()
	{
	}

	[Token(Token = "0x6000E9F")]
	[Address(RVA = "0x109394C", Offset = "0x109394C", VA = "0x109394C")]
	private void LocalTouchEventCallback(OVRTouchpad.TouchEvent touchEvent)
	{
	}

	[Token(Token = "0x6000EA0")]
	[Address(RVA = "0x109399C", Offset = "0x109399C", VA = "0x109399C")]
	public LipSyncDemo_SetCurrentTarget()
	{
	}
}
[Token(Token = "0x20001C0")]
public class OVRLipSyncDebugConsole : MonoBehaviour
{
	[Token(Token = "0x4000D32")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ArrayList messages;

	[Token(Token = "0x4000D33")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int maxMessages;

	[Token(Token = "0x4000D34")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Text textMsg;

	[Token(Token = "0x4000D35")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static OVRLipSyncDebugConsole s_Instance;

	[Token(Token = "0x4000D36")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool clearTimeoutOn;

	[Token(Token = "0x4000D37")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float clearTimeout;

	[Token(Token = "0x17000299")]
	public static OVRLipSyncDebugConsole instance
	{
		[Token(Token = "0x6000EA1")]
		[Address(RVA = "0x11F4888", Offset = "0x11F4888", VA = "0x11F4888")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000EA2")]
	[Address(RVA = "0x11F4B40", Offset = "0x11F4B40", VA = "0x11F4B40")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000EA3")]
	[Address(RVA = "0x11F4C7C", Offset = "0x11F4C7C", VA = "0x11F4C7C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000EA4")]
	[Address(RVA = "0x11F4BB0", Offset = "0x11F4BB0", VA = "0x11F4BB0")]
	public void Init()
	{
	}

	[Token(Token = "0x6000EA5")]
	[Address(RVA = "0x11F2B30", Offset = "0x11F2B30", VA = "0x11F2B30")]
	public static void Log(string message)
	{
	}

	[Token(Token = "0x6000EA6")]
	[Address(RVA = "0x11F4E04", Offset = "0x11F4E04", VA = "0x11F4E04")]
	public static void Log(string message, Color color)
	{
	}

	[Token(Token = "0x6000EA7")]
	[Address(RVA = "0x11F2AC8", Offset = "0x11F2AC8", VA = "0x11F2AC8")]
	public static void Clear()
	{
	}

	[Token(Token = "0x6000EA8")]
	[Address(RVA = "0x11F2BB0", Offset = "0x11F2BB0", VA = "0x11F2BB0")]
	public static void ClearTimeout(float timeToClear)
	{
	}

	[Token(Token = "0x6000EA9")]
	[Address(RVA = "0x11F4D14", Offset = "0x11F4D14", VA = "0x11F4D14")]
	public void AddMessage(string message, Color color)
	{
	}

	[Token(Token = "0x6000EAA")]
	[Address(RVA = "0x11F4EA4", Offset = "0x11F4EA4", VA = "0x11F4EA4")]
	public void ClearMessages()
	{
	}

	[Token(Token = "0x6000EAB")]
	[Address(RVA = "0x11F4EE0", Offset = "0x11F4EE0", VA = "0x11F4EE0")]
	public void SetClearTimeout(float timeout)
	{
	}

	[Token(Token = "0x6000EAC")]
	[Address(RVA = "0x11F50D4", Offset = "0x11F50D4", VA = "0x11F50D4")]
	private void Prune()
	{
	}

	[Token(Token = "0x6000EAD")]
	[Address(RVA = "0x11F4EF0", Offset = "0x11F4EF0", VA = "0x11F4EF0")]
	private void Display()
	{
	}

	[Token(Token = "0x6000EAE")]
	[Address(RVA = "0x11F5184", Offset = "0x11F5184", VA = "0x11F5184")]
	public OVRLipSyncDebugConsole()
	{
	}
}
[Token(Token = "0x20001C1")]
public class OVRNamedArrayAttribute : PropertyAttribute
{
	[Token(Token = "0x4000D38")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public readonly string[] names;

	[Token(Token = "0x6000EB0")]
	[Address(RVA = "0x11F5C48", Offset = "0x11F5C48", VA = "0x11F5C48")]
	public OVRNamedArrayAttribute(string[] names)
	{
	}
}
[Token(Token = "0x20001C2")]
public static class OVRTouchpad
{
	[Token(Token = "0x20003BD")]
	public enum TouchEvent
	{
		[Token(Token = "0x40017C0")]
		SingleTap,
		[Token(Token = "0x40017C1")]
		DoubleTap,
		[Token(Token = "0x40017C2")]
		Left,
		[Token(Token = "0x40017C3")]
		Right,
		[Token(Token = "0x40017C4")]
		Up,
		[Token(Token = "0x40017C5")]
		Down
	}

	[Token(Token = "0x20003BE")]
	public delegate void OVRTouchpadCallback<TouchEvent>(TouchEvent arg);

	[Token(Token = "0x4000D39")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Vector3 moveAmountMouse;

	[Token(Token = "0x4000D3A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private static float minMovMagnitudeMouse;

	[Token(Token = "0x4000D3B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static Delegate touchPadCallbacks;

	[Token(Token = "0x4000D3C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static OVRTouchpadHelper touchpadHelper;

	[Token(Token = "0x6000EB1")]
	[Address(RVA = "0x10E585C", Offset = "0x10E585C", VA = "0x10E585C")]
	public static void Create()
	{
	}

	[Token(Token = "0x6000EB2")]
	[Address(RVA = "0x10E5860", Offset = "0x10E5860", VA = "0x10E5860")]
	public static void Update()
	{
	}

	[Token(Token = "0x6000EB3")]
	[Address(RVA = "0x10E5B80", Offset = "0x10E5B80", VA = "0x10E5B80")]
	public static void OnDisable()
	{
	}

	[Token(Token = "0x6000EB4")]
	[Address(RVA = "0x10E59D0", Offset = "0x10E59D0", VA = "0x10E59D0")]
	private static void HandleInputMouse(ref Vector3 move)
	{
	}

	[Token(Token = "0x6000EB5")]
	[Address(RVA = "0x10E5B84", Offset = "0x10E5B84", VA = "0x10E5B84")]
	public static void AddListener(OVRTouchpadCallback<TouchEvent> handler)
	{
	}
}
[Token(Token = "0x20001C3")]
public sealed class OVRTouchpadHelper : MonoBehaviour
{
	[Token(Token = "0x6000EB7")]
	[Address(RVA = "0x10E5CF0", Offset = "0x10E5CF0", VA = "0x10E5CF0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000EB8")]
	[Address(RVA = "0x10E5D6C", Offset = "0x10E5D6C", VA = "0x10E5D6C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000EB9")]
	[Address(RVA = "0x10E5E04", Offset = "0x10E5E04", VA = "0x10E5E04")]
	private void Update()
	{
	}

	[Token(Token = "0x6000EBA")]
	[Address(RVA = "0x10E5E60", Offset = "0x10E5E60", VA = "0x10E5E60")]
	public void OnDisable()
	{
	}

	[Token(Token = "0x6000EBB")]
	[Address(RVA = "0x10E5EC4", Offset = "0x10E5EC4", VA = "0x10E5EC4")]
	private void LocalTouchEventCallback(OVRTouchpad.TouchEvent touchEvent)
	{
	}

	[Token(Token = "0x6000EBC")]
	[Address(RVA = "0x10E5EC8", Offset = "0x10E5EC8", VA = "0x10E5EC8")]
	public OVRTouchpadHelper()
	{
	}
}
[Token(Token = "0x20001C4")]
public class OVRLipSync : MonoBehaviour
{
	[Token(Token = "0x20003BF")]
	public enum Result
	{
		[Token(Token = "0x40017C7")]
		Success = 0,
		[Token(Token = "0x40017C8")]
		Unknown = -2200,
		[Token(Token = "0x40017C9")]
		CannotCreateContext = -2201,
		[Token(Token = "0x40017CA")]
		InvalidParam = -2202,
		[Token(Token = "0x40017CB")]
		BadSampleRate = -2203,
		[Token(Token = "0x40017CC")]
		MissingDLL = -2204,
		[Token(Token = "0x40017CD")]
		BadVersion = -2205,
		[Token(Token = "0x40017CE")]
		UndefinedFunction = -2206
	}

	[Token(Token = "0x20003C0")]
	public enum AudioDataType
	{
		[Token(Token = "0x40017D0")]
		S16_Mono,
		[Token(Token = "0x40017D1")]
		S16_Stereo,
		[Token(Token = "0x40017D2")]
		F32_Mono,
		[Token(Token = "0x40017D3")]
		F32_Stereo
	}

	[Token(Token = "0x20003C1")]
	public enum Viseme
	{
		[Token(Token = "0x40017D5")]
		sil,
		[Token(Token = "0x40017D6")]
		PP,
		[Token(Token = "0x40017D7")]
		FF,
		[Token(Token = "0x40017D8")]
		TH,
		[Token(Token = "0x40017D9")]
		DD,
		[Token(Token = "0x40017DA")]
		kk,
		[Token(Token = "0x40017DB")]
		CH,
		[Token(Token = "0x40017DC")]
		SS,
		[Token(Token = "0x40017DD")]
		nn,
		[Token(Token = "0x40017DE")]
		RR,
		[Token(Token = "0x40017DF")]
		aa,
		[Token(Token = "0x40017E0")]
		E,
		[Token(Token = "0x40017E1")]
		ih,
		[Token(Token = "0x40017E2")]
		oh,
		[Token(Token = "0x40017E3")]
		ou
	}

	[Token(Token = "0x20003C2")]
	public enum Signals
	{
		[Token(Token = "0x40017E5")]
		VisemeOn,
		[Token(Token = "0x40017E6")]
		VisemeOff,
		[Token(Token = "0x40017E7")]
		VisemeAmount,
		[Token(Token = "0x40017E8")]
		VisemeSmoothing,
		[Token(Token = "0x40017E9")]
		LaughterAmount
	}

	[Token(Token = "0x20003C3")]
	public enum ContextProviders
	{
		[Token(Token = "0x40017EB")]
		Original,
		[Token(Token = "0x40017EC")]
		Enhanced,
		[Token(Token = "0x40017ED")]
		Enhanced_with_Laughter
	}

	[Serializable]
	[Token(Token = "0x20003C4")]
	public class Frame
	{
		[Token(Token = "0x40017EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int frameNumber;

		[Token(Token = "0x40017EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int frameDelay;

		[Token(Token = "0x40017F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float[] Visemes;

		[Token(Token = "0x40017F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float laughterScore;

		[Token(Token = "0x6001788")]
		[Address(RVA = "0x11F2448", Offset = "0x11F2448", VA = "0x11F2448")]
		public void CopyInput(Frame input)
		{
		}

		[Token(Token = "0x6001789")]
		[Address(RVA = "0x11F24A0", Offset = "0x11F24A0", VA = "0x11F24A0")]
		public void Reset()
		{
		}

		[Token(Token = "0x600178A")]
		[Address(RVA = "0x11F2530", Offset = "0x11F2530", VA = "0x11F2530")]
		public Frame()
		{
		}
	}

	[Token(Token = "0x4000D3D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static readonly int VisemeCount;

	[Token(Token = "0x4000D3E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public static readonly int SignalCount;

	[Token(Token = "0x4000D3F")]
	public const string strOVRLS = "OVRLipSync";

	[Token(Token = "0x4000D40")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static Result sInitialized;

	[Token(Token = "0x4000D41")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static OVRLipSync sInstance;

	[PreserveSig]
	[Token(Token = "0x6000EBD")]
	[Address(RVA = "0x11F0DDC", Offset = "0x11F0DDC", VA = "0x11F0DDC")]
	private static extern int ovrLipSyncDll_Initialize(int samplerate, int buffersize);

	[PreserveSig]
	[Token(Token = "0x6000EBE")]
	[Address(RVA = "0x11F0E6C", Offset = "0x11F0E6C", VA = "0x11F0E6C")]
	private static extern void ovrLipSyncDll_Shutdown();

	[PreserveSig]
	[Token(Token = "0x6000EBF")]
	[Address(RVA = "0x11F0EDC", Offset = "0x11F0EDC", VA = "0x11F0EDC")]
	private static extern IntPtr ovrLipSyncDll_GetVersion(ref int Major, ref int Minor, ref int Patch);

	[PreserveSig]
	[Token(Token = "0x6000EC0")]
	[Address(RVA = "0x11F0F70", Offset = "0x11F0F70", VA = "0x11F0F70")]
	private static extern int ovrLipSyncDll_CreateContextEx(ref uint context, ContextProviders provider, int sampleRate, bool enableAcceleration);

	[PreserveSig]
	[Token(Token = "0x6000EC1")]
	[Address(RVA = "0x11F1018", Offset = "0x11F1018", VA = "0x11F1018")]
	private static extern int ovrLipSyncDll_CreateContextWithModelFile(ref uint context, ContextProviders provider, string modelPath, int sampleRate, bool enableAcceleration);

	[PreserveSig]
	[Token(Token = "0x6000EC2")]
	[Address(RVA = "0x11F10E4", Offset = "0x11F10E4", VA = "0x11F10E4")]
	private static extern int ovrLipSyncDll_DestroyContext(uint context);

	[PreserveSig]
	[Token(Token = "0x6000EC3")]
	[Address(RVA = "0x11F1164", Offset = "0x11F1164", VA = "0x11F1164")]
	private static extern int ovrLipSyncDll_ResetContext(uint context);

	[PreserveSig]
	[Token(Token = "0x6000EC4")]
	[Address(RVA = "0x11F11E4", Offset = "0x11F11E4", VA = "0x11F11E4")]
	private static extern int ovrLipSyncDll_SendSignal(uint context, Signals signal, int arg1, int arg2);

	[PreserveSig]
	[Token(Token = "0x6000EC5")]
	[Address(RVA = "0x11F128C", Offset = "0x11F128C", VA = "0x11F128C")]
	private static extern int ovrLipSyncDll_ProcessFrameEx(uint context, IntPtr audioBuffer, uint bufferSize, AudioDataType dataType, ref int frameNumber, ref int frameDelay, float[] visemes, int visemeCount, ref float laughterScore, float[] laughterCategories, int laughterCategoriesLength);

	[Token(Token = "0x6000EC6")]
	[Address(RVA = "0x11F1394", Offset = "0x11F1394", VA = "0x11F1394")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000EC7")]
	[Address(RVA = "0x11F1804", Offset = "0x11F1804", VA = "0x11F1804")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000EC8")]
	[Address(RVA = "0x11F16CC", Offset = "0x11F16CC", VA = "0x11F16CC")]
	public static Result Initialize()
	{
		return default(Result);
	}

	[Token(Token = "0x6000EC9")]
	[Address(RVA = "0x11F18E4", Offset = "0x11F18E4", VA = "0x11F18E4")]
	public static Result Initialize(int sampleRate, int bufferSize)
	{
		return default(Result);
	}

	[Token(Token = "0x6000ECA")]
	[Address(RVA = "0x11F19F8", Offset = "0x11F19F8", VA = "0x11F19F8")]
	public static void Shutdown()
	{
	}

	[Token(Token = "0x6000ECB")]
	[Address(RVA = "0x11F1A68", Offset = "0x11F1A68", VA = "0x11F1A68")]
	public static Result IsInitialized()
	{
		return default(Result);
	}

	[Token(Token = "0x6000ECC")]
	[Address(RVA = "0x11F1AD0", Offset = "0x11F1AD0", VA = "0x11F1AD0")]
	public static Result CreateContext(ref uint context, ContextProviders provider, int sampleRate = 0, bool enableAcceleration = false)
	{
		return default(Result);
	}

	[Token(Token = "0x6000ECD")]
	[Address(RVA = "0x11F1BF4", Offset = "0x11F1BF4", VA = "0x11F1BF4")]
	public static Result CreateContextWithModelFile(ref uint context, ContextProviders provider, string modelPath, int sampleRate = 0, bool enableAcceleration = false)
	{
		return default(Result);
	}

	[Token(Token = "0x6000ECE")]
	[Address(RVA = "0x11F1D2C", Offset = "0x11F1D2C", VA = "0x11F1D2C")]
	public static Result DestroyContext(uint context)
	{
		return default(Result);
	}

	[Token(Token = "0x6000ECF")]
	[Address(RVA = "0x11F1E0C", Offset = "0x11F1E0C", VA = "0x11F1E0C")]
	public static Result ResetContext(uint context)
	{
		return default(Result);
	}

	[Token(Token = "0x6000ED0")]
	[Address(RVA = "0x11F1EEC", Offset = "0x11F1EEC", VA = "0x11F1EEC")]
	public static Result SendSignal(uint context, Signals signal, int arg1, int arg2)
	{
		return default(Result);
	}

	[Token(Token = "0x6000ED1")]
	[Address(RVA = "0x11F1FF0", Offset = "0x11F1FF0", VA = "0x11F1FF0")]
	public static Result ProcessFrame(uint context, float[] audioBuffer, Frame frame, bool stereo = true)
	{
		return default(Result);
	}

	[Token(Token = "0x6000ED2")]
	[Address(RVA = "0x11F2194", Offset = "0x11F2194", VA = "0x11F2194")]
	public static Result ProcessFrame(uint context, short[] audioBuffer, Frame frame, bool stereo = true)
	{
		return default(Result);
	}

	[Token(Token = "0x6000ED3")]
	[Address(RVA = "0x11F2330", Offset = "0x11F2330", VA = "0x11F2330")]
	public OVRLipSync()
	{
	}
}
[Token(Token = "0x20001C5")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x6A77EC", Offset = "0x6A77EC")]
public class OVRLipSyncContext : OVRLipSyncContextBase
{
	[Token(Token = "0x4000D42")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6A99F8", Offset = "0x6A99F8")]
	public bool enableKeyboardInput;

	[Token(Token = "0x4000D43")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6A9A30", Offset = "0x6A9A30")]
	public bool enableTouchInput;

	[Token(Token = "0x4000D44")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3A")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6A9A68", Offset = "0x6A9A68")]
	public bool audioLoopback;

	[Token(Token = "0x4000D45")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6A9AA0", Offset = "0x6A9AA0")]
	public KeyCode loopbackKey;

	[Token(Token = "0x4000D46")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6A9AD8", Offset = "0x6A9AD8")]
	public bool showVisemes;

	[Token(Token = "0x4000D47")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6A9B10", Offset = "0x6A9B10")]
	public KeyCode debugVisemesKey;

	[Token(Token = "0x4000D48")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6A9B48", Offset = "0x6A9B48")]
	public bool skipAudioSource;

	[Token(Token = "0x4000D49")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6A9B80", Offset = "0x6A9B80")]
	public float gain;

	[Token(Token = "0x4000D4A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool hasDebugConsole;

	[Token(Token = "0x4000D4B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public KeyCode debugLaughterKey;

	[Token(Token = "0x4000D4C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public bool showLaughter;

	[Token(Token = "0x4000D4D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public float laughterScore;

	[Token(Token = "0x6000ED5")]
	[Address(RVA = "0x11F25B8", Offset = "0x11F25B8", VA = "0x11F25B8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000ED6")]
	[Address(RVA = "0x11F26E4", Offset = "0x11F26E4", VA = "0x11F26E4")]
	private void HandleKeyboard()
	{
	}

	[Token(Token = "0x6000ED7")]
	[Address(RVA = "0x11F2C30", Offset = "0x11F2C30", VA = "0x11F2C30")]
	private void Update()
	{
	}

	[Token(Token = "0x6000ED8")]
	[Address(RVA = "0x11F2EDC", Offset = "0x11F2EDC", VA = "0x11F2EDC")]
	public void PreprocessAudioSamples(float[] data, int channels)
	{
	}

	[Token(Token = "0x6000ED9")]
	[Address(RVA = "0x11F2F40", Offset = "0x11F2F40", VA = "0x11F2F40")]
	public void PostprocessAudioSamples(float[] data, int channels)
	{
	}

	[Token(Token = "0x6000EDA")]
	[Address(RVA = "0x11F2FAC", Offset = "0x11F2FAC", VA = "0x11F2FAC")]
	public void ProcessAudioSamplesRaw(float[] data, int channels)
	{
	}

	[Token(Token = "0x6000EDB")]
	[Address(RVA = "0x11F3110", Offset = "0x11F3110", VA = "0x11F3110")]
	public void ProcessAudioSamplesRaw(short[] data, int channels)
	{
	}

	[Token(Token = "0x6000EDC")]
	[Address(RVA = "0x11F3274", Offset = "0x11F3274", VA = "0x11F3274")]
	public void ProcessAudioSamples(float[] data, int channels)
	{
	}

	[Token(Token = "0x6000EDD")]
	[Address(RVA = "0x11F33A8", Offset = "0x11F33A8", VA = "0x11F33A8")]
	private void OnAudioFilterRead(float[] data, int channels)
	{
	}

	[Token(Token = "0x6000EDE")]
	[Address(RVA = "0x11F2C74", Offset = "0x11F2C74", VA = "0x11F2C74")]
	private void DebugShowVisemesAndLaughter()
	{
	}

	[Token(Token = "0x6000EDF")]
	[Address(RVA = "0x11F29F4", Offset = "0x11F29F4", VA = "0x11F29F4")]
	private void ToggleAudioLoopback()
	{
	}

	[Token(Token = "0x6000EE0")]
	[Address(RVA = "0x11F33B8", Offset = "0x11F33B8", VA = "0x11F33B8")]
	private void LocalTouchEventCallback(OVRTouchpad.TouchEvent touchEvent)
	{
	}

	[Token(Token = "0x6000EE1")]
	[Address(RVA = "0x11F34E4", Offset = "0x11F34E4", VA = "0x11F34E4")]
	public OVRLipSyncContext()
	{
	}
}
[Token(Token = "0x20001C6")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x6A7850", Offset = "0x6A7850")]
public class OVRLipSyncContextBase : MonoBehaviour
{
	[Token(Token = "0x4000D4E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioSource audioSource;

	[Token(Token = "0x4000D4F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6A9BB8", Offset = "0x6A9BB8")]
	public OVRLipSync.ContextProviders provider;

	[Token(Token = "0x4000D50")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6A9BF0", Offset = "0x6A9BF0")]
	public bool enableAcceleration;

	[Token(Token = "0x4000D51")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private OVRLipSync.Frame frame;

	[Token(Token = "0x4000D52")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private uint context;

	[Token(Token = "0x4000D53")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private int _smoothing;

	[Token(Token = "0x1700029A")]
	public int Smoothing
	{
		[Token(Token = "0x6000EE3")]
		[Address(RVA = "0x11F3664", Offset = "0x11F3664", VA = "0x11F3664")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000EE2")]
		[Address(RVA = "0x11F3578", Offset = "0x11F3578", VA = "0x11F3578")]
		set
		{
		}
	}

	[Token(Token = "0x1700029B")]
	public uint Context
	{
		[Token(Token = "0x6000EE4")]
		[Address(RVA = "0x11F366C", Offset = "0x11F366C", VA = "0x11F366C")]
		get
		{
			return default(uint);
		}
	}

	[Token(Token = "0x1700029C")]
	protected OVRLipSync.Frame Frame
	{
		[Token(Token = "0x6000EE5")]
		[Address(RVA = "0x11F3674", Offset = "0x11F3674", VA = "0x11F3674")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000EE6")]
	[Address(RVA = "0x11F367C", Offset = "0x11F367C", VA = "0x11F367C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000EE7")]
	[Address(RVA = "0x11F380C", Offset = "0x11F380C", VA = "0x11F380C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000EE8")]
	[Address(RVA = "0x11F3928", Offset = "0x11F3928", VA = "0x11F3928")]
	public OVRLipSync.Frame GetCurrentPhonemeFrame()
	{
		return null;
	}

	[Token(Token = "0x6000EE9")]
	[Address(RVA = "0x11F3930", Offset = "0x11F3930", VA = "0x11F3930")]
	public void SetVisemeBlend(int viseme, int amount)
	{
	}

	[Token(Token = "0x6000EEA")]
	[Address(RVA = "0x11F3A24", Offset = "0x11F3A24", VA = "0x11F3A24")]
	public void SetLaughterBlend(int amount)
	{
	}

	[Token(Token = "0x6000EEB")]
	[Address(RVA = "0x11F3AEC", Offset = "0x11F3AEC", VA = "0x11F3AEC")]
	public OVRLipSync.Result ResetContext()
	{
		return default(OVRLipSync.Result);
	}

	[Token(Token = "0x6000EEC")]
	[Address(RVA = "0x11F3508", Offset = "0x11F3508", VA = "0x11F3508")]
	public OVRLipSyncContextBase()
	{
	}
}
[Token(Token = "0x20001C7")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x6A78B4", Offset = "0x6A78B4")]
public class OVRLipSyncContextCanned : OVRLipSyncContextBase
{
	[Token(Token = "0x4000D54")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6A9C28", Offset = "0x6A9C28")]
	public OVRLipSyncSequence currentSequence;

	[Token(Token = "0x6000EED")]
	[Address(RVA = "0x11F3B64", Offset = "0x11F3B64", VA = "0x11F3B64")]
	private void Update()
	{
	}

	[Token(Token = "0x6000EEE")]
	[Address(RVA = "0x11F3CD4", Offset = "0x11F3CD4", VA = "0x11F3CD4")]
	public OVRLipSyncContextCanned()
	{
	}
}
[Token(Token = "0x20001C8")]
public class OVRLipSyncContextMorphTarget : MonoBehaviour
{
	[Token(Token = "0x4000D55")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6A9C60", Offset = "0x6A9C60")]
	public SkinnedMeshRenderer skinnedMeshRenderer;

	[Token(Token = "0x4000D56")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6A9C98", Offset = "0x6A9C98")]
	public int[] visemeToBlendTargets;

	[Token(Token = "0x4000D57")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6A9CD0", Offset = "0x6A9CD0")]
	public bool enableVisemeTestKeys;

	[Token(Token = "0x4000D58")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6A9D08", Offset = "0x6A9D08")]
	public KeyCode[] visemeTestKeys;

	[Token(Token = "0x4000D59")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6A9D40", Offset = "0x6A9D40")]
	public KeyCode laughterKey;

	[Token(Token = "0x4000D5A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6A9D78", Offset = "0x6A9D78")]
	public int laughterBlendTarget;

	[Token(Token = "0x4000D5B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x6A9DB0", Offset = "0x6A9DB0")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6A9DB0", Offset = "0x6A9DB0")]
	public float laughterThreshold;

	[Token(Token = "0x4000D5C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x6A9E04", Offset = "0x6A9E04")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6A9E04", Offset = "0x6A9E04")]
	public float laughterMultiplier;

	[Token(Token = "0x4000D5D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x6A9E58", Offset = "0x6A9E58")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6A9E58", Offset = "0x6A9E58")]
	public int smoothAmount;

	[Token(Token = "0x4000D5E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private OVRLipSyncContextBase lipsyncContext;

	[Token(Token = "0x6000EEF")]
	[Address(RVA = "0x11F3CD8", Offset = "0x11F3CD8", VA = "0x11F3CD8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000EF0")]
	[Address(RVA = "0x11F3E1C", Offset = "0x11F3E1C", VA = "0x11F3E1C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000EF1")]
	[Address(RVA = "0x11F40CC", Offset = "0x11F40CC", VA = "0x11F40CC")]
	private void CheckForKeys()
	{
	}

	[Token(Token = "0x6000EF2")]
	[Address(RVA = "0x11F3F28", Offset = "0x11F3F28", VA = "0x11F3F28")]
	private void SetVisemeToMorphTarget(OVRLipSync.Frame frame)
	{
	}

	[Token(Token = "0x6000EF3")]
	[Address(RVA = "0x11F3FDC", Offset = "0x11F3FDC", VA = "0x11F3FDC")]
	private void SetLaughterToMorphTarget(OVRLipSync.Frame frame)
	{
	}

	[Token(Token = "0x6000EF4")]
	[Address(RVA = "0x11F419C", Offset = "0x11F419C", VA = "0x11F419C")]
	private void CheckVisemeKey(KeyCode key, int viseme, int amount)
	{
	}

	[Token(Token = "0x6000EF5")]
	[Address(RVA = "0x11F4260", Offset = "0x11F4260", VA = "0x11F4260")]
	private void CheckLaughterKey()
	{
	}

	[Token(Token = "0x6000EF6")]
	[Address(RVA = "0x11F42C8", Offset = "0x11F42C8", VA = "0x11F42C8")]
	public OVRLipSyncContextMorphTarget()
	{
	}
}
[Token(Token = "0x20001C9")]
public class OVRLipSyncContextTextureFlip : MonoBehaviour
{
	[Token(Token = "0x4000D5F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Material material;

	[Token(Token = "0x4000D60")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6A9EB0", Offset = "0x6A9EB0")]
	[AttributeAttribute(Name = "OVRNamedArrayAttribute", RVA = "0x6A9EB0", Offset = "0x6A9EB0")]
	public Texture[] Textures;

	[Token(Token = "0x4000D61")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x6AA02C", Offset = "0x6AA02C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6AA02C", Offset = "0x6AA02C")]
	public int smoothAmount;

	[Token(Token = "0x4000D62")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private OVRLipSyncContextBase lipsyncContext;

	[Token(Token = "0x4000D63")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private OVRLipSync.Frame oldFrame;

	[Token(Token = "0x6000EF7")]
	[Address(RVA = "0x11F43C0", Offset = "0x11F43C0", VA = "0x11F43C0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000EF8")]
	[Address(RVA = "0x11F4514", Offset = "0x11F4514", VA = "0x11F4514")]
	private void Update()
	{
	}

	[Token(Token = "0x6000EF9")]
	[Address(RVA = "0x11F46B8", Offset = "0x11F46B8", VA = "0x11F46B8")]
	private void SetVisemeToTexture()
	{
	}

	[Token(Token = "0x6000EFA")]
	[Address(RVA = "0x11F47DC", Offset = "0x11F47DC", VA = "0x11F47DC")]
	public OVRLipSyncContextTextureFlip()
	{
	}
}
[Token(Token = "0x20001CA")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x6A7918", Offset = "0x6A7918")]
public class OVRLipSyncMicInput : MonoBehaviour
{
	[Token(Token = "0x20003C5")]
	public enum micActivation
	{
		[Token(Token = "0x40017F3")]
		HoldToSpeak,
		[Token(Token = "0x40017F4")]
		PushToSpeak,
		[Token(Token = "0x40017F5")]
		ConstantSpeak
	}

	[Token(Token = "0x4000D64")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6AA084", Offset = "0x6AA084")]
	public AudioSource audioSource;

	[Token(Token = "0x4000D65")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6AA0BC", Offset = "0x6AA0BC")]
	public bool enableMicSelectionGUI;

	[Token(Token = "0x4000D66")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6AA0F4", Offset = "0x6AA0F4")]
	public KeyCode micSelectionGUIKey;

	[Token(Token = "0x4000D67")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x6AA12C", Offset = "0x6AA12C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6AA12C", Offset = "0x6AA12C")]
	private float micInputVolume;

	[Token(Token = "0x4000D68")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[SerializeField]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6AA194", Offset = "0x6AA194")]
	private int micFrequency;

	[Token(Token = "0x4000D69")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6AA1E0", Offset = "0x6AA1E0")]
	public micActivation micControl;

	[Token(Token = "0x4000D6A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6AA218", Offset = "0x6AA218")]
	public KeyCode micActivationKey;

	[Token(Token = "0x4000D6B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6AA250", Offset = "0x6AA250")]
	public string selectedDevice;

	[Token(Token = "0x4000D6C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool micSelected;

	[Token(Token = "0x4000D6D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private int minFreq;

	[Token(Token = "0x4000D6E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private int maxFreq;

	[Token(Token = "0x4000D6F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private bool focused;

	[Token(Token = "0x4000D70")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4D")]
	private bool initialized;

	[Token(Token = "0x1700029D")]
	public float MicFrequency
	{
		[Token(Token = "0x6000EFB")]
		[Address(RVA = "0x11F51F8", Offset = "0x11F51F8", VA = "0x11F51F8")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000EFC")]
		[Address(RVA = "0x11F5204", Offset = "0x11F5204", VA = "0x11F5204")]
		set
		{
		}
	}

	[Token(Token = "0x6000EFD")]
	[Address(RVA = "0x11F5290", Offset = "0x11F5290", VA = "0x11F5290")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000EFE")]
	[Address(RVA = "0x11F5350", Offset = "0x11F5350", VA = "0x11F5350")]
	private void Start()
	{
	}

	[Token(Token = "0x6000EFF")]
	[Address(RVA = "0x11F539C", Offset = "0x11F539C", VA = "0x11F539C")]
	private void InitializeMicrophone()
	{
	}

	[Token(Token = "0x6000F00")]
	[Address(RVA = "0x11F54E0", Offset = "0x11F54E0", VA = "0x11F54E0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000F01")]
	[Address(RVA = "0x11F5918", Offset = "0x11F5918", VA = "0x11F5918")]
	private void OnApplicationFocus(bool focus)
	{
	}

	[Token(Token = "0x6000F02")]
	[Address(RVA = "0x11F592C", Offset = "0x11F592C", VA = "0x11F592C")]
	private void OnApplicationPause(bool pauseStatus)
	{
	}

	[Token(Token = "0x6000F03")]
	[Address(RVA = "0x11F5944", Offset = "0x11F5944", VA = "0x11F5944")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000F04")]
	[Address(RVA = "0x11F5948", Offset = "0x11F5948", VA = "0x11F5948")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x6000F05")]
	[Address(RVA = "0x11F59C0", Offset = "0x11F59C0", VA = "0x11F59C0")]
	public void MicDeviceGUI(float left, float top, float width, float height, float buttonSpaceTop, float buttonSpaceLeft)
	{
	}

	[Token(Token = "0x6000F06")]
	[Address(RVA = "0x11F5424", Offset = "0x11F5424", VA = "0x11F5424")]
	public void GetMicCaps()
	{
	}

	[Token(Token = "0x6000F07")]
	[Address(RVA = "0x11F5784", Offset = "0x11F5784", VA = "0x11F5784")]
	public void StartMicrophone()
	{
	}

	[Token(Token = "0x6000F08")]
	[Address(RVA = "0x11F563C", Offset = "0x11F563C", VA = "0x11F563C")]
	public void StopMicrophone()
	{
	}

	[Token(Token = "0x6000F09")]
	[Address(RVA = "0x11F5BA0", Offset = "0x11F5BA0", VA = "0x11F5BA0")]
	private float GetAveragedVolume()
	{
		return default(float);
	}

	[Token(Token = "0x6000F0A")]
	[Address(RVA = "0x11F5BA8", Offset = "0x11F5BA8", VA = "0x11F5BA8")]
	public OVRLipSyncMicInput()
	{
	}
}
[Serializable]
[Token(Token = "0x20001CB")]
public class OVRLipSyncSequence : ScriptableObject
{
	[Token(Token = "0x4000D71")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<OVRLipSync.Frame> entries;

	[Token(Token = "0x4000D72")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float length;

	[Token(Token = "0x6000F0B")]
	[Address(RVA = "0x11F3C30", Offset = "0x11F3C30", VA = "0x11F3C30")]
	public OVRLipSync.Frame GetFrameAtTime(float time)
	{
		return null;
	}

	[Token(Token = "0x6000F0C")]
	[Address(RVA = "0x11F5BD8", Offset = "0x11F5BD8", VA = "0x11F5BD8")]
	public OVRLipSyncSequence()
	{
	}
}
[Token(Token = "0x20001CC")]
public class DebugUIBuilder : MonoBehaviour
{
	[Token(Token = "0x20003C6")]
	public delegate void OnClick();

	[Token(Token = "0x20003C7")]
	public delegate void OnToggleValueChange(Toggle t);

	[Token(Token = "0x20003C8")]
	public delegate void OnSlider(float f);

	[Token(Token = "0x20003C9")]
	public delegate bool ActiveUpdate();

	[Token(Token = "0x20003CA")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6A8484", Offset = "0x6A8484")]
	private sealed class <>c__DisplayClass35_0
	{
		[Token(Token = "0x40017F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public OnClick handler;

		[Token(Token = "0x600179B")]
		[Address(RVA = "0x102D594", Offset = "0x102D594", VA = "0x102D594")]
		public <>c__DisplayClass35_0()
		{
		}

		[Token(Token = "0x600179C")]
		[Address(RVA = "0x102DF34", Offset = "0x102DF34", VA = "0x102DF34")]
		internal void <AddButton>b__0()
		{
		}
	}

	[Token(Token = "0x20003CB")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6A8494", Offset = "0x6A8494")]
	private sealed class <>c__DisplayClass37_0
	{
		[Token(Token = "0x40017F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public OnSlider onValueChanged;

		[Token(Token = "0x600179D")]
		[Address(RVA = "0x102D808", Offset = "0x102D808", VA = "0x102D808")]
		public <>c__DisplayClass37_0()
		{
		}

		[Token(Token = "0x600179E")]
		[Address(RVA = "0x102E158", Offset = "0x102E158", VA = "0x102E158")]
		internal void <AddSlider>b__0(float f)
		{
		}
	}

	[Token(Token = "0x20003CC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6A84A4", Offset = "0x6A84A4")]
	private sealed class <>c__DisplayClass39_0
	{
		[Token(Token = "0x40017F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public OnToggleValueChange onValueChanged;

		[Token(Token = "0x40017F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Toggle t;

		[Token(Token = "0x600179F")]
		[Address(RVA = "0x102DA20", Offset = "0x102DA20", VA = "0x102DA20")]
		public <>c__DisplayClass39_0()
		{
		}

		[Token(Token = "0x60017A0")]
		[Address(RVA = "0x102E3D0", Offset = "0x102E3D0", VA = "0x102E3D0")]
		internal void <AddToggle>b__0(bool <p0>)
		{
		}
	}

	[Token(Token = "0x20003CD")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6A84B4", Offset = "0x6A84B4")]
	private sealed class <>c__DisplayClass40_0
	{
		[Token(Token = "0x40017FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public OnToggleValueChange onValueChanged;

		[Token(Token = "0x40017FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Toggle t;

		[Token(Token = "0x60017A1")]
		[Address(RVA = "0x102DBB4", Offset = "0x102DBB4", VA = "0x102DBB4")]
		public <>c__DisplayClass40_0()
		{
		}

		[Token(Token = "0x60017A2")]
		[Address(RVA = "0x102E784", Offset = "0x102E784", VA = "0x102E784")]
		internal void <AddToggle>b__0(bool <p0>)
		{
		}
	}

	[Token(Token = "0x20003CE")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6A84C4", Offset = "0x6A84C4")]
	private sealed class <>c__DisplayClass41_0
	{
		[Token(Token = "0x40017FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public OnToggleValueChange handler;

		[Token(Token = "0x40017FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Toggle tb;

		[Token(Token = "0x60017A3")]
		[Address(RVA = "0x102DE0C", Offset = "0x102DE0C", VA = "0x102DE0C")]
		public <>c__DisplayClass41_0()
		{
		}

		[Token(Token = "0x60017A4")]
		[Address(RVA = "0x102E7A4", Offset = "0x102E7A4", VA = "0x102E7A4")]
		internal void <AddRadio>b__0(bool <p0>)
		{
		}
	}

	[Token(Token = "0x4000D73")]
	public const int DEBUG_PANE_CENTER = 0;

	[Token(Token = "0x4000D74")]
	public const int DEBUG_PANE_RIGHT = 1;

	[Token(Token = "0x4000D75")]
	public const int DEBUG_PANE_LEFT = 2;

	[Token(Token = "0x4000D76")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private RectTransform buttonPrefab;

	[Token(Token = "0x4000D77")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private RectTransform labelPrefab;

	[Token(Token = "0x4000D78")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private RectTransform sliderPrefab;

	[Token(Token = "0x4000D79")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private RectTransform dividerPrefab;

	[Token(Token = "0x4000D7A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private RectTransform togglePrefab;

	[Token(Token = "0x4000D7B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private RectTransform radioPrefab;

	[Token(Token = "0x4000D7C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private GameObject uiHelpersToInstantiate;

	[Token(Token = "0x4000D7D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private Transform[] targetContentPanels;

	[Token(Token = "0x4000D7E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool[] reEnable;

	[Token(Token = "0x4000D7F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private List<GameObject> toEnable;

	[Token(Token = "0x4000D80")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private List<GameObject> toDisable;

	[Token(Token = "0x4000D81")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static DebugUIBuilder instance;

	[Token(Token = "0x4000D82")]
	private const float elementSpacing = 16f;

	[Token(Token = "0x4000D83")]
	private const float marginH = 16f;

	[Token(Token = "0x4000D84")]
	private const float marginV = 16f;

	[Token(Token = "0x4000D85")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Vector2[] insertPositions;

	[Token(Token = "0x4000D86")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private List<RectTransform>[] insertedElements;

	[Token(Token = "0x4000D87")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Vector3 menuOffset;

	[Token(Token = "0x4000D88")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private OVRCameraRig rig;

	[Token(Token = "0x4000D89")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private Dictionary<string, ToggleGroup> radioGroups;

	[Token(Token = "0x4000D8A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private LaserPointer lp;

	[Token(Token = "0x4000D8B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private LineRenderer lr;

	[Token(Token = "0x4000D8C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public LaserPointer.LaserBeamBehavior laserBeamBehavior;

	[Token(Token = "0x6000F0D")]
	[Address(RVA = "0x102C540", Offset = "0x102C540", VA = "0x102C540")]
	public void Awake()
	{
	}

	[Token(Token = "0x6000F0E")]
	[Address(RVA = "0x102C944", Offset = "0x102C944", VA = "0x102C944")]
	public void Show()
	{
	}

	[Token(Token = "0x6000F0F")]
	[Address(RVA = "0x102CF10", Offset = "0x102CF10", VA = "0x102CF10")]
	public void Hide()
	{
	}

	[Token(Token = "0x6000F10")]
	[Address(RVA = "0x102CCBC", Offset = "0x102CCBC", VA = "0x102CCBC")]
	private void Relayout()
	{
	}

	[Token(Token = "0x6000F11")]
	[Address(RVA = "0x102D0B8", Offset = "0x102D0B8", VA = "0x102D0B8")]
	private void AddRect(RectTransform r, int targetCanvas)
	{
	}

	[Token(Token = "0x6000F12")]
	[Address(RVA = "0x102D36C", Offset = "0x102D36C", VA = "0x102D36C")]
	public RectTransform AddButton(string label, OnClick handler, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x6000F13")]
	[Address(RVA = "0x102D59C", Offset = "0x102D59C", VA = "0x102D59C")]
	public RectTransform AddLabel(string label, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x6000F14")]
	[Address(RVA = "0x102D680", Offset = "0x102D680", VA = "0x102D680")]
	public RectTransform AddSlider(string label, float min, float max, OnSlider onValueChanged, bool wholeNumbersOnly = false, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x6000F15")]
	[Address(RVA = "0x102D810", Offset = "0x102D810", VA = "0x102D810")]
	public RectTransform AddDivider(int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x6000F16")]
	[Address(RVA = "0x102D8AC", Offset = "0x102D8AC", VA = "0x102D8AC")]
	public RectTransform AddToggle(string label, OnToggleValueChange onValueChanged, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x6000F17")]
	[Address(RVA = "0x102DA28", Offset = "0x102DA28", VA = "0x102DA28")]
	public RectTransform AddToggle(string label, OnToggleValueChange onValueChanged, bool defaultValue, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x6000F18")]
	[Address(RVA = "0x102DBBC", Offset = "0x102DBBC", VA = "0x102DBBC")]
	public RectTransform AddRadio(string label, string group, OnToggleValueChange handler, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x6000F19")]
	[Address(RVA = "0x102DE14", Offset = "0x102DE14", VA = "0x102DE14")]
	public void ToggleLaserPointer(bool isOn)
	{
	}

	[Token(Token = "0x6000F1A")]
	[Address(RVA = "0x102DEC4", Offset = "0x102DEC4", VA = "0x102DEC4")]
	public DebugUIBuilder()
	{
	}
}
[Token(Token = "0x20001CD")]
public class HandedInputSelector : MonoBehaviour
{
	[Token(Token = "0x4000D8D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private OVRCameraRig m_CameraRig;

	[Token(Token = "0x4000D8E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private OVRInputModule m_InputModule;

	[Token(Token = "0x6000F1B")]
	[Address(RVA = "0x1062F88", Offset = "0x1062F88", VA = "0x1062F88")]
	private void Start()
	{
	}

	[Token(Token = "0x6000F1C")]
	[Address(RVA = "0x1063010", Offset = "0x1063010", VA = "0x1063010")]
	private void Update()
	{
	}

	[Token(Token = "0x6000F1D")]
	[Address(RVA = "0x10630D8", Offset = "0x10630D8", VA = "0x10630D8")]
	private void SetActiveController(OVRInput.Controller c)
	{
	}

	[Token(Token = "0x6000F1E")]
	[Address(RVA = "0x1063114", Offset = "0x1063114", VA = "0x1063114")]
	public HandedInputSelector()
	{
	}
}
[Token(Token = "0x20001CE")]
public class LaserPointer : OVRCursor
{
	[Token(Token = "0x20003CF")]
	public enum LaserBeamBehavior
	{
		[Token(Token = "0x40017FF")]
		On,
		[Token(Token = "0x4001800")]
		Off,
		[Token(Token = "0x4001801")]
		OnWhenHitTarget
	}

	[Token(Token = "0x4000D8F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject cursorVisual;

	[Token(Token = "0x4000D90")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float maxLength;

	[Token(Token = "0x4000D91")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private LaserBeamBehavior _laserBeamBehavior;

	[Token(Token = "0x4000D92")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool m_restoreOnInputAcquired;

	[Token(Token = "0x4000D93")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private Vector3 _startPoint;

	[Token(Token = "0x4000D94")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Vector3 _forward;

	[Token(Token = "0x4000D95")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private Vector3 _endPoint;

	[Token(Token = "0x4000D96")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool _hitTarget;

	[Token(Token = "0x4000D97")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private LineRenderer lineRenderer;

	[Token(Token = "0x1700029E")]
	public LaserBeamBehavior laserBeamBehavior
	{
		[Token(Token = "0x6000F20")]
		[Address(RVA = "0x1090B20", Offset = "0x1090B20", VA = "0x1090B20")]
		get
		{
			return default(LaserBeamBehavior);
		}
		[Token(Token = "0x6000F1F")]
		[Address(RVA = "0x1090ADC", Offset = "0x1090ADC", VA = "0x1090ADC")]
		set
		{
		}
	}

	[Token(Token = "0x6000F21")]
	[Address(RVA = "0x1090B28", Offset = "0x1090B28", VA = "0x1090B28")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000F22")]
	[Address(RVA = "0x1090B80", Offset = "0x1090B80", VA = "0x1090B80")]
	private void Start()
	{
	}

	[Token(Token = "0x6000F23")]
	[Address(RVA = "0x1090C98", Offset = "0x1090C98", VA = "0x1090C98", Slot = "5")]
	public override void SetCursorStartDest(Vector3 start, Vector3 dest, Vector3 normal)
	{
	}

	[Token(Token = "0x6000F24")]
	[Address(RVA = "0x1090CB4", Offset = "0x1090CB4", VA = "0x1090CB4", Slot = "4")]
	public override void SetCursorRay(Transform t)
	{
	}

	[Token(Token = "0x6000F25")]
	[Address(RVA = "0x1090D08", Offset = "0x1090D08", VA = "0x1090D08")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000F26")]
	[Address(RVA = "0x1090F64", Offset = "0x1090F64", VA = "0x1090F64")]
	private void UpdateLaserBeam(Vector3 start, Vector3 end)
	{
	}

	[Token(Token = "0x6000F27")]
	[Address(RVA = "0x1091078", Offset = "0x1091078", VA = "0x1091078")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000F28")]
	[Address(RVA = "0x109110C", Offset = "0x109110C", VA = "0x109110C")]
	public void OnInputFocusLost()
	{
	}

	[Token(Token = "0x6000F29")]
	[Address(RVA = "0x10911DC", Offset = "0x10911DC", VA = "0x10911DC")]
	public void OnInputFocusAcquired()
	{
	}

	[Token(Token = "0x6000F2A")]
	[Address(RVA = "0x1091294", Offset = "0x1091294", VA = "0x1091294")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000F2B")]
	[Address(RVA = "0x1091360", Offset = "0x1091360", VA = "0x1091360")]
	public LaserPointer()
	{
	}
}
[Token(Token = "0x20001CF")]
public class CharacterCameraConstraint : MonoBehaviour
{
	[Token(Token = "0x4000D98")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6AA328", Offset = "0x6AA328")]
	public OVRCameraRig CameraRig;

	[Token(Token = "0x4000D99")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6AA360", Offset = "0x6AA360")]
	public bool EnableCollision;

	[Token(Token = "0x4000D9A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public LayerMask CollideLayers;

	[Token(Token = "0x4000D9B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6AA398", Offset = "0x6AA398")]
	public float MaxFade;

	[Token(Token = "0x4000D9C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6AA3D0", Offset = "0x6AA3D0")]
	public float FadeMinDistance;

	[Token(Token = "0x4000D9D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float PreferredHeight;

	[Token(Token = "0x4000D9E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6AA408", Offset = "0x6AA408")]
	public float FadeMaxDistance;

	[Token(Token = "0x4000D9F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private readonly Action _cameraUpdateAction;

	[Token(Token = "0x4000DA0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private readonly Action _preCharacterMovementAction;

	[Token(Token = "0x4000DA1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private CapsuleCollider _character;

	[Token(Token = "0x4000DA2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private SimpleCapsuleWithStickMovement _simplePlayerController;

	[Token(Token = "0x6000F2C")]
	[Address(RVA = "0x1117A18", Offset = "0x1117A18", VA = "0x1117A18")]
	private CharacterCameraConstraint()
	{
	}

	[Token(Token = "0x6000F2D")]
	[Address(RVA = "0x1117AA0", Offset = "0x1117AA0", VA = "0x1117AA0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000F2E")]
	[Address(RVA = "0x1117B10", Offset = "0x1117B10", VA = "0x1117B10")]
	private void Start()
	{
	}

	[Token(Token = "0x6000F2F")]
	[Address(RVA = "0x1117B14", Offset = "0x1117B14", VA = "0x1117B14")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000F30")]
	[Address(RVA = "0x1117B38", Offset = "0x1117B38", VA = "0x1117B38")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000F31")]
	[Address(RVA = "0x1117B5C", Offset = "0x1117B5C", VA = "0x1117B5C")]
	private void CameraUpdate()
	{
	}
}
[Token(Token = "0x20001D0")]
public class LocomotionController : MonoBehaviour
{
	[Token(Token = "0x4000DA3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OVRCameraRig CameraRig;

	[Token(Token = "0x4000DA4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public CapsuleCollider CharacterController;

	[Token(Token = "0x4000DA5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public SimpleCapsuleWithStickMovement PlayerController;

	[Token(Token = "0x6000F32")]
	[Address(RVA = "0x1095320", Offset = "0x1095320", VA = "0x1095320")]
	private void Start()
	{
	}

	[Token(Token = "0x6000F33")]
	[Address(RVA = "0x10953CC", Offset = "0x10953CC", VA = "0x10953CC")]
	public LocomotionController()
	{
	}
}
[Token(Token = "0x20001D1")]
public class LocomotionTeleport : MonoBehaviour
{
	[Token(Token = "0x20003D0")]
	public enum States
	{
		[Token(Token = "0x4001803")]
		Ready,
		[Token(Token = "0x4001804")]
		Aim,
		[Token(Token = "0x4001805")]
		CancelAim,
		[Token(Token = "0x4001806")]
		PreTeleport,
		[Token(Token = "0x4001807")]
		CancelTeleport,
		[Token(Token = "0x4001808")]
		Teleporting,
		[Token(Token = "0x4001809")]
		PostTeleport
	}

	[Token(Token = "0x20003D1")]
	public enum TeleportIntentions
	{
		[Token(Token = "0x400180B")]
		None,
		[Token(Token = "0x400180C")]
		Aim,
		[Token(Token = "0x400180D")]
		PreTeleport,
		[Token(Token = "0x400180E")]
		Teleport
	}

	[Token(Token = "0x20003D2")]
	public enum AimCollisionTypes
	{
		[Token(Token = "0x4001810")]
		Point,
		[Token(Token = "0x4001811")]
		Sphere,
		[Token(Token = "0x4001812")]
		Capsule
	}

	[Token(Token = "0x20003D3")]
	public class AimData
	{
		[Token(Token = "0x4001813")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public RaycastHit TargetHitInfo;

		[Token(Token = "0x4001814")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public bool TargetValid;

		[Token(Token = "0x4001815")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Vector3? Destination;

		[Token(Token = "0x4001816")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public float Radius;

		[Token(Token = "0x4001817")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6AD6C0", Offset = "0x6AD6C0")]
		private List<Vector3> <Points>k__BackingField;

		[Token(Token = "0x170003F6")]
		public List<Vector3> Points
		{
			[Token(Token = "0x60017A6")]
			[Address(RVA = "0x1098590", Offset = "0x1098590", VA = "0x1098590")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6B3F88", Offset = "0x6B3F88")]
			get
			{
				return null;
			}
			[Token(Token = "0x60017A7")]
			[Address(RVA = "0x1098598", Offset = "0x1098598", VA = "0x1098598")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6B3F98", Offset = "0x6B3F98")]
			private set
			{
			}
		}

		[Token(Token = "0x60017A5")]
		[Address(RVA = "0x109851C", Offset = "0x109851C", VA = "0x109851C")]
		public AimData()
		{
		}

		[Token(Token = "0x60017A8")]
		[Address(RVA = "0x10985A0", Offset = "0x10985A0", VA = "0x10985A0")]
		public void Reset()
		{
		}
	}

	[Token(Token = "0x20003D4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6A84D4", Offset = "0x6A84D4")]
	private sealed class <ReadyStateCoroutine>d__52 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001818")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001819")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400181A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x170003F7")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60017AC")]
			[Address(RVA = "0x1098368", Offset = "0x1098368", VA = "0x1098368", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003F8")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60017AE")]
			[Address(RVA = "0x10983D0", Offset = "0x10983D0", VA = "0x10983D0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60017A9")]
		[Address(RVA = "0x109686C", Offset = "0x109686C", VA = "0x109686C")]
		[DebuggerHidden]
		public <ReadyStateCoroutine>d__52(int <>1__state)
		{
		}

		[Token(Token = "0x60017AA")]
		[Address(RVA = "0x1098280", Offset = "0x1098280", VA = "0x1098280", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60017AB")]
		[Address(RVA = "0x1098284", Offset = "0x1098284", VA = "0x1098284", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60017AD")]
		[Address(RVA = "0x1098370", Offset = "0x1098370", VA = "0x1098370", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20003D5")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6A84E4", Offset = "0x6A84E4")]
	private sealed class <AimStateCoroutine>d__64 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400181B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400181C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400181D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x170003F9")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60017B2")]
			[Address(RVA = "0x1097D48", Offset = "0x1097D48", VA = "0x1097D48", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003FA")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60017B4")]
			[Address(RVA = "0x1097DB0", Offset = "0x1097DB0", VA = "0x1097DB0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60017AF")]
		[Address(RVA = "0x1096D54", Offset = "0x1096D54", VA = "0x1096D54")]
		[DebuggerHidden]
		public <AimStateCoroutine>d__64(int <>1__state)
		{
		}

		[Token(Token = "0x60017B0")]
		[Address(RVA = "0x1097C10", Offset = "0x1097C10", VA = "0x1097C10", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60017B1")]
		[Address(RVA = "0x1097C14", Offset = "0x1097C14", VA = "0x1097C14", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60017B3")]
		[Address(RVA = "0x1097D50", Offset = "0x1097D50", VA = "0x1097D50", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20003D6")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6A84F4", Offset = "0x6A84F4")]
	private sealed class <CancelAimStateCoroutine>d__68 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400181E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400181F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001820")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x170003FB")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60017B8")]
			[Address(RVA = "0x1097E5C", Offset = "0x1097E5C", VA = "0x1097E5C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003FC")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60017BA")]
			[Address(RVA = "0x1097EC4", Offset = "0x1097EC4", VA = "0x1097EC4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60017B5")]
		[Address(RVA = "0x1096F38", Offset = "0x1096F38", VA = "0x1096F38")]
		[DebuggerHidden]
		public <CancelAimStateCoroutine>d__68(int <>1__state)
		{
		}

		[Token(Token = "0x60017B6")]
		[Address(RVA = "0x1097DB8", Offset = "0x1097DB8", VA = "0x1097DB8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60017B7")]
		[Address(RVA = "0x1097DBC", Offset = "0x1097DBC", VA = "0x1097DBC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60017B9")]
		[Address(RVA = "0x1097E64", Offset = "0x1097E64", VA = "0x1097E64", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20003D7")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6A8504", Offset = "0x6A8504")]
	private sealed class <PreTeleportStateCoroutine>d__72 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001821")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001822")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001823")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x170003FD")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60017BE")]
			[Address(RVA = "0x1098210", Offset = "0x1098210", VA = "0x1098210", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003FE")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60017C0")]
			[Address(RVA = "0x1098278", Offset = "0x1098278", VA = "0x1098278", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60017BB")]
		[Address(RVA = "0x109711C", Offset = "0x109711C", VA = "0x109711C")]
		[DebuggerHidden]
		public <PreTeleportStateCoroutine>d__72(int <>1__state)
		{
		}

		[Token(Token = "0x60017BC")]
		[Address(RVA = "0x1098138", Offset = "0x1098138", VA = "0x1098138", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60017BD")]
		[Address(RVA = "0x109813C", Offset = "0x109813C", VA = "0x109813C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60017BF")]
		[Address(RVA = "0x1098218", Offset = "0x1098218", VA = "0x1098218", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20003D8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6A8514", Offset = "0x6A8514")]
	private sealed class <CancelTeleportStateCoroutine>d__76 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001824")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001825")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001826")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x170003FF")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60017C4")]
			[Address(RVA = "0x1097F70", Offset = "0x1097F70", VA = "0x1097F70", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000400")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60017C6")]
			[Address(RVA = "0x1097FD8", Offset = "0x1097FD8", VA = "0x1097FD8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60017C1")]
		[Address(RVA = "0x1097300", Offset = "0x1097300", VA = "0x1097300")]
		[DebuggerHidden]
		public <CancelTeleportStateCoroutine>d__76(int <>1__state)
		{
		}

		[Token(Token = "0x60017C2")]
		[Address(RVA = "0x1097ECC", Offset = "0x1097ECC", VA = "0x1097ECC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60017C3")]
		[Address(RVA = "0x1097ED0", Offset = "0x1097ED0", VA = "0x1097ED0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60017C5")]
		[Address(RVA = "0x1097F78", Offset = "0x1097F78", VA = "0x1097F78", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20003D9")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6A8524", Offset = "0x6A8524")]
	private sealed class <TeleportingStateCoroutine>d__80 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001827")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001828")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001829")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x17000401")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60017CA")]
			[Address(RVA = "0x10984AC", Offset = "0x10984AC", VA = "0x10984AC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000402")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60017CC")]
			[Address(RVA = "0x1098514", Offset = "0x1098514", VA = "0x1098514", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60017C7")]
		[Address(RVA = "0x10974E4", Offset = "0x10974E4", VA = "0x10974E4")]
		[DebuggerHidden]
		public <TeleportingStateCoroutine>d__80(int <>1__state)
		{
		}

		[Token(Token = "0x60017C8")]
		[Address(RVA = "0x10983D8", Offset = "0x10983D8", VA = "0x10983D8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60017C9")]
		[Address(RVA = "0x10983DC", Offset = "0x10983DC", VA = "0x10983DC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60017CB")]
		[Address(RVA = "0x10984B4", Offset = "0x10984B4", VA = "0x10984B4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20003DA")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6A8534", Offset = "0x6A8534")]
	private sealed class <PostTeleportStateCoroutine>d__84 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400182A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400182B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400182C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x17000403")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60017D0")]
			[Address(RVA = "0x10980C8", Offset = "0x10980C8", VA = "0x10980C8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000404")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60017D2")]
			[Address(RVA = "0x1098130", Offset = "0x1098130", VA = "0x1098130", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60017CD")]
		[Address(RVA = "0x10976C8", Offset = "0x10976C8", VA = "0x10976C8")]
		[DebuggerHidden]
		public <PostTeleportStateCoroutine>d__84(int <>1__state)
		{
		}

		[Token(Token = "0x60017CE")]
		[Address(RVA = "0x1097FE0", Offset = "0x1097FE0", VA = "0x1097FE0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60017CF")]
		[Address(RVA = "0x1097FE4", Offset = "0x1097FE4", VA = "0x1097FE4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60017D1")]
		[Address(RVA = "0x10980D0", Offset = "0x10980D0", VA = "0x10980D0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000DA6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6AA440", Offset = "0x6AA440")]
	public bool EnableMovementDuringReady;

	[Token(Token = "0x4000DA7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6AA478", Offset = "0x6AA478")]
	public bool EnableMovementDuringAim;

	[Token(Token = "0x4000DA8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6AA4B0", Offset = "0x6AA4B0")]
	public bool EnableMovementDuringPreTeleport;

	[Token(Token = "0x4000DA9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6AA4E8", Offset = "0x6AA4E8")]
	public bool EnableMovementDuringPostTeleport;

	[Token(Token = "0x4000DAA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6AA520", Offset = "0x6AA520")]
	public bool EnableRotationDuringReady;

	[Token(Token = "0x4000DAB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6AA558", Offset = "0x6AA558")]
	public bool EnableRotationDuringAim;

	[Token(Token = "0x4000DAC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6AA590", Offset = "0x6AA590")]
	public bool EnableRotationDuringPreTeleport;

	[Token(Token = "0x4000DAD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6AA5C8", Offset = "0x6AA5C8")]
	public bool EnableRotationDuringPostTeleport;

	[Token(Token = "0x4000DAE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6AA600", Offset = "0x6AA600")]
	private States <CurrentState>k__BackingField;

	[NonSerialized]
	[Token(Token = "0x4000DAF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public TeleportAimHandler AimHandler;

	[Token(Token = "0x4000DB0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6AA610", Offset = "0x6AA610")]
	public TeleportDestination TeleportDestinationPrefab;

	[Token(Token = "0x4000DB1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6AA648", Offset = "0x6AA648")]
	public int TeleportDestinationLayer;

	[NonSerialized]
	[Token(Token = "0x4000DB3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public TeleportInputHandler InputHandler;

	[NonSerialized]
	[Token(Token = "0x4000DB4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public TeleportIntentions CurrentIntention;

	[NonSerialized]
	[Token(Token = "0x4000DB5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public bool IsPreTeleportRequested;

	[NonSerialized]
	[Token(Token = "0x4000DB6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x55")]
	public bool IsTransitioning;

	[NonSerialized]
	[Token(Token = "0x4000DB7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x56")]
	public bool IsPostTeleportRequested;

	[Token(Token = "0x4000DB8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private TeleportDestination _teleportDestination;

	[Token(Token = "0x4000DB9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6AA690", Offset = "0x6AA690")]
	private LocomotionController <LocomotionController>k__BackingField;

	[Token(Token = "0x4000DBA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6AA6A0", Offset = "0x6AA6A0")]
	public AimCollisionTypes AimCollisionType;

	[Token(Token = "0x4000DBB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6AA6D8", Offset = "0x6AA6D8")]
	public bool UseCharacterCollisionData;

	[Token(Token = "0x4000DBC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6AA710", Offset = "0x6AA710")]
	public float AimCollisionRadius;

	[Token(Token = "0x4000DBD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6AA748", Offset = "0x6AA748")]
	public float AimCollisionHeight;

	[Token(Token = "0x1700029F")]
	public States CurrentState
	{
		[Token(Token = "0x6000F36")]
		[Address(RVA = "0x1095DB0", Offset = "0x1095DB0", VA = "0x1095DB0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6B1094", Offset = "0x6B1094")]
		get
		{
			return default(States);
		}
		[Token(Token = "0x6000F37")]
		[Address(RVA = "0x1095DB8", Offset = "0x1095DB8", VA = "0x1095DB8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6B10A4", Offset = "0x6B10A4")]
		private set
		{
		}
	}

	[Token(Token = "0x170002A0")]
	public Quaternion DestinationRotation
	{
		[Token(Token = "0x6000F3B")]
		[Address(RVA = "0x1095FE8", Offset = "0x1095FE8", VA = "0x1095FE8")]
		get
		{
			return default(Quaternion);
		}
	}

	[Token(Token = "0x170002A1")]
	public LocomotionController LocomotionController
	{
		[Token(Token = "0x6000F3C")]
		[Address(RVA = "0x1096010", Offset = "0x1096010", VA = "0x1096010")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6B10D4", Offset = "0x6B10D4")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000F3D")]
		[Address(RVA = "0x1096018", Offset = "0x1096018", VA = "0x1096018")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6B10E4", Offset = "0x6B10E4")]
		private set
		{
		}
	}

	[Token(Token = "0x14000001")]
	public event Action<bool, Vector3?, Quaternion?, Quaternion?> UpdateTeleportDestination
	{
		[Token(Token = "0x6000F38")]
		[Address(RVA = "0x1095DC0", Offset = "0x1095DC0", VA = "0x1095DC0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6B10B4", Offset = "0x6B10B4")]
		add
		{
		}
		[Token(Token = "0x6000F39")]
		[Address(RVA = "0x1095E64", Offset = "0x1095E64", VA = "0x1095E64")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6B10C4", Offset = "0x6B10C4")]
		remove
		{
		}
	}

	[Token(Token = "0x14000002")]
	public event Action EnterStateReady
	{
		[Token(Token = "0x6000F47")]
		[Address(RVA = "0x1096724", Offset = "0x1096724", VA = "0x1096724")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6B112C", Offset = "0x6B112C")]
		add
		{
		}
		[Token(Token = "0x6000F48")]
		[Address(RVA = "0x10967C8", Offset = "0x10967C8", VA = "0x10967C8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6B113C", Offset = "0x6B113C")]
		remove
		{
		}
	}

	[Token(Token = "0x14000003")]
	public event Action EnterStateAim
	{
		[Token(Token = "0x6000F4A")]
		[Address(RVA = "0x1096898", Offset = "0x1096898", VA = "0x1096898")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6B11B0", Offset = "0x6B11B0")]
		add
		{
		}
		[Token(Token = "0x6000F4B")]
		[Address(RVA = "0x109693C", Offset = "0x109693C", VA = "0x109693C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6B11C0", Offset = "0x6B11C0")]
		remove
		{
		}
	}

	[Token(Token = "0x14000004")]
	public event Action<AimData> UpdateAimData
	{
		[Token(Token = "0x6000F4C")]
		[Address(RVA = "0x10969E0", Offset = "0x10969E0", VA = "0x10969E0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6B11D0", Offset = "0x6B11D0")]
		add
		{
		}
		[Token(Token = "0x6000F4D")]
		[Address(RVA = "0x1096A84", Offset = "0x1096A84", VA = "0x1096A84")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6B11E0", Offset = "0x6B11E0")]
		remove
		{
		}
	}

	[Token(Token = "0x14000005")]
	public event Action ExitStateAim
	{
		[Token(Token = "0x6000F4F")]
		[Address(RVA = "0x1096B9C", Offset = "0x1096B9C", VA = "0x1096B9C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6B11F0", Offset = "0x6B11F0")]
		add
		{
		}
		[Token(Token = "0x6000F50")]
		[Address(RVA = "0x1096C40", Offset = "0x1096C40", VA = "0x1096C40")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6B1200", Offset = "0x6B1200")]
		remove
		{
		}
	}

	[Token(Token = "0x14000006")]
	public event Action EnterStateCancelAim
	{
		[Token(Token = "0x6000F52")]
		[Address(RVA = "0x1096D80", Offset = "0x1096D80", VA = "0x1096D80")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6B1274", Offset = "0x6B1274")]
		add
		{
		}
		[Token(Token = "0x6000F53")]
		[Address(RVA = "0x1096E24", Offset = "0x1096E24", VA = "0x1096E24")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6B1284", Offset = "0x6B1284")]
		remove
		{
		}
	}

	[Token(Token = "0x14000007")]
	public event Action EnterStatePreTeleport
	{
		[Token(Token = "0x6000F55")]
		[Address(RVA = "0x1096F64", Offset = "0x1096F64", VA = "0x1096F64")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6B12F8", Offset = "0x6B12F8")]
		add
		{
		}
		[Token(Token = "0x6000F56")]
		[Address(RVA = "0x1097008", Offset = "0x1097008", VA = "0x1097008")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6B1308", Offset = "0x6B1308")]
		remove
		{
		}
	}

	[Token(Token = "0x14000008")]
	public event Action EnterStateCancelTeleport
	{
		[Token(Token = "0x6000F58")]
		[Address(RVA = "0x1097148", Offset = "0x1097148", VA = "0x1097148")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6B137C", Offset = "0x6B137C")]
		add
		{
		}
		[Token(Token = "0x6000F59")]
		[Address(RVA = "0x10971EC", Offset = "0x10971EC", VA = "0x10971EC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6B138C", Offset = "0x6B138C")]
		remove
		{
		}
	}

	[Token(Token = "0x14000009")]
	public event Action EnterStateTeleporting
	{
		[Token(Token = "0x6000F5B")]
		[Address(RVA = "0x109732C", Offset = "0x109732C", VA = "0x109732C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6B1400", Offset = "0x6B1400")]
		add
		{
		}
		[Token(Token = "0x6000F5C")]
		[Address(RVA = "0x10973D0", Offset = "0x10973D0", VA = "0x10973D0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6B1410", Offset = "0x6B1410")]
		remove
		{
		}
	}

	[Token(Token = "0x1400000A")]
	public event Action EnterStatePostTeleport
	{
		[Token(Token = "0x6000F5E")]
		[Address(RVA = "0x1097510", Offset = "0x1097510", VA = "0x1097510")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6B1484", Offset = "0x6B1484")]
		add
		{
		}
		[Token(Token = "0x6000F5F")]
		[Address(RVA = "0x10975B4", Offset = "0x10975B4", VA = "0x10975B4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6B1494", Offset = "0x6B1494")]
		remove
		{
		}
	}

	[Token(Token = "0x1400000B")]
	public event Action<Transform, Vector3, Quaternion> Teleported
	{
		[Token(Token = "0x6000F61")]
		[Address(RVA = "0x10976F4", Offset = "0x10976F4", VA = "0x10976F4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6B1508", Offset = "0x6B1508")]
		add
		{
		}
		[Token(Token = "0x6000F62")]
		[Address(RVA = "0x1097798", Offset = "0x1097798", VA = "0x1097798")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6B1518", Offset = "0x6B1518")]
		remove
		{
		}
	}

	[Token(Token = "0x6000F34")]
	[Address(RVA = "0x1095A80", Offset = "0x1095A80", VA = "0x1095A80")]
	public void EnableMovement(bool ready, bool aim, bool pre, bool post)
	{
	}

	[Token(Token = "0x6000F35")]
	[Address(RVA = "0x1095AA4", Offset = "0x1095AA4", VA = "0x1095AA4")]
	public void EnableRotation(bool ready, bool aim, bool pre, bool post)
	{
	}

	[Token(Token = "0x6000F3A")]
	[Address(RVA = "0x1095F08", Offset = "0x1095F08", VA = "0x1095F08")]
	public void OnUpdateTeleportDestination(bool isValidDestination, Vector3? position, Quaternion? rotation, Quaternion? landingRotation)
	{
	}

	[Token(Token = "0x6000F3E")]
	[Address(RVA = "0x1096020", Offset = "0x1096020", VA = "0x1096020")]
	public bool AimCollisionTest(Vector3 start, Vector3 end, LayerMask aimCollisionLayerMask, out RaycastHit hitInfo)
	{
		return default(bool);
	}

	[Token(Token = "0x6000F3F")]
	[Address(RVA = "0x1096378", Offset = "0x1096378", VA = "0x1096378")]
	[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x6B10F4", Offset = "0x6B10F4")]
	protected void LogState(string msg)
	{
	}

	[Token(Token = "0x6000F40")]
	[Address(RVA = "0x1096430", Offset = "0x1096430", VA = "0x1096430")]
	protected void CreateNewTeleportDestination()
	{
	}

	[Token(Token = "0x6000F41")]
	[Address(RVA = "0x10964F8", Offset = "0x10964F8", VA = "0x10964F8")]
	private void DeactivateDestination()
	{
	}

	[Token(Token = "0x6000F42")]
	[Address(RVA = "0x1096514", Offset = "0x1096514", VA = "0x1096514")]
	public void RecycleTeleportDestination(TeleportDestination oldDestination)
	{
	}

	[Token(Token = "0x6000F43")]
	[Address(RVA = "0x10965DC", Offset = "0x10965DC", VA = "0x10965DC")]
	private void EnableMotion(bool enableLinear, bool enableRotation)
	{
	}

	[Token(Token = "0x6000F44")]
	[Address(RVA = "0x1096620", Offset = "0x1096620", VA = "0x1096620")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000F45")]
	[Address(RVA = "0x109667C", Offset = "0x109667C", VA = "0x109667C", Slot = "4")]
	public virtual void OnEnable()
	{
	}

	[Token(Token = "0x6000F46")]
	[Address(RVA = "0x109671C", Offset = "0x109671C", VA = "0x109671C", Slot = "5")]
	public virtual void OnDisable()
	{
	}

	[Token(Token = "0x6000F49")]
	[Address(RVA = "0x10966AC", Offset = "0x10966AC", VA = "0x10966AC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6B114C", Offset = "0x6B114C")]
	protected IEnumerator ReadyStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000F4E")]
	[Address(RVA = "0x1096B28", Offset = "0x1096B28", VA = "0x1096B28")]
	public void OnUpdateAimData(AimData aimData)
	{
	}

	[Token(Token = "0x6000F51")]
	[Address(RVA = "0x1096CE4", Offset = "0x1096CE4", VA = "0x1096CE4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6B1210", Offset = "0x6B1210")]
	protected IEnumerator AimStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000F54")]
	[Address(RVA = "0x1096EC8", Offset = "0x1096EC8", VA = "0x1096EC8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6B1294", Offset = "0x6B1294")]
	protected IEnumerator CancelAimStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000F57")]
	[Address(RVA = "0x10970AC", Offset = "0x10970AC", VA = "0x10970AC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6B1318", Offset = "0x6B1318")]
	protected IEnumerator PreTeleportStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000F5A")]
	[Address(RVA = "0x1097290", Offset = "0x1097290", VA = "0x1097290")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6B139C", Offset = "0x6B139C")]
	protected IEnumerator CancelTeleportStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000F5D")]
	[Address(RVA = "0x1097474", Offset = "0x1097474", VA = "0x1097474")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6B1420", Offset = "0x6B1420")]
	protected IEnumerator TeleportingStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000F60")]
	[Address(RVA = "0x1097658", Offset = "0x1097658", VA = "0x1097658")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6B14A4", Offset = "0x6B14A4")]
	protected IEnumerator PostTeleportStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000F63")]
	[Address(RVA = "0x109783C", Offset = "0x109783C", VA = "0x109783C")]
	public void DoTeleport()
	{
	}

	[Token(Token = "0x6000F64")]
	[Address(RVA = "0x1097980", Offset = "0x1097980", VA = "0x1097980")]
	public Vector3 GetCharacterPosition()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000F65")]
	[Address(RVA = "0x10979B4", Offset = "0x10979B4", VA = "0x10979B4")]
	public Quaternion GetHeadRotationY()
	{
		return default(Quaternion);
	}

	[Token(Token = "0x6000F66")]
	[Address(RVA = "0x1097AD4", Offset = "0x1097AD4", VA = "0x1097AD4")]
	public void DoWarp(Vector3 startPos, float positionPercent)
	{
	}

	[Token(Token = "0x6000F67")]
	[Address(RVA = "0x1097C00", Offset = "0x1097C00", VA = "0x1097C00")]
	public LocomotionTeleport()
	{
	}
}
[Token(Token = "0x20001D2")]
public class SimpleCapsuleWithStickMovement : MonoBehaviour
{
	[Token(Token = "0x4000DC8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool EnableLinearMovement;

	[Token(Token = "0x4000DC9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool EnableRotation;

	[Token(Token = "0x4000DCA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	public bool HMDRotatesPlayer;

	[Token(Token = "0x4000DCB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
	public bool RotationEitherThumbstick;

	[Token(Token = "0x4000DCC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float RotationAngle;

	[Token(Token = "0x4000DCD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float Speed;

	[Token(Token = "0x4000DCE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OVRCameraRig CameraRig;

	[Token(Token = "0x4000DCF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool ReadyToSnapTurn;

	[Token(Token = "0x4000DD0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Rigidbody _rigidbody;

	[Token(Token = "0x1400000C")]
	public event Action CameraUpdated
	{
		[Token(Token = "0x6000F68")]
		[Address(RVA = "0xFE2214", Offset = "0xFE2214", VA = "0xFE2214")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6B1528", Offset = "0x6B1528")]
		add
		{
		}
		[Token(Token = "0x6000F69")]
		[Address(RVA = "0xFE22B8", Offset = "0xFE22B8", VA = "0xFE22B8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6B1538", Offset = "0x6B1538")]
		remove
		{
		}
	}

	[Token(Token = "0x1400000D")]
	public event Action PreCharacterMove
	{
		[Token(Token = "0x6000F6A")]
		[Address(RVA = "0xFE235C", Offset = "0xFE235C", VA = "0xFE235C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6B1548", Offset = "0x6B1548")]
		add
		{
		}
		[Token(Token = "0x6000F6B")]
		[Address(RVA = "0xFE2400", Offset = "0xFE2400", VA = "0xFE2400")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6B1558", Offset = "0x6B1558")]
		remove
		{
		}
	}

	[Token(Token = "0x6000F6C")]
	[Address(RVA = "0xFE24A4", Offset = "0xFE24A4", VA = "0xFE24A4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000F6D")]
	[Address(RVA = "0xFE254C", Offset = "0xFE254C", VA = "0xFE254C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000F6E")]
	[Address(RVA = "0xFE2550", Offset = "0xFE2550", VA = "0xFE2550")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000F6F")]
	[Address(RVA = "0xFE25C4", Offset = "0xFE25C4", VA = "0xFE25C4")]
	private void RotatePlayerToHMD()
	{
	}

	[Token(Token = "0x6000F70")]
	[Address(RVA = "0xFE2734", Offset = "0xFE2734", VA = "0xFE2734")]
	private void StickMovement()
	{
	}

	[Token(Token = "0x6000F71")]
	[Address(RVA = "0xFE2A18", Offset = "0xFE2A18", VA = "0xFE2A18")]
	private void SnapTurn()
	{
	}

	[Token(Token = "0x6000F72")]
	[Address(RVA = "0xFE2C08", Offset = "0xFE2C08", VA = "0xFE2C08")]
	public SimpleCapsuleWithStickMovement()
	{
	}
}
[Token(Token = "0x20001D3")]
public abstract class TeleportAimHandler : TeleportSupport
{
	[Token(Token = "0x6000F73")]
	[Address(RVA = "0xFF4230", Offset = "0xFF4230", VA = "0xFF4230", Slot = "4")]
	protected override void OnEnable()
	{
	}

	[Token(Token = "0x6000F74")]
	[Address(RVA = "0xFF42C4", Offset = "0xFF42C4", VA = "0xFF42C4", Slot = "5")]
	protected override void OnDisable()
	{
	}

	[Token(Token = "0x6000F75")]
	public abstract void GetPoints(List<Vector3> points);

	[Token(Token = "0x6000F76")]
	[Address(RVA = "0xFF4394", Offset = "0xFF4394", VA = "0xFF4394")]
	protected TeleportAimHandler()
	{
	}
}
[Token(Token = "0x20001D4")]
public class TeleportAimHandlerLaser : TeleportAimHandler
{
	[Token(Token = "0x4000DD3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6AA840", Offset = "0x6AA840")]
	public float Range;

	[Token(Token = "0x6000F77")]
	[Address(RVA = "0xFF43A4", Offset = "0xFF43A4", VA = "0xFF43A4", Slot = "8")]
	public override void GetPoints(List<Vector3> points)
	{
	}

	[Token(Token = "0x6000F78")]
	[Address(RVA = "0xFF4500", Offset = "0xFF4500", VA = "0xFF4500")]
	public TeleportAimHandlerLaser()
	{
	}
}
[Token(Token = "0x20001D5")]
public class TeleportAimHandlerParabolic : TeleportAimHandler
{
	[Token(Token = "0x4000DD4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6AA878", Offset = "0x6AA878")]
	public float Range;

	[Token(Token = "0x4000DD5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6AA8B0", Offset = "0x6AA8B0")]
	public float MinimumElevation;

	[Token(Token = "0x4000DD6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6AA8E8", Offset = "0x6AA8E8")]
	public float Gravity;

	[Token(Token = "0x4000DD7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6AA920", Offset = "0x6AA920")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x6AA920", Offset = "0x6AA920")]
	public float AimVelocity;

	[Token(Token = "0x4000DD8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6AA97C", Offset = "0x6AA97C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x6AA97C", Offset = "0x6AA97C")]
	public float AimStep;

	[Token(Token = "0x6000F79")]
	[Address(RVA = "0xFF4510", Offset = "0xFF4510", VA = "0xFF4510", Slot = "8")]
	public override void GetPoints(List<Vector3> points)
	{
	}

	[Token(Token = "0x6000F7A")]
	[Address(RVA = "0xFF475C", Offset = "0xFF475C", VA = "0xFF475C")]
	public TeleportAimHandlerParabolic()
	{
	}
}
[Token(Token = "0x20001D6")]
public class TeleportAimVisualLaser : TeleportSupport
{
	[Token(Token = "0x4000DD9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6AA9D4", Offset = "0x6AA9D4")]
	public LineRenderer LaserPrefab;

	[Token(Token = "0x4000DDA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private readonly Action _enterAimStateAction;

	[Token(Token = "0x4000DDB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private readonly Action _exitAimStateAction;

	[Token(Token = "0x4000DDC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private readonly Action<LocomotionTeleport.AimData> _updateAimDataAction;

	[Token(Token = "0x4000DDD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private LineRenderer _lineRenderer;

	[Token(Token = "0x4000DDE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Vector3[] _linePoints;

	[Token(Token = "0x6000F7B")]
	[Address(RVA = "0xFF4770", Offset = "0xFF4770", VA = "0xFF4770")]
	public TeleportAimVisualLaser()
	{
	}

	[Token(Token = "0x6000F7C")]
	[Address(RVA = "0xFF4854", Offset = "0xFF4854", VA = "0xFF4854")]
	private void EnterAimState()
	{
	}

	[Token(Token = "0x6000F7D")]
	[Address(RVA = "0xFF4884", Offset = "0xFF4884", VA = "0xFF4884")]
	private void ExitAimState()
	{
	}

	[Token(Token = "0x6000F7E")]
	[Address(RVA = "0xFF48B4", Offset = "0xFF48B4", VA = "0xFF48B4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000F7F")]
	[Address(RVA = "0xFF4954", Offset = "0xFF4954", VA = "0xFF4954", Slot = "6")]
	protected override void AddEventHandlers()
	{
	}

	[Token(Token = "0x6000F80")]
	[Address(RVA = "0xFF49C0", Offset = "0xFF49C0", VA = "0xFF49C0", Slot = "7")]
	protected override void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x6000F81")]
	[Address(RVA = "0xFF4A28", Offset = "0xFF4A28", VA = "0xFF4A28")]
	private void UpdateAimData(LocomotionTeleport.AimData obj)
	{
	}
}
[Token(Token = "0x20001D7")]
public class TeleportDestination : MonoBehaviour
{
	[Token(Token = "0x4000DDF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6AAA0C", Offset = "0x6AAA0C")]
	private bool <IsValidDestination>k__BackingField;

	[Token(Token = "0x4000DE0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6AAA1C", Offset = "0x6AAA1C")]
	public Transform PositionIndicator;

	[Token(Token = "0x4000DE1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6AAA54", Offset = "0x6AAA54")]
	public Transform OrientationIndicator;

	[Token(Token = "0x4000DE2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6AAA8C", Offset = "0x6AAA8C")]
	public Quaternion LandingRotation;

	[NonSerialized]
	[Token(Token = "0x4000DE3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public LocomotionTeleport LocomotionTeleport;

	[NonSerialized]
	[Token(Token = "0x4000DE4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public LocomotionTeleport.States TeleportState;

	[Token(Token = "0x4000DE5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private readonly Action<bool, Vector3?, Quaternion?, Quaternion?> _updateTeleportDestinationAction;

	[Token(Token = "0x4000DE6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool _eventsActive;

	[Token(Token = "0x170002A2")]
	public bool IsValidDestination
	{
		[Token(Token = "0x6000F82")]
		[Address(RVA = "0xFF4B44", Offset = "0xFF4B44", VA = "0xFF4B44")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6B1568", Offset = "0x6B1568")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000F83")]
		[Address(RVA = "0xFF4B4C", Offset = "0xFF4B4C", VA = "0xFF4B4C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6B1578", Offset = "0x6B1578")]
		private set
		{
		}
	}

	[Token(Token = "0x1400000E")]
	public event Action<TeleportDestination> Deactivated
	{
		[Token(Token = "0x6000F88")]
		[Address(RVA = "0xFF4CFC", Offset = "0xFF4CFC", VA = "0xFF4CFC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6B1588", Offset = "0x6B1588")]
		add
		{
		}
		[Token(Token = "0x6000F89")]
		[Address(RVA = "0xFF4DA0", Offset = "0xFF4DA0", VA = "0xFF4DA0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6B1598", Offset = "0x6B1598")]
		remove
		{
		}
	}

	[Token(Token = "0x6000F84")]
	[Address(RVA = "0xFF4B58", Offset = "0xFF4B58", VA = "0xFF4B58")]
	private TeleportDestination()
	{
	}

	[Token(Token = "0x6000F85")]
	[Address(RVA = "0xFF4BE0", Offset = "0xFF4BE0", VA = "0xFF4BE0")]
	public void OnEnable()
	{
	}

	[Token(Token = "0x6000F86")]
	[Address(RVA = "0xFF4CB8", Offset = "0xFF4CB8", VA = "0xFF4CB8")]
	private void TryDisableEventHandlers()
	{
	}

	[Token(Token = "0x6000F87")]
	[Address(RVA = "0xFF4CF8", Offset = "0xFF4CF8", VA = "0xFF4CF8")]
	public void OnDisable()
	{
	}

	[Token(Token = "0x6000F8A")]
	[Address(RVA = "0xFF4E44", Offset = "0xFF4E44", VA = "0xFF4E44")]
	public void OnDeactivated()
	{
	}

	[Token(Token = "0x6000F8B")]
	[Address(RVA = "0xFF4EAC", Offset = "0xFF4EAC", VA = "0xFF4EAC")]
	public void Recycle()
	{
	}

	[Token(Token = "0x6000F8C")]
	[Address(RVA = "0xFF4ECC", Offset = "0xFF4ECC", VA = "0xFF4ECC", Slot = "4")]
	public virtual void UpdateTeleportDestination(bool isValidDestination, Vector3? position, Quaternion? rotation, Quaternion? landingRotation)
	{
	}
}
[Token(Token = "0x20001D8")]
public abstract class TeleportInputHandler : TeleportSupport
{
	[Token(Token = "0x20003DB")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6A8544", Offset = "0x6A8544")]
	private sealed class <TeleportReadyCoroutine>d__5 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400182D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400182E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400182F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportInputHandler <>4__this;

		[Token(Token = "0x17000405")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60017D6")]
			[Address(RVA = "0xFF5590", Offset = "0xFF5590", VA = "0xFF5590", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000406")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60017D8")]
			[Address(RVA = "0xFF55F8", Offset = "0xFF55F8", VA = "0xFF55F8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60017D3")]
		[Address(RVA = "0xFF52DC", Offset = "0xFF52DC", VA = "0xFF52DC")]
		[DebuggerHidden]
		public <TeleportReadyCoroutine>d__5(int <>1__state)
		{
		}

		[Token(Token = "0x60017D4")]
		[Address(RVA = "0xFF5500", Offset = "0xFF5500", VA = "0xFF5500", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60017D5")]
		[Address(RVA = "0xFF5504", Offset = "0xFF5504", VA = "0xFF5504", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60017D7")]
		[Address(RVA = "0xFF5598", Offset = "0xFF5598", VA = "0xFF5598", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20003DC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6A8554", Offset = "0x6A8554")]
	private sealed class <TeleportAimCoroutine>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001830")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001831")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001832")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportInputHandler <>4__this;

		[Token(Token = "0x17000407")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60017DC")]
			[Address(RVA = "0xFF5490", Offset = "0xFF5490", VA = "0xFF5490", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000408")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60017DE")]
			[Address(RVA = "0xFF54F8", Offset = "0xFF54F8", VA = "0xFF54F8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60017D9")]
		[Address(RVA = "0xFF5378", Offset = "0xFF5378", VA = "0xFF5378")]
		[DebuggerHidden]
		public <TeleportAimCoroutine>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x60017DA")]
		[Address(RVA = "0xFF53FC", Offset = "0xFF53FC", VA = "0xFF53FC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60017DB")]
		[Address(RVA = "0xFF5400", Offset = "0xFF5400", VA = "0xFF5400", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60017DD")]
		[Address(RVA = "0xFF5498", Offset = "0xFF5498", VA = "0xFF5498", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000DE8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private readonly Action _startReadyAction;

	[Token(Token = "0x4000DE9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private readonly Action _startAimAction;

	[Token(Token = "0x6000F8D")]
	[Address(RVA = "0xFF50AC", Offset = "0xFF50AC", VA = "0xFF50AC")]
	protected TeleportInputHandler()
	{
	}

	[Token(Token = "0x6000F8E")]
	[Address(RVA = "0xFF5158", Offset = "0xFF5158", VA = "0xFF5158", Slot = "6")]
	protected override void AddEventHandlers()
	{
	}

	[Token(Token = "0x6000F8F")]
	[Address(RVA = "0xFF51B0", Offset = "0xFF51B0", VA = "0xFF51B0", Slot = "7")]
	protected override void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x6000F90")]
	[Address(RVA = "0xFF526C", Offset = "0xFF526C", VA = "0xFF526C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6B15A8", Offset = "0x6B15A8")]
	private IEnumerator TeleportReadyCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000F91")]
	[Address(RVA = "0xFF5308", Offset = "0xFF5308", VA = "0xFF5308")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6B160C", Offset = "0x6B160C")]
	private IEnumerator TeleportAimCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000F92")]
	public abstract LocomotionTeleport.TeleportIntentions GetIntention();

	[Token(Token = "0x6000F93")]
	public abstract void GetAimData(out Ray aimRay);

	[Token(Token = "0x6000F94")]
	[Address(RVA = "0xFF53A4", Offset = "0xFF53A4", VA = "0xFF53A4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6B1670", Offset = "0x6B1670")]
	private void <.ctor>b__2_0()
	{
	}

	[Token(Token = "0x6000F95")]
	[Address(RVA = "0xFF53D0", Offset = "0xFF53D0", VA = "0xFF53D0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6B1680", Offset = "0x6B1680")]
	private void <.ctor>b__2_1()
	{
	}
}
[Token(Token = "0x20001D9")]
public class TeleportInputHandlerHMD : TeleportInputHandler
{
	[Token(Token = "0x4000DEA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6AAAD4", Offset = "0x6AAAD4")]
	private Transform <Pointer>k__BackingField;

	[Token(Token = "0x4000DEB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6AAAE4", Offset = "0x6AAAE4")]
	public OVRInput.RawButton AimButton;

	[Token(Token = "0x4000DEC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6AAB1C", Offset = "0x6AAB1C")]
	public OVRInput.RawButton TeleportButton;

	[Token(Token = "0x4000DED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6AAB54", Offset = "0x6AAB54")]
	public bool FastTeleport;

	[Token(Token = "0x170002A3")]
	public Transform Pointer
	{
		[Token(Token = "0x6000F96")]
		[Address(RVA = "0xFF5600", Offset = "0xFF5600", VA = "0xFF5600")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6B1690", Offset = "0x6B1690")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000F97")]
		[Address(RVA = "0xFF5608", Offset = "0xFF5608", VA = "0xFF5608")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6B16A0", Offset = "0x6B16A0")]
		private set
		{
		}
	}

	[Token(Token = "0x6000F98")]
	[Address(RVA = "0xFF5610", Offset = "0xFF5610", VA = "0xFF5610", Slot = "8")]
	public override LocomotionTeleport.TeleportIntentions GetIntention()
	{
		return default(LocomotionTeleport.TeleportIntentions);
	}

	[Token(Token = "0x6000F99")]
	[Address(RVA = "0xFF576C", Offset = "0xFF576C", VA = "0xFF576C", Slot = "9")]
	public override void GetAimData(out Ray aimRay)
	{
	}

	[Token(Token = "0x6000F9A")]
	[Address(RVA = "0xFF5824", Offset = "0xFF5824", VA = "0xFF5824")]
	public TeleportInputHandlerHMD()
	{
	}
}
[Token(Token = "0x20001DA")]
public class TeleportInputHandlerTouch : TeleportInputHandlerHMD
{
	[Token(Token = "0x20003DD")]
	public enum InputModes
	{
		[Token(Token = "0x4001834")]
		CapacitiveButtonForAimAndTeleport,
		[Token(Token = "0x4001835")]
		SeparateButtonsForAimAndTeleport,
		[Token(Token = "0x4001836")]
		ThumbstickTeleport,
		[Token(Token = "0x4001837")]
		ThumbstickTeleportForwardBackOnly
	}

	[Token(Token = "0x20003DE")]
	public enum AimCapTouchButtons
	{
		[Token(Token = "0x4001839")]
		A,
		[Token(Token = "0x400183A")]
		B,
		[Token(Token = "0x400183B")]
		LeftTrigger,
		[Token(Token = "0x400183C")]
		LeftThumbstick,
		[Token(Token = "0x400183D")]
		RightTrigger,
		[Token(Token = "0x400183E")]
		RightThumbstick,
		[Token(Token = "0x400183F")]
		X,
		[Token(Token = "0x4001840")]
		Y
	}

	[Token(Token = "0x4000DEE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Transform LeftHand;

	[Token(Token = "0x4000DEF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Transform RightHand;

	[Token(Token = "0x4000DF0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6AAB8C", Offset = "0x6AAB8C")]
	public InputModes InputMode;

	[Token(Token = "0x4000DF1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private readonly OVRInput.RawButton[] _rawButtons;

	[Token(Token = "0x4000DF2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private readonly OVRInput.RawTouch[] _rawTouch;

	[Token(Token = "0x4000DF3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6AABC4", Offset = "0x6AABC4")]
	public OVRInput.Controller AimingController;

	[Token(Token = "0x4000DF4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private OVRInput.Controller InitiatingController;

	[Token(Token = "0x4000DF5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6AABFC", Offset = "0x6AABFC")]
	public AimCapTouchButtons CapacitiveAimAndTeleportButton;

	[Token(Token = "0x4000DF6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6AAC34", Offset = "0x6AAC34")]
	public float ThumbstickTeleportThreshold;

	[Token(Token = "0x6000F9B")]
	[Address(RVA = "0xFF5828", Offset = "0xFF5828", VA = "0xFF5828")]
	private void Start()
	{
	}

	[Token(Token = "0x6000F9C")]
	[Address(RVA = "0xFF582C", Offset = "0xFF582C", VA = "0xFF582C", Slot = "8")]
	public override LocomotionTeleport.TeleportIntentions GetIntention()
	{
		return default(LocomotionTeleport.TeleportIntentions);
	}

	[Token(Token = "0x6000F9D")]
	[Address(RVA = "0xFF5C74", Offset = "0xFF5C74", VA = "0xFF5C74", Slot = "9")]
	public override void GetAimData(out Ray aimRay)
	{
	}

	[Token(Token = "0x6000F9E")]
	[Address(RVA = "0xFF5D34", Offset = "0xFF5D34", VA = "0xFF5D34")]
	public TeleportInputHandlerTouch()
	{
	}
}
[Token(Token = "0x20001DB")]
public abstract class TeleportOrientationHandler : TeleportSupport
{
	[Token(Token = "0x20003DF")]
	public enum OrientationModes
	{
		[Token(Token = "0x4001842")]
		HeadRelative,
		[Token(Token = "0x4001843")]
		ForwardFacing
	}

	[Token(Token = "0x20003E0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6A8564", Offset = "0x6A8564")]
	private sealed class <UpdateOrientationCoroutine>d__7 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001844")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001845")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001846")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportOrientationHandler <>4__this;

		[Token(Token = "0x17000409")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60017E2")]
			[Address(RVA = "0xFF61C4", Offset = "0xFF61C4", VA = "0xFF61C4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700040A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60017E4")]
			[Address(RVA = "0xFF622C", Offset = "0xFF622C", VA = "0xFF622C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60017DF")]
		[Address(RVA = "0xFF5FA0", Offset = "0xFF5FA0", VA = "0xFF5FA0")]
		[DebuggerHidden]
		public <UpdateOrientationCoroutine>d__7(int <>1__state)
		{
		}

		[Token(Token = "0x60017E0")]
		[Address(RVA = "0xFF611C", Offset = "0xFF611C", VA = "0xFF611C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60017E1")]
		[Address(RVA = "0xFF6120", Offset = "0xFF6120", VA = "0xFF6120", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60017E3")]
		[Address(RVA = "0xFF61CC", Offset = "0xFF61CC", VA = "0xFF61CC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000DF7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private readonly Action _updateOrientationAction;

	[Token(Token = "0x4000DF8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private readonly Action<LocomotionTeleport.AimData> _updateAimDataAction;

	[Token(Token = "0x4000DF9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	protected LocomotionTeleport.AimData AimData;

	[Token(Token = "0x6000F9F")]
	[Address(RVA = "0xFF5DE0", Offset = "0xFF5DE0", VA = "0xFF5DE0")]
	protected TeleportOrientationHandler()
	{
	}

	[Token(Token = "0x6000FA0")]
	[Address(RVA = "0xFF5E94", Offset = "0xFF5E94", VA = "0xFF5E94")]
	private void UpdateAimData(LocomotionTeleport.AimData aimData)
	{
	}

	[Token(Token = "0x6000FA1")]
	[Address(RVA = "0xFF5E9C", Offset = "0xFF5E9C", VA = "0xFF5E9C", Slot = "6")]
	protected override void AddEventHandlers()
	{
	}

	[Token(Token = "0x6000FA2")]
	[Address(RVA = "0xFF5EE8", Offset = "0xFF5EE8", VA = "0xFF5EE8", Slot = "7")]
	protected override void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x6000FA3")]
	[Address(RVA = "0xFF5F30", Offset = "0xFF5F30", VA = "0xFF5F30")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6B16B0", Offset = "0x6B16B0")]
	private IEnumerator UpdateOrientationCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000FA4")]
	protected abstract void InitializeTeleportDestination();

	[Token(Token = "0x6000FA5")]
	protected abstract void UpdateTeleportDestination();

	[Token(Token = "0x6000FA6")]
	[Address(RVA = "0xFF5FCC", Offset = "0xFF5FCC", VA = "0xFF5FCC")]
	protected Quaternion GetLandingOrientation(OrientationModes mode, Quaternion rotation)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x6000FA7")]
	[Address(RVA = "0xFF60F0", Offset = "0xFF60F0", VA = "0xFF60F0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6B1714", Offset = "0x6B1714")]
	private void <.ctor>b__3_0()
	{
	}
}
[Token(Token = "0x20001DC")]
public class TeleportOrientationHandler360 : TeleportOrientationHandler
{
	[Token(Token = "0x6000FA8")]
	[Address(RVA = "0xFF6234", Offset = "0xFF6234", VA = "0xFF6234", Slot = "8")]
	protected override void InitializeTeleportDestination()
	{
	}

	[Token(Token = "0x6000FA9")]
	[Address(RVA = "0xFF6238", Offset = "0xFF6238", VA = "0xFF6238", Slot = "9")]
	protected override void UpdateTeleportDestination()
	{
	}

	[Token(Token = "0x6000FAA")]
	[Address(RVA = "0xFF62B4", Offset = "0xFF62B4", VA = "0xFF62B4")]
	public TeleportOrientationHandler360()
	{
	}
}
[Token(Token = "0x20001DD")]
public class TeleportOrientationHandlerHMD : TeleportOrientationHandler
{
	[Token(Token = "0x4000DFA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6AAC6C", Offset = "0x6AAC6C")]
	public OrientationModes OrientationMode;

	[Token(Token = "0x4000DFB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6AACA4", Offset = "0x6AACA4")]
	public bool UpdateOrientationDuringAim;

	[Token(Token = "0x4000DFC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6AACDC", Offset = "0x6AACDC")]
	public float AimDistanceThreshold;

	[Token(Token = "0x4000DFD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6AAD14", Offset = "0x6AAD14")]
	public float AimDistanceMaxRange;

	[Token(Token = "0x4000DFE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Quaternion _initialRotation;

	[Token(Token = "0x6000FAB")]
	[Address(RVA = "0xFF62B8", Offset = "0xFF62B8", VA = "0xFF62B8", Slot = "8")]
	protected override void InitializeTeleportDestination()
	{
	}

	[Token(Token = "0x6000FAC")]
	[Address(RVA = "0xFF6328", Offset = "0xFF6328", VA = "0xFF6328", Slot = "9")]
	protected override void UpdateTeleportDestination()
	{
	}

	[Token(Token = "0x6000FAD")]
	[Address(RVA = "0xFF67A0", Offset = "0xFF67A0", VA = "0xFF67A0")]
	public TeleportOrientationHandlerHMD()
	{
	}
}
[Token(Token = "0x20001DE")]
public class TeleportOrientationHandlerThumbstick : TeleportOrientationHandler
{
	[Token(Token = "0x4000DFF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6AAD4C", Offset = "0x6AAD4C")]
	public OrientationModes OrientationMode;

	[Token(Token = "0x4000E00")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6AAD84", Offset = "0x6AAD84")]
	public OVRInput.Controller Thumbstick;

	[Token(Token = "0x4000E01")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6AADBC", Offset = "0x6AADBC")]
	public float RotateStickThreshold;

	[Token(Token = "0x4000E02")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private Quaternion _initialRotation;

	[Token(Token = "0x4000E03")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private Quaternion _currentRotation;

	[Token(Token = "0x4000E04")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private Vector2 _lastValidDirection;

	[Token(Token = "0x6000FAE")]
	[Address(RVA = "0xFF67A4", Offset = "0xFF67A4", VA = "0xFF67A4", Slot = "8")]
	protected override void InitializeTeleportDestination()
	{
	}

	[Token(Token = "0x6000FAF")]
	[Address(RVA = "0xFF67E8", Offset = "0xFF67E8", VA = "0xFF67E8", Slot = "9")]
	protected override void UpdateTeleportDestination()
	{
	}

	[Token(Token = "0x6000FB0")]
	[Address(RVA = "0xFF6C58", Offset = "0xFF6C58", VA = "0xFF6C58")]
	public TeleportOrientationHandlerThumbstick()
	{
	}
}
[Token(Token = "0x20001DF")]
public class TeleportPoint : MonoBehaviour
{
	[Token(Token = "0x4000E05")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float dimmingSpeed;

	[Token(Token = "0x4000E06")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float fullIntensity;

	[Token(Token = "0x4000E07")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float lowIntensity;

	[Token(Token = "0x4000E08")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform destTransform;

	[Token(Token = "0x4000E09")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float lastLookAtTime;

	[Token(Token = "0x6000FB1")]
	[Address(RVA = "0xFF6C68", Offset = "0xFF6C68", VA = "0xFF6C68")]
	private void Start()
	{
	}

	[Token(Token = "0x6000FB2")]
	[Address(RVA = "0xFF6C6C", Offset = "0xFF6C6C", VA = "0xFF6C6C")]
	public Transform GetDestTransform()
	{
		return null;
	}

	[Token(Token = "0x6000FB3")]
	[Address(RVA = "0xFF6C74", Offset = "0xFF6C74", VA = "0xFF6C74")]
	private void Update()
	{
	}

	[Token(Token = "0x6000FB4")]
	[Address(RVA = "0xFF6D5C", Offset = "0xFF6D5C", VA = "0xFF6D5C")]
	public void OnLookAt()
	{
	}

	[Token(Token = "0x6000FB5")]
	[Address(RVA = "0xFF6D84", Offset = "0xFF6D84", VA = "0xFF6D84")]
	public TeleportPoint()
	{
	}
}
[Token(Token = "0x20001E0")]
public abstract class TeleportSupport : MonoBehaviour
{
	[Token(Token = "0x4000E0A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6AADF4", Offset = "0x6AADF4")]
	private LocomotionTeleport <LocomotionTeleport>k__BackingField;

	[Token(Token = "0x4000E0B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool _eventsActive;

	[Token(Token = "0x170002A4")]
	protected LocomotionTeleport LocomotionTeleport
	{
		[Token(Token = "0x6000FB6")]
		[Address(RVA = "0xFF6D9C", Offset = "0xFF6D9C", VA = "0xFF6D9C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6B1724", Offset = "0x6B1724")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000FB7")]
		[Address(RVA = "0xFF6DA4", Offset = "0xFF6DA4", VA = "0xFF6DA4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6B1734", Offset = "0x6B1734")]
		private set
		{
		}
	}

	[Token(Token = "0x6000FB8")]
	[Address(RVA = "0xFF4260", Offset = "0xFF4260", VA = "0xFF4260", Slot = "4")]
	protected virtual void OnEnable()
	{
	}

	[Token(Token = "0x6000FB9")]
	[Address(RVA = "0xFF4368", Offset = "0xFF4368", VA = "0xFF4368", Slot = "5")]
	protected virtual void OnDisable()
	{
	}

	[Token(Token = "0x6000FBA")]
	[Address(RVA = "0xFF6DAC", Offset = "0xFF6DAC", VA = "0xFF6DAC")]
	[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x6B1744", Offset = "0x6B1744")]
	private void LogEventHandler(string msg)
	{
	}

	[Token(Token = "0x6000FBB")]
	[Address(RVA = "0xFF49B4", Offset = "0xFF49B4", VA = "0xFF49B4", Slot = "6")]
	protected virtual void AddEventHandlers()
	{
	}

	[Token(Token = "0x6000FBC")]
	[Address(RVA = "0xFF4A20", Offset = "0xFF4A20", VA = "0xFF4A20", Slot = "7")]
	protected virtual void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x6000FBD")]
	[Address(RVA = "0xFF439C", Offset = "0xFF439C", VA = "0xFF439C")]
	protected TeleportSupport()
	{
	}
}
[Token(Token = "0x20001E1")]
public abstract class TeleportTargetHandler : TeleportSupport
{
	[Token(Token = "0x20003E1")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6A8574", Offset = "0x6A8574")]
	private sealed class <TargetAimCoroutine>d__7 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001847")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001848")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001849")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportTargetHandler <>4__this;

		[Token(Token = "0x1700040B")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60017E8")]
			[Address(RVA = "0xFF7400", Offset = "0xFF7400", VA = "0xFF7400", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700040C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60017EA")]
			[Address(RVA = "0xFF7468", Offset = "0xFF7468", VA = "0xFF7468", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60017E5")]
		[Address(RVA = "0xFF6FFC", Offset = "0xFF6FFC", VA = "0xFF6FFC")]
		[DebuggerHidden]
		public <TargetAimCoroutine>d__7(int <>1__state)
		{
		}

		[Token(Token = "0x60017E6")]
		[Address(RVA = "0xFF7194", Offset = "0xFF7194", VA = "0xFF7194", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60017E7")]
		[Address(RVA = "0xFF7198", Offset = "0xFF7198", VA = "0xFF7198", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60017E9")]
		[Address(RVA = "0xFF7408", Offset = "0xFF7408", VA = "0xFF7408", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000E0C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6AAE04", Offset = "0x6AAE04")]
	public LayerMask AimCollisionLayerMask;

	[Token(Token = "0x4000E0D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	protected readonly LocomotionTeleport.AimData AimData;

	[Token(Token = "0x4000E0E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private readonly Action _startAimAction;

	[Token(Token = "0x4000E0F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private readonly List<Vector3> _aimPoints;

	[Token(Token = "0x4000E10")]
	private const float ERROR_MARGIN = 0.1f;

	[Token(Token = "0x6000FBE")]
	[Address(RVA = "0xFF6E74", Offset = "0xFF6E74", VA = "0xFF6E74")]
	protected TeleportTargetHandler()
	{
	}

	[Token(Token = "0x6000FBF")]
	[Address(RVA = "0xFF6F38", Offset = "0xFF6F38", VA = "0xFF6F38", Slot = "6")]
	protected override void AddEventHandlers()
	{
	}

	[Token(Token = "0x6000FC0")]
	[Address(RVA = "0xFF6F64", Offset = "0xFF6F64", VA = "0xFF6F64", Slot = "7")]
	protected override void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x6000FC1")]
	[Address(RVA = "0xFF6F8C", Offset = "0xFF6F8C", VA = "0xFF6F8C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6B177C", Offset = "0x6B177C")]
	private IEnumerator TargetAimCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000FC2")]
	[Address(RVA = "0xFF7028", Offset = "0xFF7028", VA = "0xFF7028", Slot = "8")]
	protected virtual void ResetAimData()
	{
	}

	[Token(Token = "0x6000FC3")]
	protected abstract bool ConsiderTeleport(Vector3 start, ref Vector3 end);

	[Token(Token = "0x6000FC4")]
	[Address(RVA = "0xFF7044", Offset = "0xFF7044", VA = "0xFF7044", Slot = "10")]
	public virtual Vector3? ConsiderDestination(Vector3 location)
	{
		return null;
	}

	[Token(Token = "0x6000FC5")]
	[Address(RVA = "0xFF7168", Offset = "0xFF7168", VA = "0xFF7168")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6B17E0", Offset = "0x6B17E0")]
	private void <.ctor>b__3_0()
	{
	}
}
[Token(Token = "0x20001E2")]
public class TeleportTargetHandlerNavMesh : TeleportTargetHandler
{
	[Token(Token = "0x4000E11")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public int NavMeshAreaMask;

	[Token(Token = "0x4000E12")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private NavMeshPath _path;

	[Token(Token = "0x6000FC6")]
	[Address(RVA = "0xFF7470", Offset = "0xFF7470", VA = "0xFF7470")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000FC7")]
	[Address(RVA = "0xFF74D0", Offset = "0xFF74D0", VA = "0xFF74D0", Slot = "9")]
	protected override bool ConsiderTeleport(Vector3 start, ref Vector3 end)
	{
		return default(bool);
	}

	[Token(Token = "0x6000FC8")]
	[Address(RVA = "0xFF7654", Offset = "0xFF7654", VA = "0xFF7654", Slot = "10")]
	public override Vector3? ConsiderDestination(Vector3 location)
	{
		return null;
	}

	[Token(Token = "0x6000FC9")]
	[Address(RVA = "0xFF7744", Offset = "0xFF7744", VA = "0xFF7744")]
	[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x6B17F0", Offset = "0x6B17F0")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x6000FCA")]
	[Address(RVA = "0xFF7748", Offset = "0xFF7748", VA = "0xFF7748")]
	public TeleportTargetHandlerNavMesh()
	{
	}
}
[Token(Token = "0x20001E3")]
public class TeleportTargetHandlerNode : TeleportTargetHandler
{
	[Token(Token = "0x4000E13")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6AAE3C", Offset = "0x6AAE3C")]
	public float LOSOffset;

	[Token(Token = "0x4000E14")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6AAE74", Offset = "0x6AAE74")]
	public LayerMask TeleportLayerMask;

	[Token(Token = "0x6000FCB")]
	[Address(RVA = "0xFF7754", Offset = "0xFF7754", VA = "0xFF7754", Slot = "9")]
	protected override bool ConsiderTeleport(Vector3 start, ref Vector3 end)
	{
		return default(bool);
	}

	[Token(Token = "0x6000FCC")]
	[Address(RVA = "0xFF7984", Offset = "0xFF7984", VA = "0xFF7984")]
	public TeleportTargetHandlerNode()
	{
	}
}
[Token(Token = "0x20001E4")]
public class TeleportTargetHandlerPhysical : TeleportTargetHandler
{
	[Token(Token = "0x6000FCD")]
	[Address(RVA = "0xFF7990", Offset = "0xFF7990", VA = "0xFF7990", Slot = "9")]
	protected override bool ConsiderTeleport(Vector3 start, ref Vector3 end)
	{
		return default(bool);
	}

	[Token(Token = "0x6000FCE")]
	[Address(RVA = "0xFF7B14", Offset = "0xFF7B14", VA = "0xFF7B14")]
	public TeleportTargetHandlerPhysical()
	{
	}
}
[Token(Token = "0x20001E5")]
public abstract class TeleportTransition : TeleportSupport
{
	[Token(Token = "0x6000FCF")]
	[Address(RVA = "0xFF7B18", Offset = "0xFF7B18", VA = "0xFF7B18", Slot = "6")]
	protected override void AddEventHandlers()
	{
	}

	[Token(Token = "0x6000FD0")]
	[Address(RVA = "0xFF7BB0", Offset = "0xFF7BB0", VA = "0xFF7BB0", Slot = "7")]
	protected override void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x6000FD1")]
	protected abstract void LocomotionTeleportOnEnterStateTeleporting();

	[Token(Token = "0x6000FD2")]
	[Address(RVA = "0xFF7C44", Offset = "0xFF7C44", VA = "0xFF7C44")]
	protected TeleportTransition()
	{
	}
}
[Token(Token = "0x20001E6")]
public class TeleportTransitionBlink : TeleportTransition
{
	[Token(Token = "0x20003E2")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6A8584", Offset = "0x6A8584")]
	private sealed class <BlinkCoroutine>d__4 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400184A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400184B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400184C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportTransitionBlink <>4__this;

		[Token(Token = "0x400184D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <elapsedTime>5__2;

		[Token(Token = "0x400184E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <teleportTime>5__3;

		[Token(Token = "0x400184F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool <teleported>5__4;

		[Token(Token = "0x1700040D")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60017EE")]
			[Address(RVA = "0xFF7FAC", Offset = "0xFF7FAC", VA = "0xFF7FAC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700040E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60017F0")]
			[Address(RVA = "0xFF8014", Offset = "0xFF8014", VA = "0xFF8014", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60017EB")]
		[Address(RVA = "0xFF7CE8", Offset = "0xFF7CE8", VA = "0xFF7CE8")]
		[DebuggerHidden]
		public <BlinkCoroutine>d__4(int <>1__state)
		{
		}

		[Token(Token = "0x60017EC")]
		[Address(RVA = "0xFF7EAC", Offset = "0xFF7EAC", VA = "0xFF7EAC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60017ED")]
		[Address(RVA = "0xFF7EB0", Offset = "0xFF7EB0", VA = "0xFF7EB0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60017EF")]
		[Address(RVA = "0xFF7FB4", Offset = "0xFF7FB4", VA = "0xFF7FB4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000E15")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6AAEAC", Offset = "0x6AAEAC")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x6AAEAC", Offset = "0x6AAEAC")]
	public float TransitionDuration;

	[Token(Token = "0x4000E16")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6AAF04", Offset = "0x6AAF04")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x6AAF04", Offset = "0x6AAF04")]
	public float TeleportDelay;

	[Token(Token = "0x4000E17")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6AAF58", Offset = "0x6AAF58")]
	public AnimationCurve FadeLevels;

	[Token(Token = "0x6000FD3")]
	[Address(RVA = "0xFF7C4C", Offset = "0xFF7C4C", VA = "0xFF7C4C", Slot = "8")]
	protected override void LocomotionTeleportOnEnterStateTeleporting()
	{
	}

	[Token(Token = "0x6000FD4")]
	[Address(RVA = "0xFF7C78", Offset = "0xFF7C78", VA = "0xFF7C78")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6B1828", Offset = "0x6B1828")]
	protected IEnumerator BlinkCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000FD5")]
	[Address(RVA = "0xFF7D14", Offset = "0xFF7D14", VA = "0xFF7D14")]
	public TeleportTransitionBlink()
	{
	}
}
[Token(Token = "0x20001E7")]
public class TeleportTransitionInstant : TeleportTransition
{
	[Token(Token = "0x6000FD6")]
	[Address(RVA = "0x10702C4", Offset = "0x10702C4", VA = "0x10702C4", Slot = "8")]
	protected override void LocomotionTeleportOnEnterStateTeleporting()
	{
	}

	[Token(Token = "0x6000FD7")]
	[Address(RVA = "0x10702E0", Offset = "0x10702E0", VA = "0x10702E0")]
	public TeleportTransitionInstant()
	{
	}
}
[Token(Token = "0x20001E8")]
public class TeleportTransitionWarp : TeleportTransition
{
	[Token(Token = "0x20003E3")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6A8594", Offset = "0x6A8594")]
	private sealed class <DoWarp>d__3 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001850")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001851")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001852")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportTransitionWarp <>4__this;

		[Token(Token = "0x4001853")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Vector3 <startPosition>5__2;

		[Token(Token = "0x4001854")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float <elapsedTime>5__3;

		[Token(Token = "0x1700040F")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60017F4")]
			[Address(RVA = "0x107052C", Offset = "0x107052C", VA = "0x107052C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000410")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60017F6")]
			[Address(RVA = "0x1070594", Offset = "0x1070594", VA = "0x1070594", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60017F1")]
		[Address(RVA = "0x1070384", Offset = "0x1070384", VA = "0x1070384")]
		[DebuggerHidden]
		public <DoWarp>d__3(int <>1__state)
		{
		}

		[Token(Token = "0x60017F2")]
		[Address(RVA = "0x10703F8", Offset = "0x10703F8", VA = "0x10703F8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60017F3")]
		[Address(RVA = "0x10703FC", Offset = "0x10703FC", VA = "0x10703FC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60017F5")]
		[Address(RVA = "0x1070534", Offset = "0x1070534", VA = "0x1070534", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000E18")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6AAF90", Offset = "0x6AAF90")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x6AAF90", Offset = "0x6AAF90")]
	public float TransitionDuration;

	[Token(Token = "0x4000E19")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[HideInInspector]
	public AnimationCurve PositionLerp;

	[Token(Token = "0x6000FD8")]
	[Address(RVA = "0x10702E8", Offset = "0x10702E8", VA = "0x10702E8", Slot = "8")]
	protected override void LocomotionTeleportOnEnterStateTeleporting()
	{
	}

	[Token(Token = "0x6000FD9")]
	[Address(RVA = "0x1070314", Offset = "0x1070314", VA = "0x1070314")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6B188C", Offset = "0x6B188C")]
	private IEnumerator DoWarp()
	{
		return null;
	}

	[Token(Token = "0x6000FDA")]
	[Address(RVA = "0x10703B0", Offset = "0x10703B0", VA = "0x10703B0")]
	public TeleportTransitionWarp()
	{
	}
}
[Token(Token = "0x20001E9")]
public static class NativeVideoPlayer
{
	[Token(Token = "0x20003E4")]
	public enum PlabackState
	{
		[Token(Token = "0x4001856")]
		Idle = 1,
		[Token(Token = "0x4001857")]
		Preparing,
		[Token(Token = "0x4001858")]
		Buffering,
		[Token(Token = "0x4001859")]
		Ready,
		[Token(Token = "0x400185A")]
		Ended
	}

	[Token(Token = "0x4000E1A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static IntPtr? _Activity;

	[Token(Token = "0x4000E1B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static IntPtr? _VideoPlayerClass;

	[Token(Token = "0x4000E1C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private static readonly jvalue[] EmptyParams;

	[Token(Token = "0x4000E1D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private static IntPtr getIsPlayingMethodId;

	[Token(Token = "0x4000E1E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private static IntPtr getCurrentPlaybackStateMethodId;

	[Token(Token = "0x4000E1F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private static IntPtr getDurationMethodId;

	[Token(Token = "0x4000E20")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private static IntPtr getPlaybackPositionMethodId;

	[Token(Token = "0x4000E21")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private static IntPtr setPlaybackPositionMethodId;

	[Token(Token = "0x4000E22")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private static jvalue[] setPlaybackPositionParams;

	[Token(Token = "0x4000E23")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private static IntPtr playVideoMethodId;

	[Token(Token = "0x4000E24")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private static jvalue[] playVideoParams;

	[Token(Token = "0x4000E25")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private static IntPtr stopMethodId;

	[Token(Token = "0x4000E26")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private static IntPtr resumeMethodId;

	[Token(Token = "0x4000E27")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private static IntPtr pauseMethodId;

	[Token(Token = "0x4000E28")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private static IntPtr setPlaybackSpeedMethodId;

	[Token(Token = "0x4000E29")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private static jvalue[] setPlaybackSpeedParams;

	[Token(Token = "0x4000E2A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private static IntPtr setLoopingMethodId;

	[Token(Token = "0x4000E2B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private static jvalue[] setLoopingParams;

	[Token(Token = "0x4000E2C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private static IntPtr setListenerRotationQuaternionMethodId;

	[Token(Token = "0x4000E2D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private static jvalue[] setListenerRotationQuaternionParams;

	[Token(Token = "0x170002A5")]
	private static IntPtr VideoPlayerClass
	{
		[Token(Token = "0x6000FDB")]
		[Address(RVA = "0x100919C", Offset = "0x100919C", VA = "0x100919C")]
		get
		{
			return default(IntPtr);
		}
	}

	[Token(Token = "0x170002A6")]
	private static IntPtr Activity
	{
		[Token(Token = "0x6000FDC")]
		[Address(RVA = "0x1009458", Offset = "0x1009458", VA = "0x1009458")]
		get
		{
			return default(IntPtr);
		}
	}

	[Token(Token = "0x170002A7")]
	public static bool IsAvailable
	{
		[Token(Token = "0x6000FDD")]
		[Address(RVA = "0x1005D10", Offset = "0x1005D10", VA = "0x1005D10")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170002A8")]
	public static bool IsPlaying
	{
		[Token(Token = "0x6000FDE")]
		[Address(RVA = "0x1006F78", Offset = "0x1006F78", VA = "0x1006F78")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170002A9")]
	public static PlabackState CurrentPlaybackState
	{
		[Token(Token = "0x6000FDF")]
		[Address(RVA = "0x100969C", Offset = "0x100969C", VA = "0x100969C")]
		get
		{
			return default(PlabackState);
		}
	}

	[Token(Token = "0x170002AA")]
	public static long Duration
	{
		[Token(Token = "0x6000FE0")]
		[Address(RVA = "0x100715C", Offset = "0x100715C", VA = "0x100715C")]
		get
		{
			return default(long);
		}
	}

	[Token(Token = "0x170002AB")]
	public static long PlaybackPosition
	{
		[Token(Token = "0x6000FE1")]
		[Address(RVA = "0x1007068", Offset = "0x1007068", VA = "0x1007068")]
		get
		{
			return default(long);
		}
		[Token(Token = "0x6000FE2")]
		[Address(RVA = "0x100673C", Offset = "0x100673C", VA = "0x100673C")]
		set
		{
		}
	}

	[Token(Token = "0x6000FE3")]
	[Address(RVA = "0x10077BC", Offset = "0x10077BC", VA = "0x10077BC")]
	public static void PlayVideo(string path, string drmLicenseUrl, IntPtr surfaceObj)
	{
	}

	[Token(Token = "0x6000FE4")]
	[Address(RVA = "0x1007500", Offset = "0x1007500", VA = "0x1007500")]
	public static void Stop()
	{
	}

	[Token(Token = "0x6000FE5")]
	[Address(RVA = "0x10063CC", Offset = "0x10063CC", VA = "0x10063CC")]
	public static void Play()
	{
	}

	[Token(Token = "0x6000FE6")]
	[Address(RVA = "0x1006550", Offset = "0x1006550", VA = "0x1006550")]
	public static void Pause()
	{
	}

	[Token(Token = "0x6000FE7")]
	[Address(RVA = "0x1007328", Offset = "0x1007328", VA = "0x1007328")]
	public static void SetPlaybackSpeed(float speed)
	{
	}

	[Token(Token = "0x6000FE8")]
	[Address(RVA = "0x10079B0", Offset = "0x10079B0", VA = "0x10079B0")]
	public static void SetLooping(bool looping)
	{
	}

	[Token(Token = "0x6000FE9")]
	[Address(RVA = "0x1006DBC", Offset = "0x1006DBC", VA = "0x1006DBC")]
	public static void SetListenerRotation(Quaternion rotation)
	{
	}
}
[Token(Token = "0x20001EA")]
public class ButtonDownListener : MonoBehaviour, IPointerDownHandler, IEventSystemHandler
{
	[Token(Token = "0x1400000F")]
	public event Action onButtonDown
	{
		[Token(Token = "0x6000FEB")]
		[Address(RVA = "0x10DAB88", Offset = "0x10DAB88", VA = "0x10DAB88")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6B18F0", Offset = "0x6B18F0")]
		add
		{
		}
		[Token(Token = "0x6000FEC")]
		[Address(RVA = "0x10DAC2C", Offset = "0x10DAC2C", VA = "0x10DAC2C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6B1900", Offset = "0x6B1900")]
		remove
		{
		}
	}

	[Token(Token = "0x6000FED")]
	[Address(RVA = "0x10DACD0", Offset = "0x10DACD0", VA = "0x10DACD0", Slot = "4")]
	public void OnPointerDown(PointerEventData eventData)
	{
	}

	[Token(Token = "0x6000FEE")]
	[Address(RVA = "0x10DACE4", Offset = "0x10DACE4", VA = "0x10DACE4")]
	public ButtonDownListener()
	{
	}
}
[Token(Token = "0x20001EB")]
public class MediaPlayerImage : Image
{
	[Token(Token = "0x20003E5")]
	public enum ButtonType
	{
		[Token(Token = "0x400185C")]
		Play,
		[Token(Token = "0x400185D")]
		Pause,
		[Token(Token = "0x400185E")]
		FastForward,
		[Token(Token = "0x400185F")]
		Rewind,
		[Token(Token = "0x4001860")]
		SkipForward,
		[Token(Token = "0x4001861")]
		SkipBack,
		[Token(Token = "0x4001862")]
		Stop
	}

	[Token(Token = "0x4000E2F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	[SerializeField]
	private ButtonType m_ButtonType;

	[Token(Token = "0x170002AC")]
	public ButtonType buttonType
	{
		[Token(Token = "0x6000FEF")]
		[Address(RVA = "0x1098A48", Offset = "0x1098A48", VA = "0x1098A48")]
		get
		{
			return default(ButtonType);
		}
		[Token(Token = "0x6000FF0")]
		[Address(RVA = "0x1098A50", Offset = "0x1098A50", VA = "0x1098A50")]
		set
		{
		}
	}

	[Token(Token = "0x6000FF1")]
	[Address(RVA = "0x1098A74", Offset = "0x1098A74", VA = "0x1098A74", Slot = "44")]
	protected override void OnPopulateMesh(VertexHelper toFill)
	{
	}

	[Token(Token = "0x6000FF2")]
	[Address(RVA = "0x1099F40", Offset = "0x1099F40", VA = "0x1099F40")]
	public MediaPlayerImage()
	{
	}
}
[Token(Token = "0x20001EC")]
public class MoviePlayerSample : MonoBehaviour
{
	[Token(Token = "0x20003E6")]
	public enum VideoShape
	{
		[Token(Token = "0x4001864")]
		_360,
		[Token(Token = "0x4001865")]
		_180,
		[Token(Token = "0x4001866")]
		Quad
	}

	[Token(Token = "0x20003E7")]
	public enum VideoStereo
	{
		[Token(Token = "0x4001868")]
		Mono,
		[Token(Token = "0x4001869")]
		TopBottom,
		[Token(Token = "0x400186A")]
		LeftRight,
		[Token(Token = "0x400186B")]
		BottomTop
	}

	[Token(Token = "0x20003E8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6A85A4", Offset = "0x6A85A4")]
	private sealed class <Start>d__32 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400186C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400186D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400186E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MoviePlayerSample <>4__this;

		[Token(Token = "0x17000411")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60017FA")]
			[Address(RVA = "0x1007C78", Offset = "0x1007C78", VA = "0x1007C78", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000412")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60017FC")]
			[Address(RVA = "0x1007CE0", Offset = "0x1007CE0", VA = "0x1007CE0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60017F7")]
		[Address(RVA = "0x10060C8", Offset = "0x10060C8", VA = "0x10060C8")]
		[DebuggerHidden]
		public <Start>d__32(int <>1__state)
		{
		}

		[Token(Token = "0x60017F8")]
		[Address(RVA = "0x1007AF4", Offset = "0x1007AF4", VA = "0x1007AF4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60017F9")]
		[Address(RVA = "0x1007AF8", Offset = "0x1007AF8", VA = "0x1007AF8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60017FB")]
		[Address(RVA = "0x1007C80", Offset = "0x1007C80", VA = "0x1007C80", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20003E9")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6A85B4", Offset = "0x6A85B4")]
	private sealed class <>c__DisplayClass33_0
	{
		[Token(Token = "0x400186F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string moviePath;

		[Token(Token = "0x4001870")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string drmLicencesUrl;

		[Token(Token = "0x4001871")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MoviePlayerSample <>4__this;

		[Token(Token = "0x60017FD")]
		[Address(RVA = "0x1006330", Offset = "0x1006330", VA = "0x1006330")]
		public <>c__DisplayClass33_0()
		{
		}

		[Token(Token = "0x60017FE")]
		[Address(RVA = "0x10076E8", Offset = "0x10076E8", VA = "0x10076E8")]
		internal void <Play>b__0()
		{
		}
	}

	[Token(Token = "0x4000E30")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool videoPausedBeforeAppPause;

	[Token(Token = "0x4000E31")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private VideoPlayer videoPlayer;

	[Token(Token = "0x4000E32")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private OVROverlay overlay;

	[Token(Token = "0x4000E33")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Renderer mediaRenderer;

	[Token(Token = "0x4000E34")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6AB018", Offset = "0x6AB018")]
	private bool <IsPlaying>k__BackingField;

	[Token(Token = "0x4000E35")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6AB028", Offset = "0x6AB028")]
	private long <Duration>k__BackingField;

	[Token(Token = "0x4000E36")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6AB038", Offset = "0x6AB038")]
	private long <PlaybackPosition>k__BackingField;

	[Token(Token = "0x4000E37")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private RenderTexture copyTexture;

	[Token(Token = "0x4000E38")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Material externalTex2DMaterial;

	[Token(Token = "0x4000E39")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public string MovieName;

	[Token(Token = "0x4000E3A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public string DrmLicenseUrl;

	[Token(Token = "0x4000E3B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public bool LoopVideo;

	[Token(Token = "0x4000E3C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public VideoShape Shape;

	[Token(Token = "0x4000E3D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public VideoStereo Stereo;

	[Token(Token = "0x4000E3E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public bool DisplayMono;

	[Token(Token = "0x4000E3F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private VideoShape _LastShape;

	[Token(Token = "0x4000E40")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private VideoStereo _LastStereo;

	[Token(Token = "0x4000E41")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private bool _LastDisplayMono;

	[Token(Token = "0x170002AD")]
	public bool IsPlaying
	{
		[Token(Token = "0x6000FF3")]
		[Address(RVA = "0x1005AC4", Offset = "0x1005AC4", VA = "0x1005AC4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6B1910", Offset = "0x6B1910")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000FF4")]
		[Address(RVA = "0x1005ACC", Offset = "0x1005ACC", VA = "0x1005ACC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6B1920", Offset = "0x6B1920")]
		private set
		{
		}
	}

	[Token(Token = "0x170002AE")]
	public long Duration
	{
		[Token(Token = "0x6000FF5")]
		[Address(RVA = "0x1005AD8", Offset = "0x1005AD8", VA = "0x1005AD8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6B1930", Offset = "0x6B1930")]
		get
		{
			return default(long);
		}
		[Token(Token = "0x6000FF6")]
		[Address(RVA = "0x1005AE0", Offset = "0x1005AE0", VA = "0x1005AE0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6B1940", Offset = "0x6B1940")]
		private set
		{
		}
	}

	[Token(Token = "0x170002AF")]
	public long PlaybackPosition
	{
		[Token(Token = "0x6000FF7")]
		[Address(RVA = "0x1005AE8", Offset = "0x1005AE8", VA = "0x1005AE8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6B1950", Offset = "0x6B1950")]
		get
		{
			return default(long);
		}
		[Token(Token = "0x6000FF8")]
		[Address(RVA = "0x1005AF0", Offset = "0x1005AF0", VA = "0x1005AF0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6B1960", Offset = "0x6B1960")]
		private set
		{
		}
	}

	[Token(Token = "0x6000FF9")]
	[Address(RVA = "0x1005AF8", Offset = "0x1005AF8", VA = "0x1005AF8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000FFA")]
	[Address(RVA = "0x1005D78", Offset = "0x1005D78", VA = "0x1005D78")]
	private bool IsLocalVideo(string movieName)
	{
		return default(bool);
	}

	[Token(Token = "0x6000FFB")]
	[Address(RVA = "0x1005DE0", Offset = "0x1005DE0", VA = "0x1005DE0")]
	private void UpdateShapeAndStereo()
	{
	}

	[Token(Token = "0x6000FFC")]
	[Address(RVA = "0x1006058", Offset = "0x1006058", VA = "0x1006058")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6B1970", Offset = "0x6B1970")]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x6000FFD")]
	[Address(RVA = "0x10060F4", Offset = "0x10060F4", VA = "0x10060F4")]
	public void Play(string moviePath, string drmLicencesUrl)
	{
	}

	[Token(Token = "0x6000FFE")]
	[Address(RVA = "0x1006338", Offset = "0x1006338", VA = "0x1006338")]
	public void Play()
	{
	}

	[Token(Token = "0x6000FFF")]
	[Address(RVA = "0x10064C0", Offset = "0x10064C0", VA = "0x10064C0")]
	public void Pause()
	{
	}

	[Token(Token = "0x6001000")]
	[Address(RVA = "0x1006644", Offset = "0x1006644", VA = "0x1006644")]
	public void SeekTo(long position)
	{
	}

	[Token(Token = "0x6001001")]
	[Address(RVA = "0x100687C", Offset = "0x100687C", VA = "0x100687C")]
	private void Update()
	{
	}

	[Token(Token = "0x6001002")]
	[Address(RVA = "0x1007250", Offset = "0x1007250", VA = "0x1007250")]
	public void SetPlaybackSpeed(float speed)
	{
	}

	[Token(Token = "0x6001003")]
	[Address(RVA = "0x1007470", Offset = "0x1007470", VA = "0x1007470")]
	public void Stop()
	{
	}

	[Token(Token = "0x6001004")]
	[Address(RVA = "0x10075F4", Offset = "0x10075F4", VA = "0x10075F4")]
	private void OnApplicationPause(bool appWasPaused)
	{
	}

	[Token(Token = "0x6001005")]
	[Address(RVA = "0x10076D8", Offset = "0x10076D8", VA = "0x10076D8")]
	public MoviePlayerSample()
	{
	}
}
[Token(Token = "0x20001ED")]
public class MoviePlayerSampleControls : MonoBehaviour
{
	[Token(Token = "0x20003EA")]
	private enum PlaybackState
	{
		[Token(Token = "0x4001873")]
		Playing,
		[Token(Token = "0x4001874")]
		Paused,
		[Token(Token = "0x4001875")]
		Rewinding,
		[Token(Token = "0x4001876")]
		FastForwarding
	}

	[Token(Token = "0x4000E42")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public MoviePlayerSample Player;

	[Token(Token = "0x4000E43")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public OVRInputModule InputModule;

	[Token(Token = "0x4000E44")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OVRGazePointer GazePointer;

	[Token(Token = "0x4000E45")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject LeftHand;

	[Token(Token = "0x4000E46")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject RightHand;

	[Token(Token = "0x4000E47")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Canvas Canvas;

	[Token(Token = "0x4000E48")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public ButtonDownListener PlayPause;

	[Token(Token = "0x4000E49")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public MediaPlayerImage PlayPauseImage;

	[Token(Token = "0x4000E4A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Slider ProgressBar;

	[Token(Token = "0x4000E4B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public ButtonDownListener FastForward;

	[Token(Token = "0x4000E4C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public MediaPlayerImage FastForwardImage;

	[Token(Token = "0x4000E4D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public ButtonDownListener Rewind;

	[Token(Token = "0x4000E4E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public MediaPlayerImage RewindImage;

	[Token(Token = "0x4000E4F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public float TimeoutTime;

	[Token(Token = "0x4000E50")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private bool _isVisible;

	[Token(Token = "0x4000E51")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private float _lastButtonTime;

	[Token(Token = "0x4000E52")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private bool _didSeek;

	[Token(Token = "0x4000E53")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private long _seekPreviousPosition;

	[Token(Token = "0x4000E54")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private long _rewindStartPosition;

	[Token(Token = "0x4000E55")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private float _rewindStartTime;

	[Token(Token = "0x4000E56")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	private PlaybackState _state;

	[Token(Token = "0x6001006")]
	[Address(RVA = "0x1007CE8", Offset = "0x1007CE8", VA = "0x1007CE8")]
	private void Start()
	{
	}

	[Token(Token = "0x6001007")]
	[Address(RVA = "0x1007F9C", Offset = "0x1007F9C", VA = "0x1007F9C")]
	private void OnPlayPauseClicked()
	{
	}

	[Token(Token = "0x6001008")]
	[Address(RVA = "0x10080C8", Offset = "0x10080C8", VA = "0x10080C8")]
	private void OnFastForwardClicked()
	{
	}

	[Token(Token = "0x6001009")]
	[Address(RVA = "0x10081D4", Offset = "0x10081D4", VA = "0x10081D4")]
	private void OnRewindClicked()
	{
	}

	[Token(Token = "0x600100A")]
	[Address(RVA = "0x10082B4", Offset = "0x10082B4", VA = "0x10082B4")]
	private void OnSeekBarMoved(float value)
	{
	}

	[Token(Token = "0x600100B")]
	[Address(RVA = "0x10081A8", Offset = "0x10081A8", VA = "0x10081A8")]
	private void Seek(long pos)
	{
	}

	[Token(Token = "0x600100C")]
	[Address(RVA = "0x100837C", Offset = "0x100837C", VA = "0x100837C")]
	private void Update()
	{
	}

	[Token(Token = "0x600100D")]
	[Address(RVA = "0x1007E90", Offset = "0x1007E90", VA = "0x1007E90")]
	private void SetVisible(bool visible)
	{
	}

	[Token(Token = "0x600100E")]
	[Address(RVA = "0x1008710", Offset = "0x1008710", VA = "0x1008710")]
	public MoviePlayerSampleControls()
	{
	}
}
[Token(Token = "0x20001EE")]
public static class VectorUtil
{
	[Token(Token = "0x600100F")]
	[Address(RVA = "0x10131B4", Offset = "0x10131B4", VA = "0x10131B4")]
	public static Vector4 ToVector(this Rect rect)
	{
		return default(Vector4);
	}
}
[Token(Token = "0x20001EF")]
public class DebugUISample : MonoBehaviour
{
	[Token(Token = "0x4000E57")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool inMenu;

	[Token(Token = "0x4000E58")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Text sliderText;

	[Token(Token = "0x6001010")]
	[Address(RVA = "0x102EB74", Offset = "0x102EB74", VA = "0x102EB74")]
	private void Start()
	{
	}

	[Token(Token = "0x6001011")]
	[Address(RVA = "0x102EF44", Offset = "0x102EF44", VA = "0x102EF44")]
	public void TogglePressed(Toggle t)
	{
	}

	[Token(Token = "0x6001012")]
	[Address(RVA = "0x102EFFC", Offset = "0x102EFFC", VA = "0x102EFFC")]
	public void RadioPressed(string radioLabel, string group, Toggle t)
	{
	}

	[Token(Token = "0x6001013")]
	[Address(RVA = "0x102F1FC", Offset = "0x102F1FC", VA = "0x102F1FC")]
	public void SliderPressed(float f)
	{
	}

	[Token(Token = "0x6001014")]
	[Address(RVA = "0x102F2E4", Offset = "0x102F2E4", VA = "0x102F2E4")]
	private void Update()
	{
	}

	[Token(Token = "0x6001015")]
	[Address(RVA = "0x102F3C0", Offset = "0x102F3C0", VA = "0x102F3C0")]
	private void LogButtonPressed()
	{
	}

	[Token(Token = "0x6001016")]
	[Address(RVA = "0x102F42C", Offset = "0x102F42C", VA = "0x102F42C")]
	public DebugUISample()
	{
	}

	[Token(Token = "0x6001017")]
	[Address(RVA = "0x102F434", Offset = "0x102F434", VA = "0x102F434")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6B19E4", Offset = "0x6B19E4")]
	private void <Start>b__2_0(Toggle t)
	{
	}

	[Token(Token = "0x6001018")]
	[Address(RVA = "0x102F490", Offset = "0x102F490", VA = "0x102F490")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6B19F4", Offset = "0x6B19F4")]
	private void <Start>b__2_1(Toggle t)
	{
	}

	[Token(Token = "0x6001019")]
	[Address(RVA = "0x102F4EC", Offset = "0x102F4EC", VA = "0x102F4EC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6B1A04", Offset = "0x6B1A04")]
	private void <Start>b__2_2(Toggle t)
	{
	}

	[Token(Token = "0x600101A")]
	[Address(RVA = "0x102F548", Offset = "0x102F548", VA = "0x102F548")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6B1A14", Offset = "0x6B1A14")]
	private void <Start>b__2_3(Toggle t)
	{
	}
}
[Token(Token = "0x20001F0")]
public class HandsActiveChecker : MonoBehaviour
{
	[Token(Token = "0x20003EB")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6A85C4", Offset = "0x6A85C4")]
	private sealed class <GetCenterEye>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001877")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001878")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001879")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public HandsActiveChecker <>4__this;

		[Token(Token = "0x17000413")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001802")]
			[Address(RVA = "0x1063568", Offset = "0x1063568", VA = "0x1063568", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000414")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001804")]
			[Address(RVA = "0x10635D0", Offset = "0x10635D0", VA = "0x10635D0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60017FF")]
		[Address(RVA = "0x1063418", Offset = "0x1063418", VA = "0x1063418")]
		[DebuggerHidden]
		public <GetCenterEye>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x6001800")]
		[Address(RVA = "0x106344C", Offset = "0x106344C", VA = "0x106344C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001801")]
		[Address(RVA = "0x1063450", Offset = "0x1063450", VA = "0x1063450", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001803")]
		[Address(RVA = "0x1063570", Offset = "0x1063570", VA = "0x1063570", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000E59")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject _notificationPrefab;

	[Token(Token = "0x4000E5A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private GameObject _notification;

	[Token(Token = "0x4000E5B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private OVRCameraRig _cameraRig;

	[Token(Token = "0x4000E5C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Transform _centerEye;

	[Token(Token = "0x600101B")]
	[Address(RVA = "0x106311C", Offset = "0x106311C", VA = "0x106311C")]
	private void Awake()
	{
	}

	[Token(Token = "0x600101C")]
	[Address(RVA = "0x106321C", Offset = "0x106321C", VA = "0x106321C")]
	private void Update()
	{
	}

	[Token(Token = "0x600101D")]
	[Address(RVA = "0x10631AC", Offset = "0x10631AC", VA = "0x10631AC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6B1A24", Offset = "0x6B1A24")]
	private IEnumerator GetCenterEye()
	{
		return null;
	}

	[Token(Token = "0x600101E")]
	[Address(RVA = "0x1063444", Offset = "0x1063444", VA = "0x1063444")]
	public HandsActiveChecker()
	{
	}
}
[Token(Token = "0x20001F1")]
[ExecuteInEditMode]
public class CharacterCapsule : MonoBehaviour
{
	[Token(Token = "0x4000E5D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private CharacterController _character;

	[Token(Token = "0x4000E5E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private MeshFilter _meshFilter;

	[Token(Token = "0x4000E5F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float _height;

	[Token(Token = "0x4000E60")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float _radius;

	[Token(Token = "0x4000E61")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x6AB058", Offset = "0x6AB058")]
	public int SubdivisionsU;

	[Token(Token = "0x4000E62")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x6AB074", Offset = "0x6AB074")]
	public int SubdivisionsV;

	[Token(Token = "0x4000E63")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int _subdivisionU;

	[Token(Token = "0x4000E64")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private int _subdivisionV;

	[Token(Token = "0x4000E65")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Vector3[] _vertices;

	[Token(Token = "0x4000E66")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private int[] _triangles;

	[Token(Token = "0x600101F")]
	[Address(RVA = "0x1117E08", Offset = "0x1117E08", VA = "0x1117E08")]
	private void Update()
	{
	}

	[Token(Token = "0x6001020")]
	[Address(RVA = "0x11188C0", Offset = "0x11188C0", VA = "0x11188C0")]
	public CharacterCapsule()
	{
	}
}
[Token(Token = "0x20001F2")]
public class LocomotionSampleSupport : MonoBehaviour
{
	[Token(Token = "0x4000E67")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private LocomotionController lc;

	[Token(Token = "0x4000E68")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool inMenu;

	[Token(Token = "0x170002B0")]
	private LocomotionTeleport TeleportController
	{
		[Token(Token = "0x6001021")]
		[Address(RVA = "0x10953D4", Offset = "0x10953D4", VA = "0x10953D4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6001022")]
	[Address(RVA = "0x109542C", Offset = "0x109542C", VA = "0x109542C")]
	public void Start()
	{
	}

	[Token(Token = "0x6001023")]
	[Address(RVA = "0x1095770", Offset = "0x1095770", VA = "0x1095770")]
	public void Update()
	{
	}

	[Token(Token = "0x6001024")]
	[Address(RVA = "0x1095854", Offset = "0x1095854", VA = "0x1095854")]
	[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x6B1A88", Offset = "0x6B1A88")]
	private static void Log(string msg)
	{
	}

	[Token(Token = "0x6001025")]
	public static TActivate ActivateCategory<TCategory, TActivate>(GameObject target) where TCategory : MonoBehaviour where TActivate : MonoBehaviour
	{
		return null;
	}

	[Token(Token = "0x6001026")]
	protected void ActivateHandlers<TInput, TAim, TTarget, TOrientation, TTransition>() where TInput : TeleportInputHandler where TAim : TeleportAimHandler where TTarget : TeleportTargetHandler where TOrientation : TeleportOrientationHandler where TTransition : TeleportTransition
	{
	}

	[Token(Token = "0x6001027")]
	protected void ActivateInput<TActivate>() where TActivate : TeleportInputHandler
	{
	}

	[Token(Token = "0x6001028")]
	protected void ActivateAim<TActivate>() where TActivate : TeleportAimHandler
	{
	}

	[Token(Token = "0x6001029")]
	protected void ActivateTarget<TActivate>() where TActivate : TeleportTargetHandler
	{
	}

	[Token(Token = "0x600102A")]
	protected void ActivateOrientation<TActivate>() where TActivate : TeleportOrientationHandler
	{
	}

	[Token(Token = "0x600102B")]
	protected void ActivateTransition<TActivate>() where TActivate : TeleportTransition
	{
	}

	[Token(Token = "0x600102C")]
	protected TActivate ActivateCategory<TCategory, TActivate>() where TCategory : MonoBehaviour where TActivate : MonoBehaviour
	{
		return null;
	}

	[Token(Token = "0x600102D")]
	[Address(RVA = "0x10958BC", Offset = "0x10958BC", VA = "0x10958BC")]
	protected void UpdateToggle(Toggle toggle, bool enabled)
	{
	}

	[Token(Token = "0x600102E")]
	[Address(RVA = "0x10958F8", Offset = "0x10958F8", VA = "0x10958F8")]
	private void SetupNonCap()
	{
	}

	[Token(Token = "0x600102F")]
	[Address(RVA = "0x109596C", Offset = "0x109596C", VA = "0x109596C")]
	private void SetupTeleportDefaults()
	{
	}

	[Token(Token = "0x6001030")]
	[Address(RVA = "0x1095AC8", Offset = "0x1095AC8", VA = "0x1095AC8")]
	protected GameObject AddInstance(GameObject template, string label)
	{
		return null;
	}

	[Token(Token = "0x6001031")]
	[Address(RVA = "0x1095B9C", Offset = "0x1095B9C", VA = "0x1095B9C")]
	private void SetupNodeTeleport()
	{
	}

	[Token(Token = "0x6001032")]
	[Address(RVA = "0x109567C", Offset = "0x109567C", VA = "0x109567C")]
	private void SetupTwoStickTeleport()
	{
	}

	[Token(Token = "0x6001033")]
	[Address(RVA = "0x1095C5C", Offset = "0x1095C5C", VA = "0x1095C5C")]
	private void SetupWalkOnly()
	{
	}

	[Token(Token = "0x6001034")]
	[Address(RVA = "0x1095CC4", Offset = "0x1095CC4", VA = "0x1095CC4")]
	private void SetupLeftStrafeRightTeleport()
	{
	}

	[Token(Token = "0x6001035")]
	[Address(RVA = "0x1095DA8", Offset = "0x1095DA8", VA = "0x1095DA8")]
	public LocomotionSampleSupport()
	{
	}
}
[Token(Token = "0x20001F3")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x6A799C", Offset = "0x6A799C")]
public class OVROverlayCanvas : MonoBehaviour
{
	[Token(Token = "0x20003EC")]
	public enum DrawMode
	{
		[Token(Token = "0x400187B")]
		Opaque,
		[Token(Token = "0x400187C")]
		OpaqueWithClip,
		[Token(Token = "0x400187D")]
		TransparentDefaultAlpha,
		[Token(Token = "0x400187E")]
		TransparentCorrectAlpha
	}

	[Token(Token = "0x4000E69")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	[HideInInspector]
	private Shader _transparentShader;

	[Token(Token = "0x4000E6A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	[HideInInspector]
	private Shader _opaqueShader;

	[Token(Token = "0x4000E6B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private RectTransform _rectTransform;

	[Token(Token = "0x4000E6C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Canvas _canvas;

	[Token(Token = "0x4000E6D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Camera _camera;

	[Token(Token = "0x4000E6E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private OVROverlay _overlay;

	[Token(Token = "0x4000E6F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private RenderTexture _renderTexture;

	[Token(Token = "0x4000E70")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private MeshRenderer _meshRenderer;

	[Token(Token = "0x4000E71")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Mesh _quad;

	[Token(Token = "0x4000E72")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Material _defaultMat;

	[Token(Token = "0x4000E73")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public int MaxTextureSize;

	[Token(Token = "0x4000E74")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public int MinTextureSize;

	[Token(Token = "0x4000E75")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public float PixelsPerUnit;

	[Token(Token = "0x4000E76")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public int DrawRate;

	[Token(Token = "0x4000E77")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public int DrawFrameOffset;

	[Token(Token = "0x4000E78")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public bool Expensive;

	[Token(Token = "0x4000E79")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public int Layer;

	[Token(Token = "0x4000E7A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public DrawMode Opacity;

	[Token(Token = "0x4000E7B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private bool ScaleViewport;

	[Token(Token = "0x4000E7C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly Plane[] _FrustumPlanes;

	[Token(Token = "0x170002B1")]
	public bool overlayEnabled
	{
		[Token(Token = "0x600103C")]
		[Address(RVA = "0x11F72E4", Offset = "0x11F72E4", VA = "0x11F72E4")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600103D")]
		[Address(RVA = "0x11F7378", Offset = "0x11F7378", VA = "0x11F7378")]
		set
		{
		}
	}

	[Token(Token = "0x6001036")]
	[Address(RVA = "0x11F5C74", Offset = "0x11F5C74", VA = "0x11F5C74")]
	private void Start()
	{
	}

	[Token(Token = "0x6001037")]
	[Address(RVA = "0x11F68E4", Offset = "0x11F68E4", VA = "0x11F68E4")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6001038")]
	[Address(RVA = "0x11F6968", Offset = "0x11F6968", VA = "0x11F6968")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6001039")]
	[Address(RVA = "0x11F6A5C", Offset = "0x11F6A5C", VA = "0x11F6A5C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600103A")]
	[Address(RVA = "0x11F6B50", Offset = "0x11F6B50", VA = "0x11F6B50", Slot = "4")]
	protected virtual bool ShouldRender()
	{
		return default(bool);
	}

	[Token(Token = "0x600103B")]
	[Address(RVA = "0x11F6D54", Offset = "0x11F6D54", VA = "0x11F6D54")]
	private void Update()
	{
	}

	[Token(Token = "0x600103E")]
	[Address(RVA = "0x11F7448", Offset = "0x11F7448", VA = "0x11F7448")]
	public OVROverlayCanvas()
	{
	}
}
[Token(Token = "0x20001F4")]
public class StartMenu : MonoBehaviour
{
	[Token(Token = "0x20003ED")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6A85D4", Offset = "0x6A85D4")]
	private sealed class <>c__DisplayClass3_0
	{
		[Token(Token = "0x400187F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int sceneIndex;

		[Token(Token = "0x4001880")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public StartMenu <>4__this;

		[Token(Token = "0x6001805")]
		[Address(RVA = "0xFF0598", Offset = "0xFF0598", VA = "0xFF0598")]
		public <>c__DisplayClass3_0()
		{
		}

		[Token(Token = "0x6001806")]
		[Address(RVA = "0xFF06A8", Offset = "0xFF06A8", VA = "0xFF06A8")]
		internal void <Start>b__0()
		{
		}
	}

	[Token(Token = "0x4000E7D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OVROverlay overlay;

	[Token(Token = "0x4000E7E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public OVROverlay text;

	[Token(Token = "0x4000E7F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OVRCameraRig vrRig;

	[Token(Token = "0x6001040")]
	[Address(RVA = "0xFF03D8", Offset = "0xFF03D8", VA = "0xFF03D8")]
	private void Start()
	{
	}

	[Token(Token = "0x6001041")]
	[Address(RVA = "0xFF05A0", Offset = "0xFF05A0", VA = "0xFF05A0")]
	private void LoadScene(int idx)
	{
	}

	[Token(Token = "0x6001042")]
	[Address(RVA = "0xFF06A0", Offset = "0xFF06A0", VA = "0xFF06A0")]
	public StartMenu()
	{
	}
}
[Token(Token = "0x20001F5")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x6A7A00", Offset = "0x6A7A00")]
public class MouseLook : MonoBehaviour
{
	[Token(Token = "0x20003EE")]
	public enum RotationAxes
	{
		[Token(Token = "0x4001882")]
		MouseXAndY,
		[Token(Token = "0x4001883")]
		MouseX,
		[Token(Token = "0x4001884")]
		MouseY
	}

	[Token(Token = "0x4000E80")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public RotationAxes axes;

	[Token(Token = "0x4000E81")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float sensitivityX;

	[Token(Token = "0x4000E82")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float sensitivityY;

	[Token(Token = "0x4000E83")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float minimumX;

	[Token(Token = "0x4000E84")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float maximumX;

	[Token(Token = "0x4000E85")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float minimumY;

	[Token(Token = "0x4000E86")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float maximumY;

	[Token(Token = "0x4000E87")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float rotationY;

	[Token(Token = "0x6001043")]
	[Address(RVA = "0x1005784", Offset = "0x1005784", VA = "0x1005784")]
	private void Update()
	{
	}

	[Token(Token = "0x6001044")]
	[Address(RVA = "0x10059E4", Offset = "0x10059E4", VA = "0x10059E4")]
	private void Start()
	{
	}

	[Token(Token = "0x6001045")]
	[Address(RVA = "0x1005AA4", Offset = "0x1005AA4", VA = "0x1005AA4")]
	public MouseLook()
	{
	}
}
[Token(Token = "0x20001F6")]
public class ONSPAmbisonicsNative : MonoBehaviour
{
	[Token(Token = "0x20003EF")]
	public enum ovrAmbisonicsNativeStatus
	{
		[Token(Token = "0x4001886")]
		Uninitialized = -1,
		[Token(Token = "0x4001887")]
		NotEnabled,
		[Token(Token = "0x4001888")]
		Success,
		[Token(Token = "0x4001889")]
		StreamError,
		[Token(Token = "0x400188A")]
		ProcessError,
		[Token(Token = "0x400188B")]
		MaxStatValue
	}

	[Token(Token = "0x4000E88")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private AudioSource source;

	[Token(Token = "0x4000E89")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static int numFOAChannels;

	[Token(Token = "0x4000E8A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	private static int paramVSpeakerMode;

	[Token(Token = "0x4000E8B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static int paramAmbiStat;

	[Token(Token = "0x4000E8C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private ovrAmbisonicsNativeStatus currentStatus;

	[Token(Token = "0x4000E8D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	private bool useVirtualSpeakers;

	[Token(Token = "0x170002B2")]
	public bool UseVirtualSpeakers
	{
		[Token(Token = "0x6001046")]
		[Address(RVA = "0x100A040", Offset = "0x100A040", VA = "0x100A040")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6001047")]
		[Address(RVA = "0x100A048", Offset = "0x100A048", VA = "0x100A048")]
		set
		{
		}
	}

	[Token(Token = "0x6001048")]
	[Address(RVA = "0x100A054", Offset = "0x100A054", VA = "0x100A054")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6001049")]
	[Address(RVA = "0x100A288", Offset = "0x100A288", VA = "0x100A288")]
	private void Update()
	{
	}

	[Token(Token = "0x600104A")]
	[Address(RVA = "0x100A4D8", Offset = "0x100A4D8", VA = "0x100A4D8")]
	public ONSPAmbisonicsNative()
	{
	}
}
[Token(Token = "0x20001F7")]
public class ONSPAudioSource : MonoBehaviour
{
	[Token(Token = "0x20003F0")]
	private enum Parameters
	{
		[Token(Token = "0x400188D")]
		P_GAIN,
		[Token(Token = "0x400188E")]
		P_USEINVSQR,
		[Token(Token = "0x400188F")]
		P_NEAR,
		[Token(Token = "0x4001890")]
		P_FAR,
		[Token(Token = "0x4001891")]
		P_RADIUS,
		[Token(Token = "0x4001892")]
		P_DISABLE_RFL,
		[Token(Token = "0x4001893")]
		P_VSPEAKERMODE,
		[Token(Token = "0x4001894")]
		P_AMBISTAT,
		[Token(Token = "0x4001895")]
		P_READONLY_GLOBAL_RFL_ENABLED,
		[Token(Token = "0x4001896")]
		P_READONLY_NUM_VOICES,
		[Token(Token = "0x4001897")]
		P_SENDLEVEL,
		[Token(Token = "0x4001898")]
		P_NUM
	}

	[Token(Token = "0x4000E8E")]
	public const string strONSPS = "AudioPluginOculusSpatializer";

	[Token(Token = "0x4000E8F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private bool enableSpatialization;

	[Token(Token = "0x4000E90")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private float gain;

	[Token(Token = "0x4000E91")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private bool useInvSqr;

	[Token(Token = "0x4000E92")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	private float near;

	[Token(Token = "0x4000E93")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private float far;

	[Token(Token = "0x4000E94")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[SerializeField]
	private float volumetricRadius;

	[Token(Token = "0x4000E95")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private float reverbSend;

	[Token(Token = "0x4000E96")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[SerializeField]
	private bool enableRfl;

	[Token(Token = "0x4000E97")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static ONSPAudioSource RoomReflectionGizmoAS;

	[Token(Token = "0x170002B3")]
	public bool EnableSpatialization
	{
		[Token(Token = "0x600104E")]
		[Address(RVA = "0x100A734", Offset = "0x100A734", VA = "0x100A734")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600104F")]
		[Address(RVA = "0x100A73C", Offset = "0x100A73C", VA = "0x100A73C")]
		set
		{
		}
	}

	[Token(Token = "0x170002B4")]
	public float Gain
	{
		[Token(Token = "0x6001050")]
		[Address(RVA = "0x100A748", Offset = "0x100A748", VA = "0x100A748")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6001051")]
		[Address(RVA = "0x100A750", Offset = "0x100A750", VA = "0x100A750")]
		set
		{
		}
	}

	[Token(Token = "0x170002B5")]
	public bool UseInvSqr
	{
		[Token(Token = "0x6001052")]
		[Address(RVA = "0x100A7D4", Offset = "0x100A7D4", VA = "0x100A7D4")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6001053")]
		[Address(RVA = "0x100A7DC", Offset = "0x100A7DC", VA = "0x100A7DC")]
		set
		{
		}
	}

	[Token(Token = "0x170002B6")]
	public float Near
	{
		[Token(Token = "0x6001054")]
		[Address(RVA = "0x100A7E8", Offset = "0x100A7E8", VA = "0x100A7E8")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6001055")]
		[Address(RVA = "0x100A7F0", Offset = "0x100A7F0", VA = "0x100A7F0")]
		set
		{
		}
	}

	[Token(Token = "0x170002B7")]
	public float Far
	{
		[Token(Token = "0x6001056")]
		[Address(RVA = "0x100A878", Offset = "0x100A878", VA = "0x100A878")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6001057")]
		[Address(RVA = "0x100A880", Offset = "0x100A880", VA = "0x100A880")]
		set
		{
		}
	}

	[Token(Token = "0x170002B8")]
	public float VolumetricRadius
	{
		[Token(Token = "0x6001058")]
		[Address(RVA = "0x100A908", Offset = "0x100A908", VA = "0x100A908")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6001059")]
		[Address(RVA = "0x100A910", Offset = "0x100A910", VA = "0x100A910")]
		set
		{
		}
	}

	[Token(Token = "0x170002B9")]
	public float ReverbSend
	{
		[Token(Token = "0x600105A")]
		[Address(RVA = "0x100A998", Offset = "0x100A998", VA = "0x100A998")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x600105B")]
		[Address(RVA = "0x100A9A0", Offset = "0x100A9A0", VA = "0x100A9A0")]
		set
		{
		}
	}

	[Token(Token = "0x170002BA")]
	public bool EnableRfl
	{
		[Token(Token = "0x600105C")]
		[Address(RVA = "0x100AA28", Offset = "0x100AA28", VA = "0x100AA28")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600105D")]
		[Address(RVA = "0x100AA30", Offset = "0x100AA30", VA = "0x100AA30")]
		set
		{
		}
	}

	[Token(Token = "0x600104C")]
	[Address(RVA = "0x100A55C", Offset = "0x100A55C", VA = "0x100A55C")]
	[AttributeAttribute(Name = "RuntimeInitializeOnLoadMethodAttribute", RVA = "0x6B1AC0", Offset = "0x6B1AC0")]
	private static void OnBeforeSceneLoadRuntimeMethod()
	{
	}

	[PreserveSig]
	[Token(Token = "0x600104D")]
	[Address(RVA = "0x100A654", Offset = "0x100A654", VA = "0x100A654")]
	private static extern void ONSP_GetGlobalRoomReflectionValues(ref bool reflOn, ref bool reverbOn, ref float width, ref float height, ref float length);

	[Token(Token = "0x600105E")]
	[Address(RVA = "0x100AA3C", Offset = "0x100AA3C", VA = "0x100AA3C")]
	private void Awake()
	{
	}

	[Token(Token = "0x600105F")]
	[Address(RVA = "0x100ABB0", Offset = "0x100ABB0", VA = "0x100ABB0")]
	private void Start()
	{
	}

	[Token(Token = "0x6001060")]
	[Address(RVA = "0x100ABB4", Offset = "0x100ABB4", VA = "0x100ABB4")]
	private void Update()
	{
	}

	[Token(Token = "0x6001061")]
	[Address(RVA = "0x100AAA8", Offset = "0x100AAA8", VA = "0x100AAA8")]
	public void SetParameters(ref AudioSource source)
	{
	}

	[Token(Token = "0x6001062")]
	[Address(RVA = "0x100AC7C", Offset = "0x100AC7C", VA = "0x100AC7C")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x6001063")]
	[Address(RVA = "0x100B0DC", Offset = "0x100B0DC", VA = "0x100B0DC")]
	private void OnDestroy()
	{
	}

	[PreserveSig]
	[Token(Token = "0x6001064")]
	[Address(RVA = "0x100A5D4", Offset = "0x100A5D4", VA = "0x100A5D4")]
	private static extern int OSP_SetGlobalVoiceLimit(int VoiceLimit);

	[Token(Token = "0x6001065")]
	[Address(RVA = "0x100B1AC", Offset = "0x100B1AC", VA = "0x100B1AC")]
	public ONSPAudioSource()
	{
	}
}
[Token(Token = "0x20001F8")]
public class ONSPProfiler : MonoBehaviour
{
	[Token(Token = "0x4000E98")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool profilerEnabled;

	[Token(Token = "0x4000E99")]
	private const int DEFAULT_PORT = 2121;

	[Token(Token = "0x4000E9A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int port;

	[Token(Token = "0x4000E9B")]
	public const string strONSPS = "AudioPluginOculusSpatializer";

	[Token(Token = "0x6001067")]
	[Address(RVA = "0x100B1CC", Offset = "0x100B1CC", VA = "0x100B1CC")]
	private void Start()
	{
	}

	[Token(Token = "0x6001068")]
	[Address(RVA = "0x100B1D8", Offset = "0x100B1D8", VA = "0x100B1D8")]
	private void Update()
	{
	}

	[PreserveSig]
	[Token(Token = "0x6001069")]
	[Address(RVA = "0x100B290", Offset = "0x100B290", VA = "0x100B290")]
	private static extern int ONSP_SetProfilerEnabled(bool enabled);

	[PreserveSig]
	[Token(Token = "0x600106A")]
	[Address(RVA = "0x100B210", Offset = "0x100B210", VA = "0x100B210")]
	private static extern int ONSP_SetProfilerPort(int port);

	[Token(Token = "0x600106B")]
	[Address(RVA = "0x100B310", Offset = "0x100B310", VA = "0x100B310")]
	public ONSPProfiler()
	{
	}
}
[Token(Token = "0x20001F9")]
public class ONSPPropagationGeometry : MonoBehaviour
{
	[Token(Token = "0x20003F1")]
	private struct MeshMaterial
	{
		[Token(Token = "0x4001899")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public MeshFilter meshFilter;

		[Token(Token = "0x400189A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public ONSPPropagationMaterial[] materials;
	}

	[Token(Token = "0x20003F2")]
	private struct TerrainMaterial
	{
		[Token(Token = "0x400189B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Terrain terrain;

		[Token(Token = "0x400189C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public ONSPPropagationMaterial[] materials;

		[Token(Token = "0x400189D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Mesh[] treePrototypeMeshes;
	}

	[Token(Token = "0x4000E9C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static string GeometryAssetDirectory;

	[Token(Token = "0x4000E9D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string filePathRelative;

	[Token(Token = "0x4000E9E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool fileEnabled;

	[Token(Token = "0x4000E9F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	public bool includeChildMeshes;

	[Token(Token = "0x4000EA0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private IntPtr geometryHandle;

	[Token(Token = "0x4000EA1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static int OSPSuccess;

	[Token(Token = "0x4000EA2")]
	public const string GEOMETRY_FILE_EXTENSION = "ovramesh";

	[Token(Token = "0x4000EA3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private static int terrainDecimation;

	[Token(Token = "0x170002BB")]
	public static string GeometryAssetPath
	{
		[Token(Token = "0x600106C")]
		[Address(RVA = "0x100DD8C", Offset = "0x100DD8C", VA = "0x100DD8C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170002BC")]
	public string filePath
	{
		[Token(Token = "0x600106D")]
		[Address(RVA = "0x100DE18", Offset = "0x100DE18", VA = "0x100DE18")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600106E")]
	[Address(RVA = "0x100DE90", Offset = "0x100DE90", VA = "0x100DE90")]
	private static string GetPath(Transform current)
	{
		return null;
	}

	[Token(Token = "0x600106F")]
	[Address(RVA = "0x100DFD8", Offset = "0x100DFD8", VA = "0x100DFD8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001070")]
	[Address(RVA = "0x100DFDC", Offset = "0x100DFDC", VA = "0x100DFDC")]
	private void CreatePropagationGeometry()
	{
	}

	[Token(Token = "0x6001071")]
	[Address(RVA = "0x100E53C", Offset = "0x100E53C", VA = "0x100E53C")]
	private void Update()
	{
	}

	[Token(Token = "0x6001072")]
	[Address(RVA = "0x100E8D4", Offset = "0x100E8D4", VA = "0x100E8D4")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6001073")]
	[Address(RVA = "0x100EA30", Offset = "0x100EA30", VA = "0x100EA30")]
	private static void traverseMeshHierarchy(GameObject obj, ONSPPropagationMaterial[] currentMaterials, bool includeChildren, List<MeshMaterial> meshMaterials, List<TerrainMaterial> terrainMaterials, bool ignoreStatic, ref int ignoredMeshCount)
	{
	}

	[Token(Token = "0x6001074")]
	[Address(RVA = "0x100F108", Offset = "0x100F108", VA = "0x100F108")]
	private int uploadMesh(IntPtr geometryHandle, GameObject meshObject, Matrix4x4 worldToLocal)
	{
		return default(int);
	}

	[Token(Token = "0x6001075")]
	[Address(RVA = "0x100F144", Offset = "0x100F144", VA = "0x100F144")]
	private int uploadMesh(IntPtr geometryHandle, GameObject meshObject, Matrix4x4 worldToLocal, bool ignoreStatic, ref int ignoredMeshCount)
	{
		return default(int);
	}

	[Token(Token = "0x6001076")]
	[Address(RVA = "0x101075C", Offset = "0x101075C", VA = "0x101075C")]
	private static void uploadMeshFilter(List<Vector3> tempVertices, List<int> tempIndices, MeshGroup[] groups, float[] vertices, int[] indices, ref int vertexOffset, ref int indexOffset, ref int groupOffset, Mesh mesh, ONSPPropagationMaterial[] materials, Matrix4x4 matrix)
	{
	}

	[Token(Token = "0x6001077")]
	[Address(RVA = "0x1010634", Offset = "0x1010634", VA = "0x1010634")]
	private static void updateCountsForMesh(ref int totalVertexCount, ref uint totalIndexCount, ref int totalFaceCount, ref int totalMaterialCount, Mesh mesh)
	{
	}

	[Token(Token = "0x6001078")]
	[Address(RVA = "0x100E374", Offset = "0x100E374", VA = "0x100E374")]
	public void UploadGeometry()
	{
	}

	[Token(Token = "0x6001079")]
	[Address(RVA = "0x100E1A8", Offset = "0x100E1A8", VA = "0x100E1A8")]
	public bool ReadFile()
	{
		return default(bool);
	}

	[Token(Token = "0x600107A")]
	[Address(RVA = "0x1010C08", Offset = "0x1010C08", VA = "0x1010C08")]
	public bool WriteToObj()
	{
		return default(bool);
	}

	[Token(Token = "0x600107B")]
	[Address(RVA = "0x1011044", Offset = "0x1011044", VA = "0x1011044")]
	public ONSPPropagationGeometry()
	{
	}
}
[Token(Token = "0x20001FA")]
internal class ONSPPropagation
{
	[Token(Token = "0x20003F3")]
	public enum ovrAudioScalarType : uint
	{
		[Token(Token = "0x400189F")]
		Int8,
		[Token(Token = "0x40018A0")]
		UInt8,
		[Token(Token = "0x40018A1")]
		Int16,
		[Token(Token = "0x40018A2")]
		UInt16,
		[Token(Token = "0x40018A3")]
		Int32,
		[Token(Token = "0x40018A4")]
		UInt32,
		[Token(Token = "0x40018A5")]
		Int64,
		[Token(Token = "0x40018A6")]
		UInt64,
		[Token(Token = "0x40018A7")]
		Float16,
		[Token(Token = "0x40018A8")]
		Float32,
		[Token(Token = "0x40018A9")]
		Float64
	}

	[Token(Token = "0x20003F4")]
	public class ClientType
	{
		[Token(Token = "0x40018AA")]
		public const uint OVRA_CLIENT_TYPE_NATIVE = 0u;

		[Token(Token = "0x40018AB")]
		public const uint OVRA_CLIENT_TYPE_WWISE_2016 = 1u;

		[Token(Token = "0x40018AC")]
		public const uint OVRA_CLIENT_TYPE_WWISE_2017_1 = 2u;

		[Token(Token = "0x40018AD")]
		public const uint OVRA_CLIENT_TYPE_WWISE_2017_2 = 3u;

		[Token(Token = "0x40018AE")]
		public const uint OVRA_CLIENT_TYPE_WWISE_2018_1 = 4u;

		[Token(Token = "0x40018AF")]
		public const uint OVRA_CLIENT_TYPE_FMOD = 5u;

		[Token(Token = "0x40018B0")]
		public const uint OVRA_CLIENT_TYPE_UNITY = 6u;

		[Token(Token = "0x40018B1")]
		public const uint OVRA_CLIENT_TYPE_UE4 = 7u;

		[Token(Token = "0x40018B2")]
		public const uint OVRA_CLIENT_TYPE_VST = 8u;

		[Token(Token = "0x40018B3")]
		public const uint OVRA_CLIENT_TYPE_AAX = 9u;

		[Token(Token = "0x40018B4")]
		public const uint OVRA_CLIENT_TYPE_TEST = 10u;

		[Token(Token = "0x40018B5")]
		public const uint OVRA_CLIENT_TYPE_OTHER = 11u;

		[Token(Token = "0x40018B6")]
		public const uint OVRA_CLIENT_TYPE_WWISE_UNKNOWN = 12u;

		[Token(Token = "0x40018B7")]
		public const uint OVRA_CLIENT_TYPE_WWISE_2019_1 = 13u;

		[Token(Token = "0x40018B8")]
		public const uint OVRA_CLIENT_TYPE_WWISE_2019_2 = 14u;

		[Token(Token = "0x6001807")]
		[Address(RVA = "0x100B7C4", Offset = "0x100B7C4", VA = "0x100B7C4")]
		public ClientType()
		{
		}
	}

	[Token(Token = "0x20003F5")]
	public interface PropagationInterface
	{
		[Token(Token = "0x6001808")]
		int SetPropagationQuality(float quality);

		[Token(Token = "0x6001809")]
		int SetPropagationThreadAffinity(ulong cpuMask);

		[Token(Token = "0x600180A")]
		int CreateAudioGeometry(out IntPtr geometry);

		[Token(Token = "0x600180B")]
		int DestroyAudioGeometry(IntPtr geometry);

		[Token(Token = "0x600180C")]
		int AudioGeometryUploadMeshArrays(IntPtr geometry, float[] vertices, int vertexCount, int[] indices, int indexCount, MeshGroup[] groups, int groupCount);

		[Token(Token = "0x600180D")]
		int AudioGeometrySetTransform(IntPtr geometry, float[] matrix4x4);

		[Token(Token = "0x600180E")]
		int AudioGeometryGetTransform(IntPtr geometry, out float[] matrix4x4);

		[Token(Token = "0x600180F")]
		int AudioGeometryWriteMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x6001810")]
		int AudioGeometryReadMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x6001811")]
		int AudioGeometryWriteMeshFileObj(IntPtr geometry, string filePath);

		[Token(Token = "0x6001812")]
		int AudioMaterialGetFrequency(IntPtr material, MaterialProperty property, float frequency, out float value);

		[Token(Token = "0x6001813")]
		int CreateAudioMaterial(out IntPtr material);

		[Token(Token = "0x6001814")]
		int DestroyAudioMaterial(IntPtr material);

		[Token(Token = "0x6001815")]
		int AudioMaterialSetFrequency(IntPtr material, MaterialProperty property, float frequency, float value);

		[Token(Token = "0x6001816")]
		int AudioMaterialReset(IntPtr material, MaterialProperty property);
	}

	[Token(Token = "0x20003F6")]
	public class UnityNativeInterface : PropagationInterface
	{
		[Token(Token = "0x40018B9")]
		public const string strOSPS = "AudioPluginOculusSpatializer";

		[Token(Token = "0x40018BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IntPtr context_;

		[Token(Token = "0x17000415")]
		private IntPtr context
		{
			[Token(Token = "0x6001817")]
			[Address(RVA = "0x100C434", Offset = "0x100C434", VA = "0x100C434")]
			get
			{
				return default(IntPtr);
			}
		}

		[PreserveSig]
		[Token(Token = "0x6001818")]
		[Address(RVA = "0x100C498", Offset = "0x100C498", VA = "0x100C498")]
		public static extern int ovrAudio_GetPluginContext(out IntPtr context, uint clientType);

		[PreserveSig]
		[Token(Token = "0x6001819")]
		[Address(RVA = "0x100C528", Offset = "0x100C528", VA = "0x100C528")]
		private static extern int ovrAudio_SetPropagationQuality(IntPtr context, float quality);

		[Token(Token = "0x600181A")]
		[Address(RVA = "0x100C5B8", Offset = "0x100C5B8", VA = "0x100C5B8", Slot = "4")]
		public int SetPropagationQuality(float quality)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x600181B")]
		[Address(RVA = "0x100C5DC", Offset = "0x100C5DC", VA = "0x100C5DC")]
		private static extern int ovrAudio_SetPropagationThreadAffinity(IntPtr context, ulong cpuMask);

		[Token(Token = "0x600181C")]
		[Address(RVA = "0x100C66C", Offset = "0x100C66C", VA = "0x100C66C", Slot = "5")]
		public int SetPropagationThreadAffinity(ulong cpuMask)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x600181D")]
		[Address(RVA = "0x100C690", Offset = "0x100C690", VA = "0x100C690")]
		private static extern int ovrAudio_CreateAudioGeometry(IntPtr context, out IntPtr geometry);

		[Token(Token = "0x600181E")]
		[Address(RVA = "0x100C71C", Offset = "0x100C71C", VA = "0x100C71C", Slot = "6")]
		public int CreateAudioGeometry(out IntPtr geometry)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x600181F")]
		[Address(RVA = "0x100C740", Offset = "0x100C740", VA = "0x100C740")]
		private static extern int ovrAudio_DestroyAudioGeometry(IntPtr geometry);

		[Token(Token = "0x6001820")]
		[Address(RVA = "0x100C7C0", Offset = "0x100C7C0", VA = "0x100C7C0", Slot = "7")]
		public int DestroyAudioGeometry(IntPtr geometry)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001821")]
		[Address(RVA = "0x100C7C8", Offset = "0x100C7C8", VA = "0x100C7C8")]
		private static extern int ovrAudio_AudioGeometryUploadMeshArrays(IntPtr geometry, float[] vertices, UIntPtr verticesBytesOffset, UIntPtr vertexCount, UIntPtr vertexStride, ovrAudioScalarType vertexType, int[] indices, UIntPtr indicesByteOffset, UIntPtr indexCount, ovrAudioScalarType indexType, MeshGroup[] groups, UIntPtr groupCount);

		[Token(Token = "0x6001822")]
		[Address(RVA = "0x100C8E8", Offset = "0x100C8E8", VA = "0x100C8E8", Slot = "8")]
		public int AudioGeometryUploadMeshArrays(IntPtr geometry, float[] vertices, int vertexCount, int[] indices, int indexCount, MeshGroup[] groups, int groupCount)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001823")]
		[Address(RVA = "0x100C9E0", Offset = "0x100C9E0", VA = "0x100C9E0")]
		private static extern int ovrAudio_AudioGeometrySetTransform(IntPtr geometry, float[] matrix4x4);

		[Token(Token = "0x6001824")]
		[Address(RVA = "0x100CA78", Offset = "0x100CA78", VA = "0x100CA78", Slot = "9")]
		public int AudioGeometrySetTransform(IntPtr geometry, float[] matrix4x4)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001825")]
		[Address(RVA = "0x100CA84", Offset = "0x100CA84", VA = "0x100CA84")]
		private static extern int ovrAudio_AudioGeometryGetTransform(IntPtr geometry, out float[] matrix4x4);

		[Token(Token = "0x6001826")]
		[Address(RVA = "0x100CBB0", Offset = "0x100CBB0", VA = "0x100CBB0", Slot = "10")]
		public int AudioGeometryGetTransform(IntPtr geometry, out float[] matrix4x4)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001827")]
		[Address(RVA = "0x100CBBC", Offset = "0x100CBBC", VA = "0x100CBBC")]
		private static extern int ovrAudio_AudioGeometryWriteMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x6001828")]
		[Address(RVA = "0x100CC68", Offset = "0x100CC68", VA = "0x100CC68", Slot = "11")]
		public int AudioGeometryWriteMeshFile(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001829")]
		[Address(RVA = "0x100CC74", Offset = "0x100CC74", VA = "0x100CC74")]
		private static extern int ovrAudio_AudioGeometryReadMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x600182A")]
		[Address(RVA = "0x100CD20", Offset = "0x100CD20", VA = "0x100CD20", Slot = "12")]
		public int AudioGeometryReadMeshFile(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x600182B")]
		[Address(RVA = "0x100CD2C", Offset = "0x100CD2C", VA = "0x100CD2C")]
		private static extern int ovrAudio_AudioGeometryWriteMeshFileObj(IntPtr geometry, string filePath);

		[Token(Token = "0x600182C")]
		[Address(RVA = "0x100CDD8", Offset = "0x100CDD8", VA = "0x100CDD8", Slot = "13")]
		public int AudioGeometryWriteMeshFileObj(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x600182D")]
		[Address(RVA = "0x100CDE4", Offset = "0x100CDE4", VA = "0x100CDE4")]
		private static extern int ovrAudio_CreateAudioMaterial(IntPtr context, out IntPtr material);

		[Token(Token = "0x600182E")]
		[Address(RVA = "0x100CE70", Offset = "0x100CE70", VA = "0x100CE70", Slot = "15")]
		public int CreateAudioMaterial(out IntPtr material)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x600182F")]
		[Address(RVA = "0x100CE94", Offset = "0x100CE94", VA = "0x100CE94")]
		private static extern int ovrAudio_DestroyAudioMaterial(IntPtr material);

		[Token(Token = "0x6001830")]
		[Address(RVA = "0x100CF14", Offset = "0x100CF14", VA = "0x100CF14", Slot = "16")]
		public int DestroyAudioMaterial(IntPtr material)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001831")]
		[Address(RVA = "0x100CF1C", Offset = "0x100CF1C", VA = "0x100CF1C")]
		private static extern int ovrAudio_AudioMaterialSetFrequency(IntPtr material, MaterialProperty property, float frequency, float value);

		[Token(Token = "0x6001832")]
		[Address(RVA = "0x100CFC4", Offset = "0x100CFC4", VA = "0x100CFC4", Slot = "17")]
		public int AudioMaterialSetFrequency(IntPtr material, MaterialProperty property, float frequency, float value)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001833")]
		[Address(RVA = "0x100CFD0", Offset = "0x100CFD0", VA = "0x100CFD0")]
		private static extern int ovrAudio_AudioMaterialGetFrequency(IntPtr material, MaterialProperty property, float frequency, out float value);

		[Token(Token = "0x6001834")]
		[Address(RVA = "0x100D078", Offset = "0x100D078", VA = "0x100D078", Slot = "14")]
		public int AudioMaterialGetFrequency(IntPtr material, MaterialProperty property, float frequency, out float value)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001835")]
		[Address(RVA = "0x100D088", Offset = "0x100D088", VA = "0x100D088")]
		private static extern int ovrAudio_AudioMaterialReset(IntPtr material, MaterialProperty property);

		[Token(Token = "0x6001836")]
		[Address(RVA = "0x100D118", Offset = "0x100D118", VA = "0x100D118", Slot = "18")]
		public int AudioMaterialReset(IntPtr material, MaterialProperty property)
		{
			return default(int);
		}

		[Token(Token = "0x6001837")]
		[Address(RVA = "0x100B770", Offset = "0x100B770", VA = "0x100B770")]
		public UnityNativeInterface()
		{
		}
	}

	[Token(Token = "0x20003F7")]
	public class WwisePluginInterface : PropagationInterface
	{
		[Token(Token = "0x40018BB")]
		public const string strOSPS = "OculusSpatializerWwise";

		[Token(Token = "0x40018BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IntPtr context_;

		[Token(Token = "0x17000416")]
		private IntPtr context
		{
			[Token(Token = "0x6001838")]
			[Address(RVA = "0x100D124", Offset = "0x100D124", VA = "0x100D124")]
			get
			{
				return default(IntPtr);
			}
		}

		[PreserveSig]
		[Token(Token = "0x6001839")]
		[Address(RVA = "0x100B5B8", Offset = "0x100B5B8", VA = "0x100B5B8")]
		public static extern int ovrAudio_GetPluginContext(out IntPtr context, uint clientType);

		[PreserveSig]
		[Token(Token = "0x600183A")]
		[Address(RVA = "0x100D188", Offset = "0x100D188", VA = "0x100D188")]
		private static extern int ovrAudio_SetPropagationQuality(IntPtr context, float quality);

		[Token(Token = "0x600183B")]
		[Address(RVA = "0x100D218", Offset = "0x100D218", VA = "0x100D218", Slot = "4")]
		public int SetPropagationQuality(float quality)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x600183C")]
		[Address(RVA = "0x100D23C", Offset = "0x100D23C", VA = "0x100D23C")]
		private static extern int ovrAudio_SetPropagationThreadAffinity(IntPtr context, ulong cpuMask);

		[Token(Token = "0x600183D")]
		[Address(RVA = "0x100D2CC", Offset = "0x100D2CC", VA = "0x100D2CC", Slot = "5")]
		public int SetPropagationThreadAffinity(ulong cpuMask)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x600183E")]
		[Address(RVA = "0x100D2F0", Offset = "0x100D2F0", VA = "0x100D2F0")]
		private static extern int ovrAudio_CreateAudioGeometry(IntPtr context, out IntPtr geometry);

		[Token(Token = "0x600183F")]
		[Address(RVA = "0x100D380", Offset = "0x100D380", VA = "0x100D380", Slot = "6")]
		public int CreateAudioGeometry(out IntPtr geometry)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001840")]
		[Address(RVA = "0x100D3A4", Offset = "0x100D3A4", VA = "0x100D3A4")]
		private static extern int ovrAudio_DestroyAudioGeometry(IntPtr geometry);

		[Token(Token = "0x6001841")]
		[Address(RVA = "0x100D424", Offset = "0x100D424", VA = "0x100D424", Slot = "7")]
		public int DestroyAudioGeometry(IntPtr geometry)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001842")]
		[Address(RVA = "0x100D42C", Offset = "0x100D42C", VA = "0x100D42C")]
		private static extern int ovrAudio_AudioGeometryUploadMeshArrays(IntPtr geometry, float[] vertices, UIntPtr verticesBytesOffset, UIntPtr vertexCount, UIntPtr vertexStride, ovrAudioScalarType vertexType, int[] indices, UIntPtr indicesByteOffset, UIntPtr indexCount, ovrAudioScalarType indexType, MeshGroup[] groups, UIntPtr groupCount);

		[Token(Token = "0x6001843")]
		[Address(RVA = "0x100D54C", Offset = "0x100D54C", VA = "0x100D54C", Slot = "8")]
		public int AudioGeometryUploadMeshArrays(IntPtr geometry, float[] vertices, int vertexCount, int[] indices, int indexCount, MeshGroup[] groups, int groupCount)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001844")]
		[Address(RVA = "0x100D644", Offset = "0x100D644", VA = "0x100D644")]
		private static extern int ovrAudio_AudioGeometrySetTransform(IntPtr geometry, float[] matrix4x4);

		[Token(Token = "0x6001845")]
		[Address(RVA = "0x100D6DC", Offset = "0x100D6DC", VA = "0x100D6DC", Slot = "9")]
		public int AudioGeometrySetTransform(IntPtr geometry, float[] matrix4x4)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001846")]
		[Address(RVA = "0x100D6E8", Offset = "0x100D6E8", VA = "0x100D6E8")]
		private static extern int ovrAudio_AudioGeometryGetTransform(IntPtr geometry, out float[] matrix4x4);

		[Token(Token = "0x6001847")]
		[Address(RVA = "0x100D814", Offset = "0x100D814", VA = "0x100D814", Slot = "10")]
		public int AudioGeometryGetTransform(IntPtr geometry, out float[] matrix4x4)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001848")]
		[Address(RVA = "0x100D820", Offset = "0x100D820", VA = "0x100D820")]
		private static extern int ovrAudio_AudioGeometryWriteMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x6001849")]
		[Address(RVA = "0x100D8CC", Offset = "0x100D8CC", VA = "0x100D8CC", Slot = "11")]
		public int AudioGeometryWriteMeshFile(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x600184A")]
		[Address(RVA = "0x100D8D8", Offset = "0x100D8D8", VA = "0x100D8D8")]
		private static extern int ovrAudio_AudioGeometryReadMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x600184B")]
		[Address(RVA = "0x100D984", Offset = "0x100D984", VA = "0x100D984", Slot = "12")]
		public int AudioGeometryReadMeshFile(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x600184C")]
		[Address(RVA = "0x100D990", Offset = "0x100D990", VA = "0x100D990")]
		private static extern int ovrAudio_AudioGeometryWriteMeshFileObj(IntPtr geometry, string filePath);

		[Token(Token = "0x600184D")]
		[Address(RVA = "0x100DA3C", Offset = "0x100DA3C", VA = "0x100DA3C", Slot = "13")]
		public int AudioGeometryWriteMeshFileObj(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x600184E")]
		[Address(RVA = "0x100DA48", Offset = "0x100DA48", VA = "0x100DA48")]
		private static extern int ovrAudio_CreateAudioMaterial(IntPtr context, out IntPtr material);

		[Token(Token = "0x600184F")]
		[Address(RVA = "0x100DAD8", Offset = "0x100DAD8", VA = "0x100DAD8", Slot = "15")]
		public int CreateAudioMaterial(out IntPtr material)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001850")]
		[Address(RVA = "0x100DAFC", Offset = "0x100DAFC", VA = "0x100DAFC")]
		private static extern int ovrAudio_DestroyAudioMaterial(IntPtr material);

		[Token(Token = "0x6001851")]
		[Address(RVA = "0x100DB7C", Offset = "0x100DB7C", VA = "0x100DB7C", Slot = "16")]
		public int DestroyAudioMaterial(IntPtr material)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001852")]
		[Address(RVA = "0x100DB84", Offset = "0x100DB84", VA = "0x100DB84")]
		private static extern int ovrAudio_AudioMaterialSetFrequency(IntPtr material, MaterialProperty property, float frequency, float value);

		[Token(Token = "0x6001853")]
		[Address(RVA = "0x100DC2C", Offset = "0x100DC2C", VA = "0x100DC2C", Slot = "17")]
		public int AudioMaterialSetFrequency(IntPtr material, MaterialProperty property, float frequency, float value)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001854")]
		[Address(RVA = "0x100DC38", Offset = "0x100DC38", VA = "0x100DC38")]
		private static extern int ovrAudio_AudioMaterialGetFrequency(IntPtr material, MaterialProperty property, float frequency, out float value);

		[Token(Token = "0x6001855")]
		[Address(RVA = "0x100DCE0", Offset = "0x100DCE0", VA = "0x100DCE0", Slot = "14")]
		public int AudioMaterialGetFrequency(IntPtr material, MaterialProperty property, float frequency, out float value)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001856")]
		[Address(RVA = "0x100DCF0", Offset = "0x100DCF0", VA = "0x100DCF0")]
		private static extern int ovrAudio_AudioMaterialReset(IntPtr material, MaterialProperty property);

		[Token(Token = "0x6001857")]
		[Address(RVA = "0x100DD80", Offset = "0x100DD80", VA = "0x100DD80", Slot = "18")]
		public int AudioMaterialReset(IntPtr material, MaterialProperty property)
		{
			return default(int);
		}

		[Token(Token = "0x6001858")]
		[Address(RVA = "0x100B648", Offset = "0x100B648", VA = "0x100B648")]
		public WwisePluginInterface()
		{
		}
	}

	[Token(Token = "0x20003F8")]
	public class FMODPluginInterface : PropagationInterface
	{
		[Token(Token = "0x40018BD")]
		public const string strOSPS = "OculusSpatializerFMOD";

		[Token(Token = "0x40018BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IntPtr context_;

		[Token(Token = "0x17000417")]
		private IntPtr context
		{
			[Token(Token = "0x6001859")]
			[Address(RVA = "0x100B7CC", Offset = "0x100B7CC", VA = "0x100B7CC")]
			get
			{
				return default(IntPtr);
			}
		}

		[PreserveSig]
		[Token(Token = "0x600185A")]
		[Address(RVA = "0x100B694", Offset = "0x100B694", VA = "0x100B694")]
		public static extern int ovrAudio_GetPluginContext(out IntPtr context, uint clientType);

		[PreserveSig]
		[Token(Token = "0x600185B")]
		[Address(RVA = "0x100B830", Offset = "0x100B830", VA = "0x100B830")]
		private static extern int ovrAudio_SetPropagationQuality(IntPtr context, float quality);

		[Token(Token = "0x600185C")]
		[Address(RVA = "0x100B8C0", Offset = "0x100B8C0", VA = "0x100B8C0", Slot = "4")]
		public int SetPropagationQuality(float quality)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x600185D")]
		[Address(RVA = "0x100B8E4", Offset = "0x100B8E4", VA = "0x100B8E4")]
		private static extern int ovrAudio_SetPropagationThreadAffinity(IntPtr context, ulong cpuMask);

		[Token(Token = "0x600185E")]
		[Address(RVA = "0x100B974", Offset = "0x100B974", VA = "0x100B974", Slot = "5")]
		public int SetPropagationThreadAffinity(ulong cpuMask)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x600185F")]
		[Address(RVA = "0x100B998", Offset = "0x100B998", VA = "0x100B998")]
		private static extern int ovrAudio_CreateAudioGeometry(IntPtr context, out IntPtr geometry);

		[Token(Token = "0x6001860")]
		[Address(RVA = "0x100BA28", Offset = "0x100BA28", VA = "0x100BA28", Slot = "6")]
		public int CreateAudioGeometry(out IntPtr geometry)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001861")]
		[Address(RVA = "0x100BA4C", Offset = "0x100BA4C", VA = "0x100BA4C")]
		private static extern int ovrAudio_DestroyAudioGeometry(IntPtr geometry);

		[Token(Token = "0x6001862")]
		[Address(RVA = "0x100BACC", Offset = "0x100BACC", VA = "0x100BACC", Slot = "7")]
		public int DestroyAudioGeometry(IntPtr geometry)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001863")]
		[Address(RVA = "0x100BAD4", Offset = "0x100BAD4", VA = "0x100BAD4")]
		private static extern int ovrAudio_AudioGeometryUploadMeshArrays(IntPtr geometry, float[] vertices, UIntPtr verticesBytesOffset, UIntPtr vertexCount, UIntPtr vertexStride, ovrAudioScalarType vertexType, int[] indices, UIntPtr indicesByteOffset, UIntPtr indexCount, ovrAudioScalarType indexType, MeshGroup[] groups, UIntPtr groupCount);

		[Token(Token = "0x6001864")]
		[Address(RVA = "0x100BBF4", Offset = "0x100BBF4", VA = "0x100BBF4", Slot = "8")]
		public int AudioGeometryUploadMeshArrays(IntPtr geometry, float[] vertices, int vertexCount, int[] indices, int indexCount, MeshGroup[] groups, int groupCount)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001865")]
		[Address(RVA = "0x100BCEC", Offset = "0x100BCEC", VA = "0x100BCEC")]
		private static extern int ovrAudio_AudioGeometrySetTransform(IntPtr geometry, float[] matrix4x4);

		[Token(Token = "0x6001866")]
		[Address(RVA = "0x100BD84", Offset = "0x100BD84", VA = "0x100BD84", Slot = "9")]
		public int AudioGeometrySetTransform(IntPtr geometry, float[] matrix4x4)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001867")]
		[Address(RVA = "0x100BD90", Offset = "0x100BD90", VA = "0x100BD90")]
		private static extern int ovrAudio_AudioGeometryGetTransform(IntPtr geometry, out float[] matrix4x4);

		[Token(Token = "0x6001868")]
		[Address(RVA = "0x100BEBC", Offset = "0x100BEBC", VA = "0x100BEBC", Slot = "10")]
		public int AudioGeometryGetTransform(IntPtr geometry, out float[] matrix4x4)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001869")]
		[Address(RVA = "0x100BEC8", Offset = "0x100BEC8", VA = "0x100BEC8")]
		private static extern int ovrAudio_AudioGeometryWriteMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x600186A")]
		[Address(RVA = "0x100BF74", Offset = "0x100BF74", VA = "0x100BF74", Slot = "11")]
		public int AudioGeometryWriteMeshFile(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x600186B")]
		[Address(RVA = "0x100BF80", Offset = "0x100BF80", VA = "0x100BF80")]
		private static extern int ovrAudio_AudioGeometryReadMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x600186C")]
		[Address(RVA = "0x100C02C", Offset = "0x100C02C", VA = "0x100C02C", Slot = "12")]
		public int AudioGeometryReadMeshFile(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x600186D")]
		[Address(RVA = "0x100C038", Offset = "0x100C038", VA = "0x100C038")]
		private static extern int ovrAudio_AudioGeometryWriteMeshFileObj(IntPtr geometry, string filePath);

		[Token(Token = "0x600186E")]
		[Address(RVA = "0x100C0E4", Offset = "0x100C0E4", VA = "0x100C0E4", Slot = "13")]
		public int AudioGeometryWriteMeshFileObj(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x600186F")]
		[Address(RVA = "0x100C0F0", Offset = "0x100C0F0", VA = "0x100C0F0")]
		private static extern int ovrAudio_CreateAudioMaterial(IntPtr context, out IntPtr material);

		[Token(Token = "0x6001870")]
		[Address(RVA = "0x100C180", Offset = "0x100C180", VA = "0x100C180", Slot = "15")]
		public int CreateAudioMaterial(out IntPtr material)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001871")]
		[Address(RVA = "0x100C1A4", Offset = "0x100C1A4", VA = "0x100C1A4")]
		private static extern int ovrAudio_DestroyAudioMaterial(IntPtr material);

		[Token(Token = "0x6001872")]
		[Address(RVA = "0x100C224", Offset = "0x100C224", VA = "0x100C224", Slot = "16")]
		public int DestroyAudioMaterial(IntPtr material)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001873")]
		[Address(RVA = "0x100C22C", Offset = "0x100C22C", VA = "0x100C22C")]
		private static extern int ovrAudio_AudioMaterialSetFrequency(IntPtr material, MaterialProperty property, float frequency, float value);

		[Token(Token = "0x6001874")]
		[Address(RVA = "0x100C2D4", Offset = "0x100C2D4", VA = "0x100C2D4", Slot = "17")]
		public int AudioMaterialSetFrequency(IntPtr material, MaterialProperty property, float frequency, float value)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001875")]
		[Address(RVA = "0x100C2E0", Offset = "0x100C2E0", VA = "0x100C2E0")]
		private static extern int ovrAudio_AudioMaterialGetFrequency(IntPtr material, MaterialProperty property, float frequency, out float value);

		[Token(Token = "0x6001876")]
		[Address(RVA = "0x100C388", Offset = "0x100C388", VA = "0x100C388", Slot = "14")]
		public int AudioMaterialGetFrequency(IntPtr material, MaterialProperty property, float frequency, out float value)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001877")]
		[Address(RVA = "0x100C398", Offset = "0x100C398", VA = "0x100C398")]
		private static extern int ovrAudio_AudioMaterialReset(IntPtr material, MaterialProperty property);

		[Token(Token = "0x6001878")]
		[Address(RVA = "0x100C428", Offset = "0x100C428", VA = "0x100C428", Slot = "18")]
		public int AudioMaterialReset(IntPtr material, MaterialProperty property)
		{
			return default(int);
		}

		[Token(Token = "0x6001879")]
		[Address(RVA = "0x100B724", Offset = "0x100B724", VA = "0x100B724")]
		public FMODPluginInterface()
		{
		}
	}

	[Token(Token = "0x4000EA4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static PropagationInterface CachedInterface;

	[Token(Token = "0x170002BD")]
	public static PropagationInterface Interface
	{
		[Token(Token = "0x600107D")]
		[Address(RVA = "0x100B320", Offset = "0x100B320", VA = "0x100B320")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600107E")]
	[Address(RVA = "0x100B390", Offset = "0x100B390", VA = "0x100B390")]
	private static PropagationInterface FindInterface()
	{
		return null;
	}

	[Token(Token = "0x600107F")]
	[Address(RVA = "0x100B7BC", Offset = "0x100B7BC", VA = "0x100B7BC")]
	public ONSPPropagation()
	{
	}
}
[Token(Token = "0x20001FB")]
public sealed class ONSPPropagationMaterial : MonoBehaviour
{
	[Token(Token = "0x20003F9")]
	public enum Preset
	{
		[Token(Token = "0x40018C0")]
		Custom,
		[Token(Token = "0x40018C1")]
		AcousticTile,
		[Token(Token = "0x40018C2")]
		Brick,
		[Token(Token = "0x40018C3")]
		BrickPainted,
		[Token(Token = "0x40018C4")]
		Carpet,
		[Token(Token = "0x40018C5")]
		CarpetHeavy,
		[Token(Token = "0x40018C6")]
		CarpetHeavyPadded,
		[Token(Token = "0x40018C7")]
		CeramicTile,
		[Token(Token = "0x40018C8")]
		Concrete,
		[Token(Token = "0x40018C9")]
		ConcreteRough,
		[Token(Token = "0x40018CA")]
		ConcreteBlock,
		[Token(Token = "0x40018CB")]
		ConcreteBlockPainted,
		[Token(Token = "0x40018CC")]
		Curtain,
		[Token(Token = "0x40018CD")]
		Foliage,
		[Token(Token = "0x40018CE")]
		Glass,
		[Token(Token = "0x40018CF")]
		GlassHeavy,
		[Token(Token = "0x40018D0")]
		Grass,
		[Token(Token = "0x40018D1")]
		Gravel,
		[Token(Token = "0x40018D2")]
		GypsumBoard,
		[Token(Token = "0x40018D3")]
		PlasterOnBrick,
		[Token(Token = "0x40018D4")]
		PlasterOnConcreteBlock,
		[Token(Token = "0x40018D5")]
		Soil,
		[Token(Token = "0x40018D6")]
		SoundProof,
		[Token(Token = "0x40018D7")]
		Snow,
		[Token(Token = "0x40018D8")]
		Steel,
		[Token(Token = "0x40018D9")]
		Water,
		[Token(Token = "0x40018DA")]
		WoodThin,
		[Token(Token = "0x40018DB")]
		WoodThick,
		[Token(Token = "0x40018DC")]
		WoodFloor,
		[Token(Token = "0x40018DD")]
		WoodOnConcrete
	}

	[Serializable]
	[Token(Token = "0x20003FA")]
	public sealed class Point
	{
		[Token(Token = "0x40018DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float frequency;

		[Token(Token = "0x40018DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float data;

		[Token(Token = "0x600187A")]
		[Address(RVA = "0x11E70A4", Offset = "0x11E70A4", VA = "0x11E70A4")]
		public Point(float frequency = 0f, float data = 0f)
		{
		}

		[Token(Token = "0x600187B")]
		[Address(RVA = "0x11E71EC", Offset = "0x11E71EC", VA = "0x11E71EC")]
		public static implicit operator Point(Vector2 v)
		{
			return null;
		}

		[Token(Token = "0x600187C")]
		[Address(RVA = "0x11E725C", Offset = "0x11E725C", VA = "0x11E725C")]
		public static implicit operator Vector2(Point point)
		{
			return default(Vector2);
		}
	}

	[Serializable]
	[Token(Token = "0x20003FB")]
	[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0x6A85E4", Offset = "0x6A85E4")]
	public sealed class Spectrum
	{
		[Serializable]
		[Token(Token = "0x2000427")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6A874C", Offset = "0x6A874C")]
		private sealed class <>c
		{
			[Token(Token = "0x400198F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4001990")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<Point, float> <>9__3_0;

			[Token(Token = "0x4001991")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Func<Point, float> <>9__3_1;

			[Token(Token = "0x60018F7")]
			[Address(RVA = "0x11E76B4", Offset = "0x11E76B4", VA = "0x11E76B4")]
			public <>c()
			{
			}

			[Token(Token = "0x60018F8")]
			[Address(RVA = "0x11E76BC", Offset = "0x11E76BC", VA = "0x11E76BC")]
			internal float <get_Item>b__3_0(Point p)
			{
				return default(float);
			}

			[Token(Token = "0x60018F9")]
			[Address(RVA = "0x11E76D4", Offset = "0x11E76D4", VA = "0x11E76D4")]
			internal float <get_Item>b__3_1(Point p)
			{
				return default(float);
			}
		}

		[Token(Token = "0x40018E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int selection;

		[Token(Token = "0x40018E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<Point> points;

		[Token(Token = "0x17000418")]
		public float Item
		{
			[Token(Token = "0x600187D")]
			[Address(RVA = "0x11E7294", Offset = "0x11E7294", VA = "0x11E7294")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x600187E")]
		[Address(RVA = "0x11E7174", Offset = "0x11E7174", VA = "0x11E7174")]
		public Spectrum()
		{
		}
	}

	[Token(Token = "0x4000EA5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public IntPtr materialHandle;

	[Token(Token = "0x4000EA6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6AB190", Offset = "0x6AB190")]
	public Spectrum absorption;

	[Token(Token = "0x4000EA7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6AB1C8", Offset = "0x6AB1C8")]
	public Spectrum transmission;

	[Token(Token = "0x4000EA8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6AB200", Offset = "0x6AB200")]
	public Spectrum scattering;

	[Token(Token = "0x4000EA9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private Preset preset_;

	[Token(Token = "0x170002BE")]
	public Preset preset
	{
		[Token(Token = "0x6001080")]
		[Address(RVA = "0x11DEF88", Offset = "0x11DEF88", VA = "0x11DEF88")]
		get
		{
			return default(Preset);
		}
		[Token(Token = "0x6001081")]
		[Address(RVA = "0x11DEF90", Offset = "0x11DEF90", VA = "0x11DEF90")]
		set
		{
		}
	}

	[Token(Token = "0x6001082")]
	[Address(RVA = "0x11DF14C", Offset = "0x11DF14C", VA = "0x11DF14C")]
	private void Start()
	{
	}

	[Token(Token = "0x6001083")]
	[Address(RVA = "0x11DF150", Offset = "0x11DF150", VA = "0x11DF150")]
	public void StartInternal()
	{
	}

	[Token(Token = "0x6001084")]
	[Address(RVA = "0x11DF884", Offset = "0x11DF884", VA = "0x11DF884")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6001085")]
	[Address(RVA = "0x11DF888", Offset = "0x11DF888", VA = "0x11DF888")]
	public void DestroyInternal()
	{
	}

	[Token(Token = "0x6001086")]
	[Address(RVA = "0x11DF2C0", Offset = "0x11DF2C0", VA = "0x11DF2C0")]
	public void UploadMaterial()
	{
	}

	[Token(Token = "0x6001087")]
	[Address(RVA = "0x11DEFB8", Offset = "0x11DEFB8", VA = "0x11DEFB8")]
	public void SetPreset(Preset preset)
	{
	}

	[Token(Token = "0x6001088")]
	[Address(RVA = "0x11DF970", Offset = "0x11DF970", VA = "0x11DF970")]
	private static void AcousticTile(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6001089")]
	[Address(RVA = "0x11DFDD0", Offset = "0x11DFDD0", VA = "0x11DFDD0")]
	private static void Brick(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x600108A")]
	[Address(RVA = "0x11E0230", Offset = "0x11E0230", VA = "0x11E0230")]
	private static void BrickPainted(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x600108B")]
	[Address(RVA = "0x11E0690", Offset = "0x11E0690", VA = "0x11E0690")]
	private static void Carpet(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x600108C")]
	[Address(RVA = "0x11E0AF0", Offset = "0x11E0AF0", VA = "0x11E0AF0")]
	private static void CarpetHeavy(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x600108D")]
	[Address(RVA = "0x11E0F50", Offset = "0x11E0F50", VA = "0x11E0F50")]
	private static void CarpetHeavyPadded(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x600108E")]
	[Address(RVA = "0x11E13B0", Offset = "0x11E13B0", VA = "0x11E13B0")]
	private static void CeramicTile(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x600108F")]
	[Address(RVA = "0x11E1810", Offset = "0x11E1810", VA = "0x11E1810")]
	private static void Concrete(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6001090")]
	[Address(RVA = "0x11E1C70", Offset = "0x11E1C70", VA = "0x11E1C70")]
	private static void ConcreteRough(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6001091")]
	[Address(RVA = "0x11E20D0", Offset = "0x11E20D0", VA = "0x11E20D0")]
	private static void ConcreteBlock(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6001092")]
	[Address(RVA = "0x11E2530", Offset = "0x11E2530", VA = "0x11E2530")]
	private static void ConcreteBlockPainted(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6001093")]
	[Address(RVA = "0x11E2990", Offset = "0x11E2990", VA = "0x11E2990")]
	private static void Curtain(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6001094")]
	[Address(RVA = "0x11E2DF0", Offset = "0x11E2DF0", VA = "0x11E2DF0")]
	private static void Foliage(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6001095")]
	[Address(RVA = "0x11E3250", Offset = "0x11E3250", VA = "0x11E3250")]
	private static void Glass(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6001096")]
	[Address(RVA = "0x11E36A8", Offset = "0x11E36A8", VA = "0x11E36A8")]
	private static void GlassHeavy(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6001097")]
	[Address(RVA = "0x11E3B08", Offset = "0x11E3B08", VA = "0x11E3B08")]
	private static void Grass(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6001098")]
	[Address(RVA = "0x11E3E44", Offset = "0x11E3E44", VA = "0x11E3E44")]
	private static void Gravel(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6001099")]
	[Address(RVA = "0x11E4180", Offset = "0x11E4180", VA = "0x11E4180")]
	private static void GypsumBoard(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x600109A")]
	[Address(RVA = "0x11E45E0", Offset = "0x11E45E0", VA = "0x11E45E0")]
	private static void PlasterOnBrick(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x600109B")]
	[Address(RVA = "0x11E4A40", Offset = "0x11E4A40", VA = "0x11E4A40")]
	private static void PlasterOnConcreteBlock(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x600109C")]
	[Address(RVA = "0x11E4EA0", Offset = "0x11E4EA0", VA = "0x11E4EA0")]
	private static void Soil(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x600109D")]
	[Address(RVA = "0x11E51DC", Offset = "0x11E51DC", VA = "0x11E51DC")]
	private static void SoundProof(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x600109E")]
	[Address(RVA = "0x11E5338", Offset = "0x11E5338", VA = "0x11E5338")]
	private static void Snow(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x600109F")]
	[Address(RVA = "0x11E5674", Offset = "0x11E5674", VA = "0x11E5674")]
	private static void Steel(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60010A0")]
	[Address(RVA = "0x11E5ACC", Offset = "0x11E5ACC", VA = "0x11E5ACC")]
	private static void Water(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60010A1")]
	[Address(RVA = "0x11E5F2C", Offset = "0x11E5F2C", VA = "0x11E5F2C")]
	private static void WoodThin(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60010A2")]
	[Address(RVA = "0x11E6384", Offset = "0x11E6384", VA = "0x11E6384")]
	private static void WoodThick(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60010A3")]
	[Address(RVA = "0x11E67E4", Offset = "0x11E67E4", VA = "0x11E67E4")]
	private static void WoodFloor(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60010A4")]
	[Address(RVA = "0x11E6C44", Offset = "0x11E6C44", VA = "0x11E6C44")]
	private static void WoodOnConcrete(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60010A5")]
	[Address(RVA = "0x11E70DC", Offset = "0x11E70DC", VA = "0x11E70DC")]
	public ONSPPropagationMaterial()
	{
	}
}
[Token(Token = "0x20001FC")]
public class ONSPPropagationSettings : MonoBehaviour
{
	[Token(Token = "0x4000EAA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float quality;

	[Token(Token = "0x60010A6")]
	[Address(RVA = "0x11E76EC", Offset = "0x11E76EC", VA = "0x11E76EC")]
	private void Update()
	{
	}

	[Token(Token = "0x60010A7")]
	[Address(RVA = "0x11E77C0", Offset = "0x11E77C0", VA = "0x11E77C0")]
	public ONSPPropagationSettings()
	{
	}
}
[Token(Token = "0x20001FD")]
public sealed class ONSPSettings : ScriptableObject
{
	[Token(Token = "0x4000EAB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	public int voiceLimit;

	[Token(Token = "0x4000EAC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static ONSPSettings instance;

	[Token(Token = "0x170002BF")]
	public static ONSPSettings Instance
	{
		[Token(Token = "0x60010A8")]
		[Address(RVA = "0x11E7D7C", Offset = "0x11E7D7C", VA = "0x11E7D7C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60010A9")]
	[Address(RVA = "0x11E7E90", Offset = "0x11E7E90", VA = "0x11E7E90")]
	public ONSPSettings()
	{
	}
}
[Token(Token = "0x20001FE")]
public class ONSPVersion : MonoBehaviour
{
	[Token(Token = "0x4000EAD")]
	public const string strONSPS = "AudioPluginOculusSpatializer";

	[PreserveSig]
	[Token(Token = "0x60010AA")]
	[Address(RVA = "0x11E7EA0", Offset = "0x11E7EA0", VA = "0x11E7EA0")]
	private static extern void ONSP_GetVersion(ref int Major, ref int Minor, ref int Patch);

	[Token(Token = "0x60010AB")]
	[Address(RVA = "0x11E7F38", Offset = "0x11E7F38", VA = "0x11E7F38")]
	private void Awake()
	{
	}

	[Token(Token = "0x60010AC")]
	[Address(RVA = "0x11E8044", Offset = "0x11E8044", VA = "0x11E8044")]
	private void Start()
	{
	}

	[Token(Token = "0x60010AD")]
	[Address(RVA = "0x11E8048", Offset = "0x11E8048", VA = "0x11E8048")]
	private void Update()
	{
	}

	[Token(Token = "0x60010AE")]
	[Address(RVA = "0x11E804C", Offset = "0x11E804C", VA = "0x11E804C")]
	public ONSPVersion()
	{
	}
}
[Token(Token = "0x20001FF")]
public class OculusSpatializerUnity : MonoBehaviour
{
	[Token(Token = "0x20003FC")]
	public delegate void AudioRaycastCallback(Vector3 origin, Vector3 direction, out Vector3 point, out Vector3 normal, IntPtr data);

	[Token(Token = "0x4000EAE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public LayerMask layerMask;

	[Token(Token = "0x4000EAF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool visualizeRoom;

	[Token(Token = "0x4000EB0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
	private bool roomVisualizationInitialized;

	[Token(Token = "0x4000EB1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int raysPerSecond;

	[Token(Token = "0x4000EB2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float roomInterpSpeed;

	[Token(Token = "0x4000EB3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float maxWallDistance;

	[Token(Token = "0x4000EB4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public int rayCacheSize;

	[Token(Token = "0x4000EB5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool dynamicReflectionsEnabled;

	[Token(Token = "0x4000EB6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float particleSize;

	[Token(Token = "0x4000EB7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float particleOffset;

	[Token(Token = "0x4000EB8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private GameObject room;

	[Token(Token = "0x4000EB9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Renderer[] wallRenderer;

	[Token(Token = "0x4000EBA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float[] dims;

	[Token(Token = "0x4000EBB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float[] coefs;

	[Token(Token = "0x4000EBC")]
	private const int HIT_COUNT = 2048;

	[Token(Token = "0x4000EBD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Vector3[] points;

	[Token(Token = "0x4000EBE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Vector3[] normals;

	[Token(Token = "0x4000EBF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private ParticleSystem sys;

	[Token(Token = "0x4000EC0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private ParticleSystem.Particle[] particles;

	[Token(Token = "0x4000EC1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static LayerMask gLayerMask;

	[Token(Token = "0x4000EC2")]
	private const string strOSP = "AudioPluginOculusSpatializer";

	[Token(Token = "0x60010AF")]
	[Address(RVA = "0x1130D2C", Offset = "0x1130D2C", VA = "0x1130D2C")]
	private static Vector3 swapHandedness(Vector3 vec)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60010B0")]
	[Address(RVA = "0x1130B5C", Offset = "0x1130B5C", VA = "0x1130B5C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x6B1AD4", Offset = "0x6B1AD4")]
	private static void AudioRaycast(Vector3 origin, Vector3 direction, out Vector3 point, out Vector3 normal, IntPtr data)
	{
	}

	[Token(Token = "0x60010B1")]
	[Address(RVA = "0x1130D64", Offset = "0x1130D64", VA = "0x1130D64")]
	private void Start()
	{
	}

	[Token(Token = "0x60010B2")]
	[Address(RVA = "0x1130E98", Offset = "0x1130E98", VA = "0x1130E98")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60010B3")]
	[Address(RVA = "0x1130F8C", Offset = "0x1130F8C", VA = "0x1130F8C")]
	private void Update()
	{
	}

	[Token(Token = "0x60010B4")]
	[Address(RVA = "0x1131944", Offset = "0x1131944", VA = "0x1131944")]
	private void inititalizeRoomVisualization()
	{
	}

	[PreserveSig]
	[Token(Token = "0x60010B5")]
	[Address(RVA = "0x1130E04", Offset = "0x1130E04", VA = "0x1130E04")]
	private static extern int OSP_Unity_AssignRaycastCallback(AudioRaycastCallback callback, IntPtr data);

	[PreserveSig]
	[Token(Token = "0x60010B6")]
	[Address(RVA = "0x1130EFC", Offset = "0x1130EFC", VA = "0x1130EFC")]
	private static extern int OSP_Unity_AssignRaycastCallback(IntPtr callback, IntPtr data);

	[PreserveSig]
	[Token(Token = "0x60010B7")]
	[Address(RVA = "0x11316AC", Offset = "0x11316AC", VA = "0x11316AC")]
	private static extern int OSP_Unity_SetDynamicRoomRaysPerSecond(int RaysPerSecond);

	[PreserveSig]
	[Token(Token = "0x60010B8")]
	[Address(RVA = "0x113172C", Offset = "0x113172C", VA = "0x113172C")]
	private static extern int OSP_Unity_SetDynamicRoomInterpSpeed(float InterpSpeed);

	[PreserveSig]
	[Token(Token = "0x60010B9")]
	[Address(RVA = "0x11317B4", Offset = "0x11317B4", VA = "0x11317B4")]
	private static extern int OSP_Unity_SetDynamicRoomMaxWallDistance(float MaxWallDistance);

	[PreserveSig]
	[Token(Token = "0x60010BA")]
	[Address(RVA = "0x113183C", Offset = "0x113183C", VA = "0x113183C")]
	private static extern int OSP_Unity_SetDynamicRoomRaysRayCacheSize(int RayCacheSize);

	[PreserveSig]
	[Token(Token = "0x60010BB")]
	[Address(RVA = "0x11318BC", Offset = "0x11318BC", VA = "0x11318BC")]
	private static extern int OSP_Unity_UpdateRoomModel(float wetLevel);

	[PreserveSig]
	[Token(Token = "0x60010BC")]
	[Address(RVA = "0x113277C", Offset = "0x113277C", VA = "0x113277C")]
	private static extern int OSP_Unity_GetRoomDimensions(float[] roomDimensions, float[] reflectionsCoefs, out Vector3 position);

	[PreserveSig]
	[Token(Token = "0x60010BD")]
	[Address(RVA = "0x1132824", Offset = "0x1132824", VA = "0x1132824")]
	private static extern int OSP_Unity_GetRaycastHits(Vector3[] points, Vector3[] normals, int length);

	[Token(Token = "0x60010BE")]
	[Address(RVA = "0x11328CC", Offset = "0x11328CC", VA = "0x11328CC")]
	public OculusSpatializerUnity()
	{
	}
}
[Token(Token = "0x2000200")]
public struct ReflectionSnapshot
{
	[Token(Token = "0x4000EC3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public AudioMixerSnapshot mixerSnapshot;

	[Token(Token = "0x4000EC4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float fadeTime;
}
[Token(Token = "0x2000201")]
public class ONSPReflectionZone : MonoBehaviour
{
	[Token(Token = "0x4000EC5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioMixerSnapshot mixerSnapshot;

	[Token(Token = "0x4000EC6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float fadeTime;

	[Token(Token = "0x4000EC7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Stack<ReflectionSnapshot> snapshotList;

	[Token(Token = "0x4000EC8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static ReflectionSnapshot currentSnapshot;

	[Token(Token = "0x60010C0")]
	[Address(RVA = "0x11E77D0", Offset = "0x11E77D0", VA = "0x11E77D0")]
	private void Start()
	{
	}

	[Token(Token = "0x60010C1")]
	[Address(RVA = "0x11E77D4", Offset = "0x11E77D4", VA = "0x11E77D4")]
	private void Update()
	{
	}

	[Token(Token = "0x60010C2")]
	[Address(RVA = "0x11E77D8", Offset = "0x11E77D8", VA = "0x11E77D8")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60010C3")]
	[Address(RVA = "0x11E7940", Offset = "0x11E7940", VA = "0x11E7940")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x60010C4")]
	[Address(RVA = "0x11E7824", Offset = "0x11E7824", VA = "0x11E7824")]
	private bool CheckForAudioListener(GameObject gameObject)
	{
		return default(bool);
	}

	[Token(Token = "0x60010C5")]
	[Address(RVA = "0x11E78B4", Offset = "0x11E78B4", VA = "0x11E78B4")]
	private void PushCurrentMixerShapshot()
	{
	}

	[Token(Token = "0x60010C6")]
	[Address(RVA = "0x11E798C", Offset = "0x11E798C", VA = "0x11E798C")]
	private void PopCurrentMixerSnapshot()
	{
	}

	[Token(Token = "0x60010C7")]
	[Address(RVA = "0x11E7A24", Offset = "0x11E7A24", VA = "0x11E7A24")]
	private void SetReflectionValues()
	{
	}

	[Token(Token = "0x60010C8")]
	[Address(RVA = "0x11E7B8C", Offset = "0x11E7B8C", VA = "0x11E7B8C")]
	private void SetReflectionValues(ref ReflectionSnapshot mss)
	{
	}

	[Token(Token = "0x60010C9")]
	[Address(RVA = "0x11E7CF4", Offset = "0x11E7CF4", VA = "0x11E7CF4")]
	public ONSPReflectionZone()
	{
	}
}
namespace SubjectNerd.Utilities
{
	[Token(Token = "0x2000202")]
	public class EditScriptableAttribute : PropertyAttribute
	{
		[Token(Token = "0x60010CB")]
		[Address(RVA = "0xFF3BC4", Offset = "0xFF3BC4", VA = "0xFF3BC4")]
		public EditScriptableAttribute()
		{
		}
	}
	[Token(Token = "0x2000203")]
	public class ReorderableAttribute : PropertyAttribute
	{
		[Token(Token = "0x4000EC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6AB258", Offset = "0x6AB258")]
		private string <ElementHeader>k__BackingField;

		[Token(Token = "0x4000ECA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6AB268", Offset = "0x6AB268")]
		private bool <HeaderZeroIndex>k__BackingField;

		[Token(Token = "0x4000ECB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6AB278", Offset = "0x6AB278")]
		private bool <ElementSingleLine>k__BackingField;

		[Token(Token = "0x170002C0")]
		public string ElementHeader
		{
			[Token(Token = "0x60010CC")]
			[Address(RVA = "0xFF3BCC", Offset = "0xFF3BCC", VA = "0xFF3BCC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6B1B38", Offset = "0x6B1B38")]
			get
			{
				return null;
			}
			[Token(Token = "0x60010CD")]
			[Address(RVA = "0xFF3BD4", Offset = "0xFF3BD4", VA = "0xFF3BD4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6B1B48", Offset = "0x6B1B48")]
			protected set
			{
			}
		}

		[Token(Token = "0x170002C1")]
		public bool HeaderZeroIndex
		{
			[Token(Token = "0x60010CE")]
			[Address(RVA = "0xFF3BDC", Offset = "0xFF3BDC", VA = "0xFF3BDC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6B1B58", Offset = "0x6B1B58")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60010CF")]
			[Address(RVA = "0xFF3BE4", Offset = "0xFF3BE4", VA = "0xFF3BE4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6B1B68", Offset = "0x6B1B68")]
			protected set
			{
			}
		}

		[Token(Token = "0x170002C2")]
		public bool ElementSingleLine
		{
			[Token(Token = "0x60010D0")]
			[Address(RVA = "0xFF3BF0", Offset = "0xFF3BF0", VA = "0xFF3BF0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6B1B78", Offset = "0x6B1B78")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60010D1")]
			[Address(RVA = "0xFF3BF8", Offset = "0xFF3BF8", VA = "0xFF3BF8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6B1B88", Offset = "0x6B1B88")]
			protected set
			{
			}
		}

		[Token(Token = "0x60010D2")]
		[Address(RVA = "0xFF3C04", Offset = "0xFF3C04", VA = "0xFF3C04")]
		public ReorderableAttribute()
		{
		}

		[Token(Token = "0x60010D3")]
		[Address(RVA = "0xFF3C6C", Offset = "0xFF3C6C", VA = "0xFF3C6C")]
		public ReorderableAttribute(string headerString = "", bool isZeroIndex = true, bool isSingleLine = false)
		{
		}
	}
}
namespace UnityFBXExporter
{
	[Token(Token = "0x2000204")]
	public class FBXExporter
	{
		[Token(Token = "0x170002C3")]
		public static string VersionInformation
		{
			[Token(Token = "0x60010D5")]
			[Address(RVA = "0x114A148", Offset = "0x114A148", VA = "0x114A148")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60010D4")]
		[Address(RVA = "0x1148750", Offset = "0x1148750", VA = "0x1148750")]
		public static bool ExportGameObjToFBX(GameObject gameObj, string newPath, bool copyMaterials = false, bool copyTextures = false)
		{
			return default(bool);
		}

		[Token(Token = "0x60010D6")]
		[Address(RVA = "0x114A190", Offset = "0x114A190", VA = "0x114A190")]
		public static long GetRandomFBXId()
		{
			return default(long);
		}

		[Token(Token = "0x60010D7")]
		[Address(RVA = "0x1148878", Offset = "0x1148878", VA = "0x1148878")]
		public static string MeshToString(GameObject gameObj, string newPath, bool copyMaterials = false, bool copyTextures = false)
		{
			return null;
		}

		[Token(Token = "0x60010D8")]
		[Address(RVA = "0x1148874", Offset = "0x1148874", VA = "0x1148874")]
		public static void CopyComplexMaterialsToPath(GameObject gameObj, string path, bool copyTextures, string texturesFolder = "/Textures", string materialsFolder = "/Materials")
		{
		}

		[Token(Token = "0x60010D9")]
		[Address(RVA = "0x114D720", Offset = "0x114D720", VA = "0x114D720")]
		public static bool CopyAndRenameAsset(UnityEngine.Object obj, string newName, string newFolderPath)
		{
			return default(bool);
		}

		[Token(Token = "0x60010DA")]
		[Address(RVA = "0x114D728", Offset = "0x114D728", VA = "0x114D728")]
		private static string GetFileName(string path)
		{
			return null;
		}

		[Token(Token = "0x60010DB")]
		[Address(RVA = "0x114D778", Offset = "0x114D778", VA = "0x114D778")]
		private static Material CopyTexturesAndAssignCopiesToMaterial(Material material, string newPath)
		{
			return null;
		}

		[Token(Token = "0x60010DC")]
		[Address(RVA = "0x114DA14", Offset = "0x114DA14", VA = "0x114DA14")]
		private static void GetTextureUpdateMaterialWithPath(Material material, string textureShaderName, string newPath)
		{
		}

		[Token(Token = "0x60010DD")]
		[Address(RVA = "0x114DB18", Offset = "0x114DB18", VA = "0x114DB18")]
		public static UnityEngine.Object CopyAndRenameAssetReturnObject(UnityEngine.Object obj, string newName, string newFolderPath)
		{
			return null;
		}

		[Token(Token = "0x60010DE")]
		[Address(RVA = "0x114DB20", Offset = "0x114DB20", VA = "0x114DB20")]
		public FBXExporter()
		{
		}
	}
	[Token(Token = "0x2000205")]
	public class FBXUnityMaterialGetter
	{
		[Token(Token = "0x60010DF")]
		[Address(RVA = "0x114A248", Offset = "0x114A248", VA = "0x114A248")]
		public static void GetAllMaterialsToString(GameObject gameObj, string newPath, bool copyMaterials, bool copyTextures, out Material[] materials, out string matObjects, out string connections)
		{
		}

		[Token(Token = "0x60010E0")]
		[Address(RVA = "0x114DB28", Offset = "0x114DB28", VA = "0x114DB28")]
		private static void SerializedTextures(GameObject gameObj, string newPath, Material material, string materialName, bool copyTextures, out string objects, out string connections)
		{
		}

		[Token(Token = "0x60010E1")]
		[Address(RVA = "0x114DD2C", Offset = "0x114DD2C", VA = "0x114DD2C")]
		private static bool SerializeOneTexture(GameObject gameObj, string newPath, Material material, string materialName, int materialId, bool copyTextures, string unityExtension, string textureType, out string objects, out string connections)
		{
			return default(bool);
		}

		[Token(Token = "0x60010E2")]
		[Address(RVA = "0x114DE48", Offset = "0x114DE48", VA = "0x114DE48")]
		public FBXUnityMaterialGetter()
		{
		}
	}
	[Token(Token = "0x2000206")]
	public class FBXUnityMeshGetter
	{
		[Token(Token = "0x60010E3")]
		[Address(RVA = "0x114AC30", Offset = "0x114AC30", VA = "0x114AC30")]
		public static long GetMeshToString(GameObject gameObj, Material[] materials, ref StringBuilder objects, ref StringBuilder connections, [Optional] GameObject parentObject, long parentModelId = 0L)
		{
			return default(long);
		}

		[Token(Token = "0x60010E4")]
		[Address(RVA = "0x114DE50", Offset = "0x114DE50", VA = "0x114DE50")]
		public FBXUnityMeshGetter()
		{
		}
	}
}
namespace OculusSampleFramework
{
	[Token(Token = "0x2000207")]
	public class ColorGrabbable : OVRGrabbable
	{
		[Token(Token = "0x4000ECC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly Color COLOR_GRAB;

		[Token(Token = "0x4000ECD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static readonly Color COLOR_HIGHLIGHT;

		[Token(Token = "0x4000ECE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Color m_color;

		[Token(Token = "0x4000ECF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private MeshRenderer[] m_meshRenderers;

		[Token(Token = "0x4000ED0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private bool m_highlight;

		[Token(Token = "0x170002C4")]
		public bool Highlight
		{
			[Token(Token = "0x60010E5")]
			[Address(RVA = "0x10F4834", Offset = "0x10F4834", VA = "0x10F4834")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60010E6")]
			[Address(RVA = "0x10F483C", Offset = "0x10F483C", VA = "0x10F483C")]
			set
			{
			}
		}

		[Token(Token = "0x60010E7")]
		[Address(RVA = "0x10F4848", Offset = "0x10F4848", VA = "0x10F4848")]
		protected void UpdateColor()
		{
		}

		[Token(Token = "0x60010E8")]
		[Address(RVA = "0x10F4A14", Offset = "0x10F4A14", VA = "0x10F4A14", Slot = "4")]
		public override void GrabBegin(OVRGrabber hand, Collider grabPoint)
		{
		}

		[Token(Token = "0x60010E9")]
		[Address(RVA = "0x10F4A3C", Offset = "0x10F4A3C", VA = "0x10F4A3C", Slot = "5")]
		public override void GrabEnd(Vector3 linearVelocity, Vector3 angularVelocity)
		{
		}

		[Token(Token = "0x60010EA")]
		[Address(RVA = "0x10F4A64", Offset = "0x10F4A64", VA = "0x10F4A64")]
		private void Awake()
		{
		}

		[Token(Token = "0x60010EB")]
		[Address(RVA = "0x10F4914", Offset = "0x10F4914", VA = "0x10F4914")]
		private void SetColor(Color color)
		{
		}

		[Token(Token = "0x60010EC")]
		[Address(RVA = "0x10F4CB8", Offset = "0x10F4CB8", VA = "0x10F4CB8")]
		public ColorGrabbable()
		{
		}
	}
	[Token(Token = "0x2000208")]
	public class DistanceGrabbable : OVRGrabbable
	{
		[Token(Token = "0x4000ED1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public string m_materialColorField;

		[Token(Token = "0x4000ED2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private GrabbableCrosshair m_crosshair;

		[Token(Token = "0x4000ED3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private GrabManager m_crosshairManager;

		[Token(Token = "0x4000ED4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Renderer m_renderer;

		[Token(Token = "0x4000ED5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private MaterialPropertyBlock m_mpb;

		[Token(Token = "0x4000ED6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private bool m_inRange;

		[Token(Token = "0x4000ED7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x71")]
		private bool m_targeted;

		[Token(Token = "0x170002C5")]
		public bool InRange
		{
			[Token(Token = "0x60010EE")]
			[Address(RVA = "0x10F5118", Offset = "0x10F5118", VA = "0x10F5118")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60010EF")]
			[Address(RVA = "0x10F5120", Offset = "0x10F5120", VA = "0x10F5120")]
			set
			{
			}
		}

		[Token(Token = "0x170002C6")]
		public bool Targeted
		{
			[Token(Token = "0x60010F0")]
			[Address(RVA = "0x10F529C", Offset = "0x10F529C", VA = "0x10F529C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60010F1")]
			[Address(RVA = "0x10F52A4", Offset = "0x10F52A4", VA = "0x10F52A4")]
			set
			{
			}
		}

		[Token(Token = "0x60010F2")]
		[Address(RVA = "0x10F52B0", Offset = "0x10F52B0", VA = "0x10F52B0", Slot = "6")]
		protected override void Start()
		{
		}

		[Token(Token = "0x60010F3")]
		[Address(RVA = "0x10F512C", Offset = "0x10F512C", VA = "0x10F512C")]
		private void RefreshCrosshair()
		{
		}

		[Token(Token = "0x60010F4")]
		[Address(RVA = "0x10F5450", Offset = "0x10F5450", VA = "0x10F5450")]
		public DistanceGrabbable()
		{
		}
	}
	[Token(Token = "0x2000209")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x6A7A38", Offset = "0x6A7A38")]
	public class DistanceGrabber : OVRGrabber
	{
		[Token(Token = "0x4000ED8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		[SerializeField]
		private float m_spherecastRadius;

		[Token(Token = "0x4000ED9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[SerializeField]
		private float m_noSnapThreshhold;

		[Token(Token = "0x4000EDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		[SerializeField]
		private bool m_useSpherecast;

		[Token(Token = "0x4000EDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCD")]
		[SerializeField]
		public bool m_preventGrabThroughWalls;

		[Token(Token = "0x4000EDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[SerializeField]
		private float m_objectPullVelocity;

		[Token(Token = "0x4000EDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		private float m_objectPullMaxRotationRate;

		[Token(Token = "0x4000EDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private bool m_movingObjectToHand;

		[Token(Token = "0x4000EDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		[SerializeField]
		private float m_maxGrabDistance;

		[Token(Token = "0x4000EE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[SerializeField]
		private int m_grabObjectsInLayer;

		[Token(Token = "0x4000EE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		[SerializeField]
		private int m_obstructionLayer;

		[Token(Token = "0x4000EE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private DistanceGrabber m_otherHand;

		[Token(Token = "0x4000EE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		protected DistanceGrabbable m_target;

		[Token(Token = "0x4000EE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		protected Collider m_targetCollider;

		[Token(Token = "0x170002C7")]
		public bool UseSpherecast
		{
			[Token(Token = "0x60010F5")]
			[Address(RVA = "0x10F5458", Offset = "0x10F5458", VA = "0x10F5458")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60010F6")]
			[Address(RVA = "0x10F5460", Offset = "0x10F5460", VA = "0x10F5460")]
			set
			{
			}
		}

		[Token(Token = "0x60010F7")]
		[Address(RVA = "0x10F547C", Offset = "0x10F547C", VA = "0x10F547C", Slot = "5")]
		protected override void Start()
		{
		}

		[Token(Token = "0x60010F8")]
		[Address(RVA = "0x10F5684", Offset = "0x10F5684", VA = "0x10F5684", Slot = "6")]
		public override void Update()
		{
		}

		[Token(Token = "0x60010F9")]
		[Address(RVA = "0x10F5FA0", Offset = "0x10F5FA0", VA = "0x10F5FA0", Slot = "7")]
		protected override void GrabBegin()
		{
		}

		[Token(Token = "0x60010FA")]
		[Address(RVA = "0x10F655C", Offset = "0x10F655C", VA = "0x10F655C", Slot = "8")]
		protected override void MoveGrabbedObject(Vector3 pos, Quaternion rot, bool forceTeleport = false)
		{
		}

		[Token(Token = "0x60010FB")]
		[Address(RVA = "0x10F693C", Offset = "0x10F693C", VA = "0x10F693C")]
		private static DistanceGrabbable HitInfoToGrabbable(RaycastHit hitInfo)
		{
			return null;
		}

		[Token(Token = "0x60010FC")]
		[Address(RVA = "0x10F58D0", Offset = "0x10F58D0", VA = "0x10F58D0")]
		protected bool FindTarget(out DistanceGrabbable dgOut, out Collider collOut)
		{
			return default(bool);
		}

		[Token(Token = "0x60010FD")]
		[Address(RVA = "0x10F6A18", Offset = "0x10F6A18", VA = "0x10F6A18")]
		protected bool FindTargetWithSpherecast(out DistanceGrabbable dgOut, out Collider collOut)
		{
			return default(bool);
		}

		[Token(Token = "0x60010FE")]
		[Address(RVA = "0x10F6E54", Offset = "0x10F6E54", VA = "0x10F6E54", Slot = "9")]
		protected override void GrabVolumeEnable(bool enabled)
		{
		}

		[Token(Token = "0x60010FF")]
		[Address(RVA = "0x10F6E6C", Offset = "0x10F6E6C", VA = "0x10F6E6C", Slot = "10")]
		protected override void OffhandGrabbed(OVRGrabbable grabbable)
		{
		}

		[Token(Token = "0x6001100")]
		[Address(RVA = "0x10F6E74", Offset = "0x10F6E74", VA = "0x10F6E74")]
		public DistanceGrabber()
		{
		}
	}
	[Token(Token = "0x200020A")]
	public class GrabManager : MonoBehaviour
	{
		[Token(Token = "0x4000EE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Collider m_grabVolume;

		[Token(Token = "0x4000EE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Color OutlineColorInRange;

		[Token(Token = "0x4000EE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Color OutlineColorHighlighted;

		[Token(Token = "0x4000EE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Color OutlineColorOutOfRange;

		[Token(Token = "0x6001101")]
		[Address(RVA = "0x10F89C4", Offset = "0x10F89C4", VA = "0x10F89C4")]
		private void OnTriggerEnter(Collider otherCollider)
		{
		}

		[Token(Token = "0x6001102")]
		[Address(RVA = "0x10F8A74", Offset = "0x10F8A74", VA = "0x10F8A74")]
		private void OnTriggerExit(Collider otherCollider)
		{
		}

		[Token(Token = "0x6001103")]
		[Address(RVA = "0x10F8B20", Offset = "0x10F8B20", VA = "0x10F8B20")]
		public GrabManager()
		{
		}
	}
	[Token(Token = "0x200020B")]
	public class GrabbableCrosshair : MonoBehaviour
	{
		[Token(Token = "0x20003FD")]
		public enum CrosshairState
		{
			[Token(Token = "0x40018E3")]
			Disabled,
			[Token(Token = "0x40018E4")]
			Enabled,
			[Token(Token = "0x40018E5")]
			Targeted
		}

		[Token(Token = "0x4000EE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private CrosshairState m_state;

		[Token(Token = "0x4000EEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Transform m_centerEyeAnchor;

		[Token(Token = "0x4000EEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private GameObject m_targetedCrosshair;

		[Token(Token = "0x4000EEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private GameObject m_enabledCrosshair;

		[Token(Token = "0x6001104")]
		[Address(RVA = "0x10F8B28", Offset = "0x10F8B28", VA = "0x10F8B28")]
		private void Start()
		{
		}

		[Token(Token = "0x6001105")]
		[Address(RVA = "0x10F53B4", Offset = "0x10F53B4", VA = "0x10F53B4")]
		public void SetState(CrosshairState cs)
		{
		}

		[Token(Token = "0x6001106")]
		[Address(RVA = "0x10F8B90", Offset = "0x10F8B90", VA = "0x10F8B90")]
		private void Update()
		{
		}

		[Token(Token = "0x6001107")]
		[Address(RVA = "0x10F8BD8", Offset = "0x10F8BD8", VA = "0x10F8BD8")]
		public GrabbableCrosshair()
		{
		}
	}
	[Token(Token = "0x200020C")]
	public class PauseOnInputLoss : MonoBehaviour
	{
		[Token(Token = "0x6001108")]
		[Address(RVA = "0x1129920", Offset = "0x1129920", VA = "0x1129920")]
		private void Start()
		{
		}

		[Token(Token = "0x6001109")]
		[Address(RVA = "0x11299EC", Offset = "0x11299EC", VA = "0x11299EC")]
		private void OnInputFocusLost()
		{
		}

		[Token(Token = "0x600110A")]
		[Address(RVA = "0x11299F8", Offset = "0x11299F8", VA = "0x11299F8")]
		private void OnInputFocusAcquired()
		{
		}

		[Token(Token = "0x600110B")]
		[Address(RVA = "0x1129A04", Offset = "0x1129A04", VA = "0x1129A04")]
		public PauseOnInputLoss()
		{
		}
	}
	[Token(Token = "0x200020D")]
	public class BoneCapsuleTriggerLogic : MonoBehaviour
	{
		[Token(Token = "0x4000EED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public InteractableToolTags ToolTags;

		[Token(Token = "0x4000EEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public HashSet<ColliderZone> CollidersTouchingUs;

		[Token(Token = "0x4000EEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private List<ColliderZone> _elementsToCleanUp;

		[Token(Token = "0x600110C")]
		[Address(RVA = "0x10F34C0", Offset = "0x10F34C0", VA = "0x10F34C0")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x600110D")]
		[Address(RVA = "0x10F3518", Offset = "0x10F3518", VA = "0x10F3518")]
		private void Update()
		{
		}

		[Token(Token = "0x600110E")]
		[Address(RVA = "0x10F37BC", Offset = "0x10F37BC", VA = "0x10F37BC")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x600110F")]
		[Address(RVA = "0x10F38AC", Offset = "0x10F38AC", VA = "0x10F38AC")]
		private void OnTriggerExit(Collider other)
		{
		}

		[Token(Token = "0x6001110")]
		[Address(RVA = "0x10F351C", Offset = "0x10F351C", VA = "0x10F351C")]
		private void CleanUpDeadColliders()
		{
		}

		[Token(Token = "0x6001111")]
		[Address(RVA = "0x10F399C", Offset = "0x10F399C", VA = "0x10F399C")]
		public BoneCapsuleTriggerLogic()
		{
		}
	}
	[Token(Token = "0x200020E")]
	public class ButtonController : Interactable
	{
		[Token(Token = "0x20003FE")]
		public enum ContactTest
		{
			[Token(Token = "0x40018E7")]
			PerpenTest,
			[Token(Token = "0x40018E8")]
			BackwardsPress
		}

		[Token(Token = "0x4000EF0")]
		private const float ENTRY_DOT_THRESHOLD = 0.8f;

		[Token(Token = "0x4000EF1")]
		private const float PERP_DOT_THRESHOLD = 0.5f;

		[Token(Token = "0x4000EF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private GameObject _proximityZone;

		[Token(Token = "0x4000EF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private GameObject _contactZone;

		[Token(Token = "0x4000EF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private GameObject _actionZone;

		[Token(Token = "0x4000EF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private ContactTest[] _contactTests;

		[Token(Token = "0x4000EF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private Transform _buttonPlaneCenter;

		[Token(Token = "0x4000EF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private bool _makeSureToolIsOnPositiveSide;

		[Token(Token = "0x4000EF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		[SerializeField]
		private Vector3 _localButtonDirection;

		[Token(Token = "0x4000EF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private InteractableToolTags[] _allValidToolsTags;

		[Token(Token = "0x4000EFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private int _toolTagsMask;

		[Token(Token = "0x4000EFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		private InteractableState _currentButtonState;

		[Token(Token = "0x4000EFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Dictionary<InteractableTool, InteractableState> _toolToState;

		[Token(Token = "0x170002C8")]
		public override int ValidToolTagsMask
		{
			[Token(Token = "0x6001112")]
			[Address(RVA = "0x10F3A34", Offset = "0x10F3A34", VA = "0x10F3A34", Slot = "4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170002C9")]
		public Vector3 LocalButtonDirection
		{
			[Token(Token = "0x6001113")]
			[Address(RVA = "0x10F3A3C", Offset = "0x10F3A3C", VA = "0x10F3A3C")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x6001114")]
		[Address(RVA = "0x10F3A48", Offset = "0x10F3A48", VA = "0x10F3A48", Slot = "9")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6001115")]
		[Address(RVA = "0x10F3B98", Offset = "0x10F3B98", VA = "0x10F3B98")]
		private void FireInteractionEventsOnDepth(InteractableCollisionDepth oldDepth, InteractableTool collidingTool, InteractionType interactionType)
		{
		}

		[Token(Token = "0x6001116")]
		[Address(RVA = "0x10F3DA0", Offset = "0x10F3DA0", VA = "0x10F3DA0", Slot = "8")]
		public override void UpdateCollisionDepth(InteractableTool interactableTool, InteractableCollisionDepth oldCollisionDepth, InteractableCollisionDepth newCollisionDepth)
		{
		}

		[Token(Token = "0x6001117")]
		[Address(RVA = "0x10F42E4", Offset = "0x10F42E4", VA = "0x10F42E4")]
		private InteractableState GetUpcomingStateNearField(InteractableState oldState, InteractableCollisionDepth newCollisionDepth, bool toolIsInActionZone, bool toolIsInContactZone, bool toolIsInProximity, bool validContact, bool onPositiveSideOfInteractable)
		{
			return default(InteractableState);
		}

		[Token(Token = "0x6001118")]
		[Address(RVA = "0x10F41FC", Offset = "0x10F41FC", VA = "0x10F41FC")]
		private bool IsValidContact(InteractableTool collidingTool, Vector3 buttonDirection)
		{
			return default(bool);
		}

		[Token(Token = "0x6001119")]
		[Address(RVA = "0x10F4434", Offset = "0x10F4434", VA = "0x10F4434")]
		private bool PassEntryTest(InteractableTool collidingTool, Vector3 buttonDirection)
		{
			return default(bool);
		}

		[Token(Token = "0x600111A")]
		[Address(RVA = "0x10F4528", Offset = "0x10F4528", VA = "0x10F4528")]
		private bool PassPerpTest(InteractableTool collidingTool, Vector3 buttonDirection)
		{
			return default(bool);
		}

		[Token(Token = "0x600111B")]
		[Address(RVA = "0x10F4654", Offset = "0x10F4654", VA = "0x10F4654")]
		public ButtonController()
		{
		}
	}
	[Token(Token = "0x200020F")]
	public class ButtonTriggerZone : MonoBehaviour, ColliderZone
	{
		[Token(Token = "0x4000EFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject _parentInteractableObj;

		[Token(Token = "0x4000EFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6AB3B8", Offset = "0x6AB3B8")]
		private Collider <Collider>k__BackingField;

		[Token(Token = "0x4000EFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6AB3C8", Offset = "0x6AB3C8")]
		private Interactable <ParentInteractable>k__BackingField;

		[Token(Token = "0x170002CA")]
		public Collider Collider
		{
			[Token(Token = "0x600111C")]
			[Address(RVA = "0x10F4740", Offset = "0x10F4740", VA = "0x10F4740", Slot = "4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6B1B98", Offset = "0x6B1B98")]
			get
			{
				return null;
			}
			[Token(Token = "0x600111D")]
			[Address(RVA = "0x10F4748", Offset = "0x10F4748", VA = "0x10F4748")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6B1BA8", Offset = "0x6B1BA8")]
			private set
			{
			}
		}

		[Token(Token = "0x170002CB")]
		public Interactable ParentInteractable
		{
			[Token(Token = "0x600111E")]
			[Address(RVA = "0x10F4750", Offset = "0x10F4750", VA = "0x10F4750", Slot = "5")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6B1BB8", Offset = "0x6B1BB8")]
			get
			{
				return null;
			}
			[Token(Token = "0x600111F")]
			[Address(RVA = "0x10F4758", Offset = "0x10F4758", VA = "0x10F4758")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6B1BC8", Offset = "0x6B1BC8")]
			private set
			{
			}
		}

		[Token(Token = "0x170002CC")]
		public InteractableCollisionDepth CollisionDepth
		{
			[Token(Token = "0x6001120")]
			[Address(RVA = "0x10F4760", Offset = "0x10F4760", VA = "0x10F4760", Slot = "6")]
			get
			{
				return default(InteractableCollisionDepth);
			}
		}

		[Token(Token = "0x6001121")]
		[Address(RVA = "0x10F47B0", Offset = "0x10F47B0", VA = "0x10F47B0")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001122")]
		[Address(RVA = "0x10F482C", Offset = "0x10F482C", VA = "0x10F482C")]
		public ButtonTriggerZone()
		{
		}
	}
	[Token(Token = "0x2000210")]
	public interface ColliderZone
	{
		[Token(Token = "0x170002CD")]
		Collider Collider
		{
			[Token(Token = "0x6001123")]
			get;
		}

		[Token(Token = "0x170002CE")]
		Interactable ParentInteractable
		{
			[Token(Token = "0x6001124")]
			get;
		}

		[Token(Token = "0x170002CF")]
		InteractableCollisionDepth CollisionDepth
		{
			[Token(Token = "0x6001125")]
			get;
		}
	}
	[Token(Token = "0x2000211")]
	public class ColliderZoneArgs : EventArgs
	{
		[Token(Token = "0x4000F00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly ColliderZone Collider;

		[Token(Token = "0x4000F01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly float FrameTime;

		[Token(Token = "0x4000F02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly InteractableTool CollidingTool;

		[Token(Token = "0x4000F03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly InteractionType InteractionT;

		[Token(Token = "0x6001126")]
		[Address(RVA = "0x10F3CFC", Offset = "0x10F3CFC", VA = "0x10F3CFC")]
		public ColliderZoneArgs(ColliderZone collider, float frameTime, InteractableTool collidingTool, InteractionType interactionType)
		{
		}
	}
	[Token(Token = "0x2000212")]
	public enum InteractionType
	{
		[Token(Token = "0x4000F05")]
		Enter,
		[Token(Token = "0x4000F06")]
		Stay,
		[Token(Token = "0x4000F07")]
		Exit
	}
	[Token(Token = "0x2000213")]
	public class HandsManager : MonoBehaviour
	{
		[Token(Token = "0x20003FF")]
		public enum HandsVisualMode
		{
			[Token(Token = "0x40018EA")]
			Mesh,
			[Token(Token = "0x40018EB")]
			Skeleton,
			[Token(Token = "0x40018EC")]
			Both
		}

		[Token(Token = "0x2000400")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6A861C", Offset = "0x6A861C")]
		private sealed class <FindSkeletonVisualGameObjects>d__52 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40018ED")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40018EE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40018EF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public HandsManager <>4__this;

			[Token(Token = "0x17000419")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001886")]
				[Address(RVA = "0x10F9ACC", Offset = "0x10F9ACC", VA = "0x10F9ACC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700041A")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001888")]
				[Address(RVA = "0x10F9B34", Offset = "0x10F9B34", VA = "0x10F9B34", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001883")]
			[Address(RVA = "0x10F95C0", Offset = "0x10F95C0", VA = "0x10F95C0")]
			[DebuggerHidden]
			public <FindSkeletonVisualGameObjects>d__52(int <>1__state)
			{
			}

			[Token(Token = "0x6001884")]
			[Address(RVA = "0x10F98AC", Offset = "0x10F98AC", VA = "0x10F98AC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001885")]
			[Address(RVA = "0x10F98B0", Offset = "0x10F98B0", VA = "0x10F98B0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001887")]
			[Address(RVA = "0x10F9AD4", Offset = "0x10F9AD4", VA = "0x10F9AD4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000F08")]
		private const string SKELETON_VISUALIZER_NAME = "SkeletonRenderer";

		[Token(Token = "0x4000F09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject _leftHand;

		[Token(Token = "0x4000F0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GameObject _rightHand;

		[Token(Token = "0x4000F0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public HandsVisualMode VisualMode;

		[Token(Token = "0x4000F0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private OVRHand[] _hand;

		[Token(Token = "0x4000F0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private OVRSkeleton[] _handSkeleton;

		[Token(Token = "0x4000F0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private OVRSkeletonRenderer[] _handSkeletonRenderer;

		[Token(Token = "0x4000F0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private OVRMesh[] _handMesh;

		[Token(Token = "0x4000F10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private OVRMeshRenderer[] _handMeshRenderer;

		[Token(Token = "0x4000F11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private SkinnedMeshRenderer _leftMeshRenderer;

		[Token(Token = "0x4000F12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private SkinnedMeshRenderer _rightMeshRenderer;

		[Token(Token = "0x4000F13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private GameObject _leftSkeletonVisual;

		[Token(Token = "0x4000F14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private GameObject _rightSkeletonVisual;

		[Token(Token = "0x4000F15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private float _currentHandAlpha;

		[Token(Token = "0x4000F16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private int HandAlphaId;

		[Token(Token = "0x4000F17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6AB3F8", Offset = "0x6AB3F8")]
		private static HandsManager <Instance>k__BackingField;

		[Token(Token = "0x170002D0")]
		public OVRHand RightHand
		{
			[Token(Token = "0x6001127")]
			[Address(RVA = "0x10F7AC8", Offset = "0x10F7AC8", VA = "0x10F7AC8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001128")]
			[Address(RVA = "0x10F8BE0", Offset = "0x10F8BE0", VA = "0x10F8BE0")]
			private set
			{
			}
		}

		[Token(Token = "0x170002D1")]
		public OVRSkeleton RightHandSkeleton
		{
			[Token(Token = "0x6001129")]
			[Address(RVA = "0x10F8648", Offset = "0x10F8648", VA = "0x10F8648")]
			get
			{
				return null;
			}
			[Token(Token = "0x600112A")]
			[Address(RVA = "0x10F8C48", Offset = "0x10F8C48", VA = "0x10F8C48")]
			private set
			{
			}
		}

		[Token(Token = "0x170002D2")]
		public OVRSkeletonRenderer RightHandSkeletonRenderer
		{
			[Token(Token = "0x600112B")]
			[Address(RVA = "0x10F8CB0", Offset = "0x10F8CB0", VA = "0x10F8CB0")]
			get
			{
				return null;
			}
			[Token(Token = "0x600112C")]
			[Address(RVA = "0x10F8CE8", Offset = "0x10F8CE8", VA = "0x10F8CE8")]
			private set
			{
			}
		}

		[Token(Token = "0x170002D3")]
		public OVRMesh RightHandMesh
		{
			[Token(Token = "0x600112D")]
			[Address(RVA = "0x10F8D50", Offset = "0x10F8D50", VA = "0x10F8D50")]
			get
			{
				return null;
			}
			[Token(Token = "0x600112E")]
			[Address(RVA = "0x10F8D88", Offset = "0x10F8D88", VA = "0x10F8D88")]
			private set
			{
			}
		}

		[Token(Token = "0x170002D4")]
		public OVRMeshRenderer RightHandMeshRenderer
		{
			[Token(Token = "0x600112F")]
			[Address(RVA = "0x10F8DF0", Offset = "0x10F8DF0", VA = "0x10F8DF0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001130")]
			[Address(RVA = "0x10F8E28", Offset = "0x10F8E28", VA = "0x10F8E28")]
			private set
			{
			}
		}

		[Token(Token = "0x170002D5")]
		public OVRHand LeftHand
		{
			[Token(Token = "0x6001131")]
			[Address(RVA = "0x10F7A94", Offset = "0x10F7A94", VA = "0x10F7A94")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001132")]
			[Address(RVA = "0x10F8E90", Offset = "0x10F8E90", VA = "0x10F8E90")]
			private set
			{
			}
		}

		[Token(Token = "0x170002D6")]
		public OVRSkeleton LeftHandSkeleton
		{
			[Token(Token = "0x6001133")]
			[Address(RVA = "0x10F8614", Offset = "0x10F8614", VA = "0x10F8614")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001134")]
			[Address(RVA = "0x10F8EF4", Offset = "0x10F8EF4", VA = "0x10F8EF4")]
			private set
			{
			}
		}

		[Token(Token = "0x170002D7")]
		public OVRSkeletonRenderer LeftHandSkeletonRenderer
		{
			[Token(Token = "0x6001135")]
			[Address(RVA = "0x10F8F58", Offset = "0x10F8F58", VA = "0x10F8F58")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001136")]
			[Address(RVA = "0x10F8F8C", Offset = "0x10F8F8C", VA = "0x10F8F8C")]
			private set
			{
			}
		}

		[Token(Token = "0x170002D8")]
		public OVRMesh LeftHandMesh
		{
			[Token(Token = "0x6001137")]
			[Address(RVA = "0x10F8FF0", Offset = "0x10F8FF0", VA = "0x10F8FF0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001138")]
			[Address(RVA = "0x10F9024", Offset = "0x10F9024", VA = "0x10F9024")]
			private set
			{
			}
		}

		[Token(Token = "0x170002D9")]
		public OVRMeshRenderer LeftHandMeshRenderer
		{
			[Token(Token = "0x6001139")]
			[Address(RVA = "0x10F9088", Offset = "0x10F9088", VA = "0x10F9088")]
			get
			{
				return null;
			}
			[Token(Token = "0x600113A")]
			[Address(RVA = "0x10F90BC", Offset = "0x10F90BC", VA = "0x10F90BC")]
			private set
			{
			}
		}

		[Token(Token = "0x170002DA")]
		public static HandsManager Instance
		{
			[Token(Token = "0x600113B")]
			[Address(RVA = "0x10F9120", Offset = "0x10F9120", VA = "0x10F9120")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6B1BD8", Offset = "0x6B1BD8")]
			get
			{
				return null;
			}
			[Token(Token = "0x600113C")]
			[Address(RVA = "0x10F9170", Offset = "0x10F9170", VA = "0x10F9170")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6B1BE8", Offset = "0x6B1BE8")]
			private set
			{
			}
		}

		[Token(Token = "0x600113D")]
		[Address(RVA = "0x10F91C4", Offset = "0x10F91C4", VA = "0x10F91C4")]
		private void Awake()
		{
		}

		[Token(Token = "0x600113E")]
		[Address(RVA = "0x10F9538", Offset = "0x10F9538", VA = "0x10F9538")]
		private void Update()
		{
		}

		[Token(Token = "0x600113F")]
		[Address(RVA = "0x10F94C8", Offset = "0x10F94C8", VA = "0x10F94C8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6B1BF8", Offset = "0x6B1BF8")]
		private IEnumerator FindSkeletonVisualGameObjects()
		{
			return null;
		}

		[Token(Token = "0x6001140")]
		[Address(RVA = "0x10F4F6C", Offset = "0x10F4F6C", VA = "0x10F4F6C")]
		public void SwitchVisualization()
		{
		}

		[Token(Token = "0x6001141")]
		[Address(RVA = "0x10F95EC", Offset = "0x10F95EC", VA = "0x10F95EC")]
		private void SetToCurrentVisualMode()
		{
		}

		[Token(Token = "0x6001142")]
		[Address(RVA = "0x10F8680", Offset = "0x10F8680", VA = "0x10F8680")]
		public static List<OVRBoneCapsule> GetCapsulesPerBone(OVRSkeleton skeleton, OVRSkeleton.BoneId boneId)
		{
			return null;
		}

		[Token(Token = "0x6001143")]
		[Address(RVA = "0x10F7904", Offset = "0x10F7904", VA = "0x10F7904")]
		public bool IsInitialized()
		{
			return default(bool);
		}

		[Token(Token = "0x6001144")]
		[Address(RVA = "0x10F97CC", Offset = "0x10F97CC", VA = "0x10F97CC")]
		public HandsManager()
		{
		}
	}
	[Token(Token = "0x2000214")]
	public abstract class Interactable : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000401")]
		public class InteractableStateArgsEvent : UnityEvent<InteractableStateArgs>
		{
			[Token(Token = "0x6001889")]
			[Address(RVA = "0x10FA284", Offset = "0x10FA284", VA = "0x10FA284")]
			public InteractableStateArgsEvent()
			{
			}
		}

		[Token(Token = "0x4000F18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected ColliderZone _proximityZoneCollider;

		[Token(Token = "0x4000F19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		protected ColliderZone _contactZoneCollider;

		[Token(Token = "0x4000F1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		protected ColliderZone _actionZoneCollider;

		[Token(Token = "0x4000F1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public InteractableStateArgsEvent InteractableStateChanged;

		[Token(Token = "0x170002DB")]
		public ColliderZone ProximityCollider
		{
			[Token(Token = "0x6001145")]
			[Address(RVA = "0x10F9B3C", Offset = "0x10F9B3C", VA = "0x10F9B3C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002DC")]
		public ColliderZone ContactCollider
		{
			[Token(Token = "0x6001146")]
			[Address(RVA = "0x10F9B44", Offset = "0x10F9B44", VA = "0x10F9B44")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002DD")]
		public ColliderZone ActionCollider
		{
			[Token(Token = "0x6001147")]
			[Address(RVA = "0x10F9B4C", Offset = "0x10F9B4C", VA = "0x10F9B4C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002DE")]
		public virtual int ValidToolTagsMask
		{
			[Token(Token = "0x6001148")]
			[Address(RVA = "0x10F9B54", Offset = "0x10F9B54", VA = "0x10F9B54", Slot = "4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x14000010")]
		public event Action<ColliderZoneArgs> ProximityZoneEvent
		{
			[Token(Token = "0x6001149")]
			[Address(RVA = "0x10F9B5C", Offset = "0x10F9B5C", VA = "0x10F9B5C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6B1C5C", Offset = "0x6B1C5C")]
			add
			{
			}
			[Token(Token = "0x600114A")]
			[Address(RVA = "0x10F9C00", Offset = "0x10F9C00", VA = "0x10F9C00")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6B1C6C", Offset = "0x6B1C6C")]
			remove
			{
			}
		}

		[Token(Token = "0x14000011")]
		public event Action<ColliderZoneArgs> ContactZoneEvent
		{
			[Token(Token = "0x600114C")]
			[Address(RVA = "0x10F9D18", Offset = "0x10F9D18", VA = "0x10F9D18")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6B1C7C", Offset = "0x6B1C7C")]
			add
			{
			}
			[Token(Token = "0x600114D")]
			[Address(RVA = "0x10F9DBC", Offset = "0x10F9DBC", VA = "0x10F9DBC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6B1C8C", Offset = "0x6B1C8C")]
			remove
			{
			}
		}

		[Token(Token = "0x14000012")]
		public event Action<ColliderZoneArgs> ActionZoneEvent
		{
			[Token(Token = "0x600114F")]
			[Address(RVA = "0x10F9ED4", Offset = "0x10F9ED4", VA = "0x10F9ED4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6B1C9C", Offset = "0x6B1C9C")]
			add
			{
			}
			[Token(Token = "0x6001150")]
			[Address(RVA = "0x10F9F78", Offset = "0x10F9F78", VA = "0x10F9F78")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6B1CAC", Offset = "0x6B1CAC")]
			remove
			{
			}
		}

		[Token(Token = "0x600114B")]
		[Address(RVA = "0x10F9CA4", Offset = "0x10F9CA4", VA = "0x10F9CA4", Slot = "5")]
		protected virtual void OnProximityZoneEvent(ColliderZoneArgs args)
		{
		}

		[Token(Token = "0x600114E")]
		[Address(RVA = "0x10F9E60", Offset = "0x10F9E60", VA = "0x10F9E60", Slot = "6")]
		protected virtual void OnContactZoneEvent(ColliderZoneArgs args)
		{
		}

		[Token(Token = "0x6001151")]
		[Address(RVA = "0x10FA01C", Offset = "0x10FA01C", VA = "0x10FA01C", Slot = "7")]
		protected virtual void OnActionZoneEvent(ColliderZoneArgs args)
		{
		}

		[Token(Token = "0x6001152")]
		public abstract void UpdateCollisionDepth(InteractableTool interactableTool, InteractableCollisionDepth oldCollisionDepth, InteractableCollisionDepth newCollisionDepth);

		[Token(Token = "0x6001153")]
		[Address(RVA = "0x10F3B34", Offset = "0x10F3B34", VA = "0x10F3B34", Slot = "9")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x6001154")]
		[Address(RVA = "0x10FA158", Offset = "0x10FA158", VA = "0x10FA158", Slot = "10")]
		protected virtual void OnDestroy()
		{
		}

		[Token(Token = "0x6001155")]
		[Address(RVA = "0x10F4738", Offset = "0x10F4738", VA = "0x10F4738")]
		protected Interactable()
		{
		}
	}
	[Token(Token = "0x2000215")]
	public enum InteractableCollisionDepth
	{
		[Token(Token = "0x4000F20")]
		None,
		[Token(Token = "0x4000F21")]
		Proximity,
		[Token(Token = "0x4000F22")]
		Contact,
		[Token(Token = "0x4000F23")]
		Action
	}
	[Token(Token = "0x2000216")]
	public enum InteractableState
	{
		[Token(Token = "0x4000F25")]
		Default,
		[Token(Token = "0x4000F26")]
		ProximityState,
		[Token(Token = "0x4000F27")]
		ContactState,
		[Token(Token = "0x4000F28")]
		ActionState
	}
	[Token(Token = "0x2000217")]
	public class InteractableStateArgs : EventArgs
	{
		[Token(Token = "0x4000F29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly Interactable Interactable;

		[Token(Token = "0x4000F2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly InteractableTool Tool;

		[Token(Token = "0x4000F2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly InteractableState OldInteractableState;

		[Token(Token = "0x4000F2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public readonly InteractableState NewInteractableState;

		[Token(Token = "0x4000F2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly ColliderZoneArgs ColliderArgs;

		[Token(Token = "0x6001156")]
		[Address(RVA = "0x10F4390", Offset = "0x10F4390", VA = "0x10F4390")]
		public InteractableStateArgs(Interactable interactable, InteractableTool tool, InteractableState newInteractableState, InteractableState oldState, ColliderZoneArgs colliderArgs)
		{
		}
	}
	[Token(Token = "0x2000218")]
	public class InteractableRegistry : MonoBehaviour
	{
		[Token(Token = "0x4000F2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static HashSet<Interactable> _interactables;

		[Token(Token = "0x170002DF")]
		public static HashSet<Interactable> Interactables
		{
			[Token(Token = "0x6001157")]
			[Address(RVA = "0x10FA2D4", Offset = "0x10FA2D4", VA = "0x10FA2D4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001158")]
		[Address(RVA = "0x10FA090", Offset = "0x10FA090", VA = "0x10FA090")]
		public static void RegisterInteractable(Interactable interactable)
		{
		}

		[Token(Token = "0x6001159")]
		[Address(RVA = "0x10FA1BC", Offset = "0x10FA1BC", VA = "0x10FA1BC")]
		public static void UnregisterInteractable(Interactable interactable)
		{
		}

		[Token(Token = "0x600115A")]
		[Address(RVA = "0x10FA33C", Offset = "0x10FA33C", VA = "0x10FA33C")]
		public InteractableRegistry()
		{
		}
	}
	[Token(Token = "0x2000219")]
	public class InteractableToolsCreator : MonoBehaviour
	{
		[Token(Token = "0x2000402")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6A862C", Offset = "0x6A862C")]
		private sealed class <AttachToolsToHands>d__3 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40018F0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40018F1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40018F2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Transform[] toolObjects;

			[Token(Token = "0x40018F3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public bool isRightHand;

			[Token(Token = "0x40018F4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public InteractableToolsCreator <>4__this;

			[Token(Token = "0x40018F5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private HandsManager <handsManagerObj>5__2;

			[Token(Token = "0x40018F6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private HashSet<Transform>.Enumerator <>7__wrap2;

			[Token(Token = "0x40018F7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			private Transform <toolObject>5__4;

			[Token(Token = "0x40018F8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			private OVRSkeleton <handSkeletonToAttachTo>5__5;

			[Token(Token = "0x1700041B")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600188E")]
				[Address(RVA = "0x10FB37C", Offset = "0x10FB37C", VA = "0x10FB37C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700041C")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001890")]
				[Address(RVA = "0x10FB3E4", Offset = "0x10FB3E4", VA = "0x10FB3E4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600188A")]
			[Address(RVA = "0x10FAE40", Offset = "0x10FAE40", VA = "0x10FAE40")]
			[DebuggerHidden]
			public <AttachToolsToHands>d__3(int <>1__state)
			{
			}

			[Token(Token = "0x600188B")]
			[Address(RVA = "0x10FAF6C", Offset = "0x10FAF6C", VA = "0x10FAF6C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600188C")]
			[Address(RVA = "0x10FAFE0", Offset = "0x10FAFE0", VA = "0x10FAFE0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600188D")]
			[Address(RVA = "0x10FAF88", Offset = "0x10FAF88", VA = "0x10FAF88")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x600188F")]
			[Address(RVA = "0x10FB384", Offset = "0x10FB384", VA = "0x10FB384", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000F2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Transform[] LeftHandTools;

		[Token(Token = "0x4000F30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Transform[] RightHandTools;

		[Token(Token = "0x600115C")]
		[Address(RVA = "0x10FAD38", Offset = "0x10FAD38", VA = "0x10FAD38")]
		private void Awake()
		{
		}

		[Token(Token = "0x600115D")]
		[Address(RVA = "0x10FADB4", Offset = "0x10FADB4", VA = "0x10FADB4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6B1CBC", Offset = "0x6B1CBC")]
		private IEnumerator AttachToolsToHands(Transform[] toolObjects, bool isRightHand)
		{
			return null;
		}

		[Token(Token = "0x600115E")]
		[Address(RVA = "0x10FAE6C", Offset = "0x10FAE6C", VA = "0x10FAE6C")]
		private void AttachToolToHandTransform(Transform tool, bool isRightHanded)
		{
		}

		[Token(Token = "0x600115F")]
		[Address(RVA = "0x10FAF64", Offset = "0x10FAF64", VA = "0x10FAF64")]
		public InteractableToolsCreator()
		{
		}
	}
	[Token(Token = "0x200021A")]
	public class InteractableToolsInputRouter : MonoBehaviour
	{
		[Token(Token = "0x4000F31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static InteractableToolsInputRouter _instance;

		[Token(Token = "0x4000F32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool _leftPinch;

		[Token(Token = "0x4000F33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		private bool _rightPinch;

		[Token(Token = "0x4000F34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private HashSet<InteractableTool> _leftHandNearTools;

		[Token(Token = "0x4000F35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private HashSet<InteractableTool> _leftHandFarTools;

		[Token(Token = "0x4000F36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private HashSet<InteractableTool> _rightHandNearTools;

		[Token(Token = "0x4000F37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private HashSet<InteractableTool> _rightHandFarTools;

		[Token(Token = "0x170002E0")]
		public static InteractableToolsInputRouter Instance
		{
			[Token(Token = "0x6001160")]
			[Address(RVA = "0x10F7340", Offset = "0x10F7340", VA = "0x10F7340")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001161")]
		[Address(RVA = "0x10F74A8", Offset = "0x10F74A8", VA = "0x10F74A8")]
		public void RegisterInteractableTool(InteractableTool interactableTool)
		{
		}

		[Token(Token = "0x6001162")]
		[Address(RVA = "0x10FB3EC", Offset = "0x10FB3EC", VA = "0x10FB3EC")]
		public void UnregisterInteractableTool(InteractableTool interactableTool)
		{
		}

		[Token(Token = "0x6001163")]
		[Address(RVA = "0x10FB498", Offset = "0x10FB498", VA = "0x10FB498")]
		private void Update()
		{
		}

		[Token(Token = "0x6001164")]
		[Address(RVA = "0x10FB760", Offset = "0x10FB760", VA = "0x10FB760")]
		private bool UpdateToolsAndEnableState(HashSet<InteractableTool> tools, bool toolsAreEnabledThisFrame)
		{
			return default(bool);
		}

		[Token(Token = "0x6001165")]
		[Address(RVA = "0x10FB7A8", Offset = "0x10FB7A8", VA = "0x10FB7A8")]
		private bool UpdateTools(HashSet<InteractableTool> tools, bool resetCollisionData = false)
		{
			return default(bool);
		}

		[Token(Token = "0x6001166")]
		[Address(RVA = "0x10FB9F8", Offset = "0x10FB9F8", VA = "0x10FB9F8")]
		private void ToggleToolsEnableState(HashSet<InteractableTool> tools, bool enableState)
		{
		}

		[Token(Token = "0x6001167")]
		[Address(RVA = "0x10FBB24", Offset = "0x10FBB24", VA = "0x10FBB24")]
		public InteractableToolsInputRouter()
		{
		}
	}
	[Token(Token = "0x200021B")]
	public class FingerTipPokeTool : InteractableTool
	{
		[Token(Token = "0x2000403")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6A863C", Offset = "0x6A863C")]
		private sealed class <AttachTriggerLogic>d__21 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40018F9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40018FA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40018FB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public FingerTipPokeTool <>4__this;

			[Token(Token = "0x1700041D")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001894")]
				[Address(RVA = "0x10F8890", Offset = "0x10F8890", VA = "0x10F8890", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700041E")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001896")]
				[Address(RVA = "0x10F88F8", Offset = "0x10F88F8", VA = "0x10F88F8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001891")]
			[Address(RVA = "0x10F75C4", Offset = "0x10F75C4", VA = "0x10F75C4")]
			[DebuggerHidden]
			public <AttachTriggerLogic>d__21(int <>1__state)
			{
			}

			[Token(Token = "0x6001892")]
			[Address(RVA = "0x10F82AC", Offset = "0x10F82AC", VA = "0x10F82AC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001893")]
			[Address(RVA = "0x10F82B0", Offset = "0x10F82B0", VA = "0x10F82B0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001895")]
			[Address(RVA = "0x10F8898", Offset = "0x10F8898", VA = "0x10F8898", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000F38")]
		private const int NUM_VELOCITY_FRAMES = 10;

		[Token(Token = "0x4000F39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private FingerTipPokeToolView _fingerTipPokeToolView;

		[Token(Token = "0x4000F3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private OVRPlugin.HandFinger _fingerToFollow;

		[Token(Token = "0x4000F3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Vector3[] _velocityFrames;

		[Token(Token = "0x4000F3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private int _currVelocityFrame;

		[Token(Token = "0x4000F3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private bool _sampledMaxFramesAlready;

		[Token(Token = "0x4000F3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Vector3 _position;

		[Token(Token = "0x4000F3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private BoneCapsuleTriggerLogic[] _boneCapsuleTriggerLogic;

		[Token(Token = "0x4000F40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private float _lastScale;

		[Token(Token = "0x4000F41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		private bool _isInitialized;

		[Token(Token = "0x4000F42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private OVRBoneCapsule _capsuleToTrack;

		[Token(Token = "0x170002E1")]
		public override InteractableToolTags ToolTags
		{
			[Token(Token = "0x6001168")]
			[Address(RVA = "0x10F7224", Offset = "0x10F7224", VA = "0x10F7224", Slot = "4")]
			get
			{
				return default(InteractableToolTags);
			}
		}

		[Token(Token = "0x170002E2")]
		public override ToolInputState ToolInputState
		{
			[Token(Token = "0x6001169")]
			[Address(RVA = "0x10F722C", Offset = "0x10F722C", VA = "0x10F722C", Slot = "5")]
			get
			{
				return default(ToolInputState);
			}
		}

		[Token(Token = "0x170002E3")]
		public override bool IsFarFieldTool
		{
			[Token(Token = "0x600116A")]
			[Address(RVA = "0x10F7234", Offset = "0x10F7234", VA = "0x10F7234", Slot = "6")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170002E4")]
		public override bool EnableState
		{
			[Token(Token = "0x600116B")]
			[Address(RVA = "0x10F723C", Offset = "0x10F723C", VA = "0x10F723C", Slot = "10")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600116C")]
			[Address(RVA = "0x10F7268", Offset = "0x10F7268", VA = "0x10F7268", Slot = "11")]
			set
			{
			}
		}

		[Token(Token = "0x600116D")]
		[Address(RVA = "0x10F72A4", Offset = "0x10F72A4", VA = "0x10F72A4", Slot = "12")]
		public override void Initialize()
		{
		}

		[Token(Token = "0x600116E")]
		[Address(RVA = "0x10F7554", Offset = "0x10F7554", VA = "0x10F7554")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6B1D20", Offset = "0x6B1D20")]
		private IEnumerator AttachTriggerLogic()
		{
			return null;
		}

		[Token(Token = "0x600116F")]
		[Address(RVA = "0x10F75F0", Offset = "0x10F75F0", VA = "0x10F75F0")]
		private void Update()
		{
		}

		[Token(Token = "0x6001170")]
		[Address(RVA = "0x10F7B00", Offset = "0x10F7B00", VA = "0x10F7B00")]
		private void UpdateAverageVelocity()
		{
		}

		[Token(Token = "0x6001171")]
		[Address(RVA = "0x10F7D78", Offset = "0x10F7D78", VA = "0x10F7D78")]
		private void CheckAndUpdateScale()
		{
		}

		[Token(Token = "0x6001172")]
		[Address(RVA = "0x10F7EB8", Offset = "0x10F7EB8", VA = "0x10F7EB8", Slot = "7")]
		public override List<InteractableCollisionInfo> GetNextIntersectingObjects()
		{
			return null;
		}

		[Token(Token = "0x6001173")]
		[Address(RVA = "0x10F8180", Offset = "0x10F8180", VA = "0x10F8180", Slot = "8")]
		public override void FocusOnInteractable(Interactable focusedInteractable, ColliderZone colliderZone)
		{
		}

		[Token(Token = "0x6001174")]
		[Address(RVA = "0x10F8184", Offset = "0x10F8184", VA = "0x10F8184", Slot = "9")]
		public override void DeFocus()
		{
		}

		[Token(Token = "0x6001175")]
		[Address(RVA = "0x10F8188", Offset = "0x10F8188", VA = "0x10F8188")]
		public FingerTipPokeTool()
		{
		}
	}
	[Token(Token = "0x200021C")]
	public class FingerTipPokeToolView : MonoBehaviour, InteractableToolView
	{
		[Token(Token = "0x4000F43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private MeshRenderer _sphereMeshRenderer;

		[Token(Token = "0x4000F44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6AB488", Offset = "0x6AB488")]
		private InteractableTool <InteractableTool>k__BackingField;

		[Token(Token = "0x4000F45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6AB498", Offset = "0x6AB498")]
		private bool <ToolActivateState>k__BackingField;

		[Token(Token = "0x4000F46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6AB4A8", Offset = "0x6AB4A8")]
		private float <SphereRadius>k__BackingField;

		[Token(Token = "0x170002E5")]
		public InteractableTool InteractableTool
		{
			[Token(Token = "0x6001176")]
			[Address(RVA = "0x10F8900", Offset = "0x10F8900", VA = "0x10F8900", Slot = "4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6B1D84", Offset = "0x6B1D84")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001177")]
			[Address(RVA = "0x10F8908", Offset = "0x10F8908", VA = "0x10F8908")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6B1D94", Offset = "0x6B1D94")]
			set
			{
			}
		}

		[Token(Token = "0x170002E6")]
		public bool EnableState
		{
			[Token(Token = "0x6001178")]
			[Address(RVA = "0x10F8910", Offset = "0x10F8910", VA = "0x10F8910", Slot = "6")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001179")]
			[Address(RVA = "0x10F892C", Offset = "0x10F892C", VA = "0x10F892C", Slot = "7")]
			set
			{
			}
		}

		[Token(Token = "0x170002E7")]
		public bool ToolActivateState
		{
			[Token(Token = "0x600117A")]
			[Address(RVA = "0x10F894C", Offset = "0x10F894C", VA = "0x10F894C", Slot = "8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6B1DA4", Offset = "0x6B1DA4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600117B")]
			[Address(RVA = "0x10F8954", Offset = "0x10F8954", VA = "0x10F8954", Slot = "9")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6B1DB4", Offset = "0x6B1DB4")]
			set
			{
			}
		}

		[Token(Token = "0x170002E8")]
		public float SphereRadius
		{
			[Token(Token = "0x600117C")]
			[Address(RVA = "0x10F8960", Offset = "0x10F8960", VA = "0x10F8960")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6B1DC4", Offset = "0x6B1DC4")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600117D")]
			[Address(RVA = "0x10F8968", Offset = "0x10F8968", VA = "0x10F8968")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6B1DD4", Offset = "0x6B1DD4")]
			private set
			{
			}
		}

		[Token(Token = "0x600117E")]
		[Address(RVA = "0x10F8970", Offset = "0x10F8970", VA = "0x10F8970")]
		private void Awake()
		{
		}

		[Token(Token = "0x600117F")]
		[Address(RVA = "0x10F89B8", Offset = "0x10F89B8", VA = "0x10F89B8", Slot = "5")]
		public void SetFocusedInteractable(Interactable interactable)
		{
		}

		[Token(Token = "0x6001180")]
		[Address(RVA = "0x10F89BC", Offset = "0x10F89BC", VA = "0x10F89BC")]
		public FingerTipPokeToolView()
		{
		}
	}
	[Token(Token = "0x200021D")]
	[Flags]
	public enum InteractableToolTags
	{
		[Token(Token = "0x4000F48")]
		None = 0,
		[Token(Token = "0x4000F49")]
		Ray = 1,
		[Token(Token = "0x4000F4A")]
		Poke = 4,
		[Token(Token = "0x4000F4B")]
		All = -1
	}
	[Token(Token = "0x200021E")]
	public enum ToolInputState
	{
		[Token(Token = "0x4000F4D")]
		Inactive,
		[Token(Token = "0x4000F4E")]
		PrimaryInputDown,
		[Token(Token = "0x4000F4F")]
		PrimaryInputDownStay,
		[Token(Token = "0x4000F50")]
		PrimaryInputUp
	}
	[Token(Token = "0x200021F")]
	public class InteractableCollisionInfo
	{
		[Token(Token = "0x4000F51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public ColliderZone InteractableCollider;

		[Token(Token = "0x4000F52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public InteractableCollisionDepth CollisionDepth;

		[Token(Token = "0x4000F53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public InteractableTool CollidingTool;

		[Token(Token = "0x6001181")]
		[Address(RVA = "0x10F813C", Offset = "0x10F813C", VA = "0x10F813C")]
		public InteractableCollisionInfo(ColliderZone collider, InteractableCollisionDepth collisionDepth, InteractableTool collidingTool)
		{
		}
	}
	[Token(Token = "0x2000220")]
	public abstract class InteractableTool : MonoBehaviour
	{
		[Token(Token = "0x4000F54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6AB4B8", Offset = "0x6AB4B8")]
		private bool <IsRightHandedTool>k__BackingField;

		[Token(Token = "0x4000F55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6AB4C8", Offset = "0x6AB4C8")]
		private Vector3 <Velocity>k__BackingField;

		[Token(Token = "0x4000F56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6AB4D8", Offset = "0x6AB4D8")]
		private Vector3 <InteractionPosition>k__BackingField;

		[Token(Token = "0x4000F57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		protected List<InteractableCollisionInfo> _currentIntersectingObjects;

		[Token(Token = "0x4000F58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private List<Interactable> _addedInteractables;

		[Token(Token = "0x4000F59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private List<Interactable> _removedInteractables;

		[Token(Token = "0x4000F5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private List<Interactable> _remainingInteractables;

		[Token(Token = "0x4000F5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Dictionary<Interactable, InteractableCollisionInfo> _currInteractableToCollisionInfos;

		[Token(Token = "0x4000F5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Dictionary<Interactable, InteractableCollisionInfo> _prevInteractableToCollisionInfos;

		[Token(Token = "0x170002E9")]
		public Transform ToolTransform
		{
			[Token(Token = "0x6001182")]
			[Address(RVA = "0x10F464C", Offset = "0x10F464C", VA = "0x10F464C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002EA")]
		public bool IsRightHandedTool
		{
			[Token(Token = "0x6001183")]
			[Address(RVA = "0x10FA3B8", Offset = "0x10FA3B8", VA = "0x10FA3B8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6B1DE4", Offset = "0x6B1DE4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001184")]
			[Address(RVA = "0x10FA3C0", Offset = "0x10FA3C0", VA = "0x10FA3C0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6B1DF4", Offset = "0x6B1DF4")]
			set
			{
			}
		}

		[Token(Token = "0x170002EB")]
		public abstract InteractableToolTags ToolTags
		{
			[Token(Token = "0x6001185")]
			get;
		}

		[Token(Token = "0x170002EC")]
		public abstract ToolInputState ToolInputState
		{
			[Token(Token = "0x6001186")]
			get;
		}

		[Token(Token = "0x170002ED")]
		public abstract bool IsFarFieldTool
		{
			[Token(Token = "0x6001187")]
			get;
		}

		[Token(Token = "0x170002EE")]
		public Vector3 Velocity
		{
			[Token(Token = "0x6001188")]
			[Address(RVA = "0x10FA3CC", Offset = "0x10FA3CC", VA = "0x10FA3CC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6B1E04", Offset = "0x6B1E04")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6001189")]
			[Address(RVA = "0x10FA3D8", Offset = "0x10FA3D8", VA = "0x10FA3D8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6B1E14", Offset = "0x6B1E14")]
			protected set
			{
			}
		}

		[Token(Token = "0x170002EF")]
		public Vector3 InteractionPosition
		{
			[Token(Token = "0x600118A")]
			[Address(RVA = "0x10FA3E4", Offset = "0x10FA3E4", VA = "0x10FA3E4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6B1E24", Offset = "0x6B1E24")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x600118B")]
			[Address(RVA = "0x10FA3F0", Offset = "0x10FA3F0", VA = "0x10FA3F0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6B1E34", Offset = "0x6B1E34")]
			protected set
			{
			}
		}

		[Token(Token = "0x170002F0")]
		public abstract bool EnableState
		{
			[Token(Token = "0x6001190")]
			get;
			[Token(Token = "0x6001191")]
			set;
		}

		[Token(Token = "0x600118C")]
		[Address(RVA = "0x10FA3FC", Offset = "0x10FA3FC", VA = "0x10FA3FC")]
		public List<InteractableCollisionInfo> GetCurrentIntersectingObjects()
		{
			return null;
		}

		[Token(Token = "0x600118D")]
		public abstract List<InteractableCollisionInfo> GetNextIntersectingObjects();

		[Token(Token = "0x600118E")]
		public abstract void FocusOnInteractable(Interactable focusedInteractable, ColliderZone colliderZone);

		[Token(Token = "0x600118F")]
		public abstract void DeFocus();

		[Token(Token = "0x6001192")]
		public abstract void Initialize();

		[Token(Token = "0x6001193")]
		[Address(RVA = "0x10FA404", Offset = "0x10FA404", VA = "0x10FA404")]
		public KeyValuePair<Interactable, InteractableCollisionInfo> GetFirstCurrentCollisionInfo()
		{
			return default(KeyValuePair<Interactable, InteractableCollisionInfo>);
		}

		[Token(Token = "0x6001194")]
		[Address(RVA = "0x10FA454", Offset = "0x10FA454", VA = "0x10FA454")]
		public void ClearAllCurrentCollisionInfos()
		{
		}

		[Token(Token = "0x6001195")]
		[Address(RVA = "0x10FA4AC", Offset = "0x10FA4AC", VA = "0x10FA4AC", Slot = "13")]
		public virtual void UpdateCurrentCollisionsBasedOnDepth()
		{
		}

		[Token(Token = "0x6001196")]
		[Address(RVA = "0x10FA6F0", Offset = "0x10FA6F0", VA = "0x10FA6F0", Slot = "14")]
		public virtual void UpdateLatestCollisionData()
		{
		}

		[Token(Token = "0x6001197")]
		[Address(RVA = "0x10F819C", Offset = "0x10F819C", VA = "0x10F819C")]
		protected InteractableTool()
		{
		}
	}
	[Token(Token = "0x2000221")]
	public interface InteractableToolView
	{
		[Token(Token = "0x170002F1")]
		InteractableTool InteractableTool
		{
			[Token(Token = "0x6001198")]
			get;
		}

		[Token(Token = "0x170002F2")]
		bool EnableState
		{
			[Token(Token = "0x600119A")]
			get;
			[Token(Token = "0x600119B")]
			set;
		}

		[Token(Token = "0x170002F3")]
		bool ToolActivateState
		{
			[Token(Token = "0x600119C")]
			get;
			[Token(Token = "0x600119D")]
			set;
		}

		[Token(Token = "0x6001199")]
		void SetFocusedInteractable(Interactable interactable);
	}
	[Token(Token = "0x2000222")]
	public class PinchStateModule
	{
		[Token(Token = "0x2000404")]
		private enum PinchState
		{
			[Token(Token = "0x40018FD")]
			None,
			[Token(Token = "0x40018FE")]
			PinchDown,
			[Token(Token = "0x40018FF")]
			PinchStay,
			[Token(Token = "0x4001900")]
			PinchUp
		}

		[Token(Token = "0x4000F5D")]
		private const float PINCH_STRENGTH_THRESHOLD = 1f;

		[Token(Token = "0x4000F5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private PinchState _currPinchState;

		[Token(Token = "0x4000F5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Interactable _firstFocusedInteractable;

		[Token(Token = "0x170002F4")]
		public bool PinchUpAndDownOnFocusedObject
		{
			[Token(Token = "0x600119E")]
			[Address(RVA = "0x1129A0C", Offset = "0x1129A0C", VA = "0x1129A0C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170002F5")]
		public bool PinchSteadyOnFocusedObject
		{
			[Token(Token = "0x600119F")]
			[Address(RVA = "0x1129A98", Offset = "0x1129A98", VA = "0x1129A98")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170002F6")]
		public bool PinchDownOnFocusedObject
		{
			[Token(Token = "0x60011A0")]
			[Address(RVA = "0x1129B24", Offset = "0x1129B24", VA = "0x1129B24")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60011A1")]
		[Address(RVA = "0x1129BB0", Offset = "0x1129BB0", VA = "0x1129BB0")]
		public PinchStateModule()
		{
		}

		[Token(Token = "0x60011A2")]
		[Address(RVA = "0x1129BDC", Offset = "0x1129BDC", VA = "0x1129BDC")]
		public void UpdateState(OVRHand hand, Interactable currFocusedInteractable)
		{
		}
	}
	[Token(Token = "0x2000223")]
	public class RayTool : InteractableTool
	{
		[Token(Token = "0x4000F60")]
		private const float MINIMUM_RAY_CAST_DISTANCE = 0.8f;

		[Token(Token = "0x4000F61")]
		private const float COLLIDER_RADIUS = 0.01f;

		[Token(Token = "0x4000F62")]
		private const int NUM_MAX_PRIMARY_HITS = 10;

		[Token(Token = "0x4000F63")]
		private const int NUM_MAX_SECONDARY_HITS = 25;

		[Token(Token = "0x4000F64")]
		private const int NUM_COLLIDERS_TO_TEST = 20;

		[Token(Token = "0x4000F65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private RayToolView _rayToolView;

		[Token(Token = "0x4000F66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x6AB4F8", Offset = "0x6AB4F8")]
		[SerializeField]
		private float _coneAngleDegrees;

		[Token(Token = "0x4000F67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		[SerializeField]
		private float _farFieldMaxDistance;

		[Token(Token = "0x4000F68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private PinchStateModule _pinchStateModule;

		[Token(Token = "0x4000F69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Interactable _focusedInteractable;

		[Token(Token = "0x4000F6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Collider[] _collidersOverlapped;

		[Token(Token = "0x4000F6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Interactable _currInteractableCastedAgainst;

		[Token(Token = "0x4000F6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private float _coneAngleReleaseDegrees;

		[Token(Token = "0x4000F6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private RaycastHit[] _primaryHits;

		[Token(Token = "0x4000F6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private Collider[] _secondaryOverlapResults;

		[Token(Token = "0x4000F6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private bool _initialized;

		[Token(Token = "0x170002F7")]
		public override InteractableToolTags ToolTags
		{
			[Token(Token = "0x60011A3")]
			[Address(RVA = "0x1129E7C", Offset = "0x1129E7C", VA = "0x1129E7C", Slot = "4")]
			get
			{
				return default(InteractableToolTags);
			}
		}

		[Token(Token = "0x170002F8")]
		public override ToolInputState ToolInputState
		{
			[Token(Token = "0x60011A4")]
			[Address(RVA = "0x1129E84", Offset = "0x1129E84", VA = "0x1129E84", Slot = "5")]
			get
			{
				return default(ToolInputState);
			}
		}

		[Token(Token = "0x170002F9")]
		public override bool IsFarFieldTool
		{
			[Token(Token = "0x60011A5")]
			[Address(RVA = "0x1129EEC", Offset = "0x1129EEC", VA = "0x1129EEC", Slot = "6")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170002FA")]
		public override bool EnableState
		{
			[Token(Token = "0x60011A6")]
			[Address(RVA = "0x1129EF4", Offset = "0x1129EF4", VA = "0x1129EF4", Slot = "10")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60011A7")]
			[Address(RVA = "0x1129F38", Offset = "0x1129F38", VA = "0x1129F38", Slot = "11")]
			set
			{
			}
		}

		[Token(Token = "0x60011A8")]
		[Address(RVA = "0x1129FAC", Offset = "0x1129FAC", VA = "0x1129FAC", Slot = "12")]
		public override void Initialize()
		{
		}

		[Token(Token = "0x60011A9")]
		[Address(RVA = "0x112A00C", Offset = "0x112A00C", VA = "0x112A00C")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60011AA")]
		[Address(RVA = "0x112A0B4", Offset = "0x112A0B4", VA = "0x112A0B4")]
		private void Update()
		{
		}

		[Token(Token = "0x60011AB")]
		[Address(RVA = "0x112A3BC", Offset = "0x112A3BC", VA = "0x112A3BC")]
		private Vector3 GetRayCastOrigin()
		{
			return default(Vector3);
		}

		[Token(Token = "0x60011AC")]
		[Address(RVA = "0x112A4B8", Offset = "0x112A4B8", VA = "0x112A4B8", Slot = "7")]
		public override List<InteractableCollisionInfo> GetNextIntersectingObjects()
		{
			return null;
		}

		[Token(Token = "0x60011AD")]
		[Address(RVA = "0x112A81C", Offset = "0x112A81C", VA = "0x112A81C")]
		private bool HasRayReleasedInteractable(Interactable focusedInteractable)
		{
			return default(bool);
		}

		[Token(Token = "0x60011AE")]
		[Address(RVA = "0x112A9C0", Offset = "0x112A9C0", VA = "0x112A9C0")]
		private Interactable FindTargetInteractable()
		{
			return null;
		}

		[Token(Token = "0x60011AF")]
		[Address(RVA = "0x112AAE8", Offset = "0x112AAE8", VA = "0x112AAE8")]
		private Interactable FindPrimaryRaycastHit(Vector3 rayOrigin, Vector3 rayDirection)
		{
			return null;
		}

		[Token(Token = "0x60011B0")]
		[Address(RVA = "0x112AE20", Offset = "0x112AE20", VA = "0x112AE20")]
		private Interactable FindInteractableViaConeTest(Vector3 rayOrigin, Vector3 rayDirection)
		{
			return null;
		}

		[Token(Token = "0x60011B1")]
		[Address(RVA = "0x112B230", Offset = "0x112B230", VA = "0x112B230", Slot = "8")]
		public override void FocusOnInteractable(Interactable focusedInteractable, ColliderZone colliderZone)
		{
		}

		[Token(Token = "0x60011B2")]
		[Address(RVA = "0x112B304", Offset = "0x112B304", VA = "0x112B304", Slot = "9")]
		public override void DeFocus()
		{
		}

		[Token(Token = "0x60011B3")]
		[Address(RVA = "0x112B338", Offset = "0x112B338", VA = "0x112B338")]
		public RayTool()
		{
		}
	}
	[Token(Token = "0x2000224")]
	public class RayToolView : MonoBehaviour, InteractableToolView
	{
		[Token(Token = "0x4000F70")]
		private const int NUM_RAY_LINE_POSITIONS = 25;

		[Token(Token = "0x4000F71")]
		private const float DEFAULT_RAY_CAST_DISTANCE = 3f;

		[Token(Token = "0x4000F72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Transform _targetTransform;

		[Token(Token = "0x4000F73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private LineRenderer _lineRenderer;

		[Token(Token = "0x4000F74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool _toolActivateState;

		[Token(Token = "0x4000F75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Transform _focusedTransform;

		[Token(Token = "0x4000F76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Vector3[] linePositions;

		[Token(Token = "0x4000F77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Gradient _oldColorGradient;

		[Token(Token = "0x4000F78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Gradient _highLightColorGradient;

		[Token(Token = "0x4000F79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6AB56C", Offset = "0x6AB56C")]
		private InteractableTool <InteractableTool>k__BackingField;

		[Token(Token = "0x170002FB")]
		public bool EnableState
		{
			[Token(Token = "0x60011B4")]
			[Address(RVA = "0x1129F1C", Offset = "0x1129F1C", VA = "0x1129F1C", Slot = "6")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60011B5")]
			[Address(RVA = "0x1129F54", Offset = "0x1129F54", VA = "0x1129F54", Slot = "7")]
			set
			{
			}
		}

		[Token(Token = "0x170002FC")]
		public bool ToolActivateState
		{
			[Token(Token = "0x60011B6")]
			[Address(RVA = "0x112B3F4", Offset = "0x112B3F4", VA = "0x112B3F4", Slot = "8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60011B7")]
			[Address(RVA = "0x112A380", Offset = "0x112A380", VA = "0x112A380", Slot = "9")]
			set
			{
			}
		}

		[Token(Token = "0x170002FD")]
		public InteractableTool InteractableTool
		{
			[Token(Token = "0x60011B9")]
			[Address(RVA = "0x112B624", Offset = "0x112B624", VA = "0x112B624", Slot = "4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6B1E44", Offset = "0x6B1E44")]
			get
			{
				return null;
			}
			[Token(Token = "0x60011BA")]
			[Address(RVA = "0x112B62C", Offset = "0x112B62C", VA = "0x112B62C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6B1E54", Offset = "0x6B1E54")]
			set
			{
			}
		}

		[Token(Token = "0x60011B8")]
		[Address(RVA = "0x112B3FC", Offset = "0x112B3FC", VA = "0x112B3FC")]
		private void Awake()
		{
		}

		[Token(Token = "0x60011BB")]
		[Address(RVA = "0x112B264", Offset = "0x112B264", VA = "0x112B264", Slot = "5")]
		public void SetFocusedInteractable(Interactable interactable)
		{
		}

		[Token(Token = "0x60011BC")]
		[Address(RVA = "0x112B634", Offset = "0x112B634", VA = "0x112B634")]
		private void Update()
		{
		}

		[Token(Token = "0x60011BD")]
		[Address(RVA = "0x112B960", Offset = "0x112B960", VA = "0x112B960")]
		public static Vector3 GetPointOnBezierCurve(Vector3 p0, Vector3 p1, Vector3 p2, Vector3 p3, float t)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60011BE")]
		[Address(RVA = "0x112BB50", Offset = "0x112BB50", VA = "0x112BB50")]
		public RayToolView()
		{
		}
	}
	[Token(Token = "0x2000225")]
	public class DistanceGrabberSample : MonoBehaviour
	{
		[Token(Token = "0x4000F7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool useSpherecast;

		[Token(Token = "0x4000F7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		private bool allowGrabThroughWalls;

		[Token(Token = "0x4000F7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private DistanceGrabber[] m_grabbers;

		[Token(Token = "0x170002FE")]
		public bool UseSpherecast
		{
			[Token(Token = "0x60011BF")]
			[Address(RVA = "0x10F6E94", Offset = "0x10F6E94", VA = "0x10F6E94")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60011C0")]
			[Address(RVA = "0x10F6E9C", Offset = "0x10F6E9C", VA = "0x10F6E9C")]
			set
			{
			}
		}

		[Token(Token = "0x170002FF")]
		public bool AllowGrabThroughWalls
		{
			[Token(Token = "0x60011C1")]
			[Address(RVA = "0x10F6F24", Offset = "0x10F6F24", VA = "0x10F6F24")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60011C2")]
			[Address(RVA = "0x10F6F2C", Offset = "0x10F6F2C", VA = "0x10F6F2C")]
			set
			{
			}
		}

		[Token(Token = "0x60011C3")]
		[Address(RVA = "0x10F6F98", Offset = "0x10F6F98", VA = "0x10F6F98")]
		private void Start()
		{
		}

		[Token(Token = "0x60011C4")]
		[Address(RVA = "0x10F71FC", Offset = "0x10F71FC", VA = "0x10F71FC")]
		public void ToggleSphereCasting(Toggle t)
		{
		}

		[Token(Token = "0x60011C5")]
		[Address(RVA = "0x10F720C", Offset = "0x10F720C", VA = "0x10F720C")]
		public void ToggleGrabThroughWalls(Toggle t)
		{
		}

		[Token(Token = "0x60011C6")]
		[Address(RVA = "0x10F721C", Offset = "0x10F721C", VA = "0x10F721C")]
		public DistanceGrabberSample()
		{
		}
	}
	[Token(Token = "0x2000226")]
	public class ControllerBoxController : MonoBehaviour
	{
		[Token(Token = "0x4000F7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private TrainLocomotive _locomotive;

		[Token(Token = "0x4000F7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private CowController _cowController;

		[Token(Token = "0x60011C7")]
		[Address(RVA = "0x10F4DA4", Offset = "0x10F4DA4", VA = "0x10F4DA4")]
		private void Awake()
		{
		}

		[Token(Token = "0x60011C8")]
		[Address(RVA = "0x10F4DA8", Offset = "0x10F4DA8", VA = "0x10F4DA8")]
		public void StartStopStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x60011C9")]
		[Address(RVA = "0x10F4DE0", Offset = "0x10F4DE0", VA = "0x10F4DE0")]
		public void DecreaseSpeedStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x60011CA")]
		[Address(RVA = "0x10F4E18", Offset = "0x10F4E18", VA = "0x10F4E18")]
		public void IncreaseSpeedStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x60011CB")]
		[Address(RVA = "0x10F4E50", Offset = "0x10F4E50", VA = "0x10F4E50")]
		public void SmokeButtonStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x60011CC")]
		[Address(RVA = "0x10F4E88", Offset = "0x10F4E88", VA = "0x10F4E88")]
		public void WhistleButtonStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x60011CD")]
		[Address(RVA = "0x10F4EC0", Offset = "0x10F4EC0", VA = "0x10F4EC0")]
		public void ReverseButtonStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x60011CE")]
		[Address(RVA = "0x10F4EF8", Offset = "0x10F4EF8", VA = "0x10F4EF8")]
		public void SwitchVisualization(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x60011CF")]
		[Address(RVA = "0x10F5054", Offset = "0x10F5054", VA = "0x10F5054")]
		public void GoMoo(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x60011D0")]
		[Address(RVA = "0x10F50C4", Offset = "0x10F50C4", VA = "0x10F50C4")]
		public ControllerBoxController()
		{
		}
	}
	[Token(Token = "0x2000227")]
	public class CowController : MonoBehaviour
	{
		[Token(Token = "0x4000F7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Animation _cowAnimation;

		[Token(Token = "0x4000F80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private AudioSource _mooCowAudioSource;

		[Token(Token = "0x60011D1")]
		[Address(RVA = "0x10F50CC", Offset = "0x10F50CC", VA = "0x10F50CC")]
		private void Start()
		{
		}

		[Token(Token = "0x60011D2")]
		[Address(RVA = "0x10F50D0", Offset = "0x10F50D0", VA = "0x10F50D0")]
		public void PlayMooSound()
		{
		}

		[Token(Token = "0x60011D3")]
		[Address(RVA = "0x10F5088", Offset = "0x10F5088", VA = "0x10F5088")]
		public void GoMooCowGo()
		{
		}

		[Token(Token = "0x60011D4")]
		[Address(RVA = "0x10F5110", Offset = "0x10F5110", VA = "0x10F5110")]
		public CowController()
		{
		}
	}
	[Token(Token = "0x2000228")]
	public class PanelHMDFollower : MonoBehaviour
	{
		[Token(Token = "0x2000405")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6A864C", Offset = "0x6A864C")]
		private sealed class <LerpToHMD>d__13 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001901")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001902")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001903")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public PanelHMDFollower <>4__this;

			[Token(Token = "0x4001904")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private Vector3 <newPanelPosition>5__2;

			[Token(Token = "0x4001905")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private float <startTime>5__3;

			[Token(Token = "0x4001906")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private float <endTime>5__4;

			[Token(Token = "0x1700041F")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600189A")]
				[Address(RVA = "0x11298B0", Offset = "0x11298B0", VA = "0x11298B0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000420")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600189C")]
				[Address(RVA = "0x1129918", Offset = "0x1129918", VA = "0x1129918", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001897")]
			[Address(RVA = "0x11295E4", Offset = "0x11295E4", VA = "0x11295E4")]
			[DebuggerHidden]
			public <LerpToHMD>d__13(int <>1__state)
			{
			}

			[Token(Token = "0x6001898")]
			[Address(RVA = "0x11296C0", Offset = "0x11296C0", VA = "0x11296C0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001899")]
			[Address(RVA = "0x11296C4", Offset = "0x11296C4", VA = "0x11296C4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600189B")]
			[Address(RVA = "0x11298B8", Offset = "0x11298B8", VA = "0x11298B8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000F81")]
		private const float TOTAL_DURATION = 3f;

		[Token(Token = "0x4000F82")]
		private const float HMD_MOVEMENT_THRESHOLD = 0.3f;

		[Token(Token = "0x4000F83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private float _maxDistance;

		[Token(Token = "0x4000F84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private float _minDistance;

		[Token(Token = "0x4000F85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float _minZDistance;

		[Token(Token = "0x4000F86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private OVRCameraRig _cameraRig;

		[Token(Token = "0x4000F87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Vector3 _panelInitialPosition;

		[Token(Token = "0x4000F88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Coroutine _coroutine;

		[Token(Token = "0x4000F89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Vector3 _prevPos;

		[Token(Token = "0x4000F8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private Vector3 _lastMovedToPos;

		[Token(Token = "0x60011D5")]
		[Address(RVA = "0x11291FC", Offset = "0x11291FC", VA = "0x11291FC")]
		private void Awake()
		{
		}

		[Token(Token = "0x60011D6")]
		[Address(RVA = "0x1129294", Offset = "0x1129294", VA = "0x1129294")]
		private void Update()
		{
		}

		[Token(Token = "0x60011D7")]
		[Address(RVA = "0x1129520", Offset = "0x1129520", VA = "0x1129520")]
		private Vector3 CalculateIdealAnchorPosition()
		{
			return default(Vector3);
		}

		[Token(Token = "0x60011D8")]
		[Address(RVA = "0x11294B0", Offset = "0x11294B0", VA = "0x11294B0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6B1E64", Offset = "0x6B1E64")]
		private IEnumerator LerpToHMD()
		{
			return null;
		}

		[Token(Token = "0x60011D9")]
		[Address(RVA = "0x1129610", Offset = "0x1129610", VA = "0x1129610")]
		public PanelHMDFollower()
		{
		}
	}
	[Token(Token = "0x2000229")]
	public class SelectionCylinder : MonoBehaviour
	{
		[Token(Token = "0x2000406")]
		public enum SelectionState
		{
			[Token(Token = "0x4001908")]
			Off,
			[Token(Token = "0x4001909")]
			Selected,
			[Token(Token = "0x400190A")]
			Highlighted
		}

		[Token(Token = "0x4000F8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private MeshRenderer _selectionMeshRenderer;

		[Token(Token = "0x4000F8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static int _colorId;

		[Token(Token = "0x4000F8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Material[] _selectionMaterials;

		[Token(Token = "0x4000F8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Color[] _defaultSelectionColors;

		[Token(Token = "0x4000F8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Color[] _highlightColors;

		[Token(Token = "0x4000F90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private SelectionState _currSelectionState;

		[Token(Token = "0x17000300")]
		public SelectionState CurrSelectionState
		{
			[Token(Token = "0x60011DA")]
			[Address(RVA = "0x112BBB0", Offset = "0x112BBB0", VA = "0x112BBB0")]
			get
			{
				return default(SelectionState);
			}
			[Token(Token = "0x60011DB")]
			[Address(RVA = "0x112BBB8", Offset = "0x112BBB8", VA = "0x112BBB8")]
			set
			{
			}
		}

		[Token(Token = "0x60011DC")]
		[Address(RVA = "0x112BD40", Offset = "0x112BD40", VA = "0x112BD40")]
		private void Awake()
		{
		}

		[Token(Token = "0x60011DD")]
		[Address(RVA = "0x112BF00", Offset = "0x112BF00", VA = "0x112BF00")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60011DE")]
		[Address(RVA = "0x112BC40", Offset = "0x112BC40", VA = "0x112BC40")]
		private void AffectSelectionColor(Color[] newColors)
		{
		}

		[Token(Token = "0x60011DF")]
		[Address(RVA = "0x112BFF0", Offset = "0x112BFF0", VA = "0x112BFF0")]
		public SelectionCylinder()
		{
		}
	}
	[Token(Token = "0x200022A")]
	public class TrackSegment : MonoBehaviour
	{
		[Token(Token = "0x2000407")]
		public enum SegmentType
		{
			[Token(Token = "0x400190C")]
			Straight,
			[Token(Token = "0x400190D")]
			LeftTurn,
			[Token(Token = "0x400190E")]
			RightTurn,
			[Token(Token = "0x400190F")]
			Switch
		}

		[Token(Token = "0x4000F91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private SegmentType _segmentType;

		[Token(Token = "0x4000F92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private MeshFilter _straight;

		[Token(Token = "0x4000F93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private MeshFilter _leftTurn;

		[Token(Token = "0x4000F94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private MeshFilter _rightTurn;

		[Token(Token = "0x4000F95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float _gridSize;

		[Token(Token = "0x4000F96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private int _subDivCount;

		[Token(Token = "0x4000F97")]
		private const float _originalGridSize = 0.8f;

		[Token(Token = "0x4000F98")]
		private const float _trackWidth = 0.15f;

		[Token(Token = "0x4000F99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private GameObject _mesh;

		[Token(Token = "0x4000F9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6AB64C", Offset = "0x6AB64C")]
		private float <StartDistance>k__BackingField;

		[Token(Token = "0x4000F9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Pose _p1;

		[Token(Token = "0x4000F9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Pose _p2;

		[Token(Token = "0x4000F9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Pose _endPose;

		[Token(Token = "0x17000301")]
		public float StartDistance
		{
			[Token(Token = "0x60011E1")]
			[Address(RVA = "0x112C05C", Offset = "0x112C05C", VA = "0x112C05C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6B1EC8", Offset = "0x6B1EC8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60011E2")]
			[Address(RVA = "0x112C064", Offset = "0x112C064", VA = "0x112C064")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6B1ED8", Offset = "0x6B1ED8")]
			set
			{
			}
		}

		[Token(Token = "0x17000302")]
		public float GridSize
		{
			[Token(Token = "0x60011E3")]
			[Address(RVA = "0x112C06C", Offset = "0x112C06C", VA = "0x112C06C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60011E4")]
			[Address(RVA = "0x112C074", Offset = "0x112C074", VA = "0x112C074")]
			private set
			{
			}
		}

		[Token(Token = "0x17000303")]
		public int SubDivCount
		{
			[Token(Token = "0x60011E5")]
			[Address(RVA = "0x112C07C", Offset = "0x112C07C", VA = "0x112C07C")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60011E6")]
			[Address(RVA = "0x112C084", Offset = "0x112C084", VA = "0x112C084")]
			set
			{
			}
		}

		[Token(Token = "0x17000304")]
		public SegmentType Type
		{
			[Token(Token = "0x60011E7")]
			[Address(RVA = "0x112C08C", Offset = "0x112C08C", VA = "0x112C08C")]
			get
			{
				return default(SegmentType);
			}
		}

		[Token(Token = "0x17000305")]
		public Pose EndPose
		{
			[Token(Token = "0x60011E8")]
			[Address(RVA = "0x112C094", Offset = "0x112C094", VA = "0x112C094")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000306")]
		public float Radius
		{
			[Token(Token = "0x60011E9")]
			[Address(RVA = "0x112C528", Offset = "0x112C528", VA = "0x112C528")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000307")]
		public float SegmentLength
		{
			[Token(Token = "0x60011EB")]
			[Address(RVA = "0x112C0FC", Offset = "0x112C0FC", VA = "0x112C0FC")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x60011EA")]
		[Address(RVA = "0x112C538", Offset = "0x112C538", VA = "0x112C538")]
		public float setGridSize(float size)
		{
			return default(float);
		}

		[Token(Token = "0x60011EC")]
		[Address(RVA = "0x112C550", Offset = "0x112C550", VA = "0x112C550")]
		private void Awake()
		{
		}

		[Token(Token = "0x60011ED")]
		[Address(RVA = "0x112C13C", Offset = "0x112C13C", VA = "0x112C13C")]
		public void UpdatePose(float distanceIntoSegment, Pose pose)
		{
		}

		[Token(Token = "0x60011EE")]
		[Address(RVA = "0x112C554", Offset = "0x112C554", VA = "0x112C554")]
		private void Update()
		{
		}

		[Token(Token = "0x60011EF")]
		[Address(RVA = "0x112C558", Offset = "0x112C558", VA = "0x112C558")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60011F0")]
		[Address(RVA = "0x112C5C4", Offset = "0x112C5C4", VA = "0x112C5C4")]
		private void DrawDebugLines()
		{
		}

		[Token(Token = "0x60011F1")]
		[Address(RVA = "0x112D14C", Offset = "0x112D14C", VA = "0x112D14C")]
		public void RegenerateTrackAndMesh()
		{
		}

		[Token(Token = "0x60011F2")]
		[Address(RVA = "0x112D458", Offset = "0x112D458", VA = "0x112D458")]
		public TrackSegment()
		{
		}
	}
	[Token(Token = "0x200022B")]
	public class TrainButtonVisualController : MonoBehaviour
	{
		[Token(Token = "0x2000408")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6A865C", Offset = "0x6A865C")]
		private sealed class <ResetPosition>d__26 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001910")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001911")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001912")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public TrainButtonVisualController <>4__this;

			[Token(Token = "0x4001913")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <startTime>5__2;

			[Token(Token = "0x4001914")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float <endTime>5__3;

			[Token(Token = "0x17000421")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60018A0")]
				[Address(RVA = "0x112E070", Offset = "0x112E070", VA = "0x112E070", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000422")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60018A2")]
				[Address(RVA = "0x112E0D8", Offset = "0x112E0D8", VA = "0x112E0D8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600189D")]
			[Address(RVA = "0x112DDE8", Offset = "0x112DDE8", VA = "0x112DDE8")]
			[DebuggerHidden]
			public <ResetPosition>d__26(int <>1__state)
			{
			}

			[Token(Token = "0x600189E")]
			[Address(RVA = "0x112DEC4", Offset = "0x112DEC4", VA = "0x112DEC4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600189F")]
			[Address(RVA = "0x112DEC8", Offset = "0x112DEC8", VA = "0x112DEC8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60018A1")]
			[Address(RVA = "0x112E078", Offset = "0x112E078", VA = "0x112E078", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000F9E")]
		private const float LERP_TO_OLD_POS_DURATION = 1f;

		[Token(Token = "0x4000F9F")]
		private const float LOCAL_SIZE_HALVED = 0.5f;

		[Token(Token = "0x4000FA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private MeshRenderer _meshRenderer;

		[Token(Token = "0x4000FA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private MeshRenderer _glowRenderer;

		[Token(Token = "0x4000FA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private ButtonController _buttonController;

		[Token(Token = "0x4000FA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Color _buttonContactColor;

		[Token(Token = "0x4000FA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Color _buttonActionColor;

		[Token(Token = "0x4000FA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private AudioSource _audioSource;

		[Token(Token = "0x4000FA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private AudioClip _actionSoundEffect;

		[Token(Token = "0x4000FA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private Transform _buttonContactTransform;

		[Token(Token = "0x4000FA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private float _contactMaxDisplacementDistance;

		[Token(Token = "0x4000FA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Material _buttonMaterial;

		[Token(Token = "0x4000FAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Color _buttonDefaultColor;

		[Token(Token = "0x4000FAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private int _materialColorId;

		[Token(Token = "0x4000FAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private bool _buttonInContactOrActionStates;

		[Token(Token = "0x4000FAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Coroutine _lerpToOldPositionCr;

		[Token(Token = "0x4000FAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Vector3 _oldPosition;

		[Token(Token = "0x60011F3")]
		[Address(RVA = "0x112D4FC", Offset = "0x112D4FC", VA = "0x112D4FC")]
		private void Awake()
		{
		}

		[Token(Token = "0x60011F4")]
		[Address(RVA = "0x112D5A8", Offset = "0x112D5A8", VA = "0x112D5A8")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60011F5")]
		[Address(RVA = "0x112D65C", Offset = "0x112D65C", VA = "0x112D65C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60011F6")]
		[Address(RVA = "0x112D790", Offset = "0x112D790", VA = "0x112D790")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60011F7")]
		[Address(RVA = "0x112D908", Offset = "0x112D908", VA = "0x112D908")]
		private void ActionOrInContactZoneStayEvent(ColliderZoneArgs collisionArgs)
		{
		}

		[Token(Token = "0x60011F8")]
		[Address(RVA = "0x112DAA4", Offset = "0x112DAA4", VA = "0x112DAA4")]
		private void InteractableStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x60011F9")]
		[Address(RVA = "0x112DD20", Offset = "0x112DD20", VA = "0x112DD20")]
		private void PlaySound(AudioClip clip)
		{
		}

		[Token(Token = "0x60011FA")]
		[Address(RVA = "0x112DBB8", Offset = "0x112DBB8", VA = "0x112DBB8")]
		private void StopResetLerping()
		{
		}

		[Token(Token = "0x60011FB")]
		[Address(RVA = "0x112DBCC", Offset = "0x112DBCC", VA = "0x112DBCC")]
		private void LerpToOldPosition()
		{
		}

		[Token(Token = "0x60011FC")]
		[Address(RVA = "0x112DD78", Offset = "0x112DD78", VA = "0x112DD78")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6B1EE8", Offset = "0x6B1EE8")]
		private IEnumerator ResetPosition()
		{
			return null;
		}

		[Token(Token = "0x60011FD")]
		[Address(RVA = "0x112DE14", Offset = "0x112DE14", VA = "0x112DE14")]
		public TrainButtonVisualController()
		{
		}
	}
	[Token(Token = "0x200022C")]
	public class TrainCar : TrainCarBase
	{
		[Token(Token = "0x4000FAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private TrainCarBase _parentLocomotive;

		[Token(Token = "0x4000FB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		protected float _distanceBehindParent;

		[Token(Token = "0x17000308")]
		public float DistanceBehindParentScaled
		{
			[Token(Token = "0x60011FE")]
			[Address(RVA = "0x112E0E0", Offset = "0x112E0E0", VA = "0x112E0E0")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x60011FF")]
		[Address(RVA = "0x112E0F0", Offset = "0x112E0F0", VA = "0x112E0F0", Slot = "4")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6001200")]
		[Address(RVA = "0x112E0F8", Offset = "0x112E0F8", VA = "0x112E0F8", Slot = "5")]
		public override void UpdatePosition()
		{
		}

		[Token(Token = "0x6001201")]
		[Address(RVA = "0x112E564", Offset = "0x112E564", VA = "0x112E564")]
		public TrainCar()
		{
		}
	}
	[Token(Token = "0x200022D")]
	public abstract class TrainCarBase : MonoBehaviour
	{
		[Token(Token = "0x4000FB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Vector3 OFFSET;

		[Token(Token = "0x4000FB2")]
		private const float WHEEL_RADIUS = 0.027f;

		[Token(Token = "0x4000FB3")]
		private const float TWO_PI = (float)Math.PI * 2f;

		[Token(Token = "0x4000FB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		protected Transform _frontWheels;

		[Token(Token = "0x4000FB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		protected Transform _rearWheels;

		[Token(Token = "0x4000FB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		protected TrainTrack _trainTrack;

		[Token(Token = "0x4000FB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		protected Transform[] _individualWheels;

		[Token(Token = "0x4000FB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6AB74C", Offset = "0x6AB74C")]
		private float <Distance>k__BackingField;

		[Token(Token = "0x4000FB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		protected float scale;

		[Token(Token = "0x4000FBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Pose _frontPose;

		[Token(Token = "0x4000FBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Pose _rearPose;

		[Token(Token = "0x17000309")]
		public float Distance
		{
			[Token(Token = "0x6001202")]
			[Address(RVA = "0x112E65C", Offset = "0x112E65C", VA = "0x112E65C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6B1F4C", Offset = "0x6B1F4C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001203")]
			[Address(RVA = "0x112E664", Offset = "0x112E664", VA = "0x112E664")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6B1F5C", Offset = "0x6B1F5C")]
			protected set
			{
			}
		}

		[Token(Token = "0x1700030A")]
		public float Scale
		{
			[Token(Token = "0x6001204")]
			[Address(RVA = "0x112E66C", Offset = "0x112E66C", VA = "0x112E66C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001205")]
			[Address(RVA = "0x112E674", Offset = "0x112E674", VA = "0x112E674")]
			set
			{
			}
		}

		[Token(Token = "0x6001206")]
		[Address(RVA = "0x112E0F4", Offset = "0x112E0F4", VA = "0x112E0F4", Slot = "4")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x6001207")]
		[Address(RVA = "0x112E67C", Offset = "0x112E67C", VA = "0x112E67C")]
		public void UpdatePose(float distance, TrainCarBase train, Pose pose)
		{
		}

		[Token(Token = "0x6001208")]
		[Address(RVA = "0x112E140", Offset = "0x112E140", VA = "0x112E140")]
		protected void UpdateCarPosition()
		{
		}

		[Token(Token = "0x6001209")]
		[Address(RVA = "0x112E418", Offset = "0x112E418", VA = "0x112E418")]
		protected void RotateCarWheels()
		{
		}

		[Token(Token = "0x600120A")]
		public abstract void UpdatePosition();

		[Token(Token = "0x600120B")]
		[Address(RVA = "0x112E5D4", Offset = "0x112E5D4", VA = "0x112E5D4")]
		protected TrainCarBase()
		{
		}
	}
	[Token(Token = "0x200022E")]
	public class TrainCrossingController : MonoBehaviour
	{
		[Token(Token = "0x2000409")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6A866C", Offset = "0x6A866C")]
		private sealed class <AnimateCrossing>d__15 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001915")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001916")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001917")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public TrainCrossingController <>4__this;

			[Token(Token = "0x4001918")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float animationLength;

			[Token(Token = "0x4001919")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float <animationEndTime>5__2;

			[Token(Token = "0x400191A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <lightBlinkDuration>5__3;

			[Token(Token = "0x400191B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private float <lightBlinkStartTime>5__4;

			[Token(Token = "0x400191C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private float <lightBlinkEndTime>5__5;

			[Token(Token = "0x400191D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private Material <lightToBlinkOn>5__6;

			[Token(Token = "0x400191E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private Material <lightToBlinkOff>5__7;

			[Token(Token = "0x400191F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private Color <onColor>5__8;

			[Token(Token = "0x4001920")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			private Color <offColor>5__9;

			[Token(Token = "0x17000423")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60018A6")]
				[Address(RVA = "0x112F004", Offset = "0x112F004", VA = "0x112F004", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000424")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60018A8")]
				[Address(RVA = "0x112F06C", Offset = "0x112F06C", VA = "0x112F06C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60018A3")]
			[Address(RVA = "0x112EC48", Offset = "0x112EC48", VA = "0x112EC48")]
			[DebuggerHidden]
			public <AnimateCrossing>d__15(int <>1__state)
			{
			}

			[Token(Token = "0x60018A4")]
			[Address(RVA = "0x112EDE0", Offset = "0x112EDE0", VA = "0x112EDE0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60018A5")]
			[Address(RVA = "0x112EDE4", Offset = "0x112EDE4", VA = "0x112EDE4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60018A7")]
			[Address(RVA = "0x112F00C", Offset = "0x112F00C", VA = "0x112F00C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000FBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private AudioSource _audioSource;

		[Token(Token = "0x4000FBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private AudioClip[] _crossingSounds;

		[Token(Token = "0x4000FBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private MeshRenderer _lightSide1Renderer;

		[Token(Token = "0x4000FBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private MeshRenderer _lightSide2Renderer;

		[Token(Token = "0x4000FC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private SelectionCylinder _selectionCylinder;

		[Token(Token = "0x4000FC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Material _lightsSide1Mat;

		[Token(Token = "0x4000FC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Material _lightsSide2Mat;

		[Token(Token = "0x4000FC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private int _colorId;

		[Token(Token = "0x4000FC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Coroutine _xingAnimationCr;

		[Token(Token = "0x4000FC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private InteractableTool _toolInteractingWithMe;

		[Token(Token = "0x600120D")]
		[Address(RVA = "0x112E84C", Offset = "0x112E84C", VA = "0x112E84C")]
		private void Awake()
		{
		}

		[Token(Token = "0x600120E")]
		[Address(RVA = "0x112E898", Offset = "0x112E898", VA = "0x112E898")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x600120F")]
		[Address(RVA = "0x112E9A4", Offset = "0x112E9A4", VA = "0x112E9A4")]
		public void CrossingButtonStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x6001210")]
		[Address(RVA = "0x112EAEC", Offset = "0x112EAEC", VA = "0x112EAEC")]
		private void Update()
		{
		}

		[Token(Token = "0x6001211")]
		[Address(RVA = "0x112EA00", Offset = "0x112EA00", VA = "0x112EA00")]
		private void ActivateTrainCrossing()
		{
		}

		[Token(Token = "0x6001212")]
		[Address(RVA = "0x112EBC8", Offset = "0x112EBC8", VA = "0x112EBC8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6B1F6C", Offset = "0x6B1F6C")]
		private IEnumerator AnimateCrossing(float animationLength)
		{
			return null;
		}

		[Token(Token = "0x6001213")]
		[Address(RVA = "0x112EC74", Offset = "0x112EC74", VA = "0x112EC74")]
		private void AffectMaterials(Material[] materials, Color newColor)
		{
		}

		[Token(Token = "0x6001214")]
		[Address(RVA = "0x112ED20", Offset = "0x112ED20", VA = "0x112ED20")]
		private void ToggleLightObjects(bool enableState)
		{
		}

		[Token(Token = "0x6001215")]
		[Address(RVA = "0x112ED80", Offset = "0x112ED80", VA = "0x112ED80")]
		public TrainCrossingController()
		{
		}
	}
	[Token(Token = "0x200022F")]
	public class TrainLocomotive : TrainCarBase
	{
		[Token(Token = "0x200040A")]
		private enum EngineSoundState
		{
			[Token(Token = "0x4001922")]
			Start,
			[Token(Token = "0x4001923")]
			AccelerateOrSetProperSpeed,
			[Token(Token = "0x4001924")]
			Stop
		}

		[Token(Token = "0x200040B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6A867C", Offset = "0x6A867C")]
		private sealed class <StartStopTrain>d__34 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001925")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001926")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001927")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public bool startTrain;

			[Token(Token = "0x4001928")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public TrainLocomotive <>4__this;

			[Token(Token = "0x4001929")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <endSpeed>5__2;

			[Token(Token = "0x400192A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private float <timePeriodForSpeedChange>5__3;

			[Token(Token = "0x400192B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private float <startTime>5__4;

			[Token(Token = "0x400192C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private float <endTime>5__5;

			[Token(Token = "0x400192D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private float <startSpeed>5__6;

			[Token(Token = "0x17000425")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60018AC")]
				[Address(RVA = "0x112FCAC", Offset = "0x112FCAC", VA = "0x112FCAC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000426")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60018AE")]
				[Address(RVA = "0x112FD14", Offset = "0x112FD14", VA = "0x112FD14", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60018A9")]
			[Address(RVA = "0x112F378", Offset = "0x112F378", VA = "0x112F378")]
			[DebuggerHidden]
			public <StartStopTrain>d__34(int <>1__state)
			{
			}

			[Token(Token = "0x60018AA")]
			[Address(RVA = "0x112FA8C", Offset = "0x112FA8C", VA = "0x112FA8C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60018AB")]
			[Address(RVA = "0x112FA90", Offset = "0x112FA90", VA = "0x112FA90", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60018AD")]
			[Address(RVA = "0x112FCB4", Offset = "0x112FCB4", VA = "0x112FCB4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000FC6")]
		private const float MIN_SPEED = 0.2f;

		[Token(Token = "0x4000FC7")]
		private const float MAX_SPEED = 2.7f;

		[Token(Token = "0x4000FC8")]
		private const float SMOKE_SPEED_MULTIPLIER = 8f;

		[Token(Token = "0x4000FC9")]
		private const int MAX_PARTICLES_MULTIPLIER = 3;

		[Token(Token = "0x4000FCA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x6AB7AC", Offset = "0x6AB7AC")]
		protected float _initialSpeed;

		[Token(Token = "0x4000FCB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private GameObject _startStopButton;

		[Token(Token = "0x4000FCC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private GameObject _decreaseSpeedButton;

		[Token(Token = "0x4000FCD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private GameObject _increaseSpeedButton;

		[Token(Token = "0x4000FCE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private GameObject _smokeButton;

		[Token(Token = "0x4000FCF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private GameObject _whistleButton;

		[Token(Token = "0x4000FD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private GameObject _reverseButton;

		[Token(Token = "0x4000FD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private AudioSource _whistleAudioSource;

		[Token(Token = "0x4000FD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private AudioClip _whistleSound;

		[Token(Token = "0x4000FD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		private AudioSource _engineAudioSource;

		[Token(Token = "0x4000FD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		private AudioClip[] _accelerationSounds;

		[Token(Token = "0x4000FD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[SerializeField]
		private AudioClip[] _decelerationSounds;

		[Token(Token = "0x4000FD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[SerializeField]
		private AudioClip _startUpSound;

		[Token(Token = "0x4000FD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[SerializeField]
		private AudioSource _smokeStackAudioSource;

		[Token(Token = "0x4000FD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[SerializeField]
		private AudioClip _smokeSound;

		[Token(Token = "0x4000FD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[SerializeField]
		private ParticleSystem _smoke1;

		[Token(Token = "0x4000FDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[SerializeField]
		private ParticleSystem _smoke2;

		[Token(Token = "0x4000FDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[SerializeField]
		private TrainCarBase[] _childCars;

		[Token(Token = "0x4000FDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private bool _isMoving;

		[Token(Token = "0x4000FDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE1")]
		private bool _reverse;

		[Token(Token = "0x4000FDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		private float _currentSpeed;

		[Token(Token = "0x4000FDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private float _speedDiv;

		[Token(Token = "0x4000FE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		private float _standardRateOverTimeMultiplier;

		[Token(Token = "0x4000FE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private int _standardMaxParticles;

		[Token(Token = "0x4000FE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private Coroutine _startStopTrainCr;

		[Token(Token = "0x6001216")]
		[Address(RVA = "0x112F074", Offset = "0x112F074", VA = "0x112F074")]
		private void Start()
		{
		}

		[Token(Token = "0x6001217")]
		[Address(RVA = "0x112F1CC", Offset = "0x112F1CC", VA = "0x112F1CC")]
		private void Update()
		{
		}

		[Token(Token = "0x6001218")]
		[Address(RVA = "0x112F1D8", Offset = "0x112F1D8", VA = "0x112F1D8", Slot = "5")]
		public override void UpdatePosition()
		{
		}

		[Token(Token = "0x6001219")]
		[Address(RVA = "0x112F32C", Offset = "0x112F32C", VA = "0x112F32C")]
		public void StartStopStateChanged()
		{
		}

		[Token(Token = "0x600121A")]
		[Address(RVA = "0x112F148", Offset = "0x112F148", VA = "0x112F148")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6B1FD0", Offset = "0x6B1FD0")]
		private IEnumerator StartStopTrain(bool startTrain)
		{
			return null;
		}

		[Token(Token = "0x600121B")]
		[Address(RVA = "0x112F3A4", Offset = "0x112F3A4", VA = "0x112F3A4")]
		private float PlayEngineSound(EngineSoundState engineSoundState)
		{
			return default(float);
		}

		[Token(Token = "0x600121C")]
		[Address(RVA = "0x112F2C8", Offset = "0x112F2C8", VA = "0x112F2C8")]
		private void UpdateDistance()
		{
		}

		[Token(Token = "0x600121D")]
		[Address(RVA = "0x112F5D8", Offset = "0x112F5D8", VA = "0x112F5D8")]
		public void DecreaseSpeedStateChanged()
		{
		}

		[Token(Token = "0x600121E")]
		[Address(RVA = "0x112F784", Offset = "0x112F784", VA = "0x112F784")]
		public void IncreaseSpeedStateChanged()
		{
		}

		[Token(Token = "0x600121F")]
		[Address(RVA = "0x112F694", Offset = "0x112F694", VA = "0x112F694")]
		private void UpdateSmokeEmissionBasedOnSpeed()
		{
		}

		[Token(Token = "0x6001220")]
		[Address(RVA = "0x112F840", Offset = "0x112F840", VA = "0x112F840")]
		private float GetCurrentSmokeEmission()
		{
			return default(float);
		}

		[Token(Token = "0x6001221")]
		[Address(RVA = "0x112F8C8", Offset = "0x112F8C8", VA = "0x112F8C8")]
		public void SmokeButtonStateChanged()
		{
		}

		[Token(Token = "0x6001222")]
		[Address(RVA = "0x112F954", Offset = "0x112F954", VA = "0x112F954")]
		public void WhistleButtonStateChanged()
		{
		}

		[Token(Token = "0x6001223")]
		[Address(RVA = "0x112FA10", Offset = "0x112FA10", VA = "0x112FA10")]
		public void ReverseButtonStateChanged()
		{
		}

		[Token(Token = "0x6001224")]
		[Address(RVA = "0x112FA20", Offset = "0x112FA20", VA = "0x112FA20")]
		public TrainLocomotive()
		{
		}
	}
	[Token(Token = "0x2000230")]
	public class TrainTrack : MonoBehaviour
	{
		[Token(Token = "0x4000FE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private float _gridSize;

		[Token(Token = "0x4000FE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private int _subDivCount;

		[Token(Token = "0x4000FE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Transform _segmentParent;

		[Token(Token = "0x4000FE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Transform _trainParent;

		[Token(Token = "0x4000FE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private bool _regnerateTrackMeshOnAwake;

		[Token(Token = "0x4000FE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float _trainLength;

		[Token(Token = "0x4000FE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private TrackSegment[] _trackSegments;

		[Token(Token = "0x1700030B")]
		public float TrackLength
		{
			[Token(Token = "0x6001225")]
			[Address(RVA = "0x112FD1C", Offset = "0x112FD1C", VA = "0x112FD1C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001226")]
			[Address(RVA = "0x112FD24", Offset = "0x112FD24", VA = "0x112FD24")]
			private set
			{
			}
		}

		[Token(Token = "0x6001227")]
		[Address(RVA = "0x112FD2C", Offset = "0x112FD2C", VA = "0x112FD2C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001228")]
		[Address(RVA = "0x112E6FC", Offset = "0x112E6FC", VA = "0x112E6FC")]
		public TrackSegment GetSegment(float distance)
		{
			return null;
		}

		[Token(Token = "0x6001229")]
		[Address(RVA = "0x112FD30", Offset = "0x112FD30", VA = "0x112FD30")]
		public void Regenerate()
		{
		}

		[Token(Token = "0x600122A")]
		[Address(RVA = "0x112FF28", Offset = "0x112FF28", VA = "0x112FF28")]
		private void SetScale(float ratio)
		{
		}

		[Token(Token = "0x600122B")]
		[Address(RVA = "0x1130044", Offset = "0x1130044", VA = "0x1130044")]
		public TrainTrack()
		{
		}
	}
	[Token(Token = "0x2000231")]
	public class Pose
	{
		[Token(Token = "0x4000FEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vector3 Position;

		[Token(Token = "0x4000FEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Quaternion Rotation;

		[Token(Token = "0x600122C")]
		[Address(RVA = "0x1129D60", Offset = "0x1129D60", VA = "0x1129D60")]
		public Pose()
		{
		}

		[Token(Token = "0x600122D")]
		[Address(RVA = "0x1129E0C", Offset = "0x1129E0C", VA = "0x1129E0C")]
		public Pose(Vector3 position, Quaternion rotation)
		{
		}
	}
	[Token(Token = "0x2000232")]
	public class WindmillBladesController : MonoBehaviour
	{
		[Token(Token = "0x200040C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6A868C", Offset = "0x6A868C")]
		private sealed class <LerpToSpeed>d__17 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400192E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400192F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001930")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public WindmillBladesController <>4__this;

			[Token(Token = "0x4001931")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float goalSpeed;

			[Token(Token = "0x4001932")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float <totalTime>5__2;

			[Token(Token = "0x4001933")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <startSpeed>5__3;

			[Token(Token = "0x17000427")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60018B2")]
				[Address(RVA = "0x1130628", Offset = "0x1130628", VA = "0x1130628", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000428")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60018B4")]
				[Address(RVA = "0x1130690", Offset = "0x1130690", VA = "0x1130690", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60018AF")]
			[Address(RVA = "0x11302EC", Offset = "0x11302EC", VA = "0x11302EC")]
			[DebuggerHidden]
			public <LerpToSpeed>d__17(int <>1__state)
			{
			}

			[Token(Token = "0x60018B0")]
			[Address(RVA = "0x113044C", Offset = "0x113044C", VA = "0x113044C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60018B1")]
			[Address(RVA = "0x1130450", Offset = "0x1130450", VA = "0x1130450", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60018B3")]
			[Address(RVA = "0x1130630", Offset = "0x1130630", VA = "0x1130630", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200040D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6A869C", Offset = "0x6A869C")]
		private sealed class <PlaySoundDelayed>d__18 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001934")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001935")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001936")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public WindmillBladesController <>4__this;

			[Token(Token = "0x4001937")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public AudioClip initial;

			[Token(Token = "0x4001938")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public float timeDelayAfterInitial;

			[Token(Token = "0x4001939")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public AudioClip clip;

			[Token(Token = "0x17000429")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60018B8")]
				[Address(RVA = "0x1130764", Offset = "0x1130764", VA = "0x1130764", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700042A")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60018BA")]
				[Address(RVA = "0x11307CC", Offset = "0x11307CC", VA = "0x11307CC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60018B5")]
			[Address(RVA = "0x11303AC", Offset = "0x11303AC", VA = "0x11303AC")]
			[DebuggerHidden]
			public <PlaySoundDelayed>d__18(int <>1__state)
			{
			}

			[Token(Token = "0x60018B6")]
			[Address(RVA = "0x1130698", Offset = "0x1130698", VA = "0x1130698", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60018B7")]
			[Address(RVA = "0x113069C", Offset = "0x113069C", VA = "0x113069C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60018B9")]
			[Address(RVA = "0x113076C", Offset = "0x113076C", VA = "0x113076C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000FEC")]
		private const float MAX_TIME = 1f;

		[Token(Token = "0x4000FED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private AudioSource _audioSource;

		[Token(Token = "0x4000FEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private AudioClip _windMillRotationSound;

		[Token(Token = "0x4000FEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private AudioClip _windMillStartSound;

		[Token(Token = "0x4000FF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private AudioClip _windMillStopSound;

		[Token(Token = "0x4000FF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6AB994", Offset = "0x6AB994")]
		private bool <IsMoving>k__BackingField;

		[Token(Token = "0x4000FF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float _currentSpeed;

		[Token(Token = "0x4000FF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Coroutine _lerpSpeedCoroutine;

		[Token(Token = "0x4000FF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Coroutine _audioChangeCr;

		[Token(Token = "0x4000FF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Quaternion _originalRotation;

		[Token(Token = "0x4000FF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private float _rotAngle;

		[Token(Token = "0x1700030C")]
		public bool IsMoving
		{
			[Token(Token = "0x600122E")]
			[Address(RVA = "0x1130060", Offset = "0x1130060", VA = "0x1130060")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6B2034", Offset = "0x6B2034")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600122F")]
			[Address(RVA = "0x1130068", Offset = "0x1130068", VA = "0x1130068")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6B2044", Offset = "0x6B2044")]
			private set
			{
			}
		}

		[Token(Token = "0x6001230")]
		[Address(RVA = "0x1130074", Offset = "0x1130074", VA = "0x1130074")]
		private void Start()
		{
		}

		[Token(Token = "0x6001231")]
		[Address(RVA = "0x11300B0", Offset = "0x11300B0", VA = "0x11300B0")]
		private void Update()
		{
		}

		[Token(Token = "0x6001232")]
		[Address(RVA = "0x1130204", Offset = "0x1130204", VA = "0x1130204")]
		public void SetMoveState(bool newMoveState, float goalSpeed)
		{
		}

		[Token(Token = "0x6001233")]
		[Address(RVA = "0x113026C", Offset = "0x113026C", VA = "0x113026C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6B2054", Offset = "0x6B2054")]
		private IEnumerator LerpToSpeed(float goalSpeed)
		{
			return null;
		}

		[Token(Token = "0x6001234")]
		[Address(RVA = "0x1130318", Offset = "0x1130318", VA = "0x1130318")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6B20B8", Offset = "0x6B20B8")]
		private IEnumerator PlaySoundDelayed(AudioClip initial, AudioClip clip, float timeDelayAfterInitial)
		{
			return null;
		}

		[Token(Token = "0x6001235")]
		[Address(RVA = "0x11303D8", Offset = "0x11303D8", VA = "0x11303D8")]
		private void PlaySound(AudioClip clip, bool loop = false)
		{
		}

		[Token(Token = "0x6001236")]
		[Address(RVA = "0x1130444", Offset = "0x1130444", VA = "0x1130444")]
		public WindmillBladesController()
		{
		}
	}
	[Token(Token = "0x2000233")]
	public class WindmillController : MonoBehaviour
	{
		[Token(Token = "0x4000FF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject _startStopButton;

		[Token(Token = "0x4000FF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float _maxSpeed;

		[Token(Token = "0x4000FF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private SelectionCylinder _selectionCylinder;

		[Token(Token = "0x4000FFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private WindmillBladesController _bladesRotation;

		[Token(Token = "0x4000FFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private InteractableTool _toolInteractingWithMe;

		[Token(Token = "0x6001237")]
		[Address(RVA = "0x11307D4", Offset = "0x11307D4", VA = "0x11307D4")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001238")]
		[Address(RVA = "0x113083C", Offset = "0x113083C", VA = "0x113083C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001239")]
		[Address(RVA = "0x11308F4", Offset = "0x11308F4", VA = "0x11308F4")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x600123A")]
		[Address(RVA = "0x11309F4", Offset = "0x11309F4", VA = "0x11309F4")]
		private void StartStopStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x600123B")]
		[Address(RVA = "0x1130A70", Offset = "0x1130A70", VA = "0x1130A70")]
		private void Update()
		{
		}

		[Token(Token = "0x600123C")]
		[Address(RVA = "0x1130B4C", Offset = "0x1130B4C", VA = "0x1130B4C")]
		public WindmillController()
		{
		}
	}
	[Token(Token = "0x2000234")]
	public enum EUiDisplayType
	{
		[Token(Token = "0x4000FFD")]
		EUDT_WorldGeoQuad,
		[Token(Token = "0x4000FFE")]
		EUDT_OverlayQuad,
		[Token(Token = "0x4000FFF")]
		EUDT_None,
		[Token(Token = "0x4001000")]
		EUDT_MaxDislayTypes
	}
	[Token(Token = "0x2000235")]
	public class OVROverlaySample : MonoBehaviour
	{
		[Token(Token = "0x200040E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6A86AC", Offset = "0x6A86AC")]
		private sealed class <WaitforOVROverlay>d__30 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400193A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400193B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400193C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public OVROverlaySample <>4__this;

			[Token(Token = "0x1700042B")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60018BE")]
				[Address(RVA = "0x112918C", Offset = "0x112918C", VA = "0x112918C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700042C")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60018C0")]
				[Address(RVA = "0x11291F4", Offset = "0x11291F4", VA = "0x11291F4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60018BB")]
			[Address(RVA = "0x1128808", Offset = "0x1128808", VA = "0x1128808")]
			[DebuggerHidden]
			public <WaitforOVROverlay>d__30(int <>1__state)
			{
			}

			[Token(Token = "0x60018BC")]
			[Address(RVA = "0x1128F40", Offset = "0x1128F40", VA = "0x1128F40", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60018BD")]
			[Address(RVA = "0x1128F44", Offset = "0x1128F44", VA = "0x1128F44", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60018BF")]
			[Address(RVA = "0x1129194", Offset = "0x1129194", VA = "0x1129194", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001001")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool inMenu;

		[Token(Token = "0x4001002")]
		private const string ovrOverlayID = "OVROverlayID";

		[Token(Token = "0x4001003")]
		private const string applicationID = "ApplicationID";

		[Token(Token = "0x4001004")]
		private const string noneID = "NoneID";

		[Token(Token = "0x4001005")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Toggle applicationRadioButton;

		[Token(Token = "0x4001006")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Toggle noneRadioButton;

		[Token(Token = "0x4001007")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6AB9D4", Offset = "0x6AB9D4")]
		public GameObject mainCamera;

		[Token(Token = "0x4001008")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public GameObject uiCamera;

		[Token(Token = "0x4001009")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public GameObject uiGeoParent;

		[Token(Token = "0x400100A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public GameObject worldspaceGeoParent;

		[Token(Token = "0x400100B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public OVROverlay cameraRenderOverlay;

		[Token(Token = "0x400100C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public OVROverlay renderingLabelOverlay;

		[Token(Token = "0x400100D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Texture applicationLabelTexture;

		[Token(Token = "0x400100E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Texture compositorLabelTexture;

		[Token(Token = "0x400100F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6ABA0C", Offset = "0x6ABA0C")]
		public GameObject prefabForLevelLoadSim;

		[Token(Token = "0x4001010")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public OVROverlay cubemapOverlay;

		[Token(Token = "0x4001011")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public OVROverlay loadingTextQuadOverlay;

		[Token(Token = "0x4001012")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public float distanceFromCamToLoadText;

		[Token(Token = "0x4001013")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		public float cubeSpawnRadius;

		[Token(Token = "0x4001014")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public float heightBetweenItems;

		[Token(Token = "0x4001015")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		public int numObjectsPerLevel;

		[Token(Token = "0x4001016")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public int numLevels;

		[Token(Token = "0x4001017")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		public int numLoopsTrigger;

		[Token(Token = "0x4001018")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private List<GameObject> spawnedCubes;

		[Token(Token = "0x600123D")]
		[Address(RVA = "0x1127B50", Offset = "0x1127B50", VA = "0x1127B50")]
		private void Start()
		{
		}

		[Token(Token = "0x600123E")]
		[Address(RVA = "0x1128330", Offset = "0x1128330", VA = "0x1128330")]
		private void Update()
		{
		}

		[Token(Token = "0x600123F")]
		[Address(RVA = "0x1128470", Offset = "0x1128470", VA = "0x1128470")]
		private void ActivateWorldGeo()
		{
		}

		[Token(Token = "0x6001240")]
		[Address(RVA = "0x1128598", Offset = "0x1128598", VA = "0x1128598")]
		private void ActivateOVROverlay()
		{
		}

		[Token(Token = "0x6001241")]
		[Address(RVA = "0x11286C0", Offset = "0x11286C0", VA = "0x11286C0")]
		private void ActivateNone()
		{
		}

		[Token(Token = "0x6001242")]
		[Address(RVA = "0x1128444", Offset = "0x1128444", VA = "0x1128444")]
		private void TriggerLoad()
		{
		}

		[Token(Token = "0x6001243")]
		[Address(RVA = "0x1128798", Offset = "0x1128798", VA = "0x1128798")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6B211C", Offset = "0x6B211C")]
		private IEnumerator WaitforOVROverlay()
		{
			return null;
		}

		[Token(Token = "0x6001244")]
		[Address(RVA = "0x1128834", Offset = "0x1128834", VA = "0x1128834")]
		private void TriggerUnload()
		{
		}

		[Token(Token = "0x6001245")]
		[Address(RVA = "0x1127EBC", Offset = "0x1127EBC", VA = "0x1127EBC")]
		private void CameraAndRenderTargetSetup()
		{
		}

		[Token(Token = "0x6001246")]
		[Address(RVA = "0x112895C", Offset = "0x112895C", VA = "0x112895C")]
		private void SimulateLevelLoad()
		{
		}

		[Token(Token = "0x6001247")]
		[Address(RVA = "0x1128868", Offset = "0x1128868", VA = "0x1128868")]
		private void ClearObjects()
		{
		}

		[Token(Token = "0x6001248")]
		[Address(RVA = "0x1128CF8", Offset = "0x1128CF8", VA = "0x1128CF8")]
		public void RadioPressed(string radioLabel, string group, Toggle t)
		{
		}

		[Token(Token = "0x6001249")]
		[Address(RVA = "0x1128DD4", Offset = "0x1128DD4", VA = "0x1128DD4")]
		public OVROverlaySample()
		{
		}

		[Token(Token = "0x600124A")]
		[Address(RVA = "0x1128E50", Offset = "0x1128E50", VA = "0x1128E50")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6B2180", Offset = "0x6B2180")]
		private void <Start>b__24_0(Toggle t)
		{
		}

		[Token(Token = "0x600124B")]
		[Address(RVA = "0x1128EA0", Offset = "0x1128EA0", VA = "0x1128EA0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6B2190", Offset = "0x6B2190")]
		private void <Start>b__24_1(Toggle t)
		{
		}

		[Token(Token = "0x600124C")]
		[Address(RVA = "0x1128EF0", Offset = "0x1128EF0", VA = "0x1128EF0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6B21A0", Offset = "0x6B21A0")]
		private void <Start>b__24_2(Toggle t)
		{
		}
	}
}
namespace OVRTouchSample
{
	[Token(Token = "0x2000236")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x6A7AAC", Offset = "0x6A7AAC")]
	public class Hand : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x200040F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6A86BC", Offset = "0x6A86BC")]
		private sealed class <>c
		{
			[Token(Token = "0x400193D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x400193E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<Collider, bool> <>9__28_0;

			[Token(Token = "0x60018C2")]
			[Address(RVA = "0x10E54EC", Offset = "0x10E54EC", VA = "0x10E54EC")]
			public <>c()
			{
			}

			[Token(Token = "0x60018C3")]
			[Address(RVA = "0x10E54F4", Offset = "0x10E54F4", VA = "0x10E54F4")]
			internal bool <Start>b__28_0(Collider childCollider)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4001019")]
		public const string ANIM_LAYER_NAME_POINT = "Point Layer";

		[Token(Token = "0x400101A")]
		public const string ANIM_LAYER_NAME_THUMB = "Thumb Layer";

		[Token(Token = "0x400101B")]
		public const string ANIM_PARAM_NAME_FLEX = "Flex";

		[Token(Token = "0x400101C")]
		public const string ANIM_PARAM_NAME_POSE = "Pose";

		[Token(Token = "0x400101D")]
		public const float THRESH_COLLISION_FLEX = 0.9f;

		[Token(Token = "0x400101E")]
		public const float INPUT_RATE_CHANGE = 20f;

		[Token(Token = "0x400101F")]
		public const float COLLIDER_SCALE_MIN = 0.01f;

		[Token(Token = "0x4001020")]
		public const float COLLIDER_SCALE_MAX = 1f;

		[Token(Token = "0x4001021")]
		public const float COLLIDER_SCALE_PER_SECOND = 1f;

		[Token(Token = "0x4001022")]
		public const float TRIGGER_DEBOUNCE_TIME = 0.05f;

		[Token(Token = "0x4001023")]
		public const float THUMB_DEBOUNCE_TIME = 0.15f;

		[Token(Token = "0x4001024")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private OVRInput.Controller m_controller;

		[Token(Token = "0x4001025")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Animator m_animator;

		[Token(Token = "0x4001026")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private HandPose m_defaultGrabPose;

		[Token(Token = "0x4001027")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Collider[] m_colliders;

		[Token(Token = "0x4001028")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool m_collisionEnabled;

		[Token(Token = "0x4001029")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private OVRGrabber m_grabber;

		[Token(Token = "0x400102A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private List<Renderer> m_showAfterInputFocusAcquired;

		[Token(Token = "0x400102B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private int m_animLayerIndexThumb;

		[Token(Token = "0x400102C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private int m_animLayerIndexPoint;

		[Token(Token = "0x400102D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private int m_animParamIndexFlex;

		[Token(Token = "0x400102E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private int m_animParamIndexPose;

		[Token(Token = "0x400102F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private bool m_isPointing;

		[Token(Token = "0x4001030")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
		private bool m_isGivingThumbsUp;

		[Token(Token = "0x4001031")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private float m_pointBlend;

		[Token(Token = "0x4001032")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private float m_thumbsUpBlend;

		[Token(Token = "0x4001033")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private bool m_restoreOnInputAcquired;

		[Token(Token = "0x4001034")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private float m_collisionScaleCurrent;

		[Token(Token = "0x600124D")]
		[Address(RVA = "0x10E4730", Offset = "0x10E4730", VA = "0x10E4730")]
		private void Awake()
		{
		}

		[Token(Token = "0x600124E")]
		[Address(RVA = "0x10E4788", Offset = "0x10E4788", VA = "0x10E4788")]
		private void Start()
		{
		}

		[Token(Token = "0x600124F")]
		[Address(RVA = "0x10E4B90", Offset = "0x10E4B90", VA = "0x10E4B90")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001250")]
		[Address(RVA = "0x10E4C5C", Offset = "0x10E4C5C", VA = "0x10E4C5C")]
		private void Update()
		{
		}

		[Token(Token = "0x6001251")]
		[Address(RVA = "0x10E4D68", Offset = "0x10E4D68", VA = "0x10E4D68")]
		private void UpdateCapTouchStates()
		{
		}

		[Token(Token = "0x6001252")]
		[Address(RVA = "0x10E50A0", Offset = "0x10E50A0", VA = "0x10E50A0")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6001253")]
		[Address(RVA = "0x10E5208", Offset = "0x10E5208", VA = "0x10E5208")]
		private void OnInputFocusLost()
		{
		}

		[Token(Token = "0x6001254")]
		[Address(RVA = "0x10E5354", Offset = "0x10E5354", VA = "0x10E5354")]
		private void OnInputFocusAcquired()
		{
		}

		[Token(Token = "0x6001255")]
		[Address(RVA = "0x10E4E04", Offset = "0x10E4E04", VA = "0x10E4E04")]
		private float InputValueRateChange(bool isDown, float value)
		{
			return default(float);
		}

		[Token(Token = "0x6001256")]
		[Address(RVA = "0x10E4EA4", Offset = "0x10E4EA4", VA = "0x10E4EA4")]
		private void UpdateAnimStates()
		{
		}

		[Token(Token = "0x6001257")]
		[Address(RVA = "0x10E49E4", Offset = "0x10E49E4", VA = "0x10E49E4")]
		private void CollisionEnable(bool enabled)
		{
		}

		[Token(Token = "0x6001258")]
		[Address(RVA = "0x10E5470", Offset = "0x10E5470", VA = "0x10E5470")]
		public Hand()
		{
		}
	}
	[Token(Token = "0x2000237")]
	public enum HandPoseId
	{
		[Token(Token = "0x4001036")]
		Default,
		[Token(Token = "0x4001037")]
		Generic,
		[Token(Token = "0x4001038")]
		PingPongBall,
		[Token(Token = "0x4001039")]
		Controller
	}
	[Token(Token = "0x2000238")]
	public class HandPose : MonoBehaviour
	{
		[Token(Token = "0x400103A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private bool m_allowPointing;

		[Token(Token = "0x400103B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		[SerializeField]
		private bool m_allowThumbsUp;

		[Token(Token = "0x400103C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private HandPoseId m_poseId;

		[Token(Token = "0x1700030D")]
		public bool AllowPointing
		{
			[Token(Token = "0x6001259")]
			[Address(RVA = "0x10E5520", Offset = "0x10E5520", VA = "0x10E5520")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700030E")]
		public bool AllowThumbsUp
		{
			[Token(Token = "0x600125A")]
			[Address(RVA = "0x10E5528", Offset = "0x10E5528", VA = "0x10E5528")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700030F")]
		public HandPoseId PoseId
		{
			[Token(Token = "0x600125B")]
			[Address(RVA = "0x10E5530", Offset = "0x10E5530", VA = "0x10E5530")]
			get
			{
				return default(HandPoseId);
			}
		}

		[Token(Token = "0x600125C")]
		[Address(RVA = "0x10E5538", Offset = "0x10E5538", VA = "0x10E5538")]
		public HandPose()
		{
		}
	}
	[Token(Token = "0x2000239")]
	public class TouchController : MonoBehaviour
	{
		[Token(Token = "0x400103D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private OVRInput.Controller m_controller;

		[Token(Token = "0x400103E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Animator m_animator;

		[Token(Token = "0x400103F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool m_restoreOnInputAcquired;

		[Token(Token = "0x600125D")]
		[Address(RVA = "0x10E5540", Offset = "0x10E5540", VA = "0x10E5540")]
		private void Update()
		{
		}

		[Token(Token = "0x600125E")]
		[Address(RVA = "0x10E57B4", Offset = "0x10E57B4", VA = "0x10E57B4")]
		private void OnInputFocusLost()
		{
		}

		[Token(Token = "0x600125F")]
		[Address(RVA = "0x10E5810", Offset = "0x10E5810", VA = "0x10E5810")]
		private void OnInputFocusAcquired()
		{
		}

		[Token(Token = "0x6001260")]
		[Address(RVA = "0x10E5854", Offset = "0x10E5854", VA = "0x10E5854")]
		public TouchController()
		{
		}
	}
}
namespace Oculus.Spatializer.Propagation
{
	[Token(Token = "0x200023A")]
	public enum FaceType : uint
	{
		[Token(Token = "0x4001041")]
		TRIANGLES,
		[Token(Token = "0x4001042")]
		QUADS
	}
	[Token(Token = "0x200023B")]
	public enum MaterialProperty : uint
	{
		[Token(Token = "0x4001044")]
		ABSORPTION,
		[Token(Token = "0x4001045")]
		TRANSMISSION,
		[Token(Token = "0x4001046")]
		SCATTERING
	}
	[Token(Token = "0x200023C")]
	public struct MeshGroup
	{
		[Token(Token = "0x4001047")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public UIntPtr indexOffset;

		[Token(Token = "0x4001048")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public UIntPtr faceCount;

		[Token(Token = "0x4001049")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public FaceType faceType;

		[Token(Token = "0x400104A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public IntPtr material;
	}
}
namespace Oculus.Avatar
{
	[Token(Token = "0x200023D")]
	public static class AvatarLogger
	{
		[Token(Token = "0x400104B")]
		public const string LogAvatar = "[Avatars] - ";

		[Token(Token = "0x400104C")]
		public const string Tab = "    ";

		[Token(Token = "0x6001261")]
		[Address(RVA = "0x10E5ED0", Offset = "0x10E5ED0", VA = "0x10E5ED0")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x6B21B0", Offset = "0x6B21B0")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x6B21B0", Offset = "0x6B21B0")]
		public static void Log(string logMsg)
		{
		}

		[Token(Token = "0x6001262")]
		[Address(RVA = "0x10E5F58", Offset = "0x10E5F58", VA = "0x10E5F58")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x6B2210", Offset = "0x6B2210")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x6B2210", Offset = "0x6B2210")]
		public static void Log(string logMsg, UnityEngine.Object context)
		{
		}

		[Token(Token = "0x6001263")]
		[Address(RVA = "0x10E5FF0", Offset = "0x10E5FF0", VA = "0x10E5FF0")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x6B2270", Offset = "0x6B2270")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x6B2270", Offset = "0x6B2270")]
		public static void LogWarning(string logMsg)
		{
		}

		[Token(Token = "0x6001264")]
		[Address(RVA = "0x10E6078", Offset = "0x10E6078", VA = "0x10E6078")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x6B22D0", Offset = "0x6B22D0")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x6B22D0", Offset = "0x6B22D0")]
		public static void LogError(string logMsg)
		{
		}

		[Token(Token = "0x6001265")]
		[Address(RVA = "0x10E6100", Offset = "0x10E6100", VA = "0x10E6100")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x6B2330", Offset = "0x6B2330")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x6B2330", Offset = "0x6B2330")]
		public static void LogError(string logMsg, UnityEngine.Object context)
		{
		}
	}
	[Token(Token = "0x200023E")]
	public class CAPI
	{
		[Token(Token = "0x2000410")]
		public delegate void LoggingDelegate(IntPtr str);

		[Token(Token = "0x2000411")]
		public enum Result
		{
			[Token(Token = "0x4001940")]
			Success = 0,
			[Token(Token = "0x4001941")]
			Failure = -1000,
			[Token(Token = "0x4001942")]
			Failure_InvalidParameter = -1001,
			[Token(Token = "0x4001943")]
			Failure_NotInitialized = -1002,
			[Token(Token = "0x4001944")]
			Failure_InvalidOperation = -1003,
			[Token(Token = "0x4001945")]
			Failure_Unsupported = -1004,
			[Token(Token = "0x4001946")]
			Failure_NotYetImplemented = -1005,
			[Token(Token = "0x4001947")]
			Failure_OperationFailed = -1006,
			[Token(Token = "0x4001948")]
			Failure_InsufficientSize = -1007
		}

		[Token(Token = "0x2000412")]
		private static class OVRP_1_30_0
		{
			[Token(Token = "0x4001949")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly Version version;

			[PreserveSig]
			[Token(Token = "0x60018C8")]
			[Address(RVA = "0x10ED938", Offset = "0x10ED938", VA = "0x10ED938")]
			public static extern Result ovrp_SendEvent2(string name, string param, string source);
		}

		[Token(Token = "0x400104D")]
		private const string LibFile = "ovravatarloader";

		[Token(Token = "0x400104E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static IntPtr nativeVisemeData;

		[Token(Token = "0x400104F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static IntPtr nativeGazeTargetsData;

		[Token(Token = "0x4001050")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static IntPtr nativeAvatarLightsData;

		[Token(Token = "0x4001051")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static IntPtr DebugLineCountData;

		[Token(Token = "0x4001052")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static float[] scratchBufferFloat;

		[Token(Token = "0x4001053")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static GameObject debugLineGo;

		[Token(Token = "0x4001054")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private static string SDKRuntimePrefix;

		[Token(Token = "0x4001055")]
		private const string ovrPluginDLL = "OVRPlugin";

		[Token(Token = "0x4001056")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private static Version ovrPluginVersion;

		[PreserveSig]
		[Token(Token = "0x6001266")]
		[Address(RVA = "0x10E6200", Offset = "0x10E6200", VA = "0x10E6200")]
		public static extern void ovrAvatar_InitializeAndroidUnity(string appID);

		[Token(Token = "0x6001267")]
		[Address(RVA = "0x10E6290", Offset = "0x10E6290", VA = "0x10E6290")]
		public static void Initialize()
		{
		}

		[Token(Token = "0x6001268")]
		[Address(RVA = "0x10E644C", Offset = "0x10E644C", VA = "0x10E644C")]
		public static void Shutdown()
		{
		}

		[PreserveSig]
		[Token(Token = "0x6001269")]
		[Address(RVA = "0x10E652C", Offset = "0x10E652C", VA = "0x10E652C")]
		public static extern void ovrAvatar_Shutdown();

		[PreserveSig]
		[Token(Token = "0x600126A")]
		[Address(RVA = "0x10E659C", Offset = "0x10E659C", VA = "0x10E659C")]
		public static extern IntPtr ovrAvatarMessage_Pop();

		[PreserveSig]
		[Token(Token = "0x600126B")]
		[Address(RVA = "0x10E6610", Offset = "0x10E6610", VA = "0x10E6610")]
		public static extern ovrAvatarMessageType ovrAvatarMessage_GetType(IntPtr msg);

		[Token(Token = "0x600126C")]
		[Address(RVA = "0x10E6690", Offset = "0x10E6690", VA = "0x10E6690")]
		public static ovrAvatarMessage_AvatarSpecification ovrAvatarMessage_GetAvatarSpecification(IntPtr msg)
		{
			return default(ovrAvatarMessage_AvatarSpecification);
		}

		[PreserveSig]
		[Token(Token = "0x600126D")]
		[Address(RVA = "0x10E67A8", Offset = "0x10E67A8", VA = "0x10E67A8")]
		private static extern IntPtr ovrAvatarMessage_GetAvatarSpecification_Native(IntPtr msg);

		[Token(Token = "0x600126E")]
		[Address(RVA = "0x10E6828", Offset = "0x10E6828", VA = "0x10E6828")]
		public static ovrAvatarMessage_AssetLoaded ovrAvatarMessage_GetAssetLoaded(IntPtr msg)
		{
			return default(ovrAvatarMessage_AssetLoaded);
		}

		[PreserveSig]
		[Token(Token = "0x600126F")]
		[Address(RVA = "0x10E6940", Offset = "0x10E6940", VA = "0x10E6940")]
		private static extern IntPtr ovrAvatarMessage_GetAssetLoaded_Native(IntPtr msg);

		[PreserveSig]
		[Token(Token = "0x6001270")]
		[Address(RVA = "0x10E69C0", Offset = "0x10E69C0", VA = "0x10E69C0")]
		public static extern void ovrAvatarMessage_Free(IntPtr msg);

		[PreserveSig]
		[Token(Token = "0x6001271")]
		[Address(RVA = "0x10E6A40", Offset = "0x10E6A40", VA = "0x10E6A40")]
		public static extern IntPtr ovrAvatarSpecificationRequest_Create(ulong userID);

		[PreserveSig]
		[Token(Token = "0x6001272")]
		[Address(RVA = "0x10E6AC0", Offset = "0x10E6AC0", VA = "0x10E6AC0")]
		public static extern void ovrAvatarSpecificationRequest_Destroy(IntPtr specificationRequest);

		[PreserveSig]
		[Token(Token = "0x6001273")]
		[Address(RVA = "0x10E6B40", Offset = "0x10E6B40", VA = "0x10E6B40")]
		public static extern void ovrAvatarSpecificationRequest_SetCombineMeshes(IntPtr specificationRequest, bool useCombinedMesh);

		[PreserveSig]
		[Token(Token = "0x6001274")]
		[Address(RVA = "0x10E6BD0", Offset = "0x10E6BD0", VA = "0x10E6BD0")]
		public static extern void ovrAvatarSpecificationRequest_SetLookAndFeelVersion(IntPtr specificationRequest, ovrAvatarLookAndFeelVersion version);

		[PreserveSig]
		[Token(Token = "0x6001275")]
		[Address(RVA = "0x10E6C60", Offset = "0x10E6C60", VA = "0x10E6C60")]
		public static extern void ovrAvatarSpecificationRequest_SetLevelOfDetail(IntPtr specificationRequest, ovrAvatarAssetLevelOfDetail lod);

		[PreserveSig]
		[Token(Token = "0x6001276")]
		[Address(RVA = "0x10E6CF0", Offset = "0x10E6CF0", VA = "0x10E6CF0")]
		public static extern void ovrAvatar_RequestAvatarSpecification(ulong userID);

		[PreserveSig]
		[Token(Token = "0x6001277")]
		[Address(RVA = "0x10E6D70", Offset = "0x10E6D70", VA = "0x10E6D70")]
		public static extern void ovrAvatar_RequestAvatarSpecificationFromSpecRequest(IntPtr specificationRequest);

		[PreserveSig]
		[Token(Token = "0x6001278")]
		[Address(RVA = "0x10E6DF0", Offset = "0x10E6DF0", VA = "0x10E6DF0")]
		public static extern void ovrAvatarSpecificationRequest_SetFallbackLookAndFeelVersion(IntPtr specificationRequest, ovrAvatarLookAndFeelVersion version);

		[PreserveSig]
		[Token(Token = "0x6001279")]
		[Address(RVA = "0x10E6E80", Offset = "0x10E6E80", VA = "0x10E6E80")]
		public static extern void ovrAvatarSpecificationRequest_SetExpressiveFlag(IntPtr specificationRequest, bool enable);

		[PreserveSig]
		[Token(Token = "0x600127A")]
		[Address(RVA = "0x10E6F10", Offset = "0x10E6F10", VA = "0x10E6F10")]
		public static extern IntPtr ovrAvatar_Create(IntPtr avatarSpecification, ovrAvatarCapabilities capabilities);

		[PreserveSig]
		[Token(Token = "0x600127B")]
		[Address(RVA = "0x10E6FA0", Offset = "0x10E6FA0", VA = "0x10E6FA0")]
		public static extern void ovrAvatar_Destroy(IntPtr avatar);

		[PreserveSig]
		[Token(Token = "0x600127C")]
		[Address(RVA = "0x10E7020", Offset = "0x10E7020", VA = "0x10E7020")]
		public static extern void ovrAvatarPose_UpdateBody(IntPtr avatar, ovrAvatarTransform headPose);

		[Token(Token = "0x600127D")]
		[Address(RVA = "0x10E70C0", Offset = "0x10E70C0", VA = "0x10E70C0")]
		public static void ovrAvatarPose_UpdateVoiceVisualization(IntPtr avatar, float[] pcmData)
		{
		}

		[PreserveSig]
		[Token(Token = "0x600127E")]
		[Address(RVA = "0x10E7140", Offset = "0x10E7140", VA = "0x10E7140")]
		private static extern void ovrAvatarPose_UpdateVoiceVisualization_Native(IntPtr avatar, uint pcmDataSize, [In] float[] pcmData);

		[PreserveSig]
		[Token(Token = "0x600127F")]
		[Address(RVA = "0x10E71E0", Offset = "0x10E71E0", VA = "0x10E71E0")]
		public static extern void ovrAvatarPose_UpdateHands(IntPtr avatar, ovrAvatarHandInputState inputStateLeft, ovrAvatarHandInputState inputStateRight);

		[PreserveSig]
		[Token(Token = "0x6001280")]
		[Address(RVA = "0x10E72A0", Offset = "0x10E72A0", VA = "0x10E72A0")]
		public static extern void ovrAvatarPose_UpdateHandsWithType(IntPtr avatar, ovrAvatarHandInputState inputStateLeft, ovrAvatarHandInputState inputStateRight, ovrAvatarControllerType type);

		[PreserveSig]
		[Token(Token = "0x6001281")]
		[Address(RVA = "0x10E7370", Offset = "0x10E7370", VA = "0x10E7370")]
		public static extern void ovrAvatarPose_Finalize(IntPtr avatar, float elapsedSeconds);

		[PreserveSig]
		[Token(Token = "0x6001282")]
		[Address(RVA = "0x10E7400", Offset = "0x10E7400", VA = "0x10E7400")]
		public static extern void ovrAvatar_SetLeftControllerVisibility(IntPtr avatar, bool show);

		[PreserveSig]
		[Token(Token = "0x6001283")]
		[Address(RVA = "0x10E7490", Offset = "0x10E7490", VA = "0x10E7490")]
		public static extern void ovrAvatar_SetRightControllerVisibility(IntPtr avatar, bool show);

		[PreserveSig]
		[Token(Token = "0x6001284")]
		[Address(RVA = "0x10E7520", Offset = "0x10E7520", VA = "0x10E7520")]
		public static extern void ovrAvatar_SetLeftHandVisibility(IntPtr avatar, bool show);

		[PreserveSig]
		[Token(Token = "0x6001285")]
		[Address(RVA = "0x10E75B0", Offset = "0x10E75B0", VA = "0x10E75B0")]
		public static extern void ovrAvatar_SetRightHandVisibility(IntPtr avatar, bool show);

		[PreserveSig]
		[Token(Token = "0x6001286")]
		[Address(RVA = "0x10E7640", Offset = "0x10E7640", VA = "0x10E7640")]
		public static extern uint ovrAvatarComponent_Count(IntPtr avatar);

		[Token(Token = "0x6001287")]
		[Address(RVA = "0x10E76C0", Offset = "0x10E76C0", VA = "0x10E76C0")]
		public static void ovrAvatarComponent_Get(IntPtr avatar, uint index, bool includeName, ref ovrAvatarComponent component)
		{
		}

		[Token(Token = "0x6001288")]
		[Address(RVA = "0x10E77E0", Offset = "0x10E77E0", VA = "0x10E77E0")]
		public static void ovrAvatarComponent_Get(IntPtr componentPtr, bool includeName, ref ovrAvatarComponent component)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6001289")]
		[Address(RVA = "0x10E7750", Offset = "0x10E7750", VA = "0x10E7750")]
		public static extern IntPtr ovrAvatarComponent_Get_Native(IntPtr avatar, uint index);

		[Token(Token = "0x600128A")]
		[Address(RVA = "0x10E79D4", Offset = "0x10E79D4", VA = "0x10E79D4")]
		public static bool ovrAvatarPose_GetBaseComponent(IntPtr avatar, ref ovrAvatarBaseComponent component)
		{
			return default(bool);
		}

		[PreserveSig]
		[Token(Token = "0x600128B")]
		[Address(RVA = "0x10E7B0C", Offset = "0x10E7B0C", VA = "0x10E7B0C")]
		private static extern IntPtr ovrAvatarPose_GetBaseComponent_Native(IntPtr avatar);

		[Token(Token = "0x600128C")]
		public static IntPtr MarshalRenderComponent<T>(IntPtr ptr) where T : struct
		{
			return default(IntPtr);
		}

		[Token(Token = "0x600128D")]
		[Address(RVA = "0x10E7B8C", Offset = "0x10E7B8C", VA = "0x10E7B8C")]
		public static bool ovrAvatarPose_GetBodyComponent(IntPtr avatar, ref ovrAvatarBodyComponent component)
		{
			return default(bool);
		}

		[PreserveSig]
		[Token(Token = "0x600128E")]
		[Address(RVA = "0x10E7DFC", Offset = "0x10E7DFC", VA = "0x10E7DFC")]
		private static extern IntPtr ovrAvatarPose_GetBodyComponent_Native(IntPtr avatar);

		[Token(Token = "0x600128F")]
		[Address(RVA = "0x10E7E7C", Offset = "0x10E7E7C", VA = "0x10E7E7C")]
		public static bool ovrAvatarPose_GetLeftControllerComponent(IntPtr avatar, ref ovrAvatarControllerComponent component)
		{
			return default(bool);
		}

		[PreserveSig]
		[Token(Token = "0x6001290")]
		[Address(RVA = "0x10E7FB4", Offset = "0x10E7FB4", VA = "0x10E7FB4")]
		private static extern IntPtr ovrAvatarPose_GetLeftControllerComponent_Native(IntPtr avatar);

		[Token(Token = "0x6001291")]
		[Address(RVA = "0x10E8034", Offset = "0x10E8034", VA = "0x10E8034")]
		public static bool ovrAvatarPose_GetRightControllerComponent(IntPtr avatar, ref ovrAvatarControllerComponent component)
		{
			return default(bool);
		}

		[PreserveSig]
		[Token(Token = "0x6001292")]
		[Address(RVA = "0x10E816C", Offset = "0x10E816C", VA = "0x10E816C")]
		private static extern IntPtr ovrAvatarPose_GetRightControllerComponent_Native(IntPtr avatar);

		[Token(Token = "0x6001293")]
		[Address(RVA = "0x10E81EC", Offset = "0x10E81EC", VA = "0x10E81EC")]
		public static bool ovrAvatarPose_GetLeftHandComponent(IntPtr avatar, ref ovrAvatarHandComponent component)
		{
			return default(bool);
		}

		[PreserveSig]
		[Token(Token = "0x6001294")]
		[Address(RVA = "0x10E8324", Offset = "0x10E8324", VA = "0x10E8324")]
		private static extern IntPtr ovrAvatarPose_GetLeftHandComponent_Native(IntPtr avatar);

		[Token(Token = "0x6001295")]
		[Address(RVA = "0x10E83A4", Offset = "0x10E83A4", VA = "0x10E83A4")]
		public static bool ovrAvatarPose_GetRightHandComponent(IntPtr avatar, ref ovrAvatarHandComponent component)
		{
			return default(bool);
		}

		[PreserveSig]
		[Token(Token = "0x6001296")]
		[Address(RVA = "0x10E84DC", Offset = "0x10E84DC", VA = "0x10E84DC")]
		private static extern IntPtr ovrAvatarPose_GetRightHandComponent_Native(IntPtr avatar);

		[PreserveSig]
		[Token(Token = "0x6001297")]
		[Address(RVA = "0x10E855C", Offset = "0x10E855C", VA = "0x10E855C")]
		public static extern void ovrAvatarAsset_BeginLoading(ulong assetID);

		[PreserveSig]
		[Token(Token = "0x6001298")]
		[Address(RVA = "0x10E85DC", Offset = "0x10E85DC", VA = "0x10E85DC")]
		public static extern bool ovrAvatarAsset_BeginLoadingLOD(ulong assetId, ovrAvatarAssetLevelOfDetail lod);

		[PreserveSig]
		[Token(Token = "0x6001299")]
		[Address(RVA = "0x10E8674", Offset = "0x10E8674", VA = "0x10E8674")]
		public static extern ovrAvatarAssetType ovrAvatarAsset_GetType(IntPtr assetHandle);

		[Token(Token = "0x600129A")]
		[Address(RVA = "0x10E86F4", Offset = "0x10E86F4", VA = "0x10E86F4")]
		public static ovrAvatarMeshAssetData ovrAvatarAsset_GetMeshData(IntPtr assetPtr)
		{
			return default(ovrAvatarMeshAssetData);
		}

		[Token(Token = "0x600129B")]
		[Address(RVA = "0x10E88A0", Offset = "0x10E88A0", VA = "0x10E88A0")]
		public static ovrAvatarMeshAssetDataV2 ovrAvatarAsset_GetCombinedMeshData(IntPtr assetPtr)
		{
			return default(ovrAvatarMeshAssetDataV2);
		}

		[PreserveSig]
		[Token(Token = "0x600129C")]
		[Address(RVA = "0x10E89CC", Offset = "0x10E89CC", VA = "0x10E89CC")]
		private static extern IntPtr ovrAvatarAsset_GetCombinedMeshData_Native(IntPtr assetPtr);

		[PreserveSig]
		[Token(Token = "0x600129D")]
		[Address(RVA = "0x10E8820", Offset = "0x10E8820", VA = "0x10E8820")]
		private static extern IntPtr ovrAvatarAsset_GetMeshData_Native(IntPtr assetPtr);

		[PreserveSig]
		[Token(Token = "0x600129E")]
		[Address(RVA = "0x10E8A4C", Offset = "0x10E8A4C", VA = "0x10E8A4C")]
		public static extern uint ovrAvatarAsset_GetMeshBlendShapeCount(IntPtr assetPtr);

		[PreserveSig]
		[Token(Token = "0x600129F")]
		[Address(RVA = "0x10E8ACC", Offset = "0x10E8ACC", VA = "0x10E8ACC")]
		public static extern IntPtr ovrAvatarAsset_GetMeshBlendShapeName(IntPtr assetPtr, uint index);

		[PreserveSig]
		[Token(Token = "0x60012A0")]
		[Address(RVA = "0x10E8B5C", Offset = "0x10E8B5C", VA = "0x10E8B5C")]
		public static extern uint ovrAvatarAsset_GetSubmeshCount(IntPtr assetPtr);

		[PreserveSig]
		[Token(Token = "0x60012A1")]
		[Address(RVA = "0x10E8BDC", Offset = "0x10E8BDC", VA = "0x10E8BDC")]
		public static extern uint ovrAvatarAsset_GetSubmeshLastIndex(IntPtr assetPtr, uint index);

		[PreserveSig]
		[Token(Token = "0x60012A2")]
		[Address(RVA = "0x10E8C6C", Offset = "0x10E8C6C", VA = "0x10E8C6C")]
		public static extern IntPtr ovrAvatarAsset_GetMeshBlendShapeVertices(IntPtr assetPtr);

		[PreserveSig]
		[Token(Token = "0x60012A3")]
		[Address(RVA = "0x10E8CEC", Offset = "0x10E8CEC", VA = "0x10E8CEC")]
		public static extern IntPtr ovrAvatarAsset_GetAvatar(IntPtr assetHandle);

		[Token(Token = "0x60012A4")]
		[Address(RVA = "0x10E8D6C", Offset = "0x10E8D6C", VA = "0x10E8D6C")]
		public static ulong[] ovrAvatarAsset_GetCombinedMeshIDs(IntPtr assetHandle)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x60012A5")]
		[Address(RVA = "0x10E8FA8", Offset = "0x10E8FA8", VA = "0x10E8FA8")]
		public static extern IntPtr ovrAvatarAsset_GetCombinedMeshIDs_Native(IntPtr assetHandle, IntPtr count);

		[Token(Token = "0x60012A6")]
		[Address(RVA = "0x10E9038", Offset = "0x10E9038", VA = "0x10E9038")]
		public static void ovrAvatar_GetCombinedMeshAlphaData(IntPtr avatar, ref ulong textureID, ref Vector4 offset)
		{
		}

		[PreserveSig]
		[Token(Token = "0x60012A7")]
		[Address(RVA = "0x10E9224", Offset = "0x10E9224", VA = "0x10E9224")]
		public static extern IntPtr ovrAvatar_GetCombinedMeshAlphaData_Native(IntPtr avatar, IntPtr textureIDPtr, IntPtr offsetPtr);

		[Token(Token = "0x60012A8")]
		[Address(RVA = "0x10E92BC", Offset = "0x10E92BC", VA = "0x10E92BC")]
		public static ovrAvatarTextureAssetData ovrAvatarAsset_GetTextureData(IntPtr assetPtr)
		{
			return default(ovrAvatarTextureAssetData);
		}

		[PreserveSig]
		[Token(Token = "0x60012A9")]
		[Address(RVA = "0x10E93E0", Offset = "0x10E93E0", VA = "0x10E93E0")]
		private static extern IntPtr ovrAvatarAsset_GetTextureData_Native(IntPtr assetPtr);

		[PreserveSig]
		[Token(Token = "0x60012AA")]
		[Address(RVA = "0x10E9460", Offset = "0x10E9460", VA = "0x10E9460")]
		private static extern IntPtr ovrAvatarAsset_GetMaterialData_Native(IntPtr assetPtr);

		[Token(Token = "0x60012AB")]
		[Address(RVA = "0x10E94E0", Offset = "0x10E94E0", VA = "0x10E94E0")]
		public static ovrAvatarMaterialState ovrAvatarAsset_GetMaterialState(IntPtr assetPtr)
		{
			return default(ovrAvatarMaterialState);
		}

		[PreserveSig]
		[Token(Token = "0x60012AC")]
		[Address(RVA = "0x10E9608", Offset = "0x10E9608", VA = "0x10E9608")]
		public static extern ovrAvatarRenderPartType ovrAvatarRenderPart_GetType(IntPtr renderPart);

		[Token(Token = "0x60012AD")]
		[Address(RVA = "0x10E9688", Offset = "0x10E9688", VA = "0x10E9688")]
		public static ovrAvatarRenderPart_SkinnedMeshRender ovrAvatarRenderPart_GetSkinnedMeshRender(IntPtr renderPart)
		{
			return default(ovrAvatarRenderPart_SkinnedMeshRender);
		}

		[PreserveSig]
		[Token(Token = "0x60012AE")]
		[Address(RVA = "0x10E97B0", Offset = "0x10E97B0", VA = "0x10E97B0")]
		private static extern IntPtr ovrAvatarRenderPart_GetSkinnedMeshRender_Native(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x60012AF")]
		[Address(RVA = "0x10E9830", Offset = "0x10E9830", VA = "0x10E9830")]
		public static extern ovrAvatarTransform ovrAvatarSkinnedMeshRender_GetTransform(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x60012B0")]
		[Address(RVA = "0x10E98C0", Offset = "0x10E98C0", VA = "0x10E98C0")]
		public static extern ovrAvatarTransform ovrAvatarSkinnedMeshRenderPBS_GetTransform(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x60012B1")]
		[Address(RVA = "0x10E9950", Offset = "0x10E9950", VA = "0x10E9950")]
		public static extern ovrAvatarTransform ovrAvatarSkinnedMeshRenderPBSV2_GetTransform(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x60012B2")]
		[Address(RVA = "0x10E99E0", Offset = "0x10E99E0", VA = "0x10E99E0")]
		public static extern ovrAvatarVisibilityFlags ovrAvatarSkinnedMeshRender_GetVisibilityMask(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x60012B3")]
		[Address(RVA = "0x10E9A60", Offset = "0x10E9A60", VA = "0x10E9A60")]
		public static extern bool ovrAvatarSkinnedMeshRender_MaterialStateChanged(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x60012B4")]
		[Address(RVA = "0x10E9AE8", Offset = "0x10E9AE8", VA = "0x10E9AE8")]
		public static extern bool ovrAvatarSkinnedMeshRenderPBSV2_MaterialStateChanged(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x60012B5")]
		[Address(RVA = "0x10E9B70", Offset = "0x10E9B70", VA = "0x10E9B70")]
		public static extern ovrAvatarVisibilityFlags ovrAvatarSkinnedMeshRenderPBS_GetVisibilityMask(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x60012B6")]
		[Address(RVA = "0x10E9BF0", Offset = "0x10E9BF0", VA = "0x10E9BF0")]
		public static extern ovrAvatarVisibilityFlags ovrAvatarSkinnedMeshRenderPBSV2_GetVisibilityMask(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x60012B7")]
		[Address(RVA = "0x10E9C70", Offset = "0x10E9C70", VA = "0x10E9C70")]
		public static extern ovrAvatarMaterialState ovrAvatarSkinnedMeshRender_GetMaterialState(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x60012B8")]
		[Address(RVA = "0x10E9D24", Offset = "0x10E9D24", VA = "0x10E9D24")]
		public static extern ovrAvatarPBSMaterialState ovrAvatarSkinnedMeshRenderPBSV2_GetPBSMaterialState(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x60012B9")]
		[Address(RVA = "0x10E9DB4", Offset = "0x10E9DB4", VA = "0x10E9DB4")]
		public static extern ovrAvatarExpressiveParameters ovrAvatar_GetExpressiveParameters(IntPtr avatar);

		[PreserveSig]
		[Token(Token = "0x60012BA")]
		[Address(RVA = "0x10E9E44", Offset = "0x10E9E44", VA = "0x10E9E44")]
		public static extern ulong ovrAvatarSkinnedMeshRender_GetDirtyJoints(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x60012BB")]
		[Address(RVA = "0x10E9EC4", Offset = "0x10E9EC4", VA = "0x10E9EC4")]
		public static extern ulong ovrAvatarSkinnedMeshRenderPBS_GetDirtyJoints(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x60012BC")]
		[Address(RVA = "0x10E9F44", Offset = "0x10E9F44", VA = "0x10E9F44")]
		public static extern ulong ovrAvatarSkinnedMeshRenderPBSV2_GetDirtyJoints(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x60012BD")]
		[Address(RVA = "0x10E9FC4", Offset = "0x10E9FC4", VA = "0x10E9FC4")]
		public static extern ovrAvatarTransform ovrAvatarSkinnedMeshRender_GetJointTransform(IntPtr renderPart, uint jointIndex);

		[PreserveSig]
		[Token(Token = "0x60012BE")]
		[Address(RVA = "0x10EA05C", Offset = "0x10EA05C", VA = "0x10EA05C")]
		public static extern void ovrAvatar_SetActionUnitOnsetSpeed(IntPtr avatar, float onsetSpeed);

		[PreserveSig]
		[Token(Token = "0x60012BF")]
		[Address(RVA = "0x10EA0EC", Offset = "0x10EA0EC", VA = "0x10EA0EC")]
		public static extern void ovrAvatar_SetActionUnitFalloffSpeed(IntPtr avatar, float falloffSpeed);

		[PreserveSig]
		[Token(Token = "0x60012C0")]
		[Address(RVA = "0x10EA17C", Offset = "0x10EA17C", VA = "0x10EA17C")]
		public static extern void ovrAvatar_SetVisemeMultiplier(IntPtr avatar, float visemeMultiplier);

		[PreserveSig]
		[Token(Token = "0x60012C1")]
		[Address(RVA = "0x10EA20C", Offset = "0x10EA20C", VA = "0x10EA20C")]
		public static extern ovrAvatarTransform ovrAvatarSkinnedMeshRenderPBS_GetJointTransform(IntPtr renderPart, uint jointIndex);

		[PreserveSig]
		[Token(Token = "0x60012C2")]
		[Address(RVA = "0x10EA2A4", Offset = "0x10EA2A4", VA = "0x10EA2A4")]
		public static extern ovrAvatarTransform ovrAvatarSkinnedMeshRenderPBSV2_GetJointTransform(IntPtr renderPart, uint jointIndex);

		[PreserveSig]
		[Token(Token = "0x60012C3")]
		[Address(RVA = "0x10EA33C", Offset = "0x10EA33C", VA = "0x10EA33C")]
		public static extern ulong ovrAvatarSkinnedMeshRenderPBS_GetAlbedoTextureAssetID(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x60012C4")]
		[Address(RVA = "0x10EA3BC", Offset = "0x10EA3BC", VA = "0x10EA3BC")]
		public static extern ulong ovrAvatarSkinnedMeshRenderPBS_GetSurfaceTextureAssetID(IntPtr renderPart);

		[Token(Token = "0x60012C5")]
		[Address(RVA = "0x10EA43C", Offset = "0x10EA43C", VA = "0x10EA43C")]
		public static ovrAvatarRenderPart_SkinnedMeshRenderPBS ovrAvatarRenderPart_GetSkinnedMeshRenderPBS(IntPtr renderPart)
		{
			return default(ovrAvatarRenderPart_SkinnedMeshRenderPBS);
		}

		[PreserveSig]
		[Token(Token = "0x60012C6")]
		[Address(RVA = "0x10EA564", Offset = "0x10EA564", VA = "0x10EA564")]
		private static extern IntPtr ovrAvatarRenderPart_GetSkinnedMeshRenderPBS_Native(IntPtr renderPart);

		[Token(Token = "0x60012C7")]
		[Address(RVA = "0x10EA5E4", Offset = "0x10EA5E4", VA = "0x10EA5E4")]
		public static ovrAvatarRenderPart_SkinnedMeshRenderPBS_V2 ovrAvatarRenderPart_GetSkinnedMeshRenderPBSV2(IntPtr renderPart)
		{
			return default(ovrAvatarRenderPart_SkinnedMeshRenderPBS_V2);
		}

		[PreserveSig]
		[Token(Token = "0x60012C8")]
		[Address(RVA = "0x10EA70C", Offset = "0x10EA70C", VA = "0x10EA70C")]
		private static extern IntPtr ovrAvatarRenderPart_GetSkinnedMeshRenderPBSV2_Native(IntPtr renderPart);

		[Token(Token = "0x60012C9")]
		[Address(RVA = "0x10EA78C", Offset = "0x10EA78C", VA = "0x10EA78C")]
		public static void ovrAvatarSkinnedMeshRender_GetBlendShapeParams(IntPtr renderPart, ref ovrAvatarBlendShapeParams blendParams)
		{
		}

		[PreserveSig]
		[Token(Token = "0x60012CA")]
		[Address(RVA = "0x10EA8B4", Offset = "0x10EA8B4", VA = "0x10EA8B4")]
		private static extern IntPtr ovrAvatarSkinnedMeshRender_GetBlendShapeParams_Native(IntPtr renderPart);

		[Token(Token = "0x60012CB")]
		[Address(RVA = "0x10EA934", Offset = "0x10EA934", VA = "0x10EA934")]
		public static ovrAvatarRenderPart_ProjectorRender ovrAvatarRenderPart_GetProjectorRender(IntPtr renderPart)
		{
			return default(ovrAvatarRenderPart_ProjectorRender);
		}

		[Token(Token = "0x60012CC")]
		[Address(RVA = "0x10EAADC", Offset = "0x10EAADC", VA = "0x10EAADC")]
		public static ovrAvatarPBSMaterialState[] ovrAvatar_GetBodyPBSMaterialStates(IntPtr renderPart)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x60012CD")]
		[Address(RVA = "0x10EAD78", Offset = "0x10EAD78", VA = "0x10EAD78")]
		private static extern IntPtr ovrAvatar_GetBodyPBSMaterialStates_Native(IntPtr avatar, IntPtr count);

		[PreserveSig]
		[Token(Token = "0x60012CE")]
		[Address(RVA = "0x10EAA5C", Offset = "0x10EAA5C", VA = "0x10EAA5C")]
		private static extern IntPtr ovrAvatarRenderPart_GetProjectorRender_Native(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x60012CF")]
		[Address(RVA = "0x10EAE08", Offset = "0x10EAE08", VA = "0x10EAE08")]
		public static extern uint ovrAvatar_GetReferencedAssetCount(IntPtr avatar);

		[PreserveSig]
		[Token(Token = "0x60012D0")]
		[Address(RVA = "0x10EAE88", Offset = "0x10EAE88", VA = "0x10EAE88")]
		public static extern ulong ovrAvatar_GetReferencedAsset(IntPtr avatar, uint index);

		[PreserveSig]
		[Token(Token = "0x60012D1")]
		[Address(RVA = "0x10EAF18", Offset = "0x10EAF18", VA = "0x10EAF18")]
		public static extern void ovrAvatar_SetLeftHandGesture(IntPtr avatar, ovrAvatarHandGesture gesture);

		[PreserveSig]
		[Token(Token = "0x60012D2")]
		[Address(RVA = "0x10EAFA8", Offset = "0x10EAFA8", VA = "0x10EAFA8")]
		public static extern void ovrAvatar_SetRightHandGesture(IntPtr avatar, ovrAvatarHandGesture gesture);

		[PreserveSig]
		[Token(Token = "0x60012D3")]
		[Address(RVA = "0x10EB038", Offset = "0x10EB038", VA = "0x10EB038")]
		public static extern void ovrAvatar_SetLeftHandCustomGesture(IntPtr avatar, uint jointCount, [In] ovrAvatarTransform[] customJointTransforms);

		[PreserveSig]
		[Token(Token = "0x60012D4")]
		[Address(RVA = "0x10EB0D8", Offset = "0x10EB0D8", VA = "0x10EB0D8")]
		public static extern void ovrAvatar_SetRightHandCustomGesture(IntPtr avatar, uint jointCount, [In] ovrAvatarTransform[] customJointTransforms);

		[PreserveSig]
		[Token(Token = "0x60012D5")]
		[Address(RVA = "0x10EB178", Offset = "0x10EB178", VA = "0x10EB178")]
		public static extern void ovrAvatar_UpdatePoseFromPacket(IntPtr avatar, IntPtr packet, float secondsFromStart);

		[PreserveSig]
		[Token(Token = "0x60012D6")]
		[Address(RVA = "0x10EB218", Offset = "0x10EB218", VA = "0x10EB218")]
		public static extern void ovrAvatarPacket_BeginRecording(IntPtr avatar);

		[PreserveSig]
		[Token(Token = "0x60012D7")]
		[Address(RVA = "0x10EB298", Offset = "0x10EB298", VA = "0x10EB298")]
		public static extern IntPtr ovrAvatarPacket_EndRecording(IntPtr avatar);

		[PreserveSig]
		[Token(Token = "0x60012D8")]
		[Address(RVA = "0x10EB318", Offset = "0x10EB318", VA = "0x10EB318")]
		public static extern uint ovrAvatarPacket_GetSize(IntPtr packet);

		[PreserveSig]
		[Token(Token = "0x60012D9")]
		[Address(RVA = "0x10EB398", Offset = "0x10EB398", VA = "0x10EB398")]
		public static extern float ovrAvatarPacket_GetDurationSeconds(IntPtr packet);

		[PreserveSig]
		[Token(Token = "0x60012DA")]
		[Address(RVA = "0x10EB418", Offset = "0x10EB418", VA = "0x10EB418")]
		public static extern void ovrAvatarPacket_Free(IntPtr packet);

		[PreserveSig]
		[Token(Token = "0x60012DB")]
		[Address(RVA = "0x10EB498", Offset = "0x10EB498", VA = "0x10EB498")]
		public static extern bool ovrAvatarPacket_Write(IntPtr packet, uint bufferSize, [Out] byte[] buffer);

		[PreserveSig]
		[Token(Token = "0x60012DC")]
		[Address(RVA = "0x10EB5C0", Offset = "0x10EB5C0", VA = "0x10EB5C0")]
		public static extern IntPtr ovrAvatarPacket_Read(uint bufferSize, [In] byte[] buffer);

		[PreserveSig]
		[Token(Token = "0x60012DD")]
		[Address(RVA = "0x10EB658", Offset = "0x10EB658", VA = "0x10EB658")]
		private static extern void ovrAvatar_SetInternalForceASTCTextures(bool value);

		[Token(Token = "0x60012DE")]
		[Address(RVA = "0x10EB6D8", Offset = "0x10EB6D8", VA = "0x10EB6D8")]
		public static void ovrAvatar_SetForceASTCTextures(bool value)
		{
		}

		[Token(Token = "0x60012DF")]
		[Address(RVA = "0x10EB73C", Offset = "0x10EB73C", VA = "0x10EB73C")]
		public static void ovrAvatar_OverrideExpressiveLogic(IntPtr avatar, ovrAvatarBlendShapeParams blendParams)
		{
		}

		[PreserveSig]
		[Token(Token = "0x60012E0")]
		[Address(RVA = "0x10EB858", Offset = "0x10EB858", VA = "0x10EB858")]
		private static extern void ovrAvatar_OverrideExpressiveLogic_Native(IntPtr avatar, IntPtr state);

		[Token(Token = "0x60012E1")]
		[Address(RVA = "0x10EB8E8", Offset = "0x10EB8E8", VA = "0x10EB8E8")]
		public static void ovrAvatar_SetVisemes(IntPtr avatar, ovrAvatarVisemes visemes)
		{
		}

		[PreserveSig]
		[Token(Token = "0x60012E2")]
		[Address(RVA = "0x10EBA2C", Offset = "0x10EBA2C", VA = "0x10EBA2C")]
		private static extern void ovrAvatar_SetVisemes_Native(IntPtr avatar, IntPtr visemes);

		[PreserveSig]
		[Token(Token = "0x60012E3")]
		[Address(RVA = "0x10EBABC", Offset = "0x10EBABC", VA = "0x10EBABC")]
		public static extern void ovrAvatar_UpdateWorldTransform(IntPtr avatar, ovrAvatarTransform transform);

		[Token(Token = "0x60012E4")]
		[Address(RVA = "0x10EBB5C", Offset = "0x10EBB5C", VA = "0x10EBB5C")]
		public static void ovrAvatar_UpdateGazeTargets(ovrAvatarGazeTargets targets)
		{
		}

		[PreserveSig]
		[Token(Token = "0x60012E5")]
		[Address(RVA = "0x10EBEF4", Offset = "0x10EBEF4", VA = "0x10EBEF4")]
		private static extern void ovrAvatar_UpdateGazeTargets_Native(IntPtr targets);

		[PreserveSig]
		[Token(Token = "0x60012E6")]
		[Address(RVA = "0x10EBF74", Offset = "0x10EBF74", VA = "0x10EBF74")]
		public static extern void ovrAvatar_RemoveGazeTargets(uint targetCount, uint[] ids);

		[Token(Token = "0x60012E7")]
		[Address(RVA = "0x10EC00C", Offset = "0x10EC00C", VA = "0x10EC00C")]
		public static void ovrAvatar_UpdateLights(ovrAvatarLights lights)
		{
		}

		[PreserveSig]
		[Token(Token = "0x60012E8")]
		[Address(RVA = "0x10EC7D4", Offset = "0x10EC7D4", VA = "0x10EC7D4")]
		private static extern void ovrAvatar_UpdateLights_Native(IntPtr lights);

		[PreserveSig]
		[Token(Token = "0x60012E9")]
		[Address(RVA = "0x10EC854", Offset = "0x10EC854", VA = "0x10EC854")]
		public static extern void ovrAvatar_RemoveLights(uint lightCount, uint[] ids);

		[Token(Token = "0x60012EA")]
		[Address(RVA = "0x10E6198", Offset = "0x10E6198", VA = "0x10E6198")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x6B2390", Offset = "0x6B2390")]
		public static void LoggingCallback(IntPtr str)
		{
		}

		[PreserveSig]
		[Token(Token = "0x60012EB")]
		[Address(RVA = "0x10EC8EC", Offset = "0x10EC8EC", VA = "0x10EC8EC")]
		public static extern void ovrAvatar_RegisterLoggingCallback(LoggingDelegate callback);

		[PreserveSig]
		[Token(Token = "0x60012EC")]
		[Address(RVA = "0x10EC970", Offset = "0x10EC970", VA = "0x10EC970")]
		public static extern void ovrAvatar_SetLoggingLevel(ovrAvatarLogLevel level);

		[PreserveSig]
		[Token(Token = "0x60012ED")]
		[Address(RVA = "0x10EC9F0", Offset = "0x10EC9F0", VA = "0x10EC9F0")]
		public static extern IntPtr ovrAvatar_GetDebugTransforms_Native(IntPtr count);

		[PreserveSig]
		[Token(Token = "0x60012EE")]
		[Address(RVA = "0x10ECA70", Offset = "0x10ECA70", VA = "0x10ECA70")]
		public static extern IntPtr ovrAvatar_GetDebugLines_Native(IntPtr count);

		[Token(Token = "0x60012EF")]
		[Address(RVA = "0x10ECAF0", Offset = "0x10ECAF0", VA = "0x10ECAF0")]
		public static void ovrAvatar_DrawDebugLines()
		{
		}

		[PreserveSig]
		[Token(Token = "0x60012F0")]
		[Address(RVA = "0x10ED4D0", Offset = "0x10ED4D0", VA = "0x10ED4D0")]
		public static extern void ovrAvatar_SetDebugDrawContext(uint context);

		[Token(Token = "0x60012F1")]
		[Address(RVA = "0x10ED550", Offset = "0x10ED550", VA = "0x10ED550")]
		public static bool SendEvent(string name, string param = "", string source = "")
		{
			return default(bool);
		}

		[PreserveSig]
		[Token(Token = "0x60012F2")]
		[Address(RVA = "0x10EDA14", Offset = "0x10EDA14", VA = "0x10EDA14")]
		private static extern IntPtr _ovrp_GetVersion();

		[Token(Token = "0x60012F3")]
		[Address(RVA = "0x10ED8A8", Offset = "0x10ED8A8", VA = "0x10ED8A8")]
		public static string ovrp_GetVersion()
		{
			return null;
		}

		[Token(Token = "0x60012F4")]
		[Address(RVA = "0x10EDA88", Offset = "0x10EDA88", VA = "0x10EDA88")]
		public CAPI()
		{
		}
	}
}
namespace OVR
{
	[Token(Token = "0x200023F")]
	public class TestScript : MonoBehaviour
	{
		[Token(Token = "0x4001057")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "InspectorNoteAttribute", RVA = "0x6ABAC4", Offset = "0x6ABAC4")]
		public SoundFXRef testSound1;

		[Token(Token = "0x4001058")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SoundFXRef testSound2;

		[Token(Token = "0x60012F6")]
		[Address(RVA = "0x11F0D10", Offset = "0x11F0D10", VA = "0x11F0D10")]
		private void Start()
		{
		}

		[Token(Token = "0x60012F7")]
		[Address(RVA = "0x11F0D14", Offset = "0x11F0D14", VA = "0x11F0D14")]
		private void Update()
		{
		}

		[Token(Token = "0x60012F8")]
		[Address(RVA = "0x11F0DD4", Offset = "0x11F0DD4", VA = "0x11F0DD4")]
		public TestScript()
		{
		}
	}
	[Token(Token = "0x2000240")]
	public class AmbienceEmitter : MonoBehaviour
	{
		[Token(Token = "0x4001059")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public SoundFXRef[] ambientSounds;

		[Token(Token = "0x400105A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool autoActivate;

		[Token(Token = "0x400105B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6ABB10", Offset = "0x6ABB10")]
		public bool autoRetrigger;

		[Token(Token = "0x400105C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "MinMaxAttribute", RVA = "0x6ABB48", Offset = "0x6ABB48")]
		public Vector2 randomRetriggerDelaySecs;

		[Token(Token = "0x400105D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6ABB6C", Offset = "0x6ABB6C")]
		public Transform[] playPositions;

		[Token(Token = "0x400105E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool activated;

		[Token(Token = "0x400105F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private int playingIdx;

		[Token(Token = "0x4001060")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float nextPlayTime;

		[Token(Token = "0x4001061")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private float fadeTime;

		[Token(Token = "0x4001062")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private int lastPosIdx;

		[Token(Token = "0x60012F9")]
		[Address(RVA = "0x11E8054", Offset = "0x11E8054", VA = "0x11E8054")]
		private void Awake()
		{
		}

		[Token(Token = "0x60012FA")]
		[Address(RVA = "0x11E81D8", Offset = "0x11E81D8", VA = "0x11E81D8")]
		private void Update()
		{
		}

		[Token(Token = "0x60012FB")]
		[Address(RVA = "0x11E83B4", Offset = "0x11E83B4", VA = "0x11E83B4")]
		public void OnTriggerEnter(Collider col)
		{
		}

		[Token(Token = "0x60012FC")]
		[Address(RVA = "0x11E8238", Offset = "0x11E8238", VA = "0x11E8238")]
		public void Play()
		{
		}

		[Token(Token = "0x60012FD")]
		[Address(RVA = "0x11E84F4", Offset = "0x11E84F4", VA = "0x11E84F4")]
		public void EnableEmitter(bool enable)
		{
		}

		[Token(Token = "0x60012FE")]
		[Address(RVA = "0x11E8668", Offset = "0x11E8668", VA = "0x11E8668")]
		public AmbienceEmitter()
		{
		}
	}
	[Token(Token = "0x2000241")]
	public enum PreloadSounds
	{
		[Token(Token = "0x4001064")]
		Default,
		[Token(Token = "0x4001065")]
		Preload,
		[Token(Token = "0x4001066")]
		ManualPreload
	}
	[Token(Token = "0x2000242")]
	public enum Fade
	{
		[Token(Token = "0x4001068")]
		In,
		[Token(Token = "0x4001069")]
		Out
	}
	[Serializable]
	[Token(Token = "0x2000243")]
	public class SoundGroup
	{
		[Token(Token = "0x400106A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string name;

		[Token(Token = "0x400106B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public SoundFX[] soundList;

		[Token(Token = "0x400106C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AudioMixerGroup mixerGroup;

		[Token(Token = "0x400106D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x6ABBA4", Offset = "0x6ABBA4")]
		public int maxPlayingSounds;

		[Token(Token = "0x400106E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public PreloadSounds preloadAudio;

		[Token(Token = "0x400106F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float volumeOverride;

		[Token(Token = "0x4001070")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[HideInInspector]
		public int playingSoundCount;

		[Token(Token = "0x60012FF")]
		[Address(RVA = "0x11F0BF0", Offset = "0x11F0BF0", VA = "0x11F0BF0")]
		public SoundGroup(string name)
		{
		}

		[Token(Token = "0x6001300")]
		[Address(RVA = "0x11F0C84", Offset = "0x11F0C84", VA = "0x11F0C84")]
		public SoundGroup()
		{
		}

		[Token(Token = "0x6001301")]
		[Address(RVA = "0x11EF65C", Offset = "0x11EF65C", VA = "0x11EF65C")]
		public void IncrementPlayCount()
		{
		}

		[Token(Token = "0x6001302")]
		[Address(RVA = "0x11EF79C", Offset = "0x11EF79C", VA = "0x11EF79C")]
		public void DecrementPlayCount()
		{
		}

		[Token(Token = "0x6001303")]
		[Address(RVA = "0x11F0254", Offset = "0x11F0254", VA = "0x11F0254")]
		public bool CanPlaySound()
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000244")]
	public class AudioManager : MonoBehaviour
	{
		[Token(Token = "0x2000413")]
		public enum Fade
		{
			[Token(Token = "0x400194B")]
			In,
			[Token(Token = "0x400194C")]
			Out
		}

		[Token(Token = "0x2000414")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6A86CC", Offset = "0x6A86CC")]
		private sealed class <>c__DisplayClass75_0
		{
			[Token(Token = "0x400194D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public SoundPriority priority;

			[Token(Token = "0x60018CA")]
			[Address(RVA = "0x11EC77C", Offset = "0x11EC77C", VA = "0x11EC77C")]
			public <>c__DisplayClass75_0()
			{
			}

			[Token(Token = "0x60018CB")]
			[Address(RVA = "0x11EF118", Offset = "0x11EF118", VA = "0x11EF118")]
			internal bool <FindFreeEmitter>b__0(SoundEmitter item)
			{
				return default(bool);
			}
		}

		[Serializable]
		[Token(Token = "0x2000415")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6A86DC", Offset = "0x6A86DC")]
		private sealed class <>c
		{
			[Token(Token = "0x400194E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x400194F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Predicate<SoundEmitter> <>9__75_1;

			[Token(Token = "0x60018CD")]
			[Address(RVA = "0x11EF080", Offset = "0x11EF080", VA = "0x11EF080")]
			public <>c()
			{
			}

			[Token(Token = "0x60018CE")]
			[Address(RVA = "0x11EF088", Offset = "0x11EF088", VA = "0x11EF088")]
			internal bool <FindFreeEmitter>b__75_1(SoundEmitter item)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4001071")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6ABBD0", Offset = "0x6ABBD0")]
		public bool makePersistent;

		[Token(Token = "0x4001072")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6ABC08", Offset = "0x6ABC08")]
		public bool enableSpatializedAudio;

		[Token(Token = "0x4001073")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6ABC40", Offset = "0x6ABC40")]
		public bool enableSpatializedFastOverride;

		[Token(Token = "0x4001074")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6ABC78", Offset = "0x6ABC78")]
		public AudioMixer audioMixer;

		[Token(Token = "0x4001075")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6ABCB0", Offset = "0x6ABCB0")]
		public AudioMixerGroup defaultMixerGroup;

		[Token(Token = "0x4001076")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6ABCE8", Offset = "0x6ABCE8")]
		public AudioMixerGroup reservedMixerGroup;

		[Token(Token = "0x4001077")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6ABD20", Offset = "0x6ABD20")]
		public AudioMixerGroup voiceChatMixerGroup;

		[Token(Token = "0x4001078")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6ABD58", Offset = "0x6ABD58")]
		public bool verboseLogging;

		[Token(Token = "0x4001079")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6ABD90", Offset = "0x6ABD90")]
		public int maxSoundEmitters;

		[Token(Token = "0x400107A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6ABDC8", Offset = "0x6ABDC8")]
		public float volumeSoundFX;

		[Token(Token = "0x400107B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6ABE00", Offset = "0x6ABE00")]
		public float soundFxFadeSecs;

		[Token(Token = "0x400107C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public float audioMinFallOffDistance;

		[Token(Token = "0x400107D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public float audioMaxFallOffDistance;

		[Token(Token = "0x400107E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public SoundGroup[] soundGroupings;

		[Token(Token = "0x400107F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Dictionary<string, SoundFX> soundFXCache;

		[Token(Token = "0x4001080")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static AudioManager theAudioManager;

		[Token(Token = "0x4001081")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static FastList<string> names;

		[Token(Token = "0x4001082")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static string[] defaultSound;

		[Token(Token = "0x4001083")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static SoundFX nullSound;

		[Token(Token = "0x4001084")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static bool hideWarnings;

		[Token(Token = "0x4001085")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private float audioMaxFallOffDistanceSqr;

		[Token(Token = "0x4001086")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private SoundEmitter[] soundEmitters;

		[Token(Token = "0x4001087")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private FastList<SoundEmitter> playingEmitters;

		[Token(Token = "0x4001088")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private FastList<SoundEmitter> nextFreeEmitters;

		[Token(Token = "0x4001089")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private MixerSnapshot currentSnapshot;

		[Token(Token = "0x400108A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static GameObject soundEmitterParent;

		[Token(Token = "0x400108B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private static Transform staticListenerPosition;

		[Token(Token = "0x400108C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private static bool showPlayingEmitterCount;

		[Token(Token = "0x400108D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
		private static bool forceShowEmitterCount;

		[Token(Token = "0x400108E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3A")]
		private static bool soundEnabled;

		[Token(Token = "0x400108F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private static readonly AnimationCurve defaultReverbZoneMix;

		[Token(Token = "0x17000310")]
		public static bool enableSpatialization
		{
			[Token(Token = "0x6001304")]
			[Address(RVA = "0x11E8728", Offset = "0x11E8728", VA = "0x11E8728")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000311")]
		public static AudioManager Instance
		{
			[Token(Token = "0x6001305")]
			[Address(RVA = "0x11E8808", Offset = "0x11E8808", VA = "0x11E8808")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000312")]
		public static float NearFallOff
		{
			[Token(Token = "0x6001306")]
			[Address(RVA = "0x11E8870", Offset = "0x11E8870", VA = "0x11E8870")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000313")]
		public static float FarFallOff
		{
			[Token(Token = "0x6001307")]
			[Address(RVA = "0x11E88E4", Offset = "0x11E88E4", VA = "0x11E88E4")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000314")]
		public static AudioMixerGroup EmitterGroup
		{
			[Token(Token = "0x6001308")]
			[Address(RVA = "0x11E8958", Offset = "0x11E8958", VA = "0x11E8958")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000315")]
		public static AudioMixerGroup ReservedGroup
		{
			[Token(Token = "0x6001309")]
			[Address(RVA = "0x11E89CC", Offset = "0x11E89CC", VA = "0x11E89CC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000316")]
		public static AudioMixerGroup VoipGroup
		{
			[Token(Token = "0x600130A")]
			[Address(RVA = "0x11E8A40", Offset = "0x11E8A40", VA = "0x11E8A40")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000317")]
		public static bool SoundEnabled
		{
			[Token(Token = "0x6001315")]
			[Address(RVA = "0x11EA790", Offset = "0x11EA790", VA = "0x11EA790")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x600130B")]
		[Address(RVA = "0x11E8AB4", Offset = "0x11E8AB4", VA = "0x11E8AB4")]
		private void Awake()
		{
		}

		[Token(Token = "0x600130C")]
		[Address(RVA = "0x11E8CDC", Offset = "0x11E8CDC", VA = "0x11E8CDC")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x600130D")]
		[Address(RVA = "0x11E8AB8", Offset = "0x11E8AB8", VA = "0x11E8AB8")]
		private void Init()
		{
		}

		[Token(Token = "0x600130E")]
		[Address(RVA = "0x11E9908", Offset = "0x11E9908", VA = "0x11E9908")]
		private void Update()
		{
		}

		[Token(Token = "0x600130F")]
		[Address(RVA = "0x11E8E34", Offset = "0x11E8E34", VA = "0x11E8E34")]
		private void RebuildSoundFXCache()
		{
		}

		[Token(Token = "0x6001310")]
		[Address(RVA = "0x11E9F2C", Offset = "0x11E9F2C", VA = "0x11E9F2C")]
		public static SoundFX FindSoundFX(string name, bool rebuildCache = false)
		{
			return null;
		}

		[Token(Token = "0x6001311")]
		[Address(RVA = "0x11EA0AC", Offset = "0x11EA0AC", VA = "0x11EA0AC")]
		private static bool FindAudioManager()
		{
			return default(bool);
		}

		[Token(Token = "0x6001312")]
		[Address(RVA = "0x11EA248", Offset = "0x11EA248", VA = "0x11EA248")]
		public static GameObject GetGameObject()
		{
			return null;
		}

		[Token(Token = "0x6001313")]
		[Address(RVA = "0x11EA348", Offset = "0x11EA348", VA = "0x11EA348")]
		public static string NameMinusGroup(string name)
		{
			return null;
		}

		[Token(Token = "0x6001314")]
		[Address(RVA = "0x11EA3D8", Offset = "0x11EA3D8", VA = "0x11EA3D8")]
		public static string[] GetSoundFXNames(string currentValue, out int currentIdx)
		{
			return null;
		}

		[Token(Token = "0x6001316")]
		[Address(RVA = "0x11E9280", Offset = "0x11E9280", VA = "0x11E9280")]
		private void InitializeSoundSystem()
		{
		}

		[Token(Token = "0x6001317")]
		[Address(RVA = "0x11E990C", Offset = "0x11E990C", VA = "0x11E990C")]
		private void UpdateFreeEmitters()
		{
		}

		[Token(Token = "0x6001318")]
		[Address(RVA = "0x11EAA10", Offset = "0x11EAA10", VA = "0x11EAA10")]
		private string Fmt(int count)
		{
			return null;
		}

		[Token(Token = "0x6001319")]
		[Address(RVA = "0x11EAB14", Offset = "0x11EAB14", VA = "0x11EAB14")]
		private string FmtFree(int count)
		{
			return null;
		}

		[Token(Token = "0x600131A")]
		[Address(RVA = "0x11EAC1C", Offset = "0x11EAC1C", VA = "0x11EAC1C")]
		private void OnPreSceneLoad()
		{
		}

		[Token(Token = "0x600131B")]
		[Address(RVA = "0x11EA8D8", Offset = "0x11EA8D8", VA = "0x11EA8D8")]
		private void ResetFreeEmitters()
		{
		}

		[Token(Token = "0x600131C")]
		[Address(RVA = "0x11EAD88", Offset = "0x11EAD88", VA = "0x11EAD88")]
		public static void FadeOutSoundChannel(int channel, float delaySecs, float fadeTime)
		{
		}

		[Token(Token = "0x600131D")]
		[Address(RVA = "0x11EAEDC", Offset = "0x11EAEDC", VA = "0x11EAEDC")]
		public static bool StopSound(int idx, bool fadeOut = true, bool stopReserved = false)
		{
			return default(bool);
		}

		[Token(Token = "0x600131E")]
		[Address(RVA = "0x11EB08C", Offset = "0x11EB08C", VA = "0x11EB08C")]
		public static void FadeInSound(int idx, float fadeTime, float volume)
		{
		}

		[Token(Token = "0x600131F")]
		[Address(RVA = "0x11E8444", Offset = "0x11E8444", VA = "0x11E8444")]
		public static void FadeInSound(int idx, float fadeTime)
		{
		}

		[Token(Token = "0x6001320")]
		[Address(RVA = "0x11E85B8", Offset = "0x11E85B8", VA = "0x11E85B8")]
		public static void FadeOutSound(int idx, float fadeTime)
		{
		}

		[Token(Token = "0x6001321")]
		[Address(RVA = "0x11EB238", Offset = "0x11EB238", VA = "0x11EB238")]
		public static void StopAllSounds(bool fadeOut, bool stopReserved = false)
		{
		}

		[Token(Token = "0x6001322")]
		[Address(RVA = "0x11EB304", Offset = "0x11EB304", VA = "0x11EB304")]
		public void MuteAllSounds(bool mute, bool muteReserved = false)
		{
		}

		[Token(Token = "0x6001323")]
		[Address(RVA = "0x11EB398", Offset = "0x11EB398", VA = "0x11EB398")]
		public void UnMuteAllSounds(bool unmute, bool unmuteReserved = false)
		{
		}

		[Token(Token = "0x6001324")]
		[Address(RVA = "0x11EB45C", Offset = "0x11EB45C", VA = "0x11EB45C")]
		public static float GetEmitterEndTime(int idx)
		{
			return default(float);
		}

		[Token(Token = "0x6001325")]
		[Address(RVA = "0x11EB500", Offset = "0x11EB500", VA = "0x11EB500")]
		public static float SetEmitterTime(int idx, float time)
		{
			return default(float);
		}

		[Token(Token = "0x6001326")]
		[Address(RVA = "0x11EB5E0", Offset = "0x11EB5E0", VA = "0x11EB5E0")]
		public static int PlaySound(AudioClip clip, float volume, EmitterChannel src = EmitterChannel.Any, float delay = 0f, float pitchVariance = 1f, bool loop = false)
		{
			return default(int);
		}

		[Token(Token = "0x6001327")]
		[Address(RVA = "0x11EC0C4", Offset = "0x11EC0C4", VA = "0x11EC0C4")]
		private static int FindFreeEmitter(EmitterChannel src, SoundPriority priority)
		{
			return default(int);
		}

		[Token(Token = "0x6001328")]
		[Address(RVA = "0x11EC784", Offset = "0x11EC784", VA = "0x11EC784")]
		public static int PlaySound(SoundFX soundFX, EmitterChannel src = EmitterChannel.Any, float delay = 0f)
		{
			return default(int);
		}

		[Token(Token = "0x6001329")]
		[Address(RVA = "0x11EC964", Offset = "0x11EC964", VA = "0x11EC964")]
		public static int PlaySoundAt(Vector3 position, SoundFX soundFX, EmitterChannel src = EmitterChannel.Any, float delay = 0f, float volumeOverride = 1f, float pitchMultiplier = 1f)
		{
			return default(int);
		}

		[Token(Token = "0x600132A")]
		[Address(RVA = "0x11ED6A8", Offset = "0x11ED6A8", VA = "0x11ED6A8")]
		public static int PlayRandomSoundAt(Vector3 position, AudioClip[] clips, float volume, EmitterChannel src = EmitterChannel.Any, float delay = 0f, float pitch = 1f, bool loop = false)
		{
			return default(int);
		}

		[Token(Token = "0x600132B")]
		[Address(RVA = "0x11EB7E8", Offset = "0x11EB7E8", VA = "0x11EB7E8")]
		public static int PlaySoundAt(Vector3 position, AudioClip clip, float volume = 1f, EmitterChannel src = EmitterChannel.Any, float delay = 0f, float pitch = 1f, bool loop = false)
		{
			return default(int);
		}

		[Token(Token = "0x600132C")]
		[Address(RVA = "0x11ED7C8", Offset = "0x11ED7C8", VA = "0x11ED7C8")]
		public static void SetOnFinished(int emitterIdx, Action onFinished)
		{
		}

		[Token(Token = "0x600132D")]
		[Address(RVA = "0x11ED8AC", Offset = "0x11ED8AC", VA = "0x11ED8AC")]
		public static void SetOnFinished(int emitterIdx, Action<object> onFinished, object obj)
		{
		}

		[Token(Token = "0x600132E")]
		[Address(RVA = "0x11ED99C", Offset = "0x11ED99C", VA = "0x11ED99C")]
		public static void AttachSoundToParent(int idx, Transform parent)
		{
		}

		[Token(Token = "0x600132F")]
		[Address(RVA = "0x11EDD54", Offset = "0x11EDD54", VA = "0x11EDD54")]
		public static void DetachSoundFromParent(int idx)
		{
		}

		[Token(Token = "0x6001330")]
		[Address(RVA = "0x11EDF50", Offset = "0x11EDF50", VA = "0x11EDF50")]
		public static void DetachSoundsFromParent(SoundEmitter[] emitters, bool stopSounds = true)
		{
		}

		[Token(Token = "0x6001331")]
		[Address(RVA = "0x11EE06C", Offset = "0x11EE06C", VA = "0x11EE06C")]
		public static void SetEmitterMixerGroup(int idx, AudioMixerGroup mixerGroup)
		{
		}

		[Token(Token = "0x6001332")]
		[Address(RVA = "0x11EE234", Offset = "0x11EE234", VA = "0x11EE234")]
		public static MixerSnapshot GetActiveSnapshot()
		{
			return null;
		}

		[Token(Token = "0x6001333")]
		[Address(RVA = "0x11EE30C", Offset = "0x11EE30C", VA = "0x11EE30C")]
		public static void SetCurrentSnapshot(MixerSnapshot mixerSnapshot)
		{
		}

		[Token(Token = "0x6001334")]
		[Address(RVA = "0x11EE440", Offset = "0x11EE440", VA = "0x11EE440")]
		public static void BlendWithCurrentSnapshot(MixerSnapshot blendSnapshot, float weight, float blendTime = 0f)
		{
		}

		[Token(Token = "0x6001335")]
		[Address(RVA = "0x11EE82C", Offset = "0x11EE82C", VA = "0x11EE82C")]
		public AudioManager()
		{
		}
	}
	[Token(Token = "0x2000245")]
	public enum EmitterChannel
	{
		[Token(Token = "0x4001091")]
		None = -1,
		[Token(Token = "0x4001092")]
		Reserved,
		[Token(Token = "0x4001093")]
		Any
	}
	[Serializable]
	[Token(Token = "0x2000246")]
	public class MixerSnapshot
	{
		[Token(Token = "0x4001094")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public AudioMixerSnapshot snapshot;

		[Token(Token = "0x4001095")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float transitionTime;

		[Token(Token = "0x6001337")]
		[Address(RVA = "0x11EF214", Offset = "0x11EF214", VA = "0x11EF214")]
		public MixerSnapshot()
		{
		}
	}
	[Token(Token = "0x2000247")]
	public class MinMaxAttribute : PropertyAttribute
	{
		[Token(Token = "0x4001096")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float minDefaultVal;

		[Token(Token = "0x4001097")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float maxDefaultVal;

		[Token(Token = "0x4001098")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float min;

		[Token(Token = "0x4001099")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float max;

		[Token(Token = "0x6001338")]
		[Address(RVA = "0x11EF1B8", Offset = "0x11EF1B8", VA = "0x11EF1B8")]
		public MinMaxAttribute(float minDefaultVal, float maxDefaultVal, float min, float max)
		{
		}
	}
	[Token(Token = "0x2000248")]
	public class SoundEmitter : MonoBehaviour
	{
		[Token(Token = "0x2000416")]
		public enum FadeState
		{
			[Token(Token = "0x4001951")]
			Null,
			[Token(Token = "0x4001952")]
			FadingIn,
			[Token(Token = "0x4001953")]
			FadingOut,
			[Token(Token = "0x4001954")]
			Ducking
		}

		[Token(Token = "0x2000417")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6A86EC", Offset = "0x6A86EC")]
		private sealed class <DelayedSyncTo>d__57 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001955")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001956")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001957")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SoundEmitter <>4__this;

			[Token(Token = "0x4001958")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public SoundEmitter other;

			[Token(Token = "0x4001959")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public float fadeTime;

			[Token(Token = "0x400195A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			public float toVolume;

			[Token(Token = "0x1700042D")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60018D2")]
				[Address(RVA = "0x11EFC60", Offset = "0x11EFC60", VA = "0x11EFC60", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700042E")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60018D4")]
				[Address(RVA = "0x11EFCC8", Offset = "0x11EFCC8", VA = "0x11EFCC8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60018CF")]
			[Address(RVA = "0x11EF940", Offset = "0x11EF940", VA = "0x11EF940")]
			[DebuggerHidden]
			public <DelayedSyncTo>d__57(int <>1__state)
			{
			}

			[Token(Token = "0x60018D0")]
			[Address(RVA = "0x11EFB70", Offset = "0x11EFB70", VA = "0x11EFB70", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60018D1")]
			[Address(RVA = "0x11EFB74", Offset = "0x11EFB74", VA = "0x11EFB74", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60018D3")]
			[Address(RVA = "0x11EFC68", Offset = "0x11EFC68", VA = "0x11EFC68", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000418")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6A86FC", Offset = "0x6A86FC")]
		private sealed class <FadeSoundChannelTo>d__63 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400195B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400195C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400195D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SoundEmitter <>4__this;

			[Token(Token = "0x400195E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float toVolume;

			[Token(Token = "0x400195F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public float fadeTime;

			[Token(Token = "0x4001960")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <start>5__2;

			[Token(Token = "0x4001961")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private float <end>5__3;

			[Token(Token = "0x4001962")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private float <startTime>5__4;

			[Token(Token = "0x4001963")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private float <elapsedTime>5__5;

			[Token(Token = "0x1700042F")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60018D8")]
				[Address(RVA = "0x11F0114", Offset = "0x11F0114", VA = "0x11F0114", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000430")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60018DA")]
				[Address(RVA = "0x11F017C", Offset = "0x11F017C", VA = "0x11F017C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60018D5")]
			[Address(RVA = "0x11EFB00", Offset = "0x11EFB00", VA = "0x11EFB00")]
			[DebuggerHidden]
			public <FadeSoundChannelTo>d__63(int <>1__state)
			{
			}

			[Token(Token = "0x60018D6")]
			[Address(RVA = "0x11EFFA8", Offset = "0x11EFFA8", VA = "0x11EFFA8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60018D7")]
			[Address(RVA = "0x11EFFAC", Offset = "0x11EFFAC", VA = "0x11EFFAC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60018D9")]
			[Address(RVA = "0x11F011C", Offset = "0x11F011C", VA = "0x11F011C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000419")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6A870C", Offset = "0x6A870C")]
		private sealed class <FadeSoundChannel>d__64 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001964")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001965")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001966")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float delaySecs;

			[Token(Token = "0x4001967")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public Fade fadeType;

			[Token(Token = "0x4001968")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float defaultVolume;

			[Token(Token = "0x4001969")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public SoundEmitter <>4__this;

			[Token(Token = "0x400196A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public float fadeTime;

			[Token(Token = "0x400196B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private float <start>5__2;

			[Token(Token = "0x400196C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private float <end>5__3;

			[Token(Token = "0x400196D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			private bool <restartPlay>5__4;

			[Token(Token = "0x400196E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private float <startTime>5__5;

			[Token(Token = "0x400196F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
			private float <elapsedTime>5__6;

			[Token(Token = "0x17000431")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60018DE")]
				[Address(RVA = "0x11EFF38", Offset = "0x11EFF38", VA = "0x11EFF38", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000432")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60018E0")]
				[Address(RVA = "0x11EFFA0", Offset = "0x11EFFA0", VA = "0x11EFFA0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60018DB")]
			[Address(RVA = "0x11EFB2C", Offset = "0x11EFB2C", VA = "0x11EFB2C")]
			[DebuggerHidden]
			public <FadeSoundChannel>d__64(int <>1__state)
			{
			}

			[Token(Token = "0x60018DC")]
			[Address(RVA = "0x11EFCD0", Offset = "0x11EFCD0", VA = "0x11EFCD0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60018DD")]
			[Address(RVA = "0x11EFCD4", Offset = "0x11EFCD4", VA = "0x11EFCD4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60018DF")]
			[Address(RVA = "0x11EFF40", Offset = "0x11EFF40", VA = "0x11EFF40", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400109A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public EmitterChannel channel;

		[Token(Token = "0x400109B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public bool disableSpatialization;

		[Token(Token = "0x400109C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private FadeState state;

		[NonSerialized]
		[Token(Token = "0x400109D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[HideInInspector]
		public AudioSource audioSource;

		[NonSerialized]
		[Token(Token = "0x400109E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[HideInInspector]
		public SoundPriority priority;

		[NonSerialized]
		[Token(Token = "0x400109F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[HideInInspector]
		public ONSPAudioSource osp;

		[NonSerialized]
		[Token(Token = "0x40010A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[HideInInspector]
		public float endPlayTime;

		[Token(Token = "0x40010A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Transform lastParentTransform;

		[NonSerialized]
		[Token(Token = "0x40010A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[HideInInspector]
		public float defaultVolume;

		[NonSerialized]
		[Token(Token = "0x40010A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[HideInInspector]
		public Transform defaultParent;

		[NonSerialized]
		[Token(Token = "0x40010A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[HideInInspector]
		public int originalIdx;

		[NonSerialized]
		[Token(Token = "0x40010A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[HideInInspector]
		public Action onFinished;

		[NonSerialized]
		[Token(Token = "0x40010A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[HideInInspector]
		public Action<object> onFinishedObject;

		[NonSerialized]
		[Token(Token = "0x40010A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[HideInInspector]
		public object onFinishedParam;

		[NonSerialized]
		[Token(Token = "0x40010A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[HideInInspector]
		public SoundGroup playingSoundGroup;

		[Token(Token = "0x17000318")]
		public float volume
		{
			[Token(Token = "0x6001339")]
			[Address(RVA = "0x11ED68C", Offset = "0x11ED68C", VA = "0x11ED68C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600133A")]
			[Address(RVA = "0x11EF2B4", Offset = "0x11EF2B4", VA = "0x11EF2B4")]
			set
			{
			}
		}

		[Token(Token = "0x17000319")]
		public float pitch
		{
			[Token(Token = "0x600133B")]
			[Address(RVA = "0x11EF2D0", Offset = "0x11EF2D0", VA = "0x11EF2D0")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600133C")]
			[Address(RVA = "0x11EF2EC", Offset = "0x11EF2EC", VA = "0x11EF2EC")]
			set
			{
			}
		}

		[Token(Token = "0x1700031A")]
		public AudioClip clip
		{
			[Token(Token = "0x600133D")]
			[Address(RVA = "0x11EF308", Offset = "0x11EF308", VA = "0x11EF308")]
			get
			{
				return null;
			}
			[Token(Token = "0x600133E")]
			[Address(RVA = "0x11EF324", Offset = "0x11EF324", VA = "0x11EF324")]
			set
			{
			}
		}

		[Token(Token = "0x1700031B")]
		public float time
		{
			[Token(Token = "0x600133F")]
			[Address(RVA = "0x11EF340", Offset = "0x11EF340", VA = "0x11EF340")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001340")]
			[Address(RVA = "0x11EB5C4", Offset = "0x11EB5C4", VA = "0x11EB5C4")]
			set
			{
			}
		}

		[Token(Token = "0x1700031C")]
		public float length
		{
			[Token(Token = "0x6001341")]
			[Address(RVA = "0x11EF35C", Offset = "0x11EF35C", VA = "0x11EF35C")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700031D")]
		public bool loop
		{
			[Token(Token = "0x6001342")]
			[Address(RVA = "0x11EF414", Offset = "0x11EF414", VA = "0x11EF414")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001343")]
			[Address(RVA = "0x11EF430", Offset = "0x11EF430", VA = "0x11EF430")]
			set
			{
			}
		}

		[Token(Token = "0x1700031E")]
		public bool mute
		{
			[Token(Token = "0x6001344")]
			[Address(RVA = "0x11EF450", Offset = "0x11EF450", VA = "0x11EF450")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001345")]
			[Address(RVA = "0x11EF46C", Offset = "0x11EF46C", VA = "0x11EF46C")]
			set
			{
			}
		}

		[Token(Token = "0x1700031F")]
		public AudioVelocityUpdateMode velocityUpdateMode
		{
			[Token(Token = "0x6001346")]
			[Address(RVA = "0x11EF48C", Offset = "0x11EF48C", VA = "0x11EF48C")]
			get
			{
				return default(AudioVelocityUpdateMode);
			}
			[Token(Token = "0x6001347")]
			[Address(RVA = "0x11EF4A8", Offset = "0x11EF4A8", VA = "0x11EF4A8")]
			set
			{
			}
		}

		[Token(Token = "0x17000320")]
		public bool isPlaying
		{
			[Token(Token = "0x6001348")]
			[Address(RVA = "0x11EF4C4", Offset = "0x11EF4C4", VA = "0x11EF4C4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001349")]
		[Address(RVA = "0x11EF4E0", Offset = "0x11EF4E0", VA = "0x11EF4E0")]
		private void Awake()
		{
		}

		[Token(Token = "0x600134A")]
		[Address(RVA = "0x11ED678", Offset = "0x11ED678", VA = "0x11ED678")]
		public void SetPlayingSoundGroup(SoundGroup soundGroup)
		{
		}

		[Token(Token = "0x600134B")]
		[Address(RVA = "0x11EF6EC", Offset = "0x11EF6EC", VA = "0x11EF6EC")]
		public void SetOnFinished(Action onFinished)
		{
		}

		[Token(Token = "0x600134C")]
		[Address(RVA = "0x11ED994", Offset = "0x11ED994", VA = "0x11ED994")]
		public void SetOnFinished(Action<object> onFinished, object obj)
		{
		}

		[Token(Token = "0x600134D")]
		[Address(RVA = "0x11EF6F4", Offset = "0x11EF6F4", VA = "0x11EF6F4")]
		public void SetChannel(int _channel)
		{
		}

		[Token(Token = "0x600134E")]
		[Address(RVA = "0x11EF6FC", Offset = "0x11EF6FC", VA = "0x11EF6FC")]
		public void SetDefaultParent(Transform parent)
		{
		}

		[Token(Token = "0x600134F")]
		[Address(RVA = "0x11EE18C", Offset = "0x11EE18C", VA = "0x11EE18C")]
		public void SetAudioMixer(AudioMixerGroup _mixer)
		{
		}

		[Token(Token = "0x6001350")]
		[Address(RVA = "0x11EA9A4", Offset = "0x11EA9A4", VA = "0x11EA9A4")]
		public bool IsPlaying()
		{
			return default(bool);
		}

		[Token(Token = "0x6001351")]
		[Address(RVA = "0x11EF704", Offset = "0x11EF704", VA = "0x11EF704")]
		public void Play()
		{
		}

		[Token(Token = "0x6001352")]
		[Address(RVA = "0x11EF764", Offset = "0x11EF764", VA = "0x11EF764")]
		public void Pause()
		{
		}

		[Token(Token = "0x6001353")]
		[Address(RVA = "0x11EA7F8", Offset = "0x11EA7F8", VA = "0x11EA7F8")]
		public void Stop()
		{
		}

		[Token(Token = "0x6001354")]
		[Address(RVA = "0x11EF82C", Offset = "0x11EF82C", VA = "0x11EF82C")]
		private int GetSampleTime()
		{
			return default(int);
		}

		[Token(Token = "0x6001355")]
		[Address(RVA = "0x11EDC58", Offset = "0x11EDC58", VA = "0x11EDC58")]
		public void ParentTo(Transform parent)
		{
		}

		[Token(Token = "0x6001356")]
		[Address(RVA = "0x11EDE98", Offset = "0x11EDE98", VA = "0x11EDE98")]
		public void DetachFromParent()
		{
		}

		[Token(Token = "0x6001357")]
		[Address(RVA = "0x11EAD48", Offset = "0x11EAD48", VA = "0x11EAD48")]
		public void ResetParent(Transform parent)
		{
		}

		[Token(Token = "0x6001358")]
		[Address(RVA = "0x11EF884", Offset = "0x11EF884", VA = "0x11EF884")]
		public void SyncTo(SoundEmitter other, float fadeTime, float toVolume)
		{
		}

		[Token(Token = "0x6001359")]
		[Address(RVA = "0x11EF8B0", Offset = "0x11EF8B0", VA = "0x11EF8B0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6B23F4", Offset = "0x6B23F4")]
		private IEnumerator DelayedSyncTo(SoundEmitter other, float fadeTime, float toVolume)
		{
			return null;
		}

		[Token(Token = "0x600135A")]
		[Address(RVA = "0x11EF96C", Offset = "0x11EF96C", VA = "0x11EF96C")]
		public void FadeTo(float fadeTime, float toVolume)
		{
		}

		[Token(Token = "0x600135B")]
		[Address(RVA = "0x11EB144", Offset = "0x11EB144", VA = "0x11EB144")]
		public void FadeIn(float fadeTime, float defaultVolume)
		{
		}

		[Token(Token = "0x600135C")]
		[Address(RVA = "0x11EB1C0", Offset = "0x11EB1C0", VA = "0x11EB1C0")]
		public void FadeIn(float fadeTime)
		{
		}

		[Token(Token = "0x600135D")]
		[Address(RVA = "0x11EAFF4", Offset = "0x11EAFF4", VA = "0x11EAFF4")]
		public void FadeOut(float fadeTime)
		{
		}

		[Token(Token = "0x600135E")]
		[Address(RVA = "0x11EAE40", Offset = "0x11EAE40", VA = "0x11EAE40")]
		public void FadeOutDelayed(float delayedSecs, float fadeTime)
		{
		}

		[Token(Token = "0x600135F")]
		[Address(RVA = "0x11EF9D4", Offset = "0x11EF9D4", VA = "0x11EF9D4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6B2458", Offset = "0x6B2458")]
		private IEnumerator FadeSoundChannelTo(float fadeTime, float toVolume)
		{
			return null;
		}

		[Token(Token = "0x6001360")]
		[Address(RVA = "0x11EFA58", Offset = "0x11EFA58", VA = "0x11EFA58")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6B24BC", Offset = "0x6B24BC")]
		private IEnumerator FadeSoundChannel(float delaySecs, float fadeTime, Fade fadeType, float defaultVolume)
		{
			return null;
		}

		[Token(Token = "0x6001361")]
		[Address(RVA = "0x11EFB58", Offset = "0x11EFB58", VA = "0x11EFB58")]
		public SoundEmitter()
		{
		}
	}
	[Token(Token = "0x2000249")]
	public enum SoundFXNext
	{
		[Token(Token = "0x40010AA")]
		Random,
		[Token(Token = "0x40010AB")]
		Sequential
	}
	[Token(Token = "0x200024A")]
	public enum FreqHint
	{
		[Token(Token = "0x40010AD")]
		None,
		[Token(Token = "0x40010AE")]
		Wide,
		[Token(Token = "0x40010AF")]
		Narrow
	}
	[Token(Token = "0x200024B")]
	public enum SoundPriority
	{
		[Token(Token = "0x40010B1")]
		VeryLow = -2,
		[Token(Token = "0x40010B2")]
		Low,
		[Token(Token = "0x40010B3")]
		Default,
		[Token(Token = "0x40010B4")]
		High,
		[Token(Token = "0x40010B5")]
		VeryHigh
	}
	[Serializable]
	[Token(Token = "0x200024C")]
	public class OSPProps
	{
		[Token(Token = "0x40010B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6ABEE8", Offset = "0x6ABEE8")]
		public bool enableSpatialization;

		[Token(Token = "0x40010B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6ABF20", Offset = "0x6ABF20")]
		public bool useFastOverride;

		[Token(Token = "0x40010B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6ABF58", Offset = "0x6ABF58")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x6ABF58", Offset = "0x6ABF58")]
		public float gain;

		[Token(Token = "0x40010B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6ABFAC", Offset = "0x6ABFAC")]
		public bool enableInvSquare;

		[Token(Token = "0x40010BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6ABFE4", Offset = "0x6ABFE4")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x6ABFE4", Offset = "0x6ABFE4")]
		public float volumetric;

		[Token(Token = "0x40010BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6AC03C", Offset = "0x6AC03C")]
		[AttributeAttribute(Name = "MinMaxAttribute", RVA = "0x6AC03C", Offset = "0x6AC03C")]
		public Vector2 invSquareFalloff;

		[Token(Token = "0x6001362")]
		[Address(RVA = "0x11EF224", Offset = "0x11EF224", VA = "0x11EF224")]
		public OSPProps()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200024D")]
	public class SoundFX
	{
		[Token(Token = "0x40010BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6AC09C", Offset = "0x6AC09C")]
		public string name;

		[Token(Token = "0x40010BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6AC0D4", Offset = "0x6AC0D4")]
		public SoundFXNext playback;

		[Token(Token = "0x40010BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6AC10C", Offset = "0x6AC10C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x6AC10C", Offset = "0x6AC10C")]
		public float volume;

		[Token(Token = "0x40010BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6AC160", Offset = "0x6AC160")]
		[AttributeAttribute(Name = "MinMaxAttribute", RVA = "0x6AC160", Offset = "0x6AC160")]
		public Vector2 pitchVariance;

		[Token(Token = "0x40010C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6AC1BC", Offset = "0x6AC1BC")]
		[AttributeAttribute(Name = "MinMaxAttribute", RVA = "0x6AC1BC", Offset = "0x6AC1BC")]
		public Vector2 falloffDistance;

		[Token(Token = "0x40010C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6AC21C", Offset = "0x6AC21C")]
		public AudioRolloffMode falloffCurve;

		[Token(Token = "0x40010C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6AC254", Offset = "0x6AC254")]
		public AnimationCurve volumeFalloffCurve;

		[Token(Token = "0x40010C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6AC28C", Offset = "0x6AC28C")]
		public AnimationCurve reverbZoneMix;

		[Token(Token = "0x40010C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6AC2C4", Offset = "0x6AC2C4")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x6AC2C4", Offset = "0x6AC2C4")]
		public float spread;

		[Token(Token = "0x40010C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6AC31C", Offset = "0x6AC31C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x6AC31C", Offset = "0x6AC31C")]
		public float pctChanceToPlay;

		[Token(Token = "0x40010C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6AC370", Offset = "0x6AC370")]
		public SoundPriority priority;

		[Token(Token = "0x40010C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6AC3A8", Offset = "0x6AC3A8")]
		[AttributeAttribute(Name = "MinMaxAttribute", RVA = "0x6AC3A8", Offset = "0x6AC3A8")]
		public Vector2 delay;

		[Token(Token = "0x40010C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6AC404", Offset = "0x6AC404")]
		public bool looping;

		[Token(Token = "0x40010C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public OSPProps ospProps;

		[Token(Token = "0x40010CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6AC43C", Offset = "0x6AC43C")]
		public AudioClip[] soundClips;

		[Token(Token = "0x40010CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public bool visibilityToggle;

		[NonSerialized]
		[Token(Token = "0x40010CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private SoundGroup soundGroup;

		[Token(Token = "0x40010CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private int lastIdx;

		[Token(Token = "0x40010CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private int playingIdx;

		[Token(Token = "0x17000321")]
		public int Length
		{
			[Token(Token = "0x6001364")]
			[Address(RVA = "0x11F0184", Offset = "0x11F0184", VA = "0x11F0184")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000322")]
		public bool IsValid
		{
			[Token(Token = "0x6001365")]
			[Address(RVA = "0x11F01A0", Offset = "0x11F01A0", VA = "0x11F01A0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000323")]
		public SoundGroup Group
		{
			[Token(Token = "0x6001366")]
			[Address(RVA = "0x11F0244", Offset = "0x11F0244", VA = "0x11F0244")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001367")]
			[Address(RVA = "0x11F024C", Offset = "0x11F024C", VA = "0x11F024C")]
			set
			{
			}
		}

		[Token(Token = "0x17000324")]
		public float MaxFalloffDistSquared
		{
			[Token(Token = "0x6001368")]
			[Address(RVA = "0x11ED580", Offset = "0x11ED580", VA = "0x11ED580")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000325")]
		public float GroupVolumeOverride
		{
			[Token(Token = "0x6001369")]
			[Address(RVA = "0x11ED5B4", Offset = "0x11ED5B4", VA = "0x11ED5B4")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6001363")]
		[Address(RVA = "0x11EEB34", Offset = "0x11EEB34", VA = "0x11EEB34")]
		public SoundFX()
		{
		}

		[Token(Token = "0x600136A")]
		[Address(RVA = "0x11ED4B0", Offset = "0x11ED4B0", VA = "0x11ED4B0")]
		public AudioClip GetClip()
		{
			return null;
		}

		[Token(Token = "0x600136B")]
		[Address(RVA = "0x11ED5D8", Offset = "0x11ED5D8", VA = "0x11ED5D8")]
		public AudioMixerGroup GetMixerGroup(AudioMixerGroup defaultMixerGroup)
		{
			return null;
		}

		[Token(Token = "0x600136C")]
		[Address(RVA = "0x11ED58C", Offset = "0x11ED58C", VA = "0x11ED58C")]
		public bool ReachedGroupPlayLimit()
		{
			return default(bool);
		}

		[Token(Token = "0x600136D")]
		[Address(RVA = "0x11F0274", Offset = "0x11F0274", VA = "0x11F0274")]
		public float GetClipLength(int idx)
		{
			return default(float);
		}

		[Token(Token = "0x600136E")]
		[Address(RVA = "0x11ED5CC", Offset = "0x11ED5CC", VA = "0x11ED5CC")]
		public float GetPitch()
		{
			return default(float);
		}

		[Token(Token = "0x600136F")]
		[Address(RVA = "0x11F0370", Offset = "0x11F0370", VA = "0x11F0370")]
		public int PlaySound(float delaySecs = 0f)
		{
			return default(int);
		}

		[Token(Token = "0x6001370")]
		[Address(RVA = "0x11F044C", Offset = "0x11F044C", VA = "0x11F044C")]
		public int PlaySoundAt(Vector3 pos, float delaySecs = 0f, float volumeOverride = 1f, float pitchMultiplier = 1f)
		{
			return default(int);
		}

		[Token(Token = "0x6001371")]
		[Address(RVA = "0x11F0560", Offset = "0x11F0560", VA = "0x11F0560")]
		public void SetOnFinished(Action onFinished)
		{
		}

		[Token(Token = "0x6001372")]
		[Address(RVA = "0x11F05EC", Offset = "0x11F05EC", VA = "0x11F05EC")]
		public void SetOnFinished(Action<object> onFinished, object obj)
		{
		}

		[Token(Token = "0x6001373")]
		[Address(RVA = "0x11F0680", Offset = "0x11F0680", VA = "0x11F0680")]
		public bool StopSound()
		{
			return default(bool);
		}

		[Token(Token = "0x6001374")]
		[Address(RVA = "0x11F070C", Offset = "0x11F070C", VA = "0x11F070C")]
		public void AttachToParent(Transform parent)
		{
		}

		[Token(Token = "0x6001375")]
		[Address(RVA = "0x11F0798", Offset = "0x11F0798", VA = "0x11F0798")]
		public void DetachFromParent()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200024E")]
	public class SoundFXRef
	{
		[Token(Token = "0x40010CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string soundFXName;

		[Token(Token = "0x40010D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool initialized;

		[Token(Token = "0x40010D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private SoundFX soundFXCached;

		[Token(Token = "0x17000326")]
		public SoundFX soundFX
		{
			[Token(Token = "0x6001376")]
			[Address(RVA = "0x11F0810", Offset = "0x11F0810", VA = "0x11F0810")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000327")]
		public string name
		{
			[Token(Token = "0x6001377")]
			[Address(RVA = "0x11F0904", Offset = "0x11F0904", VA = "0x11F0904")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001378")]
			[Address(RVA = "0x11F090C", Offset = "0x11F090C", VA = "0x11F090C")]
			set
			{
			}
		}

		[Token(Token = "0x17000328")]
		public int Length
		{
			[Token(Token = "0x600137A")]
			[Address(RVA = "0x11F0914", Offset = "0x11F0914", VA = "0x11F0914")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000329")]
		public bool IsValid
		{
			[Token(Token = "0x600137B")]
			[Address(RVA = "0x11F0958", Offset = "0x11F0958", VA = "0x11F0958")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001379")]
		[Address(RVA = "0x11F0840", Offset = "0x11F0840", VA = "0x11F0840")]
		private void Init()
		{
		}

		[Token(Token = "0x600137C")]
		[Address(RVA = "0x11F0990", Offset = "0x11F0990", VA = "0x11F0990")]
		public AudioClip GetClip()
		{
			return null;
		}

		[Token(Token = "0x600137D")]
		[Address(RVA = "0x11F09C8", Offset = "0x11F09C8", VA = "0x11F09C8")]
		public float GetClipLength(int idx)
		{
			return default(float);
		}

		[Token(Token = "0x600137E")]
		[Address(RVA = "0x11F0A08", Offset = "0x11F0A08", VA = "0x11F0A08")]
		public int PlaySound(float delaySecs = 0f)
		{
			return default(int);
		}

		[Token(Token = "0x600137F")]
		[Address(RVA = "0x11E83C4", Offset = "0x11E83C4", VA = "0x11E83C4")]
		public int PlaySoundAt(Vector3 pos, float delaySecs = 0f, float volume = 1f, float pitchMultiplier = 1f)
		{
			return default(int);
		}

		[Token(Token = "0x6001380")]
		[Address(RVA = "0x11F0A50", Offset = "0x11F0A50", VA = "0x11F0A50")]
		public void SetOnFinished(Action onFinished)
		{
		}

		[Token(Token = "0x6001381")]
		[Address(RVA = "0x11F0A90", Offset = "0x11F0A90", VA = "0x11F0A90")]
		public void SetOnFinished(Action<object> onFinished, object obj)
		{
		}

		[Token(Token = "0x6001382")]
		[Address(RVA = "0x11F0AE0", Offset = "0x11F0AE0", VA = "0x11F0AE0")]
		public bool StopSound()
		{
			return default(bool);
		}

		[Token(Token = "0x6001383")]
		[Address(RVA = "0x11F0B18", Offset = "0x11F0B18", VA = "0x11F0B18")]
		public void AttachToParent(Transform parent)
		{
		}

		[Token(Token = "0x6001384")]
		[Address(RVA = "0x11F0B58", Offset = "0x11F0B58", VA = "0x11F0B58")]
		public void DetachFromParent()
		{
		}

		[Token(Token = "0x6001385")]
		[Address(RVA = "0x11F0B90", Offset = "0x11F0B90", VA = "0x11F0B90")]
		public SoundFXRef()
		{
		}
	}
}
namespace UnityStandardAssets.Effects
{
	[Token(Token = "0x200024F")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x6A7B10", Offset = "0x6A7B10")]
	public class AfterburnerPhysicsForce : MonoBehaviour
	{
		[Token(Token = "0x40010D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float effectAngle;

		[Token(Token = "0x40010D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float effectWidth;

		[Token(Token = "0x40010D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float effectDistance;

		[Token(Token = "0x40010D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float force;

		[Token(Token = "0x40010D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Collider[] m_Cols;

		[Token(Token = "0x40010D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private SphereCollider m_Sphere;

		[Token(Token = "0x6001386")]
		[Address(RVA = "0x114DE58", Offset = "0x114DE58", VA = "0x114DE58")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001387")]
		[Address(RVA = "0x114DEF0", Offset = "0x114DEF0", VA = "0x114DEF0")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6001388")]
		[Address(RVA = "0x114E39C", Offset = "0x114E39C", VA = "0x114E39C")]
		private void OnDrawGizmosSelected()
		{
		}

		[Token(Token = "0x6001389")]
		[Address(RVA = "0x114E8E0", Offset = "0x114E8E0", VA = "0x114E8E0")]
		public AfterburnerPhysicsForce()
		{
		}
	}
	[Token(Token = "0x2000250")]
	public class ExplosionFireAndDebris : MonoBehaviour
	{
		[Token(Token = "0x200041A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6A871C", Offset = "0x6A871C")]
		private sealed class <Start>d__4 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001970")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001971")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001972")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ExplosionFireAndDebris <>4__this;

			[Token(Token = "0x4001973")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <multiplier>5__2;

			[Token(Token = "0x17000433")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60018E4")]
				[Address(RVA = "0x114F10C", Offset = "0x114F10C", VA = "0x114F10C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000434")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60018E6")]
				[Address(RVA = "0x114F174", Offset = "0x114F174", VA = "0x114F174", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60018E1")]
			[Address(RVA = "0x114E964", Offset = "0x114E964", VA = "0x114E964")]
			[DebuggerHidden]
			public <Start>d__4(int <>1__state)
			{
			}

			[Token(Token = "0x60018E2")]
			[Address(RVA = "0x114EB1C", Offset = "0x114EB1C", VA = "0x114EB1C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60018E3")]
			[Address(RVA = "0x114EB20", Offset = "0x114EB20", VA = "0x114EB20", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60018E5")]
			[Address(RVA = "0x114F114", Offset = "0x114F114", VA = "0x114F114", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40010D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform[] debrisPrefabs;

		[Token(Token = "0x40010D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform firePrefab;

		[Token(Token = "0x40010DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int numDebrisPieces;

		[Token(Token = "0x40010DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public int numFires;

		[Token(Token = "0x600138A")]
		[Address(RVA = "0x114E8F4", Offset = "0x114E8F4", VA = "0x114E8F4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6B2520", Offset = "0x6B2520")]
		private IEnumerator Start()
		{
			return null;
		}

		[Token(Token = "0x600138B")]
		[Address(RVA = "0x114E990", Offset = "0x114E990", VA = "0x114E990")]
		private void AddFire(Transform t, Vector3 pos, Vector3 normal)
		{
		}

		[Token(Token = "0x600138C")]
		[Address(RVA = "0x114EB14", Offset = "0x114EB14", VA = "0x114EB14")]
		public ExplosionFireAndDebris()
		{
		}
	}
	[Token(Token = "0x2000251")]
	public class ExplosionPhysicsForce : MonoBehaviour
	{
		[Token(Token = "0x200041B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6A872C", Offset = "0x6A872C")]
		private sealed class <Start>d__1 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001974")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001975")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001976")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ExplosionPhysicsForce <>4__this;

			[Token(Token = "0x17000435")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60018EA")]
				[Address(RVA = "0x114F530", Offset = "0x114F530", VA = "0x114F530", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000436")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60018EC")]
				[Address(RVA = "0x114F598", Offset = "0x114F598", VA = "0x114F598", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60018E7")]
			[Address(RVA = "0x114F1EC", Offset = "0x114F1EC", VA = "0x114F1EC")]
			[DebuggerHidden]
			public <Start>d__1(int <>1__state)
			{
			}

			[Token(Token = "0x60018E8")]
			[Address(RVA = "0x114F228", Offset = "0x114F228", VA = "0x114F228", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60018E9")]
			[Address(RVA = "0x114F22C", Offset = "0x114F22C", VA = "0x114F22C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60018EB")]
			[Address(RVA = "0x114F538", Offset = "0x114F538", VA = "0x114F538", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40010DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float explosionForce;

		[Token(Token = "0x600138D")]
		[Address(RVA = "0x114F17C", Offset = "0x114F17C", VA = "0x114F17C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6B2584", Offset = "0x6B2584")]
		private IEnumerator Start()
		{
			return null;
		}

		[Token(Token = "0x600138E")]
		[Address(RVA = "0x114F218", Offset = "0x114F218", VA = "0x114F218")]
		public ExplosionPhysicsForce()
		{
		}
	}
	[Token(Token = "0x2000252")]
	public class ExtinguishableParticleSystem : MonoBehaviour
	{
		[Token(Token = "0x40010DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float multiplier;

		[Token(Token = "0x40010DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private ParticleSystem[] m_Systems;

		[Token(Token = "0x600138F")]
		[Address(RVA = "0x114F5A0", Offset = "0x114F5A0", VA = "0x114F5A0")]
		private void Start()
		{
		}

		[Token(Token = "0x6001390")]
		[Address(RVA = "0x114F5F8", Offset = "0x114F5F8", VA = "0x114F5F8")]
		public void Extinguish()
		{
		}

		[Token(Token = "0x6001391")]
		[Address(RVA = "0x114F684", Offset = "0x114F684", VA = "0x114F684")]
		public ExtinguishableParticleSystem()
		{
		}
	}
	[Token(Token = "0x2000253")]
	public class FireLight : MonoBehaviour
	{
		[Token(Token = "0x40010DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private float m_Rnd;

		[Token(Token = "0x40010E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private bool m_Burning;

		[Token(Token = "0x40010E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Light m_Light;

		[Token(Token = "0x6001392")]
		[Address(RVA = "0x114F694", Offset = "0x114F694", VA = "0x114F694")]
		private void Start()
		{
		}

		[Token(Token = "0x6001393")]
		[Address(RVA = "0x114F704", Offset = "0x114F704", VA = "0x114F704")]
		private void Update()
		{
		}

		[Token(Token = "0x6001394")]
		[Address(RVA = "0x114F964", Offset = "0x114F964", VA = "0x114F964")]
		public void Extinguish()
		{
		}

		[Token(Token = "0x6001395")]
		[Address(RVA = "0x114F98C", Offset = "0x114F98C", VA = "0x114F98C")]
		public FireLight()
		{
		}
	}
	[Token(Token = "0x2000254")]
	public class Hose : MonoBehaviour
	{
		[Token(Token = "0x40010E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float maxPower;

		[Token(Token = "0x40010E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float minPower;

		[Token(Token = "0x40010E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float changeSpeed;

		[Token(Token = "0x40010E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public ParticleSystem[] hoseWaterSystems;

		[Token(Token = "0x40010E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Renderer systemRenderer;

		[Token(Token = "0x40010E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float m_Power;

		[Token(Token = "0x6001396")]
		[Address(RVA = "0x114F99C", Offset = "0x114F99C", VA = "0x114F99C")]
		private void Update()
		{
		}

		[Token(Token = "0x6001397")]
		[Address(RVA = "0x114FB60", Offset = "0x114FB60", VA = "0x114FB60")]
		public Hose()
		{
		}
	}
	[Token(Token = "0x2000255")]
	public class ParticleSystemMultiplier : MonoBehaviour
	{
		[Token(Token = "0x40010E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float multiplier;

		[Token(Token = "0x6001398")]
		[Address(RVA = "0x114FB7C", Offset = "0x114FB7C", VA = "0x114FB7C")]
		private void Start()
		{
		}

		[Token(Token = "0x6001399")]
		[Address(RVA = "0x114FD08", Offset = "0x114FD08", VA = "0x114FD08")]
		public ParticleSystemMultiplier()
		{
		}
	}
	[Token(Token = "0x2000256")]
	public class SmokeParticles : MonoBehaviour
	{
		[Token(Token = "0x40010E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AudioClip[] extinguishSounds;

		[Token(Token = "0x600139A")]
		[Address(RVA = "0x114FD18", Offset = "0x114FD18", VA = "0x114FD18")]
		private void Start()
		{
		}

		[Token(Token = "0x600139B")]
		[Address(RVA = "0x114FDD8", Offset = "0x114FDD8", VA = "0x114FDD8")]
		public SmokeParticles()
		{
		}
	}
	[Token(Token = "0x2000257")]
	public class WaterHoseParticles : MonoBehaviour
	{
		[Token(Token = "0x40010EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static float lastSoundTime;

		[Token(Token = "0x40010EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float force;

		[Token(Token = "0x40010EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private List<ParticleCollisionEvent> m_CollisionEvents;

		[Token(Token = "0x40010ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private ParticleSystem m_ParticleSystem;

		[Token(Token = "0x600139C")]
		[Address(RVA = "0x114FDE0", Offset = "0x114FDE0", VA = "0x114FDE0")]
		private void Start()
		{
		}

		[Token(Token = "0x600139D")]
		[Address(RVA = "0x114FE38", Offset = "0x114FE38", VA = "0x114FE38")]
		private void OnParticleCollision(GameObject other)
		{
		}

		[Token(Token = "0x600139E")]
		[Address(RVA = "0x11500C8", Offset = "0x11500C8", VA = "0x11500C8")]
		public WaterHoseParticles()
		{
		}
	}
}
namespace LowPolyWater
{
	[Token(Token = "0x2000258")]
	public class LowPolyWater : MonoBehaviour
	{
		[Token(Token = "0x40010EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float waveHeight;

		[Token(Token = "0x40010EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float waveFrequency;

		[Token(Token = "0x40010F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float waveLength;

		[Token(Token = "0x40010F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public Vector3 waveOriginPosition;

		[Token(Token = "0x40010F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private MeshFilter meshFilter;

		[Token(Token = "0x40010F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Mesh mesh;

		[Token(Token = "0x40010F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Vector3[] vertices;

		[Token(Token = "0x600139F")]
		[Address(RVA = "0x1098604", Offset = "0x1098604", VA = "0x1098604")]
		private void Awake()
		{
		}

		[Token(Token = "0x60013A0")]
		[Address(RVA = "0x109865C", Offset = "0x109865C", VA = "0x109865C")]
		private void Start()
		{
		}

		[Token(Token = "0x60013A1")]
		[Address(RVA = "0x1098664", Offset = "0x1098664", VA = "0x1098664")]
		private MeshFilter CreateMeshLowPoly(MeshFilter mf)
		{
			return null;
		}

		[Token(Token = "0x60013A2")]
		[Address(RVA = "0x10987F8", Offset = "0x10987F8", VA = "0x10987F8")]
		private void Update()
		{
		}

		[Token(Token = "0x60013A3")]
		[Address(RVA = "0x10987FC", Offset = "0x10987FC", VA = "0x10987FC")]
		private void GenerateWaves()
		{
		}

		[Token(Token = "0x60013A4")]
		[Address(RVA = "0x10989D8", Offset = "0x10989D8", VA = "0x10989D8")]
		public LowPolyWater()
		{
		}
	}
}
